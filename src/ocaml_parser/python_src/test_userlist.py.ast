Module([ImportFrom('UserList', [alias('UserList', None)], 0, lineno=3, col_offset=0), ImportFrom('test', [alias('test_support', None), alias('list_tests', None)], 0, lineno=4, col_offset=0), ClassDef('UserListTest', [Attribute(Name('list_tests', Load(), lineno=6, col_offset=19), 'CommonTest', Load(), lineno=6, col_offset=19)], [Assign([Name('type2test', Store(), lineno=7, col_offset=4)], Name('UserList', Load(), lineno=7, col_offset=16), lineno=7, col_offset=4), FunctionDef('test_getslice', arguments([Name('self', Param(), lineno=9, col_offset=22)], None, None, []), [Expr(Call(Attribute(Call(Name('super', Load(), lineno=10, col_offset=8), [Name('UserListTest', Load(), lineno=10, col_offset=14), Name('self', Load(), lineno=10, col_offset=28)], [], None, None, lineno=10, col_offset=8), 'test_getslice', Load(), lineno=10, col_offset=8), [], [], None, None, lineno=10, col_offset=8), lineno=10, col_offset=8), Assign([Name('l', Store(), lineno=11, col_offset=8)], List([Num(0, lineno=11, col_offset=13), Num(1, lineno=11, col_offset=16), Num(2, lineno=11, col_offset=19), Num(3, lineno=11, col_offset=22), Num(4, lineno=11, col_offset=25)], Load(), lineno=11, col_offset=12), lineno=11, col_offset=8), Assign([Name('u', Store(), lineno=12, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=12, col_offset=12), 'type2test', Load(), lineno=12, col_offset=12), [Name('l', Load(), lineno=12, col_offset=27)], [], None, None, lineno=12, col_offset=12), lineno=12, col_offset=8), For(Name('i', Store(), lineno=13, col_offset=12), Call(Name('range', Load(), lineno=13, col_offset=17), [Num(-3, lineno=13, col_offset=24), Num(6, lineno=13, col_offset=27)], [], None, None, lineno=13, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=14, col_offset=12), 'assertEqual', Load(), lineno=14, col_offset=12), [Subscript(Name('u', Load(), lineno=14, col_offset=29), Slice(None, Name('i', Load(), lineno=14, col_offset=32), None), Load(), lineno=14, col_offset=29), Subscript(Name('l', Load(), lineno=14, col_offset=36), Slice(None, Name('i', Load(), lineno=14, col_offset=39), None), Load(), lineno=14, col_offset=36)], [], None, None, lineno=14, col_offset=12), lineno=14, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=15, col_offset=12), 'assertEqual', Load(), lineno=15, col_offset=12), [Subscript(Name('u', Load(), lineno=15, col_offset=29), Slice(Name('i', Load(), lineno=15, col_offset=31), None, None), Load(), lineno=15, col_offset=29), Subscript(Name('l', Load(), lineno=15, col_offset=36), Slice(Name('i', Load(), lineno=15, col_offset=38), None, None), Load(), lineno=15, col_offset=36)], [], None, None, lineno=15, col_offset=12), lineno=15, col_offset=12), For(Name('j', Store(), lineno=16, col_offset=16), Call(Name('xrange', Load(), lineno=16, col_offset=21), [Num(-3, lineno=16, col_offset=29), Num(6, lineno=16, col_offset=32)], [], None, None, lineno=16, col_offset=21), [Expr(Call(Attribute(Name('self', Load(), lineno=17, col_offset=16), 'assertEqual', Load(), lineno=17, col_offset=16), [Subscript(Name('u', Load(), lineno=17, col_offset=33), Slice(Name('i', Load(), lineno=17, col_offset=35), Name('j', Load(), lineno=17, col_offset=37), None), Load(), lineno=17, col_offset=33), Subscript(Name('l', Load(), lineno=17, col_offset=41), Slice(Name('i', Load(), lineno=17, col_offset=43), Name('j', Load(), lineno=17, col_offset=45), None), Load(), lineno=17, col_offset=41)], [], None, None, lineno=17, col_offset=16), lineno=17, col_offset=16)], [], lineno=16, col_offset=12)], [], lineno=13, col_offset=8)], [], lineno=9, col_offset=4), FunctionDef('test_add_specials', arguments([Name('self', Param(), lineno=19, col_offset=26)], None, None, []), [Assign([Name('u', Store(), lineno=20, col_offset=8)], Call(Name('UserList', Load(), lineno=20, col_offset=12), [Str('spam', lineno=20, col_offset=21)], [], None, None, lineno=20, col_offset=12), lineno=20, col_offset=8), Assign([Name('u2', Store(), lineno=21, col_offset=8)], BinOp(Name('u', Load(), lineno=21, col_offset=13), Add(), Str('eggs', lineno=21, col_offset=17), lineno=21, col_offset=13), lineno=21, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=22, col_offset=8), 'assertEqual', Load(), lineno=22, col_offset=8), [Name('u2', Load(), lineno=22, col_offset=25), Call(Name('list', Load(), lineno=22, col_offset=29), [Str('spameggs', lineno=22, col_offset=34)], [], None, None, lineno=22, col_offset=29)], [], None, None, lineno=22, col_offset=8), lineno=22, col_offset=8)], [], lineno=19, col_offset=4), FunctionDef('test_radd_specials', arguments([Name('self', Param(), lineno=24, col_offset=27)], None, None, []), [Assign([Name('u', Store(), lineno=25, col_offset=8)], Call(Name('UserList', Load(), lineno=25, col_offset=12), [Str('eggs', lineno=25, col_offset=21)], [], None, None, lineno=25, col_offset=12), lineno=25, col_offset=8), Assign([Name('u2', Store(), lineno=26, col_offset=8)], BinOp(Str('spam', lineno=26, col_offset=13), Add(), Name('u', Load(), lineno=26, col_offset=22), lineno=26, col_offset=13), lineno=26, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=27, col_offset=8), 'assertEqual', Load(), lineno=27, col_offset=8), [Name('u2', Load(), lineno=27, col_offset=25), Call(Name('list', Load(), lineno=27, col_offset=29), [Str('spameggs', lineno=27, col_offset=34)], [], None, None, lineno=27, col_offset=29)], [], None, None, lineno=27, col_offset=8), lineno=27, col_offset=8), Assign([Name('u2', Store(), lineno=28, col_offset=8)], Call(Attribute(Name('u', Load(), lineno=28, col_offset=13), '__radd__', Load(), lineno=28, col_offset=13), [Call(Name('UserList', Load(), lineno=28, col_offset=24), [Str('spam', lineno=28, col_offset=33)], [], None, None, lineno=28, col_offset=24)], [], None, None, lineno=28, col_offset=13), lineno=28, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=29, col_offset=8), 'assertEqual', Load(), lineno=29, col_offset=8), [Name('u2', Load(), lineno=29, col_offset=25), Call(Name('list', Load(), lineno=29, col_offset=29), [Str('spameggs', lineno=29, col_offset=34)], [], None, None, lineno=29, col_offset=29)], [], None, None, lineno=29, col_offset=8), lineno=29, col_offset=8)], [], lineno=24, col_offset=4), FunctionDef('test_iadd', arguments([Name('self', Param(), lineno=31, col_offset=18)], None, None, []), [Expr(Call(Attribute(Call(Name('super', Load(), lineno=32, col_offset=8), [Name('UserListTest', Load(), lineno=32, col_offset=14), Name('self', Load(), lineno=32, col_offset=28)], [], None, None, lineno=32, col_offset=8), 'test_iadd', Load(), lineno=32, col_offset=8), [], [], None, None, lineno=32, col_offset=8), lineno=32, col_offset=8), Assign([Name('u', Store(), lineno=33, col_offset=8)], List([Num(0, lineno=33, col_offset=13), Num(1, lineno=33, col_offset=16)], Load(), lineno=33, col_offset=12), lineno=33, col_offset=8), AugAssign(Name('u', Store(), lineno=34, col_offset=8), Add(), Call(Name('UserList', Load(), lineno=34, col_offset=13), [List([Num(0, lineno=34, col_offset=23), Num(1, lineno=34, col_offset=26)], Load(), lineno=34, col_offset=22)], [], None, None, lineno=34, col_offset=13), lineno=34, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=35, col_offset=8), 'assertEqual', Load(), lineno=35, col_offset=8), [Name('u', Load(), lineno=35, col_offset=25), List([Num(0, lineno=35, col_offset=29), Num(1, lineno=35, col_offset=32), Num(0, lineno=35, col_offset=35), Num(1, lineno=35, col_offset=38)], Load(), lineno=35, col_offset=28)], [], None, None, lineno=35, col_offset=8), lineno=35, col_offset=8)], [], lineno=31, col_offset=4), FunctionDef('test_mixedcmp', arguments([Name('self', Param(), lineno=37, col_offset=22)], None, None, []), [Assign([Name('u', Store(), lineno=38, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=38, col_offset=12), 'type2test', Load(), lineno=38, col_offset=12), [List([Num(0, lineno=38, col_offset=28), Num(1, lineno=38, col_offset=31)], Load(), lineno=38, col_offset=27)], [], None, None, lineno=38, col_offset=12), lineno=38, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=39, col_offset=8), 'assertEqual', Load(), lineno=39, col_offset=8), [Name('u', Load(), lineno=39, col_offset=25), List([Num(0, lineno=39, col_offset=29), Num(1, lineno=39, col_offset=32)], Load(), lineno=39, col_offset=28)], [], None, None, lineno=39, col_offset=8), lineno=39, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=40, col_offset=8), 'assertNotEqual', Load(), lineno=40, col_offset=8), [Name('u', Load(), lineno=40, col_offset=28), List([Num(0, lineno=40, col_offset=32)], Load(), lineno=40, col_offset=31)], [], None, None, lineno=40, col_offset=8), lineno=40, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=41, col_offset=8), 'assertNotEqual', Load(), lineno=41, col_offset=8), [Name('u', Load(), lineno=41, col_offset=28), List([Num(0, lineno=41, col_offset=32), Num(2, lineno=41, col_offset=35)], Load(), lineno=41, col_offset=31)], [], None, None, lineno=41, col_offset=8), lineno=41, col_offset=8)], [], lineno=37, col_offset=4), FunctionDef('test_mixedadd', arguments([Name('self', Param(), lineno=43, col_offset=22)], None, None, []), [Assign([Name('u', Store(), lineno=44, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=44, col_offset=12), 'type2test', Load(), lineno=44, col_offset=12), [List([Num(0, lineno=44, col_offset=28), Num(1, lineno=44, col_offset=31)], Load(), lineno=44, col_offset=27)], [], None, None, lineno=44, col_offset=12), lineno=44, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=45, col_offset=8), 'assertEqual', Load(), lineno=45, col_offset=8), [BinOp(Name('u', Load(), lineno=45, col_offset=25), Add(), List([], Load(), lineno=45, col_offset=29), lineno=45, col_offset=25), Name('u', Load(), lineno=45, col_offset=33)], [], None, None, lineno=45, col_offset=8), lineno=45, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=46, col_offset=8), 'assertEqual', Load(), lineno=46, col_offset=8), [BinOp(Name('u', Load(), lineno=46, col_offset=25), Add(), List([Num(2, lineno=46, col_offset=30)], Load(), lineno=46, col_offset=29), lineno=46, col_offset=25), List([Num(0, lineno=46, col_offset=35), Num(1, lineno=46, col_offset=38), Num(2, lineno=46, col_offset=41)], Load(), lineno=46, col_offset=34)], [], None, None, lineno=46, col_offset=8), lineno=46, col_offset=8)], [], lineno=43, col_offset=4), FunctionDef('test_getitemoverwriteiter', arguments([Name('self', Param(), lineno=48, col_offset=34)], None, None, []), [ClassDef('T', [Attribute(Name('self', Load(), lineno=50, col_offset=16), 'type2test', Load(), lineno=50, col_offset=16)], [FunctionDef('__getitem__', arguments([Name('self', Param(), lineno=51, col_offset=28), Name('key', Param(), lineno=51, col_offset=34)], None, None, []), [Return(BinOp(Call(Name('str', Load(), lineno=52, col_offset=23), [Name('key', Load(), lineno=52, col_offset=27)], [], None, None, lineno=52, col_offset=23), Add(), Str('!!!', lineno=52, col_offset=34), lineno=52, col_offset=23), lineno=52, col_offset=16)], [], lineno=51, col_offset=12)], [], lineno=50, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=53, col_offset=8), 'assertEqual', Load(), lineno=53, col_offset=8), [Call(Attribute(Call(Name('iter', Load(), lineno=53, col_offset=25), [Call(Name('T', Load(), lineno=53, col_offset=30), [Tuple([Num(1, lineno=53, col_offset=33), Num(2, lineno=53, col_offset=35)], Load(), lineno=53, col_offset=33)], [], None, None, lineno=53, col_offset=30)], [], None, None, lineno=53, col_offset=25), 'next', Load(), lineno=53, col_offset=25), [], [], None, None, lineno=53, col_offset=25), Str('0!!!', lineno=53, col_offset=48)], [], None, None, lineno=53, col_offset=8), lineno=53, col_offset=8)], [], lineno=48, col_offset=4)], [], lineno=6, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [With(Call(Attribute(Name('test_support', Load(), lineno=56, col_offset=9), 'check_py3k_warnings', Load(), lineno=56, col_offset=9), [Tuple([Str('.+__(get|set|del)slice__ has been removed', lineno=57, col_offset=13), Name('DeprecationWarning', Load(), lineno=57, col_offset=58)], Load(), lineno=57, col_offset=13)], [], None, None, lineno=56, col_offset=9), None, [Expr(Call(Attribute(Name('test_support', Load(), lineno=58, col_offset=8), 'run_unittest', Load(), lineno=58, col_offset=8), [Name('UserListTest', Load(), lineno=58, col_offset=34)], [], None, None, lineno=58, col_offset=8), lineno=58, col_offset=8)], lineno=56, col_offset=9)], [], lineno=55, col_offset=0), If(Compare(Name('__name__', Load(), lineno=60, col_offset=3), [Eq()], [Str('__main__', lineno=60, col_offset=15)], lineno=60, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=61, col_offset=4), [], [], None, None, lineno=61, col_offset=4), lineno=61, col_offset=4)], [], lineno=60, col_offset=0)])
