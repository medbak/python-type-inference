Module([Expr(Str('Suite URL Suite: Standard suite for Uniform Resource Locators\nLevel 1, version 1\n\nGenerated from /Applications/Internet Explorer.app\nAETE/AEUT resource version 1/0, language 0, script 0\n', lineno=6, col_offset=-1), lineno=6, col_offset=-1), Import([alias('aetools', None)], lineno=8, col_offset=0), Import([alias('MacOS', None)], lineno=9, col_offset=0), Assign([Name('_code', Store(), lineno=11, col_offset=0)], Str('GURL', lineno=11, col_offset=8), lineno=11, col_offset=0), ClassDef('URL_Suite_Events', [], [Assign([Name('_argmap_GetURL', Store(), lineno=15, col_offset=4)], Dict([Str('to', lineno=16, col_offset=8)], [Str('dest', lineno=16, col_offset=15)], lineno=15, col_offset=21), lineno=15, col_offset=4), FunctionDef('GetURL', arguments([Name('self', Param(), lineno=19, col_offset=15), Name('_object', Param(), lineno=19, col_offset=21), Name('_attributes', Param(), lineno=19, col_offset=30)], None, '_arguments', [Dict([], [], lineno=19, col_offset=42)]), [Expr(Str('GetURL: Open the URL (and optionally save it to disk)\n        Required argument: URL to open\n        Keyword argument to: File into which to save resource located at URL.\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        ', lineno=24, col_offset=-1), lineno=24, col_offset=-1), Assign([Name('_code', Store(), lineno=25, col_offset=8)], Str('GURL', lineno=25, col_offset=16), lineno=25, col_offset=8), Assign([Name('_subcode', Store(), lineno=26, col_offset=8)], Str('GURL', lineno=26, col_offset=19), lineno=26, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=28, col_offset=8), 'keysubst', Load(), lineno=28, col_offset=8), [Name('_arguments', Load(), lineno=28, col_offset=25), Attribute(Name('self', Load(), lineno=28, col_offset=37), '_argmap_GetURL', Load(), lineno=28, col_offset=37)], [], None, None, lineno=28, col_offset=8), lineno=28, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=29, col_offset=8), Index(Str('----', lineno=29, col_offset=19)), Store(), lineno=29, col_offset=8)], Name('_object', Load(), lineno=29, col_offset=29), lineno=29, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=32, col_offset=8), Name('_arguments', Store(), lineno=32, col_offset=16), Name('_attributes', Store(), lineno=32, col_offset=28)], Store(), lineno=32, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=32, col_offset=42), 'send', Load(), lineno=32, col_offset=42), [Name('_code', Load(), lineno=32, col_offset=52), Name('_subcode', Load(), lineno=32, col_offset=59), Name('_arguments', Load(), lineno=33, col_offset=16), Name('_attributes', Load(), lineno=33, col_offset=28)], [], None, None, lineno=32, col_offset=42), lineno=32, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=34, col_offset=11), 'get', Load(), lineno=34, col_offset=11), [Str('errn', lineno=34, col_offset=26), Num(0, lineno=34, col_offset=34)], [], None, None, lineno=34, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=35, col_offset=18), 'Error', Load(), lineno=35, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=35, col_offset=33), 'decodeerror', Load(), lineno=35, col_offset=33), [Name('_arguments', Load(), lineno=35, col_offset=53)], [], None, None, lineno=35, col_offset=33), None, lineno=35, col_offset=12)], [], lineno=34, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=37, col_offset=11), 'has_key', Load(), lineno=37, col_offset=11), [Str('----', lineno=37, col_offset=30)], [], None, None, lineno=37, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=38, col_offset=19), Index(Str('----', lineno=38, col_offset=30)), Load(), lineno=38, col_offset=19), lineno=38, col_offset=12)], [], lineno=37, col_offset=8)], [], lineno=19, col_offset=4)], [], lineno=13, col_offset=0), Assign([Name('_classdeclarations', Store(), lineno=44, col_offset=0)], Dict([], [], lineno=44, col_offset=21), lineno=44, col_offset=0), Assign([Name('_propdeclarations', Store(), lineno=47, col_offset=0)], Dict([], [], lineno=47, col_offset=20), lineno=47, col_offset=0), Assign([Name('_compdeclarations', Store(), lineno=50, col_offset=0)], Dict([], [], lineno=50, col_offset=20), lineno=50, col_offset=0), Assign([Name('_enumdeclarations', Store(), lineno=53, col_offset=0)], Dict([], [], lineno=53, col_offset=20), lineno=53, col_offset=0)])
