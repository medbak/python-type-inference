Module([Expr(Str("Thread module emulating a subset of Java's threading model.", lineno=1, col_offset=0), lineno=1, col_offset=0), Import([alias('sys', '_sys')], lineno=3, col_offset=0), TryExcept([Import([alias('thread', None)], lineno=6, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=7, col_offset=7), None, [Delete([Subscript(Attribute(Name('_sys', Load(), lineno=8, col_offset=8), 'modules', Load(), lineno=8, col_offset=8), Index(Name('__name__', Load(), lineno=8, col_offset=21)), Del(), lineno=8, col_offset=8)], lineno=8, col_offset=4), Raise(None, None, None, lineno=9, col_offset=4)], lineno=7, col_offset=0)], [], lineno=5, col_offset=0), Import([alias('warnings', None)], lineno=11, col_offset=0), ImportFrom('time', [alias('time', '_time'), alias('sleep', '_sleep')], 0, lineno=13, col_offset=0), ImportFrom('traceback', [alias('format_exc', '_format_exc')], 0, lineno=14, col_offset=0), ImportFrom('collections', [alias('deque', None)], 0, lineno=15, col_offset=0), Assign([Name('__all__', Store(), lineno=29, col_offset=0)], List([Str('activeCount', lineno=29, col_offset=11), Str('active_count', lineno=29, col_offset=26), Str('Condition', lineno=29, col_offset=42), Str('currentThread', lineno=29, col_offset=55), Str('current_thread', lineno=30, col_offset=11), Str('enumerate', lineno=30, col_offset=29), Str('Event', lineno=30, col_offset=42), Str('Lock', lineno=31, col_offset=11), Str('RLock', lineno=31, col_offset=19), Str('Semaphore', lineno=31, col_offset=28), Str('BoundedSemaphore', lineno=31, col_offset=41), Str('Thread', lineno=31, col_offset=61), Str('Timer', lineno=32, col_offset=11), Str('setprofile', lineno=32, col_offset=20), Str('settrace', lineno=32, col_offset=34), Str('local', lineno=32, col_offset=46), Str('stack_size', lineno=32, col_offset=55)], Load(), lineno=29, col_offset=10), lineno=29, col_offset=0), Assign([Name('_start_new_thread', Store(), lineno=34, col_offset=0)], Attribute(Name('thread', Load(), lineno=34, col_offset=20), 'start_new_thread', Load(), lineno=34, col_offset=20), lineno=34, col_offset=0), Assign([Name('_allocate_lock', Store(), lineno=35, col_offset=0)], Attribute(Name('thread', Load(), lineno=35, col_offset=17), 'allocate_lock', Load(), lineno=35, col_offset=17), lineno=35, col_offset=0), Assign([Name('_get_ident', Store(), lineno=36, col_offset=0)], Attribute(Name('thread', Load(), lineno=36, col_offset=13), 'get_ident', Load(), lineno=36, col_offset=13), lineno=36, col_offset=0), Assign([Name('ThreadError', Store(), lineno=37, col_offset=0)], Attribute(Name('thread', Load(), lineno=37, col_offset=14), 'error', Load(), lineno=37, col_offset=14), lineno=37, col_offset=0), Delete([Name('thread', Del(), lineno=38, col_offset=4)], lineno=38, col_offset=0), Expr(Call(Attribute(Name('warnings', Load(), lineno=43, col_offset=0), 'filterwarnings', Load(), lineno=43, col_offset=0), [Str('ignore', lineno=43, col_offset=24)], [keyword('category', Name('DeprecationWarning', Load(), lineno=43, col_offset=43)), keyword('module', Str('threading', lineno=44, col_offset=31)), keyword('message', Str('sys.exc_clear', lineno=44, col_offset=52))], None, None, lineno=43, col_offset=0), lineno=43, col_offset=0), Assign([Name('_VERBOSE', Store(), lineno=52, col_offset=0)], Name('False', Load(), lineno=52, col_offset=11), lineno=52, col_offset=0), If(Name('__debug__', Load(), lineno=54, col_offset=3), [ClassDef('_Verbose', [Name('object', Load(), lineno=56, col_offset=19)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=58, col_offset=21), Name('verbose', Param(), lineno=58, col_offset=27)], None, None, [Name('None', Load(), lineno=58, col_offset=35)]), [If(Compare(Name('verbose', Load(), lineno=59, col_offset=15), [Is()], [Name('None', Load(), lineno=59, col_offset=26)], lineno=59, col_offset=15), [Assign([Name('verbose', Store(), lineno=60, col_offset=16)], Name('_VERBOSE', Load(), lineno=60, col_offset=26), lineno=60, col_offset=16)], [], lineno=59, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=61, col_offset=12), '__verbose', Store(), lineno=61, col_offset=12)], Name('verbose', Load(), lineno=61, col_offset=29), lineno=61, col_offset=12)], [], lineno=58, col_offset=8), FunctionDef('_note', arguments([Name('self', Param(), lineno=63, col_offset=18), Name('format', Param(), lineno=63, col_offset=24)], 'args', None, []), [If(Attribute(Name('self', Load(), lineno=64, col_offset=15), '__verbose', Load(), lineno=64, col_offset=15), [Assign([Name('format', Store(), lineno=65, col_offset=16)], BinOp(Name('format', Load(), lineno=65, col_offset=25), Mod(), Name('args', Load(), lineno=65, col_offset=34), lineno=65, col_offset=25), lineno=65, col_offset=16), Assign([Name('format', Store(), lineno=66, col_offset=16)], BinOp(Str('%s: %s\n', lineno=66, col_offset=25), Mod(), Tuple([Attribute(Call(Name('current_thread', Load(), lineno=67, col_offset=20), [], [], None, None, lineno=67, col_offset=20), 'name', Load(), lineno=67, col_offset=20), Name('format', Load(), lineno=67, col_offset=43)], Load(), lineno=67, col_offset=20), lineno=66, col_offset=25), lineno=66, col_offset=16), Expr(Call(Attribute(Attribute(Name('_sys', Load(), lineno=68, col_offset=16), 'stderr', Load(), lineno=68, col_offset=16), 'write', Load(), lineno=68, col_offset=16), [Name('format', Load(), lineno=68, col_offset=34)], [], None, None, lineno=68, col_offset=16), lineno=68, col_offset=16)], [], lineno=64, col_offset=12)], [], lineno=63, col_offset=8)], [], lineno=56, col_offset=4)], [ClassDef('_Verbose', [Name('object', Load(), lineno=72, col_offset=19)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=73, col_offset=21), Name('verbose', Param(), lineno=73, col_offset=27)], None, None, [Name('None', Load(), lineno=73, col_offset=35)]), [Pass( lineno=74, col_offset=12)], [], lineno=73, col_offset=8), FunctionDef('_note', arguments([Name('self', Param(), lineno=75, col_offset=18)], 'args', None, []), [Pass( lineno=76, col_offset=12)], [], lineno=75, col_offset=8)], [], lineno=72, col_offset=4)], lineno=54, col_offset=0), Assign([Name('_profile_hook', Store(), lineno=80, col_offset=0)], Name('None', Load(), lineno=80, col_offset=16), lineno=80, col_offset=0), Assign([Name('_trace_hook', Store(), lineno=81, col_offset=0)], Name('None', Load(), lineno=81, col_offset=14), lineno=81, col_offset=0), FunctionDef('setprofile', arguments([Name('func', Param(), lineno=83, col_offset=15)], None, None, []), [Global(['_profile_hook'], lineno=84, col_offset=4), Assign([Name('_profile_hook', Store(), lineno=85, col_offset=4)], Name('func', Load(), lineno=85, col_offset=20), lineno=85, col_offset=4)], [], lineno=83, col_offset=0), FunctionDef('settrace', arguments([Name('func', Param(), lineno=87, col_offset=13)], None, None, []), [Global(['_trace_hook'], lineno=88, col_offset=4), Assign([Name('_trace_hook', Store(), lineno=89, col_offset=4)], Name('func', Load(), lineno=89, col_offset=18), lineno=89, col_offset=4)], [], lineno=87, col_offset=0), Assign([Name('Lock', Store(), lineno=93, col_offset=0)], Name('_allocate_lock', Load(), lineno=93, col_offset=7), lineno=93, col_offset=0), FunctionDef('RLock', arguments([], 'args', 'kwargs', []), [Return(Call(Name('_RLock', Load(), lineno=96, col_offset=11), [], [], Name('args', Load(), lineno=96, col_offset=19), Name('kwargs', Load(), lineno=96, col_offset=27), lineno=96, col_offset=11), lineno=96, col_offset=4)], [], lineno=95, col_offset=0), ClassDef('_RLock', [Name('_Verbose', Load(), lineno=98, col_offset=13)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=100, col_offset=17), Name('verbose', Param(), lineno=100, col_offset=23)], None, None, [Name('None', Load(), lineno=100, col_offset=31)]), [Expr(Call(Attribute(Name('_Verbose', Load(), lineno=101, col_offset=8), '__init__', Load(), lineno=101, col_offset=8), [Name('self', Load(), lineno=101, col_offset=26), Name('verbose', Load(), lineno=101, col_offset=32)], [], None, None, lineno=101, col_offset=8), lineno=101, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=102, col_offset=8), '__block', Store(), lineno=102, col_offset=8)], Call(Name('_allocate_lock', Load(), lineno=102, col_offset=23), [], [], None, None, lineno=102, col_offset=23), lineno=102, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=103, col_offset=8), '__owner', Store(), lineno=103, col_offset=8)], Name('None', Load(), lineno=103, col_offset=23), lineno=103, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=104, col_offset=8), '__count', Store(), lineno=104, col_offset=8)], Num(0, lineno=104, col_offset=23), lineno=104, col_offset=8)], [], lineno=100, col_offset=4), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=106, col_offset=17)], None, None, []), [Assign([Name('owner', Store(), lineno=107, col_offset=8)], Attribute(Name('self', Load(), lineno=107, col_offset=16), '__owner', Load(), lineno=107, col_offset=16), lineno=107, col_offset=8), TryExcept([Assign([Name('owner', Store(), lineno=109, col_offset=12)], Attribute(Subscript(Name('_active', Load(), lineno=109, col_offset=20), Index(Name('owner', Load(), lineno=109, col_offset=28)), Load(), lineno=109, col_offset=20), 'name', Load(), lineno=109, col_offset=20), lineno=109, col_offset=12)], [ExceptHandler(Name('KeyError', Load(), lineno=110, col_offset=15), None, [Pass( lineno=111, col_offset=12)], lineno=110, col_offset=8)], [], lineno=108, col_offset=8), Return(BinOp(Str('<%s owner=%r count=%d>', lineno=112, col_offset=15), Mod(), Tuple([Attribute(Attribute(Name('self', Load(), lineno=113, col_offset=16), '__class__', Load(), lineno=113, col_offset=16), '__name__', Load(), lineno=113, col_offset=16), Name('owner', Load(), lineno=113, col_offset=41), Attribute(Name('self', Load(), lineno=113, col_offset=48), '__count', Load(), lineno=113, col_offset=48)], Load(), lineno=113, col_offset=16), lineno=112, col_offset=15), lineno=112, col_offset=8)], [], lineno=106, col_offset=4), FunctionDef('acquire', arguments([Name('self', Param(), lineno=115, col_offset=16), Name('blocking', Param(), lineno=115, col_offset=22)], None, None, [Num(1, lineno=115, col_offset=31)]), [Assign([Name('me', Store(), lineno=116, col_offset=8)], Call(Name('_get_ident', Load(), lineno=116, col_offset=13), [], [], None, None, lineno=116, col_offset=13), lineno=116, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=117, col_offset=11), '__owner', Load(), lineno=117, col_offset=11), [Eq()], [Name('me', Load(), lineno=117, col_offset=27)], lineno=117, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=118, col_offset=12), '__count', Store(), lineno=118, col_offset=12)], BinOp(Attribute(Name('self', Load(), lineno=118, col_offset=27), '__count', Load(), lineno=118, col_offset=27), Add(), Num(1, lineno=118, col_offset=42), lineno=118, col_offset=27), lineno=118, col_offset=12), If(Name('__debug__', Load(), lineno=119, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=120, col_offset=16), '_note', Load(), lineno=120, col_offset=16), [Str('%s.acquire(%s): recursive success', lineno=120, col_offset=27), Name('self', Load(), lineno=120, col_offset=64), Name('blocking', Load(), lineno=120, col_offset=70)], [], None, None, lineno=120, col_offset=16), lineno=120, col_offset=16)], [], lineno=119, col_offset=12), Return(Num(1, lineno=121, col_offset=19), lineno=121, col_offset=12)], [], lineno=117, col_offset=8), Assign([Name('rc', Store(), lineno=122, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=122, col_offset=13), '__block', Load(), lineno=122, col_offset=13), 'acquire', Load(), lineno=122, col_offset=13), [Name('blocking', Load(), lineno=122, col_offset=34)], [], None, None, lineno=122, col_offset=13), lineno=122, col_offset=8), If(Name('rc', Load(), lineno=123, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=124, col_offset=12), '__owner', Store(), lineno=124, col_offset=12)], Name('me', Load(), lineno=124, col_offset=27), lineno=124, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=125, col_offset=12), '__count', Store(), lineno=125, col_offset=12)], Num(1, lineno=125, col_offset=27), lineno=125, col_offset=12), If(Name('__debug__', Load(), lineno=126, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=127, col_offset=16), '_note', Load(), lineno=127, col_offset=16), [Str('%s.acquire(%s): initial success', lineno=127, col_offset=27), Name('self', Load(), lineno=127, col_offset=62), Name('blocking', Load(), lineno=127, col_offset=68)], [], None, None, lineno=127, col_offset=16), lineno=127, col_offset=16)], [], lineno=126, col_offset=12)], [If(Name('__debug__', Load(), lineno=129, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=130, col_offset=16), '_note', Load(), lineno=130, col_offset=16), [Str('%s.acquire(%s): failure', lineno=130, col_offset=27), Name('self', Load(), lineno=130, col_offset=54), Name('blocking', Load(), lineno=130, col_offset=60)], [], None, None, lineno=130, col_offset=16), lineno=130, col_offset=16)], [], lineno=129, col_offset=12)], lineno=123, col_offset=8), Return(Name('rc', Load(), lineno=131, col_offset=15), lineno=131, col_offset=8)], [], lineno=115, col_offset=4), Assign([Name('__enter__', Store(), lineno=133, col_offset=4)], Name('acquire', Load(), lineno=133, col_offset=16), lineno=133, col_offset=4), FunctionDef('release', arguments([Name('self', Param(), lineno=135, col_offset=16)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=136, col_offset=11), '__owner', Load(), lineno=136, col_offset=11), [NotEq()], [Call(Name('_get_ident', Load(), lineno=136, col_offset=27), [], [], None, None, lineno=136, col_offset=27)], lineno=136, col_offset=11), [Raise(Call(Name('RuntimeError', Load(), lineno=137, col_offset=18), [Str('cannot release un-acquired lock', lineno=137, col_offset=31)], [], None, None, lineno=137, col_offset=18), None, None, lineno=137, col_offset=12)], [], lineno=136, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=138, col_offset=8), '__count', Store(), lineno=138, col_offset=8), Name('count', Store(), lineno=138, col_offset=23)], BinOp(Attribute(Name('self', Load(), lineno=138, col_offset=31), '__count', Load(), lineno=138, col_offset=31), Sub(), Num(1, lineno=138, col_offset=46), lineno=138, col_offset=31), lineno=138, col_offset=8), If(UnaryOp(Not(), Name('count', Load(), lineno=139, col_offset=15), lineno=139, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=140, col_offset=12), '__owner', Store(), lineno=140, col_offset=12)], Name('None', Load(), lineno=140, col_offset=27), lineno=140, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=141, col_offset=12), '__block', Load(), lineno=141, col_offset=12), 'release', Load(), lineno=141, col_offset=12), [], [], None, None, lineno=141, col_offset=12), lineno=141, col_offset=12), If(Name('__debug__', Load(), lineno=142, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=143, col_offset=16), '_note', Load(), lineno=143, col_offset=16), [Str('%s.release(): final release', lineno=143, col_offset=27), Name('self', Load(), lineno=143, col_offset=58)], [], None, None, lineno=143, col_offset=16), lineno=143, col_offset=16)], [], lineno=142, col_offset=12)], [If(Name('__debug__', Load(), lineno=145, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=146, col_offset=16), '_note', Load(), lineno=146, col_offset=16), [Str('%s.release(): non-final release', lineno=146, col_offset=27), Name('self', Load(), lineno=146, col_offset=62)], [], None, None, lineno=146, col_offset=16), lineno=146, col_offset=16)], [], lineno=145, col_offset=12)], lineno=139, col_offset=8)], [], lineno=135, col_offset=4), FunctionDef('__exit__', arguments([Name('self', Param(), lineno=148, col_offset=17), Name('t', Param(), lineno=148, col_offset=23), Name('v', Param(), lineno=148, col_offset=26), Name('tb', Param(), lineno=148, col_offset=29)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=149, col_offset=8), 'release', Load(), lineno=149, col_offset=8), [], [], None, None, lineno=149, col_offset=8), lineno=149, col_offset=8)], [], lineno=148, col_offset=4), FunctionDef('_acquire_restore', arguments([Name('self', Param(), lineno=153, col_offset=25), Name('count_owner', Param(), lineno=153, col_offset=31)], None, None, []), [Assign([Tuple([Name('count', Store(), lineno=154, col_offset=8), Name('owner', Store(), lineno=154, col_offset=15)], Store(), lineno=154, col_offset=8)], Name('count_owner', Load(), lineno=154, col_offset=23), lineno=154, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=155, col_offset=8), '__block', Load(), lineno=155, col_offset=8), 'acquire', Load(), lineno=155, col_offset=8), [], [], None, None, lineno=155, col_offset=8), lineno=155, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=156, col_offset=8), '__count', Store(), lineno=156, col_offset=8)], Name('count', Load(), lineno=156, col_offset=23), lineno=156, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=157, col_offset=8), '__owner', Store(), lineno=157, col_offset=8)], Name('owner', Load(), lineno=157, col_offset=23), lineno=157, col_offset=8), If(Name('__debug__', Load(), lineno=158, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=159, col_offset=12), '_note', Load(), lineno=159, col_offset=12), [Str('%s._acquire_restore()', lineno=159, col_offset=23), Name('self', Load(), lineno=159, col_offset=48)], [], None, None, lineno=159, col_offset=12), lineno=159, col_offset=12)], [], lineno=158, col_offset=8)], [], lineno=153, col_offset=4), FunctionDef('_release_save', arguments([Name('self', Param(), lineno=161, col_offset=22)], None, None, []), [If(Name('__debug__', Load(), lineno=162, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=163, col_offset=12), '_note', Load(), lineno=163, col_offset=12), [Str('%s._release_save()', lineno=163, col_offset=23), Name('self', Load(), lineno=163, col_offset=45)], [], None, None, lineno=163, col_offset=12), lineno=163, col_offset=12)], [], lineno=162, col_offset=8), Assign([Name('count', Store(), lineno=164, col_offset=8)], Attribute(Name('self', Load(), lineno=164, col_offset=16), '__count', Load(), lineno=164, col_offset=16), lineno=164, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=165, col_offset=8), '__count', Store(), lineno=165, col_offset=8)], Num(0, lineno=165, col_offset=23), lineno=165, col_offset=8), Assign([Name('owner', Store(), lineno=166, col_offset=8)], Attribute(Name('self', Load(), lineno=166, col_offset=16), '__owner', Load(), lineno=166, col_offset=16), lineno=166, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=167, col_offset=8), '__owner', Store(), lineno=167, col_offset=8)], Name('None', Load(), lineno=167, col_offset=23), lineno=167, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=168, col_offset=8), '__block', Load(), lineno=168, col_offset=8), 'release', Load(), lineno=168, col_offset=8), [], [], None, None, lineno=168, col_offset=8), lineno=168, col_offset=8), Return(Tuple([Name('count', Load(), lineno=169, col_offset=16), Name('owner', Load(), lineno=169, col_offset=23)], Load(), lineno=169, col_offset=16), lineno=169, col_offset=8)], [], lineno=161, col_offset=4), FunctionDef('_is_owned', arguments([Name('self', Param(), lineno=171, col_offset=18)], None, None, []), [Return(Compare(Attribute(Name('self', Load(), lineno=172, col_offset=15), '__owner', Load(), lineno=172, col_offset=15), [Eq()], [Call(Name('_get_ident', Load(), lineno=172, col_offset=31), [], [], None, None, lineno=172, col_offset=31)], lineno=172, col_offset=15), lineno=172, col_offset=8)], [], lineno=171, col_offset=4)], [], lineno=98, col_offset=0), FunctionDef('Condition', arguments([], 'args', 'kwargs', []), [Return(Call(Name('_Condition', Load(), lineno=176, col_offset=11), [], [], Name('args', Load(), lineno=176, col_offset=23), Name('kwargs', Load(), lineno=176, col_offset=31), lineno=176, col_offset=11), lineno=176, col_offset=4)], [], lineno=175, col_offset=0), ClassDef('_Condition', [Name('_Verbose', Load(), lineno=178, col_offset=17)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=180, col_offset=17), Name('lock', Param(), lineno=180, col_offset=23), Name('verbose', Param(), lineno=180, col_offset=34)], None, None, [Name('None', Load(), lineno=180, col_offset=28), Name('None', Load(), lineno=180, col_offset=42)]), [Expr(Call(Attribute(Name('_Verbose', Load(), lineno=181, col_offset=8), '__init__', Load(), lineno=181, col_offset=8), [Name('self', Load(), lineno=181, col_offset=26), Name('verbose', Load(), lineno=181, col_offset=32)], [], None, None, lineno=181, col_offset=8), lineno=181, col_offset=8), If(Compare(Name('lock', Load(), lineno=182, col_offset=11), [Is()], [Name('None', Load(), lineno=182, col_offset=19)], lineno=182, col_offset=11), [Assign([Name('lock', Store(), lineno=183, col_offset=12)], Call(Name('RLock', Load(), lineno=183, col_offset=19), [], [], None, None, lineno=183, col_offset=19), lineno=183, col_offset=12)], [], lineno=182, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=184, col_offset=8), '__lock', Store(), lineno=184, col_offset=8)], Name('lock', Load(), lineno=184, col_offset=22), lineno=184, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=186, col_offset=8), 'acquire', Store(), lineno=186, col_offset=8)], Attribute(Name('lock', Load(), lineno=186, col_offset=23), 'acquire', Load(), lineno=186, col_offset=23), lineno=186, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=187, col_offset=8), 'release', Store(), lineno=187, col_offset=8)], Attribute(Name('lock', Load(), lineno=187, col_offset=23), 'release', Load(), lineno=187, col_offset=23), lineno=187, col_offset=8), TryExcept([Assign([Attribute(Name('self', Load(), lineno=192, col_offset=12), '_release_save', Store(), lineno=192, col_offset=12)], Attribute(Name('lock', Load(), lineno=192, col_offset=33), '_release_save', Load(), lineno=192, col_offset=33), lineno=192, col_offset=12)], [ExceptHandler(Name('AttributeError', Load(), lineno=193, col_offset=15), None, [Pass( lineno=194, col_offset=12)], lineno=193, col_offset=8)], [], lineno=191, col_offset=8), TryExcept([Assign([Attribute(Name('self', Load(), lineno=196, col_offset=12), '_acquire_restore', Store(), lineno=196, col_offset=12)], Attribute(Name('lock', Load(), lineno=196, col_offset=36), '_acquire_restore', Load(), lineno=196, col_offset=36), lineno=196, col_offset=12)], [ExceptHandler(Name('AttributeError', Load(), lineno=197, col_offset=15), None, [Pass( lineno=198, col_offset=12)], lineno=197, col_offset=8)], [], lineno=195, col_offset=8), TryExcept([Assign([Attribute(Name('self', Load(), lineno=200, col_offset=12), '_is_owned', Store(), lineno=200, col_offset=12)], Attribute(Name('lock', Load(), lineno=200, col_offset=29), '_is_owned', Load(), lineno=200, col_offset=29), lineno=200, col_offset=12)], [ExceptHandler(Name('AttributeError', Load(), lineno=201, col_offset=15), None, [Pass( lineno=202, col_offset=12)], lineno=201, col_offset=8)], [], lineno=199, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=203, col_offset=8), '__waiters', Store(), lineno=203, col_offset=8)], List([], Load(), lineno=203, col_offset=25), lineno=203, col_offset=8)], [], lineno=180, col_offset=4), FunctionDef('__enter__', arguments([Name('self', Param(), lineno=205, col_offset=18)], None, None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=206, col_offset=15), '__lock', Load(), lineno=206, col_offset=15), '__enter__', Load(), lineno=206, col_offset=15), [], [], None, None, lineno=206, col_offset=15), lineno=206, col_offset=8)], [], lineno=205, col_offset=4), FunctionDef('__exit__', arguments([Name('self', Param(), lineno=208, col_offset=17)], 'args', None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=209, col_offset=15), '__lock', Load(), lineno=209, col_offset=15), '__exit__', Load(), lineno=209, col_offset=15), [], [], Name('args', Load(), lineno=209, col_offset=37), None, lineno=209, col_offset=15), lineno=209, col_offset=8)], [], lineno=208, col_offset=4), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=211, col_offset=17)], None, None, []), [Return(BinOp(Str('<Condition(%s, %d)>', lineno=212, col_offset=15), Mod(), Tuple([Attribute(Name('self', Load(), lineno=212, col_offset=40), '__lock', Load(), lineno=212, col_offset=40), Call(Name('len', Load(), lineno=212, col_offset=53), [Attribute(Name('self', Load(), lineno=212, col_offset=57), '__waiters', Load(), lineno=212, col_offset=57)], [], None, None, lineno=212, col_offset=53)], Load(), lineno=212, col_offset=40), lineno=212, col_offset=15), lineno=212, col_offset=8)], [], lineno=211, col_offset=4), FunctionDef('_release_save', arguments([Name('self', Param(), lineno=214, col_offset=22)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=215, col_offset=8), '__lock', Load(), lineno=215, col_offset=8), 'release', Load(), lineno=215, col_offset=8), [], [], None, None, lineno=215, col_offset=8), lineno=215, col_offset=8)], [], lineno=214, col_offset=4), FunctionDef('_acquire_restore', arguments([Name('self', Param(), lineno=217, col_offset=25), Name('x', Param(), lineno=217, col_offset=31)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=218, col_offset=8), '__lock', Load(), lineno=218, col_offset=8), 'acquire', Load(), lineno=218, col_offset=8), [], [], None, None, lineno=218, col_offset=8), lineno=218, col_offset=8)], [], lineno=217, col_offset=4), FunctionDef('_is_owned', arguments([Name('self', Param(), lineno=220, col_offset=18)], None, None, []), [If(Call(Attribute(Attribute(Name('self', Load(), lineno=223, col_offset=11), '__lock', Load(), lineno=223, col_offset=11), 'acquire', Load(), lineno=223, col_offset=11), [Num(0, lineno=223, col_offset=31)], [], None, None, lineno=223, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=224, col_offset=12), '__lock', Load(), lineno=224, col_offset=12), 'release', Load(), lineno=224, col_offset=12), [], [], None, None, lineno=224, col_offset=12), lineno=224, col_offset=12), Return(Name('False', Load(), lineno=225, col_offset=19), lineno=225, col_offset=12)], [Return(Name('True', Load(), lineno=227, col_offset=19), lineno=227, col_offset=12)], lineno=223, col_offset=8)], [], lineno=220, col_offset=4), FunctionDef('wait', arguments([Name('self', Param(), lineno=229, col_offset=13), Name('timeout', Param(), lineno=229, col_offset=19)], None, None, [Name('None', Load(), lineno=229, col_offset=27)]), [If(UnaryOp(Not(), Call(Attribute(Name('self', Load(), lineno=230, col_offset=15), '_is_owned', Load(), lineno=230, col_offset=15), [], [], None, None, lineno=230, col_offset=15), lineno=230, col_offset=11), [Raise(Call(Name('RuntimeError', Load(), lineno=231, col_offset=18), [Str('cannot wait on un-acquired lock', lineno=231, col_offset=31)], [], None, None, lineno=231, col_offset=18), None, None, lineno=231, col_offset=12)], [], lineno=230, col_offset=8), Assign([Name('waiter', Store(), lineno=232, col_offset=8)], Call(Name('_allocate_lock', Load(), lineno=232, col_offset=17), [], [], None, None, lineno=232, col_offset=17), lineno=232, col_offset=8), Expr(Call(Attribute(Name('waiter', Load(), lineno=233, col_offset=8), 'acquire', Load(), lineno=233, col_offset=8), [], [], None, None, lineno=233, col_offset=8), lineno=233, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=234, col_offset=8), '__waiters', Load(), lineno=234, col_offset=8), 'append', Load(), lineno=234, col_offset=8), [Name('waiter', Load(), lineno=234, col_offset=30)], [], None, None, lineno=234, col_offset=8), lineno=234, col_offset=8), Assign([Name('saved_state', Store(), lineno=235, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=235, col_offset=22), '_release_save', Load(), lineno=235, col_offset=22), [], [], None, None, lineno=235, col_offset=22), lineno=235, col_offset=8), TryFinally([If(Compare(Name('timeout', Load(), lineno=237, col_offset=15), [Is()], [Name('None', Load(), lineno=237, col_offset=26)], lineno=237, col_offset=15), [Expr(Call(Attribute(Name('waiter', Load(), lineno=238, col_offset=16), 'acquire', Load(), lineno=238, col_offset=16), [], [], None, None, lineno=238, col_offset=16), lineno=238, col_offset=16), If(Name('__debug__', Load(), lineno=239, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=240, col_offset=20), '_note', Load(), lineno=240, col_offset=20), [Str('%s.wait(): got it', lineno=240, col_offset=31), Name('self', Load(), lineno=240, col_offset=52)], [], None, None, lineno=240, col_offset=20), lineno=240, col_offset=20)], [], lineno=239, col_offset=16)], [Assign([Name('endtime', Store(), lineno=247, col_offset=16)], BinOp(Call(Name('_time', Load(), lineno=247, col_offset=26), [], [], None, None, lineno=247, col_offset=26), Add(), Name('timeout', Load(), lineno=247, col_offset=36), lineno=247, col_offset=26), lineno=247, col_offset=16), Assign([Name('delay', Store(), lineno=248, col_offset=16)], Num(0.0005, lineno=248, col_offset=24), lineno=248, col_offset=16), While(Name('True', Load(), lineno=249, col_offset=22), [Assign([Name('gotit', Store(), lineno=250, col_offset=20)], Call(Attribute(Name('waiter', Load(), lineno=250, col_offset=28), 'acquire', Load(), lineno=250, col_offset=28), [Num(0, lineno=250, col_offset=43)], [], None, None, lineno=250, col_offset=28), lineno=250, col_offset=20), If(Name('gotit', Load(), lineno=251, col_offset=23), [Break( lineno=252, col_offset=24)], [], lineno=251, col_offset=20), Assign([Name('remaining', Store(), lineno=253, col_offset=20)], BinOp(Name('endtime', Load(), lineno=253, col_offset=32), Sub(), Call(Name('_time', Load(), lineno=253, col_offset=42), [], [], None, None, lineno=253, col_offset=42), lineno=253, col_offset=32), lineno=253, col_offset=20), If(Compare(Name('remaining', Load(), lineno=254, col_offset=23), [LtE()], [Num(0, lineno=254, col_offset=36)], lineno=254, col_offset=23), [Break( lineno=255, col_offset=24)], [], lineno=254, col_offset=20), Assign([Name('delay', Store(), lineno=256, col_offset=20)], Call(Name('min', Load(), lineno=256, col_offset=28), [BinOp(Name('delay', Load(), lineno=256, col_offset=32), Mult(), Num(2, lineno=256, col_offset=40), lineno=256, col_offset=32), Name('remaining', Load(), lineno=256, col_offset=43), Num(0.05, lineno=256, col_offset=54)], [], None, None, lineno=256, col_offset=28), lineno=256, col_offset=20), Expr(Call(Name('_sleep', Load(), lineno=257, col_offset=20), [Name('delay', Load(), lineno=257, col_offset=27)], [], None, None, lineno=257, col_offset=20), lineno=257, col_offset=20)], [], lineno=249, col_offset=16), If(UnaryOp(Not(), Name('gotit', Load(), lineno=258, col_offset=23), lineno=258, col_offset=19), [If(Name('__debug__', Load(), lineno=259, col_offset=23), [Expr(Call(Attribute(Name('self', Load(), lineno=260, col_offset=24), '_note', Load(), lineno=260, col_offset=24), [Str('%s.wait(%s): timed out', lineno=260, col_offset=35), Name('self', Load(), lineno=260, col_offset=61), Name('timeout', Load(), lineno=260, col_offset=67)], [], None, None, lineno=260, col_offset=24), lineno=260, col_offset=24)], [], lineno=259, col_offset=20), TryExcept([Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=262, col_offset=24), '__waiters', Load(), lineno=262, col_offset=24), 'remove', Load(), lineno=262, col_offset=24), [Name('waiter', Load(), lineno=262, col_offset=46)], [], None, None, lineno=262, col_offset=24), lineno=262, col_offset=24)], [ExceptHandler(Name('ValueError', Load(), lineno=263, col_offset=27), None, [Pass( lineno=264, col_offset=24)], lineno=263, col_offset=20)], [], lineno=261, col_offset=20)], [If(Name('__debug__', Load(), lineno=266, col_offset=23), [Expr(Call(Attribute(Name('self', Load(), lineno=267, col_offset=24), '_note', Load(), lineno=267, col_offset=24), [Str('%s.wait(%s): got it', lineno=267, col_offset=35), Name('self', Load(), lineno=267, col_offset=58), Name('timeout', Load(), lineno=267, col_offset=64)], [], None, None, lineno=267, col_offset=24), lineno=267, col_offset=24)], [], lineno=266, col_offset=20)], lineno=258, col_offset=16)], lineno=237, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=269, col_offset=12), '_acquire_restore', Load(), lineno=269, col_offset=12), [Name('saved_state', Load(), lineno=269, col_offset=34)], [], None, None, lineno=269, col_offset=12), lineno=269, col_offset=12)], lineno=236, col_offset=8)], [], lineno=229, col_offset=4), FunctionDef('notify', arguments([Name('self', Param(), lineno=271, col_offset=15), Name('n', Param(), lineno=271, col_offset=21)], None, None, [Num(1, lineno=271, col_offset=23)]), [If(UnaryOp(Not(), Call(Attribute(Name('self', Load(), lineno=272, col_offset=15), '_is_owned', Load(), lineno=272, col_offset=15), [], [], None, None, lineno=272, col_offset=15), lineno=272, col_offset=11), [Raise(Call(Name('RuntimeError', Load(), lineno=273, col_offset=18), [Str('cannot notify on un-acquired lock', lineno=273, col_offset=31)], [], None, None, lineno=273, col_offset=18), None, None, lineno=273, col_offset=12)], [], lineno=272, col_offset=8), Assign([Name('__waiters', Store(), lineno=274, col_offset=8)], Attribute(Name('self', Load(), lineno=274, col_offset=20), '__waiters', Load(), lineno=274, col_offset=20), lineno=274, col_offset=8), Assign([Name('waiters', Store(), lineno=275, col_offset=8)], Subscript(Name('__waiters', Load(), lineno=275, col_offset=18), Slice(None, Name('n', Load(), lineno=275, col_offset=29), None), Load(), lineno=275, col_offset=18), lineno=275, col_offset=8), If(UnaryOp(Not(), Name('waiters', Load(), lineno=276, col_offset=15), lineno=276, col_offset=11), [If(Name('__debug__', Load(), lineno=277, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=278, col_offset=16), '_note', Load(), lineno=278, col_offset=16), [Str('%s.notify(): no waiters', lineno=278, col_offset=27), Name('self', Load(), lineno=278, col_offset=54)], [], None, None, lineno=278, col_offset=16), lineno=278, col_offset=16)], [], lineno=277, col_offset=12), Return(None, lineno=279, col_offset=12)], [], lineno=276, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=280, col_offset=8), '_note', Load(), lineno=280, col_offset=8), [Str('%s.notify(): notifying %d waiter%s', lineno=280, col_offset=19), Name('self', Load(), lineno=280, col_offset=57), Name('n', Load(), lineno=280, col_offset=63), BoolOp(Or(), [BoolOp(And(), [Compare(Name('n', Load(), lineno=281, col_offset=19), [NotEq()], [Num(1, lineno=281, col_offset=22)], lineno=281, col_offset=19), Str('s', lineno=281, col_offset=28)], lineno=281, col_offset=19), Str('', lineno=281, col_offset=35)], lineno=281, col_offset=19)], [], None, None, lineno=280, col_offset=8), lineno=280, col_offset=8), For(Name('waiter', Store(), lineno=282, col_offset=12), Name('waiters', Load(), lineno=282, col_offset=22), [Expr(Call(Attribute(Name('waiter', Load(), lineno=283, col_offset=12), 'release', Load(), lineno=283, col_offset=12), [], [], None, None, lineno=283, col_offset=12), lineno=283, col_offset=12), TryExcept([Expr(Call(Attribute(Name('__waiters', Load(), lineno=285, col_offset=16), 'remove', Load(), lineno=285, col_offset=16), [Name('waiter', Load(), lineno=285, col_offset=33)], [], None, None, lineno=285, col_offset=16), lineno=285, col_offset=16)], [ExceptHandler(Name('ValueError', Load(), lineno=286, col_offset=19), None, [Pass( lineno=287, col_offset=16)], lineno=286, col_offset=12)], [], lineno=284, col_offset=12)], [], lineno=282, col_offset=8)], [], lineno=271, col_offset=4), FunctionDef('notifyAll', arguments([Name('self', Param(), lineno=289, col_offset=18)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=290, col_offset=8), 'notify', Load(), lineno=290, col_offset=8), [Call(Name('len', Load(), lineno=290, col_offset=20), [Attribute(Name('self', Load(), lineno=290, col_offset=24), '__waiters', Load(), lineno=290, col_offset=24)], [], None, None, lineno=290, col_offset=20)], [], None, None, lineno=290, col_offset=8), lineno=290, col_offset=8)], [], lineno=289, col_offset=4), Assign([Name('notify_all', Store(), lineno=292, col_offset=4)], Name('notifyAll', Load(), lineno=292, col_offset=17), lineno=292, col_offset=4)], [], lineno=178, col_offset=0), FunctionDef('Semaphore', arguments([], 'args', 'kwargs', []), [Return(Call(Name('_Semaphore', Load(), lineno=296, col_offset=11), [], [], Name('args', Load(), lineno=296, col_offset=23), Name('kwargs', Load(), lineno=296, col_offset=31), lineno=296, col_offset=11), lineno=296, col_offset=4)], [], lineno=295, col_offset=0), ClassDef('_Semaphore', [Name('_Verbose', Load(), lineno=298, col_offset=17)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=302, col_offset=17), Name('value', Param(), lineno=302, col_offset=23), Name('verbose', Param(), lineno=302, col_offset=32)], None, None, [Num(1, lineno=302, col_offset=29), Name('None', Load(), lineno=302, col_offset=40)]), [If(Compare(Name('value', Load(), lineno=303, col_offset=11), [Lt()], [Num(0, lineno=303, col_offset=19)], lineno=303, col_offset=11), [Raise(Call(Name('ValueError', Load(), lineno=304, col_offset=18), [Str('semaphore initial value must be >= 0', lineno=304, col_offset=29)], [], None, None, lineno=304, col_offset=18), None, None, lineno=304, col_offset=12)], [], lineno=303, col_offset=8), Expr(Call(Attribute(Name('_Verbose', Load(), lineno=305, col_offset=8), '__init__', Load(), lineno=305, col_offset=8), [Name('self', Load(), lineno=305, col_offset=26), Name('verbose', Load(), lineno=305, col_offset=32)], [], None, None, lineno=305, col_offset=8), lineno=305, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=306, col_offset=8), '__cond', Store(), lineno=306, col_offset=8)], Call(Name('Condition', Load(), lineno=306, col_offset=22), [Call(Name('Lock', Load(), lineno=306, col_offset=32), [], [], None, None, lineno=306, col_offset=32)], [], None, None, lineno=306, col_offset=22), lineno=306, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=307, col_offset=8), '__value', Store(), lineno=307, col_offset=8)], Name('value', Load(), lineno=307, col_offset=23), lineno=307, col_offset=8)], [], lineno=302, col_offset=4), FunctionDef('acquire', arguments([Name('self', Param(), lineno=309, col_offset=16), Name('blocking', Param(), lineno=309, col_offset=22)], None, None, [Num(1, lineno=309, col_offset=31)]), [Assign([Name('rc', Store(), lineno=310, col_offset=8)], Name('False', Load(), lineno=310, col_offset=13), lineno=310, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=311, col_offset=8), '__cond', Load(), lineno=311, col_offset=8), 'acquire', Load(), lineno=311, col_offset=8), [], [], None, None, lineno=311, col_offset=8), lineno=311, col_offset=8), While(Compare(Attribute(Name('self', Load(), lineno=312, col_offset=14), '__value', Load(), lineno=312, col_offset=14), [Eq()], [Num(0, lineno=312, col_offset=30)], lineno=312, col_offset=14), [If(UnaryOp(Not(), Name('blocking', Load(), lineno=313, col_offset=19), lineno=313, col_offset=15), [Break( lineno=314, col_offset=16)], [], lineno=313, col_offset=12), If(Name('__debug__', Load(), lineno=315, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=316, col_offset=16), '_note', Load(), lineno=316, col_offset=16), [Str('%s.acquire(%s): blocked waiting, value=%s', lineno=316, col_offset=27), Name('self', Load(), lineno=317, col_offset=27), Name('blocking', Load(), lineno=317, col_offset=33), Attribute(Name('self', Load(), lineno=317, col_offset=43), '__value', Load(), lineno=317, col_offset=43)], [], None, None, lineno=316, col_offset=16), lineno=316, col_offset=16)], [], lineno=315, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=318, col_offset=12), '__cond', Load(), lineno=318, col_offset=12), 'wait', Load(), lineno=318, col_offset=12), [], [], None, None, lineno=318, col_offset=12), lineno=318, col_offset=12)], [Assign([Attribute(Name('self', Load(), lineno=320, col_offset=12), '__value', Store(), lineno=320, col_offset=12)], BinOp(Attribute(Name('self', Load(), lineno=320, col_offset=27), '__value', Load(), lineno=320, col_offset=27), Sub(), Num(1, lineno=320, col_offset=42), lineno=320, col_offset=27), lineno=320, col_offset=12), If(Name('__debug__', Load(), lineno=321, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=322, col_offset=16), '_note', Load(), lineno=322, col_offset=16), [Str('%s.acquire: success, value=%s', lineno=322, col_offset=27), Name('self', Load(), lineno=323, col_offset=27), Attribute(Name('self', Load(), lineno=323, col_offset=33), '__value', Load(), lineno=323, col_offset=33)], [], None, None, lineno=322, col_offset=16), lineno=322, col_offset=16)], [], lineno=321, col_offset=12), Assign([Name('rc', Store(), lineno=324, col_offset=12)], Name('True', Load(), lineno=324, col_offset=17), lineno=324, col_offset=12)], lineno=312, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=325, col_offset=8), '__cond', Load(), lineno=325, col_offset=8), 'release', Load(), lineno=325, col_offset=8), [], [], None, None, lineno=325, col_offset=8), lineno=325, col_offset=8), Return(Name('rc', Load(), lineno=326, col_offset=15), lineno=326, col_offset=8)], [], lineno=309, col_offset=4), Assign([Name('__enter__', Store(), lineno=328, col_offset=4)], Name('acquire', Load(), lineno=328, col_offset=16), lineno=328, col_offset=4), FunctionDef('release', arguments([Name('self', Param(), lineno=330, col_offset=16)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=331, col_offset=8), '__cond', Load(), lineno=331, col_offset=8), 'acquire', Load(), lineno=331, col_offset=8), [], [], None, None, lineno=331, col_offset=8), lineno=331, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=332, col_offset=8), '__value', Store(), lineno=332, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=332, col_offset=23), '__value', Load(), lineno=332, col_offset=23), Add(), Num(1, lineno=332, col_offset=38), lineno=332, col_offset=23), lineno=332, col_offset=8), If(Name('__debug__', Load(), lineno=333, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=334, col_offset=12), '_note', Load(), lineno=334, col_offset=12), [Str('%s.release: success, value=%s', lineno=334, col_offset=23), Name('self', Load(), lineno=335, col_offset=23), Attribute(Name('self', Load(), lineno=335, col_offset=29), '__value', Load(), lineno=335, col_offset=29)], [], None, None, lineno=334, col_offset=12), lineno=334, col_offset=12)], [], lineno=333, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=336, col_offset=8), '__cond', Load(), lineno=336, col_offset=8), 'notify', Load(), lineno=336, col_offset=8), [], [], None, None, lineno=336, col_offset=8), lineno=336, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=337, col_offset=8), '__cond', Load(), lineno=337, col_offset=8), 'release', Load(), lineno=337, col_offset=8), [], [], None, None, lineno=337, col_offset=8), lineno=337, col_offset=8)], [], lineno=330, col_offset=4), FunctionDef('__exit__', arguments([Name('self', Param(), lineno=339, col_offset=17), Name('t', Param(), lineno=339, col_offset=23), Name('v', Param(), lineno=339, col_offset=26), Name('tb', Param(), lineno=339, col_offset=29)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=340, col_offset=8), 'release', Load(), lineno=340, col_offset=8), [], [], None, None, lineno=340, col_offset=8), lineno=340, col_offset=8)], [], lineno=339, col_offset=4)], [], lineno=298, col_offset=0), FunctionDef('BoundedSemaphore', arguments([], 'args', 'kwargs', []), [Return(Call(Name('_BoundedSemaphore', Load(), lineno=344, col_offset=11), [], [], Name('args', Load(), lineno=344, col_offset=30), Name('kwargs', Load(), lineno=344, col_offset=38), lineno=344, col_offset=11), lineno=344, col_offset=4)], [], lineno=343, col_offset=0), ClassDef('_BoundedSemaphore', [Name('_Semaphore', Load(), lineno=346, col_offset=24)], [Expr(Str('Semaphore that checks that # releases is <= # acquires', lineno=347, col_offset=4), lineno=347, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=348, col_offset=17), Name('value', Param(), lineno=348, col_offset=23), Name('verbose', Param(), lineno=348, col_offset=32)], None, None, [Num(1, lineno=348, col_offset=29), Name('None', Load(), lineno=348, col_offset=40)]), [Expr(Call(Attribute(Name('_Semaphore', Load(), lineno=349, col_offset=8), '__init__', Load(), lineno=349, col_offset=8), [Name('self', Load(), lineno=349, col_offset=28), Name('value', Load(), lineno=349, col_offset=34), Name('verbose', Load(), lineno=349, col_offset=41)], [], None, None, lineno=349, col_offset=8), lineno=349, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=350, col_offset=8), '_initial_value', Store(), lineno=350, col_offset=8)], Name('value', Load(), lineno=350, col_offset=30), lineno=350, col_offset=8)], [], lineno=348, col_offset=4), FunctionDef('release', arguments([Name('self', Param(), lineno=352, col_offset=16)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=353, col_offset=11), '_Semaphore__value', Load(), lineno=353, col_offset=11), [GtE()], [Attribute(Name('self', Load(), lineno=353, col_offset=37), '_initial_value', Load(), lineno=353, col_offset=37)], lineno=353, col_offset=11), [Raise(Name('ValueError', Load(), lineno=354, col_offset=18), Str('Semaphore released too many times', lineno=354, col_offset=30), None, lineno=354, col_offset=12)], [], lineno=353, col_offset=8), Return(Call(Attribute(Name('_Semaphore', Load(), lineno=355, col_offset=15), 'release', Load(), lineno=355, col_offset=15), [Name('self', Load(), lineno=355, col_offset=34)], [], None, None, lineno=355, col_offset=15), lineno=355, col_offset=8)], [], lineno=352, col_offset=4)], [], lineno=346, col_offset=0), FunctionDef('Event', arguments([], 'args', 'kwargs', []), [Return(Call(Name('_Event', Load(), lineno=359, col_offset=11), [], [], Name('args', Load(), lineno=359, col_offset=19), Name('kwargs', Load(), lineno=359, col_offset=27), lineno=359, col_offset=11), lineno=359, col_offset=4)], [], lineno=358, col_offset=0), ClassDef('_Event', [Name('_Verbose', Load(), lineno=361, col_offset=13)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=365, col_offset=17), Name('verbose', Param(), lineno=365, col_offset=23)], None, None, [Name('None', Load(), lineno=365, col_offset=31)]), [Expr(Call(Attribute(Name('_Verbose', Load(), lineno=366, col_offset=8), '__init__', Load(), lineno=366, col_offset=8), [Name('self', Load(), lineno=366, col_offset=26), Name('verbose', Load(), lineno=366, col_offset=32)], [], None, None, lineno=366, col_offset=8), lineno=366, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=367, col_offset=8), '__cond', Store(), lineno=367, col_offset=8)], Call(Name('Condition', Load(), lineno=367, col_offset=22), [Call(Name('Lock', Load(), lineno=367, col_offset=32), [], [], None, None, lineno=367, col_offset=32)], [], None, None, lineno=367, col_offset=22), lineno=367, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=368, col_offset=8), '__flag', Store(), lineno=368, col_offset=8)], Name('False', Load(), lineno=368, col_offset=22), lineno=368, col_offset=8)], [], lineno=365, col_offset=4), FunctionDef('isSet', arguments([Name('self', Param(), lineno=370, col_offset=14)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=371, col_offset=15), '__flag', Load(), lineno=371, col_offset=15), lineno=371, col_offset=8)], [], lineno=370, col_offset=4), Assign([Name('is_set', Store(), lineno=373, col_offset=4)], Name('isSet', Load(), lineno=373, col_offset=13), lineno=373, col_offset=4), FunctionDef('set', arguments([Name('self', Param(), lineno=375, col_offset=12)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=376, col_offset=8), '__cond', Load(), lineno=376, col_offset=8), 'acquire', Load(), lineno=376, col_offset=8), [], [], None, None, lineno=376, col_offset=8), lineno=376, col_offset=8), TryFinally([Assign([Attribute(Name('self', Load(), lineno=378, col_offset=12), '__flag', Store(), lineno=378, col_offset=12)], Name('True', Load(), lineno=378, col_offset=26), lineno=378, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=379, col_offset=12), '__cond', Load(), lineno=379, col_offset=12), 'notify_all', Load(), lineno=379, col_offset=12), [], [], None, None, lineno=379, col_offset=12), lineno=379, col_offset=12)], [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=381, col_offset=12), '__cond', Load(), lineno=381, col_offset=12), 'release', Load(), lineno=381, col_offset=12), [], [], None, None, lineno=381, col_offset=12), lineno=381, col_offset=12)], lineno=377, col_offset=8)], [], lineno=375, col_offset=4), FunctionDef('clear', arguments([Name('self', Param(), lineno=383, col_offset=14)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=384, col_offset=8), '__cond', Load(), lineno=384, col_offset=8), 'acquire', Load(), lineno=384, col_offset=8), [], [], None, None, lineno=384, col_offset=8), lineno=384, col_offset=8), TryFinally([Assign([Attribute(Name('self', Load(), lineno=386, col_offset=12), '__flag', Store(), lineno=386, col_offset=12)], Name('False', Load(), lineno=386, col_offset=26), lineno=386, col_offset=12)], [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=388, col_offset=12), '__cond', Load(), lineno=388, col_offset=12), 'release', Load(), lineno=388, col_offset=12), [], [], None, None, lineno=388, col_offset=12), lineno=388, col_offset=12)], lineno=385, col_offset=8)], [], lineno=383, col_offset=4), FunctionDef('wait', arguments([Name('self', Param(), lineno=390, col_offset=13), Name('timeout', Param(), lineno=390, col_offset=19)], None, None, [Name('None', Load(), lineno=390, col_offset=27)]), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=391, col_offset=8), '__cond', Load(), lineno=391, col_offset=8), 'acquire', Load(), lineno=391, col_offset=8), [], [], None, None, lineno=391, col_offset=8), lineno=391, col_offset=8), TryFinally([If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=393, col_offset=19), '__flag', Load(), lineno=393, col_offset=19), lineno=393, col_offset=15), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=394, col_offset=16), '__cond', Load(), lineno=394, col_offset=16), 'wait', Load(), lineno=394, col_offset=16), [Name('timeout', Load(), lineno=394, col_offset=33)], [], None, None, lineno=394, col_offset=16), lineno=394, col_offset=16)], [], lineno=393, col_offset=12), Return(Attribute(Name('self', Load(), lineno=395, col_offset=19), '__flag', Load(), lineno=395, col_offset=19), lineno=395, col_offset=12)], [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=397, col_offset=12), '__cond', Load(), lineno=397, col_offset=12), 'release', Load(), lineno=397, col_offset=12), [], [], None, None, lineno=397, col_offset=12), lineno=397, col_offset=12)], lineno=392, col_offset=8)], [], lineno=390, col_offset=4)], [], lineno=361, col_offset=0), Assign([Name('_counter', Store(), lineno=400, col_offset=0)], Num(0, lineno=400, col_offset=11), lineno=400, col_offset=0), FunctionDef('_newname', arguments([Name('template', Param(), lineno=401, col_offset=13)], None, None, [Str('Thread-%d', lineno=401, col_offset=22)]), [Global(['_counter'], lineno=402, col_offset=4), Assign([Name('_counter', Store(), lineno=403, col_offset=4)], BinOp(Name('_counter', Load(), lineno=403, col_offset=15), Add(), Num(1, lineno=403, col_offset=26), lineno=403, col_offset=15), lineno=403, col_offset=4), Return(BinOp(Name('template', Load(), lineno=404, col_offset=11), Mod(), Name('_counter', Load(), lineno=404, col_offset=22), lineno=404, col_offset=11), lineno=404, col_offset=4)], [], lineno=401, col_offset=0), Assign([Name('_active_limbo_lock', Store(), lineno=407, col_offset=0)], Call(Name('_allocate_lock', Load(), lineno=407, col_offset=21), [], [], None, None, lineno=407, col_offset=21), lineno=407, col_offset=0), Assign([Name('_active', Store(), lineno=408, col_offset=0)], Dict([], [], lineno=408, col_offset=10), lineno=408, col_offset=0), Assign([Name('_limbo', Store(), lineno=409, col_offset=0)], Dict([], [], lineno=409, col_offset=9), lineno=409, col_offset=0), ClassDef('Thread', [Name('_Verbose', Load(), lineno=414, col_offset=13)], [Assign([Name('__initialized', Store(), lineno=416, col_offset=4)], Name('False', Load(), lineno=416, col_offset=20), lineno=416, col_offset=4), Assign([Name('__exc_info', Store(), lineno=421, col_offset=4)], Attribute(Name('_sys', Load(), lineno=421, col_offset=17), 'exc_info', Load(), lineno=421, col_offset=17), lineno=421, col_offset=4), Assign([Name('__exc_clear', Store(), lineno=424, col_offset=4)], Attribute(Name('_sys', Load(), lineno=424, col_offset=18), 'exc_clear', Load(), lineno=424, col_offset=18), lineno=424, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=426, col_offset=17), Name('group', Param(), lineno=426, col_offset=23), Name('target', Param(), lineno=426, col_offset=35), Name('name', Param(), lineno=426, col_offset=48), Name('args', Param(), lineno=427, col_offset=17), Name('kwargs', Param(), lineno=427, col_offset=26), Name('verbose', Param(), lineno=427, col_offset=39)], None, None, [Name('None', Load(), lineno=426, col_offset=29), Name('None', Load(), lineno=426, col_offset=42), Name('None', Load(), lineno=426, col_offset=53), Tuple([], Load(), lineno=427, col_offset=22), Name('None', Load(), lineno=427, col_offset=33), Name('None', Load(), lineno=427, col_offset=47)]), [Assert(Compare(Name('group', Load(), lineno=428, col_offset=15), [Is()], [Name('None', Load(), lineno=428, col_offset=24)], lineno=428, col_offset=15), Str('group argument must be None for now', lineno=428, col_offset=30), lineno=428, col_offset=8), Expr(Call(Attribute(Name('_Verbose', Load(), lineno=429, col_offset=8), '__init__', Load(), lineno=429, col_offset=8), [Name('self', Load(), lineno=429, col_offset=26), Name('verbose', Load(), lineno=429, col_offset=32)], [], None, None, lineno=429, col_offset=8), lineno=429, col_offset=8), If(Compare(Name('kwargs', Load(), lineno=430, col_offset=11), [Is()], [Name('None', Load(), lineno=430, col_offset=21)], lineno=430, col_offset=11), [Assign([Name('kwargs', Store(), lineno=431, col_offset=12)], Dict([], [], lineno=431, col_offset=21), lineno=431, col_offset=12)], [], lineno=430, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=432, col_offset=8), '__target', Store(), lineno=432, col_offset=8)], Name('target', Load(), lineno=432, col_offset=24), lineno=432, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=433, col_offset=8), '__name', Store(), lineno=433, col_offset=8)], Call(Name('str', Load(), lineno=433, col_offset=22), [BoolOp(Or(), [Name('name', Load(), lineno=433, col_offset=26), Call(Name('_newname', Load(), lineno=433, col_offset=34), [], [], None, None, lineno=433, col_offset=34)], lineno=433, col_offset=26)], [], None, None, lineno=433, col_offset=22), lineno=433, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=434, col_offset=8), '__args', Store(), lineno=434, col_offset=8)], Name('args', Load(), lineno=434, col_offset=22), lineno=434, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=435, col_offset=8), '__kwargs', Store(), lineno=435, col_offset=8)], Name('kwargs', Load(), lineno=435, col_offset=24), lineno=435, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=436, col_offset=8), '__daemonic', Store(), lineno=436, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=436, col_offset=26), '_set_daemon', Load(), lineno=436, col_offset=26), [], [], None, None, lineno=436, col_offset=26), lineno=436, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=437, col_offset=8), '__ident', Store(), lineno=437, col_offset=8)], Name('None', Load(), lineno=437, col_offset=23), lineno=437, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=438, col_offset=8), '__started', Store(), lineno=438, col_offset=8)], Call(Name('Event', Load(), lineno=438, col_offset=25), [], [], None, None, lineno=438, col_offset=25), lineno=438, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=439, col_offset=8), '__stopped', Store(), lineno=439, col_offset=8)], Name('False', Load(), lineno=439, col_offset=25), lineno=439, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=440, col_offset=8), '__block', Store(), lineno=440, col_offset=8)], Call(Name('Condition', Load(), lineno=440, col_offset=23), [Call(Name('Lock', Load(), lineno=440, col_offset=33), [], [], None, None, lineno=440, col_offset=33)], [], None, None, lineno=440, col_offset=23), lineno=440, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=441, col_offset=8), '__initialized', Store(), lineno=441, col_offset=8)], Name('True', Load(), lineno=441, col_offset=29), lineno=441, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=444, col_offset=8), '__stderr', Store(), lineno=444, col_offset=8)], Attribute(Name('_sys', Load(), lineno=444, col_offset=24), 'stderr', Load(), lineno=444, col_offset=24), lineno=444, col_offset=8)], [], lineno=426, col_offset=4), FunctionDef('_set_daemon', arguments([Name('self', Param(), lineno=446, col_offset=20)], None, None, []), [Return(Attribute(Call(Name('current_thread', Load(), lineno=448, col_offset=15), [], [], None, None, lineno=448, col_offset=15), 'daemon', Load(), lineno=448, col_offset=15), lineno=448, col_offset=8)], [], lineno=446, col_offset=4), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=450, col_offset=17)], None, None, []), [Assert(Attribute(Name('self', Load(), lineno=451, col_offset=15), '__initialized', Load(), lineno=451, col_offset=15), Str('Thread.__init__() was not called', lineno=451, col_offset=35), lineno=451, col_offset=8), Assign([Name('status', Store(), lineno=452, col_offset=8)], Str('initial', lineno=452, col_offset=17), lineno=452, col_offset=8), If(Call(Attribute(Attribute(Name('self', Load(), lineno=453, col_offset=11), '__started', Load(), lineno=453, col_offset=11), 'is_set', Load(), lineno=453, col_offset=11), [], [], None, None, lineno=453, col_offset=11), [Assign([Name('status', Store(), lineno=454, col_offset=12)], Str('started', lineno=454, col_offset=21), lineno=454, col_offset=12)], [], lineno=453, col_offset=8), If(Attribute(Name('self', Load(), lineno=455, col_offset=11), '__stopped', Load(), lineno=455, col_offset=11), [Assign([Name('status', Store(), lineno=456, col_offset=12)], Str('stopped', lineno=456, col_offset=21), lineno=456, col_offset=12)], [], lineno=455, col_offset=8), If(Attribute(Name('self', Load(), lineno=457, col_offset=11), '__daemonic', Load(), lineno=457, col_offset=11), [AugAssign(Name('status', Store(), lineno=458, col_offset=12), Add(), Str(' daemon', lineno=458, col_offset=22), lineno=458, col_offset=12)], [], lineno=457, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=459, col_offset=11), '__ident', Load(), lineno=459, col_offset=11), [IsNot()], [Name('None', Load(), lineno=459, col_offset=31)], lineno=459, col_offset=11), [AugAssign(Name('status', Store(), lineno=460, col_offset=12), Add(), BinOp(Str(' %s', lineno=460, col_offset=22), Mod(), Attribute(Name('self', Load(), lineno=460, col_offset=30), '__ident', Load(), lineno=460, col_offset=30), lineno=460, col_offset=22), lineno=460, col_offset=12)], [], lineno=459, col_offset=8), Return(BinOp(Str('<%s(%s, %s)>', lineno=461, col_offset=15), Mod(), Tuple([Attribute(Attribute(Name('self', Load(), lineno=461, col_offset=33), '__class__', Load(), lineno=461, col_offset=33), '__name__', Load(), lineno=461, col_offset=33), Attribute(Name('self', Load(), lineno=461, col_offset=58), '__name', Load(), lineno=461, col_offset=58), Name('status', Load(), lineno=461, col_offset=71)], Load(), lineno=461, col_offset=33), lineno=461, col_offset=15), lineno=461, col_offset=8)], [], lineno=450, col_offset=4), FunctionDef('start', arguments([Name('self', Param(), lineno=463, col_offset=14)], None, None, []), [If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=464, col_offset=15), '__initialized', Load(), lineno=464, col_offset=15), lineno=464, col_offset=11), [Raise(Call(Name('RuntimeError', Load(), lineno=465, col_offset=18), [Str('thread.__init__() not called', lineno=465, col_offset=31)], [], None, None, lineno=465, col_offset=18), None, None, lineno=465, col_offset=12)], [], lineno=464, col_offset=8), If(Call(Attribute(Attribute(Name('self', Load(), lineno=466, col_offset=11), '__started', Load(), lineno=466, col_offset=11), 'is_set', Load(), lineno=466, col_offset=11), [], [], None, None, lineno=466, col_offset=11), [Raise(Call(Name('RuntimeError', Load(), lineno=467, col_offset=18), [Str('threads can only be started once', lineno=467, col_offset=31)], [], None, None, lineno=467, col_offset=18), None, None, lineno=467, col_offset=12)], [], lineno=466, col_offset=8), If(Name('__debug__', Load(), lineno=468, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=469, col_offset=12), '_note', Load(), lineno=469, col_offset=12), [Str('%s.start(): starting thread', lineno=469, col_offset=23), Name('self', Load(), lineno=469, col_offset=54)], [], None, None, lineno=469, col_offset=12), lineno=469, col_offset=12)], [], lineno=468, col_offset=8), With(Name('_active_limbo_lock', Load(), lineno=470, col_offset=13), None, [Assign([Subscript(Name('_limbo', Load(), lineno=471, col_offset=12), Index(Name('self', Load(), lineno=471, col_offset=19)), Store(), lineno=471, col_offset=12)], Name('self', Load(), lineno=471, col_offset=27), lineno=471, col_offset=12)], lineno=470, col_offset=13), TryExcept([Expr(Call(Name('_start_new_thread', Load(), lineno=473, col_offset=12), [Attribute(Name('self', Load(), lineno=473, col_offset=30), '__bootstrap', Load(), lineno=473, col_offset=30), Tuple([], Load(), lineno=473, col_offset=48)], [], None, None, lineno=473, col_offset=12), lineno=473, col_offset=12)], [ExceptHandler(Name('Exception', Load(), lineno=474, col_offset=15), None, [With(Name('_active_limbo_lock', Load(), lineno=475, col_offset=17), None, [Delete([Subscript(Name('_limbo', Load(), lineno=476, col_offset=20), Index(Name('self', Load(), lineno=476, col_offset=27)), Del(), lineno=476, col_offset=20)], lineno=476, col_offset=16)], lineno=475, col_offset=17), Raise(None, None, None, lineno=477, col_offset=12)], lineno=474, col_offset=8)], [], lineno=472, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=478, col_offset=8), '__started', Load(), lineno=478, col_offset=8), 'wait', Load(), lineno=478, col_offset=8), [], [], None, None, lineno=478, col_offset=8), lineno=478, col_offset=8)], [], lineno=463, col_offset=4), FunctionDef('run', arguments([Name('self', Param(), lineno=480, col_offset=12)], None, None, []), [TryFinally([If(Attribute(Name('self', Load(), lineno=482, col_offset=15), '__target', Load(), lineno=482, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=483, col_offset=16), '__target', Load(), lineno=483, col_offset=16), [], [], Attribute(Name('self', Load(), lineno=483, col_offset=31), '__args', Load(), lineno=483, col_offset=31), Attribute(Name('self', Load(), lineno=483, col_offset=46), '__kwargs', Load(), lineno=483, col_offset=46), lineno=483, col_offset=16), lineno=483, col_offset=16)], [], lineno=482, col_offset=12)], [Delete([Attribute(Name('self', Load(), lineno=487, col_offset=16), '__target', Del(), lineno=487, col_offset=16), Attribute(Name('self', Load(), lineno=487, col_offset=31), '__args', Del(), lineno=487, col_offset=31), Attribute(Name('self', Load(), lineno=487, col_offset=44), '__kwargs', Del(), lineno=487, col_offset=44)], lineno=487, col_offset=12)], lineno=481, col_offset=8)], [], lineno=480, col_offset=4), FunctionDef('__bootstrap', arguments([Name('self', Param(), lineno=489, col_offset=20)], None, None, []), [TryExcept([Expr(Call(Attribute(Name('self', Load(), lineno=503, col_offset=12), '__bootstrap_inner', Load(), lineno=503, col_offset=12), [], [], None, None, lineno=503, col_offset=12), lineno=503, col_offset=12)], [ExceptHandler(None, None, [If(BoolOp(And(), [Attribute(Name('self', Load(), lineno=505, col_offset=15), '__daemonic', Load(), lineno=505, col_offset=15), Compare(Name('_sys', Load(), lineno=505, col_offset=35), [Is()], [Name('None', Load(), lineno=505, col_offset=43)], lineno=505, col_offset=35)], lineno=505, col_offset=15), [Return(None, lineno=506, col_offset=16)], [], lineno=505, col_offset=12), Raise(None, None, None, lineno=507, col_offset=12)], lineno=504, col_offset=8)], [], lineno=502, col_offset=8)], [], lineno=489, col_offset=4), FunctionDef('_set_ident', arguments([Name('self', Param(), lineno=509, col_offset=19)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=510, col_offset=8), '__ident', Store(), lineno=510, col_offset=8)], Call(Name('_get_ident', Load(), lineno=510, col_offset=23), [], [], None, None, lineno=510, col_offset=23), lineno=510, col_offset=8)], [], lineno=509, col_offset=4), FunctionDef('__bootstrap_inner', arguments([Name('self', Param(), lineno=512, col_offset=26)], None, None, []), [TryFinally([Expr(Call(Attribute(Name('self', Load(), lineno=514, col_offset=12), '_set_ident', Load(), lineno=514, col_offset=12), [], [], None, None, lineno=514, col_offset=12), lineno=514, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=515, col_offset=12), '__started', Load(), lineno=515, col_offset=12), 'set', Load(), lineno=515, col_offset=12), [], [], None, None, lineno=515, col_offset=12), lineno=515, col_offset=12), With(Name('_active_limbo_lock', Load(), lineno=516, col_offset=17), None, [Assign([Subscript(Name('_active', Load(), lineno=517, col_offset=16), Index(Attribute(Name('self', Load(), lineno=517, col_offset=24), '__ident', Load(), lineno=517, col_offset=24)), Store(), lineno=517, col_offset=16)], Name('self', Load(), lineno=517, col_offset=40), lineno=517, col_offset=16), Delete([Subscript(Name('_limbo', Load(), lineno=518, col_offset=20), Index(Name('self', Load(), lineno=518, col_offset=27)), Del(), lineno=518, col_offset=20)], lineno=518, col_offset=16)], lineno=516, col_offset=17), If(Name('__debug__', Load(), lineno=519, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=520, col_offset=16), '_note', Load(), lineno=520, col_offset=16), [Str('%s.__bootstrap(): thread started', lineno=520, col_offset=27), Name('self', Load(), lineno=520, col_offset=63)], [], None, None, lineno=520, col_offset=16), lineno=520, col_offset=16)], [], lineno=519, col_offset=12), If(Name('_trace_hook', Load(), lineno=522, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=523, col_offset=16), '_note', Load(), lineno=523, col_offset=16), [Str('%s.__bootstrap(): registering trace hook', lineno=523, col_offset=27), Name('self', Load(), lineno=523, col_offset=71)], [], None, None, lineno=523, col_offset=16), lineno=523, col_offset=16), Expr(Call(Attribute(Name('_sys', Load(), lineno=524, col_offset=16), 'settrace', Load(), lineno=524, col_offset=16), [Name('_trace_hook', Load(), lineno=524, col_offset=30)], [], None, None, lineno=524, col_offset=16), lineno=524, col_offset=16)], [], lineno=522, col_offset=12), If(Name('_profile_hook', Load(), lineno=525, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=526, col_offset=16), '_note', Load(), lineno=526, col_offset=16), [Str('%s.__bootstrap(): registering profile hook', lineno=526, col_offset=27), Name('self', Load(), lineno=526, col_offset=73)], [], None, None, lineno=526, col_offset=16), lineno=526, col_offset=16), Expr(Call(Attribute(Name('_sys', Load(), lineno=527, col_offset=16), 'setprofile', Load(), lineno=527, col_offset=16), [Name('_profile_hook', Load(), lineno=527, col_offset=32)], [], None, None, lineno=527, col_offset=16), lineno=527, col_offset=16)], [], lineno=525, col_offset=12), TryFinally([TryExcept([Expr(Call(Attribute(Name('self', Load(), lineno=530, col_offset=16), 'run', Load(), lineno=530, col_offset=16), [], [], None, None, lineno=530, col_offset=16), lineno=530, col_offset=16)], [ExceptHandler(Name('SystemExit', Load(), lineno=531, col_offset=19), None, [If(Name('__debug__', Load(), lineno=532, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=533, col_offset=20), '_note', Load(), lineno=533, col_offset=20), [Str('%s.__bootstrap(): raised SystemExit', lineno=533, col_offset=31), Name('self', Load(), lineno=533, col_offset=70)], [], None, None, lineno=533, col_offset=20), lineno=533, col_offset=20)], [], lineno=532, col_offset=16)], lineno=531, col_offset=12), ExceptHandler(None, None, [If(Name('__debug__', Load(), lineno=535, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=536, col_offset=20), '_note', Load(), lineno=536, col_offset=20), [Str('%s.__bootstrap(): unhandled exception', lineno=536, col_offset=31), Name('self', Load(), lineno=536, col_offset=72)], [], None, None, lineno=536, col_offset=20), lineno=536, col_offset=20)], [], lineno=535, col_offset=16), If(Name('_sys', Load(), lineno=541, col_offset=19), [Expr(Call(Attribute(Attribute(Name('_sys', Load(), lineno=542, col_offset=20), 'stderr', Load(), lineno=542, col_offset=20), 'write', Load(), lineno=542, col_offset=20), [BinOp(Str('Exception in thread %s:\n%s\n', lineno=542, col_offset=38), Mod(), Tuple([Attribute(Name('self', Load(), lineno=543, col_offset=39), 'name', Load(), lineno=543, col_offset=39), Call(Name('_format_exc', Load(), lineno=543, col_offset=50), [], [], None, None, lineno=543, col_offset=50)], Load(), lineno=543, col_offset=39), lineno=542, col_offset=38)], [], None, None, lineno=542, col_offset=20), lineno=542, col_offset=20)], [Assign([Tuple([Name('exc_type', Store(), lineno=548, col_offset=20), Name('exc_value', Store(), lineno=548, col_offset=30), Name('exc_tb', Store(), lineno=548, col_offset=41)], Store(), lineno=548, col_offset=20)], Call(Attribute(Name('self', Load(), lineno=548, col_offset=50), '__exc_info', Load(), lineno=548, col_offset=50), [], [], None, None, lineno=548, col_offset=50), lineno=548, col_offset=20), TryFinally([Print(Attribute(Name('self', Load(), lineno=550, col_offset=31), '__stderr', Load(), lineno=550, col_offset=31), [BinOp(BinOp(Str('Exception in thread ', lineno=551, col_offset=28), Add(), Attribute(Name('self', Load(), lineno=551, col_offset=53), 'name', Load(), lineno=551, col_offset=53), lineno=551, col_offset=28), Add(), Str(' (most likely raised during interpreter shutdown):', lineno=552, col_offset=28), lineno=551, col_offset=63)], True, lineno=550, col_offset=24), Print(Attribute(Name('self', Load(), lineno=553, col_offset=31), '__stderr', Load(), lineno=553, col_offset=31), [Str('Traceback (most recent call last):', lineno=554, col_offset=28)], True, lineno=553, col_offset=24), While(Name('exc_tb', Load(), lineno=555, col_offset=30), [Print(Attribute(Name('self', Load(), lineno=556, col_offset=35), '__stderr', Load(), lineno=556, col_offset=35), [BinOp(Str('  File "%s", line %s, in %s', lineno=557, col_offset=32), Mod(), Tuple([Attribute(Attribute(Attribute(Name('exc_tb', Load(), lineno=558, col_offset=33), 'tb_frame', Load(), lineno=558, col_offset=33), 'f_code', Load(), lineno=558, col_offset=33), 'co_filename', Load(), lineno=558, col_offset=33), Attribute(Name('exc_tb', Load(), lineno=559, col_offset=36), 'tb_lineno', Load(), lineno=559, col_offset=36), Attribute(Attribute(Attribute(Name('exc_tb', Load(), lineno=560, col_offset=36), 'tb_frame', Load(), lineno=560, col_offset=36), 'f_code', Load(), lineno=560, col_offset=36), 'co_name', Load(), lineno=560, col_offset=36)], Load(), lineno=558, col_offset=33), lineno=557, col_offset=32)], True, lineno=556, col_offset=28), Assign([Name('exc_tb', Store(), lineno=561, col_offset=28)], Attribute(Name('exc_tb', Load(), lineno=561, col_offset=37), 'tb_next', Load(), lineno=561, col_offset=37), lineno=561, col_offset=28)], [], lineno=555, col_offset=24), Print(Attribute(Name('self', Load(), lineno=562, col_offset=31), '__stderr', Load(), lineno=562, col_offset=31), [BinOp(Str('%s: %s', lineno=562, col_offset=47), Mod(), Tuple([Name('exc_type', Load(), lineno=562, col_offset=59), Name('exc_value', Load(), lineno=562, col_offset=69)], Load(), lineno=562, col_offset=59), lineno=562, col_offset=47)], True, lineno=562, col_offset=24)], [Delete([Name('exc_type', Del(), lineno=566, col_offset=28), Name('exc_value', Del(), lineno=566, col_offset=38), Name('exc_tb', Del(), lineno=566, col_offset=49)], lineno=566, col_offset=24)], lineno=549, col_offset=20)], lineno=541, col_offset=16)], lineno=534, col_offset=12)], [If(Name('__debug__', Load(), lineno=568, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=569, col_offset=20), '_note', Load(), lineno=569, col_offset=20), [Str('%s.__bootstrap(): normal return', lineno=569, col_offset=31), Name('self', Load(), lineno=569, col_offset=66)], [], None, None, lineno=569, col_offset=20), lineno=569, col_offset=20)], [], lineno=568, col_offset=16)], lineno=529, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=575, col_offset=16), '__exc_clear', Load(), lineno=575, col_offset=16), [], [], None, None, lineno=575, col_offset=16), lineno=575, col_offset=16)], lineno=529, col_offset=12)], [With(Name('_active_limbo_lock', Load(), lineno=577, col_offset=17), None, [Expr(Call(Attribute(Name('self', Load(), lineno=578, col_offset=16), '__stop', Load(), lineno=578, col_offset=16), [], [], None, None, lineno=578, col_offset=16), lineno=578, col_offset=16), TryExcept([Delete([Subscript(Name('_active', Load(), lineno=582, col_offset=24), Index(Call(Name('_get_ident', Load(), lineno=582, col_offset=32), [], [], None, None, lineno=582, col_offset=32)), Del(), lineno=582, col_offset=24)], lineno=582, col_offset=20)], [ExceptHandler(None, None, [Pass( lineno=584, col_offset=20)], lineno=583, col_offset=16)], [], lineno=579, col_offset=16)], lineno=577, col_offset=17)], lineno=513, col_offset=8)], [], lineno=512, col_offset=4), FunctionDef('__stop', arguments([Name('self', Param(), lineno=586, col_offset=15)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=587, col_offset=8), '__block', Load(), lineno=587, col_offset=8), 'acquire', Load(), lineno=587, col_offset=8), [], [], None, None, lineno=587, col_offset=8), lineno=587, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=588, col_offset=8), '__stopped', Store(), lineno=588, col_offset=8)], Name('True', Load(), lineno=588, col_offset=25), lineno=588, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=589, col_offset=8), '__block', Load(), lineno=589, col_offset=8), 'notify_all', Load(), lineno=589, col_offset=8), [], [], None, None, lineno=589, col_offset=8), lineno=589, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=590, col_offset=8), '__block', Load(), lineno=590, col_offset=8), 'release', Load(), lineno=590, col_offset=8), [], [], None, None, lineno=590, col_offset=8), lineno=590, col_offset=8)], [], lineno=586, col_offset=4), FunctionDef('__delete', arguments([Name('self', Param(), lineno=592, col_offset=17)], None, None, []), [Expr(Str('Remove current thread from the dict of currently running threads.', lineno=593, col_offset=8), lineno=593, col_offset=8), TryExcept([With(Name('_active_limbo_lock', Load(), lineno=617, col_offset=17), None, [Delete([Subscript(Name('_active', Load(), lineno=618, col_offset=20), Index(Call(Name('_get_ident', Load(), lineno=618, col_offset=28), [], [], None, None, lineno=618, col_offset=28)), Del(), lineno=618, col_offset=20)], lineno=618, col_offset=16)], lineno=617, col_offset=17)], [ExceptHandler(Name('KeyError', Load(), lineno=623, col_offset=15), None, [If(Compare(Str('dummy_threading', lineno=624, col_offset=15), [NotIn()], [Attribute(Name('_sys', Load(), lineno=624, col_offset=40), 'modules', Load(), lineno=624, col_offset=40)], lineno=624, col_offset=15), [Raise(None, None, None, lineno=625, col_offset=16)], [], lineno=624, col_offset=12)], lineno=623, col_offset=8)], [], lineno=616, col_offset=8)], [], lineno=592, col_offset=4), FunctionDef('join', arguments([Name('self', Param(), lineno=627, col_offset=13), Name('timeout', Param(), lineno=627, col_offset=19)], None, None, [Name('None', Load(), lineno=627, col_offset=27)]), [If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=628, col_offset=15), '__initialized', Load(), lineno=628, col_offset=15), lineno=628, col_offset=11), [Raise(Call(Name('RuntimeError', Load(), lineno=629, col_offset=18), [Str('Thread.__init__() not called', lineno=629, col_offset=31)], [], None, None, lineno=629, col_offset=18), None, None, lineno=629, col_offset=12)], [], lineno=628, col_offset=8), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('self', Load(), lineno=630, col_offset=15), '__started', Load(), lineno=630, col_offset=15), 'is_set', Load(), lineno=630, col_offset=15), [], [], None, None, lineno=630, col_offset=15), lineno=630, col_offset=11), [Raise(Call(Name('RuntimeError', Load(), lineno=631, col_offset=18), [Str('cannot join thread before it is started', lineno=631, col_offset=31)], [], None, None, lineno=631, col_offset=18), None, None, lineno=631, col_offset=12)], [], lineno=630, col_offset=8), If(Compare(Name('self', Load(), lineno=632, col_offset=11), [Is()], [Call(Name('current_thread', Load(), lineno=632, col_offset=19), [], [], None, None, lineno=632, col_offset=19)], lineno=632, col_offset=11), [Raise(Call(Name('RuntimeError', Load(), lineno=633, col_offset=18), [Str('cannot join current thread', lineno=633, col_offset=31)], [], None, None, lineno=633, col_offset=18), None, None, lineno=633, col_offset=12)], [], lineno=632, col_offset=8), If(Name('__debug__', Load(), lineno=635, col_offset=11), [If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=636, col_offset=19), '__stopped', Load(), lineno=636, col_offset=19), lineno=636, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=637, col_offset=16), '_note', Load(), lineno=637, col_offset=16), [Str('%s.join(): waiting until thread stops', lineno=637, col_offset=27), Name('self', Load(), lineno=637, col_offset=68)], [], None, None, lineno=637, col_offset=16), lineno=637, col_offset=16)], [], lineno=636, col_offset=12)], [], lineno=635, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=638, col_offset=8), '__block', Load(), lineno=638, col_offset=8), 'acquire', Load(), lineno=638, col_offset=8), [], [], None, None, lineno=638, col_offset=8), lineno=638, col_offset=8), TryFinally([If(Compare(Name('timeout', Load(), lineno=640, col_offset=15), [Is()], [Name('None', Load(), lineno=640, col_offset=26)], lineno=640, col_offset=15), [While(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=641, col_offset=26), '__stopped', Load(), lineno=641, col_offset=26), lineno=641, col_offset=22), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=642, col_offset=20), '__block', Load(), lineno=642, col_offset=20), 'wait', Load(), lineno=642, col_offset=20), [], [], None, None, lineno=642, col_offset=20), lineno=642, col_offset=20)], [], lineno=641, col_offset=16), If(Name('__debug__', Load(), lineno=643, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=644, col_offset=20), '_note', Load(), lineno=644, col_offset=20), [Str('%s.join(): thread stopped', lineno=644, col_offset=31), Name('self', Load(), lineno=644, col_offset=60)], [], None, None, lineno=644, col_offset=20), lineno=644, col_offset=20)], [], lineno=643, col_offset=16)], [Assign([Name('deadline', Store(), lineno=646, col_offset=16)], BinOp(Call(Name('_time', Load(), lineno=646, col_offset=27), [], [], None, None, lineno=646, col_offset=27), Add(), Name('timeout', Load(), lineno=646, col_offset=37), lineno=646, col_offset=27), lineno=646, col_offset=16), While(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=647, col_offset=26), '__stopped', Load(), lineno=647, col_offset=26), lineno=647, col_offset=22), [Assign([Name('delay', Store(), lineno=648, col_offset=20)], BinOp(Name('deadline', Load(), lineno=648, col_offset=28), Sub(), Call(Name('_time', Load(), lineno=648, col_offset=39), [], [], None, None, lineno=648, col_offset=39), lineno=648, col_offset=28), lineno=648, col_offset=20), If(Compare(Name('delay', Load(), lineno=649, col_offset=23), [LtE()], [Num(0, lineno=649, col_offset=32)], lineno=649, col_offset=23), [If(Name('__debug__', Load(), lineno=650, col_offset=27), [Expr(Call(Attribute(Name('self', Load(), lineno=651, col_offset=28), '_note', Load(), lineno=651, col_offset=28), [Str('%s.join(): timed out', lineno=651, col_offset=39), Name('self', Load(), lineno=651, col_offset=63)], [], None, None, lineno=651, col_offset=28), lineno=651, col_offset=28)], [], lineno=650, col_offset=24), Break( lineno=652, col_offset=24)], [], lineno=649, col_offset=20), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=653, col_offset=20), '__block', Load(), lineno=653, col_offset=20), 'wait', Load(), lineno=653, col_offset=20), [Name('delay', Load(), lineno=653, col_offset=38)], [], None, None, lineno=653, col_offset=20), lineno=653, col_offset=20)], [If(Name('__debug__', Load(), lineno=655, col_offset=23), [Expr(Call(Attribute(Name('self', Load(), lineno=656, col_offset=24), '_note', Load(), lineno=656, col_offset=24), [Str('%s.join(): thread stopped', lineno=656, col_offset=35), Name('self', Load(), lineno=656, col_offset=64)], [], None, None, lineno=656, col_offset=24), lineno=656, col_offset=24)], [], lineno=655, col_offset=20)], lineno=647, col_offset=16)], lineno=640, col_offset=12)], [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=658, col_offset=12), '__block', Load(), lineno=658, col_offset=12), 'release', Load(), lineno=658, col_offset=12), [], [], None, None, lineno=658, col_offset=12), lineno=658, col_offset=12)], lineno=639, col_offset=8)], [], lineno=627, col_offset=4), FunctionDef('name', arguments([Name('self', Param(), lineno=661, col_offset=13)], None, None, []), [Assert(Attribute(Name('self', Load(), lineno=662, col_offset=15), '__initialized', Load(), lineno=662, col_offset=15), Str('Thread.__init__() not called', lineno=662, col_offset=35), lineno=662, col_offset=8), Return(Attribute(Name('self', Load(), lineno=663, col_offset=15), '__name', Load(), lineno=663, col_offset=15), lineno=663, col_offset=8)], [Name('property', Load(), lineno=660, col_offset=5)], lineno=660, col_offset=4), FunctionDef('name', arguments([Name('self', Param(), lineno=666, col_offset=13), Name('name', Param(), lineno=666, col_offset=19)], None, None, []), [Assert(Attribute(Name('self', Load(), lineno=667, col_offset=15), '__initialized', Load(), lineno=667, col_offset=15), Str('Thread.__init__() not called', lineno=667, col_offset=35), lineno=667, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=668, col_offset=8), '__name', Store(), lineno=668, col_offset=8)], Call(Name('str', Load(), lineno=668, col_offset=22), [Name('name', Load(), lineno=668, col_offset=26)], [], None, None, lineno=668, col_offset=22), lineno=668, col_offset=8)], [Attribute(Name('name', Load(), lineno=665, col_offset=5), 'setter', Load(), lineno=665, col_offset=5)], lineno=665, col_offset=4), FunctionDef('ident', arguments([Name('self', Param(), lineno=671, col_offset=14)], None, None, []), [Assert(Attribute(Name('self', Load(), lineno=672, col_offset=15), '__initialized', Load(), lineno=672, col_offset=15), Str('Thread.__init__() not called', lineno=672, col_offset=35), lineno=672, col_offset=8), Return(Attribute(Name('self', Load(), lineno=673, col_offset=15), '__ident', Load(), lineno=673, col_offset=15), lineno=673, col_offset=8)], [Name('property', Load(), lineno=670, col_offset=5)], lineno=670, col_offset=4), FunctionDef('isAlive', arguments([Name('self', Param(), lineno=675, col_offset=16)], None, None, []), [Assert(Attribute(Name('self', Load(), lineno=676, col_offset=15), '__initialized', Load(), lineno=676, col_offset=15), Str('Thread.__init__() not called', lineno=676, col_offset=35), lineno=676, col_offset=8), Return(BoolOp(And(), [Call(Attribute(Attribute(Name('self', Load(), lineno=677, col_offset=15), '__started', Load(), lineno=677, col_offset=15), 'is_set', Load(), lineno=677, col_offset=15), [], [], None, None, lineno=677, col_offset=15), UnaryOp(Not(), Attribute(Name('self', Load(), lineno=677, col_offset=47), '__stopped', Load(), lineno=677, col_offset=47), lineno=677, col_offset=43)], lineno=677, col_offset=15), lineno=677, col_offset=8)], [], lineno=675, col_offset=4), Assign([Name('is_alive', Store(), lineno=679, col_offset=4)], Name('isAlive', Load(), lineno=679, col_offset=15), lineno=679, col_offset=4), FunctionDef('daemon', arguments([Name('self', Param(), lineno=682, col_offset=15)], None, None, []), [Assert(Attribute(Name('self', Load(), lineno=683, col_offset=15), '__initialized', Load(), lineno=683, col_offset=15), Str('Thread.__init__() not called', lineno=683, col_offset=35), lineno=683, col_offset=8), Return(Attribute(Name('self', Load(), lineno=684, col_offset=15), '__daemonic', Load(), lineno=684, col_offset=15), lineno=684, col_offset=8)], [Name('property', Load(), lineno=681, col_offset=5)], lineno=681, col_offset=4), FunctionDef('daemon', arguments([Name('self', Param(), lineno=687, col_offset=15), Name('daemonic', Param(), lineno=687, col_offset=21)], None, None, []), [If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=688, col_offset=15), '__initialized', Load(), lineno=688, col_offset=15), lineno=688, col_offset=11), [Raise(Call(Name('RuntimeError', Load(), lineno=689, col_offset=18), [Str('Thread.__init__() not called', lineno=689, col_offset=31)], [], None, None, lineno=689, col_offset=18), None, None, lineno=689, col_offset=12)], [], lineno=688, col_offset=8), If(Call(Attribute(Attribute(Name('self', Load(), lineno=690, col_offset=11), '__started', Load(), lineno=690, col_offset=11), 'is_set', Load(), lineno=690, col_offset=11), [], [], None, None, lineno=690, col_offset=11), [Raise(Call(Name('RuntimeError', Load(), lineno=691, col_offset=18), [Str('cannot set daemon status of active thread', lineno=691, col_offset=31)], [], None, None, lineno=691, col_offset=18), None, None, lineno=691, col_offset=12)], [], lineno=690, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=692, col_offset=8), '__daemonic', Store(), lineno=692, col_offset=8)], Name('daemonic', Load(), lineno=692, col_offset=26), lineno=692, col_offset=8)], [Attribute(Name('daemon', Load(), lineno=686, col_offset=5), 'setter', Load(), lineno=686, col_offset=5)], lineno=686, col_offset=4), FunctionDef('isDaemon', arguments([Name('self', Param(), lineno=694, col_offset=17)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=695, col_offset=15), 'daemon', Load(), lineno=695, col_offset=15), lineno=695, col_offset=8)], [], lineno=694, col_offset=4), FunctionDef('setDaemon', arguments([Name('self', Param(), lineno=697, col_offset=18), Name('daemonic', Param(), lineno=697, col_offset=24)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=698, col_offset=8), 'daemon', Store(), lineno=698, col_offset=8)], Name('daemonic', Load(), lineno=698, col_offset=22), lineno=698, col_offset=8)], [], lineno=697, col_offset=4), FunctionDef('getName', arguments([Name('self', Param(), lineno=700, col_offset=16)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=701, col_offset=15), 'name', Load(), lineno=701, col_offset=15), lineno=701, col_offset=8)], [], lineno=700, col_offset=4), FunctionDef('setName', arguments([Name('self', Param(), lineno=703, col_offset=16), Name('name', Param(), lineno=703, col_offset=22)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=704, col_offset=8), 'name', Store(), lineno=704, col_offset=8)], Name('name', Load(), lineno=704, col_offset=20), lineno=704, col_offset=8)], [], lineno=703, col_offset=4)], [], lineno=414, col_offset=0), FunctionDef('Timer', arguments([], 'args', 'kwargs', []), [Return(Call(Name('_Timer', Load(), lineno=709, col_offset=11), [], [], Name('args', Load(), lineno=709, col_offset=19), Name('kwargs', Load(), lineno=709, col_offset=27), lineno=709, col_offset=11), lineno=709, col_offset=4)], [], lineno=708, col_offset=0), ClassDef('_Timer', [Name('Thread', Load(), lineno=711, col_offset=13)], [Expr(Str("Call a function after a specified number of seconds:\n\n    t = Timer(30.0, f, args=[], kwargs={})\n    t.start()\n    t.cancel() # stop the timer's action if it's still waiting\n    ", lineno=717, col_offset=-1), lineno=717, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=719, col_offset=17), Name('interval', Param(), lineno=719, col_offset=23), Name('function', Param(), lineno=719, col_offset=33), Name('args', Param(), lineno=719, col_offset=43), Name('kwargs', Param(), lineno=719, col_offset=52)], None, None, [List([], Load(), lineno=719, col_offset=48), Dict([], [], lineno=719, col_offset=59)]), [Expr(Call(Attribute(Name('Thread', Load(), lineno=720, col_offset=8), '__init__', Load(), lineno=720, col_offset=8), [Name('self', Load(), lineno=720, col_offset=24)], [], None, None, lineno=720, col_offset=8), lineno=720, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=721, col_offset=8), 'interval', Store(), lineno=721, col_offset=8)], Name('interval', Load(), lineno=721, col_offset=24), lineno=721, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=722, col_offset=8), 'function', Store(), lineno=722, col_offset=8)], Name('function', Load(), lineno=722, col_offset=24), lineno=722, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=723, col_offset=8), 'args', Store(), lineno=723, col_offset=8)], Name('args', Load(), lineno=723, col_offset=20), lineno=723, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=724, col_offset=8), 'kwargs', Store(), lineno=724, col_offset=8)], Name('kwargs', Load(), lineno=724, col_offset=22), lineno=724, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=725, col_offset=8), 'finished', Store(), lineno=725, col_offset=8)], Call(Name('Event', Load(), lineno=725, col_offset=24), [], [], None, None, lineno=725, col_offset=24), lineno=725, col_offset=8)], [], lineno=719, col_offset=4), FunctionDef('cancel', arguments([Name('self', Param(), lineno=727, col_offset=15)], None, None, []), [Expr(Str("Stop the timer if it hasn't finished yet", lineno=728, col_offset=8), lineno=728, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=729, col_offset=8), 'finished', Load(), lineno=729, col_offset=8), 'set', Load(), lineno=729, col_offset=8), [], [], None, None, lineno=729, col_offset=8), lineno=729, col_offset=8)], [], lineno=727, col_offset=4), FunctionDef('run', arguments([Name('self', Param(), lineno=731, col_offset=12)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=732, col_offset=8), 'finished', Load(), lineno=732, col_offset=8), 'wait', Load(), lineno=732, col_offset=8), [Attribute(Name('self', Load(), lineno=732, col_offset=27), 'interval', Load(), lineno=732, col_offset=27)], [], None, None, lineno=732, col_offset=8), lineno=732, col_offset=8), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('self', Load(), lineno=733, col_offset=15), 'finished', Load(), lineno=733, col_offset=15), 'is_set', Load(), lineno=733, col_offset=15), [], [], None, None, lineno=733, col_offset=15), lineno=733, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=734, col_offset=12), 'function', Load(), lineno=734, col_offset=12), [], [], Attribute(Name('self', Load(), lineno=734, col_offset=27), 'args', Load(), lineno=734, col_offset=27), Attribute(Name('self', Load(), lineno=734, col_offset=40), 'kwargs', Load(), lineno=734, col_offset=40), lineno=734, col_offset=12), lineno=734, col_offset=12)], [], lineno=733, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=735, col_offset=8), 'finished', Load(), lineno=735, col_offset=8), 'set', Load(), lineno=735, col_offset=8), [], [], None, None, lineno=735, col_offset=8), lineno=735, col_offset=8)], [], lineno=731, col_offset=4)], [], lineno=711, col_offset=0), ClassDef('_MainThread', [Name('Thread', Load(), lineno=740, col_offset=18)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=742, col_offset=17)], None, None, []), [Expr(Call(Attribute(Name('Thread', Load(), lineno=743, col_offset=8), '__init__', Load(), lineno=743, col_offset=8), [Name('self', Load(), lineno=743, col_offset=24)], [keyword('name', Str('MainThread', lineno=743, col_offset=35))], None, None, lineno=743, col_offset=8), lineno=743, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=744, col_offset=8), '_Thread__started', Load(), lineno=744, col_offset=8), 'set', Load(), lineno=744, col_offset=8), [], [], None, None, lineno=744, col_offset=8), lineno=744, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=745, col_offset=8), '_set_ident', Load(), lineno=745, col_offset=8), [], [], None, None, lineno=745, col_offset=8), lineno=745, col_offset=8), With(Name('_active_limbo_lock', Load(), lineno=746, col_offset=13), None, [Assign([Subscript(Name('_active', Load(), lineno=747, col_offset=12), Index(Call(Name('_get_ident', Load(), lineno=747, col_offset=20), [], [], None, None, lineno=747, col_offset=20)), Store(), lineno=747, col_offset=12)], Name('self', Load(), lineno=747, col_offset=36), lineno=747, col_offset=12)], lineno=746, col_offset=13)], [], lineno=742, col_offset=4), FunctionDef('_set_daemon', arguments([Name('self', Param(), lineno=749, col_offset=20)], None, None, []), [Return(Name('False', Load(), lineno=750, col_offset=15), lineno=750, col_offset=8)], [], lineno=749, col_offset=4), FunctionDef('_exitfunc', arguments([Name('self', Param(), lineno=752, col_offset=18)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=753, col_offset=8), '_Thread__stop', Load(), lineno=753, col_offset=8), [], [], None, None, lineno=753, col_offset=8), lineno=753, col_offset=8), Assign([Name('t', Store(), lineno=754, col_offset=8)], Call(Name('_pickSomeNonDaemonThread', Load(), lineno=754, col_offset=12), [], [], None, None, lineno=754, col_offset=12), lineno=754, col_offset=8), If(Name('t', Load(), lineno=755, col_offset=11), [If(Name('__debug__', Load(), lineno=756, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=757, col_offset=16), '_note', Load(), lineno=757, col_offset=16), [Str('%s: waiting for other threads', lineno=757, col_offset=27), Name('self', Load(), lineno=757, col_offset=60)], [], None, None, lineno=757, col_offset=16), lineno=757, col_offset=16)], [], lineno=756, col_offset=12)], [], lineno=755, col_offset=8), While(Name('t', Load(), lineno=758, col_offset=14), [Expr(Call(Attribute(Name('t', Load(), lineno=759, col_offset=12), 'join', Load(), lineno=759, col_offset=12), [], [], None, None, lineno=759, col_offset=12), lineno=759, col_offset=12), Assign([Name('t', Store(), lineno=760, col_offset=12)], Call(Name('_pickSomeNonDaemonThread', Load(), lineno=760, col_offset=16), [], [], None, None, lineno=760, col_offset=16), lineno=760, col_offset=12)], [], lineno=758, col_offset=8), If(Name('__debug__', Load(), lineno=761, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=762, col_offset=12), '_note', Load(), lineno=762, col_offset=12), [Str('%s: exiting', lineno=762, col_offset=23), Name('self', Load(), lineno=762, col_offset=38)], [], None, None, lineno=762, col_offset=12), lineno=762, col_offset=12)], [], lineno=761, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=763, col_offset=8), '_Thread__delete', Load(), lineno=763, col_offset=8), [], [], None, None, lineno=763, col_offset=8), lineno=763, col_offset=8)], [], lineno=752, col_offset=4)], [], lineno=740, col_offset=0), FunctionDef('_pickSomeNonDaemonThread', arguments([], None, None, []), [For(Name('t', Store(), lineno=766, col_offset=8), Call(Name('enumerate', Load(), lineno=766, col_offset=13), [], [], None, None, lineno=766, col_offset=13), [If(BoolOp(And(), [UnaryOp(Not(), Attribute(Name('t', Load(), lineno=767, col_offset=15), 'daemon', Load(), lineno=767, col_offset=15), lineno=767, col_offset=11), Call(Attribute(Name('t', Load(), lineno=767, col_offset=28), 'is_alive', Load(), lineno=767, col_offset=28), [], [], None, None, lineno=767, col_offset=28)], lineno=767, col_offset=11), [Return(Name('t', Load(), lineno=768, col_offset=19), lineno=768, col_offset=12)], [], lineno=767, col_offset=8)], [], lineno=766, col_offset=4), Return(Name('None', Load(), lineno=769, col_offset=11), lineno=769, col_offset=4)], [], lineno=765, col_offset=0), ClassDef('_DummyThread', [Name('Thread', Load(), lineno=780, col_offset=19)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=782, col_offset=17)], None, None, []), [Expr(Call(Attribute(Name('Thread', Load(), lineno=783, col_offset=8), '__init__', Load(), lineno=783, col_offset=8), [Name('self', Load(), lineno=783, col_offset=24)], [keyword('name', Call(Name('_newname', Load(), lineno=783, col_offset=35), [Str('Dummy-%d', lineno=783, col_offset=44)], [], None, None, lineno=783, col_offset=35))], None, None, lineno=783, col_offset=8), lineno=783, col_offset=8), Delete([Attribute(Name('self', Load(), lineno=788, col_offset=12), '_Thread__block', Del(), lineno=788, col_offset=12)], lineno=788, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=790, col_offset=8), '_Thread__started', Load(), lineno=790, col_offset=8), 'set', Load(), lineno=790, col_offset=8), [], [], None, None, lineno=790, col_offset=8), lineno=790, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=791, col_offset=8), '_set_ident', Load(), lineno=791, col_offset=8), [], [], None, None, lineno=791, col_offset=8), lineno=791, col_offset=8), With(Name('_active_limbo_lock', Load(), lineno=792, col_offset=13), None, [Assign([Subscript(Name('_active', Load(), lineno=793, col_offset=12), Index(Call(Name('_get_ident', Load(), lineno=793, col_offset=20), [], [], None, None, lineno=793, col_offset=20)), Store(), lineno=793, col_offset=12)], Name('self', Load(), lineno=793, col_offset=36), lineno=793, col_offset=12)], lineno=792, col_offset=13)], [], lineno=782, col_offset=4), FunctionDef('_set_daemon', arguments([Name('self', Param(), lineno=795, col_offset=20)], None, None, []), [Return(Name('True', Load(), lineno=796, col_offset=15), lineno=796, col_offset=8)], [], lineno=795, col_offset=4), FunctionDef('join', arguments([Name('self', Param(), lineno=798, col_offset=13), Name('timeout', Param(), lineno=798, col_offset=19)], None, None, [Name('None', Load(), lineno=798, col_offset=27)]), [Assert(Name('False', Load(), lineno=799, col_offset=15), Str('cannot join a dummy thread', lineno=799, col_offset=22), lineno=799, col_offset=8)], [], lineno=798, col_offset=4)], [], lineno=780, col_offset=0), FunctionDef('currentThread', arguments([], None, None, []), [TryExcept([Return(Subscript(Name('_active', Load(), lineno=806, col_offset=15), Index(Call(Name('_get_ident', Load(), lineno=806, col_offset=23), [], [], None, None, lineno=806, col_offset=23)), Load(), lineno=806, col_offset=15), lineno=806, col_offset=8)], [ExceptHandler(Name('KeyError', Load(), lineno=807, col_offset=11), None, [Return(Call(Name('_DummyThread', Load(), lineno=809, col_offset=15), [], [], None, None, lineno=809, col_offset=15), lineno=809, col_offset=8)], lineno=807, col_offset=4)], [], lineno=805, col_offset=4)], [], lineno=804, col_offset=0), Assign([Name('current_thread', Store(), lineno=811, col_offset=0)], Name('currentThread', Load(), lineno=811, col_offset=17), lineno=811, col_offset=0), FunctionDef('activeCount', arguments([], None, None, []), [With(Name('_active_limbo_lock', Load(), lineno=814, col_offset=9), None, [Return(BinOp(Call(Name('len', Load(), lineno=815, col_offset=15), [Name('_active', Load(), lineno=815, col_offset=19)], [], None, None, lineno=815, col_offset=15), Add(), Call(Name('len', Load(), lineno=815, col_offset=30), [Name('_limbo', Load(), lineno=815, col_offset=34)], [], None, None, lineno=815, col_offset=30), lineno=815, col_offset=15), lineno=815, col_offset=8)], lineno=814, col_offset=9)], [], lineno=813, col_offset=0), Assign([Name('active_count', Store(), lineno=817, col_offset=0)], Name('activeCount', Load(), lineno=817, col_offset=15), lineno=817, col_offset=0), FunctionDef('_enumerate', arguments([], None, None, []), [Return(BinOp(Call(Attribute(Name('_active', Load(), lineno=821, col_offset=11), 'values', Load(), lineno=821, col_offset=11), [], [], None, None, lineno=821, col_offset=11), Add(), Call(Attribute(Name('_limbo', Load(), lineno=821, col_offset=30), 'values', Load(), lineno=821, col_offset=30), [], [], None, None, lineno=821, col_offset=30), lineno=821, col_offset=11), lineno=821, col_offset=4)], [], lineno=819, col_offset=0), FunctionDef('enumerate', arguments([], None, None, []), [With(Name('_active_limbo_lock', Load(), lineno=824, col_offset=9), None, [Return(BinOp(Call(Attribute(Name('_active', Load(), lineno=825, col_offset=15), 'values', Load(), lineno=825, col_offset=15), [], [], None, None, lineno=825, col_offset=15), Add(), Call(Attribute(Name('_limbo', Load(), lineno=825, col_offset=34), 'values', Load(), lineno=825, col_offset=34), [], [], None, None, lineno=825, col_offset=34), lineno=825, col_offset=15), lineno=825, col_offset=8)], lineno=824, col_offset=9)], [], lineno=823, col_offset=0), ImportFrom('thread', [alias('stack_size', None)], 0, lineno=827, col_offset=0), Assign([Name('_shutdown', Store(), lineno=833, col_offset=0)], Attribute(Call(Name('_MainThread', Load(), lineno=833, col_offset=12), [], [], None, None, lineno=833, col_offset=12), '_exitfunc', Load(), lineno=833, col_offset=12), lineno=833, col_offset=0), TryExcept([ImportFrom('thread', [alias('_local', 'local')], 0, lineno=839, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=840, col_offset=7), None, [ImportFrom('_threading_local', [alias('local', None)], 0, lineno=841, col_offset=4)], lineno=840, col_offset=0)], [], lineno=838, col_offset=0), FunctionDef('_after_fork', arguments([], None, None, []), [Global(['_active_limbo_lock'], lineno=851, col_offset=4), Assign([Name('_active_limbo_lock', Store(), lineno=852, col_offset=4)], Call(Name('_allocate_lock', Load(), lineno=852, col_offset=25), [], [], None, None, lineno=852, col_offset=25), lineno=852, col_offset=4), Assign([Name('new_active', Store(), lineno=855, col_offset=4)], Dict([], [], lineno=855, col_offset=17), lineno=855, col_offset=4), Assign([Name('current', Store(), lineno=856, col_offset=4)], Call(Name('current_thread', Load(), lineno=856, col_offset=14), [], [], None, None, lineno=856, col_offset=14), lineno=856, col_offset=4), With(Name('_active_limbo_lock', Load(), lineno=857, col_offset=9), None, [For(Name('thread', Store(), lineno=858, col_offset=12), Call(Attribute(Name('_active', Load(), lineno=858, col_offset=22), 'itervalues', Load(), lineno=858, col_offset=22), [], [], None, None, lineno=858, col_offset=22), [If(Compare(Name('thread', Load(), lineno=859, col_offset=15), [Is()], [Name('current', Load(), lineno=859, col_offset=25)], lineno=859, col_offset=15), [Assign([Name('ident', Store(), lineno=862, col_offset=16)], Call(Name('_get_ident', Load(), lineno=862, col_offset=24), [], [], None, None, lineno=862, col_offset=24), lineno=862, col_offset=16), Assign([Attribute(Name('thread', Load(), lineno=863, col_offset=16), '_Thread__ident', Store(), lineno=863, col_offset=16)], Name('ident', Load(), lineno=863, col_offset=40), lineno=863, col_offset=16), Assign([Subscript(Name('new_active', Load(), lineno=864, col_offset=16), Index(Name('ident', Load(), lineno=864, col_offset=27)), Store(), lineno=864, col_offset=16)], Name('thread', Load(), lineno=864, col_offset=36), lineno=864, col_offset=16)], [Assign([Attribute(Name('thread', Load(), lineno=870, col_offset=16), '_Thread__stopped', Store(), lineno=870, col_offset=16)], Name('True', Load(), lineno=870, col_offset=42), lineno=870, col_offset=16)], lineno=859, col_offset=12)], [], lineno=858, col_offset=8), Expr(Call(Attribute(Name('_limbo', Load(), lineno=872, col_offset=8), 'clear', Load(), lineno=872, col_offset=8), [], [], None, None, lineno=872, col_offset=8), lineno=872, col_offset=8), Expr(Call(Attribute(Name('_active', Load(), lineno=873, col_offset=8), 'clear', Load(), lineno=873, col_offset=8), [], [], None, None, lineno=873, col_offset=8), lineno=873, col_offset=8), Expr(Call(Attribute(Name('_active', Load(), lineno=874, col_offset=8), 'update', Load(), lineno=874, col_offset=8), [Name('new_active', Load(), lineno=874, col_offset=23)], [], None, None, lineno=874, col_offset=8), lineno=874, col_offset=8), Assert(Compare(Call(Name('len', Load(), lineno=875, col_offset=15), [Name('_active', Load(), lineno=875, col_offset=19)], [], None, None, lineno=875, col_offset=15), [Eq()], [Num(1, lineno=875, col_offset=31)], lineno=875, col_offset=15), None, lineno=875, col_offset=8)], lineno=857, col_offset=9)], [], lineno=844, col_offset=0), FunctionDef('_test', arguments([], None, None, []), [ClassDef('BoundedQueue', [Name('_Verbose', Load(), lineno=882, col_offset=23)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=884, col_offset=21), Name('limit', Param(), lineno=884, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('_Verbose', Load(), lineno=885, col_offset=12), '__init__', Load(), lineno=885, col_offset=12), [Name('self', Load(), lineno=885, col_offset=30)], [], None, None, lineno=885, col_offset=12), lineno=885, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=886, col_offset=12), 'mon', Store(), lineno=886, col_offset=12)], Call(Name('RLock', Load(), lineno=886, col_offset=23), [], [], None, None, lineno=886, col_offset=23), lineno=886, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=887, col_offset=12), 'rc', Store(), lineno=887, col_offset=12)], Call(Name('Condition', Load(), lineno=887, col_offset=22), [Attribute(Name('self', Load(), lineno=887, col_offset=32), 'mon', Load(), lineno=887, col_offset=32)], [], None, None, lineno=887, col_offset=22), lineno=887, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=888, col_offset=12), 'wc', Store(), lineno=888, col_offset=12)], Call(Name('Condition', Load(), lineno=888, col_offset=22), [Attribute(Name('self', Load(), lineno=888, col_offset=32), 'mon', Load(), lineno=888, col_offset=32)], [], None, None, lineno=888, col_offset=22), lineno=888, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=889, col_offset=12), 'limit', Store(), lineno=889, col_offset=12)], Name('limit', Load(), lineno=889, col_offset=25), lineno=889, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=890, col_offset=12), 'queue', Store(), lineno=890, col_offset=12)], Call(Name('deque', Load(), lineno=890, col_offset=25), [], [], None, None, lineno=890, col_offset=25), lineno=890, col_offset=12)], [], lineno=884, col_offset=8), FunctionDef('put', arguments([Name('self', Param(), lineno=892, col_offset=16), Name('item', Param(), lineno=892, col_offset=22)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=893, col_offset=12), 'mon', Load(), lineno=893, col_offset=12), 'acquire', Load(), lineno=893, col_offset=12), [], [], None, None, lineno=893, col_offset=12), lineno=893, col_offset=12), While(Compare(Call(Name('len', Load(), lineno=894, col_offset=18), [Attribute(Name('self', Load(), lineno=894, col_offset=22), 'queue', Load(), lineno=894, col_offset=22)], [], None, None, lineno=894, col_offset=18), [GtE()], [Attribute(Name('self', Load(), lineno=894, col_offset=37), 'limit', Load(), lineno=894, col_offset=37)], lineno=894, col_offset=18), [Expr(Call(Attribute(Name('self', Load(), lineno=895, col_offset=16), '_note', Load(), lineno=895, col_offset=16), [Str('put(%s): queue full', lineno=895, col_offset=27), Name('item', Load(), lineno=895, col_offset=50)], [], None, None, lineno=895, col_offset=16), lineno=895, col_offset=16), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=896, col_offset=16), 'wc', Load(), lineno=896, col_offset=16), 'wait', Load(), lineno=896, col_offset=16), [], [], None, None, lineno=896, col_offset=16), lineno=896, col_offset=16)], [], lineno=894, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=897, col_offset=12), 'queue', Load(), lineno=897, col_offset=12), 'append', Load(), lineno=897, col_offset=12), [Name('item', Load(), lineno=897, col_offset=30)], [], None, None, lineno=897, col_offset=12), lineno=897, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=898, col_offset=12), '_note', Load(), lineno=898, col_offset=12), [Str('put(%s): appended, length now %d', lineno=898, col_offset=23), Name('item', Load(), lineno=899, col_offset=23), Call(Name('len', Load(), lineno=899, col_offset=29), [Attribute(Name('self', Load(), lineno=899, col_offset=33), 'queue', Load(), lineno=899, col_offset=33)], [], None, None, lineno=899, col_offset=29)], [], None, None, lineno=898, col_offset=12), lineno=898, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=900, col_offset=12), 'rc', Load(), lineno=900, col_offset=12), 'notify', Load(), lineno=900, col_offset=12), [], [], None, None, lineno=900, col_offset=12), lineno=900, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=901, col_offset=12), 'mon', Load(), lineno=901, col_offset=12), 'release', Load(), lineno=901, col_offset=12), [], [], None, None, lineno=901, col_offset=12), lineno=901, col_offset=12)], [], lineno=892, col_offset=8), FunctionDef('get', arguments([Name('self', Param(), lineno=903, col_offset=16)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=904, col_offset=12), 'mon', Load(), lineno=904, col_offset=12), 'acquire', Load(), lineno=904, col_offset=12), [], [], None, None, lineno=904, col_offset=12), lineno=904, col_offset=12), While(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=905, col_offset=22), 'queue', Load(), lineno=905, col_offset=22), lineno=905, col_offset=18), [Expr(Call(Attribute(Name('self', Load(), lineno=906, col_offset=16), '_note', Load(), lineno=906, col_offset=16), [Str('get(): queue empty', lineno=906, col_offset=27)], [], None, None, lineno=906, col_offset=16), lineno=906, col_offset=16), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=907, col_offset=16), 'rc', Load(), lineno=907, col_offset=16), 'wait', Load(), lineno=907, col_offset=16), [], [], None, None, lineno=907, col_offset=16), lineno=907, col_offset=16)], [], lineno=905, col_offset=12), Assign([Name('item', Store(), lineno=908, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=908, col_offset=19), 'queue', Load(), lineno=908, col_offset=19), 'popleft', Load(), lineno=908, col_offset=19), [], [], None, None, lineno=908, col_offset=19), lineno=908, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=909, col_offset=12), '_note', Load(), lineno=909, col_offset=12), [Str('get(): got %s, %d left', lineno=909, col_offset=23), Name('item', Load(), lineno=909, col_offset=49), Call(Name('len', Load(), lineno=909, col_offset=55), [Attribute(Name('self', Load(), lineno=909, col_offset=59), 'queue', Load(), lineno=909, col_offset=59)], [], None, None, lineno=909, col_offset=55)], [], None, None, lineno=909, col_offset=12), lineno=909, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=910, col_offset=12), 'wc', Load(), lineno=910, col_offset=12), 'notify', Load(), lineno=910, col_offset=12), [], [], None, None, lineno=910, col_offset=12), lineno=910, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=911, col_offset=12), 'mon', Load(), lineno=911, col_offset=12), 'release', Load(), lineno=911, col_offset=12), [], [], None, None, lineno=911, col_offset=12), lineno=911, col_offset=12), Return(Name('item', Load(), lineno=912, col_offset=19), lineno=912, col_offset=12)], [], lineno=903, col_offset=8)], [], lineno=882, col_offset=4), ClassDef('ProducerThread', [Name('Thread', Load(), lineno=914, col_offset=25)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=916, col_offset=21), Name('queue', Param(), lineno=916, col_offset=27), Name('quota', Param(), lineno=916, col_offset=34)], None, None, []), [Expr(Call(Attribute(Name('Thread', Load(), lineno=917, col_offset=12), '__init__', Load(), lineno=917, col_offset=12), [Name('self', Load(), lineno=917, col_offset=28)], [keyword('name', Str('Producer', lineno=917, col_offset=39))], None, None, lineno=917, col_offset=12), lineno=917, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=918, col_offset=12), 'queue', Store(), lineno=918, col_offset=12)], Name('queue', Load(), lineno=918, col_offset=25), lineno=918, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=919, col_offset=12), 'quota', Store(), lineno=919, col_offset=12)], Name('quota', Load(), lineno=919, col_offset=25), lineno=919, col_offset=12)], [], lineno=916, col_offset=8), FunctionDef('run', arguments([Name('self', Param(), lineno=921, col_offset=16)], None, None, []), [ImportFrom('random', [alias('random', None)], 0, lineno=922, col_offset=12), Assign([Name('counter', Store(), lineno=923, col_offset=12)], Num(0, lineno=923, col_offset=22), lineno=923, col_offset=12), While(Compare(Name('counter', Load(), lineno=924, col_offset=18), [Lt()], [Attribute(Name('self', Load(), lineno=924, col_offset=28), 'quota', Load(), lineno=924, col_offset=28)], lineno=924, col_offset=18), [Assign([Name('counter', Store(), lineno=925, col_offset=16)], BinOp(Name('counter', Load(), lineno=925, col_offset=26), Add(), Num(1, lineno=925, col_offset=36), lineno=925, col_offset=26), lineno=925, col_offset=16), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=926, col_offset=16), 'queue', Load(), lineno=926, col_offset=16), 'put', Load(), lineno=926, col_offset=16), [BinOp(Str('%s.%d', lineno=926, col_offset=31), Mod(), Tuple([Attribute(Name('self', Load(), lineno=926, col_offset=42), 'name', Load(), lineno=926, col_offset=42), Name('counter', Load(), lineno=926, col_offset=53)], Load(), lineno=926, col_offset=42), lineno=926, col_offset=31)], [], None, None, lineno=926, col_offset=16), lineno=926, col_offset=16), Expr(Call(Name('_sleep', Load(), lineno=927, col_offset=16), [BinOp(Call(Name('random', Load(), lineno=927, col_offset=23), [], [], None, None, lineno=927, col_offset=23), Mult(), Num(1e-05, lineno=927, col_offset=34), lineno=927, col_offset=23)], [], None, None, lineno=927, col_offset=16), lineno=927, col_offset=16)], [], lineno=924, col_offset=12)], [], lineno=921, col_offset=8)], [], lineno=914, col_offset=4), ClassDef('ConsumerThread', [Name('Thread', Load(), lineno=930, col_offset=25)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=932, col_offset=21), Name('queue', Param(), lineno=932, col_offset=27), Name('count', Param(), lineno=932, col_offset=34)], None, None, []), [Expr(Call(Attribute(Name('Thread', Load(), lineno=933, col_offset=12), '__init__', Load(), lineno=933, col_offset=12), [Name('self', Load(), lineno=933, col_offset=28)], [keyword('name', Str('Consumer', lineno=933, col_offset=39))], None, None, lineno=933, col_offset=12), lineno=933, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=934, col_offset=12), 'queue', Store(), lineno=934, col_offset=12)], Name('queue', Load(), lineno=934, col_offset=25), lineno=934, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=935, col_offset=12), 'count', Store(), lineno=935, col_offset=12)], Name('count', Load(), lineno=935, col_offset=25), lineno=935, col_offset=12)], [], lineno=932, col_offset=8), FunctionDef('run', arguments([Name('self', Param(), lineno=937, col_offset=16)], None, None, []), [While(Compare(Attribute(Name('self', Load(), lineno=938, col_offset=18), 'count', Load(), lineno=938, col_offset=18), [Gt()], [Num(0, lineno=938, col_offset=31)], lineno=938, col_offset=18), [Assign([Name('item', Store(), lineno=939, col_offset=16)], Call(Attribute(Attribute(Name('self', Load(), lineno=939, col_offset=23), 'queue', Load(), lineno=939, col_offset=23), 'get', Load(), lineno=939, col_offset=23), [], [], None, None, lineno=939, col_offset=23), lineno=939, col_offset=16), Print(None, [Name('item', Load(), lineno=940, col_offset=22)], True, lineno=940, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=941, col_offset=16), 'count', Store(), lineno=941, col_offset=16)], BinOp(Attribute(Name('self', Load(), lineno=941, col_offset=29), 'count', Load(), lineno=941, col_offset=29), Sub(), Num(1, lineno=941, col_offset=42), lineno=941, col_offset=29), lineno=941, col_offset=16)], [], lineno=938, col_offset=12)], [], lineno=937, col_offset=8)], [], lineno=930, col_offset=4), Assign([Name('NP', Store(), lineno=943, col_offset=4)], Num(3, lineno=943, col_offset=9), lineno=943, col_offset=4), Assign([Name('QL', Store(), lineno=944, col_offset=4)], Num(4, lineno=944, col_offset=9), lineno=944, col_offset=4), Assign([Name('NI', Store(), lineno=945, col_offset=4)], Num(5, lineno=945, col_offset=9), lineno=945, col_offset=4), Assign([Name('Q', Store(), lineno=947, col_offset=4)], Call(Name('BoundedQueue', Load(), lineno=947, col_offset=8), [Name('QL', Load(), lineno=947, col_offset=21)], [], None, None, lineno=947, col_offset=8), lineno=947, col_offset=4), Assign([Name('P', Store(), lineno=948, col_offset=4)], List([], Load(), lineno=948, col_offset=8), lineno=948, col_offset=4), For(Name('i', Store(), lineno=949, col_offset=8), Call(Name('range', Load(), lineno=949, col_offset=13), [Name('NP', Load(), lineno=949, col_offset=19)], [], None, None, lineno=949, col_offset=13), [Assign([Name('t', Store(), lineno=950, col_offset=8)], Call(Name('ProducerThread', Load(), lineno=950, col_offset=12), [Name('Q', Load(), lineno=950, col_offset=27), Name('NI', Load(), lineno=950, col_offset=30)], [], None, None, lineno=950, col_offset=12), lineno=950, col_offset=8), Assign([Attribute(Name('t', Load(), lineno=951, col_offset=8), 'name', Store(), lineno=951, col_offset=8)], BinOp(Str('Producer-%d', lineno=951, col_offset=18), Mod(), BinOp(Name('i', Load(), lineno=951, col_offset=35), Add(), Num(1, lineno=951, col_offset=37), lineno=951, col_offset=35), lineno=951, col_offset=18), lineno=951, col_offset=8), Expr(Call(Attribute(Name('P', Load(), lineno=952, col_offset=8), 'append', Load(), lineno=952, col_offset=8), [Name('t', Load(), lineno=952, col_offset=17)], [], None, None, lineno=952, col_offset=8), lineno=952, col_offset=8)], [], lineno=949, col_offset=4), Assign([Name('C', Store(), lineno=953, col_offset=4)], Call(Name('ConsumerThread', Load(), lineno=953, col_offset=8), [Name('Q', Load(), lineno=953, col_offset=23), BinOp(Name('NI', Load(), lineno=953, col_offset=26), Mult(), Name('NP', Load(), lineno=953, col_offset=29), lineno=953, col_offset=26)], [], None, None, lineno=953, col_offset=8), lineno=953, col_offset=4), For(Name('t', Store(), lineno=954, col_offset=8), Name('P', Load(), lineno=954, col_offset=13), [Expr(Call(Attribute(Name('t', Load(), lineno=955, col_offset=8), 'start', Load(), lineno=955, col_offset=8), [], [], None, None, lineno=955, col_offset=8), lineno=955, col_offset=8), Expr(Call(Name('_sleep', Load(), lineno=956, col_offset=8), [Num(1e-06, lineno=956, col_offset=15)], [], None, None, lineno=956, col_offset=8), lineno=956, col_offset=8)], [], lineno=954, col_offset=4), Expr(Call(Attribute(Name('C', Load(), lineno=957, col_offset=4), 'start', Load(), lineno=957, col_offset=4), [], [], None, None, lineno=957, col_offset=4), lineno=957, col_offset=4), For(Name('t', Store(), lineno=958, col_offset=8), Name('P', Load(), lineno=958, col_offset=13), [Expr(Call(Attribute(Name('t', Load(), lineno=959, col_offset=8), 'join', Load(), lineno=959, col_offset=8), [], [], None, None, lineno=959, col_offset=8), lineno=959, col_offset=8)], [], lineno=958, col_offset=4), Expr(Call(Attribute(Name('C', Load(), lineno=960, col_offset=4), 'join', Load(), lineno=960, col_offset=4), [], [], None, None, lineno=960, col_offset=4), lineno=960, col_offset=4)], [], lineno=880, col_offset=0), If(Compare(Name('__name__', Load(), lineno=962, col_offset=3), [Eq()], [Str('__main__', lineno=962, col_offset=15)], lineno=962, col_offset=3), [Expr(Call(Name('_test', Load(), lineno=963, col_offset=4), [], [], None, None, lineno=963, col_offset=4), lineno=963, col_offset=4)], [], lineno=962, col_offset=0)])
