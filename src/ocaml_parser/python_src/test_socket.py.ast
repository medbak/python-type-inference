Module([Import([alias('unittest', None)], lineno=3, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=4, col_offset=0), Import([alias('errno', None)], lineno=6, col_offset=0), Import([alias('socket', None)], lineno=7, col_offset=0), Import([alias('select', None)], lineno=8, col_offset=0), Import([alias('time', None)], lineno=9, col_offset=0), Import([alias('traceback', None)], lineno=10, col_offset=0), Import([alias('Queue', None)], lineno=11, col_offset=0), Import([alias('sys', None)], lineno=12, col_offset=0), Import([alias('os', None)], lineno=13, col_offset=0), Import([alias('array', None)], lineno=14, col_offset=0), Import([alias('contextlib', None)], lineno=15, col_offset=0), ImportFrom('weakref', [alias('proxy', None)], 0, lineno=16, col_offset=0), Import([alias('signal', None)], lineno=17, col_offset=0), Import([alias('math', None)], lineno=18, col_offset=0), FunctionDef('try_address', arguments([Name('host', Param(), lineno=20, col_offset=16), Name('port', Param(), lineno=20, col_offset=22), Name('family', Param(), lineno=20, col_offset=30)], None, None, [Num(0, lineno=20, col_offset=27), Attribute(Name('socket', Load(), lineno=20, col_offset=37), 'AF_INET', Load(), lineno=20, col_offset=37)]), [Expr(Str('Try to bind a socket on the given host:port and return True\n    if that has been possible.', lineno=22, col_offset=-1), lineno=22, col_offset=-1), TryExcept([Assign([Name('sock', Store(), lineno=24, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=24, col_offset=15), 'socket', Load(), lineno=24, col_offset=15), [Name('family', Load(), lineno=24, col_offset=29), Attribute(Name('socket', Load(), lineno=24, col_offset=37), 'SOCK_STREAM', Load(), lineno=24, col_offset=37)], [], None, None, lineno=24, col_offset=15), lineno=24, col_offset=8), Expr(Call(Attribute(Name('sock', Load(), lineno=25, col_offset=8), 'bind', Load(), lineno=25, col_offset=8), [Tuple([Name('host', Load(), lineno=25, col_offset=19), Name('port', Load(), lineno=25, col_offset=25)], Load(), lineno=25, col_offset=19)], [], None, None, lineno=25, col_offset=8), lineno=25, col_offset=8)], [ExceptHandler(Tuple([Attribute(Name('socket', Load(), lineno=26, col_offset=12), 'error', Load(), lineno=26, col_offset=12), Attribute(Name('socket', Load(), lineno=26, col_offset=26), 'gaierror', Load(), lineno=26, col_offset=26)], Load(), lineno=26, col_offset=12), None, [Return(Name('False', Load(), lineno=27, col_offset=15), lineno=27, col_offset=8)], lineno=26, col_offset=4)], [Expr(Call(Attribute(Name('sock', Load(), lineno=29, col_offset=8), 'close', Load(), lineno=29, col_offset=8), [], [], None, None, lineno=29, col_offset=8), lineno=29, col_offset=8), Return(Name('True', Load(), lineno=30, col_offset=15), lineno=30, col_offset=8)], lineno=23, col_offset=4)], [], lineno=20, col_offset=0), Assign([Name('HOST', Store(), lineno=32, col_offset=0)], Attribute(Name('test_support', Load(), lineno=32, col_offset=7), 'HOST', Load(), lineno=32, col_offset=7), lineno=32, col_offset=0), Assign([Name('MSG', Store(), lineno=33, col_offset=0)], Str('Michael Gilfix was here\n', lineno=33, col_offset=6), lineno=33, col_offset=0), Assign([Name('SUPPORTS_IPV6', Store(), lineno=34, col_offset=0)], BoolOp(And(), [Attribute(Name('socket', Load(), lineno=34, col_offset=16), 'has_ipv6', Load(), lineno=34, col_offset=16), Call(Name('try_address', Load(), lineno=34, col_offset=36), [Str('::1', lineno=34, col_offset=48)], [keyword('family', Attribute(Name('socket', Load(), lineno=34, col_offset=62), 'AF_INET6', Load(), lineno=34, col_offset=62))], None, None, lineno=34, col_offset=36)], lineno=34, col_offset=16), lineno=34, col_offset=0), TryExcept([Import([alias('thread', None)], lineno=37, col_offset=4), Import([alias('threading', None)], lineno=38, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=39, col_offset=7), None, [Assign([Name('thread', Store(), lineno=40, col_offset=4)], Name('None', Load(), lineno=40, col_offset=13), lineno=40, col_offset=4), Assign([Name('threading', Store(), lineno=41, col_offset=4)], Name('None', Load(), lineno=41, col_offset=16), lineno=41, col_offset=4)], lineno=39, col_offset=0)], [], lineno=36, col_offset=0), Assign([Name('HOST', Store(), lineno=43, col_offset=0)], Attribute(Name('test_support', Load(), lineno=43, col_offset=7), 'HOST', Load(), lineno=43, col_offset=7), lineno=43, col_offset=0), Assign([Name('MSG', Store(), lineno=44, col_offset=0)], Str('Michael Gilfix was here\n', lineno=44, col_offset=6), lineno=44, col_offset=0), ClassDef('SocketTCPTest', [Attribute(Name('unittest', Load(), lineno=46, col_offset=20), 'TestCase', Load(), lineno=46, col_offset=20)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=48, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=49, col_offset=8), 'serv', Store(), lineno=49, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=49, col_offset=20), 'socket', Load(), lineno=49, col_offset=20), [Attribute(Name('socket', Load(), lineno=49, col_offset=34), 'AF_INET', Load(), lineno=49, col_offset=34), Attribute(Name('socket', Load(), lineno=49, col_offset=50), 'SOCK_STREAM', Load(), lineno=49, col_offset=50)], [], None, None, lineno=49, col_offset=20), lineno=49, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=50, col_offset=8), 'port', Store(), lineno=50, col_offset=8)], Call(Attribute(Name('test_support', Load(), lineno=50, col_offset=20), 'bind_port', Load(), lineno=50, col_offset=20), [Attribute(Name('self', Load(), lineno=50, col_offset=43), 'serv', Load(), lineno=50, col_offset=43)], [], None, None, lineno=50, col_offset=20), lineno=50, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=51, col_offset=8), 'serv', Load(), lineno=51, col_offset=8), 'listen', Load(), lineno=51, col_offset=8), [Num(1, lineno=51, col_offset=25)], [], None, None, lineno=51, col_offset=8), lineno=51, col_offset=8)], [], lineno=48, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=53, col_offset=17)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=54, col_offset=8), 'serv', Load(), lineno=54, col_offset=8), 'close', Load(), lineno=54, col_offset=8), [], [], None, None, lineno=54, col_offset=8), lineno=54, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=55, col_offset=8), 'serv', Store(), lineno=55, col_offset=8)], Name('None', Load(), lineno=55, col_offset=20), lineno=55, col_offset=8)], [], lineno=53, col_offset=4)], [], lineno=46, col_offset=0), ClassDef('SocketUDPTest', [Attribute(Name('unittest', Load(), lineno=57, col_offset=20), 'TestCase', Load(), lineno=57, col_offset=20)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=59, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=60, col_offset=8), 'serv', Store(), lineno=60, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=60, col_offset=20), 'socket', Load(), lineno=60, col_offset=20), [Attribute(Name('socket', Load(), lineno=60, col_offset=34), 'AF_INET', Load(), lineno=60, col_offset=34), Attribute(Name('socket', Load(), lineno=60, col_offset=50), 'SOCK_DGRAM', Load(), lineno=60, col_offset=50)], [], None, None, lineno=60, col_offset=20), lineno=60, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=61, col_offset=8), 'port', Store(), lineno=61, col_offset=8)], Call(Attribute(Name('test_support', Load(), lineno=61, col_offset=20), 'bind_port', Load(), lineno=61, col_offset=20), [Attribute(Name('self', Load(), lineno=61, col_offset=43), 'serv', Load(), lineno=61, col_offset=43)], [], None, None, lineno=61, col_offset=20), lineno=61, col_offset=8)], [], lineno=59, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=63, col_offset=17)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=64, col_offset=8), 'serv', Load(), lineno=64, col_offset=8), 'close', Load(), lineno=64, col_offset=8), [], [], None, None, lineno=64, col_offset=8), lineno=64, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=65, col_offset=8), 'serv', Store(), lineno=65, col_offset=8)], Name('None', Load(), lineno=65, col_offset=20), lineno=65, col_offset=8)], [], lineno=63, col_offset=4)], [], lineno=57, col_offset=0), ClassDef('ThreadableTest', [], [Expr(Str("Threadable Test class\n\n    The ThreadableTest class makes it easy to create a threaded\n    client/server pair from an existing unit test. To create a\n    new threaded class from an existing unit test, use multiple\n    inheritance:\n\n        class NewClass (OldClass, ThreadableTest):\n            pass\n\n    This class defines two new fixture functions with obvious\n    purposes for overriding:\n\n        clientSetUp ()\n        clientTearDown ()\n\n    Any new test functions within the class must then define\n    tests in pairs, where the test name is preceeded with a\n    '_' to indicate the client portion of the test. Ex:\n\n        def testFoo(self):\n            # Server portion\n\n        def _testFoo(self):\n            # Client portion\n\n    Any exceptions raised by the clients during their tests\n    are caught and transferred to the main thread to alert\n    the testing framework.\n\n    Note, the server setup function cannot call any blocking\n    functions that rely on the client thread during setup,\n    unless serverExplicitReady() is called just before\n    the blocking call (such as in setting up a client/server\n    connection and performing the accept() in setUp().\n    ", lineno=103, col_offset=-1), lineno=103, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=105, col_offset=17)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=107, col_offset=8), '__setUp', Store(), lineno=107, col_offset=8)], Attribute(Name('self', Load(), lineno=107, col_offset=23), 'setUp', Load(), lineno=107, col_offset=23), lineno=107, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=108, col_offset=8), '__tearDown', Store(), lineno=108, col_offset=8)], Attribute(Name('self', Load(), lineno=108, col_offset=26), 'tearDown', Load(), lineno=108, col_offset=26), lineno=108, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=109, col_offset=8), 'setUp', Store(), lineno=109, col_offset=8)], Attribute(Name('self', Load(), lineno=109, col_offset=21), '_setUp', Load(), lineno=109, col_offset=21), lineno=109, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=110, col_offset=8), 'tearDown', Store(), lineno=110, col_offset=8)], Attribute(Name('self', Load(), lineno=110, col_offset=24), '_tearDown', Load(), lineno=110, col_offset=24), lineno=110, col_offset=8)], [], lineno=105, col_offset=4), FunctionDef('serverExplicitReady', arguments([Name('self', Param(), lineno=112, col_offset=28)], None, None, []), [Expr(Str('This method allows the server to explicitly indicate that\n        it wants the client thread to proceed. This is useful if the\n        server is about to execute a blocking routine that is\n        dependent upon the client thread during its setup routine.', lineno=116, col_offset=-1), lineno=116, col_offset=-1), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=117, col_offset=8), 'server_ready', Load(), lineno=117, col_offset=8), 'set', Load(), lineno=117, col_offset=8), [], [], None, None, lineno=117, col_offset=8), lineno=117, col_offset=8)], [], lineno=112, col_offset=4), FunctionDef('_setUp', arguments([Name('self', Param(), lineno=119, col_offset=15)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=120, col_offset=8), 'server_ready', Store(), lineno=120, col_offset=8)], Call(Attribute(Name('threading', Load(), lineno=120, col_offset=28), 'Event', Load(), lineno=120, col_offset=28), [], [], None, None, lineno=120, col_offset=28), lineno=120, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=121, col_offset=8), 'client_ready', Store(), lineno=121, col_offset=8)], Call(Attribute(Name('threading', Load(), lineno=121, col_offset=28), 'Event', Load(), lineno=121, col_offset=28), [], [], None, None, lineno=121, col_offset=28), lineno=121, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=122, col_offset=8), 'done', Store(), lineno=122, col_offset=8)], Call(Attribute(Name('threading', Load(), lineno=122, col_offset=20), 'Event', Load(), lineno=122, col_offset=20), [], [], None, None, lineno=122, col_offset=20), lineno=122, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=123, col_offset=8), 'queue', Store(), lineno=123, col_offset=8)], Call(Attribute(Name('Queue', Load(), lineno=123, col_offset=21), 'Queue', Load(), lineno=123, col_offset=21), [Num(1, lineno=123, col_offset=33)], [], None, None, lineno=123, col_offset=21), lineno=123, col_offset=8), Assign([Name('methodname', Store(), lineno=126, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=126, col_offset=21), 'id', Load(), lineno=126, col_offset=21), [], [], None, None, lineno=126, col_offset=21), lineno=126, col_offset=8), Assign([Name('i', Store(), lineno=127, col_offset=8)], Call(Attribute(Name('methodname', Load(), lineno=127, col_offset=12), 'rfind', Load(), lineno=127, col_offset=12), [Str('.', lineno=127, col_offset=29)], [], None, None, lineno=127, col_offset=12), lineno=127, col_offset=8), Assign([Name('methodname', Store(), lineno=128, col_offset=8)], Subscript(Name('methodname', Load(), lineno=128, col_offset=21), Slice(BinOp(Name('i', Load(), lineno=128, col_offset=32), Add(), Num(1, lineno=128, col_offset=34), lineno=128, col_offset=32), None, None), Load(), lineno=128, col_offset=21), lineno=128, col_offset=8), Assign([Name('test_method', Store(), lineno=129, col_offset=8)], Call(Name('getattr', Load(), lineno=129, col_offset=22), [Name('self', Load(), lineno=129, col_offset=30), BinOp(Str('_', lineno=129, col_offset=36), Add(), Name('methodname', Load(), lineno=129, col_offset=42), lineno=129, col_offset=36)], [], None, None, lineno=129, col_offset=22), lineno=129, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=130, col_offset=8), 'client_thread', Store(), lineno=130, col_offset=8)], Call(Attribute(Name('thread', Load(), lineno=130, col_offset=29), 'start_new_thread', Load(), lineno=130, col_offset=29), [Attribute(Name('self', Load(), lineno=131, col_offset=12), 'clientRun', Load(), lineno=131, col_offset=12), Tuple([Name('test_method', Load(), lineno=131, col_offset=29)], Load(), lineno=131, col_offset=29)], [], None, None, lineno=130, col_offset=29), lineno=130, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=133, col_offset=8), '__setUp', Load(), lineno=133, col_offset=8), [], [], None, None, lineno=133, col_offset=8), lineno=133, col_offset=8), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('self', Load(), lineno=134, col_offset=15), 'server_ready', Load(), lineno=134, col_offset=15), 'is_set', Load(), lineno=134, col_offset=15), [], [], None, None, lineno=134, col_offset=15), lineno=134, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=135, col_offset=12), 'server_ready', Load(), lineno=135, col_offset=12), 'set', Load(), lineno=135, col_offset=12), [], [], None, None, lineno=135, col_offset=12), lineno=135, col_offset=12)], [], lineno=134, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=136, col_offset=8), 'client_ready', Load(), lineno=136, col_offset=8), 'wait', Load(), lineno=136, col_offset=8), [], [], None, None, lineno=136, col_offset=8), lineno=136, col_offset=8)], [], lineno=119, col_offset=4), FunctionDef('_tearDown', arguments([Name('self', Param(), lineno=138, col_offset=18)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=139, col_offset=8), '__tearDown', Load(), lineno=139, col_offset=8), [], [], None, None, lineno=139, col_offset=8), lineno=139, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=140, col_offset=8), 'done', Load(), lineno=140, col_offset=8), 'wait', Load(), lineno=140, col_offset=8), [], [], None, None, lineno=140, col_offset=8), lineno=140, col_offset=8), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('self', Load(), lineno=142, col_offset=15), 'queue', Load(), lineno=142, col_offset=15), 'empty', Load(), lineno=142, col_offset=15), [], [], None, None, lineno=142, col_offset=15), lineno=142, col_offset=11), [Assign([Name('msg', Store(), lineno=143, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=143, col_offset=18), 'queue', Load(), lineno=143, col_offset=18), 'get', Load(), lineno=143, col_offset=18), [], [], None, None, lineno=143, col_offset=18), lineno=143, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=144, col_offset=12), 'fail', Load(), lineno=144, col_offset=12), [Name('msg', Load(), lineno=144, col_offset=22)], [], None, None, lineno=144, col_offset=12), lineno=144, col_offset=12)], [], lineno=142, col_offset=8)], [], lineno=138, col_offset=4), FunctionDef('clientRun', arguments([Name('self', Param(), lineno=146, col_offset=18), Name('test_func', Param(), lineno=146, col_offset=24)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=147, col_offset=8), 'server_ready', Load(), lineno=147, col_offset=8), 'wait', Load(), lineno=147, col_offset=8), [], [], None, None, lineno=147, col_offset=8), lineno=147, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=148, col_offset=8), 'client_ready', Load(), lineno=148, col_offset=8), 'set', Load(), lineno=148, col_offset=8), [], [], None, None, lineno=148, col_offset=8), lineno=148, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=149, col_offset=8), 'clientSetUp', Load(), lineno=149, col_offset=8), [], [], None, None, lineno=149, col_offset=8), lineno=149, col_offset=8), With(Call(Attribute(Name('test_support', Load(), lineno=150, col_offset=13), 'check_py3k_warnings', Load(), lineno=150, col_offset=13), [], [], None, None, lineno=150, col_offset=13), None, [If(UnaryOp(Not(), Call(Name('callable', Load(), lineno=151, col_offset=19), [Name('test_func', Load(), lineno=151, col_offset=28)], [], None, None, lineno=151, col_offset=19), lineno=151, col_offset=15), [Raise(Call(Name('TypeError', Load(), lineno=152, col_offset=22), [Str('test_func must be a callable function.', lineno=152, col_offset=32)], [], None, None, lineno=152, col_offset=22), None, None, lineno=152, col_offset=16)], [], lineno=151, col_offset=12)], lineno=150, col_offset=13), TryExcept([Expr(Call(Name('test_func', Load(), lineno=154, col_offset=12), [], [], None, None, lineno=154, col_offset=12), lineno=154, col_offset=12)], [ExceptHandler(Name('Exception', Load(), lineno=155, col_offset=15), Name('strerror', Store(), lineno=155, col_offset=26), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=156, col_offset=12), 'queue', Load(), lineno=156, col_offset=12), 'put', Load(), lineno=156, col_offset=12), [Name('strerror', Load(), lineno=156, col_offset=27)], [], None, None, lineno=156, col_offset=12), lineno=156, col_offset=12)], lineno=155, col_offset=8)], [], lineno=153, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=157, col_offset=8), 'clientTearDown', Load(), lineno=157, col_offset=8), [], [], None, None, lineno=157, col_offset=8), lineno=157, col_offset=8)], [], lineno=146, col_offset=4), FunctionDef('clientSetUp', arguments([Name('self', Param(), lineno=159, col_offset=20)], None, None, []), [Raise(Call(Name('NotImplementedError', Load(), lineno=160, col_offset=14), [Str('clientSetUp must be implemented.', lineno=160, col_offset=34)], [], None, None, lineno=160, col_offset=14), None, None, lineno=160, col_offset=8)], [], lineno=159, col_offset=4), FunctionDef('clientTearDown', arguments([Name('self', Param(), lineno=162, col_offset=23)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=163, col_offset=8), 'done', Load(), lineno=163, col_offset=8), 'set', Load(), lineno=163, col_offset=8), [], [], None, None, lineno=163, col_offset=8), lineno=163, col_offset=8), Expr(Call(Attribute(Name('thread', Load(), lineno=164, col_offset=8), 'exit', Load(), lineno=164, col_offset=8), [], [], None, None, lineno=164, col_offset=8), lineno=164, col_offset=8)], [], lineno=162, col_offset=4)], [], lineno=67, col_offset=0), ClassDef('ThreadedTCPSocketTest', [Name('SocketTCPTest', Load(), lineno=166, col_offset=28), Name('ThreadableTest', Load(), lineno=166, col_offset=43)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=168, col_offset=17), Name('methodName', Param(), lineno=168, col_offset=23)], None, None, [Str('runTest', lineno=168, col_offset=34)]), [Expr(Call(Attribute(Name('SocketTCPTest', Load(), lineno=169, col_offset=8), '__init__', Load(), lineno=169, col_offset=8), [Name('self', Load(), lineno=169, col_offset=31)], [keyword('methodName', Name('methodName', Load(), lineno=169, col_offset=48))], None, None, lineno=169, col_offset=8), lineno=169, col_offset=8), Expr(Call(Attribute(Name('ThreadableTest', Load(), lineno=170, col_offset=8), '__init__', Load(), lineno=170, col_offset=8), [Name('self', Load(), lineno=170, col_offset=32)], [], None, None, lineno=170, col_offset=8), lineno=170, col_offset=8)], [], lineno=168, col_offset=4), FunctionDef('clientSetUp', arguments([Name('self', Param(), lineno=172, col_offset=20)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=173, col_offset=8), 'cli', Store(), lineno=173, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=173, col_offset=19), 'socket', Load(), lineno=173, col_offset=19), [Attribute(Name('socket', Load(), lineno=173, col_offset=33), 'AF_INET', Load(), lineno=173, col_offset=33), Attribute(Name('socket', Load(), lineno=173, col_offset=49), 'SOCK_STREAM', Load(), lineno=173, col_offset=49)], [], None, None, lineno=173, col_offset=19), lineno=173, col_offset=8)], [], lineno=172, col_offset=4), FunctionDef('clientTearDown', arguments([Name('self', Param(), lineno=175, col_offset=23)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=176, col_offset=8), 'cli', Load(), lineno=176, col_offset=8), 'close', Load(), lineno=176, col_offset=8), [], [], None, None, lineno=176, col_offset=8), lineno=176, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=177, col_offset=8), 'cli', Store(), lineno=177, col_offset=8)], Name('None', Load(), lineno=177, col_offset=19), lineno=177, col_offset=8), Expr(Call(Attribute(Name('ThreadableTest', Load(), lineno=178, col_offset=8), 'clientTearDown', Load(), lineno=178, col_offset=8), [Name('self', Load(), lineno=178, col_offset=38)], [], None, None, lineno=178, col_offset=8), lineno=178, col_offset=8)], [], lineno=175, col_offset=4)], [], lineno=166, col_offset=0), ClassDef('ThreadedUDPSocketTest', [Name('SocketUDPTest', Load(), lineno=180, col_offset=28), Name('ThreadableTest', Load(), lineno=180, col_offset=43)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=182, col_offset=17), Name('methodName', Param(), lineno=182, col_offset=23)], None, None, [Str('runTest', lineno=182, col_offset=34)]), [Expr(Call(Attribute(Name('SocketUDPTest', Load(), lineno=183, col_offset=8), '__init__', Load(), lineno=183, col_offset=8), [Name('self', Load(), lineno=183, col_offset=31)], [keyword('methodName', Name('methodName', Load(), lineno=183, col_offset=48))], None, None, lineno=183, col_offset=8), lineno=183, col_offset=8), Expr(Call(Attribute(Name('ThreadableTest', Load(), lineno=184, col_offset=8), '__init__', Load(), lineno=184, col_offset=8), [Name('self', Load(), lineno=184, col_offset=32)], [], None, None, lineno=184, col_offset=8), lineno=184, col_offset=8)], [], lineno=182, col_offset=4), FunctionDef('clientSetUp', arguments([Name('self', Param(), lineno=186, col_offset=20)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=187, col_offset=8), 'cli', Store(), lineno=187, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=187, col_offset=19), 'socket', Load(), lineno=187, col_offset=19), [Attribute(Name('socket', Load(), lineno=187, col_offset=33), 'AF_INET', Load(), lineno=187, col_offset=33), Attribute(Name('socket', Load(), lineno=187, col_offset=49), 'SOCK_DGRAM', Load(), lineno=187, col_offset=49)], [], None, None, lineno=187, col_offset=19), lineno=187, col_offset=8)], [], lineno=186, col_offset=4), FunctionDef('clientTearDown', arguments([Name('self', Param(), lineno=189, col_offset=23)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=190, col_offset=8), 'cli', Load(), lineno=190, col_offset=8), 'close', Load(), lineno=190, col_offset=8), [], [], None, None, lineno=190, col_offset=8), lineno=190, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=191, col_offset=8), 'cli', Store(), lineno=191, col_offset=8)], Name('None', Load(), lineno=191, col_offset=19), lineno=191, col_offset=8), Expr(Call(Attribute(Name('ThreadableTest', Load(), lineno=192, col_offset=8), 'clientTearDown', Load(), lineno=192, col_offset=8), [Name('self', Load(), lineno=192, col_offset=38)], [], None, None, lineno=192, col_offset=8), lineno=192, col_offset=8)], [], lineno=189, col_offset=4)], [], lineno=180, col_offset=0), ClassDef('SocketConnectedTest', [Name('ThreadedTCPSocketTest', Load(), lineno=194, col_offset=26)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=196, col_offset=17), Name('methodName', Param(), lineno=196, col_offset=23)], None, None, [Str('runTest', lineno=196, col_offset=34)]), [Expr(Call(Attribute(Name('ThreadedTCPSocketTest', Load(), lineno=197, col_offset=8), '__init__', Load(), lineno=197, col_offset=8), [Name('self', Load(), lineno=197, col_offset=39)], [keyword('methodName', Name('methodName', Load(), lineno=197, col_offset=56))], None, None, lineno=197, col_offset=8), lineno=197, col_offset=8)], [], lineno=196, col_offset=4), FunctionDef('setUp', arguments([Name('self', Param(), lineno=199, col_offset=14)], None, None, []), [Expr(Call(Attribute(Name('ThreadedTCPSocketTest', Load(), lineno=200, col_offset=8), 'setUp', Load(), lineno=200, col_offset=8), [Name('self', Load(), lineno=200, col_offset=36)], [], None, None, lineno=200, col_offset=8), lineno=200, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=203, col_offset=8), 'serverExplicitReady', Load(), lineno=203, col_offset=8), [], [], None, None, lineno=203, col_offset=8), lineno=203, col_offset=8), Assign([Tuple([Name('conn', Store(), lineno=204, col_offset=8), Name('addr', Store(), lineno=204, col_offset=14)], Store(), lineno=204, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=204, col_offset=21), 'serv', Load(), lineno=204, col_offset=21), 'accept', Load(), lineno=204, col_offset=21), [], [], None, None, lineno=204, col_offset=21), lineno=204, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=205, col_offset=8), 'cli_conn', Store(), lineno=205, col_offset=8)], Name('conn', Load(), lineno=205, col_offset=24), lineno=205, col_offset=8)], [], lineno=199, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=207, col_offset=17)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=208, col_offset=8), 'cli_conn', Load(), lineno=208, col_offset=8), 'close', Load(), lineno=208, col_offset=8), [], [], None, None, lineno=208, col_offset=8), lineno=208, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=209, col_offset=8), 'cli_conn', Store(), lineno=209, col_offset=8)], Name('None', Load(), lineno=209, col_offset=24), lineno=209, col_offset=8), Expr(Call(Attribute(Name('ThreadedTCPSocketTest', Load(), lineno=210, col_offset=8), 'tearDown', Load(), lineno=210, col_offset=8), [Name('self', Load(), lineno=210, col_offset=39)], [], None, None, lineno=210, col_offset=8), lineno=210, col_offset=8)], [], lineno=207, col_offset=4), FunctionDef('clientSetUp', arguments([Name('self', Param(), lineno=212, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('ThreadedTCPSocketTest', Load(), lineno=213, col_offset=8), 'clientSetUp', Load(), lineno=213, col_offset=8), [Name('self', Load(), lineno=213, col_offset=42)], [], None, None, lineno=213, col_offset=8), lineno=213, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=214, col_offset=8), 'cli', Load(), lineno=214, col_offset=8), 'connect', Load(), lineno=214, col_offset=8), [Tuple([Name('HOST', Load(), lineno=214, col_offset=26), Attribute(Name('self', Load(), lineno=214, col_offset=32), 'port', Load(), lineno=214, col_offset=32)], Load(), lineno=214, col_offset=26)], [], None, None, lineno=214, col_offset=8), lineno=214, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=215, col_offset=8), 'serv_conn', Store(), lineno=215, col_offset=8)], Attribute(Name('self', Load(), lineno=215, col_offset=25), 'cli', Load(), lineno=215, col_offset=25), lineno=215, col_offset=8)], [], lineno=212, col_offset=4), FunctionDef('clientTearDown', arguments([Name('self', Param(), lineno=217, col_offset=23)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=218, col_offset=8), 'serv_conn', Load(), lineno=218, col_offset=8), 'close', Load(), lineno=218, col_offset=8), [], [], None, None, lineno=218, col_offset=8), lineno=218, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=219, col_offset=8), 'serv_conn', Store(), lineno=219, col_offset=8)], Name('None', Load(), lineno=219, col_offset=25), lineno=219, col_offset=8), Expr(Call(Attribute(Name('ThreadedTCPSocketTest', Load(), lineno=220, col_offset=8), 'clientTearDown', Load(), lineno=220, col_offset=8), [Name('self', Load(), lineno=220, col_offset=45)], [], None, None, lineno=220, col_offset=8), lineno=220, col_offset=8)], [], lineno=217, col_offset=4)], [], lineno=194, col_offset=0), ClassDef('SocketPairTest', [Attribute(Name('unittest', Load(), lineno=222, col_offset=21), 'TestCase', Load(), lineno=222, col_offset=21), Name('ThreadableTest', Load(), lineno=222, col_offset=40)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=224, col_offset=17), Name('methodName', Param(), lineno=224, col_offset=23)], None, None, [Str('runTest', lineno=224, col_offset=34)]), [Expr(Call(Attribute(Attribute(Name('unittest', Load(), lineno=225, col_offset=8), 'TestCase', Load(), lineno=225, col_offset=8), '__init__', Load(), lineno=225, col_offset=8), [Name('self', Load(), lineno=225, col_offset=35)], [keyword('methodName', Name('methodName', Load(), lineno=225, col_offset=52))], None, None, lineno=225, col_offset=8), lineno=225, col_offset=8), Expr(Call(Attribute(Name('ThreadableTest', Load(), lineno=226, col_offset=8), '__init__', Load(), lineno=226, col_offset=8), [Name('self', Load(), lineno=226, col_offset=32)], [], None, None, lineno=226, col_offset=8), lineno=226, col_offset=8)], [], lineno=224, col_offset=4), FunctionDef('setUp', arguments([Name('self', Param(), lineno=228, col_offset=14)], None, None, []), [Assign([Tuple([Attribute(Name('self', Load(), lineno=229, col_offset=8), 'serv', Store(), lineno=229, col_offset=8), Attribute(Name('self', Load(), lineno=229, col_offset=19), 'cli', Store(), lineno=229, col_offset=19)], Store(), lineno=229, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=229, col_offset=30), 'socketpair', Load(), lineno=229, col_offset=30), [], [], None, None, lineno=229, col_offset=30), lineno=229, col_offset=8)], [], lineno=228, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=231, col_offset=17)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=232, col_offset=8), 'serv', Load(), lineno=232, col_offset=8), 'close', Load(), lineno=232, col_offset=8), [], [], None, None, lineno=232, col_offset=8), lineno=232, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=233, col_offset=8), 'serv', Store(), lineno=233, col_offset=8)], Name('None', Load(), lineno=233, col_offset=20), lineno=233, col_offset=8)], [], lineno=231, col_offset=4), FunctionDef('clientSetUp', arguments([Name('self', Param(), lineno=235, col_offset=20)], None, None, []), [Pass( lineno=236, col_offset=8)], [], lineno=235, col_offset=4), FunctionDef('clientTearDown', arguments([Name('self', Param(), lineno=238, col_offset=23)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=239, col_offset=8), 'cli', Load(), lineno=239, col_offset=8), 'close', Load(), lineno=239, col_offset=8), [], [], None, None, lineno=239, col_offset=8), lineno=239, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=240, col_offset=8), 'cli', Store(), lineno=240, col_offset=8)], Name('None', Load(), lineno=240, col_offset=19), lineno=240, col_offset=8), Expr(Call(Attribute(Name('ThreadableTest', Load(), lineno=241, col_offset=8), 'clientTearDown', Load(), lineno=241, col_offset=8), [Name('self', Load(), lineno=241, col_offset=38)], [], None, None, lineno=241, col_offset=8), lineno=241, col_offset=8)], [], lineno=238, col_offset=4)], [], lineno=222, col_offset=0), ClassDef('GeneralModuleTests', [Attribute(Name('unittest', Load(), lineno=247, col_offset=25), 'TestCase', Load(), lineno=247, col_offset=25)], [FunctionDef('test_weakref', arguments([Name('self', Param(), lineno=249, col_offset=21)], None, None, []), [Assign([Name('s', Store(), lineno=250, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=250, col_offset=12), 'socket', Load(), lineno=250, col_offset=12), [Attribute(Name('socket', Load(), lineno=250, col_offset=26), 'AF_INET', Load(), lineno=250, col_offset=26), Attribute(Name('socket', Load(), lineno=250, col_offset=42), 'SOCK_STREAM', Load(), lineno=250, col_offset=42)], [], None, None, lineno=250, col_offset=12), lineno=250, col_offset=8), Assign([Name('p', Store(), lineno=251, col_offset=8)], Call(Name('proxy', Load(), lineno=251, col_offset=12), [Name('s', Load(), lineno=251, col_offset=18)], [], None, None, lineno=251, col_offset=12), lineno=251, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=252, col_offset=8), 'assertEqual', Load(), lineno=252, col_offset=8), [Call(Attribute(Name('p', Load(), lineno=252, col_offset=25), 'fileno', Load(), lineno=252, col_offset=25), [], [], None, None, lineno=252, col_offset=25), Call(Attribute(Name('s', Load(), lineno=252, col_offset=37), 'fileno', Load(), lineno=252, col_offset=37), [], [], None, None, lineno=252, col_offset=37)], [], None, None, lineno=252, col_offset=8), lineno=252, col_offset=8), Expr(Call(Attribute(Name('s', Load(), lineno=253, col_offset=8), 'close', Load(), lineno=253, col_offset=8), [], [], None, None, lineno=253, col_offset=8), lineno=253, col_offset=8), Assign([Name('s', Store(), lineno=254, col_offset=8)], Name('None', Load(), lineno=254, col_offset=12), lineno=254, col_offset=8), TryExcept([Expr(Call(Attribute(Name('p', Load(), lineno=256, col_offset=12), 'fileno', Load(), lineno=256, col_offset=12), [], [], None, None, lineno=256, col_offset=12), lineno=256, col_offset=12)], [ExceptHandler(Name('ReferenceError', Load(), lineno=257, col_offset=15), None, [Pass( lineno=258, col_offset=12)], lineno=257, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=260, col_offset=12), 'fail', Load(), lineno=260, col_offset=12), [Str('Socket proxy still exists', lineno=260, col_offset=22)], [], None, None, lineno=260, col_offset=12), lineno=260, col_offset=12)], lineno=255, col_offset=8)], [], lineno=249, col_offset=4), FunctionDef('testSocketError', arguments([Name('self', Param(), lineno=262, col_offset=24)], None, None, []), [FunctionDef('raise_error', arguments([], 'args', 'kwargs', []), [Raise(Attribute(Name('socket', Load(), lineno=265, col_offset=18), 'error', Load(), lineno=265, col_offset=18), None, None, lineno=265, col_offset=12)], [], lineno=264, col_offset=8), FunctionDef('raise_herror', arguments([], 'args', 'kwargs', []), [Raise(Attribute(Name('socket', Load(), lineno=267, col_offset=18), 'herror', Load(), lineno=267, col_offset=18), None, None, lineno=267, col_offset=12)], [], lineno=266, col_offset=8), FunctionDef('raise_gaierror', arguments([], 'args', 'kwargs', []), [Raise(Attribute(Name('socket', Load(), lineno=269, col_offset=18), 'gaierror', Load(), lineno=269, col_offset=18), None, None, lineno=269, col_offset=12)], [], lineno=268, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=270, col_offset=8), 'assertRaises', Load(), lineno=270, col_offset=8), [Attribute(Name('socket', Load(), lineno=270, col_offset=26), 'error', Load(), lineno=270, col_offset=26), Name('raise_error', Load(), lineno=270, col_offset=40), Str('Error raising socket exception.', lineno=271, col_offset=30)], [], None, None, lineno=270, col_offset=8), lineno=270, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=272, col_offset=8), 'assertRaises', Load(), lineno=272, col_offset=8), [Attribute(Name('socket', Load(), lineno=272, col_offset=26), 'error', Load(), lineno=272, col_offset=26), Name('raise_herror', Load(), lineno=272, col_offset=40), Str('Error raising socket exception.', lineno=273, col_offset=30)], [], None, None, lineno=272, col_offset=8), lineno=272, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=274, col_offset=8), 'assertRaises', Load(), lineno=274, col_offset=8), [Attribute(Name('socket', Load(), lineno=274, col_offset=26), 'error', Load(), lineno=274, col_offset=26), Name('raise_gaierror', Load(), lineno=274, col_offset=40), Str('Error raising socket exception.', lineno=275, col_offset=30)], [], None, None, lineno=274, col_offset=8), lineno=274, col_offset=8)], [], lineno=262, col_offset=4), FunctionDef('testCrucialConstants', arguments([Name('self', Param(), lineno=277, col_offset=29)], None, None, []), [Expr(Attribute(Name('socket', Load(), lineno=279, col_offset=8), 'AF_INET', Load(), lineno=279, col_offset=8), lineno=279, col_offset=8), Expr(Attribute(Name('socket', Load(), lineno=280, col_offset=8), 'SOCK_STREAM', Load(), lineno=280, col_offset=8), lineno=280, col_offset=8), Expr(Attribute(Name('socket', Load(), lineno=281, col_offset=8), 'SOCK_DGRAM', Load(), lineno=281, col_offset=8), lineno=281, col_offset=8), Expr(Attribute(Name('socket', Load(), lineno=282, col_offset=8), 'SOCK_RAW', Load(), lineno=282, col_offset=8), lineno=282, col_offset=8), Expr(Attribute(Name('socket', Load(), lineno=283, col_offset=8), 'SOCK_RDM', Load(), lineno=283, col_offset=8), lineno=283, col_offset=8), Expr(Attribute(Name('socket', Load(), lineno=284, col_offset=8), 'SOCK_SEQPACKET', Load(), lineno=284, col_offset=8), lineno=284, col_offset=8), Expr(Attribute(Name('socket', Load(), lineno=285, col_offset=8), 'SOL_SOCKET', Load(), lineno=285, col_offset=8), lineno=285, col_offset=8), Expr(Attribute(Name('socket', Load(), lineno=286, col_offset=8), 'SO_REUSEADDR', Load(), lineno=286, col_offset=8), lineno=286, col_offset=8)], [], lineno=277, col_offset=4), FunctionDef('testHostnameRes', arguments([Name('self', Param(), lineno=288, col_offset=24)], None, None, []), [Assign([Name('hostname', Store(), lineno=290, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=290, col_offset=19), 'gethostname', Load(), lineno=290, col_offset=19), [], [], None, None, lineno=290, col_offset=19), lineno=290, col_offset=8), TryExcept([Assign([Name('ip', Store(), lineno=292, col_offset=12)], Call(Attribute(Name('socket', Load(), lineno=292, col_offset=17), 'gethostbyname', Load(), lineno=292, col_offset=17), [Name('hostname', Load(), lineno=292, col_offset=38)], [], None, None, lineno=292, col_offset=17), lineno=292, col_offset=12)], [ExceptHandler(Attribute(Name('socket', Load(), lineno=293, col_offset=15), 'error', Load(), lineno=293, col_offset=15), None, [Return(None, lineno=295, col_offset=12)], lineno=293, col_offset=8)], [], lineno=291, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=296, col_offset=8), 'assertTrue', Load(), lineno=296, col_offset=8), [Compare(Call(Attribute(Name('ip', Load(), lineno=296, col_offset=24), 'find', Load(), lineno=296, col_offset=24), [Str('.', lineno=296, col_offset=32)], [], None, None, lineno=296, col_offset=24), [GtE()], [Num(0, lineno=296, col_offset=40)], lineno=296, col_offset=24), Str('Error resolving host to ip.', lineno=296, col_offset=43)], [], None, None, lineno=296, col_offset=8), lineno=296, col_offset=8), TryExcept([Assign([Tuple([Name('hname', Store(), lineno=298, col_offset=12), Name('aliases', Store(), lineno=298, col_offset=19), Name('ipaddrs', Store(), lineno=298, col_offset=28)], Store(), lineno=298, col_offset=12)], Call(Attribute(Name('socket', Load(), lineno=298, col_offset=38), 'gethostbyaddr', Load(), lineno=298, col_offset=38), [Name('ip', Load(), lineno=298, col_offset=59)], [], None, None, lineno=298, col_offset=38), lineno=298, col_offset=12)], [ExceptHandler(Attribute(Name('socket', Load(), lineno=299, col_offset=15), 'error', Load(), lineno=299, col_offset=15), None, [Return(None, lineno=301, col_offset=12)], lineno=299, col_offset=8)], [], lineno=297, col_offset=8), Assign([Name('all_host_names', Store(), lineno=302, col_offset=8)], BinOp(List([Name('hostname', Load(), lineno=302, col_offset=26), Name('hname', Load(), lineno=302, col_offset=36)], Load(), lineno=302, col_offset=25), Add(), Name('aliases', Load(), lineno=302, col_offset=45), lineno=302, col_offset=25), lineno=302, col_offset=8), Assign([Name('fqhn', Store(), lineno=303, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=303, col_offset=15), 'getfqdn', Load(), lineno=303, col_offset=15), [Name('ip', Load(), lineno=303, col_offset=30)], [], None, None, lineno=303, col_offset=15), lineno=303, col_offset=8), If(UnaryOp(Not(), Compare(Name('fqhn', Load(), lineno=304, col_offset=15), [In()], [Name('all_host_names', Load(), lineno=304, col_offset=23)], lineno=304, col_offset=15), lineno=304, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=305, col_offset=12), 'fail', Load(), lineno=305, col_offset=12), [BinOp(Str('Error testing host resolution mechanisms. (fqdn: %s, all: %s)', lineno=305, col_offset=22), Mod(), Tuple([Name('fqhn', Load(), lineno=305, col_offset=89), Call(Name('repr', Load(), lineno=305, col_offset=95), [Name('all_host_names', Load(), lineno=305, col_offset=100)], [], None, None, lineno=305, col_offset=95)], Load(), lineno=305, col_offset=89), lineno=305, col_offset=22)], [], None, None, lineno=305, col_offset=12), lineno=305, col_offset=12)], [], lineno=304, col_offset=8)], [], lineno=288, col_offset=4), FunctionDef('testRefCountGetNameInfo', arguments([Name('self', Param(), lineno=307, col_offset=32)], None, None, []), [If(Call(Name('hasattr', Load(), lineno=309, col_offset=11), [Name('sys', Load(), lineno=309, col_offset=19), Str('getrefcount', lineno=309, col_offset=24)], [], None, None, lineno=309, col_offset=11), [TryExcept([Assign([Name('orig', Store(), lineno=312, col_offset=16)], Call(Attribute(Name('sys', Load(), lineno=312, col_offset=23), 'getrefcount', Load(), lineno=312, col_offset=23), [Name('__name__', Load(), lineno=312, col_offset=39)], [], None, None, lineno=312, col_offset=23), lineno=312, col_offset=16), Expr(Call(Attribute(Name('socket', Load(), lineno=313, col_offset=16), 'getnameinfo', Load(), lineno=313, col_offset=16), [Name('__name__', Load(), lineno=313, col_offset=35), Num(0, lineno=313, col_offset=44)], [], None, None, lineno=313, col_offset=16), lineno=313, col_offset=16)], [ExceptHandler(Name('TypeError', Load(), lineno=314, col_offset=19), None, [Expr(Call(Attribute(Name('self', Load(), lineno=315, col_offset=16), 'assertEqual', Load(), lineno=315, col_offset=16), [Call(Attribute(Name('sys', Load(), lineno=315, col_offset=33), 'getrefcount', Load(), lineno=315, col_offset=33), [Name('__name__', Load(), lineno=315, col_offset=49)], [], None, None, lineno=315, col_offset=33), Name('orig', Load(), lineno=315, col_offset=60), Str('socket.getnameinfo loses a reference', lineno=316, col_offset=33)], [], None, None, lineno=315, col_offset=16), lineno=315, col_offset=16)], lineno=314, col_offset=12)], [], lineno=310, col_offset=12)], [], lineno=309, col_offset=8)], [], lineno=307, col_offset=4), FunctionDef('testInterpreterCrash', arguments([Name('self', Param(), lineno=318, col_offset=29)], None, None, []), [TryExcept([Expr(Call(Attribute(Name('socket', Load(), lineno=322, col_offset=12), 'getnameinfo', Load(), lineno=322, col_offset=12), [Tuple([Str('x', lineno=322, col_offset=32), Num(0, lineno=322, col_offset=37), Num(0, lineno=322, col_offset=40), Num(0, lineno=322, col_offset=43)], Load(), lineno=322, col_offset=32), Num(0, lineno=322, col_offset=47)], [], None, None, lineno=322, col_offset=12), lineno=322, col_offset=12)], [ExceptHandler(Attribute(Name('socket', Load(), lineno=323, col_offset=15), 'error', Load(), lineno=323, col_offset=15), None, [Pass( lineno=324, col_offset=12)], lineno=323, col_offset=8)], [], lineno=320, col_offset=8)], [], lineno=318, col_offset=4), FunctionDef('testNtoH', arguments([Name('self', Param(), lineno=326, col_offset=17)], None, None, []), [Assign([Name('sizes', Store(), lineno=329, col_offset=8)], Dict([Attribute(Name('socket', Load(), lineno=329, col_offset=17), 'htonl', Load(), lineno=329, col_offset=17), Attribute(Name('socket', Load(), lineno=329, col_offset=35), 'ntohl', Load(), lineno=329, col_offset=35), Attribute(Name('socket', Load(), lineno=330, col_offset=17), 'htons', Load(), lineno=330, col_offset=17), Attribute(Name('socket', Load(), lineno=330, col_offset=35), 'ntohs', Load(), lineno=330, col_offset=35)], [Num(32, lineno=329, col_offset=31), Num(32, lineno=329, col_offset=49), Num(16, lineno=330, col_offset=31), Num(16, lineno=330, col_offset=49)], lineno=329, col_offset=16), lineno=329, col_offset=8), For(Tuple([Name('func', Store(), lineno=331, col_offset=12), Name('size', Store(), lineno=331, col_offset=18)], Store(), lineno=331, col_offset=12), Call(Attribute(Name('sizes', Load(), lineno=331, col_offset=26), 'items', Load(), lineno=331, col_offset=26), [], [], None, None, lineno=331, col_offset=26), [Assign([Name('mask', Store(), lineno=332, col_offset=12)], BinOp(BinOp(Num(1L, lineno=332, col_offset=20), LShift(), Name('size', Load(), lineno=332, col_offset=24), lineno=332, col_offset=20), Sub(), Num(1, lineno=332, col_offset=32), lineno=332, col_offset=19), lineno=332, col_offset=12), For(Name('i', Store(), lineno=333, col_offset=16), Tuple([Num(0, lineno=333, col_offset=22), Num(1, lineno=333, col_offset=25), Num(65535, lineno=333, col_offset=28), UnaryOp(Invert(), Num(65535, lineno=333, col_offset=37), lineno=333, col_offset=36), Num(2, lineno=333, col_offset=45), Num(19088743, lineno=333, col_offset=48), Num(1985229328, lineno=333, col_offset=60)], Load(), lineno=333, col_offset=22), [Expr(Call(Attribute(Name('self', Load(), lineno=334, col_offset=16), 'assertEqual', Load(), lineno=334, col_offset=16), [BinOp(Name('i', Load(), lineno=334, col_offset=33), BitAnd(), Name('mask', Load(), lineno=334, col_offset=37), lineno=334, col_offset=33), BinOp(Call(Name('func', Load(), lineno=334, col_offset=43), [Call(Name('func', Load(), lineno=334, col_offset=48), [BinOp(Name('i', Load(), lineno=334, col_offset=53), BitAnd(), Name('mask', Load(), lineno=334, col_offset=55), lineno=334, col_offset=53)], [], None, None, lineno=334, col_offset=48)], [], None, None, lineno=334, col_offset=43), BitAnd(), Name('mask', Load(), lineno=334, col_offset=64), lineno=334, col_offset=43)], [], None, None, lineno=334, col_offset=16), lineno=334, col_offset=16)], [], lineno=333, col_offset=12), Assign([Name('swapped', Store(), lineno=336, col_offset=12)], Call(Name('func', Load(), lineno=336, col_offset=22), [Name('mask', Load(), lineno=336, col_offset=27)], [], None, None, lineno=336, col_offset=22), lineno=336, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=337, col_offset=12), 'assertEqual', Load(), lineno=337, col_offset=12), [BinOp(Name('swapped', Load(), lineno=337, col_offset=29), BitAnd(), Name('mask', Load(), lineno=337, col_offset=39), lineno=337, col_offset=29), Name('mask', Load(), lineno=337, col_offset=45)], [], None, None, lineno=337, col_offset=12), lineno=337, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=338, col_offset=12), 'assertRaises', Load(), lineno=338, col_offset=12), [Name('OverflowError', Load(), lineno=338, col_offset=30), Name('func', Load(), lineno=338, col_offset=45), BinOp(Num(1L, lineno=338, col_offset=51), LShift(), Num(34, lineno=338, col_offset=55), lineno=338, col_offset=51)], [], None, None, lineno=338, col_offset=12), lineno=338, col_offset=12)], [], lineno=331, col_offset=8)], [], lineno=326, col_offset=4), FunctionDef('testNtoHErrors', arguments([Name('self', Param(), lineno=340, col_offset=23)], None, None, []), [Assign([Name('good_values', Store(), lineno=341, col_offset=8)], List([Num(1, lineno=341, col_offset=24), Num(2, lineno=341, col_offset=27), Num(3, lineno=341, col_offset=30), Num(1L, lineno=341, col_offset=33), Num(2L, lineno=341, col_offset=37), Num(3L, lineno=341, col_offset=41)], Load(), lineno=341, col_offset=22), lineno=341, col_offset=8), Assign([Name('bad_values', Store(), lineno=342, col_offset=8)], List([Num(-1, lineno=342, col_offset=24), Num(-2, lineno=342, col_offset=28), Num(-3, lineno=342, col_offset=32), Num(-1L, lineno=342, col_offset=36), Num(-2L, lineno=342, col_offset=41), Num(-3L, lineno=342, col_offset=46)], Load(), lineno=342, col_offset=21), lineno=342, col_offset=8), For(Name('k', Store(), lineno=343, col_offset=12), Name('good_values', Load(), lineno=343, col_offset=17), [Expr(Call(Attribute(Name('socket', Load(), lineno=344, col_offset=12), 'ntohl', Load(), lineno=344, col_offset=12), [Name('k', Load(), lineno=344, col_offset=25)], [], None, None, lineno=344, col_offset=12), lineno=344, col_offset=12), Expr(Call(Attribute(Name('socket', Load(), lineno=345, col_offset=12), 'ntohs', Load(), lineno=345, col_offset=12), [Name('k', Load(), lineno=345, col_offset=25)], [], None, None, lineno=345, col_offset=12), lineno=345, col_offset=12), Expr(Call(Attribute(Name('socket', Load(), lineno=346, col_offset=12), 'htonl', Load(), lineno=346, col_offset=12), [Name('k', Load(), lineno=346, col_offset=25)], [], None, None, lineno=346, col_offset=12), lineno=346, col_offset=12), Expr(Call(Attribute(Name('socket', Load(), lineno=347, col_offset=12), 'htons', Load(), lineno=347, col_offset=12), [Name('k', Load(), lineno=347, col_offset=25)], [], None, None, lineno=347, col_offset=12), lineno=347, col_offset=12)], [], lineno=343, col_offset=8), For(Name('k', Store(), lineno=348, col_offset=12), Name('bad_values', Load(), lineno=348, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=349, col_offset=12), 'assertRaises', Load(), lineno=349, col_offset=12), [Name('OverflowError', Load(), lineno=349, col_offset=30), Attribute(Name('socket', Load(), lineno=349, col_offset=45), 'ntohl', Load(), lineno=349, col_offset=45), Name('k', Load(), lineno=349, col_offset=59)], [], None, None, lineno=349, col_offset=12), lineno=349, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=350, col_offset=12), 'assertRaises', Load(), lineno=350, col_offset=12), [Name('OverflowError', Load(), lineno=350, col_offset=30), Attribute(Name('socket', Load(), lineno=350, col_offset=45), 'ntohs', Load(), lineno=350, col_offset=45), Name('k', Load(), lineno=350, col_offset=59)], [], None, None, lineno=350, col_offset=12), lineno=350, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=351, col_offset=12), 'assertRaises', Load(), lineno=351, col_offset=12), [Name('OverflowError', Load(), lineno=351, col_offset=30), Attribute(Name('socket', Load(), lineno=351, col_offset=45), 'htonl', Load(), lineno=351, col_offset=45), Name('k', Load(), lineno=351, col_offset=59)], [], None, None, lineno=351, col_offset=12), lineno=351, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=352, col_offset=12), 'assertRaises', Load(), lineno=352, col_offset=12), [Name('OverflowError', Load(), lineno=352, col_offset=30), Attribute(Name('socket', Load(), lineno=352, col_offset=45), 'htons', Load(), lineno=352, col_offset=45), Name('k', Load(), lineno=352, col_offset=59)], [], None, None, lineno=352, col_offset=12), lineno=352, col_offset=12)], [], lineno=348, col_offset=8)], [], lineno=340, col_offset=4), FunctionDef('testGetServBy', arguments([Name('self', Param(), lineno=354, col_offset=22)], None, None, []), [Assign([Name('eq', Store(), lineno=355, col_offset=8)], Attribute(Name('self', Load(), lineno=355, col_offset=13), 'assertEqual', Load(), lineno=355, col_offset=13), lineno=355, col_offset=8), If(BoolOp(Or(), [Call(Attribute(Attribute(Name('sys', Load(), lineno=359, col_offset=12), 'platform', Load(), lineno=359, col_offset=12), 'startswith', Load(), lineno=359, col_offset=12), [Str('linux', lineno=359, col_offset=36)], [], None, None, lineno=359, col_offset=12), Call(Attribute(Attribute(Name('sys', Load(), lineno=360, col_offset=12), 'platform', Load(), lineno=360, col_offset=12), 'startswith', Load(), lineno=360, col_offset=12), [Str('freebsd', lineno=360, col_offset=36)], [], None, None, lineno=360, col_offset=12), Call(Attribute(Attribute(Name('sys', Load(), lineno=361, col_offset=12), 'platform', Load(), lineno=361, col_offset=12), 'startswith', Load(), lineno=361, col_offset=12), [Str('netbsd', lineno=361, col_offset=36)], [], None, None, lineno=361, col_offset=12), Compare(Attribute(Name('sys', Load(), lineno=362, col_offset=12), 'platform', Load(), lineno=362, col_offset=12), [Eq()], [Str('darwin', lineno=362, col_offset=28)], lineno=362, col_offset=12)], lineno=359, col_offset=12), [Assign([Name('services', Store(), lineno=365, col_offset=12)], Tuple([Str('daytime', lineno=365, col_offset=24), Str('qotd', lineno=365, col_offset=35), Str('domain', lineno=365, col_offset=43)], Load(), lineno=365, col_offset=24), lineno=365, col_offset=12)], [Assign([Name('services', Store(), lineno=367, col_offset=12)], Tuple([Str('echo', lineno=367, col_offset=24), Str('daytime', lineno=367, col_offset=32), Str('domain', lineno=367, col_offset=43)], Load(), lineno=367, col_offset=24), lineno=367, col_offset=12)], lineno=359, col_offset=8), For(Name('service', Store(), lineno=368, col_offset=12), Name('services', Load(), lineno=368, col_offset=23), [TryExcept([Assign([Name('port', Store(), lineno=370, col_offset=16)], Call(Attribute(Name('socket', Load(), lineno=370, col_offset=23), 'getservbyname', Load(), lineno=370, col_offset=23), [Name('service', Load(), lineno=370, col_offset=44), Str('tcp', lineno=370, col_offset=53)], [], None, None, lineno=370, col_offset=23), lineno=370, col_offset=16), Break( lineno=371, col_offset=16)], [ExceptHandler(Attribute(Name('socket', Load(), lineno=372, col_offset=19), 'error', Load(), lineno=372, col_offset=19), None, [Pass( lineno=373, col_offset=16)], lineno=372, col_offset=12)], [], lineno=369, col_offset=12)], [Raise(Attribute(Name('socket', Load(), lineno=375, col_offset=18), 'error', Load(), lineno=375, col_offset=18), None, None, lineno=375, col_offset=12)], lineno=368, col_offset=8), Assign([Name('port2', Store(), lineno=377, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=377, col_offset=16), 'getservbyname', Load(), lineno=377, col_offset=16), [Name('service', Load(), lineno=377, col_offset=37)], [], None, None, lineno=377, col_offset=16), lineno=377, col_offset=8), Expr(Call(Name('eq', Load(), lineno=378, col_offset=8), [Name('port', Load(), lineno=378, col_offset=11), Name('port2', Load(), lineno=378, col_offset=17)], [], None, None, lineno=378, col_offset=8), lineno=378, col_offset=8), TryExcept([Assign([Name('udpport', Store(), lineno=381, col_offset=12)], Call(Attribute(Name('socket', Load(), lineno=381, col_offset=22), 'getservbyname', Load(), lineno=381, col_offset=22), [Name('service', Load(), lineno=381, col_offset=43), Str('udp', lineno=381, col_offset=52)], [], None, None, lineno=381, col_offset=22), lineno=381, col_offset=12)], [ExceptHandler(Attribute(Name('socket', Load(), lineno=382, col_offset=15), 'error', Load(), lineno=382, col_offset=15), None, [Assign([Name('udpport', Store(), lineno=383, col_offset=12)], Name('None', Load(), lineno=383, col_offset=22), lineno=383, col_offset=12)], lineno=382, col_offset=8)], [Expr(Call(Name('eq', Load(), lineno=385, col_offset=12), [Name('udpport', Load(), lineno=385, col_offset=15), Name('port', Load(), lineno=385, col_offset=24)], [], None, None, lineno=385, col_offset=12), lineno=385, col_offset=12)], lineno=380, col_offset=8), Expr(Call(Name('eq', Load(), lineno=387, col_offset=8), [Call(Attribute(Name('socket', Load(), lineno=387, col_offset=11), 'getservbyport', Load(), lineno=387, col_offset=11), [Name('port2', Load(), lineno=387, col_offset=32)], [], None, None, lineno=387, col_offset=11), Name('service', Load(), lineno=387, col_offset=40)], [], None, None, lineno=387, col_offset=8), lineno=387, col_offset=8), Expr(Call(Name('eq', Load(), lineno=388, col_offset=8), [Call(Attribute(Name('socket', Load(), lineno=388, col_offset=11), 'getservbyport', Load(), lineno=388, col_offset=11), [Name('port', Load(), lineno=388, col_offset=32), Str('tcp', lineno=388, col_offset=38)], [], None, None, lineno=388, col_offset=11), Name('service', Load(), lineno=388, col_offset=46)], [], None, None, lineno=388, col_offset=8), lineno=388, col_offset=8), If(Compare(Name('udpport', Load(), lineno=389, col_offset=11), [IsNot()], [Name('None', Load(), lineno=389, col_offset=26)], lineno=389, col_offset=11), [Expr(Call(Name('eq', Load(), lineno=390, col_offset=12), [Call(Attribute(Name('socket', Load(), lineno=390, col_offset=15), 'getservbyport', Load(), lineno=390, col_offset=15), [Name('udpport', Load(), lineno=390, col_offset=36), Str('udp', lineno=390, col_offset=45)], [], None, None, lineno=390, col_offset=15), Name('service', Load(), lineno=390, col_offset=53)], [], None, None, lineno=390, col_offset=12), lineno=390, col_offset=12)], [], lineno=389, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=392, col_offset=8), 'assertRaises', Load(), lineno=392, col_offset=8), [Name('OverflowError', Load(), lineno=392, col_offset=26), Attribute(Name('socket', Load(), lineno=392, col_offset=41), 'getservbyport', Load(), lineno=392, col_offset=41), Num(-1, lineno=392, col_offset=64)], [], None, None, lineno=392, col_offset=8), lineno=392, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=393, col_offset=8), 'assertRaises', Load(), lineno=393, col_offset=8), [Name('OverflowError', Load(), lineno=393, col_offset=26), Attribute(Name('socket', Load(), lineno=393, col_offset=41), 'getservbyport', Load(), lineno=393, col_offset=41), Num(65536, lineno=393, col_offset=63)], [], None, None, lineno=393, col_offset=8), lineno=393, col_offset=8)], [], lineno=354, col_offset=4), FunctionDef('testDefaultTimeout', arguments([Name('self', Param(), lineno=395, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=398, col_offset=8), 'assertEqual', Load(), lineno=398, col_offset=8), [Call(Attribute(Name('socket', Load(), lineno=398, col_offset=25), 'getdefaulttimeout', Load(), lineno=398, col_offset=25), [], [], None, None, lineno=398, col_offset=25), Name('None', Load(), lineno=398, col_offset=53)], [], None, None, lineno=398, col_offset=8), lineno=398, col_offset=8), Assign([Name('s', Store(), lineno=399, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=399, col_offset=12), 'socket', Load(), lineno=399, col_offset=12), [], [], None, None, lineno=399, col_offset=12), lineno=399, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=400, col_offset=8), 'assertEqual', Load(), lineno=400, col_offset=8), [Call(Attribute(Name('s', Load(), lineno=400, col_offset=25), 'gettimeout', Load(), lineno=400, col_offset=25), [], [], None, None, lineno=400, col_offset=25), Name('None', Load(), lineno=400, col_offset=41)], [], None, None, lineno=400, col_offset=8), lineno=400, col_offset=8), Expr(Call(Attribute(Name('s', Load(), lineno=401, col_offset=8), 'close', Load(), lineno=401, col_offset=8), [], [], None, None, lineno=401, col_offset=8), lineno=401, col_offset=8), Expr(Call(Attribute(Name('socket', Load(), lineno=404, col_offset=8), 'setdefaulttimeout', Load(), lineno=404, col_offset=8), [Num(10, lineno=404, col_offset=33)], [], None, None, lineno=404, col_offset=8), lineno=404, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=405, col_offset=8), 'assertEqual', Load(), lineno=405, col_offset=8), [Call(Attribute(Name('socket', Load(), lineno=405, col_offset=25), 'getdefaulttimeout', Load(), lineno=405, col_offset=25), [], [], None, None, lineno=405, col_offset=25), Num(10, lineno=405, col_offset=53)], [], None, None, lineno=405, col_offset=8), lineno=405, col_offset=8), Assign([Name('s', Store(), lineno=406, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=406, col_offset=12), 'socket', Load(), lineno=406, col_offset=12), [], [], None, None, lineno=406, col_offset=12), lineno=406, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=407, col_offset=8), 'assertEqual', Load(), lineno=407, col_offset=8), [Call(Attribute(Name('s', Load(), lineno=407, col_offset=25), 'gettimeout', Load(), lineno=407, col_offset=25), [], [], None, None, lineno=407, col_offset=25), Num(10, lineno=407, col_offset=41)], [], None, None, lineno=407, col_offset=8), lineno=407, col_offset=8), Expr(Call(Attribute(Name('s', Load(), lineno=408, col_offset=8), 'close', Load(), lineno=408, col_offset=8), [], [], None, None, lineno=408, col_offset=8), lineno=408, col_offset=8), Expr(Call(Attribute(Name('socket', Load(), lineno=411, col_offset=8), 'setdefaulttimeout', Load(), lineno=411, col_offset=8), [Name('None', Load(), lineno=411, col_offset=33)], [], None, None, lineno=411, col_offset=8), lineno=411, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=412, col_offset=8), 'assertEqual', Load(), lineno=412, col_offset=8), [Call(Attribute(Name('socket', Load(), lineno=412, col_offset=25), 'getdefaulttimeout', Load(), lineno=412, col_offset=25), [], [], None, None, lineno=412, col_offset=25), Name('None', Load(), lineno=412, col_offset=53)], [], None, None, lineno=412, col_offset=8), lineno=412, col_offset=8), Assign([Name('s', Store(), lineno=413, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=413, col_offset=12), 'socket', Load(), lineno=413, col_offset=12), [], [], None, None, lineno=413, col_offset=12), lineno=413, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=414, col_offset=8), 'assertEqual', Load(), lineno=414, col_offset=8), [Call(Attribute(Name('s', Load(), lineno=414, col_offset=25), 'gettimeout', Load(), lineno=414, col_offset=25), [], [], None, None, lineno=414, col_offset=25), Name('None', Load(), lineno=414, col_offset=41)], [], None, None, lineno=414, col_offset=8), lineno=414, col_offset=8), Expr(Call(Attribute(Name('s', Load(), lineno=415, col_offset=8), 'close', Load(), lineno=415, col_offset=8), [], [], None, None, lineno=415, col_offset=8), lineno=415, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=418, col_offset=8), 'assertRaises', Load(), lineno=418, col_offset=8), [Name('ValueError', Load(), lineno=418, col_offset=26), Attribute(Name('socket', Load(), lineno=418, col_offset=38), 'setdefaulttimeout', Load(), lineno=418, col_offset=38), Num(-1, lineno=418, col_offset=65)], [], None, None, lineno=418, col_offset=8), lineno=418, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=421, col_offset=8), 'assertRaises', Load(), lineno=421, col_offset=8), [Name('TypeError', Load(), lineno=421, col_offset=26), Attribute(Name('socket', Load(), lineno=421, col_offset=37), 'setdefaulttimeout', Load(), lineno=421, col_offset=37), Str('spam', lineno=421, col_offset=63)], [], None, None, lineno=421, col_offset=8), lineno=421, col_offset=8)], [], lineno=395, col_offset=4), FunctionDef('testIPv4_inet_aton_fourbytes', arguments([Name('self', Param(), lineno=423, col_offset=37)], None, None, []), [If(UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=424, col_offset=15), [Name('socket', Load(), lineno=424, col_offset=23), Str('inet_aton', lineno=424, col_offset=31)], [], None, None, lineno=424, col_offset=15), lineno=424, col_offset=11), [Return(None, lineno=425, col_offset=12)], [], lineno=424, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=428, col_offset=8), 'assertEqual', Load(), lineno=428, col_offset=8), [BinOp(Str('\x00', lineno=428, col_offset=25), Mult(), Num(4, lineno=428, col_offset=32), lineno=428, col_offset=25), Call(Attribute(Name('socket', Load(), lineno=428, col_offset=35), 'inet_aton', Load(), lineno=428, col_offset=35), [Str('0.0.0.0', lineno=428, col_offset=52)], [], None, None, lineno=428, col_offset=35)], [], None, None, lineno=428, col_offset=8), lineno=428, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=429, col_offset=8), 'assertEqual', Load(), lineno=429, col_offset=8), [BinOp(Str('\xff', lineno=429, col_offset=25), Mult(), Num(4, lineno=429, col_offset=32), lineno=429, col_offset=25), Call(Attribute(Name('socket', Load(), lineno=429, col_offset=35), 'inet_aton', Load(), lineno=429, col_offset=35), [Str('255.255.255.255', lineno=429, col_offset=52)], [], None, None, lineno=429, col_offset=35)], [], None, None, lineno=429, col_offset=8), lineno=429, col_offset=8)], [], lineno=423, col_offset=4), FunctionDef('testIPv4toString', arguments([Name('self', Param(), lineno=431, col_offset=25)], None, None, []), [If(UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=432, col_offset=15), [Name('socket', Load(), lineno=432, col_offset=23), Str('inet_pton', lineno=432, col_offset=31)], [], None, None, lineno=432, col_offset=15), lineno=432, col_offset=11), [Return(None, lineno=433, col_offset=12)], [], lineno=432, col_offset=8), ImportFrom('socket', [alias('inet_aton', 'f'), alias('inet_pton', None), alias('AF_INET', None)], 0, lineno=434, col_offset=8), Assign([Name('g', Store(), lineno=435, col_offset=8)], Lambda(arguments([Name('a', Param(), lineno=435, col_offset=19)], None, None, []), Call(Name('inet_pton', Load(), lineno=435, col_offset=22), [Name('AF_INET', Load(), lineno=435, col_offset=32), Name('a', Load(), lineno=435, col_offset=41)], [], None, None, lineno=435, col_offset=22), lineno=435, col_offset=12), lineno=435, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=437, col_offset=8), 'assertEqual', Load(), lineno=437, col_offset=8), [Str('\x00\x00\x00\x00', lineno=437, col_offset=25), Call(Name('f', Load(), lineno=437, col_offset=45), [Str('0.0.0.0', lineno=437, col_offset=47)], [], None, None, lineno=437, col_offset=45)], [], None, None, lineno=437, col_offset=8), lineno=437, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=438, col_offset=8), 'assertEqual', Load(), lineno=438, col_offset=8), [Str('\xff\x00\xff\x00', lineno=438, col_offset=25), Call(Name('f', Load(), lineno=438, col_offset=45), [Str('255.0.255.0', lineno=438, col_offset=47)], [], None, None, lineno=438, col_offset=45)], [], None, None, lineno=438, col_offset=8), lineno=438, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=439, col_offset=8), 'assertEqual', Load(), lineno=439, col_offset=8), [Str('\xaa\xaa\xaa\xaa', lineno=439, col_offset=25), Call(Name('f', Load(), lineno=439, col_offset=45), [Str('170.170.170.170', lineno=439, col_offset=47)], [], None, None, lineno=439, col_offset=45)], [], None, None, lineno=439, col_offset=8), lineno=439, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=440, col_offset=8), 'assertEqual', Load(), lineno=440, col_offset=8), [Str('\x01\x02\x03\x04', lineno=440, col_offset=25), Call(Name('f', Load(), lineno=440, col_offset=45), [Str('1.2.3.4', lineno=440, col_offset=47)], [], None, None, lineno=440, col_offset=45)], [], None, None, lineno=440, col_offset=8), lineno=440, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=441, col_offset=8), 'assertEqual', Load(), lineno=441, col_offset=8), [Str('\xff\xff\xff\xff', lineno=441, col_offset=25), Call(Name('f', Load(), lineno=441, col_offset=45), [Str('255.255.255.255', lineno=441, col_offset=47)], [], None, None, lineno=441, col_offset=45)], [], None, None, lineno=441, col_offset=8), lineno=441, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=443, col_offset=8), 'assertEqual', Load(), lineno=443, col_offset=8), [Str('\x00\x00\x00\x00', lineno=443, col_offset=25), Call(Name('g', Load(), lineno=443, col_offset=45), [Str('0.0.0.0', lineno=443, col_offset=47)], [], None, None, lineno=443, col_offset=45)], [], None, None, lineno=443, col_offset=8), lineno=443, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=444, col_offset=8), 'assertEqual', Load(), lineno=444, col_offset=8), [Str('\xff\x00\xff\x00', lineno=444, col_offset=25), Call(Name('g', Load(), lineno=444, col_offset=45), [Str('255.0.255.0', lineno=444, col_offset=47)], [], None, None, lineno=444, col_offset=45)], [], None, None, lineno=444, col_offset=8), lineno=444, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=445, col_offset=8), 'assertEqual', Load(), lineno=445, col_offset=8), [Str('\xaa\xaa\xaa\xaa', lineno=445, col_offset=25), Call(Name('g', Load(), lineno=445, col_offset=45), [Str('170.170.170.170', lineno=445, col_offset=47)], [], None, None, lineno=445, col_offset=45)], [], None, None, lineno=445, col_offset=8), lineno=445, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=446, col_offset=8), 'assertEqual', Load(), lineno=446, col_offset=8), [Str('\xff\xff\xff\xff', lineno=446, col_offset=25), Call(Name('g', Load(), lineno=446, col_offset=45), [Str('255.255.255.255', lineno=446, col_offset=47)], [], None, None, lineno=446, col_offset=45)], [], None, None, lineno=446, col_offset=8), lineno=446, col_offset=8)], [], lineno=431, col_offset=4), FunctionDef('testIPv6toString', arguments([Name('self', Param(), lineno=448, col_offset=25)], None, None, []), [If(UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=449, col_offset=15), [Name('socket', Load(), lineno=449, col_offset=23), Str('inet_pton', lineno=449, col_offset=31)], [], None, None, lineno=449, col_offset=15), lineno=449, col_offset=11), [Return(None, lineno=450, col_offset=12)], [], lineno=449, col_offset=8), TryExcept([ImportFrom('socket', [alias('inet_pton', None), alias('AF_INET6', None), alias('has_ipv6', None)], 0, lineno=452, col_offset=12), If(UnaryOp(Not(), Name('has_ipv6', Load(), lineno=453, col_offset=19), lineno=453, col_offset=15), [Return(None, lineno=454, col_offset=16)], [], lineno=453, col_offset=12)], [ExceptHandler(Name('ImportError', Load(), lineno=455, col_offset=15), None, [Return(None, lineno=456, col_offset=12)], lineno=455, col_offset=8)], [], lineno=451, col_offset=8), Assign([Name('f', Store(), lineno=457, col_offset=8)], Lambda(arguments([Name('a', Param(), lineno=457, col_offset=19)], None, None, []), Call(Name('inet_pton', Load(), lineno=457, col_offset=22), [Name('AF_INET6', Load(), lineno=457, col_offset=32), Name('a', Load(), lineno=457, col_offset=42)], [], None, None, lineno=457, col_offset=22), lineno=457, col_offset=12), lineno=457, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=459, col_offset=8), 'assertEqual', Load(), lineno=459, col_offset=8), [BinOp(Str('\x00', lineno=459, col_offset=25), Mult(), Num(16, lineno=459, col_offset=34), lineno=459, col_offset=25), Call(Name('f', Load(), lineno=459, col_offset=38), [Str('::', lineno=459, col_offset=40)], [], None, None, lineno=459, col_offset=38)], [], None, None, lineno=459, col_offset=8), lineno=459, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=460, col_offset=8), 'assertEqual', Load(), lineno=460, col_offset=8), [BinOp(Str('\x00', lineno=460, col_offset=25), Mult(), Num(16, lineno=460, col_offset=34), lineno=460, col_offset=25), Call(Name('f', Load(), lineno=460, col_offset=38), [Str('0::0', lineno=460, col_offset=40)], [], None, None, lineno=460, col_offset=38)], [], None, None, lineno=460, col_offset=8), lineno=460, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=461, col_offset=8), 'assertEqual', Load(), lineno=461, col_offset=8), [BinOp(Str('\x00\x01', lineno=461, col_offset=25), Add(), BinOp(Str('\x00', lineno=461, col_offset=38), Mult(), Num(14, lineno=461, col_offset=47), lineno=461, col_offset=38), lineno=461, col_offset=25), Call(Name('f', Load(), lineno=461, col_offset=51), [Str('1::', lineno=461, col_offset=53)], [], None, None, lineno=461, col_offset=51)], [], None, None, lineno=461, col_offset=8), lineno=461, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=462, col_offset=8), 'assertEqual', Load(), lineno=462, col_offset=8), [Str('E\xefv\xcb\x00\x1aV\xef\xaf\xeb\x0b\xac\x19$\xae\xae', lineno=463, col_offset=12), Call(Name('f', Load(), lineno=464, col_offset=12), [Str('45ef:76cb:1a:56ef:afeb:bac:1924:aeae', lineno=464, col_offset=14)], [], None, None, lineno=464, col_offset=12)], [], None, None, lineno=462, col_offset=8), lineno=462, col_offset=8)], [], lineno=448, col_offset=4), FunctionDef('testStringToIPv4', arguments([Name('self', Param(), lineno=467, col_offset=25)], None, None, []), [If(UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=468, col_offset=15), [Name('socket', Load(), lineno=468, col_offset=23), Str('inet_ntop', lineno=468, col_offset=31)], [], None, None, lineno=468, col_offset=15), lineno=468, col_offset=11), [Return(None, lineno=469, col_offset=12)], [], lineno=468, col_offset=8), ImportFrom('socket', [alias('inet_ntoa', 'f'), alias('inet_ntop', None), alias('AF_INET', None)], 0, lineno=470, col_offset=8), Assign([Name('g', Store(), lineno=471, col_offset=8)], Lambda(arguments([Name('a', Param(), lineno=471, col_offset=19)], None, None, []), Call(Name('inet_ntop', Load(), lineno=471, col_offset=22), [Name('AF_INET', Load(), lineno=471, col_offset=32), Name('a', Load(), lineno=471, col_offset=41)], [], None, None, lineno=471, col_offset=22), lineno=471, col_offset=12), lineno=471, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=473, col_offset=8), 'assertEqual', Load(), lineno=473, col_offset=8), [Str('1.0.1.0', lineno=473, col_offset=25), Call(Name('f', Load(), lineno=473, col_offset=36), [Str('\x01\x00\x01\x00', lineno=473, col_offset=38)], [], None, None, lineno=473, col_offset=36)], [], None, None, lineno=473, col_offset=8), lineno=473, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=474, col_offset=8), 'assertEqual', Load(), lineno=474, col_offset=8), [Str('170.85.170.85', lineno=474, col_offset=25), Call(Name('f', Load(), lineno=474, col_offset=42), [Str('\xaaU\xaaU', lineno=474, col_offset=44)], [], None, None, lineno=474, col_offset=42)], [], None, None, lineno=474, col_offset=8), lineno=474, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=475, col_offset=8), 'assertEqual', Load(), lineno=475, col_offset=8), [Str('255.255.255.255', lineno=475, col_offset=25), Call(Name('f', Load(), lineno=475, col_offset=44), [Str('\xff\xff\xff\xff', lineno=475, col_offset=46)], [], None, None, lineno=475, col_offset=44)], [], None, None, lineno=475, col_offset=8), lineno=475, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=476, col_offset=8), 'assertEqual', Load(), lineno=476, col_offset=8), [Str('1.2.3.4', lineno=476, col_offset=25), Call(Name('f', Load(), lineno=476, col_offset=36), [Str('\x01\x02\x03\x04', lineno=476, col_offset=38)], [], None, None, lineno=476, col_offset=36)], [], None, None, lineno=476, col_offset=8), lineno=476, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=478, col_offset=8), 'assertEqual', Load(), lineno=478, col_offset=8), [Str('1.0.1.0', lineno=478, col_offset=25), Call(Name('g', Load(), lineno=478, col_offset=36), [Str('\x01\x00\x01\x00', lineno=478, col_offset=38)], [], None, None, lineno=478, col_offset=36)], [], None, None, lineno=478, col_offset=8), lineno=478, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=479, col_offset=8), 'assertEqual', Load(), lineno=479, col_offset=8), [Str('170.85.170.85', lineno=479, col_offset=25), Call(Name('g', Load(), lineno=479, col_offset=42), [Str('\xaaU\xaaU', lineno=479, col_offset=44)], [], None, None, lineno=479, col_offset=42)], [], None, None, lineno=479, col_offset=8), lineno=479, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=480, col_offset=8), 'assertEqual', Load(), lineno=480, col_offset=8), [Str('255.255.255.255', lineno=480, col_offset=25), Call(Name('g', Load(), lineno=480, col_offset=44), [Str('\xff\xff\xff\xff', lineno=480, col_offset=46)], [], None, None, lineno=480, col_offset=44)], [], None, None, lineno=480, col_offset=8), lineno=480, col_offset=8)], [], lineno=467, col_offset=4), FunctionDef('testStringToIPv6', arguments([Name('self', Param(), lineno=482, col_offset=25)], None, None, []), [If(UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=483, col_offset=15), [Name('socket', Load(), lineno=483, col_offset=23), Str('inet_ntop', lineno=483, col_offset=31)], [], None, None, lineno=483, col_offset=15), lineno=483, col_offset=11), [Return(None, lineno=484, col_offset=12)], [], lineno=483, col_offset=8), TryExcept([ImportFrom('socket', [alias('inet_ntop', None), alias('AF_INET6', None), alias('has_ipv6', None)], 0, lineno=486, col_offset=12), If(UnaryOp(Not(), Name('has_ipv6', Load(), lineno=487, col_offset=19), lineno=487, col_offset=15), [Return(None, lineno=488, col_offset=16)], [], lineno=487, col_offset=12)], [ExceptHandler(Name('ImportError', Load(), lineno=489, col_offset=15), None, [Return(None, lineno=490, col_offset=12)], lineno=489, col_offset=8)], [], lineno=485, col_offset=8), Assign([Name('f', Store(), lineno=491, col_offset=8)], Lambda(arguments([Name('a', Param(), lineno=491, col_offset=19)], None, None, []), Call(Name('inet_ntop', Load(), lineno=491, col_offset=22), [Name('AF_INET6', Load(), lineno=491, col_offset=32), Name('a', Load(), lineno=491, col_offset=42)], [], None, None, lineno=491, col_offset=22), lineno=491, col_offset=12), lineno=491, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=493, col_offset=8), 'assertEqual', Load(), lineno=493, col_offset=8), [Str('::', lineno=493, col_offset=25), Call(Name('f', Load(), lineno=493, col_offset=31), [BinOp(Str('\x00', lineno=493, col_offset=33), Mult(), Num(16, lineno=493, col_offset=42), lineno=493, col_offset=33)], [], None, None, lineno=493, col_offset=31)], [], None, None, lineno=493, col_offset=8), lineno=493, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=494, col_offset=8), 'assertEqual', Load(), lineno=494, col_offset=8), [Str('::1', lineno=494, col_offset=25), Call(Name('f', Load(), lineno=494, col_offset=32), [BinOp(BinOp(Str('\x00', lineno=494, col_offset=34), Mult(), Num(15, lineno=494, col_offset=43), lineno=494, col_offset=34), Add(), Str('\x01', lineno=494, col_offset=48), lineno=494, col_offset=34)], [], None, None, lineno=494, col_offset=32)], [], None, None, lineno=494, col_offset=8), lineno=494, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=495, col_offset=8), 'assertEqual', Load(), lineno=495, col_offset=8), [Str('aef:b01:506:1001:ffff:9997:55:170', lineno=496, col_offset=12), Call(Name('f', Load(), lineno=497, col_offset=12), [Str('\n\xef\x0b\x01\x05\x06\x10\x01\xff\xff\x99\x97\x00U\x01p', lineno=497, col_offset=14)], [], None, None, lineno=497, col_offset=12)], [], None, None, lineno=495, col_offset=8), lineno=495, col_offset=8)], [], lineno=482, col_offset=4), FunctionDef('_get_unused_port', arguments([Name('self', Param(), lineno=502, col_offset=25), Name('bind_address', Param(), lineno=502, col_offset=31)], None, None, [Str('0.0.0.0', lineno=502, col_offset=44)]), [Expr(Str('Use a temporary socket to elicit an unused ephemeral port.\n\n        Args:\n            bind_address: Hostname or IP address to search for a port on.\n\n        Returns: A most likely to be unused port.\n        ', lineno=509, col_offset=-1), lineno=509, col_offset=-1), Assign([Name('tempsock', Store(), lineno=510, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=510, col_offset=19), 'socket', Load(), lineno=510, col_offset=19), [], [], None, None, lineno=510, col_offset=19), lineno=510, col_offset=8), Expr(Call(Attribute(Name('tempsock', Load(), lineno=511, col_offset=8), 'bind', Load(), lineno=511, col_offset=8), [Tuple([Name('bind_address', Load(), lineno=511, col_offset=23), Num(0, lineno=511, col_offset=37)], Load(), lineno=511, col_offset=23)], [], None, None, lineno=511, col_offset=8), lineno=511, col_offset=8), Assign([Tuple([Name('host', Store(), lineno=512, col_offset=8), Name('port', Store(), lineno=512, col_offset=14)], Store(), lineno=512, col_offset=8)], Call(Attribute(Name('tempsock', Load(), lineno=512, col_offset=21), 'getsockname', Load(), lineno=512, col_offset=21), [], [], None, None, lineno=512, col_offset=21), lineno=512, col_offset=8), Expr(Call(Attribute(Name('tempsock', Load(), lineno=513, col_offset=8), 'close', Load(), lineno=513, col_offset=8), [], [], None, None, lineno=513, col_offset=8), lineno=513, col_offset=8), Return(Name('port', Load(), lineno=514, col_offset=15), lineno=514, col_offset=8)], [], lineno=502, col_offset=4), FunctionDef('testSockName', arguments([Name('self', Param(), lineno=516, col_offset=21)], None, None, []), [Assign([Name('port', Store(), lineno=518, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=518, col_offset=15), '_get_unused_port', Load(), lineno=518, col_offset=15), [], [], None, None, lineno=518, col_offset=15), lineno=518, col_offset=8), Assign([Name('sock', Store(), lineno=519, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=519, col_offset=15), 'socket', Load(), lineno=519, col_offset=15), [Attribute(Name('socket', Load(), lineno=519, col_offset=29), 'AF_INET', Load(), lineno=519, col_offset=29), Attribute(Name('socket', Load(), lineno=519, col_offset=45), 'SOCK_STREAM', Load(), lineno=519, col_offset=45)], [], None, None, lineno=519, col_offset=15), lineno=519, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=520, col_offset=8), 'addCleanup', Load(), lineno=520, col_offset=8), [Attribute(Name('sock', Load(), lineno=520, col_offset=24), 'close', Load(), lineno=520, col_offset=24)], [], None, None, lineno=520, col_offset=8), lineno=520, col_offset=8), Expr(Call(Attribute(Name('sock', Load(), lineno=521, col_offset=8), 'bind', Load(), lineno=521, col_offset=8), [Tuple([Str('0.0.0.0', lineno=521, col_offset=19), Name('port', Load(), lineno=521, col_offset=30)], Load(), lineno=521, col_offset=19)], [], None, None, lineno=521, col_offset=8), lineno=521, col_offset=8), Assign([Name('name', Store(), lineno=522, col_offset=8)], Call(Attribute(Name('sock', Load(), lineno=522, col_offset=15), 'getsockname', Load(), lineno=522, col_offset=15), [], [], None, None, lineno=522, col_offset=15), lineno=522, col_offset=8), TryExcept([Assign([Name('my_ip_addr', Store(), lineno=527, col_offset=12)], Call(Attribute(Name('socket', Load(), lineno=527, col_offset=25), 'gethostbyname', Load(), lineno=527, col_offset=25), [Call(Attribute(Name('socket', Load(), lineno=527, col_offset=46), 'gethostname', Load(), lineno=527, col_offset=46), [], [], None, None, lineno=527, col_offset=46)], [], None, None, lineno=527, col_offset=25), lineno=527, col_offset=12)], [ExceptHandler(Attribute(Name('socket', Load(), lineno=528, col_offset=15), 'error', Load(), lineno=528, col_offset=15), None, [Return(None, lineno=530, col_offset=12)], lineno=528, col_offset=8)], [], lineno=526, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=531, col_offset=8), 'assertIn', Load(), lineno=531, col_offset=8), [Subscript(Name('name', Load(), lineno=531, col_offset=22), Index(Num(0, lineno=531, col_offset=27)), Load(), lineno=531, col_offset=22), Tuple([Str('0.0.0.0', lineno=531, col_offset=32), Name('my_ip_addr', Load(), lineno=531, col_offset=43)], Load(), lineno=531, col_offset=32), BinOp(Str('%s invalid', lineno=531, col_offset=56), Mod(), Subscript(Name('name', Load(), lineno=531, col_offset=71), Index(Num(0, lineno=531, col_offset=76)), Load(), lineno=531, col_offset=71), lineno=531, col_offset=56)], [], None, None, lineno=531, col_offset=8), lineno=531, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=532, col_offset=8), 'assertEqual', Load(), lineno=532, col_offset=8), [Subscript(Name('name', Load(), lineno=532, col_offset=25), Index(Num(1, lineno=532, col_offset=30)), Load(), lineno=532, col_offset=25), Name('port', Load(), lineno=532, col_offset=34)], [], None, None, lineno=532, col_offset=8), lineno=532, col_offset=8)], [], lineno=516, col_offset=4), FunctionDef('testGetSockOpt', arguments([Name('self', Param(), lineno=534, col_offset=23)], None, None, []), [Assign([Name('sock', Store(), lineno=537, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=537, col_offset=15), 'socket', Load(), lineno=537, col_offset=15), [Attribute(Name('socket', Load(), lineno=537, col_offset=29), 'AF_INET', Load(), lineno=537, col_offset=29), Attribute(Name('socket', Load(), lineno=537, col_offset=45), 'SOCK_STREAM', Load(), lineno=537, col_offset=45)], [], None, None, lineno=537, col_offset=15), lineno=537, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=538, col_offset=8), 'addCleanup', Load(), lineno=538, col_offset=8), [Attribute(Name('sock', Load(), lineno=538, col_offset=24), 'close', Load(), lineno=538, col_offset=24)], [], None, None, lineno=538, col_offset=8), lineno=538, col_offset=8), Assign([Name('reuse', Store(), lineno=539, col_offset=8)], Call(Attribute(Name('sock', Load(), lineno=539, col_offset=16), 'getsockopt', Load(), lineno=539, col_offset=16), [Attribute(Name('socket', Load(), lineno=539, col_offset=32), 'SOL_SOCKET', Load(), lineno=539, col_offset=32), Attribute(Name('socket', Load(), lineno=539, col_offset=51), 'SO_REUSEADDR', Load(), lineno=539, col_offset=51)], [], None, None, lineno=539, col_offset=16), lineno=539, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=540, col_offset=8), 'assertFalse', Load(), lineno=540, col_offset=8), [Compare(Name('reuse', Load(), lineno=540, col_offset=25), [NotEq()], [Num(0, lineno=540, col_offset=34)], lineno=540, col_offset=25), Str('initial mode is reuse', lineno=540, col_offset=37)], [], None, None, lineno=540, col_offset=8), lineno=540, col_offset=8)], [], lineno=534, col_offset=4), FunctionDef('testSetSockOpt', arguments([Name('self', Param(), lineno=542, col_offset=23)], None, None, []), [Assign([Name('sock', Store(), lineno=544, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=544, col_offset=15), 'socket', Load(), lineno=544, col_offset=15), [Attribute(Name('socket', Load(), lineno=544, col_offset=29), 'AF_INET', Load(), lineno=544, col_offset=29), Attribute(Name('socket', Load(), lineno=544, col_offset=45), 'SOCK_STREAM', Load(), lineno=544, col_offset=45)], [], None, None, lineno=544, col_offset=15), lineno=544, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=545, col_offset=8), 'addCleanup', Load(), lineno=545, col_offset=8), [Attribute(Name('sock', Load(), lineno=545, col_offset=24), 'close', Load(), lineno=545, col_offset=24)], [], None, None, lineno=545, col_offset=8), lineno=545, col_offset=8), Expr(Call(Attribute(Name('sock', Load(), lineno=546, col_offset=8), 'setsockopt', Load(), lineno=546, col_offset=8), [Attribute(Name('socket', Load(), lineno=546, col_offset=24), 'SOL_SOCKET', Load(), lineno=546, col_offset=24), Attribute(Name('socket', Load(), lineno=546, col_offset=43), 'SO_REUSEADDR', Load(), lineno=546, col_offset=43), Num(1, lineno=546, col_offset=64)], [], None, None, lineno=546, col_offset=8), lineno=546, col_offset=8), Assign([Name('reuse', Store(), lineno=547, col_offset=8)], Call(Attribute(Name('sock', Load(), lineno=547, col_offset=16), 'getsockopt', Load(), lineno=547, col_offset=16), [Attribute(Name('socket', Load(), lineno=547, col_offset=32), 'SOL_SOCKET', Load(), lineno=547, col_offset=32), Attribute(Name('socket', Load(), lineno=547, col_offset=51), 'SO_REUSEADDR', Load(), lineno=547, col_offset=51)], [], None, None, lineno=547, col_offset=16), lineno=547, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=548, col_offset=8), 'assertFalse', Load(), lineno=548, col_offset=8), [Compare(Name('reuse', Load(), lineno=548, col_offset=25), [Eq()], [Num(0, lineno=548, col_offset=34)], lineno=548, col_offset=25), Str('failed to set reuse mode', lineno=548, col_offset=37)], [], None, None, lineno=548, col_offset=8), lineno=548, col_offset=8)], [], lineno=542, col_offset=4), FunctionDef('testSendAfterClose', arguments([Name('self', Param(), lineno=550, col_offset=27)], None, None, []), [Assign([Name('sock', Store(), lineno=552, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=552, col_offset=15), 'socket', Load(), lineno=552, col_offset=15), [Attribute(Name('socket', Load(), lineno=552, col_offset=29), 'AF_INET', Load(), lineno=552, col_offset=29), Attribute(Name('socket', Load(), lineno=552, col_offset=45), 'SOCK_STREAM', Load(), lineno=552, col_offset=45)], [], None, None, lineno=552, col_offset=15), lineno=552, col_offset=8), Expr(Call(Attribute(Name('sock', Load(), lineno=553, col_offset=8), 'settimeout', Load(), lineno=553, col_offset=8), [Num(1, lineno=553, col_offset=24)], [], None, None, lineno=553, col_offset=8), lineno=553, col_offset=8), Expr(Call(Attribute(Name('sock', Load(), lineno=554, col_offset=8), 'close', Load(), lineno=554, col_offset=8), [], [], None, None, lineno=554, col_offset=8), lineno=554, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=555, col_offset=8), 'assertRaises', Load(), lineno=555, col_offset=8), [Attribute(Name('socket', Load(), lineno=555, col_offset=26), 'error', Load(), lineno=555, col_offset=26), Attribute(Name('sock', Load(), lineno=555, col_offset=40), 'send', Load(), lineno=555, col_offset=40), Str('spam', lineno=555, col_offset=51)], [], None, None, lineno=555, col_offset=8), lineno=555, col_offset=8)], [], lineno=550, col_offset=4), FunctionDef('testNewAttributes', arguments([Name('self', Param(), lineno=557, col_offset=26)], None, None, []), [Assign([Name('sock', Store(), lineno=559, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=559, col_offset=15), 'socket', Load(), lineno=559, col_offset=15), [Attribute(Name('socket', Load(), lineno=559, col_offset=29), 'AF_INET', Load(), lineno=559, col_offset=29), Attribute(Name('socket', Load(), lineno=559, col_offset=45), 'SOCK_STREAM', Load(), lineno=559, col_offset=45)], [], None, None, lineno=559, col_offset=15), lineno=559, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=560, col_offset=8), 'assertEqual', Load(), lineno=560, col_offset=8), [Attribute(Name('sock', Load(), lineno=560, col_offset=25), 'family', Load(), lineno=560, col_offset=25), Attribute(Name('socket', Load(), lineno=560, col_offset=38), 'AF_INET', Load(), lineno=560, col_offset=38)], [], None, None, lineno=560, col_offset=8), lineno=560, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=561, col_offset=8), 'assertEqual', Load(), lineno=561, col_offset=8), [Attribute(Name('sock', Load(), lineno=561, col_offset=25), 'type', Load(), lineno=561, col_offset=25), Attribute(Name('socket', Load(), lineno=561, col_offset=36), 'SOCK_STREAM', Load(), lineno=561, col_offset=36)], [], None, None, lineno=561, col_offset=8), lineno=561, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=562, col_offset=8), 'assertEqual', Load(), lineno=562, col_offset=8), [Attribute(Name('sock', Load(), lineno=562, col_offset=25), 'proto', Load(), lineno=562, col_offset=25), Num(0, lineno=562, col_offset=37)], [], None, None, lineno=562, col_offset=8), lineno=562, col_offset=8), Expr(Call(Attribute(Name('sock', Load(), lineno=563, col_offset=8), 'close', Load(), lineno=563, col_offset=8), [], [], None, None, lineno=563, col_offset=8), lineno=563, col_offset=8)], [], lineno=557, col_offset=4), FunctionDef('test_getsockaddrarg', arguments([Name('self', Param(), lineno=565, col_offset=28)], None, None, []), [Assign([Name('host', Store(), lineno=566, col_offset=8)], Str('0.0.0.0', lineno=566, col_offset=15), lineno=566, col_offset=8), Assign([Name('port', Store(), lineno=567, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=567, col_offset=15), '_get_unused_port', Load(), lineno=567, col_offset=15), [], [keyword('bind_address', Name('host', Load(), lineno=567, col_offset=50))], None, None, lineno=567, col_offset=15), lineno=567, col_offset=8), Assign([Name('big_port', Store(), lineno=568, col_offset=8)], BinOp(Name('port', Load(), lineno=568, col_offset=19), Add(), Num(65536, lineno=568, col_offset=26), lineno=568, col_offset=19), lineno=568, col_offset=8), Assign([Name('neg_port', Store(), lineno=569, col_offset=8)], BinOp(Name('port', Load(), lineno=569, col_offset=19), Sub(), Num(65536, lineno=569, col_offset=26), lineno=569, col_offset=19), lineno=569, col_offset=8), Assign([Name('sock', Store(), lineno=570, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=570, col_offset=15), 'socket', Load(), lineno=570, col_offset=15), [], [], None, None, lineno=570, col_offset=15), lineno=570, col_offset=8), TryFinally([Expr(Call(Attribute(Name('self', Load(), lineno=572, col_offset=12), 'assertRaises', Load(), lineno=572, col_offset=12), [Name('OverflowError', Load(), lineno=572, col_offset=30), Attribute(Name('sock', Load(), lineno=572, col_offset=45), 'bind', Load(), lineno=572, col_offset=45), Tuple([Name('host', Load(), lineno=572, col_offset=57), Name('big_port', Load(), lineno=572, col_offset=63)], Load(), lineno=572, col_offset=57)], [], None, None, lineno=572, col_offset=12), lineno=572, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=573, col_offset=12), 'assertRaises', Load(), lineno=573, col_offset=12), [Name('OverflowError', Load(), lineno=573, col_offset=30), Attribute(Name('sock', Load(), lineno=573, col_offset=45), 'bind', Load(), lineno=573, col_offset=45), Tuple([Name('host', Load(), lineno=573, col_offset=57), Name('neg_port', Load(), lineno=573, col_offset=63)], Load(), lineno=573, col_offset=57)], [], None, None, lineno=573, col_offset=12), lineno=573, col_offset=12), Expr(Call(Attribute(Name('sock', Load(), lineno=574, col_offset=12), 'bind', Load(), lineno=574, col_offset=12), [Tuple([Name('host', Load(), lineno=574, col_offset=23), Name('port', Load(), lineno=574, col_offset=29)], Load(), lineno=574, col_offset=23)], [], None, None, lineno=574, col_offset=12), lineno=574, col_offset=12)], [Expr(Call(Attribute(Name('sock', Load(), lineno=576, col_offset=12), 'close', Load(), lineno=576, col_offset=12), [], [], None, None, lineno=576, col_offset=12), lineno=576, col_offset=12)], lineno=571, col_offset=8)], [], lineno=565, col_offset=4), FunctionDef('test_sock_ioctl', arguments([Name('self', Param(), lineno=579, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=580, col_offset=8), 'assertTrue', Load(), lineno=580, col_offset=8), [Call(Name('hasattr', Load(), lineno=580, col_offset=24), [Attribute(Name('socket', Load(), lineno=580, col_offset=32), 'socket', Load(), lineno=580, col_offset=32), Str('ioctl', lineno=580, col_offset=47)], [], None, None, lineno=580, col_offset=24)], [], None, None, lineno=580, col_offset=8), lineno=580, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=581, col_offset=8), 'assertTrue', Load(), lineno=581, col_offset=8), [Call(Name('hasattr', Load(), lineno=581, col_offset=24), [Name('socket', Load(), lineno=581, col_offset=32), Str('SIO_RCVALL', lineno=581, col_offset=40)], [], None, None, lineno=581, col_offset=24)], [], None, None, lineno=581, col_offset=8), lineno=581, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=582, col_offset=8), 'assertTrue', Load(), lineno=582, col_offset=8), [Call(Name('hasattr', Load(), lineno=582, col_offset=24), [Name('socket', Load(), lineno=582, col_offset=32), Str('RCVALL_ON', lineno=582, col_offset=40)], [], None, None, lineno=582, col_offset=24)], [], None, None, lineno=582, col_offset=8), lineno=582, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=583, col_offset=8), 'assertTrue', Load(), lineno=583, col_offset=8), [Call(Name('hasattr', Load(), lineno=583, col_offset=24), [Name('socket', Load(), lineno=583, col_offset=32), Str('RCVALL_OFF', lineno=583, col_offset=40)], [], None, None, lineno=583, col_offset=24)], [], None, None, lineno=583, col_offset=8), lineno=583, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=584, col_offset=8), 'assertTrue', Load(), lineno=584, col_offset=8), [Call(Name('hasattr', Load(), lineno=584, col_offset=24), [Name('socket', Load(), lineno=584, col_offset=32), Str('SIO_KEEPALIVE_VALS', lineno=584, col_offset=40)], [], None, None, lineno=584, col_offset=24)], [], None, None, lineno=584, col_offset=8), lineno=584, col_offset=8), Assign([Name('s', Store(), lineno=585, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=585, col_offset=12), 'socket', Load(), lineno=585, col_offset=12), [], [], None, None, lineno=585, col_offset=12), lineno=585, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=586, col_offset=8), 'addCleanup', Load(), lineno=586, col_offset=8), [Attribute(Name('s', Load(), lineno=586, col_offset=24), 'close', Load(), lineno=586, col_offset=24)], [], None, None, lineno=586, col_offset=8), lineno=586, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=587, col_offset=8), 'assertRaises', Load(), lineno=587, col_offset=8), [Name('ValueError', Load(), lineno=587, col_offset=26), Attribute(Name('s', Load(), lineno=587, col_offset=38), 'ioctl', Load(), lineno=587, col_offset=38), Num(-1, lineno=587, col_offset=48), Name('None', Load(), lineno=587, col_offset=51)], [], None, None, lineno=587, col_offset=8), lineno=587, col_offset=8), Expr(Call(Attribute(Name('s', Load(), lineno=588, col_offset=8), 'ioctl', Load(), lineno=588, col_offset=8), [Attribute(Name('socket', Load(), lineno=588, col_offset=16), 'SIO_KEEPALIVE_VALS', Load(), lineno=588, col_offset=16), Tuple([Num(1, lineno=588, col_offset=44), Num(100, lineno=588, col_offset=47), Num(100, lineno=588, col_offset=52)], Load(), lineno=588, col_offset=44)], [], None, None, lineno=588, col_offset=8), lineno=588, col_offset=8)], [Call(Attribute(Name('unittest', Load(), lineno=578, col_offset=5), 'skipUnless', Load(), lineno=578, col_offset=5), [Compare(Attribute(Name('os', Load(), lineno=578, col_offset=25), 'name', Load(), lineno=578, col_offset=25), [Eq()], [Str('nt', lineno=578, col_offset=36)], lineno=578, col_offset=25), Str('Windows specific', lineno=578, col_offset=42)], [], None, None, lineno=578, col_offset=5)], lineno=578, col_offset=4), FunctionDef('testGetaddrinfo', arguments([Name('self', Param(), lineno=590, col_offset=24)], None, None, []), [TryExcept([Expr(Call(Attribute(Name('socket', Load(), lineno=592, col_offset=12), 'getaddrinfo', Load(), lineno=592, col_offset=12), [Str('localhost', lineno=592, col_offset=31), Num(80, lineno=592, col_offset=44)], [], None, None, lineno=592, col_offset=12), lineno=592, col_offset=12)], [ExceptHandler(Attribute(Name('socket', Load(), lineno=593, col_offset=15), 'gaierror', Load(), lineno=593, col_offset=15), Name('err', Store(), lineno=593, col_offset=34), [If(Compare(Attribute(Name('err', Load(), lineno=594, col_offset=15), 'errno', Load(), lineno=594, col_offset=15), [Eq()], [Attribute(Name('socket', Load(), lineno=594, col_offset=28), 'EAI_SERVICE', Load(), lineno=594, col_offset=28)], lineno=594, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=596, col_offset=16), 'skipTest', Load(), lineno=596, col_offset=16), [Str('buggy libc version', lineno=596, col_offset=30)], [], None, None, lineno=596, col_offset=16), lineno=596, col_offset=16)], [], lineno=594, col_offset=12), Raise(None, None, None, lineno=597, col_offset=12)], lineno=593, col_offset=8)], [], lineno=591, col_offset=8), For(Name('info', Store(), lineno=599, col_offset=12), Call(Attribute(Name('socket', Load(), lineno=599, col_offset=20), 'getaddrinfo', Load(), lineno=599, col_offset=20), [Name('HOST', Load(), lineno=599, col_offset=39), Name('None', Load(), lineno=599, col_offset=45)], [], None, None, lineno=599, col_offset=20), [Expr(Call(Attribute(Name('self', Load(), lineno=600, col_offset=12), 'assertEqual', Load(), lineno=600, col_offset=12), [Call(Name('len', Load(), lineno=600, col_offset=29), [Name('info', Load(), lineno=600, col_offset=33)], [], None, None, lineno=600, col_offset=29), Num(5, lineno=600, col_offset=40)], [], None, None, lineno=600, col_offset=12), lineno=600, col_offset=12)], [], lineno=599, col_offset=8), Expr(Call(Attribute(Name('socket', Load(), lineno=603, col_offset=8), 'getaddrinfo', Load(), lineno=603, col_offset=8), [Str('localhost', lineno=603, col_offset=27), Num(80, lineno=603, col_offset=40)], [], None, None, lineno=603, col_offset=8), lineno=603, col_offset=8), Expr(Call(Attribute(Name('socket', Load(), lineno=604, col_offset=8), 'getaddrinfo', Load(), lineno=604, col_offset=8), [Str('127.0.0.1', lineno=604, col_offset=27), Num(80, lineno=604, col_offset=40)], [], None, None, lineno=604, col_offset=8), lineno=604, col_offset=8), Expr(Call(Attribute(Name('socket', Load(), lineno=605, col_offset=8), 'getaddrinfo', Load(), lineno=605, col_offset=8), [Name('None', Load(), lineno=605, col_offset=27), Num(80, lineno=605, col_offset=33)], [], None, None, lineno=605, col_offset=8), lineno=605, col_offset=8), If(Name('SUPPORTS_IPV6', Load(), lineno=606, col_offset=11), [Expr(Call(Attribute(Name('socket', Load(), lineno=607, col_offset=12), 'getaddrinfo', Load(), lineno=607, col_offset=12), [Str('::1', lineno=607, col_offset=31), Num(80, lineno=607, col_offset=38)], [], None, None, lineno=607, col_offset=12), lineno=607, col_offset=12)], [], lineno=606, col_offset=8), Expr(Call(Attribute(Name('socket', Load(), lineno=610, col_offset=8), 'getaddrinfo', Load(), lineno=610, col_offset=8), [Name('HOST', Load(), lineno=610, col_offset=27), Str('http', lineno=610, col_offset=33)], [], None, None, lineno=610, col_offset=8), lineno=610, col_offset=8), Expr(Call(Attribute(Name('socket', Load(), lineno=611, col_offset=8), 'getaddrinfo', Load(), lineno=611, col_offset=8), [Name('HOST', Load(), lineno=611, col_offset=27), Num(80, lineno=611, col_offset=33)], [], None, None, lineno=611, col_offset=8), lineno=611, col_offset=8), Expr(Call(Attribute(Name('socket', Load(), lineno=612, col_offset=8), 'getaddrinfo', Load(), lineno=612, col_offset=8), [Name('HOST', Load(), lineno=612, col_offset=27), Name('None', Load(), lineno=612, col_offset=33)], [], None, None, lineno=612, col_offset=8), lineno=612, col_offset=8), Assign([Name('infos', Store(), lineno=614, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=614, col_offset=16), 'getaddrinfo', Load(), lineno=614, col_offset=16), [Name('HOST', Load(), lineno=614, col_offset=35), Name('None', Load(), lineno=614, col_offset=41), Attribute(Name('socket', Load(), lineno=614, col_offset=47), 'AF_INET', Load(), lineno=614, col_offset=47)], [], None, None, lineno=614, col_offset=16), lineno=614, col_offset=8), For(Tuple([Name('family', Store(), lineno=615, col_offset=12), Name('_', Store(), lineno=615, col_offset=20), Name('_', Store(), lineno=615, col_offset=23), Name('_', Store(), lineno=615, col_offset=26), Name('_', Store(), lineno=615, col_offset=29)], Store(), lineno=615, col_offset=12), Name('infos', Load(), lineno=615, col_offset=34), [Expr(Call(Attribute(Name('self', Load(), lineno=616, col_offset=12), 'assertEqual', Load(), lineno=616, col_offset=12), [Name('family', Load(), lineno=616, col_offset=29), Attribute(Name('socket', Load(), lineno=616, col_offset=37), 'AF_INET', Load(), lineno=616, col_offset=37)], [], None, None, lineno=616, col_offset=12), lineno=616, col_offset=12)], [], lineno=615, col_offset=8), Assign([Name('infos', Store(), lineno=617, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=617, col_offset=16), 'getaddrinfo', Load(), lineno=617, col_offset=16), [Name('HOST', Load(), lineno=617, col_offset=35), Name('None', Load(), lineno=617, col_offset=41), Num(0, lineno=617, col_offset=47), Attribute(Name('socket', Load(), lineno=617, col_offset=50), 'SOCK_STREAM', Load(), lineno=617, col_offset=50)], [], None, None, lineno=617, col_offset=16), lineno=617, col_offset=8), For(Tuple([Name('_', Store(), lineno=618, col_offset=12), Name('socktype', Store(), lineno=618, col_offset=15), Name('_', Store(), lineno=618, col_offset=25), Name('_', Store(), lineno=618, col_offset=28), Name('_', Store(), lineno=618, col_offset=31)], Store(), lineno=618, col_offset=12), Name('infos', Load(), lineno=618, col_offset=36), [Expr(Call(Attribute(Name('self', Load(), lineno=619, col_offset=12), 'assertEqual', Load(), lineno=619, col_offset=12), [Name('socktype', Load(), lineno=619, col_offset=29), Attribute(Name('socket', Load(), lineno=619, col_offset=39), 'SOCK_STREAM', Load(), lineno=619, col_offset=39)], [], None, None, lineno=619, col_offset=12), lineno=619, col_offset=12)], [], lineno=618, col_offset=8), Expr(Call(Attribute(Name('socket', Load(), lineno=621, col_offset=8), 'getaddrinfo', Load(), lineno=621, col_offset=8), [Name('HOST', Load(), lineno=621, col_offset=27), Name('None', Load(), lineno=621, col_offset=33), Num(0, lineno=621, col_offset=39), Num(0, lineno=621, col_offset=42), Attribute(Name('socket', Load(), lineno=621, col_offset=45), 'SOL_TCP', Load(), lineno=621, col_offset=45)], [], None, None, lineno=621, col_offset=8), lineno=621, col_offset=8), Expr(Call(Attribute(Name('socket', Load(), lineno=622, col_offset=8), 'getaddrinfo', Load(), lineno=622, col_offset=8), [Name('HOST', Load(), lineno=622, col_offset=27), Name('None', Load(), lineno=622, col_offset=33), Num(0, lineno=622, col_offset=39), Num(0, lineno=622, col_offset=42), Num(0, lineno=622, col_offset=45), Attribute(Name('socket', Load(), lineno=622, col_offset=48), 'AI_PASSIVE', Load(), lineno=622, col_offset=48)], [], None, None, lineno=622, col_offset=8), lineno=622, col_offset=8), Expr(Call(Attribute(Name('socket', Load(), lineno=625, col_offset=8), 'getaddrinfo', Load(), lineno=625, col_offset=8), [Name('None', Load(), lineno=625, col_offset=27), Num(0, lineno=625, col_offset=33), Attribute(Name('socket', Load(), lineno=625, col_offset=36), 'AF_UNSPEC', Load(), lineno=625, col_offset=36), Attribute(Name('socket', Load(), lineno=625, col_offset=54), 'SOCK_STREAM', Load(), lineno=625, col_offset=54), Num(0, lineno=625, col_offset=74), Attribute(Name('socket', Load(), lineno=626, col_offset=27), 'AI_PASSIVE', Load(), lineno=626, col_offset=27)], [], None, None, lineno=625, col_offset=8), lineno=625, col_offset=8)], [], lineno=590, col_offset=4), FunctionDef('check_sendall_interrupted', arguments([Name('self', Param(), lineno=629, col_offset=34), Name('with_timeout', Param(), lineno=629, col_offset=40)], None, None, []), [If(BoolOp(Or(), [UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=631, col_offset=15), [Name('signal', Load(), lineno=631, col_offset=23), Str('alarm', lineno=631, col_offset=31)], [], None, None, lineno=631, col_offset=15), lineno=631, col_offset=11), UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=631, col_offset=47), [Name('socket', Load(), lineno=631, col_offset=55), Str('socketpair', lineno=631, col_offset=63)], [], None, None, lineno=631, col_offset=47), lineno=631, col_offset=43)], lineno=631, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=632, col_offset=12), 'skipTest', Load(), lineno=632, col_offset=12), [Str('signal.alarm and socket.socketpair required for this test', lineno=632, col_offset=26)], [], None, None, lineno=632, col_offset=12), lineno=632, col_offset=12)], [], lineno=631, col_offset=8), FunctionDef('ok_handler', arguments([], 'args', None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=636, col_offset=12), 'assertRaises', Load(), lineno=636, col_offset=12), [Name('ValueError', Load(), lineno=636, col_offset=30), Attribute(Name('math', Load(), lineno=636, col_offset=42), 'acosh', Load(), lineno=636, col_offset=42), Num(0, lineno=636, col_offset=54)], [], None, None, lineno=636, col_offset=12), lineno=636, col_offset=12)], [], lineno=635, col_offset=8), FunctionDef('raising_handler', arguments([], 'args', None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=638, col_offset=12), 'assertRaises', Load(), lineno=638, col_offset=12), [Name('ValueError', Load(), lineno=638, col_offset=30), Attribute(Name('math', Load(), lineno=638, col_offset=42), 'acosh', Load(), lineno=638, col_offset=42), Num(0, lineno=638, col_offset=54)], [], None, None, lineno=638, col_offset=12), lineno=638, col_offset=12), Expr(BinOp(Num(1, lineno=639, col_offset=12), FloorDiv(), Num(0, lineno=639, col_offset=17), lineno=639, col_offset=12), lineno=639, col_offset=12)], [], lineno=637, col_offset=8), Assign([Tuple([Name('c', Store(), lineno=640, col_offset=8), Name('s', Store(), lineno=640, col_offset=11)], Store(), lineno=640, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=640, col_offset=15), 'socketpair', Load(), lineno=640, col_offset=15), [], [], None, None, lineno=640, col_offset=15), lineno=640, col_offset=8), Assign([Name('old_alarm', Store(), lineno=641, col_offset=8)], Call(Attribute(Name('signal', Load(), lineno=641, col_offset=20), 'signal', Load(), lineno=641, col_offset=20), [Attribute(Name('signal', Load(), lineno=641, col_offset=34), 'SIGALRM', Load(), lineno=641, col_offset=34), Name('raising_handler', Load(), lineno=641, col_offset=50)], [], None, None, lineno=641, col_offset=20), lineno=641, col_offset=8), TryFinally([If(Name('with_timeout', Load(), lineno=643, col_offset=15), [Expr(Call(Attribute(Name('c', Load(), lineno=645, col_offset=16), 'settimeout', Load(), lineno=645, col_offset=16), [Num(1.5, lineno=645, col_offset=29)], [], None, None, lineno=645, col_offset=16), lineno=645, col_offset=16)], [], lineno=643, col_offset=12), With(Call(Attribute(Name('self', Load(), lineno=646, col_offset=17), 'assertRaises', Load(), lineno=646, col_offset=17), [Name('ZeroDivisionError', Load(), lineno=646, col_offset=35)], [], None, None, lineno=646, col_offset=17), None, [Expr(Call(Attribute(Name('signal', Load(), lineno=647, col_offset=16), 'alarm', Load(), lineno=647, col_offset=16), [Num(1, lineno=647, col_offset=29)], [], None, None, lineno=647, col_offset=16), lineno=647, col_offset=16), Expr(Call(Attribute(Name('c', Load(), lineno=648, col_offset=16), 'sendall', Load(), lineno=648, col_offset=16), [BinOp(Str('x', lineno=648, col_offset=26), Mult(), BinOp(Num(1024, lineno=648, col_offset=34), Pow(), Num(2, lineno=648, col_offset=40), lineno=648, col_offset=34), lineno=648, col_offset=26)], [], None, None, lineno=648, col_offset=16), lineno=648, col_offset=16)], lineno=646, col_offset=17), If(Name('with_timeout', Load(), lineno=649, col_offset=15), [Expr(Call(Attribute(Name('signal', Load(), lineno=650, col_offset=16), 'signal', Load(), lineno=650, col_offset=16), [Attribute(Name('signal', Load(), lineno=650, col_offset=30), 'SIGALRM', Load(), lineno=650, col_offset=30), Name('ok_handler', Load(), lineno=650, col_offset=46)], [], None, None, lineno=650, col_offset=16), lineno=650, col_offset=16), Expr(Call(Attribute(Name('signal', Load(), lineno=651, col_offset=16), 'alarm', Load(), lineno=651, col_offset=16), [Num(1, lineno=651, col_offset=29)], [], None, None, lineno=651, col_offset=16), lineno=651, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=652, col_offset=16), 'assertRaises', Load(), lineno=652, col_offset=16), [Attribute(Name('socket', Load(), lineno=652, col_offset=34), 'timeout', Load(), lineno=652, col_offset=34), Attribute(Name('c', Load(), lineno=652, col_offset=50), 'sendall', Load(), lineno=652, col_offset=50), BinOp(Str('x', lineno=652, col_offset=61), Mult(), BinOp(Num(1024, lineno=652, col_offset=69), Pow(), Num(2, lineno=652, col_offset=75), lineno=652, col_offset=69), lineno=652, col_offset=61)], [], None, None, lineno=652, col_offset=16), lineno=652, col_offset=16)], [], lineno=649, col_offset=12)], [Expr(Call(Attribute(Name('signal', Load(), lineno=654, col_offset=12), 'signal', Load(), lineno=654, col_offset=12), [Attribute(Name('signal', Load(), lineno=654, col_offset=26), 'SIGALRM', Load(), lineno=654, col_offset=26), Name('old_alarm', Load(), lineno=654, col_offset=42)], [], None, None, lineno=654, col_offset=12), lineno=654, col_offset=12), Expr(Call(Attribute(Name('c', Load(), lineno=655, col_offset=12), 'close', Load(), lineno=655, col_offset=12), [], [], None, None, lineno=655, col_offset=12), lineno=655, col_offset=12), Expr(Call(Attribute(Name('s', Load(), lineno=656, col_offset=12), 'close', Load(), lineno=656, col_offset=12), [], [], None, None, lineno=656, col_offset=12), lineno=656, col_offset=12)], lineno=642, col_offset=8)], [], lineno=629, col_offset=4), FunctionDef('test_sendall_interrupted', arguments([Name('self', Param(), lineno=658, col_offset=33)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=659, col_offset=8), 'check_sendall_interrupted', Load(), lineno=659, col_offset=8), [Name('False', Load(), lineno=659, col_offset=39)], [], None, None, lineno=659, col_offset=8), lineno=659, col_offset=8)], [], lineno=658, col_offset=4), FunctionDef('test_sendall_interrupted_with_timeout', arguments([Name('self', Param(), lineno=661, col_offset=46)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=662, col_offset=8), 'check_sendall_interrupted', Load(), lineno=662, col_offset=8), [Name('True', Load(), lineno=662, col_offset=39)], [], None, None, lineno=662, col_offset=8), lineno=662, col_offset=8)], [], lineno=661, col_offset=4)], [], lineno=247, col_offset=0), ClassDef('BasicTCPTest', [Name('SocketConnectedTest', Load(), lineno=666, col_offset=19)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=668, col_offset=17), Name('methodName', Param(), lineno=668, col_offset=23)], None, None, [Str('runTest', lineno=668, col_offset=34)]), [Expr(Call(Attribute(Name('SocketConnectedTest', Load(), lineno=669, col_offset=8), '__init__', Load(), lineno=669, col_offset=8), [Name('self', Load(), lineno=669, col_offset=37)], [keyword('methodName', Name('methodName', Load(), lineno=669, col_offset=54))], None, None, lineno=669, col_offset=8), lineno=669, col_offset=8)], [], lineno=668, col_offset=4), FunctionDef('testRecv', arguments([Name('self', Param(), lineno=671, col_offset=17)], None, None, []), [Assign([Name('msg', Store(), lineno=673, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=673, col_offset=14), 'cli_conn', Load(), lineno=673, col_offset=14), 'recv', Load(), lineno=673, col_offset=14), [Num(1024, lineno=673, col_offset=33)], [], None, None, lineno=673, col_offset=14), lineno=673, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=674, col_offset=8), 'assertEqual', Load(), lineno=674, col_offset=8), [Name('msg', Load(), lineno=674, col_offset=25), Name('MSG', Load(), lineno=674, col_offset=30)], [], None, None, lineno=674, col_offset=8), lineno=674, col_offset=8)], [], lineno=671, col_offset=4), FunctionDef('_testRecv', arguments([Name('self', Param(), lineno=676, col_offset=18)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=677, col_offset=8), 'serv_conn', Load(), lineno=677, col_offset=8), 'send', Load(), lineno=677, col_offset=8), [Name('MSG', Load(), lineno=677, col_offset=28)], [], None, None, lineno=677, col_offset=8), lineno=677, col_offset=8)], [], lineno=676, col_offset=4), FunctionDef('testOverFlowRecv', arguments([Name('self', Param(), lineno=679, col_offset=25)], None, None, []), [Assign([Name('seg1', Store(), lineno=681, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=681, col_offset=15), 'cli_conn', Load(), lineno=681, col_offset=15), 'recv', Load(), lineno=681, col_offset=15), [BinOp(Call(Name('len', Load(), lineno=681, col_offset=34), [Name('MSG', Load(), lineno=681, col_offset=38)], [], None, None, lineno=681, col_offset=34), Sub(), Num(3, lineno=681, col_offset=45), lineno=681, col_offset=34)], [], None, None, lineno=681, col_offset=15), lineno=681, col_offset=8), Assign([Name('seg2', Store(), lineno=682, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=682, col_offset=15), 'cli_conn', Load(), lineno=682, col_offset=15), 'recv', Load(), lineno=682, col_offset=15), [Num(1024, lineno=682, col_offset=34)], [], None, None, lineno=682, col_offset=15), lineno=682, col_offset=8), Assign([Name('msg', Store(), lineno=683, col_offset=8)], BinOp(Name('seg1', Load(), lineno=683, col_offset=14), Add(), Name('seg2', Load(), lineno=683, col_offset=21), lineno=683, col_offset=14), lineno=683, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=684, col_offset=8), 'assertEqual', Load(), lineno=684, col_offset=8), [Name('msg', Load(), lineno=684, col_offset=25), Name('MSG', Load(), lineno=684, col_offset=30)], [], None, None, lineno=684, col_offset=8), lineno=684, col_offset=8)], [], lineno=679, col_offset=4), FunctionDef('_testOverFlowRecv', arguments([Name('self', Param(), lineno=686, col_offset=26)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=687, col_offset=8), 'serv_conn', Load(), lineno=687, col_offset=8), 'send', Load(), lineno=687, col_offset=8), [Name('MSG', Load(), lineno=687, col_offset=28)], [], None, None, lineno=687, col_offset=8), lineno=687, col_offset=8)], [], lineno=686, col_offset=4), FunctionDef('testRecvFrom', arguments([Name('self', Param(), lineno=689, col_offset=21)], None, None, []), [Assign([Tuple([Name('msg', Store(), lineno=691, col_offset=8), Name('addr', Store(), lineno=691, col_offset=13)], Store(), lineno=691, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=691, col_offset=20), 'cli_conn', Load(), lineno=691, col_offset=20), 'recvfrom', Load(), lineno=691, col_offset=20), [Num(1024, lineno=691, col_offset=43)], [], None, None, lineno=691, col_offset=20), lineno=691, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=692, col_offset=8), 'assertEqual', Load(), lineno=692, col_offset=8), [Name('msg', Load(), lineno=692, col_offset=25), Name('MSG', Load(), lineno=692, col_offset=30)], [], None, None, lineno=692, col_offset=8), lineno=692, col_offset=8)], [], lineno=689, col_offset=4), FunctionDef('_testRecvFrom', arguments([Name('self', Param(), lineno=694, col_offset=22)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=695, col_offset=8), 'serv_conn', Load(), lineno=695, col_offset=8), 'send', Load(), lineno=695, col_offset=8), [Name('MSG', Load(), lineno=695, col_offset=28)], [], None, None, lineno=695, col_offset=8), lineno=695, col_offset=8)], [], lineno=694, col_offset=4), FunctionDef('testOverFlowRecvFrom', arguments([Name('self', Param(), lineno=697, col_offset=29)], None, None, []), [Assign([Tuple([Name('seg1', Store(), lineno=699, col_offset=8), Name('addr', Store(), lineno=699, col_offset=14)], Store(), lineno=699, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=699, col_offset=21), 'cli_conn', Load(), lineno=699, col_offset=21), 'recvfrom', Load(), lineno=699, col_offset=21), [BinOp(Call(Name('len', Load(), lineno=699, col_offset=44), [Name('MSG', Load(), lineno=699, col_offset=48)], [], None, None, lineno=699, col_offset=44), Sub(), Num(3, lineno=699, col_offset=53), lineno=699, col_offset=44)], [], None, None, lineno=699, col_offset=21), lineno=699, col_offset=8), Assign([Tuple([Name('seg2', Store(), lineno=700, col_offset=8), Name('addr', Store(), lineno=700, col_offset=14)], Store(), lineno=700, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=700, col_offset=21), 'cli_conn', Load(), lineno=700, col_offset=21), 'recvfrom', Load(), lineno=700, col_offset=21), [Num(1024, lineno=700, col_offset=44)], [], None, None, lineno=700, col_offset=21), lineno=700, col_offset=8), Assign([Name('msg', Store(), lineno=701, col_offset=8)], BinOp(Name('seg1', Load(), lineno=701, col_offset=14), Add(), Name('seg2', Load(), lineno=701, col_offset=21), lineno=701, col_offset=14), lineno=701, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=702, col_offset=8), 'assertEqual', Load(), lineno=702, col_offset=8), [Name('msg', Load(), lineno=702, col_offset=25), Name('MSG', Load(), lineno=702, col_offset=30)], [], None, None, lineno=702, col_offset=8), lineno=702, col_offset=8)], [], lineno=697, col_offset=4), FunctionDef('_testOverFlowRecvFrom', arguments([Name('self', Param(), lineno=704, col_offset=30)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=705, col_offset=8), 'serv_conn', Load(), lineno=705, col_offset=8), 'send', Load(), lineno=705, col_offset=8), [Name('MSG', Load(), lineno=705, col_offset=28)], [], None, None, lineno=705, col_offset=8), lineno=705, col_offset=8)], [], lineno=704, col_offset=4), FunctionDef('testSendAll', arguments([Name('self', Param(), lineno=707, col_offset=20)], None, None, []), [Assign([Name('msg', Store(), lineno=709, col_offset=8)], Str('', lineno=709, col_offset=14), lineno=709, col_offset=8), While(Num(1, lineno=710, col_offset=14), [Assign([Name('read', Store(), lineno=711, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=711, col_offset=19), 'cli_conn', Load(), lineno=711, col_offset=19), 'recv', Load(), lineno=711, col_offset=19), [Num(1024, lineno=711, col_offset=38)], [], None, None, lineno=711, col_offset=19), lineno=711, col_offset=12), If(UnaryOp(Not(), Name('read', Load(), lineno=712, col_offset=19), lineno=712, col_offset=15), [Break( lineno=713, col_offset=16)], [], lineno=712, col_offset=12), AugAssign(Name('msg', Store(), lineno=714, col_offset=12), Add(), Name('read', Load(), lineno=714, col_offset=19), lineno=714, col_offset=12)], [], lineno=710, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=715, col_offset=8), 'assertEqual', Load(), lineno=715, col_offset=8), [Name('msg', Load(), lineno=715, col_offset=25), BinOp(Str('f', lineno=715, col_offset=30), Mult(), Num(2048, lineno=715, col_offset=36), lineno=715, col_offset=30)], [], None, None, lineno=715, col_offset=8), lineno=715, col_offset=8)], [], lineno=707, col_offset=4), FunctionDef('_testSendAll', arguments([Name('self', Param(), lineno=717, col_offset=21)], None, None, []), [Assign([Name('big_chunk', Store(), lineno=718, col_offset=8)], BinOp(Str('f', lineno=718, col_offset=20), Mult(), Num(2048, lineno=718, col_offset=26), lineno=718, col_offset=20), lineno=718, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=719, col_offset=8), 'serv_conn', Load(), lineno=719, col_offset=8), 'sendall', Load(), lineno=719, col_offset=8), [Name('big_chunk', Load(), lineno=719, col_offset=31)], [], None, None, lineno=719, col_offset=8), lineno=719, col_offset=8)], [], lineno=717, col_offset=4), FunctionDef('testFromFd', arguments([Name('self', Param(), lineno=721, col_offset=19)], None, None, []), [If(UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=723, col_offset=15), [Name('socket', Load(), lineno=723, col_offset=23), Str('fromfd', lineno=723, col_offset=31)], [], None, None, lineno=723, col_offset=15), lineno=723, col_offset=11), [Return(None, lineno=724, col_offset=12)], [], lineno=723, col_offset=8), Assign([Name('fd', Store(), lineno=725, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=725, col_offset=13), 'cli_conn', Load(), lineno=725, col_offset=13), 'fileno', Load(), lineno=725, col_offset=13), [], [], None, None, lineno=725, col_offset=13), lineno=725, col_offset=8), Assign([Name('sock', Store(), lineno=726, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=726, col_offset=15), 'fromfd', Load(), lineno=726, col_offset=15), [Name('fd', Load(), lineno=726, col_offset=29), Attribute(Name('socket', Load(), lineno=726, col_offset=33), 'AF_INET', Load(), lineno=726, col_offset=33), Attribute(Name('socket', Load(), lineno=726, col_offset=49), 'SOCK_STREAM', Load(), lineno=726, col_offset=49)], [], None, None, lineno=726, col_offset=15), lineno=726, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=727, col_offset=8), 'addCleanup', Load(), lineno=727, col_offset=8), [Attribute(Name('sock', Load(), lineno=727, col_offset=24), 'close', Load(), lineno=727, col_offset=24)], [], None, None, lineno=727, col_offset=8), lineno=727, col_offset=8), Assign([Name('msg', Store(), lineno=728, col_offset=8)], Call(Attribute(Name('sock', Load(), lineno=728, col_offset=14), 'recv', Load(), lineno=728, col_offset=14), [Num(1024, lineno=728, col_offset=24)], [], None, None, lineno=728, col_offset=14), lineno=728, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=729, col_offset=8), 'assertEqual', Load(), lineno=729, col_offset=8), [Name('msg', Load(), lineno=729, col_offset=25), Name('MSG', Load(), lineno=729, col_offset=30)], [], None, None, lineno=729, col_offset=8), lineno=729, col_offset=8)], [], lineno=721, col_offset=4), FunctionDef('_testFromFd', arguments([Name('self', Param(), lineno=731, col_offset=20)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=732, col_offset=8), 'serv_conn', Load(), lineno=732, col_offset=8), 'send', Load(), lineno=732, col_offset=8), [Name('MSG', Load(), lineno=732, col_offset=28)], [], None, None, lineno=732, col_offset=8), lineno=732, col_offset=8)], [], lineno=731, col_offset=4), FunctionDef('testDup', arguments([Name('self', Param(), lineno=734, col_offset=16)], None, None, []), [Assign([Name('sock', Store(), lineno=736, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=736, col_offset=15), 'cli_conn', Load(), lineno=736, col_offset=15), 'dup', Load(), lineno=736, col_offset=15), [], [], None, None, lineno=736, col_offset=15), lineno=736, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=737, col_offset=8), 'addCleanup', Load(), lineno=737, col_offset=8), [Attribute(Name('sock', Load(), lineno=737, col_offset=24), 'close', Load(), lineno=737, col_offset=24)], [], None, None, lineno=737, col_offset=8), lineno=737, col_offset=8), Assign([Name('msg', Store(), lineno=738, col_offset=8)], Call(Attribute(Name('sock', Load(), lineno=738, col_offset=14), 'recv', Load(), lineno=738, col_offset=14), [Num(1024, lineno=738, col_offset=24)], [], None, None, lineno=738, col_offset=14), lineno=738, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=739, col_offset=8), 'assertEqual', Load(), lineno=739, col_offset=8), [Name('msg', Load(), lineno=739, col_offset=25), Name('MSG', Load(), lineno=739, col_offset=30)], [], None, None, lineno=739, col_offset=8), lineno=739, col_offset=8)], [], lineno=734, col_offset=4), FunctionDef('_testDup', arguments([Name('self', Param(), lineno=741, col_offset=17)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=742, col_offset=8), 'serv_conn', Load(), lineno=742, col_offset=8), 'send', Load(), lineno=742, col_offset=8), [Name('MSG', Load(), lineno=742, col_offset=28)], [], None, None, lineno=742, col_offset=8), lineno=742, col_offset=8)], [], lineno=741, col_offset=4), FunctionDef('testShutdown', arguments([Name('self', Param(), lineno=744, col_offset=21)], None, None, []), [Assign([Name('msg', Store(), lineno=746, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=746, col_offset=14), 'cli_conn', Load(), lineno=746, col_offset=14), 'recv', Load(), lineno=746, col_offset=14), [Num(1024, lineno=746, col_offset=33)], [], None, None, lineno=746, col_offset=14), lineno=746, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=747, col_offset=8), 'assertEqual', Load(), lineno=747, col_offset=8), [Name('msg', Load(), lineno=747, col_offset=25), Name('MSG', Load(), lineno=747, col_offset=30)], [], None, None, lineno=747, col_offset=8), lineno=747, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=751, col_offset=8), 'done', Load(), lineno=751, col_offset=8), 'wait', Load(), lineno=751, col_offset=8), [], [], None, None, lineno=751, col_offset=8), lineno=751, col_offset=8)], [], lineno=744, col_offset=4), FunctionDef('_testShutdown', arguments([Name('self', Param(), lineno=753, col_offset=22)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=754, col_offset=8), 'serv_conn', Load(), lineno=754, col_offset=8), 'send', Load(), lineno=754, col_offset=8), [Name('MSG', Load(), lineno=754, col_offset=28)], [], None, None, lineno=754, col_offset=8), lineno=754, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=755, col_offset=8), 'serv_conn', Load(), lineno=755, col_offset=8), 'shutdown', Load(), lineno=755, col_offset=8), [Num(2, lineno=755, col_offset=32)], [], None, None, lineno=755, col_offset=8), lineno=755, col_offset=8)], [], lineno=753, col_offset=4)], [Call(Attribute(Name('unittest', Load(), lineno=665, col_offset=1), 'skipUnless', Load(), lineno=665, col_offset=1), [Name('thread', Load(), lineno=665, col_offset=21), Str('Threading required for this test.', lineno=665, col_offset=29)], [], None, None, lineno=665, col_offset=1)], lineno=665, col_offset=0), ClassDef('BasicUDPTest', [Name('ThreadedUDPSocketTest', Load(), lineno=758, col_offset=19)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=760, col_offset=17), Name('methodName', Param(), lineno=760, col_offset=23)], None, None, [Str('runTest', lineno=760, col_offset=34)]), [Expr(Call(Attribute(Name('ThreadedUDPSocketTest', Load(), lineno=761, col_offset=8), '__init__', Load(), lineno=761, col_offset=8), [Name('self', Load(), lineno=761, col_offset=39)], [keyword('methodName', Name('methodName', Load(), lineno=761, col_offset=56))], None, None, lineno=761, col_offset=8), lineno=761, col_offset=8)], [], lineno=760, col_offset=4), FunctionDef('testSendtoAndRecv', arguments([Name('self', Param(), lineno=763, col_offset=26)], None, None, []), [Assign([Name('msg', Store(), lineno=765, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=765, col_offset=14), 'serv', Load(), lineno=765, col_offset=14), 'recv', Load(), lineno=765, col_offset=14), [Call(Name('len', Load(), lineno=765, col_offset=29), [Name('MSG', Load(), lineno=765, col_offset=33)], [], None, None, lineno=765, col_offset=29)], [], None, None, lineno=765, col_offset=14), lineno=765, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=766, col_offset=8), 'assertEqual', Load(), lineno=766, col_offset=8), [Name('msg', Load(), lineno=766, col_offset=25), Name('MSG', Load(), lineno=766, col_offset=30)], [], None, None, lineno=766, col_offset=8), lineno=766, col_offset=8)], [], lineno=763, col_offset=4), FunctionDef('_testSendtoAndRecv', arguments([Name('self', Param(), lineno=768, col_offset=27)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=769, col_offset=8), 'cli', Load(), lineno=769, col_offset=8), 'sendto', Load(), lineno=769, col_offset=8), [Name('MSG', Load(), lineno=769, col_offset=24), Num(0, lineno=769, col_offset=29), Tuple([Name('HOST', Load(), lineno=769, col_offset=33), Attribute(Name('self', Load(), lineno=769, col_offset=39), 'port', Load(), lineno=769, col_offset=39)], Load(), lineno=769, col_offset=33)], [], None, None, lineno=769, col_offset=8), lineno=769, col_offset=8)], [], lineno=768, col_offset=4), FunctionDef('testRecvFrom', arguments([Name('self', Param(), lineno=771, col_offset=21)], None, None, []), [Assign([Tuple([Name('msg', Store(), lineno=773, col_offset=8), Name('addr', Store(), lineno=773, col_offset=13)], Store(), lineno=773, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=773, col_offset=20), 'serv', Load(), lineno=773, col_offset=20), 'recvfrom', Load(), lineno=773, col_offset=20), [Call(Name('len', Load(), lineno=773, col_offset=39), [Name('MSG', Load(), lineno=773, col_offset=43)], [], None, None, lineno=773, col_offset=39)], [], None, None, lineno=773, col_offset=20), lineno=773, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=774, col_offset=8), 'assertEqual', Load(), lineno=774, col_offset=8), [Name('msg', Load(), lineno=774, col_offset=25), Name('MSG', Load(), lineno=774, col_offset=30)], [], None, None, lineno=774, col_offset=8), lineno=774, col_offset=8)], [], lineno=771, col_offset=4), FunctionDef('_testRecvFrom', arguments([Name('self', Param(), lineno=776, col_offset=22)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=777, col_offset=8), 'cli', Load(), lineno=777, col_offset=8), 'sendto', Load(), lineno=777, col_offset=8), [Name('MSG', Load(), lineno=777, col_offset=24), Num(0, lineno=777, col_offset=29), Tuple([Name('HOST', Load(), lineno=777, col_offset=33), Attribute(Name('self', Load(), lineno=777, col_offset=39), 'port', Load(), lineno=777, col_offset=39)], Load(), lineno=777, col_offset=33)], [], None, None, lineno=777, col_offset=8), lineno=777, col_offset=8)], [], lineno=776, col_offset=4), FunctionDef('testRecvFromNegative', arguments([Name('self', Param(), lineno=779, col_offset=29)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=781, col_offset=8), 'assertRaises', Load(), lineno=781, col_offset=8), [Name('ValueError', Load(), lineno=781, col_offset=26), Attribute(Attribute(Name('self', Load(), lineno=781, col_offset=38), 'serv', Load(), lineno=781, col_offset=38), 'recvfrom', Load(), lineno=781, col_offset=38), Num(-1, lineno=781, col_offset=59)], [], None, None, lineno=781, col_offset=8), lineno=781, col_offset=8)], [], lineno=779, col_offset=4), FunctionDef('_testRecvFromNegative', arguments([Name('self', Param(), lineno=783, col_offset=30)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=784, col_offset=8), 'cli', Load(), lineno=784, col_offset=8), 'sendto', Load(), lineno=784, col_offset=8), [Name('MSG', Load(), lineno=784, col_offset=24), Num(0, lineno=784, col_offset=29), Tuple([Name('HOST', Load(), lineno=784, col_offset=33), Attribute(Name('self', Load(), lineno=784, col_offset=39), 'port', Load(), lineno=784, col_offset=39)], Load(), lineno=784, col_offset=33)], [], None, None, lineno=784, col_offset=8), lineno=784, col_offset=8)], [], lineno=783, col_offset=4)], [Call(Attribute(Name('unittest', Load(), lineno=757, col_offset=1), 'skipUnless', Load(), lineno=757, col_offset=1), [Name('thread', Load(), lineno=757, col_offset=21), Str('Threading required for this test.', lineno=757, col_offset=29)], [], None, None, lineno=757, col_offset=1)], lineno=757, col_offset=0), ClassDef('TCPCloserTest', [Name('ThreadedTCPSocketTest', Load(), lineno=787, col_offset=20)], [FunctionDef('testClose', arguments([Name('self', Param(), lineno=789, col_offset=18)], None, None, []), [Assign([Tuple([Name('conn', Store(), lineno=790, col_offset=8), Name('addr', Store(), lineno=790, col_offset=14)], Store(), lineno=790, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=790, col_offset=21), 'serv', Load(), lineno=790, col_offset=21), 'accept', Load(), lineno=790, col_offset=21), [], [], None, None, lineno=790, col_offset=21), lineno=790, col_offset=8), Expr(Call(Attribute(Name('conn', Load(), lineno=791, col_offset=8), 'close', Load(), lineno=791, col_offset=8), [], [], None, None, lineno=791, col_offset=8), lineno=791, col_offset=8), Assign([Name('sd', Store(), lineno=793, col_offset=8)], Attribute(Name('self', Load(), lineno=793, col_offset=13), 'cli', Load(), lineno=793, col_offset=13), lineno=793, col_offset=8), Assign([Tuple([Name('read', Store(), lineno=794, col_offset=8), Name('write', Store(), lineno=794, col_offset=14), Name('err', Store(), lineno=794, col_offset=21)], Store(), lineno=794, col_offset=8)], Call(Attribute(Name('select', Load(), lineno=794, col_offset=27), 'select', Load(), lineno=794, col_offset=27), [List([Name('sd', Load(), lineno=794, col_offset=42)], Load(), lineno=794, col_offset=41), List([], Load(), lineno=794, col_offset=47), List([], Load(), lineno=794, col_offset=51), Num(1.0, lineno=794, col_offset=55)], [], None, None, lineno=794, col_offset=27), lineno=794, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=795, col_offset=8), 'assertEqual', Load(), lineno=795, col_offset=8), [Name('read', Load(), lineno=795, col_offset=25), List([Name('sd', Load(), lineno=795, col_offset=32)], Load(), lineno=795, col_offset=31)], [], None, None, lineno=795, col_offset=8), lineno=795, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=796, col_offset=8), 'assertEqual', Load(), lineno=796, col_offset=8), [Call(Attribute(Name('sd', Load(), lineno=796, col_offset=25), 'recv', Load(), lineno=796, col_offset=25), [Num(1, lineno=796, col_offset=33)], [], None, None, lineno=796, col_offset=25), Str('', lineno=796, col_offset=37)], [], None, None, lineno=796, col_offset=8), lineno=796, col_offset=8)], [], lineno=789, col_offset=4), FunctionDef('_testClose', arguments([Name('self', Param(), lineno=798, col_offset=19)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=799, col_offset=8), 'cli', Load(), lineno=799, col_offset=8), 'connect', Load(), lineno=799, col_offset=8), [Tuple([Name('HOST', Load(), lineno=799, col_offset=26), Attribute(Name('self', Load(), lineno=799, col_offset=32), 'port', Load(), lineno=799, col_offset=32)], Load(), lineno=799, col_offset=26)], [], None, None, lineno=799, col_offset=8), lineno=799, col_offset=8), Expr(Call(Attribute(Name('time', Load(), lineno=800, col_offset=8), 'sleep', Load(), lineno=800, col_offset=8), [Num(1.0, lineno=800, col_offset=19)], [], None, None, lineno=800, col_offset=8), lineno=800, col_offset=8)], [], lineno=798, col_offset=4)], [Call(Attribute(Name('unittest', Load(), lineno=786, col_offset=1), 'skipUnless', Load(), lineno=786, col_offset=1), [Name('thread', Load(), lineno=786, col_offset=21), Str('Threading required for this test.', lineno=786, col_offset=29)], [], None, None, lineno=786, col_offset=1)], lineno=786, col_offset=0), ClassDef('BasicSocketPairTest', [Name('SocketPairTest', Load(), lineno=803, col_offset=26)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=805, col_offset=17), Name('methodName', Param(), lineno=805, col_offset=23)], None, None, [Str('runTest', lineno=805, col_offset=34)]), [Expr(Call(Attribute(Name('SocketPairTest', Load(), lineno=806, col_offset=8), '__init__', Load(), lineno=806, col_offset=8), [Name('self', Load(), lineno=806, col_offset=32)], [keyword('methodName', Name('methodName', Load(), lineno=806, col_offset=49))], None, None, lineno=806, col_offset=8), lineno=806, col_offset=8)], [], lineno=805, col_offset=4), FunctionDef('testRecv', arguments([Name('self', Param(), lineno=808, col_offset=17)], None, None, []), [Assign([Name('msg', Store(), lineno=809, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=809, col_offset=14), 'serv', Load(), lineno=809, col_offset=14), 'recv', Load(), lineno=809, col_offset=14), [Num(1024, lineno=809, col_offset=29)], [], None, None, lineno=809, col_offset=14), lineno=809, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=810, col_offset=8), 'assertEqual', Load(), lineno=810, col_offset=8), [Name('msg', Load(), lineno=810, col_offset=25), Name('MSG', Load(), lineno=810, col_offset=30)], [], None, None, lineno=810, col_offset=8), lineno=810, col_offset=8)], [], lineno=808, col_offset=4), FunctionDef('_testRecv', arguments([Name('self', Param(), lineno=812, col_offset=18)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=813, col_offset=8), 'cli', Load(), lineno=813, col_offset=8), 'send', Load(), lineno=813, col_offset=8), [Name('MSG', Load(), lineno=813, col_offset=22)], [], None, None, lineno=813, col_offset=8), lineno=813, col_offset=8)], [], lineno=812, col_offset=4), FunctionDef('testSend', arguments([Name('self', Param(), lineno=815, col_offset=17)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=816, col_offset=8), 'serv', Load(), lineno=816, col_offset=8), 'send', Load(), lineno=816, col_offset=8), [Name('MSG', Load(), lineno=816, col_offset=23)], [], None, None, lineno=816, col_offset=8), lineno=816, col_offset=8)], [], lineno=815, col_offset=4), FunctionDef('_testSend', arguments([Name('self', Param(), lineno=818, col_offset=18)], None, None, []), [Assign([Name('msg', Store(), lineno=819, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=819, col_offset=14), 'cli', Load(), lineno=819, col_offset=14), 'recv', Load(), lineno=819, col_offset=14), [Num(1024, lineno=819, col_offset=28)], [], None, None, lineno=819, col_offset=14), lineno=819, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=820, col_offset=8), 'assertEqual', Load(), lineno=820, col_offset=8), [Name('msg', Load(), lineno=820, col_offset=25), Name('MSG', Load(), lineno=820, col_offset=30)], [], None, None, lineno=820, col_offset=8), lineno=820, col_offset=8)], [], lineno=818, col_offset=4)], [Call(Attribute(Name('unittest', Load(), lineno=802, col_offset=1), 'skipUnless', Load(), lineno=802, col_offset=1), [Name('thread', Load(), lineno=802, col_offset=21), Str('Threading required for this test.', lineno=802, col_offset=29)], [], None, None, lineno=802, col_offset=1)], lineno=802, col_offset=0), ClassDef('NonBlockingTCPTests', [Name('ThreadedTCPSocketTest', Load(), lineno=823, col_offset=26)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=825, col_offset=17), Name('methodName', Param(), lineno=825, col_offset=23)], None, None, [Str('runTest', lineno=825, col_offset=34)]), [Expr(Call(Attribute(Name('ThreadedTCPSocketTest', Load(), lineno=826, col_offset=8), '__init__', Load(), lineno=826, col_offset=8), [Name('self', Load(), lineno=826, col_offset=39)], [keyword('methodName', Name('methodName', Load(), lineno=826, col_offset=56))], None, None, lineno=826, col_offset=8), lineno=826, col_offset=8)], [], lineno=825, col_offset=4), FunctionDef('testSetBlocking', arguments([Name('self', Param(), lineno=828, col_offset=24)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=830, col_offset=8), 'serv', Load(), lineno=830, col_offset=8), 'setblocking', Load(), lineno=830, col_offset=8), [Num(0, lineno=830, col_offset=30)], [], None, None, lineno=830, col_offset=8), lineno=830, col_offset=8), Assign([Name('start', Store(), lineno=831, col_offset=8)], Call(Attribute(Name('time', Load(), lineno=831, col_offset=16), 'time', Load(), lineno=831, col_offset=16), [], [], None, None, lineno=831, col_offset=16), lineno=831, col_offset=8), TryExcept([Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=833, col_offset=12), 'serv', Load(), lineno=833, col_offset=12), 'accept', Load(), lineno=833, col_offset=12), [], [], None, None, lineno=833, col_offset=12), lineno=833, col_offset=12)], [ExceptHandler(Attribute(Name('socket', Load(), lineno=834, col_offset=15), 'error', Load(), lineno=834, col_offset=15), None, [Pass( lineno=835, col_offset=12)], lineno=834, col_offset=8)], [], lineno=832, col_offset=8), Assign([Name('end', Store(), lineno=836, col_offset=8)], Call(Attribute(Name('time', Load(), lineno=836, col_offset=14), 'time', Load(), lineno=836, col_offset=14), [], [], None, None, lineno=836, col_offset=14), lineno=836, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=837, col_offset=8), 'assertTrue', Load(), lineno=837, col_offset=8), [Compare(BinOp(Name('end', Load(), lineno=837, col_offset=25), Sub(), Name('start', Load(), lineno=837, col_offset=31), lineno=837, col_offset=25), [Lt()], [Num(1.0, lineno=837, col_offset=40)], lineno=837, col_offset=24), Str('Error setting non-blocking mode.', lineno=837, col_offset=45)], [], None, None, lineno=837, col_offset=8), lineno=837, col_offset=8)], [], lineno=828, col_offset=4), FunctionDef('_testSetBlocking', arguments([Name('self', Param(), lineno=839, col_offset=25)], None, None, []), [Pass( lineno=840, col_offset=8)], [], lineno=839, col_offset=4), FunctionDef('testAccept', arguments([Name('self', Param(), lineno=842, col_offset=19)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=844, col_offset=8), 'serv', Load(), lineno=844, col_offset=8), 'setblocking', Load(), lineno=844, col_offset=8), [Num(0, lineno=844, col_offset=30)], [], None, None, lineno=844, col_offset=8), lineno=844, col_offset=8), TryExcept([Assign([Tuple([Name('conn', Store(), lineno=846, col_offset=12), Name('addr', Store(), lineno=846, col_offset=18)], Store(), lineno=846, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=846, col_offset=25), 'serv', Load(), lineno=846, col_offset=25), 'accept', Load(), lineno=846, col_offset=25), [], [], None, None, lineno=846, col_offset=25), lineno=846, col_offset=12)], [ExceptHandler(Attribute(Name('socket', Load(), lineno=847, col_offset=15), 'error', Load(), lineno=847, col_offset=15), None, [Pass( lineno=848, col_offset=12)], lineno=847, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=850, col_offset=12), 'fail', Load(), lineno=850, col_offset=12), [Str('Error trying to do non-blocking accept.', lineno=850, col_offset=22)], [], None, None, lineno=850, col_offset=12), lineno=850, col_offset=12)], lineno=845, col_offset=8), Assign([Tuple([Name('read', Store(), lineno=851, col_offset=8), Name('write', Store(), lineno=851, col_offset=14), Name('err', Store(), lineno=851, col_offset=21)], Store(), lineno=851, col_offset=8)], Call(Attribute(Name('select', Load(), lineno=851, col_offset=27), 'select', Load(), lineno=851, col_offset=27), [List([Attribute(Name('self', Load(), lineno=851, col_offset=42), 'serv', Load(), lineno=851, col_offset=42)], Load(), lineno=851, col_offset=41), List([], Load(), lineno=851, col_offset=54), List([], Load(), lineno=851, col_offset=58)], [], None, None, lineno=851, col_offset=27), lineno=851, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=852, col_offset=11), 'serv', Load(), lineno=852, col_offset=11), [In()], [Name('read', Load(), lineno=852, col_offset=24)], lineno=852, col_offset=11), [Assign([Tuple([Name('conn', Store(), lineno=853, col_offset=12), Name('addr', Store(), lineno=853, col_offset=18)], Store(), lineno=853, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=853, col_offset=25), 'serv', Load(), lineno=853, col_offset=25), 'accept', Load(), lineno=853, col_offset=25), [], [], None, None, lineno=853, col_offset=25), lineno=853, col_offset=12), Expr(Call(Attribute(Name('conn', Load(), lineno=854, col_offset=12), 'close', Load(), lineno=854, col_offset=12), [], [], None, None, lineno=854, col_offset=12), lineno=854, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=856, col_offset=12), 'fail', Load(), lineno=856, col_offset=12), [Str('Error trying to do accept after select.', lineno=856, col_offset=22)], [], None, None, lineno=856, col_offset=12), lineno=856, col_offset=12)], lineno=852, col_offset=8)], [], lineno=842, col_offset=4), FunctionDef('_testAccept', arguments([Name('self', Param(), lineno=858, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('time', Load(), lineno=859, col_offset=8), 'sleep', Load(), lineno=859, col_offset=8), [Num(0.1, lineno=859, col_offset=19)], [], None, None, lineno=859, col_offset=8), lineno=859, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=860, col_offset=8), 'cli', Load(), lineno=860, col_offset=8), 'connect', Load(), lineno=860, col_offset=8), [Tuple([Name('HOST', Load(), lineno=860, col_offset=26), Attribute(Name('self', Load(), lineno=860, col_offset=32), 'port', Load(), lineno=860, col_offset=32)], Load(), lineno=860, col_offset=26)], [], None, None, lineno=860, col_offset=8), lineno=860, col_offset=8)], [], lineno=858, col_offset=4), FunctionDef('testConnect', arguments([Name('self', Param(), lineno=862, col_offset=20)], None, None, []), [Assign([Tuple([Name('conn', Store(), lineno=864, col_offset=8), Name('addr', Store(), lineno=864, col_offset=14)], Store(), lineno=864, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=864, col_offset=21), 'serv', Load(), lineno=864, col_offset=21), 'accept', Load(), lineno=864, col_offset=21), [], [], None, None, lineno=864, col_offset=21), lineno=864, col_offset=8), Expr(Call(Attribute(Name('conn', Load(), lineno=865, col_offset=8), 'close', Load(), lineno=865, col_offset=8), [], [], None, None, lineno=865, col_offset=8), lineno=865, col_offset=8)], [], lineno=862, col_offset=4), FunctionDef('_testConnect', arguments([Name('self', Param(), lineno=867, col_offset=21)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=868, col_offset=8), 'cli', Load(), lineno=868, col_offset=8), 'settimeout', Load(), lineno=868, col_offset=8), [Num(10, lineno=868, col_offset=28)], [], None, None, lineno=868, col_offset=8), lineno=868, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=869, col_offset=8), 'cli', Load(), lineno=869, col_offset=8), 'connect', Load(), lineno=869, col_offset=8), [Tuple([Name('HOST', Load(), lineno=869, col_offset=26), Attribute(Name('self', Load(), lineno=869, col_offset=32), 'port', Load(), lineno=869, col_offset=32)], Load(), lineno=869, col_offset=26)], [], None, None, lineno=869, col_offset=8), lineno=869, col_offset=8)], [], lineno=867, col_offset=4), FunctionDef('testRecv', arguments([Name('self', Param(), lineno=871, col_offset=17)], None, None, []), [Assign([Tuple([Name('conn', Store(), lineno=873, col_offset=8), Name('addr', Store(), lineno=873, col_offset=14)], Store(), lineno=873, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=873, col_offset=21), 'serv', Load(), lineno=873, col_offset=21), 'accept', Load(), lineno=873, col_offset=21), [], [], None, None, lineno=873, col_offset=21), lineno=873, col_offset=8), Expr(Call(Attribute(Name('conn', Load(), lineno=874, col_offset=8), 'setblocking', Load(), lineno=874, col_offset=8), [Num(0, lineno=874, col_offset=25)], [], None, None, lineno=874, col_offset=8), lineno=874, col_offset=8), TryExcept([Assign([Name('msg', Store(), lineno=876, col_offset=12)], Call(Attribute(Name('conn', Load(), lineno=876, col_offset=18), 'recv', Load(), lineno=876, col_offset=18), [Call(Name('len', Load(), lineno=876, col_offset=28), [Name('MSG', Load(), lineno=876, col_offset=32)], [], None, None, lineno=876, col_offset=28)], [], None, None, lineno=876, col_offset=18), lineno=876, col_offset=12)], [ExceptHandler(Attribute(Name('socket', Load(), lineno=877, col_offset=15), 'error', Load(), lineno=877, col_offset=15), None, [Pass( lineno=878, col_offset=12)], lineno=877, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=880, col_offset=12), 'fail', Load(), lineno=880, col_offset=12), [Str('Error trying to do non-blocking recv.', lineno=880, col_offset=22)], [], None, None, lineno=880, col_offset=12), lineno=880, col_offset=12)], lineno=875, col_offset=8), Assign([Tuple([Name('read', Store(), lineno=881, col_offset=8), Name('write', Store(), lineno=881, col_offset=14), Name('err', Store(), lineno=881, col_offset=21)], Store(), lineno=881, col_offset=8)], Call(Attribute(Name('select', Load(), lineno=881, col_offset=27), 'select', Load(), lineno=881, col_offset=27), [List([Name('conn', Load(), lineno=881, col_offset=42)], Load(), lineno=881, col_offset=41), List([], Load(), lineno=881, col_offset=49), List([], Load(), lineno=881, col_offset=53)], [], None, None, lineno=881, col_offset=27), lineno=881, col_offset=8), If(Compare(Name('conn', Load(), lineno=882, col_offset=11), [In()], [Name('read', Load(), lineno=882, col_offset=19)], lineno=882, col_offset=11), [Assign([Name('msg', Store(), lineno=883, col_offset=12)], Call(Attribute(Name('conn', Load(), lineno=883, col_offset=18), 'recv', Load(), lineno=883, col_offset=18), [Call(Name('len', Load(), lineno=883, col_offset=28), [Name('MSG', Load(), lineno=883, col_offset=32)], [], None, None, lineno=883, col_offset=28)], [], None, None, lineno=883, col_offset=18), lineno=883, col_offset=12), Expr(Call(Attribute(Name('conn', Load(), lineno=884, col_offset=12), 'close', Load(), lineno=884, col_offset=12), [], [], None, None, lineno=884, col_offset=12), lineno=884, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=885, col_offset=12), 'assertEqual', Load(), lineno=885, col_offset=12), [Name('msg', Load(), lineno=885, col_offset=29), Name('MSG', Load(), lineno=885, col_offset=34)], [], None, None, lineno=885, col_offset=12), lineno=885, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=887, col_offset=12), 'fail', Load(), lineno=887, col_offset=12), [Str('Error during select call to non-blocking socket.', lineno=887, col_offset=22)], [], None, None, lineno=887, col_offset=12), lineno=887, col_offset=12)], lineno=882, col_offset=8)], [], lineno=871, col_offset=4), FunctionDef('_testRecv', arguments([Name('self', Param(), lineno=889, col_offset=18)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=890, col_offset=8), 'cli', Load(), lineno=890, col_offset=8), 'connect', Load(), lineno=890, col_offset=8), [Tuple([Name('HOST', Load(), lineno=890, col_offset=26), Attribute(Name('self', Load(), lineno=890, col_offset=32), 'port', Load(), lineno=890, col_offset=32)], Load(), lineno=890, col_offset=26)], [], None, None, lineno=890, col_offset=8), lineno=890, col_offset=8), Expr(Call(Attribute(Name('time', Load(), lineno=891, col_offset=8), 'sleep', Load(), lineno=891, col_offset=8), [Num(0.1, lineno=891, col_offset=19)], [], None, None, lineno=891, col_offset=8), lineno=891, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=892, col_offset=8), 'cli', Load(), lineno=892, col_offset=8), 'send', Load(), lineno=892, col_offset=8), [Name('MSG', Load(), lineno=892, col_offset=22)], [], None, None, lineno=892, col_offset=8), lineno=892, col_offset=8)], [], lineno=889, col_offset=4)], [Call(Attribute(Name('unittest', Load(), lineno=822, col_offset=1), 'skipUnless', Load(), lineno=822, col_offset=1), [Name('thread', Load(), lineno=822, col_offset=21), Str('Threading required for this test.', lineno=822, col_offset=29)], [], None, None, lineno=822, col_offset=1)], lineno=822, col_offset=0), ClassDef('FileObjectClassTestCase', [Name('SocketConnectedTest', Load(), lineno=895, col_offset=30)], [Assign([Name('bufsize', Store(), lineno=897, col_offset=4)], Num(-1, lineno=897, col_offset=15), lineno=897, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=899, col_offset=17), Name('methodName', Param(), lineno=899, col_offset=23)], None, None, [Str('runTest', lineno=899, col_offset=34)]), [Expr(Call(Attribute(Name('SocketConnectedTest', Load(), lineno=900, col_offset=8), '__init__', Load(), lineno=900, col_offset=8), [Name('self', Load(), lineno=900, col_offset=37)], [keyword('methodName', Name('methodName', Load(), lineno=900, col_offset=54))], None, None, lineno=900, col_offset=8), lineno=900, col_offset=8)], [], lineno=899, col_offset=4), FunctionDef('setUp', arguments([Name('self', Param(), lineno=902, col_offset=14)], None, None, []), [Expr(Call(Attribute(Name('SocketConnectedTest', Load(), lineno=903, col_offset=8), 'setUp', Load(), lineno=903, col_offset=8), [Name('self', Load(), lineno=903, col_offset=34)], [], None, None, lineno=903, col_offset=8), lineno=903, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=904, col_offset=8), 'serv_file', Store(), lineno=904, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=904, col_offset=25), 'cli_conn', Load(), lineno=904, col_offset=25), 'makefile', Load(), lineno=904, col_offset=25), [Str('rb', lineno=904, col_offset=48), Attribute(Name('self', Load(), lineno=904, col_offset=54), 'bufsize', Load(), lineno=904, col_offset=54)], [], None, None, lineno=904, col_offset=25), lineno=904, col_offset=8)], [], lineno=902, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=906, col_offset=17)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=907, col_offset=8), 'serv_file', Load(), lineno=907, col_offset=8), 'close', Load(), lineno=907, col_offset=8), [], [], None, None, lineno=907, col_offset=8), lineno=907, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=908, col_offset=8), 'assertTrue', Load(), lineno=908, col_offset=8), [Attribute(Attribute(Name('self', Load(), lineno=908, col_offset=24), 'serv_file', Load(), lineno=908, col_offset=24), 'closed', Load(), lineno=908, col_offset=24)], [], None, None, lineno=908, col_offset=8), lineno=908, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=909, col_offset=8), 'serv_file', Store(), lineno=909, col_offset=8)], Name('None', Load(), lineno=909, col_offset=25), lineno=909, col_offset=8), Expr(Call(Attribute(Name('SocketConnectedTest', Load(), lineno=910, col_offset=8), 'tearDown', Load(), lineno=910, col_offset=8), [Name('self', Load(), lineno=910, col_offset=37)], [], None, None, lineno=910, col_offset=8), lineno=910, col_offset=8)], [], lineno=906, col_offset=4), FunctionDef('clientSetUp', arguments([Name('self', Param(), lineno=912, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('SocketConnectedTest', Load(), lineno=913, col_offset=8), 'clientSetUp', Load(), lineno=913, col_offset=8), [Name('self', Load(), lineno=913, col_offset=40)], [], None, None, lineno=913, col_offset=8), lineno=913, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=914, col_offset=8), 'cli_file', Store(), lineno=914, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=914, col_offset=24), 'serv_conn', Load(), lineno=914, col_offset=24), 'makefile', Load(), lineno=914, col_offset=24), [Str('wb', lineno=914, col_offset=48)], [], None, None, lineno=914, col_offset=24), lineno=914, col_offset=8)], [], lineno=912, col_offset=4), FunctionDef('clientTearDown', arguments([Name('self', Param(), lineno=916, col_offset=23)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=917, col_offset=8), 'cli_file', Load(), lineno=917, col_offset=8), 'close', Load(), lineno=917, col_offset=8), [], [], None, None, lineno=917, col_offset=8), lineno=917, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=918, col_offset=8), 'assertTrue', Load(), lineno=918, col_offset=8), [Attribute(Attribute(Name('self', Load(), lineno=918, col_offset=24), 'cli_file', Load(), lineno=918, col_offset=24), 'closed', Load(), lineno=918, col_offset=24)], [], None, None, lineno=918, col_offset=8), lineno=918, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=919, col_offset=8), 'cli_file', Store(), lineno=919, col_offset=8)], Name('None', Load(), lineno=919, col_offset=24), lineno=919, col_offset=8), Expr(Call(Attribute(Name('SocketConnectedTest', Load(), lineno=920, col_offset=8), 'clientTearDown', Load(), lineno=920, col_offset=8), [Name('self', Load(), lineno=920, col_offset=43)], [], None, None, lineno=920, col_offset=8), lineno=920, col_offset=8)], [], lineno=916, col_offset=4), FunctionDef('testSmallRead', arguments([Name('self', Param(), lineno=922, col_offset=22)], None, None, []), [Assign([Name('first_seg', Store(), lineno=924, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=924, col_offset=20), 'serv_file', Load(), lineno=924, col_offset=20), 'read', Load(), lineno=924, col_offset=20), [BinOp(Call(Name('len', Load(), lineno=924, col_offset=40), [Name('MSG', Load(), lineno=924, col_offset=44)], [], None, None, lineno=924, col_offset=40), Sub(), Num(3, lineno=924, col_offset=49), lineno=924, col_offset=40)], [], None, None, lineno=924, col_offset=20), lineno=924, col_offset=8), Assign([Name('second_seg', Store(), lineno=925, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=925, col_offset=21), 'serv_file', Load(), lineno=925, col_offset=21), 'read', Load(), lineno=925, col_offset=21), [Num(3, lineno=925, col_offset=41)], [], None, None, lineno=925, col_offset=21), lineno=925, col_offset=8), Assign([Name('msg', Store(), lineno=926, col_offset=8)], BinOp(Name('first_seg', Load(), lineno=926, col_offset=14), Add(), Name('second_seg', Load(), lineno=926, col_offset=26), lineno=926, col_offset=14), lineno=926, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=927, col_offset=8), 'assertEqual', Load(), lineno=927, col_offset=8), [Name('msg', Load(), lineno=927, col_offset=25), Name('MSG', Load(), lineno=927, col_offset=30)], [], None, None, lineno=927, col_offset=8), lineno=927, col_offset=8)], [], lineno=922, col_offset=4), FunctionDef('_testSmallRead', arguments([Name('self', Param(), lineno=929, col_offset=23)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=930, col_offset=8), 'cli_file', Load(), lineno=930, col_offset=8), 'write', Load(), lineno=930, col_offset=8), [Name('MSG', Load(), lineno=930, col_offset=28)], [], None, None, lineno=930, col_offset=8), lineno=930, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=931, col_offset=8), 'cli_file', Load(), lineno=931, col_offset=8), 'flush', Load(), lineno=931, col_offset=8), [], [], None, None, lineno=931, col_offset=8), lineno=931, col_offset=8)], [], lineno=929, col_offset=4), FunctionDef('testFullRead', arguments([Name('self', Param(), lineno=933, col_offset=21)], None, None, []), [Assign([Name('msg', Store(), lineno=935, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=935, col_offset=14), 'serv_file', Load(), lineno=935, col_offset=14), 'read', Load(), lineno=935, col_offset=14), [], [], None, None, lineno=935, col_offset=14), lineno=935, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=936, col_offset=8), 'assertEqual', Load(), lineno=936, col_offset=8), [Name('msg', Load(), lineno=936, col_offset=25), Name('MSG', Load(), lineno=936, col_offset=30)], [], None, None, lineno=936, col_offset=8), lineno=936, col_offset=8)], [], lineno=933, col_offset=4), FunctionDef('_testFullRead', arguments([Name('self', Param(), lineno=938, col_offset=22)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=939, col_offset=8), 'cli_file', Load(), lineno=939, col_offset=8), 'write', Load(), lineno=939, col_offset=8), [Name('MSG', Load(), lineno=939, col_offset=28)], [], None, None, lineno=939, col_offset=8), lineno=939, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=940, col_offset=8), 'cli_file', Load(), lineno=940, col_offset=8), 'close', Load(), lineno=940, col_offset=8), [], [], None, None, lineno=940, col_offset=8), lineno=940, col_offset=8)], [], lineno=938, col_offset=4), FunctionDef('testUnbufferedRead', arguments([Name('self', Param(), lineno=942, col_offset=27)], None, None, []), [Assign([Name('buf', Store(), lineno=944, col_offset=8)], Str('', lineno=944, col_offset=14), lineno=944, col_offset=8), While(Num(1, lineno=945, col_offset=14), [Assign([Name('char', Store(), lineno=946, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=946, col_offset=19), 'serv_file', Load(), lineno=946, col_offset=19), 'read', Load(), lineno=946, col_offset=19), [Num(1, lineno=946, col_offset=39)], [], None, None, lineno=946, col_offset=19), lineno=946, col_offset=12), If(UnaryOp(Not(), Name('char', Load(), lineno=947, col_offset=19), lineno=947, col_offset=15), [Break( lineno=948, col_offset=16)], [], lineno=947, col_offset=12), AugAssign(Name('buf', Store(), lineno=949, col_offset=12), Add(), Name('char', Load(), lineno=949, col_offset=19), lineno=949, col_offset=12)], [], lineno=945, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=950, col_offset=8), 'assertEqual', Load(), lineno=950, col_offset=8), [Name('buf', Load(), lineno=950, col_offset=25), Name('MSG', Load(), lineno=950, col_offset=30)], [], None, None, lineno=950, col_offset=8), lineno=950, col_offset=8)], [], lineno=942, col_offset=4), FunctionDef('_testUnbufferedRead', arguments([Name('self', Param(), lineno=952, col_offset=28)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=953, col_offset=8), 'cli_file', Load(), lineno=953, col_offset=8), 'write', Load(), lineno=953, col_offset=8), [Name('MSG', Load(), lineno=953, col_offset=28)], [], None, None, lineno=953, col_offset=8), lineno=953, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=954, col_offset=8), 'cli_file', Load(), lineno=954, col_offset=8), 'flush', Load(), lineno=954, col_offset=8), [], [], None, None, lineno=954, col_offset=8), lineno=954, col_offset=8)], [], lineno=952, col_offset=4), FunctionDef('testReadline', arguments([Name('self', Param(), lineno=956, col_offset=21)], None, None, []), [Assign([Name('line', Store(), lineno=958, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=958, col_offset=15), 'serv_file', Load(), lineno=958, col_offset=15), 'readline', Load(), lineno=958, col_offset=15), [], [], None, None, lineno=958, col_offset=15), lineno=958, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=959, col_offset=8), 'assertEqual', Load(), lineno=959, col_offset=8), [Name('line', Load(), lineno=959, col_offset=25), Name('MSG', Load(), lineno=959, col_offset=31)], [], None, None, lineno=959, col_offset=8), lineno=959, col_offset=8)], [], lineno=956, col_offset=4), FunctionDef('_testReadline', arguments([Name('self', Param(), lineno=961, col_offset=22)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=962, col_offset=8), 'cli_file', Load(), lineno=962, col_offset=8), 'write', Load(), lineno=962, col_offset=8), [Name('MSG', Load(), lineno=962, col_offset=28)], [], None, None, lineno=962, col_offset=8), lineno=962, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=963, col_offset=8), 'cli_file', Load(), lineno=963, col_offset=8), 'flush', Load(), lineno=963, col_offset=8), [], [], None, None, lineno=963, col_offset=8), lineno=963, col_offset=8)], [], lineno=961, col_offset=4), FunctionDef('testReadlineAfterRead', arguments([Name('self', Param(), lineno=965, col_offset=30)], None, None, []), [Assign([Name('a_baloo_is', Store(), lineno=966, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=966, col_offset=21), 'serv_file', Load(), lineno=966, col_offset=21), 'read', Load(), lineno=966, col_offset=21), [Call(Name('len', Load(), lineno=966, col_offset=41), [Str('A baloo is', lineno=966, col_offset=45)], [], None, None, lineno=966, col_offset=41)], [], None, None, lineno=966, col_offset=21), lineno=966, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=967, col_offset=8), 'assertEqual', Load(), lineno=967, col_offset=8), [Str('A baloo is', lineno=967, col_offset=25), Name('a_baloo_is', Load(), lineno=967, col_offset=39)], [], None, None, lineno=967, col_offset=8), lineno=967, col_offset=8), Assign([Name('_a_bear', Store(), lineno=968, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=968, col_offset=18), 'serv_file', Load(), lineno=968, col_offset=18), 'read', Load(), lineno=968, col_offset=18), [Call(Name('len', Load(), lineno=968, col_offset=38), [Str(' a bear', lineno=968, col_offset=42)], [], None, None, lineno=968, col_offset=38)], [], None, None, lineno=968, col_offset=18), lineno=968, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=969, col_offset=8), 'assertEqual', Load(), lineno=969, col_offset=8), [Str(' a bear', lineno=969, col_offset=25), Name('_a_bear', Load(), lineno=969, col_offset=36)], [], None, None, lineno=969, col_offset=8), lineno=969, col_offset=8), Assign([Name('line', Store(), lineno=970, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=970, col_offset=15), 'serv_file', Load(), lineno=970, col_offset=15), 'readline', Load(), lineno=970, col_offset=15), [], [], None, None, lineno=970, col_offset=15), lineno=970, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=971, col_offset=8), 'assertEqual', Load(), lineno=971, col_offset=8), [Str('\n', lineno=971, col_offset=25), Name('line', Load(), lineno=971, col_offset=31)], [], None, None, lineno=971, col_offset=8), lineno=971, col_offset=8), Assign([Name('line', Store(), lineno=972, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=972, col_offset=15), 'serv_file', Load(), lineno=972, col_offset=15), 'readline', Load(), lineno=972, col_offset=15), [], [], None, None, lineno=972, col_offset=15), lineno=972, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=973, col_offset=8), 'assertEqual', Load(), lineno=973, col_offset=8), [Str('A BALOO IS A BEAR.\n', lineno=973, col_offset=25), Name('line', Load(), lineno=973, col_offset=49)], [], None, None, lineno=973, col_offset=8), lineno=973, col_offset=8), Assign([Name('line', Store(), lineno=974, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=974, col_offset=15), 'serv_file', Load(), lineno=974, col_offset=15), 'readline', Load(), lineno=974, col_offset=15), [], [], None, None, lineno=974, col_offset=15), lineno=974, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=975, col_offset=8), 'assertEqual', Load(), lineno=975, col_offset=8), [Name('MSG', Load(), lineno=975, col_offset=25), Name('line', Load(), lineno=975, col_offset=30)], [], None, None, lineno=975, col_offset=8), lineno=975, col_offset=8)], [], lineno=965, col_offset=4), FunctionDef('_testReadlineAfterRead', arguments([Name('self', Param(), lineno=977, col_offset=31)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=978, col_offset=8), 'cli_file', Load(), lineno=978, col_offset=8), 'write', Load(), lineno=978, col_offset=8), [Str('A baloo is a bear\n', lineno=978, col_offset=28)], [], None, None, lineno=978, col_offset=8), lineno=978, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=979, col_offset=8), 'cli_file', Load(), lineno=979, col_offset=8), 'write', Load(), lineno=979, col_offset=8), [Str('A BALOO IS A BEAR.\n', lineno=979, col_offset=28)], [], None, None, lineno=979, col_offset=8), lineno=979, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=980, col_offset=8), 'cli_file', Load(), lineno=980, col_offset=8), 'write', Load(), lineno=980, col_offset=8), [Name('MSG', Load(), lineno=980, col_offset=28)], [], None, None, lineno=980, col_offset=8), lineno=980, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=981, col_offset=8), 'cli_file', Load(), lineno=981, col_offset=8), 'flush', Load(), lineno=981, col_offset=8), [], [], None, None, lineno=981, col_offset=8), lineno=981, col_offset=8)], [], lineno=977, col_offset=4), FunctionDef('testReadlineAfterReadNoNewline', arguments([Name('self', Param(), lineno=983, col_offset=39)], None, None, []), [Assign([Name('end_of_', Store(), lineno=984, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=984, col_offset=18), 'serv_file', Load(), lineno=984, col_offset=18), 'read', Load(), lineno=984, col_offset=18), [Call(Name('len', Load(), lineno=984, col_offset=38), [Str('End Of ', lineno=984, col_offset=42)], [], None, None, lineno=984, col_offset=38)], [], None, None, lineno=984, col_offset=18), lineno=984, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=985, col_offset=8), 'assertEqual', Load(), lineno=985, col_offset=8), [Str('End Of ', lineno=985, col_offset=25), Name('end_of_', Load(), lineno=985, col_offset=36)], [], None, None, lineno=985, col_offset=8), lineno=985, col_offset=8), Assign([Name('line', Store(), lineno=986, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=986, col_offset=15), 'serv_file', Load(), lineno=986, col_offset=15), 'readline', Load(), lineno=986, col_offset=15), [], [], None, None, lineno=986, col_offset=15), lineno=986, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=987, col_offset=8), 'assertEqual', Load(), lineno=987, col_offset=8), [Str('Line', lineno=987, col_offset=25), Name('line', Load(), lineno=987, col_offset=33)], [], None, None, lineno=987, col_offset=8), lineno=987, col_offset=8)], [], lineno=983, col_offset=4), FunctionDef('_testReadlineAfterReadNoNewline', arguments([Name('self', Param(), lineno=989, col_offset=40)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=990, col_offset=8), 'cli_file', Load(), lineno=990, col_offset=8), 'write', Load(), lineno=990, col_offset=8), [Str('End Of Line', lineno=990, col_offset=28)], [], None, None, lineno=990, col_offset=8), lineno=990, col_offset=8)], [], lineno=989, col_offset=4), FunctionDef('testClosedAttr', arguments([Name('self', Param(), lineno=992, col_offset=23)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=993, col_offset=8), 'assertTrue', Load(), lineno=993, col_offset=8), [UnaryOp(Not(), Attribute(Attribute(Name('self', Load(), lineno=993, col_offset=28), 'serv_file', Load(), lineno=993, col_offset=28), 'closed', Load(), lineno=993, col_offset=28), lineno=993, col_offset=24)], [], None, None, lineno=993, col_offset=8), lineno=993, col_offset=8)], [], lineno=992, col_offset=4), FunctionDef('_testClosedAttr', arguments([Name('self', Param(), lineno=995, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=996, col_offset=8), 'assertTrue', Load(), lineno=996, col_offset=8), [UnaryOp(Not(), Attribute(Attribute(Name('self', Load(), lineno=996, col_offset=28), 'cli_file', Load(), lineno=996, col_offset=28), 'closed', Load(), lineno=996, col_offset=28), lineno=996, col_offset=24)], [], None, None, lineno=996, col_offset=8), lineno=996, col_offset=8)], [], lineno=995, col_offset=4)], [Call(Attribute(Name('unittest', Load(), lineno=894, col_offset=1), 'skipUnless', Load(), lineno=894, col_offset=1), [Name('thread', Load(), lineno=894, col_offset=21), Str('Threading required for this test.', lineno=894, col_offset=29)], [], None, None, lineno=894, col_offset=1)], lineno=894, col_offset=0), ClassDef('FileObjectInterruptedTestCase', [Attribute(Name('unittest', Load(), lineno=999, col_offset=36), 'TestCase', Load(), lineno=999, col_offset=36)], [Expr(Str('Test that the file object correctly handles EINTR internally.', lineno=1000, col_offset=4), lineno=1000, col_offset=4), ClassDef('MockSocket', [Name('object', Load(), lineno=1002, col_offset=21)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=1003, col_offset=21), Name('recv_funcs', Param(), lineno=1003, col_offset=27)], None, None, [Tuple([], Load(), lineno=1003, col_offset=38)]), [Assign([Attribute(Name('self', Load(), lineno=1006, col_offset=12), '_recv_step', Store(), lineno=1006, col_offset=12)], Call(Name('iter', Load(), lineno=1006, col_offset=30), [Name('recv_funcs', Load(), lineno=1006, col_offset=35)], [], None, None, lineno=1006, col_offset=30), lineno=1006, col_offset=12)], [], lineno=1003, col_offset=8), FunctionDef('recv', arguments([Name('self', Param(), lineno=1008, col_offset=17), Name('size', Param(), lineno=1008, col_offset=23)], None, None, []), [Return(Call(Call(Attribute(Attribute(Name('self', Load(), lineno=1009, col_offset=19), '_recv_step', Load(), lineno=1009, col_offset=19), 'next', Load(), lineno=1009, col_offset=19), [], [], None, None, lineno=1009, col_offset=19), [], [], None, None, lineno=1009, col_offset=19), lineno=1009, col_offset=12)], [], lineno=1008, col_offset=8)], [], lineno=1002, col_offset=4), FunctionDef('_raise_eintr', arguments([], None, None, []), [Raise(Call(Attribute(Name('socket', Load(), lineno=1013, col_offset=14), 'error', Load(), lineno=1013, col_offset=14), [Attribute(Name('errno', Load(), lineno=1013, col_offset=27), 'EINTR', Load(), lineno=1013, col_offset=27)], [], None, None, lineno=1013, col_offset=14), None, None, lineno=1013, col_offset=8)], [Name('staticmethod', Load(), lineno=1011, col_offset=5)], lineno=1011, col_offset=4), FunctionDef('_test_readline', arguments([Name('self', Param(), lineno=1015, col_offset=23), Name('size', Param(), lineno=1015, col_offset=29)], None, 'kwargs', [Num(-1, lineno=1015, col_offset=35)]), [Assign([Name('mock_sock', Store(), lineno=1016, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1016, col_offset=20), 'MockSocket', Load(), lineno=1016, col_offset=20), [], [keyword('recv_funcs', List([Lambda(arguments([], None, None, []), Str('This is the first line\nAnd the sec', lineno=1017, col_offset=25), lineno=1017, col_offset=16), Attribute(Name('self', Load(), lineno=1018, col_offset=16), '_raise_eintr', Load(), lineno=1018, col_offset=16), Lambda(arguments([], None, None, []), Str('ond line is here\n', lineno=1019, col_offset=25), lineno=1019, col_offset=16), Lambda(arguments([], None, None, []), Str('', lineno=1020, col_offset=25), lineno=1020, col_offset=16)], Load(), lineno=1016, col_offset=47))], None, None, lineno=1016, col_offset=20), lineno=1016, col_offset=8), Assign([Name('fo', Store(), lineno=1022, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=1022, col_offset=13), '_fileobject', Load(), lineno=1022, col_offset=13), [Name('mock_sock', Load(), lineno=1022, col_offset=32)], [], None, Name('kwargs', Load(), lineno=1022, col_offset=45), lineno=1022, col_offset=13), lineno=1022, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1023, col_offset=8), 'assertEqual', Load(), lineno=1023, col_offset=8), [Call(Attribute(Name('fo', Load(), lineno=1023, col_offset=25), 'readline', Load(), lineno=1023, col_offset=25), [Name('size', Load(), lineno=1023, col_offset=37)], [], None, None, lineno=1023, col_offset=25), Str('This is the first line\n', lineno=1023, col_offset=44)], [], None, None, lineno=1023, col_offset=8), lineno=1023, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1024, col_offset=8), 'assertEqual', Load(), lineno=1024, col_offset=8), [Call(Attribute(Name('fo', Load(), lineno=1024, col_offset=25), 'readline', Load(), lineno=1024, col_offset=25), [Name('size', Load(), lineno=1024, col_offset=37)], [], None, None, lineno=1024, col_offset=25), Str('And the second line is here\n', lineno=1024, col_offset=44)], [], None, None, lineno=1024, col_offset=8), lineno=1024, col_offset=8)], [], lineno=1015, col_offset=4), FunctionDef('_test_read', arguments([Name('self', Param(), lineno=1026, col_offset=19), Name('size', Param(), lineno=1026, col_offset=25)], None, 'kwargs', [Num(-1, lineno=1026, col_offset=31)]), [Assign([Name('mock_sock', Store(), lineno=1027, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1027, col_offset=20), 'MockSocket', Load(), lineno=1027, col_offset=20), [], [keyword('recv_funcs', List([Lambda(arguments([], None, None, []), Str('This is the first line\nAnd the sec', lineno=1028, col_offset=25), lineno=1028, col_offset=16), Attribute(Name('self', Load(), lineno=1029, col_offset=16), '_raise_eintr', Load(), lineno=1029, col_offset=16), Lambda(arguments([], None, None, []), Str('ond line is here\n', lineno=1030, col_offset=25), lineno=1030, col_offset=16), Lambda(arguments([], None, None, []), Str('', lineno=1031, col_offset=25), lineno=1031, col_offset=16)], Load(), lineno=1027, col_offset=47))], None, None, lineno=1027, col_offset=20), lineno=1027, col_offset=8), Assign([Name('fo', Store(), lineno=1033, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=1033, col_offset=13), '_fileobject', Load(), lineno=1033, col_offset=13), [Name('mock_sock', Load(), lineno=1033, col_offset=32)], [], None, Name('kwargs', Load(), lineno=1033, col_offset=45), lineno=1033, col_offset=13), lineno=1033, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1034, col_offset=8), 'assertEqual', Load(), lineno=1034, col_offset=8), [Call(Attribute(Name('fo', Load(), lineno=1034, col_offset=25), 'read', Load(), lineno=1034, col_offset=25), [Name('size', Load(), lineno=1034, col_offset=33)], [], None, None, lineno=1034, col_offset=25), Str('This is the first line\nAnd the second line is here\n', lineno=1034, col_offset=40)], [], None, None, lineno=1034, col_offset=8), lineno=1034, col_offset=8)], [], lineno=1026, col_offset=4), FunctionDef('test_default', arguments([Name('self', Param(), lineno=1037, col_offset=21)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1038, col_offset=8), '_test_readline', Load(), lineno=1038, col_offset=8), [], [], None, None, lineno=1038, col_offset=8), lineno=1038, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1039, col_offset=8), '_test_readline', Load(), lineno=1039, col_offset=8), [], [keyword('size', Num(100, lineno=1039, col_offset=33))], None, None, lineno=1039, col_offset=8), lineno=1039, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1040, col_offset=8), '_test_read', Load(), lineno=1040, col_offset=8), [], [], None, None, lineno=1040, col_offset=8), lineno=1040, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1041, col_offset=8), '_test_read', Load(), lineno=1041, col_offset=8), [], [keyword('size', Num(100, lineno=1041, col_offset=29))], None, None, lineno=1041, col_offset=8), lineno=1041, col_offset=8)], [], lineno=1037, col_offset=4), FunctionDef('test_with_1k_buffer', arguments([Name('self', Param(), lineno=1043, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1044, col_offset=8), '_test_readline', Load(), lineno=1044, col_offset=8), [], [keyword('bufsize', Num(1024, lineno=1044, col_offset=36))], None, None, lineno=1044, col_offset=8), lineno=1044, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1045, col_offset=8), '_test_readline', Load(), lineno=1045, col_offset=8), [], [keyword('size', Num(100, lineno=1045, col_offset=33)), keyword('bufsize', Num(1024, lineno=1045, col_offset=46))], None, None, lineno=1045, col_offset=8), lineno=1045, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1046, col_offset=8), '_test_read', Load(), lineno=1046, col_offset=8), [], [keyword('bufsize', Num(1024, lineno=1046, col_offset=32))], None, None, lineno=1046, col_offset=8), lineno=1046, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1047, col_offset=8), '_test_read', Load(), lineno=1047, col_offset=8), [], [keyword('size', Num(100, lineno=1047, col_offset=29)), keyword('bufsize', Num(1024, lineno=1047, col_offset=42))], None, None, lineno=1047, col_offset=8), lineno=1047, col_offset=8)], [], lineno=1043, col_offset=4), FunctionDef('_test_readline_no_buffer', arguments([Name('self', Param(), lineno=1049, col_offset=33), Name('size', Param(), lineno=1049, col_offset=39)], None, None, [Num(-1, lineno=1049, col_offset=45)]), [Assign([Name('mock_sock', Store(), lineno=1050, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1050, col_offset=20), 'MockSocket', Load(), lineno=1050, col_offset=20), [], [keyword('recv_funcs', List([Lambda(arguments([], None, None, []), Str('aa', lineno=1051, col_offset=25), lineno=1051, col_offset=16), Lambda(arguments([], None, None, []), Str('\n', lineno=1052, col_offset=25), lineno=1052, col_offset=16), Lambda(arguments([], None, None, []), Str('BB', lineno=1053, col_offset=25), lineno=1053, col_offset=16), Attribute(Name('self', Load(), lineno=1054, col_offset=16), '_raise_eintr', Load(), lineno=1054, col_offset=16), Lambda(arguments([], None, None, []), Str('bb', lineno=1055, col_offset=25), lineno=1055, col_offset=16), Lambda(arguments([], None, None, []), Str('', lineno=1056, col_offset=25), lineno=1056, col_offset=16)], Load(), lineno=1050, col_offset=47))], None, None, lineno=1050, col_offset=20), lineno=1050, col_offset=8), Assign([Name('fo', Store(), lineno=1058, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=1058, col_offset=13), '_fileobject', Load(), lineno=1058, col_offset=13), [Name('mock_sock', Load(), lineno=1058, col_offset=32)], [keyword('bufsize', Num(0, lineno=1058, col_offset=51))], None, None, lineno=1058, col_offset=13), lineno=1058, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1059, col_offset=8), 'assertEqual', Load(), lineno=1059, col_offset=8), [Call(Attribute(Name('fo', Load(), lineno=1059, col_offset=25), 'readline', Load(), lineno=1059, col_offset=25), [Name('size', Load(), lineno=1059, col_offset=37)], [], None, None, lineno=1059, col_offset=25), Str('aa\n', lineno=1059, col_offset=44)], [], None, None, lineno=1059, col_offset=8), lineno=1059, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1060, col_offset=8), 'assertEqual', Load(), lineno=1060, col_offset=8), [Call(Attribute(Name('fo', Load(), lineno=1060, col_offset=25), 'readline', Load(), lineno=1060, col_offset=25), [Name('size', Load(), lineno=1060, col_offset=37)], [], None, None, lineno=1060, col_offset=25), Str('BBbb', lineno=1060, col_offset=44)], [], None, None, lineno=1060, col_offset=8), lineno=1060, col_offset=8)], [], lineno=1049, col_offset=4), FunctionDef('test_no_buffer', arguments([Name('self', Param(), lineno=1062, col_offset=23)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1063, col_offset=8), '_test_readline_no_buffer', Load(), lineno=1063, col_offset=8), [], [], None, None, lineno=1063, col_offset=8), lineno=1063, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1064, col_offset=8), '_test_readline_no_buffer', Load(), lineno=1064, col_offset=8), [], [keyword('size', Num(4, lineno=1064, col_offset=43))], None, None, lineno=1064, col_offset=8), lineno=1064, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1065, col_offset=8), '_test_read', Load(), lineno=1065, col_offset=8), [], [keyword('bufsize', Num(0, lineno=1065, col_offset=32))], None, None, lineno=1065, col_offset=8), lineno=1065, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1066, col_offset=8), '_test_read', Load(), lineno=1066, col_offset=8), [], [keyword('size', Num(100, lineno=1066, col_offset=29)), keyword('bufsize', Num(0, lineno=1066, col_offset=42))], None, None, lineno=1066, col_offset=8), lineno=1066, col_offset=8)], [], lineno=1062, col_offset=4)], [], lineno=999, col_offset=0), ClassDef('UnbufferedFileObjectClassTestCase', [Name('FileObjectClassTestCase', Load(), lineno=1069, col_offset=40)], [Expr(Str("Repeat the tests from FileObjectClassTestCase with bufsize==0.\n\n    In this case (and in this case only), it should be possible to\n    create a file object, read a line from it, create another file\n    object, read another line from it, without loss of data in the\n    first file object's buffer.  Note that httplib relies on this\n    when reading multiple requests from the same socket.", lineno=1077, col_offset=-1), lineno=1077, col_offset=-1), Assign([Name('bufsize', Store(), lineno=1079, col_offset=4)], Num(0, lineno=1079, col_offset=14), lineno=1079, col_offset=4), FunctionDef('testUnbufferedReadline', arguments([Name('self', Param(), lineno=1081, col_offset=31)], None, None, []), [Assign([Name('line', Store(), lineno=1083, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=1083, col_offset=15), 'serv_file', Load(), lineno=1083, col_offset=15), 'readline', Load(), lineno=1083, col_offset=15), [], [], None, None, lineno=1083, col_offset=15), lineno=1083, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1084, col_offset=8), 'assertEqual', Load(), lineno=1084, col_offset=8), [Name('line', Load(), lineno=1084, col_offset=25), BinOp(Str('A. ', lineno=1084, col_offset=31), Add(), Name('MSG', Load(), lineno=1084, col_offset=39), lineno=1084, col_offset=31)], [], None, None, lineno=1084, col_offset=8), lineno=1084, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1085, col_offset=8), 'serv_file', Store(), lineno=1085, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=1085, col_offset=25), 'cli_conn', Load(), lineno=1085, col_offset=25), 'makefile', Load(), lineno=1085, col_offset=25), [Str('rb', lineno=1085, col_offset=48), Num(0, lineno=1085, col_offset=54)], [], None, None, lineno=1085, col_offset=25), lineno=1085, col_offset=8), Assign([Name('line', Store(), lineno=1086, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=1086, col_offset=15), 'serv_file', Load(), lineno=1086, col_offset=15), 'readline', Load(), lineno=1086, col_offset=15), [], [], None, None, lineno=1086, col_offset=15), lineno=1086, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1087, col_offset=8), 'assertEqual', Load(), lineno=1087, col_offset=8), [Name('line', Load(), lineno=1087, col_offset=25), BinOp(Str('B. ', lineno=1087, col_offset=31), Add(), Name('MSG', Load(), lineno=1087, col_offset=39), lineno=1087, col_offset=31)], [], None, None, lineno=1087, col_offset=8), lineno=1087, col_offset=8)], [], lineno=1081, col_offset=4), FunctionDef('_testUnbufferedReadline', arguments([Name('self', Param(), lineno=1089, col_offset=32)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1090, col_offset=8), 'cli_file', Load(), lineno=1090, col_offset=8), 'write', Load(), lineno=1090, col_offset=8), [BinOp(Str('A. ', lineno=1090, col_offset=28), Add(), Name('MSG', Load(), lineno=1090, col_offset=36), lineno=1090, col_offset=28)], [], None, None, lineno=1090, col_offset=8), lineno=1090, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1091, col_offset=8), 'cli_file', Load(), lineno=1091, col_offset=8), 'write', Load(), lineno=1091, col_offset=8), [BinOp(Str('B. ', lineno=1091, col_offset=28), Add(), Name('MSG', Load(), lineno=1091, col_offset=36), lineno=1091, col_offset=28)], [], None, None, lineno=1091, col_offset=8), lineno=1091, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1092, col_offset=8), 'cli_file', Load(), lineno=1092, col_offset=8), 'flush', Load(), lineno=1092, col_offset=8), [], [], None, None, lineno=1092, col_offset=8), lineno=1092, col_offset=8)], [], lineno=1089, col_offset=4)], [], lineno=1069, col_offset=0), ClassDef('LineBufferedFileObjectClassTestCase', [Name('FileObjectClassTestCase', Load(), lineno=1094, col_offset=42)], [Assign([Name('bufsize', Store(), lineno=1096, col_offset=4)], Num(1, lineno=1096, col_offset=14), lineno=1096, col_offset=4)], [], lineno=1094, col_offset=0), ClassDef('SmallBufferedFileObjectClassTestCase', [Name('FileObjectClassTestCase', Load(), lineno=1099, col_offset=43)], [Assign([Name('bufsize', Store(), lineno=1101, col_offset=4)], Num(2, lineno=1101, col_offset=14), lineno=1101, col_offset=4)], [], lineno=1099, col_offset=0), ClassDef('NetworkConnectionTest', [Name('object', Load(), lineno=1104, col_offset=28)], [Expr(Str('Prove network connection.', lineno=1105, col_offset=4), lineno=1105, col_offset=4), FunctionDef('clientSetUp', arguments([Name('self', Param(), lineno=1106, col_offset=20)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1109, col_offset=8), 'cli', Store(), lineno=1109, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=1109, col_offset=19), 'create_connection', Load(), lineno=1109, col_offset=19), [Tuple([Name('HOST', Load(), lineno=1109, col_offset=45), Attribute(Name('self', Load(), lineno=1109, col_offset=51), 'port', Load(), lineno=1109, col_offset=51)], Load(), lineno=1109, col_offset=45)], [], None, None, lineno=1109, col_offset=19), lineno=1109, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1110, col_offset=8), 'serv_conn', Store(), lineno=1110, col_offset=8)], Attribute(Name('self', Load(), lineno=1110, col_offset=25), 'cli', Load(), lineno=1110, col_offset=25), lineno=1110, col_offset=8)], [], lineno=1106, col_offset=4)], [], lineno=1104, col_offset=0), ClassDef('BasicTCPTest2', [Name('NetworkConnectionTest', Load(), lineno=1112, col_offset=20), Name('BasicTCPTest', Load(), lineno=1112, col_offset=43)], [Expr(Str('Tests that NetworkConnection does not break existing TCP functionality.\n    ', lineno=1114, col_offset=-1), lineno=1114, col_offset=-1)], [], lineno=1112, col_offset=0), ClassDef('NetworkConnectionNoServer', [Attribute(Name('unittest', Load(), lineno=1116, col_offset=32), 'TestCase', Load(), lineno=1116, col_offset=32)], [ClassDef('MockSocket', [Attribute(Name('socket', Load(), lineno=1117, col_offset=21), 'socket', Load(), lineno=1117, col_offset=21)], [FunctionDef('connect', arguments([Name('self', Param(), lineno=1118, col_offset=20)], 'args', None, []), [Raise(Call(Attribute(Name('socket', Load(), lineno=1119, col_offset=18), 'timeout', Load(), lineno=1119, col_offset=18), [Str('timed out', lineno=1119, col_offset=33)], [], None, None, lineno=1119, col_offset=18), None, None, lineno=1119, col_offset=12)], [], lineno=1118, col_offset=8)], [], lineno=1117, col_offset=4), FunctionDef('mocked_socket_module', arguments([Name('self', Param(), lineno=1122, col_offset=29)], None, None, []), [Expr(Str('Return a socket which times out on connect', lineno=1123, col_offset=8), lineno=1123, col_offset=8), Assign([Name('old_socket', Store(), lineno=1124, col_offset=8)], Attribute(Name('socket', Load(), lineno=1124, col_offset=21), 'socket', Load(), lineno=1124, col_offset=21), lineno=1124, col_offset=8), Assign([Attribute(Name('socket', Load(), lineno=1125, col_offset=8), 'socket', Store(), lineno=1125, col_offset=8)], Attribute(Name('self', Load(), lineno=1125, col_offset=24), 'MockSocket', Load(), lineno=1125, col_offset=24), lineno=1125, col_offset=8), TryFinally([Expr(Yield(None, lineno=1127, col_offset=12), lineno=1127, col_offset=12)], [Assign([Attribute(Name('socket', Load(), lineno=1129, col_offset=12), 'socket', Store(), lineno=1129, col_offset=12)], Name('old_socket', Load(), lineno=1129, col_offset=28), lineno=1129, col_offset=12)], lineno=1126, col_offset=8)], [Attribute(Name('contextlib', Load(), lineno=1121, col_offset=5), 'contextmanager', Load(), lineno=1121, col_offset=5)], lineno=1121, col_offset=4), FunctionDef('test_connect', arguments([Name('self', Param(), lineno=1131, col_offset=21)], None, None, []), [Assign([Name('port', Store(), lineno=1132, col_offset=8)], Call(Attribute(Name('test_support', Load(), lineno=1132, col_offset=15), 'find_unused_port', Load(), lineno=1132, col_offset=15), [], [], None, None, lineno=1132, col_offset=15), lineno=1132, col_offset=8), Assign([Name('cli', Store(), lineno=1133, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=1133, col_offset=14), 'socket', Load(), lineno=1133, col_offset=14), [Attribute(Name('socket', Load(), lineno=1133, col_offset=28), 'AF_INET', Load(), lineno=1133, col_offset=28), Attribute(Name('socket', Load(), lineno=1133, col_offset=44), 'SOCK_STREAM', Load(), lineno=1133, col_offset=44)], [], None, None, lineno=1133, col_offset=14), lineno=1133, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1134, col_offset=8), 'addCleanup', Load(), lineno=1134, col_offset=8), [Attribute(Name('cli', Load(), lineno=1134, col_offset=24), 'close', Load(), lineno=1134, col_offset=24)], [], None, None, lineno=1134, col_offset=8), lineno=1134, col_offset=8), With(Call(Attribute(Name('self', Load(), lineno=1135, col_offset=13), 'assertRaises', Load(), lineno=1135, col_offset=13), [Attribute(Name('socket', Load(), lineno=1135, col_offset=31), 'error', Load(), lineno=1135, col_offset=31)], [], None, None, lineno=1135, col_offset=13), Name('cm', Store(), lineno=1135, col_offset=48), [Expr(Call(Attribute(Name('cli', Load(), lineno=1136, col_offset=12), 'connect', Load(), lineno=1136, col_offset=12), [Tuple([Name('HOST', Load(), lineno=1136, col_offset=25), Name('port', Load(), lineno=1136, col_offset=31)], Load(), lineno=1136, col_offset=25)], [], None, None, lineno=1136, col_offset=12), lineno=1136, col_offset=12)], lineno=1135, col_offset=13), Expr(Call(Attribute(Name('self', Load(), lineno=1137, col_offset=8), 'assertEqual', Load(), lineno=1137, col_offset=8), [Attribute(Attribute(Name('cm', Load(), lineno=1137, col_offset=25), 'exception', Load(), lineno=1137, col_offset=25), 'errno', Load(), lineno=1137, col_offset=25), Attribute(Name('errno', Load(), lineno=1137, col_offset=45), 'ECONNREFUSED', Load(), lineno=1137, col_offset=45)], [], None, None, lineno=1137, col_offset=8), lineno=1137, col_offset=8)], [], lineno=1131, col_offset=4), FunctionDef('test_create_connection', arguments([Name('self', Param(), lineno=1139, col_offset=31)], None, None, []), [Assign([Name('port', Store(), lineno=1142, col_offset=8)], Call(Attribute(Name('test_support', Load(), lineno=1142, col_offset=15), 'find_unused_port', Load(), lineno=1142, col_offset=15), [], [], None, None, lineno=1142, col_offset=15), lineno=1142, col_offset=8), With(Call(Attribute(Name('self', Load(), lineno=1143, col_offset=13), 'assertRaises', Load(), lineno=1143, col_offset=13), [Attribute(Name('socket', Load(), lineno=1143, col_offset=31), 'error', Load(), lineno=1143, col_offset=31)], [], None, None, lineno=1143, col_offset=13), Name('cm', Store(), lineno=1143, col_offset=48), [Expr(Call(Attribute(Name('socket', Load(), lineno=1144, col_offset=12), 'create_connection', Load(), lineno=1144, col_offset=12), [Tuple([Name('HOST', Load(), lineno=1144, col_offset=38), Name('port', Load(), lineno=1144, col_offset=44)], Load(), lineno=1144, col_offset=38)], [], None, None, lineno=1144, col_offset=12), lineno=1144, col_offset=12)], lineno=1143, col_offset=13), Expr(Call(Attribute(Name('self', Load(), lineno=1145, col_offset=8), 'assertEqual', Load(), lineno=1145, col_offset=8), [Attribute(Attribute(Name('cm', Load(), lineno=1145, col_offset=25), 'exception', Load(), lineno=1145, col_offset=25), 'errno', Load(), lineno=1145, col_offset=25), Attribute(Name('errno', Load(), lineno=1145, col_offset=45), 'ECONNREFUSED', Load(), lineno=1145, col_offset=45)], [], None, None, lineno=1145, col_offset=8), lineno=1145, col_offset=8)], [], lineno=1139, col_offset=4), FunctionDef('test_create_connection_timeout', arguments([Name('self', Param(), lineno=1147, col_offset=39)], None, None, []), [With(Call(Attribute(Name('self', Load(), lineno=1150, col_offset=13), 'mocked_socket_module', Load(), lineno=1150, col_offset=13), [], [], None, None, lineno=1150, col_offset=13), None, [With(Call(Attribute(Name('self', Load(), lineno=1151, col_offset=17), 'assertRaises', Load(), lineno=1151, col_offset=17), [Attribute(Name('socket', Load(), lineno=1151, col_offset=35), 'timeout', Load(), lineno=1151, col_offset=35)], [], None, None, lineno=1151, col_offset=17), None, [Expr(Call(Attribute(Name('socket', Load(), lineno=1152, col_offset=16), 'create_connection', Load(), lineno=1152, col_offset=16), [Tuple([Name('HOST', Load(), lineno=1152, col_offset=42), Num(1234, lineno=1152, col_offset=48)], Load(), lineno=1152, col_offset=42)], [], None, None, lineno=1152, col_offset=16), lineno=1152, col_offset=16)], lineno=1151, col_offset=17)], lineno=1150, col_offset=13)], [], lineno=1147, col_offset=4)], [], lineno=1116, col_offset=0), ClassDef('NetworkConnectionAttributesTest', [Name('SocketTCPTest', Load(), lineno=1156, col_offset=38), Name('ThreadableTest', Load(), lineno=1156, col_offset=53)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=1158, col_offset=17), Name('methodName', Param(), lineno=1158, col_offset=23)], None, None, [Str('runTest', lineno=1158, col_offset=34)]), [Expr(Call(Attribute(Name('SocketTCPTest', Load(), lineno=1159, col_offset=8), '__init__', Load(), lineno=1159, col_offset=8), [Name('self', Load(), lineno=1159, col_offset=31)], [keyword('methodName', Name('methodName', Load(), lineno=1159, col_offset=48))], None, None, lineno=1159, col_offset=8), lineno=1159, col_offset=8), Expr(Call(Attribute(Name('ThreadableTest', Load(), lineno=1160, col_offset=8), '__init__', Load(), lineno=1160, col_offset=8), [Name('self', Load(), lineno=1160, col_offset=32)], [], None, None, lineno=1160, col_offset=8), lineno=1160, col_offset=8)], [], lineno=1158, col_offset=4), FunctionDef('clientSetUp', arguments([Name('self', Param(), lineno=1162, col_offset=20)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1163, col_offset=8), 'source_port', Store(), lineno=1163, col_offset=8)], Call(Attribute(Name('test_support', Load(), lineno=1163, col_offset=27), 'find_unused_port', Load(), lineno=1163, col_offset=27), [], [], None, None, lineno=1163, col_offset=27), lineno=1163, col_offset=8)], [], lineno=1162, col_offset=4), FunctionDef('clientTearDown', arguments([Name('self', Param(), lineno=1165, col_offset=23)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1166, col_offset=8), 'cli', Load(), lineno=1166, col_offset=8), 'close', Load(), lineno=1166, col_offset=8), [], [], None, None, lineno=1166, col_offset=8), lineno=1166, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1167, col_offset=8), 'cli', Store(), lineno=1167, col_offset=8)], Name('None', Load(), lineno=1167, col_offset=19), lineno=1167, col_offset=8), Expr(Call(Attribute(Name('ThreadableTest', Load(), lineno=1168, col_offset=8), 'clientTearDown', Load(), lineno=1168, col_offset=8), [Name('self', Load(), lineno=1168, col_offset=38)], [], None, None, lineno=1168, col_offset=8), lineno=1168, col_offset=8)], [], lineno=1165, col_offset=4), FunctionDef('_justAccept', arguments([Name('self', Param(), lineno=1170, col_offset=20)], None, None, []), [Assign([Tuple([Name('conn', Store(), lineno=1171, col_offset=8), Name('addr', Store(), lineno=1171, col_offset=14)], Store(), lineno=1171, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=1171, col_offset=21), 'serv', Load(), lineno=1171, col_offset=21), 'accept', Load(), lineno=1171, col_offset=21), [], [], None, None, lineno=1171, col_offset=21), lineno=1171, col_offset=8), Expr(Call(Attribute(Name('conn', Load(), lineno=1172, col_offset=8), 'close', Load(), lineno=1172, col_offset=8), [], [], None, None, lineno=1172, col_offset=8), lineno=1172, col_offset=8)], [], lineno=1170, col_offset=4), Assign([Name('testFamily', Store(), lineno=1174, col_offset=4)], Name('_justAccept', Load(), lineno=1174, col_offset=17), lineno=1174, col_offset=4), FunctionDef('_testFamily', arguments([Name('self', Param(), lineno=1175, col_offset=20)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1176, col_offset=8), 'cli', Store(), lineno=1176, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=1176, col_offset=19), 'create_connection', Load(), lineno=1176, col_offset=19), [Tuple([Name('HOST', Load(), lineno=1176, col_offset=45), Attribute(Name('self', Load(), lineno=1176, col_offset=51), 'port', Load(), lineno=1176, col_offset=51)], Load(), lineno=1176, col_offset=45)], [keyword('timeout', Num(30, lineno=1176, col_offset=71))], None, None, lineno=1176, col_offset=19), lineno=1176, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1177, col_offset=8), 'addCleanup', Load(), lineno=1177, col_offset=8), [Attribute(Attribute(Name('self', Load(), lineno=1177, col_offset=24), 'cli', Load(), lineno=1177, col_offset=24), 'close', Load(), lineno=1177, col_offset=24)], [], None, None, lineno=1177, col_offset=8), lineno=1177, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1178, col_offset=8), 'assertEqual', Load(), lineno=1178, col_offset=8), [Attribute(Attribute(Name('self', Load(), lineno=1178, col_offset=25), 'cli', Load(), lineno=1178, col_offset=25), 'family', Load(), lineno=1178, col_offset=25), Num(2, lineno=1178, col_offset=42)], [], None, None, lineno=1178, col_offset=8), lineno=1178, col_offset=8)], [], lineno=1175, col_offset=4), Assign([Name('testSourceAddress', Store(), lineno=1180, col_offset=4)], Name('_justAccept', Load(), lineno=1180, col_offset=24), lineno=1180, col_offset=4), FunctionDef('_testSourceAddress', arguments([Name('self', Param(), lineno=1181, col_offset=27)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1182, col_offset=8), 'cli', Store(), lineno=1182, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=1182, col_offset=19), 'create_connection', Load(), lineno=1182, col_offset=19), [Tuple([Name('HOST', Load(), lineno=1182, col_offset=45), Attribute(Name('self', Load(), lineno=1182, col_offset=51), 'port', Load(), lineno=1182, col_offset=51)], Load(), lineno=1182, col_offset=45)], [keyword('timeout', Num(30, lineno=1182, col_offset=71)), keyword('source_address', Tuple([Str('', lineno=1183, col_offset=32), Attribute(Name('self', Load(), lineno=1183, col_offset=36), 'source_port', Load(), lineno=1183, col_offset=36)], Load(), lineno=1183, col_offset=32))], None, None, lineno=1182, col_offset=19), lineno=1182, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1184, col_offset=8), 'addCleanup', Load(), lineno=1184, col_offset=8), [Attribute(Attribute(Name('self', Load(), lineno=1184, col_offset=24), 'cli', Load(), lineno=1184, col_offset=24), 'close', Load(), lineno=1184, col_offset=24)], [], None, None, lineno=1184, col_offset=8), lineno=1184, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1185, col_offset=8), 'assertEqual', Load(), lineno=1185, col_offset=8), [Subscript(Call(Attribute(Attribute(Name('self', Load(), lineno=1185, col_offset=25), 'cli', Load(), lineno=1185, col_offset=25), 'getsockname', Load(), lineno=1185, col_offset=25), [], [], None, None, lineno=1185, col_offset=25), Index(Num(1, lineno=1185, col_offset=48)), Load(), lineno=1185, col_offset=25), Attribute(Name('self', Load(), lineno=1185, col_offset=52), 'source_port', Load(), lineno=1185, col_offset=52)], [], None, None, lineno=1185, col_offset=8), lineno=1185, col_offset=8)], [], lineno=1181, col_offset=4), Assign([Name('testTimeoutDefault', Store(), lineno=1189, col_offset=4)], Name('_justAccept', Load(), lineno=1189, col_offset=25), lineno=1189, col_offset=4), FunctionDef('_testTimeoutDefault', arguments([Name('self', Param(), lineno=1190, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1192, col_offset=8), 'assertTrue', Load(), lineno=1192, col_offset=8), [Compare(Call(Attribute(Name('socket', Load(), lineno=1192, col_offset=24), 'getdefaulttimeout', Load(), lineno=1192, col_offset=24), [], [], None, None, lineno=1192, col_offset=24), [Is()], [Name('None', Load(), lineno=1192, col_offset=54)], lineno=1192, col_offset=24)], [], None, None, lineno=1192, col_offset=8), lineno=1192, col_offset=8), Expr(Call(Attribute(Name('socket', Load(), lineno=1193, col_offset=8), 'setdefaulttimeout', Load(), lineno=1193, col_offset=8), [Num(42, lineno=1193, col_offset=33)], [], None, None, lineno=1193, col_offset=8), lineno=1193, col_offset=8), TryFinally([Assign([Attribute(Name('self', Load(), lineno=1195, col_offset=12), 'cli', Store(), lineno=1195, col_offset=12)], Call(Attribute(Name('socket', Load(), lineno=1195, col_offset=23), 'create_connection', Load(), lineno=1195, col_offset=23), [Tuple([Name('HOST', Load(), lineno=1195, col_offset=49), Attribute(Name('self', Load(), lineno=1195, col_offset=55), 'port', Load(), lineno=1195, col_offset=55)], Load(), lineno=1195, col_offset=49)], [], None, None, lineno=1195, col_offset=23), lineno=1195, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1196, col_offset=12), 'addCleanup', Load(), lineno=1196, col_offset=12), [Attribute(Attribute(Name('self', Load(), lineno=1196, col_offset=28), 'cli', Load(), lineno=1196, col_offset=28), 'close', Load(), lineno=1196, col_offset=28)], [], None, None, lineno=1196, col_offset=12), lineno=1196, col_offset=12)], [Expr(Call(Attribute(Name('socket', Load(), lineno=1198, col_offset=12), 'setdefaulttimeout', Load(), lineno=1198, col_offset=12), [Name('None', Load(), lineno=1198, col_offset=37)], [], None, None, lineno=1198, col_offset=12), lineno=1198, col_offset=12)], lineno=1194, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1199, col_offset=8), 'assertEqual', Load(), lineno=1199, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=1199, col_offset=25), 'cli', Load(), lineno=1199, col_offset=25), 'gettimeout', Load(), lineno=1199, col_offset=25), [], [], None, None, lineno=1199, col_offset=25), Num(42, lineno=1199, col_offset=48)], [], None, None, lineno=1199, col_offset=8), lineno=1199, col_offset=8)], [], lineno=1190, col_offset=4), Assign([Name('testTimeoutNone', Store(), lineno=1201, col_offset=4)], Name('_justAccept', Load(), lineno=1201, col_offset=22), lineno=1201, col_offset=4), FunctionDef('_testTimeoutNone', arguments([Name('self', Param(), lineno=1202, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1204, col_offset=8), 'assertTrue', Load(), lineno=1204, col_offset=8), [Compare(Call(Attribute(Name('socket', Load(), lineno=1204, col_offset=24), 'getdefaulttimeout', Load(), lineno=1204, col_offset=24), [], [], None, None, lineno=1204, col_offset=24), [Is()], [Name('None', Load(), lineno=1204, col_offset=54)], lineno=1204, col_offset=24)], [], None, None, lineno=1204, col_offset=8), lineno=1204, col_offset=8), Expr(Call(Attribute(Name('socket', Load(), lineno=1205, col_offset=8), 'setdefaulttimeout', Load(), lineno=1205, col_offset=8), [Num(30, lineno=1205, col_offset=33)], [], None, None, lineno=1205, col_offset=8), lineno=1205, col_offset=8), TryFinally([Assign([Attribute(Name('self', Load(), lineno=1207, col_offset=12), 'cli', Store(), lineno=1207, col_offset=12)], Call(Attribute(Name('socket', Load(), lineno=1207, col_offset=23), 'create_connection', Load(), lineno=1207, col_offset=23), [Tuple([Name('HOST', Load(), lineno=1207, col_offset=49), Attribute(Name('self', Load(), lineno=1207, col_offset=55), 'port', Load(), lineno=1207, col_offset=55)], Load(), lineno=1207, col_offset=49)], [keyword('timeout', Name('None', Load(), lineno=1207, col_offset=75))], None, None, lineno=1207, col_offset=23), lineno=1207, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1208, col_offset=12), 'addCleanup', Load(), lineno=1208, col_offset=12), [Attribute(Attribute(Name('self', Load(), lineno=1208, col_offset=28), 'cli', Load(), lineno=1208, col_offset=28), 'close', Load(), lineno=1208, col_offset=28)], [], None, None, lineno=1208, col_offset=12), lineno=1208, col_offset=12)], [Expr(Call(Attribute(Name('socket', Load(), lineno=1210, col_offset=12), 'setdefaulttimeout', Load(), lineno=1210, col_offset=12), [Name('None', Load(), lineno=1210, col_offset=37)], [], None, None, lineno=1210, col_offset=12), lineno=1210, col_offset=12)], lineno=1206, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1211, col_offset=8), 'assertEqual', Load(), lineno=1211, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=1211, col_offset=25), 'cli', Load(), lineno=1211, col_offset=25), 'gettimeout', Load(), lineno=1211, col_offset=25), [], [], None, None, lineno=1211, col_offset=25), Name('None', Load(), lineno=1211, col_offset=48)], [], None, None, lineno=1211, col_offset=8), lineno=1211, col_offset=8)], [], lineno=1202, col_offset=4), Assign([Name('testTimeoutValueNamed', Store(), lineno=1213, col_offset=4)], Name('_justAccept', Load(), lineno=1213, col_offset=28), lineno=1213, col_offset=4), FunctionDef('_testTimeoutValueNamed', arguments([Name('self', Param(), lineno=1214, col_offset=31)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1215, col_offset=8), 'cli', Store(), lineno=1215, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=1215, col_offset=19), 'create_connection', Load(), lineno=1215, col_offset=19), [Tuple([Name('HOST', Load(), lineno=1215, col_offset=45), Attribute(Name('self', Load(), lineno=1215, col_offset=51), 'port', Load(), lineno=1215, col_offset=51)], Load(), lineno=1215, col_offset=45)], [keyword('timeout', Num(30, lineno=1215, col_offset=71))], None, None, lineno=1215, col_offset=19), lineno=1215, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1216, col_offset=8), 'assertEqual', Load(), lineno=1216, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=1216, col_offset=25), 'cli', Load(), lineno=1216, col_offset=25), 'gettimeout', Load(), lineno=1216, col_offset=25), [], [], None, None, lineno=1216, col_offset=25), Num(30, lineno=1216, col_offset=48)], [], None, None, lineno=1216, col_offset=8), lineno=1216, col_offset=8)], [], lineno=1214, col_offset=4), Assign([Name('testTimeoutValueNonamed', Store(), lineno=1218, col_offset=4)], Name('_justAccept', Load(), lineno=1218, col_offset=30), lineno=1218, col_offset=4), FunctionDef('_testTimeoutValueNonamed', arguments([Name('self', Param(), lineno=1219, col_offset=33)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1220, col_offset=8), 'cli', Store(), lineno=1220, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=1220, col_offset=19), 'create_connection', Load(), lineno=1220, col_offset=19), [Tuple([Name('HOST', Load(), lineno=1220, col_offset=45), Attribute(Name('self', Load(), lineno=1220, col_offset=51), 'port', Load(), lineno=1220, col_offset=51)], Load(), lineno=1220, col_offset=45), Num(30, lineno=1220, col_offset=63)], [], None, None, lineno=1220, col_offset=19), lineno=1220, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1221, col_offset=8), 'addCleanup', Load(), lineno=1221, col_offset=8), [Attribute(Attribute(Name('self', Load(), lineno=1221, col_offset=24), 'cli', Load(), lineno=1221, col_offset=24), 'close', Load(), lineno=1221, col_offset=24)], [], None, None, lineno=1221, col_offset=8), lineno=1221, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1222, col_offset=8), 'assertEqual', Load(), lineno=1222, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=1222, col_offset=25), 'cli', Load(), lineno=1222, col_offset=25), 'gettimeout', Load(), lineno=1222, col_offset=25), [], [], None, None, lineno=1222, col_offset=25), Num(30, lineno=1222, col_offset=48)], [], None, None, lineno=1222, col_offset=8), lineno=1222, col_offset=8)], [], lineno=1219, col_offset=4)], [Call(Attribute(Name('unittest', Load(), lineno=1155, col_offset=1), 'skipUnless', Load(), lineno=1155, col_offset=1), [Name('thread', Load(), lineno=1155, col_offset=21), Str('Threading required for this test.', lineno=1155, col_offset=29)], [], None, None, lineno=1155, col_offset=1)], lineno=1155, col_offset=0), ClassDef('NetworkConnectionBehaviourTest', [Name('SocketTCPTest', Load(), lineno=1225, col_offset=37), Name('ThreadableTest', Load(), lineno=1225, col_offset=52)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=1227, col_offset=17), Name('methodName', Param(), lineno=1227, col_offset=23)], None, None, [Str('runTest', lineno=1227, col_offset=34)]), [Expr(Call(Attribute(Name('SocketTCPTest', Load(), lineno=1228, col_offset=8), '__init__', Load(), lineno=1228, col_offset=8), [Name('self', Load(), lineno=1228, col_offset=31)], [keyword('methodName', Name('methodName', Load(), lineno=1228, col_offset=48))], None, None, lineno=1228, col_offset=8), lineno=1228, col_offset=8), Expr(Call(Attribute(Name('ThreadableTest', Load(), lineno=1229, col_offset=8), '__init__', Load(), lineno=1229, col_offset=8), [Name('self', Load(), lineno=1229, col_offset=32)], [], None, None, lineno=1229, col_offset=8), lineno=1229, col_offset=8)], [], lineno=1227, col_offset=4), FunctionDef('clientSetUp', arguments([Name('self', Param(), lineno=1231, col_offset=20)], None, None, []), [Pass( lineno=1232, col_offset=8)], [], lineno=1231, col_offset=4), FunctionDef('clientTearDown', arguments([Name('self', Param(), lineno=1234, col_offset=23)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1235, col_offset=8), 'cli', Load(), lineno=1235, col_offset=8), 'close', Load(), lineno=1235, col_offset=8), [], [], None, None, lineno=1235, col_offset=8), lineno=1235, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1236, col_offset=8), 'cli', Store(), lineno=1236, col_offset=8)], Name('None', Load(), lineno=1236, col_offset=19), lineno=1236, col_offset=8), Expr(Call(Attribute(Name('ThreadableTest', Load(), lineno=1237, col_offset=8), 'clientTearDown', Load(), lineno=1237, col_offset=8), [Name('self', Load(), lineno=1237, col_offset=38)], [], None, None, lineno=1237, col_offset=8), lineno=1237, col_offset=8)], [], lineno=1234, col_offset=4), FunctionDef('testInsideTimeout', arguments([Name('self', Param(), lineno=1239, col_offset=26)], None, None, []), [Assign([Tuple([Name('conn', Store(), lineno=1240, col_offset=8), Name('addr', Store(), lineno=1240, col_offset=14)], Store(), lineno=1240, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=1240, col_offset=21), 'serv', Load(), lineno=1240, col_offset=21), 'accept', Load(), lineno=1240, col_offset=21), [], [], None, None, lineno=1240, col_offset=21), lineno=1240, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1241, col_offset=8), 'addCleanup', Load(), lineno=1241, col_offset=8), [Attribute(Name('conn', Load(), lineno=1241, col_offset=24), 'close', Load(), lineno=1241, col_offset=24)], [], None, None, lineno=1241, col_offset=8), lineno=1241, col_offset=8), Expr(Call(Attribute(Name('time', Load(), lineno=1242, col_offset=8), 'sleep', Load(), lineno=1242, col_offset=8), [Num(3, lineno=1242, col_offset=19)], [], None, None, lineno=1242, col_offset=8), lineno=1242, col_offset=8), Expr(Call(Attribute(Name('conn', Load(), lineno=1243, col_offset=8), 'send', Load(), lineno=1243, col_offset=8), [Str('done!', lineno=1243, col_offset=18)], [], None, None, lineno=1243, col_offset=8), lineno=1243, col_offset=8)], [], lineno=1239, col_offset=4), Assign([Name('testOutsideTimeout', Store(), lineno=1244, col_offset=4)], Name('testInsideTimeout', Load(), lineno=1244, col_offset=25), lineno=1244, col_offset=4), FunctionDef('_testInsideTimeout', arguments([Name('self', Param(), lineno=1246, col_offset=27)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1247, col_offset=8), 'cli', Store(), lineno=1247, col_offset=8), Name('sock', Store(), lineno=1247, col_offset=19)], Call(Attribute(Name('socket', Load(), lineno=1247, col_offset=26), 'create_connection', Load(), lineno=1247, col_offset=26), [Tuple([Name('HOST', Load(), lineno=1247, col_offset=52), Attribute(Name('self', Load(), lineno=1247, col_offset=58), 'port', Load(), lineno=1247, col_offset=58)], Load(), lineno=1247, col_offset=52)], [], None, None, lineno=1247, col_offset=26), lineno=1247, col_offset=8), Assign([Name('data', Store(), lineno=1248, col_offset=8)], Call(Attribute(Name('sock', Load(), lineno=1248, col_offset=15), 'recv', Load(), lineno=1248, col_offset=15), [Num(5, lineno=1248, col_offset=25)], [], None, None, lineno=1248, col_offset=15), lineno=1248, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1249, col_offset=8), 'assertEqual', Load(), lineno=1249, col_offset=8), [Name('data', Load(), lineno=1249, col_offset=25), Str('done!', lineno=1249, col_offset=31)], [], None, None, lineno=1249, col_offset=8), lineno=1249, col_offset=8)], [], lineno=1246, col_offset=4), FunctionDef('_testOutsideTimeout', arguments([Name('self', Param(), lineno=1251, col_offset=28)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1252, col_offset=8), 'cli', Store(), lineno=1252, col_offset=8), Name('sock', Store(), lineno=1252, col_offset=19)], Call(Attribute(Name('socket', Load(), lineno=1252, col_offset=26), 'create_connection', Load(), lineno=1252, col_offset=26), [Tuple([Name('HOST', Load(), lineno=1252, col_offset=52), Attribute(Name('self', Load(), lineno=1252, col_offset=58), 'port', Load(), lineno=1252, col_offset=58)], Load(), lineno=1252, col_offset=52)], [keyword('timeout', Num(1, lineno=1252, col_offset=78))], None, None, lineno=1252, col_offset=26), lineno=1252, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1253, col_offset=8), 'assertRaises', Load(), lineno=1253, col_offset=8), [Attribute(Name('socket', Load(), lineno=1253, col_offset=26), 'timeout', Load(), lineno=1253, col_offset=26), Lambda(arguments([], None, None, []), Call(Attribute(Name('sock', Load(), lineno=1253, col_offset=50), 'recv', Load(), lineno=1253, col_offset=50), [Num(5, lineno=1253, col_offset=60)], [], None, None, lineno=1253, col_offset=50), lineno=1253, col_offset=42)], [], None, None, lineno=1253, col_offset=8), lineno=1253, col_offset=8)], [], lineno=1251, col_offset=4)], [Call(Attribute(Name('unittest', Load(), lineno=1224, col_offset=1), 'skipUnless', Load(), lineno=1224, col_offset=1), [Name('thread', Load(), lineno=1224, col_offset=21), Str('Threading required for this test.', lineno=1224, col_offset=29)], [], None, None, lineno=1224, col_offset=1)], lineno=1224, col_offset=0), ClassDef('Urllib2FileobjectTest', [Attribute(Name('unittest', Load(), lineno=1256, col_offset=28), 'TestCase', Load(), lineno=1256, col_offset=28)], [FunctionDef('testClose', arguments([Name('self', Param(), lineno=1261, col_offset=18)], None, None, []), [ClassDef('MockSocket', [], [Assign([Name('closed', Store(), lineno=1263, col_offset=12)], Name('False', Load(), lineno=1263, col_offset=21), lineno=1263, col_offset=12), FunctionDef('flush', arguments([Name('self', Param(), lineno=1264, col_offset=22)], None, None, []), [Pass( lineno=1264, col_offset=29)], [], lineno=1264, col_offset=12), FunctionDef('close', arguments([Name('self', Param(), lineno=1265, col_offset=22)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1265, col_offset=29), 'closed', Store(), lineno=1265, col_offset=29)], Name('True', Load(), lineno=1265, col_offset=43), lineno=1265, col_offset=29)], [], lineno=1265, col_offset=12)], [], lineno=1262, col_offset=8), Assign([Name('s', Store(), lineno=1270, col_offset=8)], Call(Name('MockSocket', Load(), lineno=1270, col_offset=12), [], [], None, None, lineno=1270, col_offset=12), lineno=1270, col_offset=8), Assign([Name('f', Store(), lineno=1271, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=1271, col_offset=12), '_fileobject', Load(), lineno=1271, col_offset=12), [Name('s', Load(), lineno=1271, col_offset=31)], [], None, None, lineno=1271, col_offset=12), lineno=1271, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=1272, col_offset=8), 'close', Load(), lineno=1272, col_offset=8), [], [], None, None, lineno=1272, col_offset=8), lineno=1272, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1273, col_offset=8), 'assertTrue', Load(), lineno=1273, col_offset=8), [UnaryOp(Not(), Attribute(Name('s', Load(), lineno=1273, col_offset=28), 'closed', Load(), lineno=1273, col_offset=28), lineno=1273, col_offset=24)], [], None, None, lineno=1273, col_offset=8), lineno=1273, col_offset=8), Assign([Name('s', Store(), lineno=1275, col_offset=8)], Call(Name('MockSocket', Load(), lineno=1275, col_offset=12), [], [], None, None, lineno=1275, col_offset=12), lineno=1275, col_offset=8), Assign([Name('f', Store(), lineno=1276, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=1276, col_offset=12), '_fileobject', Load(), lineno=1276, col_offset=12), [Name('s', Load(), lineno=1276, col_offset=31)], [keyword('close', Name('True', Load(), lineno=1276, col_offset=40))], None, None, lineno=1276, col_offset=12), lineno=1276, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=1277, col_offset=8), 'close', Load(), lineno=1277, col_offset=8), [], [], None, None, lineno=1277, col_offset=8), lineno=1277, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1278, col_offset=8), 'assertTrue', Load(), lineno=1278, col_offset=8), [Attribute(Name('s', Load(), lineno=1278, col_offset=24), 'closed', Load(), lineno=1278, col_offset=24)], [], None, None, lineno=1278, col_offset=8), lineno=1278, col_offset=8)], [], lineno=1261, col_offset=4)], [], lineno=1256, col_offset=0), ClassDef('TCPTimeoutTest', [Name('SocketTCPTest', Load(), lineno=1280, col_offset=21)], [FunctionDef('testTCPTimeout', arguments([Name('self', Param(), lineno=1282, col_offset=23)], None, None, []), [FunctionDef('raise_timeout', arguments([], 'args', 'kwargs', []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1284, col_offset=12), 'serv', Load(), lineno=1284, col_offset=12), 'settimeout', Load(), lineno=1284, col_offset=12), [Num(1.0, lineno=1284, col_offset=33)], [], None, None, lineno=1284, col_offset=12), lineno=1284, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1285, col_offset=12), 'serv', Load(), lineno=1285, col_offset=12), 'accept', Load(), lineno=1285, col_offset=12), [], [], None, None, lineno=1285, col_offset=12), lineno=1285, col_offset=12)], [], lineno=1283, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1286, col_offset=8), 'assertRaises', Load(), lineno=1286, col_offset=8), [Attribute(Name('socket', Load(), lineno=1286, col_offset=26), 'timeout', Load(), lineno=1286, col_offset=26), Name('raise_timeout', Load(), lineno=1286, col_offset=42), Str('Error generating a timeout exception (TCP)', lineno=1287, col_offset=30)], [], None, None, lineno=1286, col_offset=8), lineno=1286, col_offset=8)], [], lineno=1282, col_offset=4), FunctionDef('testTimeoutZero', arguments([Name('self', Param(), lineno=1289, col_offset=24)], None, None, []), [Assign([Name('ok', Store(), lineno=1290, col_offset=8)], Name('False', Load(), lineno=1290, col_offset=13), lineno=1290, col_offset=8), TryExcept([Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1292, col_offset=12), 'serv', Load(), lineno=1292, col_offset=12), 'settimeout', Load(), lineno=1292, col_offset=12), [Num(0.0, lineno=1292, col_offset=33)], [], None, None, lineno=1292, col_offset=12), lineno=1292, col_offset=12), Assign([Name('foo', Store(), lineno=1293, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=1293, col_offset=18), 'serv', Load(), lineno=1293, col_offset=18), 'accept', Load(), lineno=1293, col_offset=18), [], [], None, None, lineno=1293, col_offset=18), lineno=1293, col_offset=12)], [ExceptHandler(Attribute(Name('socket', Load(), lineno=1294, col_offset=15), 'timeout', Load(), lineno=1294, col_offset=15), None, [Expr(Call(Attribute(Name('self', Load(), lineno=1295, col_offset=12), 'fail', Load(), lineno=1295, col_offset=12), [Str('caught timeout instead of error (TCP)', lineno=1295, col_offset=22)], [], None, None, lineno=1295, col_offset=12), lineno=1295, col_offset=12)], lineno=1294, col_offset=8), ExceptHandler(Attribute(Name('socket', Load(), lineno=1296, col_offset=15), 'error', Load(), lineno=1296, col_offset=15), None, [Assign([Name('ok', Store(), lineno=1297, col_offset=12)], Name('True', Load(), lineno=1297, col_offset=17), lineno=1297, col_offset=12)], lineno=1296, col_offset=8), ExceptHandler(None, None, [Expr(Call(Attribute(Name('self', Load(), lineno=1299, col_offset=12), 'fail', Load(), lineno=1299, col_offset=12), [Str('caught unexpected exception (TCP)', lineno=1299, col_offset=22)], [], None, None, lineno=1299, col_offset=12), lineno=1299, col_offset=12)], lineno=1298, col_offset=8)], [], lineno=1291, col_offset=8), If(UnaryOp(Not(), Name('ok', Load(), lineno=1300, col_offset=15), lineno=1300, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=1301, col_offset=12), 'fail', Load(), lineno=1301, col_offset=12), [Str('accept() returned success when we did not expect it', lineno=1301, col_offset=22)], [], None, None, lineno=1301, col_offset=12), lineno=1301, col_offset=12)], [], lineno=1300, col_offset=8)], [], lineno=1289, col_offset=4), FunctionDef('testInterruptedTimeout', arguments([Name('self', Param(), lineno=1303, col_offset=31)], None, None, []), [If(UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=1307, col_offset=15), [Name('signal', Load(), lineno=1307, col_offset=23), Str('alarm', lineno=1307, col_offset=31)], [], None, None, lineno=1307, col_offset=15), lineno=1307, col_offset=11), [Return(None, lineno=1308, col_offset=12)], [], lineno=1307, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1309, col_offset=8), 'serv', Load(), lineno=1309, col_offset=8), 'settimeout', Load(), lineno=1309, col_offset=8), [Num(5.0, lineno=1309, col_offset=29)], [], None, None, lineno=1309, col_offset=8), lineno=1309, col_offset=8), ClassDef('Alarm', [Name('Exception', Load(), lineno=1310, col_offset=20)], [Pass( lineno=1311, col_offset=12)], [], lineno=1310, col_offset=8), FunctionDef('alarm_handler', arguments([Name('signal', Param(), lineno=1312, col_offset=26), Name('frame', Param(), lineno=1312, col_offset=34)], None, None, []), [Raise(Name('Alarm', Load(), lineno=1313, col_offset=18), None, None, lineno=1313, col_offset=12)], [], lineno=1312, col_offset=8), Assign([Name('old_alarm', Store(), lineno=1314, col_offset=8)], Call(Attribute(Name('signal', Load(), lineno=1314, col_offset=20), 'signal', Load(), lineno=1314, col_offset=20), [Attribute(Name('signal', Load(), lineno=1314, col_offset=34), 'SIGALRM', Load(), lineno=1314, col_offset=34), Name('alarm_handler', Load(), lineno=1314, col_offset=50)], [], None, None, lineno=1314, col_offset=20), lineno=1314, col_offset=8), TryFinally([TryExcept([Expr(Call(Attribute(Name('signal', Load(), lineno=1316, col_offset=12), 'alarm', Load(), lineno=1316, col_offset=12), [Num(2, lineno=1316, col_offset=25)], [], None, None, lineno=1316, col_offset=12), lineno=1316, col_offset=12), TryFinally([TryExcept([Assign([Name('foo', Store(), lineno=1318, col_offset=16)], Call(Attribute(Attribute(Name('self', Load(), lineno=1318, col_offset=22), 'serv', Load(), lineno=1318, col_offset=22), 'accept', Load(), lineno=1318, col_offset=22), [], [], None, None, lineno=1318, col_offset=22), lineno=1318, col_offset=16)], [ExceptHandler(Attribute(Name('socket', Load(), lineno=1319, col_offset=19), 'timeout', Load(), lineno=1319, col_offset=19), None, [Expr(Call(Attribute(Name('self', Load(), lineno=1320, col_offset=16), 'fail', Load(), lineno=1320, col_offset=16), [Str('caught timeout instead of Alarm', lineno=1320, col_offset=26)], [], None, None, lineno=1320, col_offset=16), lineno=1320, col_offset=16)], lineno=1319, col_offset=12), ExceptHandler(Name('Alarm', Load(), lineno=1321, col_offset=19), None, [Pass( lineno=1322, col_offset=16)], lineno=1321, col_offset=12), ExceptHandler(None, None, [Expr(Call(Attribute(Name('self', Load(), lineno=1324, col_offset=16), 'fail', Load(), lineno=1324, col_offset=16), [BinOp(Str('caught other exception instead of Alarm: %s(%s):\n%s', lineno=1324, col_offset=26), Mod(), BinOp(Subscript(Call(Attribute(Name('sys', Load(), lineno=1326, col_offset=27), 'exc_info', Load(), lineno=1326, col_offset=27), [], [], None, None, lineno=1326, col_offset=27), Slice(None, Num(2, lineno=1326, col_offset=43), None), Load(), lineno=1326, col_offset=27), Add(), Tuple([Call(Attribute(Name('traceback', Load(), lineno=1326, col_offset=49), 'format_exc', Load(), lineno=1326, col_offset=49), [], [], None, None, lineno=1326, col_offset=49)], Load(), lineno=1326, col_offset=49), lineno=1326, col_offset=27), lineno=1324, col_offset=26)], [], None, None, lineno=1324, col_offset=16), lineno=1324, col_offset=16)], lineno=1323, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=1328, col_offset=16), 'fail', Load(), lineno=1328, col_offset=16), [Str('nothing caught', lineno=1328, col_offset=26)], [], None, None, lineno=1328, col_offset=16), lineno=1328, col_offset=16)], lineno=1317, col_offset=12)], [Expr(Call(Attribute(Name('signal', Load(), lineno=1330, col_offset=16), 'alarm', Load(), lineno=1330, col_offset=16), [Num(0, lineno=1330, col_offset=29)], [], None, None, lineno=1330, col_offset=16), lineno=1330, col_offset=16)], lineno=1317, col_offset=12)], [ExceptHandler(Name('Alarm', Load(), lineno=1331, col_offset=15), None, [Expr(Call(Attribute(Name('self', Load(), lineno=1332, col_offset=12), 'fail', Load(), lineno=1332, col_offset=12), [Str('got Alarm in wrong place', lineno=1332, col_offset=22)], [], None, None, lineno=1332, col_offset=12), lineno=1332, col_offset=12)], lineno=1331, col_offset=8)], [], lineno=1315, col_offset=8)], [Expr(Call(Attribute(Name('signal', Load(), lineno=1335, col_offset=12), 'signal', Load(), lineno=1335, col_offset=12), [Attribute(Name('signal', Load(), lineno=1335, col_offset=26), 'SIGALRM', Load(), lineno=1335, col_offset=26), Name('old_alarm', Load(), lineno=1335, col_offset=42)], [], None, None, lineno=1335, col_offset=12), lineno=1335, col_offset=12)], lineno=1315, col_offset=8)], [], lineno=1303, col_offset=4)], [], lineno=1280, col_offset=0), ClassDef('UDPTimeoutTest', [Name('SocketTCPTest', Load(), lineno=1337, col_offset=21)], [FunctionDef('testUDPTimeout', arguments([Name('self', Param(), lineno=1339, col_offset=23)], None, None, []), [FunctionDef('raise_timeout', arguments([], 'args', 'kwargs', []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1341, col_offset=12), 'serv', Load(), lineno=1341, col_offset=12), 'settimeout', Load(), lineno=1341, col_offset=12), [Num(1.0, lineno=1341, col_offset=33)], [], None, None, lineno=1341, col_offset=12), lineno=1341, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1342, col_offset=12), 'serv', Load(), lineno=1342, col_offset=12), 'recv', Load(), lineno=1342, col_offset=12), [Num(1024, lineno=1342, col_offset=27)], [], None, None, lineno=1342, col_offset=12), lineno=1342, col_offset=12)], [], lineno=1340, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1343, col_offset=8), 'assertRaises', Load(), lineno=1343, col_offset=8), [Attribute(Name('socket', Load(), lineno=1343, col_offset=26), 'timeout', Load(), lineno=1343, col_offset=26), Name('raise_timeout', Load(), lineno=1343, col_offset=42), Str('Error generating a timeout exception (UDP)', lineno=1344, col_offset=30)], [], None, None, lineno=1343, col_offset=8), lineno=1343, col_offset=8)], [], lineno=1339, col_offset=4), FunctionDef('testTimeoutZero', arguments([Name('self', Param(), lineno=1346, col_offset=24)], None, None, []), [Assign([Name('ok', Store(), lineno=1347, col_offset=8)], Name('False', Load(), lineno=1347, col_offset=13), lineno=1347, col_offset=8), TryExcept([Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1349, col_offset=12), 'serv', Load(), lineno=1349, col_offset=12), 'settimeout', Load(), lineno=1349, col_offset=12), [Num(0.0, lineno=1349, col_offset=33)], [], None, None, lineno=1349, col_offset=12), lineno=1349, col_offset=12), Assign([Name('foo', Store(), lineno=1350, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=1350, col_offset=18), 'serv', Load(), lineno=1350, col_offset=18), 'recv', Load(), lineno=1350, col_offset=18), [Num(1024, lineno=1350, col_offset=33)], [], None, None, lineno=1350, col_offset=18), lineno=1350, col_offset=12)], [ExceptHandler(Attribute(Name('socket', Load(), lineno=1351, col_offset=15), 'timeout', Load(), lineno=1351, col_offset=15), None, [Expr(Call(Attribute(Name('self', Load(), lineno=1352, col_offset=12), 'fail', Load(), lineno=1352, col_offset=12), [Str('caught timeout instead of error (UDP)', lineno=1352, col_offset=22)], [], None, None, lineno=1352, col_offset=12), lineno=1352, col_offset=12)], lineno=1351, col_offset=8), ExceptHandler(Attribute(Name('socket', Load(), lineno=1353, col_offset=15), 'error', Load(), lineno=1353, col_offset=15), None, [Assign([Name('ok', Store(), lineno=1354, col_offset=12)], Name('True', Load(), lineno=1354, col_offset=17), lineno=1354, col_offset=12)], lineno=1353, col_offset=8), ExceptHandler(None, None, [Expr(Call(Attribute(Name('self', Load(), lineno=1356, col_offset=12), 'fail', Load(), lineno=1356, col_offset=12), [Str('caught unexpected exception (UDP)', lineno=1356, col_offset=22)], [], None, None, lineno=1356, col_offset=12), lineno=1356, col_offset=12)], lineno=1355, col_offset=8)], [], lineno=1348, col_offset=8), If(UnaryOp(Not(), Name('ok', Load(), lineno=1357, col_offset=15), lineno=1357, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=1358, col_offset=12), 'fail', Load(), lineno=1358, col_offset=12), [Str('recv() returned success when we did not expect it', lineno=1358, col_offset=22)], [], None, None, lineno=1358, col_offset=12), lineno=1358, col_offset=12)], [], lineno=1357, col_offset=8)], [], lineno=1346, col_offset=4)], [], lineno=1337, col_offset=0), ClassDef('TestExceptions', [Attribute(Name('unittest', Load(), lineno=1360, col_offset=21), 'TestCase', Load(), lineno=1360, col_offset=21)], [FunctionDef('testExceptionTree', arguments([Name('self', Param(), lineno=1362, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1363, col_offset=8), 'assertTrue', Load(), lineno=1363, col_offset=8), [Call(Name('issubclass', Load(), lineno=1363, col_offset=24), [Attribute(Name('socket', Load(), lineno=1363, col_offset=35), 'error', Load(), lineno=1363, col_offset=35), Name('Exception', Load(), lineno=1363, col_offset=49)], [], None, None, lineno=1363, col_offset=24)], [], None, None, lineno=1363, col_offset=8), lineno=1363, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1364, col_offset=8), 'assertTrue', Load(), lineno=1364, col_offset=8), [Call(Name('issubclass', Load(), lineno=1364, col_offset=24), [Attribute(Name('socket', Load(), lineno=1364, col_offset=35), 'herror', Load(), lineno=1364, col_offset=35), Attribute(Name('socket', Load(), lineno=1364, col_offset=50), 'error', Load(), lineno=1364, col_offset=50)], [], None, None, lineno=1364, col_offset=24)], [], None, None, lineno=1364, col_offset=8), lineno=1364, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1365, col_offset=8), 'assertTrue', Load(), lineno=1365, col_offset=8), [Call(Name('issubclass', Load(), lineno=1365, col_offset=24), [Attribute(Name('socket', Load(), lineno=1365, col_offset=35), 'gaierror', Load(), lineno=1365, col_offset=35), Attribute(Name('socket', Load(), lineno=1365, col_offset=52), 'error', Load(), lineno=1365, col_offset=52)], [], None, None, lineno=1365, col_offset=24)], [], None, None, lineno=1365, col_offset=8), lineno=1365, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1366, col_offset=8), 'assertTrue', Load(), lineno=1366, col_offset=8), [Call(Name('issubclass', Load(), lineno=1366, col_offset=24), [Attribute(Name('socket', Load(), lineno=1366, col_offset=35), 'timeout', Load(), lineno=1366, col_offset=35), Attribute(Name('socket', Load(), lineno=1366, col_offset=51), 'error', Load(), lineno=1366, col_offset=51)], [], None, None, lineno=1366, col_offset=24)], [], None, None, lineno=1366, col_offset=8), lineno=1366, col_offset=8)], [], lineno=1362, col_offset=4)], [], lineno=1360, col_offset=0), ClassDef('TestLinuxAbstractNamespace', [Attribute(Name('unittest', Load(), lineno=1368, col_offset=33), 'TestCase', Load(), lineno=1368, col_offset=33)], [Assign([Name('UNIX_PATH_MAX', Store(), lineno=1370, col_offset=4)], Num(108, lineno=1370, col_offset=20), lineno=1370, col_offset=4), FunctionDef('testLinuxAbstractNamespace', arguments([Name('self', Param(), lineno=1372, col_offset=35)], None, None, []), [Assign([Name('address', Store(), lineno=1373, col_offset=8)], Str('\x00python-test-hello\x00\xff', lineno=1373, col_offset=18), lineno=1373, col_offset=8), Assign([Name('s1', Store(), lineno=1374, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=1374, col_offset=13), 'socket', Load(), lineno=1374, col_offset=13), [Attribute(Name('socket', Load(), lineno=1374, col_offset=27), 'AF_UNIX', Load(), lineno=1374, col_offset=27), Attribute(Name('socket', Load(), lineno=1374, col_offset=43), 'SOCK_STREAM', Load(), lineno=1374, col_offset=43)], [], None, None, lineno=1374, col_offset=13), lineno=1374, col_offset=8), Expr(Call(Attribute(Name('s1', Load(), lineno=1375, col_offset=8), 'bind', Load(), lineno=1375, col_offset=8), [Name('address', Load(), lineno=1375, col_offset=16)], [], None, None, lineno=1375, col_offset=8), lineno=1375, col_offset=8), Expr(Call(Attribute(Name('s1', Load(), lineno=1376, col_offset=8), 'listen', Load(), lineno=1376, col_offset=8), [Num(1, lineno=1376, col_offset=18)], [], None, None, lineno=1376, col_offset=8), lineno=1376, col_offset=8), Assign([Name('s2', Store(), lineno=1377, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=1377, col_offset=13), 'socket', Load(), lineno=1377, col_offset=13), [Attribute(Name('socket', Load(), lineno=1377, col_offset=27), 'AF_UNIX', Load(), lineno=1377, col_offset=27), Attribute(Name('socket', Load(), lineno=1377, col_offset=43), 'SOCK_STREAM', Load(), lineno=1377, col_offset=43)], [], None, None, lineno=1377, col_offset=13), lineno=1377, col_offset=8), Expr(Call(Attribute(Name('s2', Load(), lineno=1378, col_offset=8), 'connect', Load(), lineno=1378, col_offset=8), [Call(Attribute(Name('s1', Load(), lineno=1378, col_offset=19), 'getsockname', Load(), lineno=1378, col_offset=19), [], [], None, None, lineno=1378, col_offset=19)], [], None, None, lineno=1378, col_offset=8), lineno=1378, col_offset=8), Expr(Call(Attribute(Name('s1', Load(), lineno=1379, col_offset=8), 'accept', Load(), lineno=1379, col_offset=8), [], [], None, None, lineno=1379, col_offset=8), lineno=1379, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1380, col_offset=8), 'assertEqual', Load(), lineno=1380, col_offset=8), [Call(Attribute(Name('s1', Load(), lineno=1380, col_offset=25), 'getsockname', Load(), lineno=1380, col_offset=25), [], [], None, None, lineno=1380, col_offset=25), Name('address', Load(), lineno=1380, col_offset=43)], [], None, None, lineno=1380, col_offset=8), lineno=1380, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1381, col_offset=8), 'assertEqual', Load(), lineno=1381, col_offset=8), [Call(Attribute(Name('s2', Load(), lineno=1381, col_offset=25), 'getpeername', Load(), lineno=1381, col_offset=25), [], [], None, None, lineno=1381, col_offset=25), Name('address', Load(), lineno=1381, col_offset=43)], [], None, None, lineno=1381, col_offset=8), lineno=1381, col_offset=8)], [], lineno=1372, col_offset=4), FunctionDef('testMaxName', arguments([Name('self', Param(), lineno=1383, col_offset=20)], None, None, []), [Assign([Name('address', Store(), lineno=1384, col_offset=8)], BinOp(Str('\x00', lineno=1384, col_offset=18), Add(), BinOp(Str('h', lineno=1384, col_offset=27), Mult(), BinOp(Attribute(Name('self', Load(), lineno=1384, col_offset=34), 'UNIX_PATH_MAX', Load(), lineno=1384, col_offset=34), Sub(), Num(1, lineno=1384, col_offset=55), lineno=1384, col_offset=34), lineno=1384, col_offset=27), lineno=1384, col_offset=18), lineno=1384, col_offset=8), Assign([Name('s', Store(), lineno=1385, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=1385, col_offset=12), 'socket', Load(), lineno=1385, col_offset=12), [Attribute(Name('socket', Load(), lineno=1385, col_offset=26), 'AF_UNIX', Load(), lineno=1385, col_offset=26), Attribute(Name('socket', Load(), lineno=1385, col_offset=42), 'SOCK_STREAM', Load(), lineno=1385, col_offset=42)], [], None, None, lineno=1385, col_offset=12), lineno=1385, col_offset=8), Expr(Call(Attribute(Name('s', Load(), lineno=1386, col_offset=8), 'bind', Load(), lineno=1386, col_offset=8), [Name('address', Load(), lineno=1386, col_offset=15)], [], None, None, lineno=1386, col_offset=8), lineno=1386, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1387, col_offset=8), 'assertEqual', Load(), lineno=1387, col_offset=8), [Call(Attribute(Name('s', Load(), lineno=1387, col_offset=25), 'getsockname', Load(), lineno=1387, col_offset=25), [], [], None, None, lineno=1387, col_offset=25), Name('address', Load(), lineno=1387, col_offset=42)], [], None, None, lineno=1387, col_offset=8), lineno=1387, col_offset=8)], [], lineno=1383, col_offset=4), FunctionDef('testNameOverflow', arguments([Name('self', Param(), lineno=1389, col_offset=25)], None, None, []), [Assign([Name('address', Store(), lineno=1390, col_offset=8)], BinOp(Str('\x00', lineno=1390, col_offset=18), Add(), BinOp(Str('h', lineno=1390, col_offset=27), Mult(), Attribute(Name('self', Load(), lineno=1390, col_offset=33), 'UNIX_PATH_MAX', Load(), lineno=1390, col_offset=33), lineno=1390, col_offset=27), lineno=1390, col_offset=18), lineno=1390, col_offset=8), Assign([Name('s', Store(), lineno=1391, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=1391, col_offset=12), 'socket', Load(), lineno=1391, col_offset=12), [Attribute(Name('socket', Load(), lineno=1391, col_offset=26), 'AF_UNIX', Load(), lineno=1391, col_offset=26), Attribute(Name('socket', Load(), lineno=1391, col_offset=42), 'SOCK_STREAM', Load(), lineno=1391, col_offset=42)], [], None, None, lineno=1391, col_offset=12), lineno=1391, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1392, col_offset=8), 'assertRaises', Load(), lineno=1392, col_offset=8), [Attribute(Name('socket', Load(), lineno=1392, col_offset=26), 'error', Load(), lineno=1392, col_offset=26), Attribute(Name('s', Load(), lineno=1392, col_offset=40), 'bind', Load(), lineno=1392, col_offset=40), Name('address', Load(), lineno=1392, col_offset=48)], [], None, None, lineno=1392, col_offset=8), lineno=1392, col_offset=8)], [], lineno=1389, col_offset=4)], [], lineno=1368, col_offset=0), ClassDef('BufferIOTest', [Name('SocketConnectedTest', Load(), lineno=1396, col_offset=19)], [Expr(Str('\n    Test the buffer versions of socket.recv() and socket.send().\n    ', lineno=1399, col_offset=-1), lineno=1399, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=1400, col_offset=17), Name('methodName', Param(), lineno=1400, col_offset=23)], None, None, [Str('runTest', lineno=1400, col_offset=34)]), [Expr(Call(Attribute(Name('SocketConnectedTest', Load(), lineno=1401, col_offset=8), '__init__', Load(), lineno=1401, col_offset=8), [Name('self', Load(), lineno=1401, col_offset=37)], [keyword('methodName', Name('methodName', Load(), lineno=1401, col_offset=54))], None, None, lineno=1401, col_offset=8), lineno=1401, col_offset=8)], [], lineno=1400, col_offset=4), FunctionDef('testRecvIntoArray', arguments([Name('self', Param(), lineno=1403, col_offset=26)], None, None, []), [Assign([Name('buf', Store(), lineno=1404, col_offset=8)], Call(Attribute(Name('array', Load(), lineno=1404, col_offset=14), 'array', Load(), lineno=1404, col_offset=14), [Str('c', lineno=1404, col_offset=26), BinOp(Str(' ', lineno=1404, col_offset=31), Mult(), Num(1024, lineno=1404, col_offset=35), lineno=1404, col_offset=31)], [], None, None, lineno=1404, col_offset=14), lineno=1404, col_offset=8), Assign([Name('nbytes', Store(), lineno=1405, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=1405, col_offset=17), 'cli_conn', Load(), lineno=1405, col_offset=17), 'recv_into', Load(), lineno=1405, col_offset=17), [Name('buf', Load(), lineno=1405, col_offset=41)], [], None, None, lineno=1405, col_offset=17), lineno=1405, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1406, col_offset=8), 'assertEqual', Load(), lineno=1406, col_offset=8), [Name('nbytes', Load(), lineno=1406, col_offset=25), Call(Name('len', Load(), lineno=1406, col_offset=33), [Name('MSG', Load(), lineno=1406, col_offset=37)], [], None, None, lineno=1406, col_offset=33)], [], None, None, lineno=1406, col_offset=8), lineno=1406, col_offset=8), Assign([Name('msg', Store(), lineno=1407, col_offset=8)], Subscript(Call(Attribute(Name('buf', Load(), lineno=1407, col_offset=14), 'tostring', Load(), lineno=1407, col_offset=14), [], [], None, None, lineno=1407, col_offset=14), Slice(None, Call(Name('len', Load(), lineno=1407, col_offset=30), [Name('MSG', Load(), lineno=1407, col_offset=34)], [], None, None, lineno=1407, col_offset=30), None), Load(), lineno=1407, col_offset=14), lineno=1407, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1408, col_offset=8), 'assertEqual', Load(), lineno=1408, col_offset=8), [Name('msg', Load(), lineno=1408, col_offset=25), Name('MSG', Load(), lineno=1408, col_offset=30)], [], None, None, lineno=1408, col_offset=8), lineno=1408, col_offset=8)], [], lineno=1403, col_offset=4), FunctionDef('_testRecvIntoArray', arguments([Name('self', Param(), lineno=1410, col_offset=27)], None, None, []), [With(Call(Attribute(Name('test_support', Load(), lineno=1411, col_offset=13), 'check_py3k_warnings', Load(), lineno=1411, col_offset=13), [], [], None, None, lineno=1411, col_offset=13), None, [Assign([Name('buf', Store(), lineno=1412, col_offset=12)], Call(Name('buffer', Load(), lineno=1412, col_offset=18), [Name('MSG', Load(), lineno=1412, col_offset=25)], [], None, None, lineno=1412, col_offset=18), lineno=1412, col_offset=12)], lineno=1411, col_offset=13), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1413, col_offset=8), 'serv_conn', Load(), lineno=1413, col_offset=8), 'send', Load(), lineno=1413, col_offset=8), [Name('buf', Load(), lineno=1413, col_offset=28)], [], None, None, lineno=1413, col_offset=8), lineno=1413, col_offset=8)], [], lineno=1410, col_offset=4), FunctionDef('testRecvIntoBytearray', arguments([Name('self', Param(), lineno=1415, col_offset=30)], None, None, []), [Assign([Name('buf', Store(), lineno=1416, col_offset=8)], Call(Name('bytearray', Load(), lineno=1416, col_offset=14), [Num(1024, lineno=1416, col_offset=24)], [], None, None, lineno=1416, col_offset=14), lineno=1416, col_offset=8), Assign([Name('nbytes', Store(), lineno=1417, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=1417, col_offset=17), 'cli_conn', Load(), lineno=1417, col_offset=17), 'recv_into', Load(), lineno=1417, col_offset=17), [Name('buf', Load(), lineno=1417, col_offset=41)], [], None, None, lineno=1417, col_offset=17), lineno=1417, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1418, col_offset=8), 'assertEqual', Load(), lineno=1418, col_offset=8), [Name('nbytes', Load(), lineno=1418, col_offset=25), Call(Name('len', Load(), lineno=1418, col_offset=33), [Name('MSG', Load(), lineno=1418, col_offset=37)], [], None, None, lineno=1418, col_offset=33)], [], None, None, lineno=1418, col_offset=8), lineno=1418, col_offset=8), Assign([Name('msg', Store(), lineno=1419, col_offset=8)], Subscript(Name('buf', Load(), lineno=1419, col_offset=14), Slice(None, Call(Name('len', Load(), lineno=1419, col_offset=19), [Name('MSG', Load(), lineno=1419, col_offset=23)], [], None, None, lineno=1419, col_offset=19), None), Load(), lineno=1419, col_offset=14), lineno=1419, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1420, col_offset=8), 'assertEqual', Load(), lineno=1420, col_offset=8), [Name('msg', Load(), lineno=1420, col_offset=25), Name('MSG', Load(), lineno=1420, col_offset=30)], [], None, None, lineno=1420, col_offset=8), lineno=1420, col_offset=8)], [], lineno=1415, col_offset=4), Assign([Name('_testRecvIntoBytearray', Store(), lineno=1422, col_offset=4)], Name('_testRecvIntoArray', Load(), lineno=1422, col_offset=29), lineno=1422, col_offset=4), FunctionDef('testRecvIntoMemoryview', arguments([Name('self', Param(), lineno=1424, col_offset=31)], None, None, []), [Assign([Name('buf', Store(), lineno=1425, col_offset=8)], Call(Name('bytearray', Load(), lineno=1425, col_offset=14), [Num(1024, lineno=1425, col_offset=24)], [], None, None, lineno=1425, col_offset=14), lineno=1425, col_offset=8), Assign([Name('nbytes', Store(), lineno=1426, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=1426, col_offset=17), 'cli_conn', Load(), lineno=1426, col_offset=17), 'recv_into', Load(), lineno=1426, col_offset=17), [Call(Name('memoryview', Load(), lineno=1426, col_offset=41), [Name('buf', Load(), lineno=1426, col_offset=52)], [], None, None, lineno=1426, col_offset=41)], [], None, None, lineno=1426, col_offset=17), lineno=1426, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1427, col_offset=8), 'assertEqual', Load(), lineno=1427, col_offset=8), [Name('nbytes', Load(), lineno=1427, col_offset=25), Call(Name('len', Load(), lineno=1427, col_offset=33), [Name('MSG', Load(), lineno=1427, col_offset=37)], [], None, None, lineno=1427, col_offset=33)], [], None, None, lineno=1427, col_offset=8), lineno=1427, col_offset=8), Assign([Name('msg', Store(), lineno=1428, col_offset=8)], Subscript(Name('buf', Load(), lineno=1428, col_offset=14), Slice(None, Call(Name('len', Load(), lineno=1428, col_offset=19), [Name('MSG', Load(), lineno=1428, col_offset=23)], [], None, None, lineno=1428, col_offset=19), None), Load(), lineno=1428, col_offset=14), lineno=1428, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1429, col_offset=8), 'assertEqual', Load(), lineno=1429, col_offset=8), [Name('msg', Load(), lineno=1429, col_offset=25), Name('MSG', Load(), lineno=1429, col_offset=30)], [], None, None, lineno=1429, col_offset=8), lineno=1429, col_offset=8)], [], lineno=1424, col_offset=4), Assign([Name('_testRecvIntoMemoryview', Store(), lineno=1431, col_offset=4)], Name('_testRecvIntoArray', Load(), lineno=1431, col_offset=30), lineno=1431, col_offset=4), FunctionDef('testRecvFromIntoArray', arguments([Name('self', Param(), lineno=1433, col_offset=30)], None, None, []), [Assign([Name('buf', Store(), lineno=1434, col_offset=8)], Call(Attribute(Name('array', Load(), lineno=1434, col_offset=14), 'array', Load(), lineno=1434, col_offset=14), [Str('c', lineno=1434, col_offset=26), BinOp(Str(' ', lineno=1434, col_offset=31), Mult(), Num(1024, lineno=1434, col_offset=35), lineno=1434, col_offset=31)], [], None, None, lineno=1434, col_offset=14), lineno=1434, col_offset=8), Assign([Tuple([Name('nbytes', Store(), lineno=1435, col_offset=8), Name('addr', Store(), lineno=1435, col_offset=16)], Store(), lineno=1435, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=1435, col_offset=23), 'cli_conn', Load(), lineno=1435, col_offset=23), 'recvfrom_into', Load(), lineno=1435, col_offset=23), [Name('buf', Load(), lineno=1435, col_offset=51)], [], None, None, lineno=1435, col_offset=23), lineno=1435, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1436, col_offset=8), 'assertEqual', Load(), lineno=1436, col_offset=8), [Name('nbytes', Load(), lineno=1436, col_offset=25), Call(Name('len', Load(), lineno=1436, col_offset=33), [Name('MSG', Load(), lineno=1436, col_offset=37)], [], None, None, lineno=1436, col_offset=33)], [], None, None, lineno=1436, col_offset=8), lineno=1436, col_offset=8), Assign([Name('msg', Store(), lineno=1437, col_offset=8)], Subscript(Call(Attribute(Name('buf', Load(), lineno=1437, col_offset=14), 'tostring', Load(), lineno=1437, col_offset=14), [], [], None, None, lineno=1437, col_offset=14), Slice(None, Call(Name('len', Load(), lineno=1437, col_offset=30), [Name('MSG', Load(), lineno=1437, col_offset=34)], [], None, None, lineno=1437, col_offset=30), None), Load(), lineno=1437, col_offset=14), lineno=1437, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1438, col_offset=8), 'assertEqual', Load(), lineno=1438, col_offset=8), [Name('msg', Load(), lineno=1438, col_offset=25), Name('MSG', Load(), lineno=1438, col_offset=30)], [], None, None, lineno=1438, col_offset=8), lineno=1438, col_offset=8)], [], lineno=1433, col_offset=4), FunctionDef('_testRecvFromIntoArray', arguments([Name('self', Param(), lineno=1440, col_offset=31)], None, None, []), [With(Call(Attribute(Name('test_support', Load(), lineno=1441, col_offset=13), 'check_py3k_warnings', Load(), lineno=1441, col_offset=13), [], [], None, None, lineno=1441, col_offset=13), None, [Assign([Name('buf', Store(), lineno=1442, col_offset=12)], Call(Name('buffer', Load(), lineno=1442, col_offset=18), [Name('MSG', Load(), lineno=1442, col_offset=25)], [], None, None, lineno=1442, col_offset=18), lineno=1442, col_offset=12)], lineno=1441, col_offset=13), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1443, col_offset=8), 'serv_conn', Load(), lineno=1443, col_offset=8), 'send', Load(), lineno=1443, col_offset=8), [Name('buf', Load(), lineno=1443, col_offset=28)], [], None, None, lineno=1443, col_offset=8), lineno=1443, col_offset=8)], [], lineno=1440, col_offset=4), FunctionDef('testRecvFromIntoBytearray', arguments([Name('self', Param(), lineno=1445, col_offset=34)], None, None, []), [Assign([Name('buf', Store(), lineno=1446, col_offset=8)], Call(Name('bytearray', Load(), lineno=1446, col_offset=14), [Num(1024, lineno=1446, col_offset=24)], [], None, None, lineno=1446, col_offset=14), lineno=1446, col_offset=8), Assign([Tuple([Name('nbytes', Store(), lineno=1447, col_offset=8), Name('addr', Store(), lineno=1447, col_offset=16)], Store(), lineno=1447, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=1447, col_offset=23), 'cli_conn', Load(), lineno=1447, col_offset=23), 'recvfrom_into', Load(), lineno=1447, col_offset=23), [Name('buf', Load(), lineno=1447, col_offset=51)], [], None, None, lineno=1447, col_offset=23), lineno=1447, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1448, col_offset=8), 'assertEqual', Load(), lineno=1448, col_offset=8), [Name('nbytes', Load(), lineno=1448, col_offset=25), Call(Name('len', Load(), lineno=1448, col_offset=33), [Name('MSG', Load(), lineno=1448, col_offset=37)], [], None, None, lineno=1448, col_offset=33)], [], None, None, lineno=1448, col_offset=8), lineno=1448, col_offset=8), Assign([Name('msg', Store(), lineno=1449, col_offset=8)], Subscript(Name('buf', Load(), lineno=1449, col_offset=14), Slice(None, Call(Name('len', Load(), lineno=1449, col_offset=19), [Name('MSG', Load(), lineno=1449, col_offset=23)], [], None, None, lineno=1449, col_offset=19), None), Load(), lineno=1449, col_offset=14), lineno=1449, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1450, col_offset=8), 'assertEqual', Load(), lineno=1450, col_offset=8), [Name('msg', Load(), lineno=1450, col_offset=25), Name('MSG', Load(), lineno=1450, col_offset=30)], [], None, None, lineno=1450, col_offset=8), lineno=1450, col_offset=8)], [], lineno=1445, col_offset=4), Assign([Name('_testRecvFromIntoBytearray', Store(), lineno=1452, col_offset=4)], Name('_testRecvFromIntoArray', Load(), lineno=1452, col_offset=33), lineno=1452, col_offset=4), FunctionDef('testRecvFromIntoMemoryview', arguments([Name('self', Param(), lineno=1454, col_offset=35)], None, None, []), [Assign([Name('buf', Store(), lineno=1455, col_offset=8)], Call(Name('bytearray', Load(), lineno=1455, col_offset=14), [Num(1024, lineno=1455, col_offset=24)], [], None, None, lineno=1455, col_offset=14), lineno=1455, col_offset=8), Assign([Tuple([Name('nbytes', Store(), lineno=1456, col_offset=8), Name('addr', Store(), lineno=1456, col_offset=16)], Store(), lineno=1456, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=1456, col_offset=23), 'cli_conn', Load(), lineno=1456, col_offset=23), 'recvfrom_into', Load(), lineno=1456, col_offset=23), [Call(Name('memoryview', Load(), lineno=1456, col_offset=51), [Name('buf', Load(), lineno=1456, col_offset=62)], [], None, None, lineno=1456, col_offset=51)], [], None, None, lineno=1456, col_offset=23), lineno=1456, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1457, col_offset=8), 'assertEqual', Load(), lineno=1457, col_offset=8), [Name('nbytes', Load(), lineno=1457, col_offset=25), Call(Name('len', Load(), lineno=1457, col_offset=33), [Name('MSG', Load(), lineno=1457, col_offset=37)], [], None, None, lineno=1457, col_offset=33)], [], None, None, lineno=1457, col_offset=8), lineno=1457, col_offset=8), Assign([Name('msg', Store(), lineno=1458, col_offset=8)], Subscript(Name('buf', Load(), lineno=1458, col_offset=14), Slice(None, Call(Name('len', Load(), lineno=1458, col_offset=19), [Name('MSG', Load(), lineno=1458, col_offset=23)], [], None, None, lineno=1458, col_offset=19), None), Load(), lineno=1458, col_offset=14), lineno=1458, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1459, col_offset=8), 'assertEqual', Load(), lineno=1459, col_offset=8), [Name('msg', Load(), lineno=1459, col_offset=25), Name('MSG', Load(), lineno=1459, col_offset=30)], [], None, None, lineno=1459, col_offset=8), lineno=1459, col_offset=8)], [], lineno=1454, col_offset=4), Assign([Name('_testRecvFromIntoMemoryview', Store(), lineno=1461, col_offset=4)], Name('_testRecvFromIntoArray', Load(), lineno=1461, col_offset=34), lineno=1461, col_offset=4)], [Call(Attribute(Name('unittest', Load(), lineno=1395, col_offset=1), 'skipUnless', Load(), lineno=1395, col_offset=1), [Name('thread', Load(), lineno=1395, col_offset=21), Str('Threading required for this test.', lineno=1395, col_offset=29)], [], None, None, lineno=1395, col_offset=1)], lineno=1395, col_offset=0), Assign([Name('TIPC_STYPE', Store(), lineno=1464, col_offset=0)], Num(2000, lineno=1464, col_offset=13), lineno=1464, col_offset=0), Assign([Name('TIPC_LOWER', Store(), lineno=1465, col_offset=0)], Num(200, lineno=1465, col_offset=13), lineno=1465, col_offset=0), Assign([Name('TIPC_UPPER', Store(), lineno=1466, col_offset=0)], Num(210, lineno=1466, col_offset=13), lineno=1466, col_offset=0), FunctionDef('isTipcAvailable', arguments([], None, None, []), [Expr(Str('Check if the TIPC module is loaded\n\n    The TIPC module is not loaded automatically on Ubuntu and probably\n    other Linux distros.\n    ', lineno=1473, col_offset=-1), lineno=1473, col_offset=-1), If(UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=1474, col_offset=11), [Name('socket', Load(), lineno=1474, col_offset=19), Str('AF_TIPC', lineno=1474, col_offset=27)], [], None, None, lineno=1474, col_offset=11), lineno=1474, col_offset=7), [Return(Name('False', Load(), lineno=1475, col_offset=15), lineno=1475, col_offset=8)], [], lineno=1474, col_offset=4), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=1476, col_offset=11), 'path', Load(), lineno=1476, col_offset=11), 'isfile', Load(), lineno=1476, col_offset=11), [Str('/proc/modules', lineno=1476, col_offset=26)], [], None, None, lineno=1476, col_offset=11), lineno=1476, col_offset=7), [Return(Name('False', Load(), lineno=1477, col_offset=15), lineno=1477, col_offset=8)], [], lineno=1476, col_offset=4), With(Call(Name('open', Load(), lineno=1478, col_offset=9), [Str('/proc/modules', lineno=1478, col_offset=14)], [], None, None, lineno=1478, col_offset=9), Name('f', Store(), lineno=1478, col_offset=34), [For(Name('line', Store(), lineno=1479, col_offset=12), Name('f', Load(), lineno=1479, col_offset=20), [If(Call(Attribute(Name('line', Load(), lineno=1480, col_offset=15), 'startswith', Load(), lineno=1480, col_offset=15), [Str('tipc ', lineno=1480, col_offset=31)], [], None, None, lineno=1480, col_offset=15), [Return(Name('True', Load(), lineno=1481, col_offset=23), lineno=1481, col_offset=16)], [], lineno=1480, col_offset=12)], [], lineno=1479, col_offset=8)], lineno=1478, col_offset=9), If(Attribute(Name('test_support', Load(), lineno=1482, col_offset=7), 'verbose', Load(), lineno=1482, col_offset=7), [Print(None, [Str("TIPC module is not loaded, please 'sudo modprobe tipc'", lineno=1483, col_offset=14)], True, lineno=1483, col_offset=8)], [], lineno=1482, col_offset=4), Return(Name('False', Load(), lineno=1484, col_offset=11), lineno=1484, col_offset=4)], [], lineno=1468, col_offset=0), ClassDef('TIPCTest', [Attribute(Name('unittest', Load(), lineno=1486, col_offset=16), 'TestCase', Load(), lineno=1486, col_offset=16)], [FunctionDef('testRDM', arguments([Name('self', Param(), lineno=1487, col_offset=16)], None, None, []), [Assign([Name('srv', Store(), lineno=1488, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=1488, col_offset=14), 'socket', Load(), lineno=1488, col_offset=14), [Attribute(Name('socket', Load(), lineno=1488, col_offset=28), 'AF_TIPC', Load(), lineno=1488, col_offset=28), Attribute(Name('socket', Load(), lineno=1488, col_offset=44), 'SOCK_RDM', Load(), lineno=1488, col_offset=44)], [], None, None, lineno=1488, col_offset=14), lineno=1488, col_offset=8), Assign([Name('cli', Store(), lineno=1489, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=1489, col_offset=14), 'socket', Load(), lineno=1489, col_offset=14), [Attribute(Name('socket', Load(), lineno=1489, col_offset=28), 'AF_TIPC', Load(), lineno=1489, col_offset=28), Attribute(Name('socket', Load(), lineno=1489, col_offset=44), 'SOCK_RDM', Load(), lineno=1489, col_offset=44)], [], None, None, lineno=1489, col_offset=14), lineno=1489, col_offset=8), Expr(Call(Attribute(Name('srv', Load(), lineno=1491, col_offset=8), 'setsockopt', Load(), lineno=1491, col_offset=8), [Attribute(Name('socket', Load(), lineno=1491, col_offset=23), 'SOL_SOCKET', Load(), lineno=1491, col_offset=23), Attribute(Name('socket', Load(), lineno=1491, col_offset=42), 'SO_REUSEADDR', Load(), lineno=1491, col_offset=42), Num(1, lineno=1491, col_offset=63)], [], None, None, lineno=1491, col_offset=8), lineno=1491, col_offset=8), Assign([Name('srvaddr', Store(), lineno=1492, col_offset=8)], Tuple([Attribute(Name('socket', Load(), lineno=1492, col_offset=19), 'TIPC_ADDR_NAMESEQ', Load(), lineno=1492, col_offset=19), Name('TIPC_STYPE', Load(), lineno=1492, col_offset=45), Name('TIPC_LOWER', Load(), lineno=1493, col_offset=16), Name('TIPC_UPPER', Load(), lineno=1493, col_offset=28)], Load(), lineno=1492, col_offset=19), lineno=1492, col_offset=8), Expr(Call(Attribute(Name('srv', Load(), lineno=1494, col_offset=8), 'bind', Load(), lineno=1494, col_offset=8), [Name('srvaddr', Load(), lineno=1494, col_offset=17)], [], None, None, lineno=1494, col_offset=8), lineno=1494, col_offset=8), Assign([Name('sendaddr', Store(), lineno=1496, col_offset=8)], Tuple([Attribute(Name('socket', Load(), lineno=1496, col_offset=20), 'TIPC_ADDR_NAME', Load(), lineno=1496, col_offset=20), Name('TIPC_STYPE', Load(), lineno=1496, col_offset=43), BinOp(Name('TIPC_LOWER', Load(), lineno=1497, col_offset=16), Add(), BinOp(BinOp(Name('TIPC_UPPER', Load(), lineno=1497, col_offset=30), Sub(), Name('TIPC_LOWER', Load(), lineno=1497, col_offset=43), lineno=1497, col_offset=30), Div(), Num(2, lineno=1497, col_offset=57), lineno=1497, col_offset=29), lineno=1497, col_offset=16), Num(0, lineno=1497, col_offset=60)], Load(), lineno=1496, col_offset=20), lineno=1496, col_offset=8), Expr(Call(Attribute(Name('cli', Load(), lineno=1498, col_offset=8), 'sendto', Load(), lineno=1498, col_offset=8), [Name('MSG', Load(), lineno=1498, col_offset=19), Name('sendaddr', Load(), lineno=1498, col_offset=24)], [], None, None, lineno=1498, col_offset=8), lineno=1498, col_offset=8), Assign([Tuple([Name('msg', Store(), lineno=1500, col_offset=8), Name('recvaddr', Store(), lineno=1500, col_offset=13)], Store(), lineno=1500, col_offset=8)], Call(Attribute(Name('srv', Load(), lineno=1500, col_offset=24), 'recvfrom', Load(), lineno=1500, col_offset=24), [Num(1024, lineno=1500, col_offset=37)], [], None, None, lineno=1500, col_offset=24), lineno=1500, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1502, col_offset=8), 'assertEqual', Load(), lineno=1502, col_offset=8), [Call(Attribute(Name('cli', Load(), lineno=1502, col_offset=25), 'getsockname', Load(), lineno=1502, col_offset=25), [], [], None, None, lineno=1502, col_offset=25), Name('recvaddr', Load(), lineno=1502, col_offset=44)], [], None, None, lineno=1502, col_offset=8), lineno=1502, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1503, col_offset=8), 'assertEqual', Load(), lineno=1503, col_offset=8), [Name('msg', Load(), lineno=1503, col_offset=25), Name('MSG', Load(), lineno=1503, col_offset=30)], [], None, None, lineno=1503, col_offset=8), lineno=1503, col_offset=8)], [], lineno=1487, col_offset=4)], [], lineno=1486, col_offset=0), ClassDef('TIPCThreadableTest', [Attribute(Name('unittest', Load(), lineno=1506, col_offset=26), 'TestCase', Load(), lineno=1506, col_offset=26), Name('ThreadableTest', Load(), lineno=1506, col_offset=45)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=1507, col_offset=17), Name('methodName', Param(), lineno=1507, col_offset=23)], None, None, [Str('runTest', lineno=1507, col_offset=36)]), [Expr(Call(Attribute(Attribute(Name('unittest', Load(), lineno=1508, col_offset=8), 'TestCase', Load(), lineno=1508, col_offset=8), '__init__', Load(), lineno=1508, col_offset=8), [Name('self', Load(), lineno=1508, col_offset=35)], [keyword('methodName', Name('methodName', Load(), lineno=1508, col_offset=54))], None, None, lineno=1508, col_offset=8), lineno=1508, col_offset=8), Expr(Call(Attribute(Name('ThreadableTest', Load(), lineno=1509, col_offset=8), '__init__', Load(), lineno=1509, col_offset=8), [Name('self', Load(), lineno=1509, col_offset=32)], [], None, None, lineno=1509, col_offset=8), lineno=1509, col_offset=8)], [], lineno=1507, col_offset=4), FunctionDef('setUp', arguments([Name('self', Param(), lineno=1511, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1512, col_offset=8), 'srv', Store(), lineno=1512, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=1512, col_offset=19), 'socket', Load(), lineno=1512, col_offset=19), [Attribute(Name('socket', Load(), lineno=1512, col_offset=33), 'AF_TIPC', Load(), lineno=1512, col_offset=33), Attribute(Name('socket', Load(), lineno=1512, col_offset=49), 'SOCK_STREAM', Load(), lineno=1512, col_offset=49)], [], None, None, lineno=1512, col_offset=19), lineno=1512, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1513, col_offset=8), 'srv', Load(), lineno=1513, col_offset=8), 'setsockopt', Load(), lineno=1513, col_offset=8), [Attribute(Name('socket', Load(), lineno=1513, col_offset=28), 'SOL_SOCKET', Load(), lineno=1513, col_offset=28), Attribute(Name('socket', Load(), lineno=1513, col_offset=47), 'SO_REUSEADDR', Load(), lineno=1513, col_offset=47), Num(1, lineno=1513, col_offset=68)], [], None, None, lineno=1513, col_offset=8), lineno=1513, col_offset=8), Assign([Name('srvaddr', Store(), lineno=1514, col_offset=8)], Tuple([Attribute(Name('socket', Load(), lineno=1514, col_offset=19), 'TIPC_ADDR_NAMESEQ', Load(), lineno=1514, col_offset=19), Name('TIPC_STYPE', Load(), lineno=1514, col_offset=45), Name('TIPC_LOWER', Load(), lineno=1515, col_offset=16), Name('TIPC_UPPER', Load(), lineno=1515, col_offset=28)], Load(), lineno=1514, col_offset=19), lineno=1514, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1516, col_offset=8), 'srv', Load(), lineno=1516, col_offset=8), 'bind', Load(), lineno=1516, col_offset=8), [Name('srvaddr', Load(), lineno=1516, col_offset=22)], [], None, None, lineno=1516, col_offset=8), lineno=1516, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1517, col_offset=8), 'srv', Load(), lineno=1517, col_offset=8), 'listen', Load(), lineno=1517, col_offset=8), [Num(5, lineno=1517, col_offset=24)], [], None, None, lineno=1517, col_offset=8), lineno=1517, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1518, col_offset=8), 'serverExplicitReady', Load(), lineno=1518, col_offset=8), [], [], None, None, lineno=1518, col_offset=8), lineno=1518, col_offset=8), Assign([Tuple([Attribute(Name('self', Load(), lineno=1519, col_offset=8), 'conn', Store(), lineno=1519, col_offset=8), Attribute(Name('self', Load(), lineno=1519, col_offset=19), 'connaddr', Store(), lineno=1519, col_offset=19)], Store(), lineno=1519, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=1519, col_offset=35), 'srv', Load(), lineno=1519, col_offset=35), 'accept', Load(), lineno=1519, col_offset=35), [], [], None, None, lineno=1519, col_offset=35), lineno=1519, col_offset=8)], [], lineno=1511, col_offset=4), FunctionDef('clientSetUp', arguments([Name('self', Param(), lineno=1521, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('time', Load(), lineno=1525, col_offset=8), 'sleep', Load(), lineno=1525, col_offset=8), [Num(0.1, lineno=1525, col_offset=19)], [], None, None, lineno=1525, col_offset=8), lineno=1525, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1526, col_offset=8), 'cli', Store(), lineno=1526, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=1526, col_offset=19), 'socket', Load(), lineno=1526, col_offset=19), [Attribute(Name('socket', Load(), lineno=1526, col_offset=33), 'AF_TIPC', Load(), lineno=1526, col_offset=33), Attribute(Name('socket', Load(), lineno=1526, col_offset=49), 'SOCK_STREAM', Load(), lineno=1526, col_offset=49)], [], None, None, lineno=1526, col_offset=19), lineno=1526, col_offset=8), Assign([Name('addr', Store(), lineno=1527, col_offset=8)], Tuple([Attribute(Name('socket', Load(), lineno=1527, col_offset=16), 'TIPC_ADDR_NAME', Load(), lineno=1527, col_offset=16), Name('TIPC_STYPE', Load(), lineno=1527, col_offset=39), BinOp(Name('TIPC_LOWER', Load(), lineno=1528, col_offset=16), Add(), BinOp(BinOp(Name('TIPC_UPPER', Load(), lineno=1528, col_offset=30), Sub(), Name('TIPC_LOWER', Load(), lineno=1528, col_offset=43), lineno=1528, col_offset=30), Div(), Num(2, lineno=1528, col_offset=57), lineno=1528, col_offset=29), lineno=1528, col_offset=16), Num(0, lineno=1528, col_offset=60)], Load(), lineno=1527, col_offset=16), lineno=1527, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1529, col_offset=8), 'cli', Load(), lineno=1529, col_offset=8), 'connect', Load(), lineno=1529, col_offset=8), [Name('addr', Load(), lineno=1529, col_offset=25)], [], None, None, lineno=1529, col_offset=8), lineno=1529, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1530, col_offset=8), 'cliaddr', Store(), lineno=1530, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=1530, col_offset=23), 'cli', Load(), lineno=1530, col_offset=23), 'getsockname', Load(), lineno=1530, col_offset=23), [], [], None, None, lineno=1530, col_offset=23), lineno=1530, col_offset=8)], [], lineno=1521, col_offset=4), FunctionDef('testStream', arguments([Name('self', Param(), lineno=1532, col_offset=19)], None, None, []), [Assign([Name('msg', Store(), lineno=1533, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=1533, col_offset=14), 'conn', Load(), lineno=1533, col_offset=14), 'recv', Load(), lineno=1533, col_offset=14), [Num(1024, lineno=1533, col_offset=29)], [], None, None, lineno=1533, col_offset=14), lineno=1533, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1534, col_offset=8), 'assertEqual', Load(), lineno=1534, col_offset=8), [Name('msg', Load(), lineno=1534, col_offset=25), Name('MSG', Load(), lineno=1534, col_offset=30)], [], None, None, lineno=1534, col_offset=8), lineno=1534, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1535, col_offset=8), 'assertEqual', Load(), lineno=1535, col_offset=8), [Attribute(Name('self', Load(), lineno=1535, col_offset=25), 'cliaddr', Load(), lineno=1535, col_offset=25), Attribute(Name('self', Load(), lineno=1535, col_offset=39), 'connaddr', Load(), lineno=1535, col_offset=39)], [], None, None, lineno=1535, col_offset=8), lineno=1535, col_offset=8)], [], lineno=1532, col_offset=4), FunctionDef('_testStream', arguments([Name('self', Param(), lineno=1537, col_offset=20)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1538, col_offset=8), 'cli', Load(), lineno=1538, col_offset=8), 'send', Load(), lineno=1538, col_offset=8), [Name('MSG', Load(), lineno=1538, col_offset=22)], [], None, None, lineno=1538, col_offset=8), lineno=1538, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1539, col_offset=8), 'cli', Load(), lineno=1539, col_offset=8), 'close', Load(), lineno=1539, col_offset=8), [], [], None, None, lineno=1539, col_offset=8), lineno=1539, col_offset=8)], [], lineno=1537, col_offset=4)], [], lineno=1506, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Assign([Name('tests', Store(), lineno=1543, col_offset=4)], List([Name('GeneralModuleTests', Load(), lineno=1543, col_offset=13), Name('BasicTCPTest', Load(), lineno=1543, col_offset=33), Name('TCPCloserTest', Load(), lineno=1543, col_offset=47), Name('TCPTimeoutTest', Load(), lineno=1543, col_offset=62), Name('TestExceptions', Load(), lineno=1544, col_offset=13), Name('BufferIOTest', Load(), lineno=1544, col_offset=29), Name('BasicTCPTest2', Load(), lineno=1544, col_offset=43), Name('BasicUDPTest', Load(), lineno=1544, col_offset=58), Name('UDPTimeoutTest', Load(), lineno=1545, col_offset=13)], Load(), lineno=1543, col_offset=12), lineno=1543, col_offset=4), Expr(Call(Attribute(Name('tests', Load(), lineno=1547, col_offset=4), 'extend', Load(), lineno=1547, col_offset=4), [List([Name('NonBlockingTCPTests', Load(), lineno=1548, col_offset=8), Name('FileObjectClassTestCase', Load(), lineno=1549, col_offset=8), Name('FileObjectInterruptedTestCase', Load(), lineno=1550, col_offset=8), Name('UnbufferedFileObjectClassTestCase', Load(), lineno=1551, col_offset=8), Name('LineBufferedFileObjectClassTestCase', Load(), lineno=1552, col_offset=8), Name('SmallBufferedFileObjectClassTestCase', Load(), lineno=1553, col_offset=8), Name('Urllib2FileobjectTest', Load(), lineno=1554, col_offset=8), Name('NetworkConnectionNoServer', Load(), lineno=1555, col_offset=8), Name('NetworkConnectionAttributesTest', Load(), lineno=1556, col_offset=8), Name('NetworkConnectionBehaviourTest', Load(), lineno=1557, col_offset=8)], Load(), lineno=1547, col_offset=17)], [], None, None, lineno=1547, col_offset=4), lineno=1547, col_offset=4), If(Call(Name('hasattr', Load(), lineno=1559, col_offset=7), [Name('socket', Load(), lineno=1559, col_offset=15), Str('socketpair', lineno=1559, col_offset=23)], [], None, None, lineno=1559, col_offset=7), [Expr(Call(Attribute(Name('tests', Load(), lineno=1560, col_offset=8), 'append', Load(), lineno=1560, col_offset=8), [Name('BasicSocketPairTest', Load(), lineno=1560, col_offset=21)], [], None, None, lineno=1560, col_offset=8), lineno=1560, col_offset=8)], [], lineno=1559, col_offset=4), If(Compare(Attribute(Name('sys', Load(), lineno=1561, col_offset=7), 'platform', Load(), lineno=1561, col_offset=7), [Eq()], [Str('linux2', lineno=1561, col_offset=23)], lineno=1561, col_offset=7), [Expr(Call(Attribute(Name('tests', Load(), lineno=1562, col_offset=8), 'append', Load(), lineno=1562, col_offset=8), [Name('TestLinuxAbstractNamespace', Load(), lineno=1562, col_offset=21)], [], None, None, lineno=1562, col_offset=8), lineno=1562, col_offset=8)], [], lineno=1561, col_offset=4), If(Call(Name('isTipcAvailable', Load(), lineno=1563, col_offset=7), [], [], None, None, lineno=1563, col_offset=7), [Expr(Call(Attribute(Name('tests', Load(), lineno=1564, col_offset=8), 'append', Load(), lineno=1564, col_offset=8), [Name('TIPCTest', Load(), lineno=1564, col_offset=21)], [], None, None, lineno=1564, col_offset=8), lineno=1564, col_offset=8), Expr(Call(Attribute(Name('tests', Load(), lineno=1565, col_offset=8), 'append', Load(), lineno=1565, col_offset=8), [Name('TIPCThreadableTest', Load(), lineno=1565, col_offset=21)], [], None, None, lineno=1565, col_offset=8), lineno=1565, col_offset=8)], [], lineno=1563, col_offset=4), Assign([Name('thread_info', Store(), lineno=1567, col_offset=4)], Call(Attribute(Name('test_support', Load(), lineno=1567, col_offset=18), 'threading_setup', Load(), lineno=1567, col_offset=18), [], [], None, None, lineno=1567, col_offset=18), lineno=1567, col_offset=4), Expr(Call(Attribute(Name('test_support', Load(), lineno=1568, col_offset=4), 'run_unittest', Load(), lineno=1568, col_offset=4), [], [], Name('tests', Load(), lineno=1568, col_offset=31), None, lineno=1568, col_offset=4), lineno=1568, col_offset=4), Expr(Call(Attribute(Name('test_support', Load(), lineno=1569, col_offset=4), 'threading_cleanup', Load(), lineno=1569, col_offset=4), [], [], Name('thread_info', Load(), lineno=1569, col_offset=36), None, lineno=1569, col_offset=4), lineno=1569, col_offset=4)], [], lineno=1542, col_offset=0), If(Compare(Name('__name__', Load(), lineno=1571, col_offset=3), [Eq()], [Str('__main__', lineno=1571, col_offset=15)], lineno=1571, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=1572, col_offset=4), [], [], None, None, lineno=1572, col_offset=4), lineno=1572, col_offset=4)], [], lineno=1571, col_offset=0)])
