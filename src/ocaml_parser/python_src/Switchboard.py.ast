Module([Expr(Str("Switchboard class.\n\nThis class is used to coordinate updates among all Viewers.  Every Viewer must\nconform to the following interface:\n\n    - it must include a method called update_yourself() which takes three\n      arguments; the red, green, and blue values of the selected color.\n\n    - When a Viewer selects a color and wishes to update all other Views, it\n      should call update_views() on the Switchboard object.  Note that the\n      Viewer typically does *not* update itself before calling update_views(),\n      since this would cause it to get updated twice.\n\nOptionally, Viewers can also implement:\n\n    - save_options() which takes an optiondb (a dictionary).  Store into this\n      dictionary any values the Viewer wants to save in the persistent\n      ~/.pynche file.  This dictionary is saved using marshal.  The namespace\n      for the keys is ad-hoc; make sure you don't clobber some other Viewer's\n      keys!\n\n    - withdraw() which takes no arguments.  This is called when Pynche is\n      unmapped.  All Viewers should implement this.\n\n    - colordb_changed() which takes a single argument, an instance of\n      ColorDB.  This is called whenever the color name database is changed and\n      gives a chance for the Viewers to do something on those events.  See\n      ListViewer for details.\n\nExternal Viewers are found dynamically.  Viewer modules should have names such\nas FooViewer.py.  If such a named module has a module global variable called\nADDTOVIEW and this variable is true, the Viewer will be added dynamically to\nthe `View' menu.  ADDTOVIEW contains a string which is used as the menu item\nto display the Viewer (one kludge: if the string contains a `%', this is used\nto indicate that the next character will get an underline in the menu,\notherwise the first character is underlined).\n\nFooViewer.py should contain a class called FooViewer, and its constructor\nshould take two arguments, an instance of Switchboard, and optionally a Tk\nmaster window.\n\n", lineno=42, col_offset=-1), lineno=42, col_offset=-1), Import([alias('sys', None)], lineno=44, col_offset=0), ImportFrom('types', [alias('DictType', None)], 0, lineno=45, col_offset=0), Import([alias('marshal', None)], lineno=46, col_offset=0), ClassDef('Switchboard', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=51, col_offset=17), Name('initfile', Param(), lineno=51, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=52, col_offset=8), '__initfile', Store(), lineno=52, col_offset=8)], Name('initfile', Load(), lineno=52, col_offset=26), lineno=52, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=53, col_offset=8), '__colordb', Store(), lineno=53, col_offset=8)], Name('None', Load(), lineno=53, col_offset=25), lineno=53, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=54, col_offset=8), '__optiondb', Store(), lineno=54, col_offset=8)], Dict([], [], lineno=54, col_offset=26), lineno=54, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=55, col_offset=8), '__views', Store(), lineno=55, col_offset=8)], List([], Load(), lineno=55, col_offset=23), lineno=55, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=56, col_offset=8), '__red', Store(), lineno=56, col_offset=8)], Num(0, lineno=56, col_offset=21), lineno=56, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=57, col_offset=8), '__green', Store(), lineno=57, col_offset=8)], Num(0, lineno=57, col_offset=23), lineno=57, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=58, col_offset=8), '__blue', Store(), lineno=58, col_offset=8)], Num(0, lineno=58, col_offset=22), lineno=58, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=59, col_offset=8), '__canceled', Store(), lineno=59, col_offset=8)], Num(0, lineno=59, col_offset=26), lineno=59, col_offset=8), Assign([Name('fp', Store(), lineno=61, col_offset=8)], Name('None', Load(), lineno=61, col_offset=13), lineno=61, col_offset=8), If(Name('initfile', Load(), lineno=62, col_offset=11), [TryFinally([TryExcept([Assign([Name('fp', Store(), lineno=65, col_offset=20)], Call(Name('open', Load(), lineno=65, col_offset=25), [Name('initfile', Load(), lineno=65, col_offset=30)], [], None, None, lineno=65, col_offset=25), lineno=65, col_offset=20), Assign([Attribute(Name('self', Load(), lineno=66, col_offset=20), '__optiondb', Store(), lineno=66, col_offset=20)], Call(Attribute(Name('marshal', Load(), lineno=66, col_offset=38), 'load', Load(), lineno=66, col_offset=38), [Name('fp', Load(), lineno=66, col_offset=51)], [], None, None, lineno=66, col_offset=38), lineno=66, col_offset=20), If(UnaryOp(Not(), Call(Name('isinstance', Load(), lineno=67, col_offset=27), [Attribute(Name('self', Load(), lineno=67, col_offset=38), '__optiondb', Load(), lineno=67, col_offset=38), Name('DictType', Load(), lineno=67, col_offset=55)], [], None, None, lineno=67, col_offset=27), lineno=67, col_offset=23), [Print(Attribute(Name('sys', Load(), lineno=68, col_offset=33), 'stderr', Load(), lineno=68, col_offset=33), [Str('Problem reading options from file:', lineno=69, col_offset=30), Name('initfile', Load(), lineno=69, col_offset=68)], True, lineno=68, col_offset=24), Assign([Attribute(Name('self', Load(), lineno=70, col_offset=24), '__optiondb', Store(), lineno=70, col_offset=24)], Dict([], [], lineno=70, col_offset=42), lineno=70, col_offset=24)], [], lineno=67, col_offset=20)], [ExceptHandler(Tuple([Name('IOError', Load(), lineno=71, col_offset=24), Name('EOFError', Load(), lineno=71, col_offset=33), Name('ValueError', Load(), lineno=71, col_offset=43)], Load(), lineno=71, col_offset=24), None, [Pass( lineno=72, col_offset=20)], lineno=71, col_offset=16)], [], lineno=64, col_offset=16)], [If(Name('fp', Load(), lineno=74, col_offset=19), [Expr(Call(Attribute(Name('fp', Load(), lineno=75, col_offset=20), 'close', Load(), lineno=75, col_offset=20), [], [], None, None, lineno=75, col_offset=20), lineno=75, col_offset=20)], [], lineno=74, col_offset=16)], lineno=63, col_offset=12)], [], lineno=62, col_offset=8)], [], lineno=51, col_offset=4), FunctionDef('add_view', arguments([Name('self', Param(), lineno=77, col_offset=17), Name('view', Param(), lineno=77, col_offset=23)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=78, col_offset=8), '__views', Load(), lineno=78, col_offset=8), 'append', Load(), lineno=78, col_offset=8), [Name('view', Load(), lineno=78, col_offset=28)], [], None, None, lineno=78, col_offset=8), lineno=78, col_offset=8)], [], lineno=77, col_offset=4), FunctionDef('update_views', arguments([Name('self', Param(), lineno=80, col_offset=21), Name('red', Param(), lineno=80, col_offset=27), Name('green', Param(), lineno=80, col_offset=32), Name('blue', Param(), lineno=80, col_offset=39)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=81, col_offset=8), '__red', Store(), lineno=81, col_offset=8)], Name('red', Load(), lineno=81, col_offset=21), lineno=81, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=82, col_offset=8), '__green', Store(), lineno=82, col_offset=8)], Name('green', Load(), lineno=82, col_offset=23), lineno=82, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=83, col_offset=8), '__blue', Store(), lineno=83, col_offset=8)], Name('blue', Load(), lineno=83, col_offset=22), lineno=83, col_offset=8), For(Name('v', Store(), lineno=84, col_offset=12), Attribute(Name('self', Load(), lineno=84, col_offset=17), '__views', Load(), lineno=84, col_offset=17), [Expr(Call(Attribute(Name('v', Load(), lineno=85, col_offset=12), 'update_yourself', Load(), lineno=85, col_offset=12), [Name('red', Load(), lineno=85, col_offset=30), Name('green', Load(), lineno=85, col_offset=35), Name('blue', Load(), lineno=85, col_offset=42)], [], None, None, lineno=85, col_offset=12), lineno=85, col_offset=12)], [], lineno=84, col_offset=8)], [], lineno=80, col_offset=4), FunctionDef('update_views_current', arguments([Name('self', Param(), lineno=87, col_offset=29)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=88, col_offset=8), 'update_views', Load(), lineno=88, col_offset=8), [Attribute(Name('self', Load(), lineno=88, col_offset=26), '__red', Load(), lineno=88, col_offset=26), Attribute(Name('self', Load(), lineno=88, col_offset=38), '__green', Load(), lineno=88, col_offset=38), Attribute(Name('self', Load(), lineno=88, col_offset=52), '__blue', Load(), lineno=88, col_offset=52)], [], None, None, lineno=88, col_offset=8), lineno=88, col_offset=8)], [], lineno=87, col_offset=4), FunctionDef('current_rgb', arguments([Name('self', Param(), lineno=90, col_offset=20)], None, None, []), [Return(Tuple([Attribute(Name('self', Load(), lineno=91, col_offset=15), '__red', Load(), lineno=91, col_offset=15), Attribute(Name('self', Load(), lineno=91, col_offset=27), '__green', Load(), lineno=91, col_offset=27), Attribute(Name('self', Load(), lineno=91, col_offset=41), '__blue', Load(), lineno=91, col_offset=41)], Load(), lineno=91, col_offset=15), lineno=91, col_offset=8)], [], lineno=90, col_offset=4), FunctionDef('colordb', arguments([Name('self', Param(), lineno=93, col_offset=16)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=94, col_offset=15), '__colordb', Load(), lineno=94, col_offset=15), lineno=94, col_offset=8)], [], lineno=93, col_offset=4), FunctionDef('set_colordb', arguments([Name('self', Param(), lineno=96, col_offset=20), Name('colordb', Param(), lineno=96, col_offset=26)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=97, col_offset=8), '__colordb', Store(), lineno=97, col_offset=8)], Name('colordb', Load(), lineno=97, col_offset=25), lineno=97, col_offset=8), For(Name('v', Store(), lineno=98, col_offset=12), Attribute(Name('self', Load(), lineno=98, col_offset=17), '__views', Load(), lineno=98, col_offset=17), [If(Call(Name('hasattr', Load(), lineno=99, col_offset=15), [Name('v', Load(), lineno=99, col_offset=23), Str('colordb_changed', lineno=99, col_offset=26)], [], None, None, lineno=99, col_offset=15), [Expr(Call(Attribute(Name('v', Load(), lineno=100, col_offset=16), 'colordb_changed', Load(), lineno=100, col_offset=16), [Name('colordb', Load(), lineno=100, col_offset=34)], [], None, None, lineno=100, col_offset=16), lineno=100, col_offset=16)], [], lineno=99, col_offset=12)], [], lineno=98, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=101, col_offset=8), 'update_views_current', Load(), lineno=101, col_offset=8), [], [], None, None, lineno=101, col_offset=8), lineno=101, col_offset=8)], [], lineno=96, col_offset=4), FunctionDef('optiondb', arguments([Name('self', Param(), lineno=103, col_offset=17)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=104, col_offset=15), '__optiondb', Load(), lineno=104, col_offset=15), lineno=104, col_offset=8)], [], lineno=103, col_offset=4), FunctionDef('save_views', arguments([Name('self', Param(), lineno=106, col_offset=19)], None, None, []), [Assign([Subscript(Attribute(Name('self', Load(), lineno=108, col_offset=8), '__optiondb', Load(), lineno=108, col_offset=8), Index(Str('RED', lineno=108, col_offset=24)), Store(), lineno=108, col_offset=8)], Attribute(Name('self', Load(), lineno=108, col_offset=33), '__red', Load(), lineno=108, col_offset=33), lineno=108, col_offset=8), Assign([Subscript(Attribute(Name('self', Load(), lineno=109, col_offset=8), '__optiondb', Load(), lineno=109, col_offset=8), Index(Str('GREEN', lineno=109, col_offset=24)), Store(), lineno=109, col_offset=8)], Attribute(Name('self', Load(), lineno=109, col_offset=35), '__green', Load(), lineno=109, col_offset=35), lineno=109, col_offset=8), Assign([Subscript(Attribute(Name('self', Load(), lineno=110, col_offset=8), '__optiondb', Load(), lineno=110, col_offset=8), Index(Str('BLUE', lineno=110, col_offset=24)), Store(), lineno=110, col_offset=8)], Attribute(Name('self', Load(), lineno=110, col_offset=34), '__blue', Load(), lineno=110, col_offset=34), lineno=110, col_offset=8), For(Name('v', Store(), lineno=111, col_offset=12), Attribute(Name('self', Load(), lineno=111, col_offset=17), '__views', Load(), lineno=111, col_offset=17), [If(Call(Name('hasattr', Load(), lineno=112, col_offset=15), [Name('v', Load(), lineno=112, col_offset=23), Str('save_options', lineno=112, col_offset=26)], [], None, None, lineno=112, col_offset=15), [Expr(Call(Attribute(Name('v', Load(), lineno=113, col_offset=16), 'save_options', Load(), lineno=113, col_offset=16), [Attribute(Name('self', Load(), lineno=113, col_offset=31), '__optiondb', Load(), lineno=113, col_offset=31)], [], None, None, lineno=113, col_offset=16), lineno=113, col_offset=16)], [], lineno=112, col_offset=12)], [], lineno=111, col_offset=8), Assign([Subscript(Attribute(Name('self', Load(), lineno=116, col_offset=8), '__optiondb', Load(), lineno=116, col_offset=8), Index(Str('DBFILE', lineno=116, col_offset=24)), Store(), lineno=116, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=116, col_offset=36), '__colordb', Load(), lineno=116, col_offset=36), 'filename', Load(), lineno=116, col_offset=36), [], [], None, None, lineno=116, col_offset=36), lineno=116, col_offset=8), Assign([Name('fp', Store(), lineno=117, col_offset=8)], Name('None', Load(), lineno=117, col_offset=13), lineno=117, col_offset=8), TryFinally([TryExcept([Assign([Name('fp', Store(), lineno=120, col_offset=16)], Call(Name('open', Load(), lineno=120, col_offset=21), [Attribute(Name('self', Load(), lineno=120, col_offset=26), '__initfile', Load(), lineno=120, col_offset=26), Str('w', lineno=120, col_offset=43)], [], None, None, lineno=120, col_offset=21), lineno=120, col_offset=16)], [ExceptHandler(Name('IOError', Load(), lineno=121, col_offset=19), None, [Print(Attribute(Name('sys', Load(), lineno=122, col_offset=25), 'stderr', Load(), lineno=122, col_offset=25), [Str('Cannot write options to file:', lineno=122, col_offset=37), Attribute(Name('self', Load(), lineno=123, col_offset=22), '__initfile', Load(), lineno=123, col_offset=22)], True, lineno=122, col_offset=16)], lineno=121, col_offset=12)], [Expr(Call(Attribute(Name('marshal', Load(), lineno=125, col_offset=16), 'dump', Load(), lineno=125, col_offset=16), [Attribute(Name('self', Load(), lineno=125, col_offset=29), '__optiondb', Load(), lineno=125, col_offset=29), Name('fp', Load(), lineno=125, col_offset=46)], [], None, None, lineno=125, col_offset=16), lineno=125, col_offset=16)], lineno=119, col_offset=12)], [If(Name('fp', Load(), lineno=127, col_offset=15), [Expr(Call(Attribute(Name('fp', Load(), lineno=128, col_offset=16), 'close', Load(), lineno=128, col_offset=16), [], [], None, None, lineno=128, col_offset=16), lineno=128, col_offset=16)], [], lineno=127, col_offset=12)], lineno=118, col_offset=8)], [], lineno=106, col_offset=4), FunctionDef('withdraw_views', arguments([Name('self', Param(), lineno=130, col_offset=23)], None, None, []), [For(Name('v', Store(), lineno=131, col_offset=12), Attribute(Name('self', Load(), lineno=131, col_offset=17), '__views', Load(), lineno=131, col_offset=17), [If(Call(Name('hasattr', Load(), lineno=132, col_offset=15), [Name('v', Load(), lineno=132, col_offset=23), Str('withdraw', lineno=132, col_offset=26)], [], None, None, lineno=132, col_offset=15), [Expr(Call(Attribute(Name('v', Load(), lineno=133, col_offset=16), 'withdraw', Load(), lineno=133, col_offset=16), [], [], None, None, lineno=133, col_offset=16), lineno=133, col_offset=16)], [], lineno=132, col_offset=12)], [], lineno=131, col_offset=8)], [], lineno=130, col_offset=4), FunctionDef('canceled', arguments([Name('self', Param(), lineno=135, col_offset=17), Name('flag', Param(), lineno=135, col_offset=23)], None, None, [Num(1, lineno=135, col_offset=28)]), [Assign([Attribute(Name('self', Load(), lineno=136, col_offset=8), '__canceled', Store(), lineno=136, col_offset=8)], Name('flag', Load(), lineno=136, col_offset=26), lineno=136, col_offset=8)], [], lineno=135, col_offset=4), FunctionDef('canceled_p', arguments([Name('self', Param(), lineno=138, col_offset=19)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=139, col_offset=15), '__canceled', Load(), lineno=139, col_offset=15), lineno=139, col_offset=8)], [], lineno=138, col_offset=4)], [], lineno=50, col_offset=0)])
