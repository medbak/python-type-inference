Module([Import([alias('pprint', None)], lineno=1, col_offset=0), Import([alias('test.test_support', None)], lineno=2, col_offset=0), Import([alias('unittest', None)], lineno=3, col_offset=0), Import([alias('test.test_set', None)], lineno=4, col_offset=0), TryExcept([Assign([Name('uni', Store(), lineno=7, col_offset=4)], Name('unicode', Load(), lineno=7, col_offset=10), lineno=7, col_offset=4)], [ExceptHandler(Name('NameError', Load(), lineno=8, col_offset=7), None, [FunctionDef('uni', arguments([Name('x', Param(), lineno=9, col_offset=12)], None, None, []), [Return(Name('x', Load(), lineno=10, col_offset=15), lineno=10, col_offset=8)], [], lineno=9, col_offset=4)], lineno=8, col_offset=0)], [], lineno=6, col_offset=0), ClassDef('list2', [Name('list', Load(), lineno=13, col_offset=12)], [Pass( lineno=14, col_offset=4)], [], lineno=13, col_offset=0), ClassDef('list3', [Name('list', Load(), lineno=16, col_offset=12)], [FunctionDef('__repr__', arguments([Name('self', Param(), lineno=17, col_offset=17)], None, None, []), [Return(Call(Attribute(Name('list', Load(), lineno=18, col_offset=15), '__repr__', Load(), lineno=18, col_offset=15), [Name('self', Load(), lineno=18, col_offset=29)], [], None, None, lineno=18, col_offset=15), lineno=18, col_offset=8)], [], lineno=17, col_offset=4)], [], lineno=16, col_offset=0), ClassDef('tuple2', [Name('tuple', Load(), lineno=20, col_offset=13)], [Pass( lineno=21, col_offset=4)], [], lineno=20, col_offset=0), ClassDef('tuple3', [Name('tuple', Load(), lineno=23, col_offset=13)], [FunctionDef('__repr__', arguments([Name('self', Param(), lineno=24, col_offset=17)], None, None, []), [Return(Call(Attribute(Name('tuple', Load(), lineno=25, col_offset=15), '__repr__', Load(), lineno=25, col_offset=15), [Name('self', Load(), lineno=25, col_offset=30)], [], None, None, lineno=25, col_offset=15), lineno=25, col_offset=8)], [], lineno=24, col_offset=4)], [], lineno=23, col_offset=0), ClassDef('dict2', [Name('dict', Load(), lineno=27, col_offset=12)], [Pass( lineno=28, col_offset=4)], [], lineno=27, col_offset=0), ClassDef('dict3', [Name('dict', Load(), lineno=30, col_offset=12)], [FunctionDef('__repr__', arguments([Name('self', Param(), lineno=31, col_offset=17)], None, None, []), [Return(Call(Attribute(Name('dict', Load(), lineno=32, col_offset=15), '__repr__', Load(), lineno=32, col_offset=15), [Name('self', Load(), lineno=32, col_offset=29)], [], None, None, lineno=32, col_offset=15), lineno=32, col_offset=8)], [], lineno=31, col_offset=4)], [], lineno=30, col_offset=0), ClassDef('QueryTestCase', [Attribute(Name('unittest', Load(), lineno=34, col_offset=20), 'TestCase', Load(), lineno=34, col_offset=20)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=36, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=37, col_offset=8), 'a', Store(), lineno=37, col_offset=8)], Call(Name('range', Load(), lineno=37, col_offset=17), [Num(100, lineno=37, col_offset=23)], [], None, None, lineno=37, col_offset=17), lineno=37, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=38, col_offset=8), 'b', Store(), lineno=38, col_offset=8)], Call(Name('range', Load(), lineno=38, col_offset=17), [Num(200, lineno=38, col_offset=23)], [], None, None, lineno=38, col_offset=17), lineno=38, col_offset=8), Assign([Subscript(Attribute(Name('self', Load(), lineno=39, col_offset=8), 'a', Load(), lineno=39, col_offset=8), Index(Num(-12, lineno=39, col_offset=16)), Store(), lineno=39, col_offset=8)], Attribute(Name('self', Load(), lineno=39, col_offset=22), 'b', Load(), lineno=39, col_offset=22), lineno=39, col_offset=8)], [], lineno=36, col_offset=4), FunctionDef('test_basic', arguments([Name('self', Param(), lineno=41, col_offset=19)], None, None, []), [Assign([Name('pp', Store(), lineno=43, col_offset=8)], Call(Attribute(Name('pprint', Load(), lineno=43, col_offset=13), 'PrettyPrinter', Load(), lineno=43, col_offset=13), [], [], None, None, lineno=43, col_offset=13), lineno=43, col_offset=8), For(Name('safe', Store(), lineno=44, col_offset=12), Tuple([Num(2, lineno=44, col_offset=21), Num(2.0, lineno=44, col_offset=24), Num(2j, lineno=44, col_offset=29), Str('abc', lineno=44, col_offset=33), List([Num(3, lineno=44, col_offset=41)], Load(), lineno=44, col_offset=40), Tuple([Num(2, lineno=44, col_offset=46), Num(2, lineno=44, col_offset=48)], Load(), lineno=44, col_offset=46), Dict([Num(3, lineno=44, col_offset=53)], [Num(3, lineno=44, col_offset=56)], lineno=44, col_offset=52), Call(Name('uni', Load(), lineno=44, col_offset=60), [Str('yaddayadda', lineno=44, col_offset=64)], [], None, None, lineno=44, col_offset=60), Attribute(Name('self', Load(), lineno=45, col_offset=21), 'a', Load(), lineno=45, col_offset=21), Attribute(Name('self', Load(), lineno=45, col_offset=29), 'b', Load(), lineno=45, col_offset=29)], Load(), lineno=44, col_offset=21), [Expr(Call(Attribute(Name('self', Load(), lineno=47, col_offset=12), 'assertFalse', Load(), lineno=47, col_offset=12), [Call(Attribute(Name('pprint', Load(), lineno=47, col_offset=29), 'isrecursive', Load(), lineno=47, col_offset=29), [Name('safe', Load(), lineno=47, col_offset=48)], [], None, None, lineno=47, col_offset=29), BinOp(Str('expected not isrecursive for %r', lineno=48, col_offset=29), Mod(), Tuple([Name('safe', Load(), lineno=48, col_offset=66)], Load(), lineno=48, col_offset=66), lineno=48, col_offset=29)], [], None, None, lineno=47, col_offset=12), lineno=47, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=49, col_offset=12), 'assertTrue', Load(), lineno=49, col_offset=12), [Call(Attribute(Name('pprint', Load(), lineno=49, col_offset=28), 'isreadable', Load(), lineno=49, col_offset=28), [Name('safe', Load(), lineno=49, col_offset=46)], [], None, None, lineno=49, col_offset=28), BinOp(Str('expected isreadable for %r', lineno=50, col_offset=28), Mod(), Tuple([Name('safe', Load(), lineno=50, col_offset=60)], Load(), lineno=50, col_offset=60), lineno=50, col_offset=28)], [], None, None, lineno=49, col_offset=12), lineno=49, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=52, col_offset=12), 'assertFalse', Load(), lineno=52, col_offset=12), [Call(Attribute(Name('pp', Load(), lineno=52, col_offset=29), 'isrecursive', Load(), lineno=52, col_offset=29), [Name('safe', Load(), lineno=52, col_offset=44)], [], None, None, lineno=52, col_offset=29), BinOp(Str('expected not isrecursive for %r', lineno=53, col_offset=29), Mod(), Tuple([Name('safe', Load(), lineno=53, col_offset=66)], Load(), lineno=53, col_offset=66), lineno=53, col_offset=29)], [], None, None, lineno=52, col_offset=12), lineno=52, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=54, col_offset=12), 'assertTrue', Load(), lineno=54, col_offset=12), [Call(Attribute(Name('pp', Load(), lineno=54, col_offset=28), 'isreadable', Load(), lineno=54, col_offset=28), [Name('safe', Load(), lineno=54, col_offset=42)], [], None, None, lineno=54, col_offset=28), BinOp(Str('expected isreadable for %r', lineno=55, col_offset=28), Mod(), Tuple([Name('safe', Load(), lineno=55, col_offset=60)], Load(), lineno=55, col_offset=60), lineno=55, col_offset=28)], [], None, None, lineno=54, col_offset=12), lineno=54, col_offset=12)], [], lineno=44, col_offset=8)], [], lineno=41, col_offset=4), FunctionDef('test_knotted', arguments([Name('self', Param(), lineno=57, col_offset=21)], None, None, []), [Assign([Subscript(Attribute(Name('self', Load(), lineno=60, col_offset=8), 'b', Load(), lineno=60, col_offset=8), Index(Num(67, lineno=60, col_offset=15)), Store(), lineno=60, col_offset=8)], Attribute(Name('self', Load(), lineno=60, col_offset=21), 'a', Load(), lineno=60, col_offset=21), lineno=60, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=62, col_offset=8), 'd', Store(), lineno=62, col_offset=8)], Dict([], [], lineno=62, col_offset=17), lineno=62, col_offset=8), Assign([Subscript(Attribute(Name('self', Load(), lineno=63, col_offset=8), 'd', Load(), lineno=63, col_offset=8), Index(Num(0, lineno=63, col_offset=15)), Store(), lineno=63, col_offset=8), Subscript(Attribute(Name('self', Load(), lineno=63, col_offset=20), 'd', Load(), lineno=63, col_offset=20), Index(Num(1, lineno=63, col_offset=27)), Store(), lineno=63, col_offset=20), Subscript(Attribute(Name('self', Load(), lineno=63, col_offset=32), 'd', Load(), lineno=63, col_offset=32), Index(Num(2, lineno=63, col_offset=39)), Store(), lineno=63, col_offset=32)], Attribute(Name('self', Load(), lineno=63, col_offset=44), 'd', Load(), lineno=63, col_offset=44), lineno=63, col_offset=8), Assign([Name('pp', Store(), lineno=65, col_offset=8)], Call(Attribute(Name('pprint', Load(), lineno=65, col_offset=13), 'PrettyPrinter', Load(), lineno=65, col_offset=13), [], [], None, None, lineno=65, col_offset=13), lineno=65, col_offset=8), For(Name('icky', Store(), lineno=67, col_offset=12), Tuple([Attribute(Name('self', Load(), lineno=67, col_offset=20), 'a', Load(), lineno=67, col_offset=20), Attribute(Name('self', Load(), lineno=67, col_offset=28), 'b', Load(), lineno=67, col_offset=28), Attribute(Name('self', Load(), lineno=67, col_offset=36), 'd', Load(), lineno=67, col_offset=36), Tuple([Attribute(Name('self', Load(), lineno=67, col_offset=45), 'd', Load(), lineno=67, col_offset=45), Attribute(Name('self', Load(), lineno=67, col_offset=53), 'd', Load(), lineno=67, col_offset=53)], Load(), lineno=67, col_offset=45)], Load(), lineno=67, col_offset=20), [Expr(Call(Attribute(Name('self', Load(), lineno=68, col_offset=12), 'assertTrue', Load(), lineno=68, col_offset=12), [Call(Attribute(Name('pprint', Load(), lineno=68, col_offset=28), 'isrecursive', Load(), lineno=68, col_offset=28), [Name('icky', Load(), lineno=68, col_offset=47)], [], None, None, lineno=68, col_offset=28), Str('expected isrecursive', lineno=68, col_offset=54)], [], None, None, lineno=68, col_offset=12), lineno=68, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=69, col_offset=12), 'assertFalse', Load(), lineno=69, col_offset=12), [Call(Attribute(Name('pprint', Load(), lineno=69, col_offset=29), 'isreadable', Load(), lineno=69, col_offset=29), [Name('icky', Load(), lineno=69, col_offset=47)], [], None, None, lineno=69, col_offset=29), Str('expected not isreadable', lineno=69, col_offset=54)], [], None, None, lineno=69, col_offset=12), lineno=69, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=70, col_offset=12), 'assertTrue', Load(), lineno=70, col_offset=12), [Call(Attribute(Name('pp', Load(), lineno=70, col_offset=28), 'isrecursive', Load(), lineno=70, col_offset=28), [Name('icky', Load(), lineno=70, col_offset=43)], [], None, None, lineno=70, col_offset=28), Str('expected isrecursive', lineno=70, col_offset=50)], [], None, None, lineno=70, col_offset=12), lineno=70, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=71, col_offset=12), 'assertFalse', Load(), lineno=71, col_offset=12), [Call(Attribute(Name('pp', Load(), lineno=71, col_offset=29), 'isreadable', Load(), lineno=71, col_offset=29), [Name('icky', Load(), lineno=71, col_offset=43)], [], None, None, lineno=71, col_offset=29), Str('expected not isreadable', lineno=71, col_offset=50)], [], None, None, lineno=71, col_offset=12), lineno=71, col_offset=12)], [], lineno=67, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=74, col_offset=8), 'd', Load(), lineno=74, col_offset=8), 'clear', Load(), lineno=74, col_offset=8), [], [], None, None, lineno=74, col_offset=8), lineno=74, col_offset=8), Delete([Subscript(Attribute(Name('self', Load(), lineno=75, col_offset=12), 'a', Load(), lineno=75, col_offset=12), Slice(None, None, None), Del(), lineno=75, col_offset=12)], lineno=75, col_offset=8), Delete([Subscript(Attribute(Name('self', Load(), lineno=76, col_offset=12), 'b', Load(), lineno=76, col_offset=12), Slice(None, None, None), Del(), lineno=76, col_offset=12)], lineno=76, col_offset=8), For(Name('safe', Store(), lineno=78, col_offset=12), Tuple([Attribute(Name('self', Load(), lineno=78, col_offset=20), 'a', Load(), lineno=78, col_offset=20), Attribute(Name('self', Load(), lineno=78, col_offset=28), 'b', Load(), lineno=78, col_offset=28), Attribute(Name('self', Load(), lineno=78, col_offset=36), 'd', Load(), lineno=78, col_offset=36), Tuple([Attribute(Name('self', Load(), lineno=78, col_offset=45), 'd', Load(), lineno=78, col_offset=45), Attribute(Name('self', Load(), lineno=78, col_offset=53), 'd', Load(), lineno=78, col_offset=53)], Load(), lineno=78, col_offset=45)], Load(), lineno=78, col_offset=20), [Expr(Call(Attribute(Name('self', Load(), lineno=80, col_offset=12), 'assertFalse', Load(), lineno=80, col_offset=12), [Call(Attribute(Name('pprint', Load(), lineno=80, col_offset=29), 'isrecursive', Load(), lineno=80, col_offset=29), [Name('safe', Load(), lineno=80, col_offset=48)], [], None, None, lineno=80, col_offset=29), BinOp(Str('expected not isrecursive for %r', lineno=81, col_offset=29), Mod(), Tuple([Name('safe', Load(), lineno=81, col_offset=66)], Load(), lineno=81, col_offset=66), lineno=81, col_offset=29)], [], None, None, lineno=80, col_offset=12), lineno=80, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=82, col_offset=12), 'assertTrue', Load(), lineno=82, col_offset=12), [Call(Attribute(Name('pprint', Load(), lineno=82, col_offset=28), 'isreadable', Load(), lineno=82, col_offset=28), [Name('safe', Load(), lineno=82, col_offset=46)], [], None, None, lineno=82, col_offset=28), BinOp(Str('expected isreadable for %r', lineno=83, col_offset=28), Mod(), Tuple([Name('safe', Load(), lineno=83, col_offset=60)], Load(), lineno=83, col_offset=60), lineno=83, col_offset=28)], [], None, None, lineno=82, col_offset=12), lineno=82, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=85, col_offset=12), 'assertFalse', Load(), lineno=85, col_offset=12), [Call(Attribute(Name('pp', Load(), lineno=85, col_offset=29), 'isrecursive', Load(), lineno=85, col_offset=29), [Name('safe', Load(), lineno=85, col_offset=44)], [], None, None, lineno=85, col_offset=29), BinOp(Str('expected not isrecursive for %r', lineno=86, col_offset=29), Mod(), Tuple([Name('safe', Load(), lineno=86, col_offset=66)], Load(), lineno=86, col_offset=66), lineno=86, col_offset=29)], [], None, None, lineno=85, col_offset=12), lineno=85, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=87, col_offset=12), 'assertTrue', Load(), lineno=87, col_offset=12), [Call(Attribute(Name('pp', Load(), lineno=87, col_offset=28), 'isreadable', Load(), lineno=87, col_offset=28), [Name('safe', Load(), lineno=87, col_offset=42)], [], None, None, lineno=87, col_offset=28), BinOp(Str('expected isreadable for %r', lineno=88, col_offset=28), Mod(), Tuple([Name('safe', Load(), lineno=88, col_offset=60)], Load(), lineno=88, col_offset=60), lineno=88, col_offset=28)], [], None, None, lineno=87, col_offset=12), lineno=87, col_offset=12)], [], lineno=78, col_offset=8)], [], lineno=57, col_offset=4), FunctionDef('test_unreadable', arguments([Name('self', Param(), lineno=90, col_offset=24)], None, None, []), [Assign([Name('pp', Store(), lineno=92, col_offset=8)], Call(Attribute(Name('pprint', Load(), lineno=92, col_offset=13), 'PrettyPrinter', Load(), lineno=92, col_offset=13), [], [], None, None, lineno=92, col_offset=13), lineno=92, col_offset=8), For(Name('unreadable', Store(), lineno=93, col_offset=12), Tuple([Call(Name('type', Load(), lineno=93, col_offset=26), [Num(3, lineno=93, col_offset=31)], [], None, None, lineno=93, col_offset=26), Name('pprint', Load(), lineno=93, col_offset=35), Attribute(Name('pprint', Load(), lineno=93, col_offset=43), 'isrecursive', Load(), lineno=93, col_offset=43)], Load(), lineno=93, col_offset=26), [Expr(Call(Attribute(Name('self', Load(), lineno=95, col_offset=12), 'assertFalse', Load(), lineno=95, col_offset=12), [Call(Attribute(Name('pprint', Load(), lineno=95, col_offset=29), 'isrecursive', Load(), lineno=95, col_offset=29), [Name('unreadable', Load(), lineno=95, col_offset=48)], [], None, None, lineno=95, col_offset=29), BinOp(Str('expected not isrecursive for %r', lineno=96, col_offset=29), Mod(), Tuple([Name('unreadable', Load(), lineno=96, col_offset=66)], Load(), lineno=96, col_offset=66), lineno=96, col_offset=29)], [], None, None, lineno=95, col_offset=12), lineno=95, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=97, col_offset=12), 'assertFalse', Load(), lineno=97, col_offset=12), [Call(Attribute(Name('pprint', Load(), lineno=97, col_offset=29), 'isreadable', Load(), lineno=97, col_offset=29), [Name('unreadable', Load(), lineno=97, col_offset=47)], [], None, None, lineno=97, col_offset=29), BinOp(Str('expected not isreadable for %r', lineno=98, col_offset=29), Mod(), Tuple([Name('unreadable', Load(), lineno=98, col_offset=65)], Load(), lineno=98, col_offset=65), lineno=98, col_offset=29)], [], None, None, lineno=97, col_offset=12), lineno=97, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=100, col_offset=12), 'assertFalse', Load(), lineno=100, col_offset=12), [Call(Attribute(Name('pp', Load(), lineno=100, col_offset=29), 'isrecursive', Load(), lineno=100, col_offset=29), [Name('unreadable', Load(), lineno=100, col_offset=44)], [], None, None, lineno=100, col_offset=29), BinOp(Str('expected not isrecursive for %r', lineno=101, col_offset=29), Mod(), Tuple([Name('unreadable', Load(), lineno=101, col_offset=66)], Load(), lineno=101, col_offset=66), lineno=101, col_offset=29)], [], None, None, lineno=100, col_offset=12), lineno=100, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=102, col_offset=12), 'assertFalse', Load(), lineno=102, col_offset=12), [Call(Attribute(Name('pp', Load(), lineno=102, col_offset=29), 'isreadable', Load(), lineno=102, col_offset=29), [Name('unreadable', Load(), lineno=102, col_offset=43)], [], None, None, lineno=102, col_offset=29), BinOp(Str('expected not isreadable for %r', lineno=103, col_offset=29), Mod(), Tuple([Name('unreadable', Load(), lineno=103, col_offset=65)], Load(), lineno=103, col_offset=65), lineno=103, col_offset=29)], [], None, None, lineno=102, col_offset=12), lineno=102, col_offset=12)], [], lineno=93, col_offset=8)], [], lineno=90, col_offset=4), FunctionDef('test_same_as_repr', arguments([Name('self', Param(), lineno=105, col_offset=26)], None, None, []), [For(Name('simple', Store(), lineno=114, col_offset=12), Tuple([Num(0, lineno=114, col_offset=23), Num(0L, lineno=114, col_offset=26), BinOp(Num(0, lineno=114, col_offset=30), Add(), Num(0j, lineno=114, col_offset=32), lineno=114, col_offset=30), Num(0.0, lineno=114, col_offset=36), Str('', lineno=114, col_offset=41), Call(Name('uni', Load(), lineno=114, col_offset=45), [Str('', lineno=114, col_offset=49)], [], None, None, lineno=114, col_offset=45), Tuple([], Load(), lineno=115, col_offset=23), Call(Name('tuple2', Load(), lineno=115, col_offset=27), [], [], None, None, lineno=115, col_offset=27), Call(Name('tuple3', Load(), lineno=115, col_offset=37), [], [], None, None, lineno=115, col_offset=37), List([], Load(), lineno=116, col_offset=23), Call(Name('list2', Load(), lineno=116, col_offset=27), [], [], None, None, lineno=116, col_offset=27), Call(Name('list3', Load(), lineno=116, col_offset=36), [], [], None, None, lineno=116, col_offset=36), Dict([], [], lineno=117, col_offset=23), Call(Name('dict2', Load(), lineno=117, col_offset=27), [], [], None, None, lineno=117, col_offset=27), Call(Name('dict3', Load(), lineno=117, col_offset=36), [], [], None, None, lineno=117, col_offset=36), Attribute(Name('self', Load(), lineno=118, col_offset=23), 'assertTrue', Load(), lineno=118, col_offset=23), Name('pprint', Load(), lineno=118, col_offset=40), Num(-6, lineno=119, col_offset=24), Num(-6L, lineno=119, col_offset=28), BinOp(Num(-6, lineno=119, col_offset=33), Sub(), Num(6j, lineno=119, col_offset=35), lineno=119, col_offset=32), Num(-1.5, lineno=119, col_offset=40), Str('x', lineno=119, col_offset=45), Call(Name('uni', Load(), lineno=119, col_offset=50), [Str('x', lineno=119, col_offset=54)], [], None, None, lineno=119, col_offset=50), Tuple([Num(3, lineno=119, col_offset=61)], Load(), lineno=119, col_offset=61), List([Num(3, lineno=119, col_offset=67)], Load(), lineno=119, col_offset=66), Dict([Num(3, lineno=119, col_offset=72)], [Num(6, lineno=119, col_offset=75)], lineno=119, col_offset=71), Tuple([Num(1, lineno=120, col_offset=24), Num(2, lineno=120, col_offset=26)], Load(), lineno=120, col_offset=24), List([Num(3, lineno=120, col_offset=31), Num(4, lineno=120, col_offset=33)], Load(), lineno=120, col_offset=30), Dict([Num(5, lineno=120, col_offset=38)], [Num(6, lineno=120, col_offset=41)], lineno=120, col_offset=37), Call(Name('tuple2', Load(), lineno=121, col_offset=23), [Tuple([Num(1, lineno=121, col_offset=31), Num(2, lineno=121, col_offset=33)], Load(), lineno=121, col_offset=31)], [], None, None, lineno=121, col_offset=23), Call(Name('tuple3', Load(), lineno=121, col_offset=38), [Tuple([Num(1, lineno=121, col_offset=46), Num(2, lineno=121, col_offset=48)], Load(), lineno=121, col_offset=46)], [], None, None, lineno=121, col_offset=38), Call(Name('tuple3', Load(), lineno=121, col_offset=53), [Call(Name('range', Load(), lineno=121, col_offset=60), [Num(100, lineno=121, col_offset=66)], [], None, None, lineno=121, col_offset=60)], [], None, None, lineno=121, col_offset=53), List([Num(3, lineno=122, col_offset=24), Num(4, lineno=122, col_offset=26)], Load(), lineno=122, col_offset=23), Call(Name('list2', Load(), lineno=122, col_offset=30), [List([Num(3, lineno=122, col_offset=37), Num(4, lineno=122, col_offset=39)], Load(), lineno=122, col_offset=36)], [], None, None, lineno=122, col_offset=30), Call(Name('list3', Load(), lineno=122, col_offset=44), [List([Num(3, lineno=122, col_offset=51), Num(4, lineno=122, col_offset=53)], Load(), lineno=122, col_offset=50)], [], None, None, lineno=122, col_offset=44), Call(Name('list3', Load(), lineno=122, col_offset=58), [Call(Name('range', Load(), lineno=122, col_offset=64), [Num(100, lineno=122, col_offset=70)], [], None, None, lineno=122, col_offset=64)], [], None, None, lineno=122, col_offset=58), Call(Name('dict2', Load(), lineno=123, col_offset=23), [Dict([Num(5, lineno=123, col_offset=30)], [Num(6, lineno=123, col_offset=33)], lineno=123, col_offset=29)], [], None, None, lineno=123, col_offset=23), Call(Name('dict3', Load(), lineno=123, col_offset=38), [Dict([Num(5, lineno=123, col_offset=45)], [Num(6, lineno=123, col_offset=48)], lineno=123, col_offset=44)], [], None, None, lineno=123, col_offset=38), Call(Name('range', Load(), lineno=124, col_offset=23), [Num(10, lineno=124, col_offset=29), Num(-11, lineno=124, col_offset=34), Num(-1, lineno=124, col_offset=39)], [], None, None, lineno=124, col_offset=23)], Load(), lineno=114, col_offset=23), [Assign([Name('native', Store(), lineno=126, col_offset=12)], Call(Name('repr', Load(), lineno=126, col_offset=21), [Name('simple', Load(), lineno=126, col_offset=26)], [], None, None, lineno=126, col_offset=21), lineno=126, col_offset=12), For(Name('function', Store(), lineno=127, col_offset=16), Tuple([Str('pformat', lineno=127, col_offset=28), Str('saferepr', lineno=127, col_offset=39)], Load(), lineno=127, col_offset=28), [Assign([Name('f', Store(), lineno=128, col_offset=16)], Call(Name('getattr', Load(), lineno=128, col_offset=20), [Name('pprint', Load(), lineno=128, col_offset=28), Name('function', Load(), lineno=128, col_offset=36)], [], None, None, lineno=128, col_offset=20), lineno=128, col_offset=16), Assign([Name('got', Store(), lineno=129, col_offset=16)], Call(Name('f', Load(), lineno=129, col_offset=22), [Name('simple', Load(), lineno=129, col_offset=24)], [], None, None, lineno=129, col_offset=22), lineno=129, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=130, col_offset=16), 'assertEqual', Load(), lineno=130, col_offset=16), [Name('native', Load(), lineno=130, col_offset=33), Name('got', Load(), lineno=130, col_offset=41), BinOp(Str('expected %s got %s from pprint.%s', lineno=131, col_offset=33), Mod(), Tuple([Name('native', Load(), lineno=132, col_offset=34), Name('got', Load(), lineno=132, col_offset=42), Name('function', Load(), lineno=132, col_offset=47)], Load(), lineno=132, col_offset=34), lineno=131, col_offset=33)], [], None, None, lineno=130, col_offset=16), lineno=130, col_offset=16)], [], lineno=127, col_offset=12)], [], lineno=114, col_offset=8)], [], lineno=105, col_offset=4), FunctionDef('test_basic_line_wrap', arguments([Name('self', Param(), lineno=134, col_offset=29)], None, None, []), [Assign([Name('o', Store(), lineno=136, col_offset=8)], Dict([Str('RPM_cal', lineno=136, col_offset=13), Str('RPM_cal2', lineno=137, col_offset=13), Str('Speed_cal', lineno=138, col_offset=13), Str('controldesk_runtime_us', lineno=139, col_offset=13), Str('main_code_runtime_us', lineno=140, col_offset=13), Str('read_io_runtime_us', lineno=141, col_offset=13), Str('write_io_runtime_us', lineno=142, col_offset=13)], [Num(0, lineno=136, col_offset=24), Num(48059, lineno=137, col_offset=25), Num(0, lineno=138, col_offset=26), Num(0, lineno=139, col_offset=39), Num(0, lineno=140, col_offset=37), Num(0, lineno=141, col_offset=35), Num(43690, lineno=142, col_offset=36)], lineno=136, col_offset=12), lineno=136, col_offset=8), Assign([Name('exp', Store(), lineno=143, col_offset=8)], Str("{'RPM_cal': 0,\n 'RPM_cal2': 48059,\n 'Speed_cal': 0,\n 'controldesk_runtime_us': 0,\n 'main_code_runtime_us': 0,\n 'read_io_runtime_us': 0,\n 'write_io_runtime_us': 43690}", lineno=150, col_offset=-1), lineno=143, col_offset=8), For(Name('type', Store(), lineno=151, col_offset=12), List([Name('dict', Load(), lineno=151, col_offset=21), Name('dict2', Load(), lineno=151, col_offset=27)], Load(), lineno=151, col_offset=20), [Expr(Call(Attribute(Name('self', Load(), lineno=152, col_offset=12), 'assertEqual', Load(), lineno=152, col_offset=12), [Call(Attribute(Name('pprint', Load(), lineno=152, col_offset=29), 'pformat', Load(), lineno=152, col_offset=29), [Call(Name('type', Load(), lineno=152, col_offset=44), [Name('o', Load(), lineno=152, col_offset=49)], [], None, None, lineno=152, col_offset=44)], [], None, None, lineno=152, col_offset=29), Name('exp', Load(), lineno=152, col_offset=54)], [], None, None, lineno=152, col_offset=12), lineno=152, col_offset=12)], [], lineno=151, col_offset=8), Assign([Name('o', Store(), lineno=154, col_offset=8)], Call(Name('range', Load(), lineno=154, col_offset=12), [Num(100, lineno=154, col_offset=18)], [], None, None, lineno=154, col_offset=12), lineno=154, col_offset=8), Assign([Name('exp', Store(), lineno=155, col_offset=8)], BinOp(Str('[%s]', lineno=155, col_offset=14), Mod(), Call(Attribute(Str(',\n ', lineno=155, col_offset=23), 'join', Load(), lineno=155, col_offset=23), [Call(Name('map', Load(), lineno=155, col_offset=35), [Name('str', Load(), lineno=155, col_offset=39), Name('o', Load(), lineno=155, col_offset=44)], [], None, None, lineno=155, col_offset=35)], [], None, None, lineno=155, col_offset=23), lineno=155, col_offset=14), lineno=155, col_offset=8), For(Name('type', Store(), lineno=156, col_offset=12), List([Name('list', Load(), lineno=156, col_offset=21), Name('list2', Load(), lineno=156, col_offset=27)], Load(), lineno=156, col_offset=20), [Expr(Call(Attribute(Name('self', Load(), lineno=157, col_offset=12), 'assertEqual', Load(), lineno=157, col_offset=12), [Call(Attribute(Name('pprint', Load(), lineno=157, col_offset=29), 'pformat', Load(), lineno=157, col_offset=29), [Call(Name('type', Load(), lineno=157, col_offset=44), [Name('o', Load(), lineno=157, col_offset=49)], [], None, None, lineno=157, col_offset=44)], [], None, None, lineno=157, col_offset=29), Name('exp', Load(), lineno=157, col_offset=54)], [], None, None, lineno=157, col_offset=12), lineno=157, col_offset=12)], [], lineno=156, col_offset=8), Assign([Name('o', Store(), lineno=159, col_offset=8)], Call(Name('tuple', Load(), lineno=159, col_offset=12), [Call(Name('range', Load(), lineno=159, col_offset=18), [Num(100, lineno=159, col_offset=24)], [], None, None, lineno=159, col_offset=18)], [], None, None, lineno=159, col_offset=12), lineno=159, col_offset=8), Assign([Name('exp', Store(), lineno=160, col_offset=8)], BinOp(Str('(%s)', lineno=160, col_offset=14), Mod(), Call(Attribute(Str(',\n ', lineno=160, col_offset=23), 'join', Load(), lineno=160, col_offset=23), [Call(Name('map', Load(), lineno=160, col_offset=35), [Name('str', Load(), lineno=160, col_offset=39), Name('o', Load(), lineno=160, col_offset=44)], [], None, None, lineno=160, col_offset=35)], [], None, None, lineno=160, col_offset=23), lineno=160, col_offset=14), lineno=160, col_offset=8), For(Name('type', Store(), lineno=161, col_offset=12), List([Name('tuple', Load(), lineno=161, col_offset=21), Name('tuple2', Load(), lineno=161, col_offset=28)], Load(), lineno=161, col_offset=20), [Expr(Call(Attribute(Name('self', Load(), lineno=162, col_offset=12), 'assertEqual', Load(), lineno=162, col_offset=12), [Call(Attribute(Name('pprint', Load(), lineno=162, col_offset=29), 'pformat', Load(), lineno=162, col_offset=29), [Call(Name('type', Load(), lineno=162, col_offset=44), [Name('o', Load(), lineno=162, col_offset=49)], [], None, None, lineno=162, col_offset=44)], [], None, None, lineno=162, col_offset=29), Name('exp', Load(), lineno=162, col_offset=54)], [], None, None, lineno=162, col_offset=12), lineno=162, col_offset=12)], [], lineno=161, col_offset=8), Assign([Name('o', Store(), lineno=165, col_offset=8)], Call(Name('range', Load(), lineno=165, col_offset=12), [Num(100, lineno=165, col_offset=18)], [], None, None, lineno=165, col_offset=12), lineno=165, col_offset=8), Assign([Name('exp', Store(), lineno=166, col_offset=8)], BinOp(Str('[   %s]', lineno=166, col_offset=14), Mod(), Call(Attribute(Str(',\n    ', lineno=166, col_offset=26), 'join', Load(), lineno=166, col_offset=26), [Call(Name('map', Load(), lineno=166, col_offset=41), [Name('str', Load(), lineno=166, col_offset=45), Name('o', Load(), lineno=166, col_offset=50)], [], None, None, lineno=166, col_offset=41)], [], None, None, lineno=166, col_offset=26), lineno=166, col_offset=14), lineno=166, col_offset=8), For(Name('type', Store(), lineno=167, col_offset=12), List([Name('list', Load(), lineno=167, col_offset=21), Name('list2', Load(), lineno=167, col_offset=27)], Load(), lineno=167, col_offset=20), [Expr(Call(Attribute(Name('self', Load(), lineno=168, col_offset=12), 'assertEqual', Load(), lineno=168, col_offset=12), [Call(Attribute(Name('pprint', Load(), lineno=168, col_offset=29), 'pformat', Load(), lineno=168, col_offset=29), [Call(Name('type', Load(), lineno=168, col_offset=44), [Name('o', Load(), lineno=168, col_offset=49)], [], None, None, lineno=168, col_offset=44)], [keyword('indent', Num(4, lineno=168, col_offset=60))], None, None, lineno=168, col_offset=29), Name('exp', Load(), lineno=168, col_offset=64)], [], None, None, lineno=168, col_offset=12), lineno=168, col_offset=12)], [], lineno=167, col_offset=8)], [], lineno=134, col_offset=4), FunctionDef('test_nested_indentations', arguments([Name('self', Param(), lineno=170, col_offset=33)], None, None, []), [Assign([Name('o1', Store(), lineno=171, col_offset=8)], Call(Name('list', Load(), lineno=171, col_offset=13), [Call(Name('range', Load(), lineno=171, col_offset=18), [Num(10, lineno=171, col_offset=24)], [], None, None, lineno=171, col_offset=18)], [], None, None, lineno=171, col_offset=13), lineno=171, col_offset=8), Assign([Name('o2', Store(), lineno=172, col_offset=8)], Call(Name('dict', Load(), lineno=172, col_offset=13), [], [keyword('first', Num(1, lineno=172, col_offset=24)), keyword('second', Num(2, lineno=172, col_offset=34)), keyword('third', Num(3, lineno=172, col_offset=43))], None, None, lineno=172, col_offset=13), lineno=172, col_offset=8), Assign([Name('o', Store(), lineno=173, col_offset=8)], List([Name('o1', Load(), lineno=173, col_offset=13), Name('o2', Load(), lineno=173, col_offset=17)], Load(), lineno=173, col_offset=12), lineno=173, col_offset=8), Assign([Name('expected', Store(), lineno=174, col_offset=8)], Str("[   [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\n    {   'first': 1,\n        'second': 2,\n        'third': 3}]", lineno=178, col_offset=-1), lineno=174, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=179, col_offset=8), 'assertEqual', Load(), lineno=179, col_offset=8), [Call(Attribute(Name('pprint', Load(), lineno=179, col_offset=25), 'pformat', Load(), lineno=179, col_offset=25), [Name('o', Load(), lineno=179, col_offset=40)], [keyword('indent', Num(4, lineno=179, col_offset=50)), keyword('width', Num(42, lineno=179, col_offset=59))], None, None, lineno=179, col_offset=25), Name('expected', Load(), lineno=179, col_offset=64)], [], None, None, lineno=179, col_offset=8), lineno=179, col_offset=8)], [], lineno=170, col_offset=4), FunctionDef('test_sorted_dict', arguments([Name('self', Param(), lineno=181, col_offset=25)], None, None, []), [Assign([Name('d', Store(), lineno=186, col_offset=8)], Dict([Str('a', lineno=186, col_offset=13), Str('b', lineno=186, col_offset=21), Str('c', lineno=186, col_offset=29)], [Num(1, lineno=186, col_offset=18), Num(1, lineno=186, col_offset=26), Num(1, lineno=186, col_offset=34)], lineno=186, col_offset=12), lineno=186, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=187, col_offset=8), 'assertEqual', Load(), lineno=187, col_offset=8), [Call(Attribute(Name('pprint', Load(), lineno=187, col_offset=25), 'pformat', Load(), lineno=187, col_offset=25), [Name('d', Load(), lineno=187, col_offset=40)], [], None, None, lineno=187, col_offset=25), Str("{'a': 1, 'b': 1, 'c': 1}", lineno=187, col_offset=44)], [], None, None, lineno=187, col_offset=8), lineno=187, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=188, col_offset=8), 'assertEqual', Load(), lineno=188, col_offset=8), [Call(Attribute(Name('pprint', Load(), lineno=188, col_offset=25), 'pformat', Load(), lineno=188, col_offset=25), [List([Name('d', Load(), lineno=188, col_offset=41), Name('d', Load(), lineno=188, col_offset=44)], Load(), lineno=188, col_offset=40)], [], None, None, lineno=188, col_offset=25), Str("[{'a': 1, 'b': 1, 'c': 1}, {'a': 1, 'b': 1, 'c': 1}]", lineno=189, col_offset=12)], [], None, None, lineno=188, col_offset=8), lineno=188, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=196, col_offset=8), 'assertEqual', Load(), lineno=196, col_offset=8), [Call(Attribute(Name('pprint', Load(), lineno=196, col_offset=25), 'pformat', Load(), lineno=196, col_offset=25), [Dict([Str('xy\tab\n', lineno=196, col_offset=41), Num(5, lineno=196, col_offset=59), Tuple([], Load(), lineno=196, col_offset=68)], [Tuple([Num(3, lineno=196, col_offset=54)], Load(), lineno=196, col_offset=54), List([List([], Load(), lineno=196, col_offset=63)], Load(), lineno=196, col_offset=62), Dict([], [], lineno=196, col_offset=72)], lineno=196, col_offset=40)], [], None, None, lineno=196, col_offset=25), Str("{5: [[]], 'xy\\tab\\n': (3,), (): {}}", lineno=197, col_offset=12)], [], None, None, lineno=196, col_offset=8), lineno=196, col_offset=8)], [], lineno=181, col_offset=4), FunctionDef('test_subclassing', arguments([Name('self', Param(), lineno=199, col_offset=25)], None, None, []), [Assign([Name('o', Store(), lineno=200, col_offset=8)], Dict([Str('names with spaces', lineno=200, col_offset=13), Str('others.should.not.be', lineno=201, col_offset=13)], [Str('should be presented using repr()', lineno=200, col_offset=34), Str('like.this', lineno=201, col_offset=37)], lineno=200, col_offset=12), lineno=200, col_offset=8), Assign([Name('exp', Store(), lineno=202, col_offset=8)], Str("{'names with spaces': 'should be presented using repr()',\n others.should.not.be: like.this}", lineno=204, col_offset=-1), lineno=202, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=205, col_offset=8), 'assertEqual', Load(), lineno=205, col_offset=8), [Call(Attribute(Call(Name('DottedPrettyPrinter', Load(), lineno=205, col_offset=25), [], [], None, None, lineno=205, col_offset=25), 'pformat', Load(), lineno=205, col_offset=25), [Name('o', Load(), lineno=205, col_offset=55)], [], None, None, lineno=205, col_offset=25), Name('exp', Load(), lineno=205, col_offset=59)], [], None, None, lineno=205, col_offset=8), lineno=205, col_offset=8)], [], lineno=199, col_offset=4), FunctionDef('test_set_reprs', arguments([Name('self', Param(), lineno=207, col_offset=23)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=208, col_offset=8), 'assertEqual', Load(), lineno=208, col_offset=8), [Call(Attribute(Name('pprint', Load(), lineno=208, col_offset=25), 'pformat', Load(), lineno=208, col_offset=25), [Call(Name('set', Load(), lineno=208, col_offset=40), [], [], None, None, lineno=208, col_offset=40)], [], None, None, lineno=208, col_offset=25), Str('set()', lineno=208, col_offset=48)], [], None, None, lineno=208, col_offset=8), lineno=208, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=209, col_offset=8), 'assertEqual', Load(), lineno=209, col_offset=8), [Call(Attribute(Name('pprint', Load(), lineno=209, col_offset=25), 'pformat', Load(), lineno=209, col_offset=25), [Call(Name('set', Load(), lineno=209, col_offset=40), [Call(Name('range', Load(), lineno=209, col_offset=44), [Num(3, lineno=209, col_offset=50)], [], None, None, lineno=209, col_offset=44)], [], None, None, lineno=209, col_offset=40)], [], None, None, lineno=209, col_offset=25), Str('set([0, 1, 2])', lineno=209, col_offset=56)], [], None, None, lineno=209, col_offset=8), lineno=209, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=210, col_offset=8), 'assertEqual', Load(), lineno=210, col_offset=8), [Call(Attribute(Name('pprint', Load(), lineno=210, col_offset=25), 'pformat', Load(), lineno=210, col_offset=25), [Call(Name('frozenset', Load(), lineno=210, col_offset=40), [], [], None, None, lineno=210, col_offset=40)], [], None, None, lineno=210, col_offset=25), Str('frozenset()', lineno=210, col_offset=54)], [], None, None, lineno=210, col_offset=8), lineno=210, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=211, col_offset=8), 'assertEqual', Load(), lineno=211, col_offset=8), [Call(Attribute(Name('pprint', Load(), lineno=211, col_offset=25), 'pformat', Load(), lineno=211, col_offset=25), [Call(Name('frozenset', Load(), lineno=211, col_offset=40), [Call(Name('range', Load(), lineno=211, col_offset=50), [Num(3, lineno=211, col_offset=56)], [], None, None, lineno=211, col_offset=50)], [], None, None, lineno=211, col_offset=40)], [], None, None, lineno=211, col_offset=25), Str('frozenset([0, 1, 2])', lineno=211, col_offset=62)], [], None, None, lineno=211, col_offset=8), lineno=211, col_offset=8), Assign([Name('cube_repr_tgt', Store(), lineno=212, col_offset=8)], Str('{frozenset([]): frozenset([frozenset([2]), frozenset([0]), frozenset([1])]),\n frozenset([0]): frozenset([frozenset(),\n                            frozenset([0, 2]),\n                            frozenset([0, 1])]),\n frozenset([1]): frozenset([frozenset(),\n                            frozenset([1, 2]),\n                            frozenset([0, 1])]),\n frozenset([2]): frozenset([frozenset(),\n                            frozenset([1, 2]),\n                            frozenset([0, 2])]),\n frozenset([1, 2]): frozenset([frozenset([2]),\n                               frozenset([1]),\n                               frozenset([0, 1, 2])]),\n frozenset([0, 2]): frozenset([frozenset([2]),\n                               frozenset([0]),\n                               frozenset([0, 1, 2])]),\n frozenset([0, 1]): frozenset([frozenset([0]),\n                               frozenset([1]),\n                               frozenset([0, 1, 2])]),\n frozenset([0, 1, 2]): frozenset([frozenset([1, 2]),\n                                  frozenset([0, 2]),\n                                  frozenset([0, 1])])}', lineno=234, col_offset=-1), lineno=212, col_offset=8), Assign([Name('cube', Store(), lineno=235, col_offset=8)], Call(Attribute(Attribute(Name('test', Load(), lineno=235, col_offset=15), 'test_set', Load(), lineno=235, col_offset=15), 'cube', Load(), lineno=235, col_offset=15), [Num(3, lineno=235, col_offset=34)], [], None, None, lineno=235, col_offset=15), lineno=235, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=236, col_offset=8), 'assertEqual', Load(), lineno=236, col_offset=8), [Call(Attribute(Name('pprint', Load(), lineno=236, col_offset=25), 'pformat', Load(), lineno=236, col_offset=25), [Name('cube', Load(), lineno=236, col_offset=40)], [], None, None, lineno=236, col_offset=25), Name('cube_repr_tgt', Load(), lineno=236, col_offset=47)], [], None, None, lineno=236, col_offset=8), lineno=236, col_offset=8), Assign([Name('cubo_repr_tgt', Store(), lineno=237, col_offset=8)], Str('{frozenset([frozenset([0, 2]), frozenset([0])]): frozenset([frozenset([frozenset([0,\n                                                                                  2]),\n                                                                       frozenset([0,\n                                                                                  1,\n                                                                                  2])]),\n                                                            frozenset([frozenset([0]),\n                                                                       frozenset([0,\n                                                                                  1])]),\n                                                            frozenset([frozenset(),\n                                                                       frozenset([0])]),\n                                                            frozenset([frozenset([2]),\n                                                                       frozenset([0,\n                                                                                  2])])]),\n frozenset([frozenset([0, 1]), frozenset([1])]): frozenset([frozenset([frozenset([0,\n                                                                                  1]),\n                                                                       frozenset([0,\n                                                                                  1,\n                                                                                  2])]),\n                                                            frozenset([frozenset([0]),\n                                                                       frozenset([0,\n                                                                                  1])]),\n                                                            frozenset([frozenset([1]),\n                                                                       frozenset([1,\n                                                                                  2])]),\n                                                            frozenset([frozenset(),\n                                                                       frozenset([1])])]),\n frozenset([frozenset([1, 2]), frozenset([1])]): frozenset([frozenset([frozenset([1,\n                                                                                  2]),\n                                                                       frozenset([0,\n                                                                                  1,\n                                                                                  2])]),\n                                                            frozenset([frozenset([2]),\n                                                                       frozenset([1,\n                                                                                  2])]),\n                                                            frozenset([frozenset(),\n                                                                       frozenset([1])]),\n                                                            frozenset([frozenset([1]),\n                                                                       frozenset([0,\n                                                                                  1])])]),\n frozenset([frozenset([1, 2]), frozenset([2])]): frozenset([frozenset([frozenset([1,\n                                                                                  2]),\n                                                                       frozenset([0,\n                                                                                  1,\n                                                                                  2])]),\n                                                            frozenset([frozenset([1]),\n                                                                       frozenset([1,\n                                                                                  2])]),\n                                                            frozenset([frozenset([2]),\n                                                                       frozenset([0,\n                                                                                  2])]),\n                                                            frozenset([frozenset(),\n                                                                       frozenset([2])])]),\n frozenset([frozenset([]), frozenset([0])]): frozenset([frozenset([frozenset([0]),\n                                                                   frozenset([0,\n                                                                              1])]),\n                                                        frozenset([frozenset([0]),\n                                                                   frozenset([0,\n                                                                              2])]),\n                                                        frozenset([frozenset(),\n                                                                   frozenset([1])]),\n                                                        frozenset([frozenset(),\n                                                                   frozenset([2])])]),\n frozenset([frozenset([]), frozenset([1])]): frozenset([frozenset([frozenset(),\n                                                                   frozenset([0])]),\n                                                        frozenset([frozenset([1]),\n                                                                   frozenset([1,\n                                                                              2])]),\n                                                        frozenset([frozenset(),\n                                                                   frozenset([2])]),\n                                                        frozenset([frozenset([1]),\n                                                                   frozenset([0,\n                                                                              1])])]),\n frozenset([frozenset([2]), frozenset([])]): frozenset([frozenset([frozenset([2]),\n                                                                   frozenset([1,\n                                                                              2])]),\n                                                        frozenset([frozenset(),\n                                                                   frozenset([0])]),\n                                                        frozenset([frozenset(),\n                                                                   frozenset([1])]),\n                                                        frozenset([frozenset([2]),\n                                                                   frozenset([0,\n                                                                              2])])]),\n frozenset([frozenset([0, 1, 2]), frozenset([0, 1])]): frozenset([frozenset([frozenset([1,\n                                                                                        2]),\n                                                                             frozenset([0,\n                                                                                        1,\n                                                                                        2])]),\n                                                                  frozenset([frozenset([0,\n                                                                                        2]),\n                                                                             frozenset([0,\n                                                                                        1,\n                                                                                        2])]),\n                                                                  frozenset([frozenset([0]),\n                                                                             frozenset([0,\n                                                                                        1])]),\n                                                                  frozenset([frozenset([1]),\n                                                                             frozenset([0,\n                                                                                        1])])]),\n frozenset([frozenset([0]), frozenset([0, 1])]): frozenset([frozenset([frozenset(),\n                                                                       frozenset([0])]),\n                                                            frozenset([frozenset([0,\n                                                                                  1]),\n                                                                       frozenset([0,\n                                                                                  1,\n                                                                                  2])]),\n                                                            frozenset([frozenset([0]),\n                                                                       frozenset([0,\n                                                                                  2])]),\n                                                            frozenset([frozenset([1]),\n                                                                       frozenset([0,\n                                                                                  1])])]),\n frozenset([frozenset([2]), frozenset([0, 2])]): frozenset([frozenset([frozenset([0,\n                                                                                  2]),\n                                                                       frozenset([0,\n                                                                                  1,\n                                                                                  2])]),\n                                                            frozenset([frozenset([2]),\n                                                                       frozenset([1,\n                                                                                  2])]),\n                                                            frozenset([frozenset([0]),\n                                                                       frozenset([0,\n                                                                                  2])]),\n                                                            frozenset([frozenset(),\n                                                                       frozenset([2])])]),\n frozenset([frozenset([0, 1, 2]), frozenset([0, 2])]): frozenset([frozenset([frozenset([1,\n                                                                                        2]),\n                                                                             frozenset([0,\n                                                                                        1,\n                                                                                        2])]),\n                                                                  frozenset([frozenset([0,\n                                                                                        1]),\n                                                                             frozenset([0,\n                                                                                        1,\n                                                                                        2])]),\n                                                                  frozenset([frozenset([0]),\n                                                                             frozenset([0,\n                                                                                        2])]),\n                                                                  frozenset([frozenset([2]),\n                                                                             frozenset([0,\n                                                                                        2])])]),\n frozenset([frozenset([1, 2]), frozenset([0, 1, 2])]): frozenset([frozenset([frozenset([0,\n                                                                                        2]),\n                                                                             frozenset([0,\n                                                                                        1,\n                                                                                        2])]),\n                                                                  frozenset([frozenset([0,\n                                                                                        1]),\n                                                                             frozenset([0,\n                                                                                        1,\n                                                                                        2])]),\n                                                                  frozenset([frozenset([2]),\n                                                                             frozenset([1,\n                                                                                        2])]),\n                                                                  frozenset([frozenset([1]),\n                                                                             frozenset([1,\n                                                                                        2])])])}', lineno=393, col_offset=-1), lineno=237, col_offset=8), Assign([Name('cubo', Store(), lineno=395, col_offset=8)], Call(Attribute(Attribute(Name('test', Load(), lineno=395, col_offset=15), 'test_set', Load(), lineno=395, col_offset=15), 'linegraph', Load(), lineno=395, col_offset=15), [Name('cube', Load(), lineno=395, col_offset=39)], [], None, None, lineno=395, col_offset=15), lineno=395, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=396, col_offset=8), 'assertEqual', Load(), lineno=396, col_offset=8), [Call(Attribute(Name('pprint', Load(), lineno=396, col_offset=25), 'pformat', Load(), lineno=396, col_offset=25), [Name('cubo', Load(), lineno=396, col_offset=40)], [], None, None, lineno=396, col_offset=25), Name('cubo_repr_tgt', Load(), lineno=396, col_offset=47)], [], None, None, lineno=396, col_offset=8), lineno=396, col_offset=8)], [], lineno=207, col_offset=4), FunctionDef('test_depth', arguments([Name('self', Param(), lineno=398, col_offset=19)], None, None, []), [Assign([Name('nested_tuple', Store(), lineno=399, col_offset=8)], Tuple([Num(1, lineno=399, col_offset=24), Tuple([Num(2, lineno=399, col_offset=28), Tuple([Num(3, lineno=399, col_offset=32), Tuple([Num(4, lineno=399, col_offset=36), Tuple([Num(5, lineno=399, col_offset=40), Num(6, lineno=399, col_offset=43)], Load(), lineno=399, col_offset=40)], Load(), lineno=399, col_offset=36)], Load(), lineno=399, col_offset=32)], Load(), lineno=399, col_offset=28)], Load(), lineno=399, col_offset=24), lineno=399, col_offset=8), Assign([Name('nested_dict', Store(), lineno=400, col_offset=8)], Dict([Num(1, lineno=400, col_offset=23)], [Dict([Num(2, lineno=400, col_offset=27)], [Dict([Num(3, lineno=400, col_offset=31)], [Dict([Num(4, lineno=400, col_offset=35)], [Dict([Num(5, lineno=400, col_offset=39)], [Dict([Num(6, lineno=400, col_offset=43)], [Num(6, lineno=400, col_offset=46)], lineno=400, col_offset=42)], lineno=400, col_offset=38)], lineno=400, col_offset=34)], lineno=400, col_offset=30)], lineno=400, col_offset=26)], lineno=400, col_offset=22), lineno=400, col_offset=8), Assign([Name('nested_list', Store(), lineno=401, col_offset=8)], List([Num(1, lineno=401, col_offset=23), List([Num(2, lineno=401, col_offset=27), List([Num(3, lineno=401, col_offset=31), List([Num(4, lineno=401, col_offset=35), List([Num(5, lineno=401, col_offset=39), List([Num(6, lineno=401, col_offset=43), List([], Load(), lineno=401, col_offset=46)], Load(), lineno=401, col_offset=42)], Load(), lineno=401, col_offset=38)], Load(), lineno=401, col_offset=34)], Load(), lineno=401, col_offset=30)], Load(), lineno=401, col_offset=26)], Load(), lineno=401, col_offset=22), lineno=401, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=402, col_offset=8), 'assertEqual', Load(), lineno=402, col_offset=8), [Call(Attribute(Name('pprint', Load(), lineno=402, col_offset=25), 'pformat', Load(), lineno=402, col_offset=25), [Name('nested_tuple', Load(), lineno=402, col_offset=40)], [], None, None, lineno=402, col_offset=25), Call(Name('repr', Load(), lineno=402, col_offset=55), [Name('nested_tuple', Load(), lineno=402, col_offset=60)], [], None, None, lineno=402, col_offset=55)], [], None, None, lineno=402, col_offset=8), lineno=402, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=403, col_offset=8), 'assertEqual', Load(), lineno=403, col_offset=8), [Call(Attribute(Name('pprint', Load(), lineno=403, col_offset=25), 'pformat', Load(), lineno=403, col_offset=25), [Name('nested_dict', Load(), lineno=403, col_offset=40)], [], None, None, lineno=403, col_offset=25), Call(Name('repr', Load(), lineno=403, col_offset=54), [Name('nested_dict', Load(), lineno=403, col_offset=59)], [], None, None, lineno=403, col_offset=54)], [], None, None, lineno=403, col_offset=8), lineno=403, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=404, col_offset=8), 'assertEqual', Load(), lineno=404, col_offset=8), [Call(Attribute(Name('pprint', Load(), lineno=404, col_offset=25), 'pformat', Load(), lineno=404, col_offset=25), [Name('nested_list', Load(), lineno=404, col_offset=40)], [], None, None, lineno=404, col_offset=25), Call(Name('repr', Load(), lineno=404, col_offset=54), [Name('nested_list', Load(), lineno=404, col_offset=59)], [], None, None, lineno=404, col_offset=54)], [], None, None, lineno=404, col_offset=8), lineno=404, col_offset=8), Assign([Name('lv1_tuple', Store(), lineno=406, col_offset=8)], Str('(1, (...))', lineno=406, col_offset=20), lineno=406, col_offset=8), Assign([Name('lv1_dict', Store(), lineno=407, col_offset=8)], Str('{1: {...}}', lineno=407, col_offset=19), lineno=407, col_offset=8), Assign([Name('lv1_list', Store(), lineno=408, col_offset=8)], Str('[1, [...]]', lineno=408, col_offset=19), lineno=408, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=409, col_offset=8), 'assertEqual', Load(), lineno=409, col_offset=8), [Call(Attribute(Name('pprint', Load(), lineno=409, col_offset=25), 'pformat', Load(), lineno=409, col_offset=25), [Name('nested_tuple', Load(), lineno=409, col_offset=40)], [keyword('depth', Num(1, lineno=409, col_offset=60))], None, None, lineno=409, col_offset=25), Name('lv1_tuple', Load(), lineno=409, col_offset=64)], [], None, None, lineno=409, col_offset=8), lineno=409, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=410, col_offset=8), 'assertEqual', Load(), lineno=410, col_offset=8), [Call(Attribute(Name('pprint', Load(), lineno=410, col_offset=25), 'pformat', Load(), lineno=410, col_offset=25), [Name('nested_dict', Load(), lineno=410, col_offset=40)], [keyword('depth', Num(1, lineno=410, col_offset=59))], None, None, lineno=410, col_offset=25), Name('lv1_dict', Load(), lineno=410, col_offset=63)], [], None, None, lineno=410, col_offset=8), lineno=410, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=411, col_offset=8), 'assertEqual', Load(), lineno=411, col_offset=8), [Call(Attribute(Name('pprint', Load(), lineno=411, col_offset=25), 'pformat', Load(), lineno=411, col_offset=25), [Name('nested_list', Load(), lineno=411, col_offset=40)], [keyword('depth', Num(1, lineno=411, col_offset=59))], None, None, lineno=411, col_offset=25), Name('lv1_list', Load(), lineno=411, col_offset=63)], [], None, None, lineno=411, col_offset=8), lineno=411, col_offset=8)], [], lineno=398, col_offset=4)], [], lineno=34, col_offset=0), ClassDef('DottedPrettyPrinter', [Attribute(Name('pprint', Load(), lineno=414, col_offset=26), 'PrettyPrinter', Load(), lineno=414, col_offset=26)], [FunctionDef('format', arguments([Name('self', Param(), lineno=416, col_offset=15), Name('object', Param(), lineno=416, col_offset=21), Name('context', Param(), lineno=416, col_offset=29), Name('maxlevels', Param(), lineno=416, col_offset=38), Name('level', Param(), lineno=416, col_offset=49)], None, None, []), [If(Call(Name('isinstance', Load(), lineno=417, col_offset=11), [Name('object', Load(), lineno=417, col_offset=22), Name('str', Load(), lineno=417, col_offset=30)], [], None, None, lineno=417, col_offset=11), [If(Compare(Str(' ', lineno=418, col_offset=15), [In()], [Name('object', Load(), lineno=418, col_offset=22)], lineno=418, col_offset=15), [Return(Tuple([Call(Name('repr', Load(), lineno=419, col_offset=23), [Name('object', Load(), lineno=419, col_offset=28)], [], None, None, lineno=419, col_offset=23), Num(1, lineno=419, col_offset=37), Num(0, lineno=419, col_offset=40)], Load(), lineno=419, col_offset=23), lineno=419, col_offset=16)], [Return(Tuple([Name('object', Load(), lineno=421, col_offset=23), Num(0, lineno=421, col_offset=31), Num(0, lineno=421, col_offset=34)], Load(), lineno=421, col_offset=23), lineno=421, col_offset=16)], lineno=418, col_offset=12)], [Return(Call(Attribute(Attribute(Name('pprint', Load(), lineno=423, col_offset=19), 'PrettyPrinter', Load(), lineno=423, col_offset=19), 'format', Load(), lineno=423, col_offset=19), [Name('self', Load(), lineno=424, col_offset=16), Name('object', Load(), lineno=424, col_offset=22), Name('context', Load(), lineno=424, col_offset=30), Name('maxlevels', Load(), lineno=424, col_offset=39), Name('level', Load(), lineno=424, col_offset=50)], [], None, None, lineno=423, col_offset=19), lineno=423, col_offset=12)], lineno=417, col_offset=8)], [], lineno=416, col_offset=4)], [], lineno=414, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Attribute(Name('test', Load(), lineno=428, col_offset=4), 'test_support', Load(), lineno=428, col_offset=4), 'run_unittest', Load(), lineno=428, col_offset=4), [Name('QueryTestCase', Load(), lineno=428, col_offset=35)], [], None, None, lineno=428, col_offset=4), lineno=428, col_offset=4)], [], lineno=427, col_offset=0), If(Compare(Name('__name__', Load(), lineno=431, col_offset=3), [Eq()], [Str('__main__', lineno=431, col_offset=15)], lineno=431, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=432, col_offset=4), [], [], None, None, lineno=432, col_offset=4), lineno=432, col_offset=4)], [], lineno=431, col_offset=0)])
