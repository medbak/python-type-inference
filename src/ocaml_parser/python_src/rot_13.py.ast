Module([Expr(Str(' Python Character Mapping Codec for ROT13.\n\n    See http://ucsub.colorado.edu/~kominek/rot13/ for details.\n\n    Written by Marc-Andre Lemburg (mal@lemburg.com).\n\n', lineno=8, col_offset=-1), lineno=8, col_offset=-1), Import([alias('codecs', None)], lineno=10, col_offset=0), ClassDef('Codec', [Attribute(Name('codecs', Load(), lineno=14, col_offset=12), 'Codec', Load(), lineno=14, col_offset=12)], [FunctionDef('encode', arguments([Name('self', Param(), lineno=16, col_offset=15), Name('input', Param(), lineno=16, col_offset=20), Name('errors', Param(), lineno=16, col_offset=26)], None, None, [Str('strict', lineno=16, col_offset=33)]), [Return(Call(Attribute(Name('codecs', Load(), lineno=17, col_offset=15), 'charmap_encode', Load(), lineno=17, col_offset=15), [Name('input', Load(), lineno=17, col_offset=37), Name('errors', Load(), lineno=17, col_offset=43), Name('encoding_map', Load(), lineno=17, col_offset=50)], [], None, None, lineno=17, col_offset=15), lineno=17, col_offset=8)], [], lineno=16, col_offset=4), FunctionDef('decode', arguments([Name('self', Param(), lineno=19, col_offset=15), Name('input', Param(), lineno=19, col_offset=20), Name('errors', Param(), lineno=19, col_offset=26)], None, None, [Str('strict', lineno=19, col_offset=33)]), [Return(Call(Attribute(Name('codecs', Load(), lineno=20, col_offset=15), 'charmap_decode', Load(), lineno=20, col_offset=15), [Name('input', Load(), lineno=20, col_offset=37), Name('errors', Load(), lineno=20, col_offset=43), Name('decoding_map', Load(), lineno=20, col_offset=50)], [], None, None, lineno=20, col_offset=15), lineno=20, col_offset=8)], [], lineno=19, col_offset=4)], [], lineno=14, col_offset=0), ClassDef('IncrementalEncoder', [Attribute(Name('codecs', Load(), lineno=22, col_offset=25), 'IncrementalEncoder', Load(), lineno=22, col_offset=25)], [FunctionDef('encode', arguments([Name('self', Param(), lineno=23, col_offset=15), Name('input', Param(), lineno=23, col_offset=21), Name('final', Param(), lineno=23, col_offset=28)], None, None, [Name('False', Load(), lineno=23, col_offset=34)]), [Return(Subscript(Call(Attribute(Name('codecs', Load(), lineno=24, col_offset=15), 'charmap_encode', Load(), lineno=24, col_offset=15), [Name('input', Load(), lineno=24, col_offset=37), Attribute(Name('self', Load(), lineno=24, col_offset=43), 'errors', Load(), lineno=24, col_offset=43), Name('encoding_map', Load(), lineno=24, col_offset=55)], [], None, None, lineno=24, col_offset=15), Index(Num(0, lineno=24, col_offset=69)), Load(), lineno=24, col_offset=15), lineno=24, col_offset=8)], [], lineno=23, col_offset=4)], [], lineno=22, col_offset=0), ClassDef('IncrementalDecoder', [Attribute(Name('codecs', Load(), lineno=26, col_offset=25), 'IncrementalDecoder', Load(), lineno=26, col_offset=25)], [FunctionDef('decode', arguments([Name('self', Param(), lineno=27, col_offset=15), Name('input', Param(), lineno=27, col_offset=21), Name('final', Param(), lineno=27, col_offset=28)], None, None, [Name('False', Load(), lineno=27, col_offset=34)]), [Return(Subscript(Call(Attribute(Name('codecs', Load(), lineno=28, col_offset=15), 'charmap_decode', Load(), lineno=28, col_offset=15), [Name('input', Load(), lineno=28, col_offset=37), Attribute(Name('self', Load(), lineno=28, col_offset=43), 'errors', Load(), lineno=28, col_offset=43), Name('decoding_map', Load(), lineno=28, col_offset=55)], [], None, None, lineno=28, col_offset=15), Index(Num(0, lineno=28, col_offset=69)), Load(), lineno=28, col_offset=15), lineno=28, col_offset=8)], [], lineno=27, col_offset=4)], [], lineno=26, col_offset=0), ClassDef('StreamWriter', [Name('Codec', Load(), lineno=30, col_offset=19), Attribute(Name('codecs', Load(), lineno=30, col_offset=25), 'StreamWriter', Load(), lineno=30, col_offset=25)], [Pass( lineno=31, col_offset=4)], [], lineno=30, col_offset=0), ClassDef('StreamReader', [Name('Codec', Load(), lineno=33, col_offset=19), Attribute(Name('codecs', Load(), lineno=33, col_offset=25), 'StreamReader', Load(), lineno=33, col_offset=25)], [Pass( lineno=34, col_offset=4)], [], lineno=33, col_offset=0), FunctionDef('getregentry', arguments([], None, None, []), [Return(Call(Attribute(Name('codecs', Load(), lineno=39, col_offset=11), 'CodecInfo', Load(), lineno=39, col_offset=11), [], [keyword('name', Str('rot-13', lineno=40, col_offset=13)), keyword('encode', Attribute(Call(Name('Codec', Load(), lineno=41, col_offset=15), [], [], None, None, lineno=41, col_offset=15), 'encode', Load(), lineno=41, col_offset=15)), keyword('decode', Attribute(Call(Name('Codec', Load(), lineno=42, col_offset=15), [], [], None, None, lineno=42, col_offset=15), 'decode', Load(), lineno=42, col_offset=15)), keyword('incrementalencoder', Name('IncrementalEncoder', Load(), lineno=43, col_offset=27)), keyword('incrementaldecoder', Name('IncrementalDecoder', Load(), lineno=44, col_offset=27)), keyword('streamwriter', Name('StreamWriter', Load(), lineno=45, col_offset=21)), keyword('streamreader', Name('StreamReader', Load(), lineno=46, col_offset=21))], None, None, lineno=39, col_offset=11), lineno=39, col_offset=4)], [], lineno=38, col_offset=0), Assign([Name('decoding_map', Store(), lineno=51, col_offset=0)], Call(Attribute(Name('codecs', Load(), lineno=51, col_offset=15), 'make_identity_dict', Load(), lineno=51, col_offset=15), [Call(Name('range', Load(), lineno=51, col_offset=41), [Num(256, lineno=51, col_offset=47)], [], None, None, lineno=51, col_offset=41)], [], None, None, lineno=51, col_offset=15), lineno=51, col_offset=0), Expr(Call(Attribute(Name('decoding_map', Load(), lineno=52, col_offset=0), 'update', Load(), lineno=52, col_offset=0), [Dict([Num(65, lineno=53, col_offset=3), Num(66, lineno=54, col_offset=3), Num(67, lineno=55, col_offset=3), Num(68, lineno=56, col_offset=3), Num(69, lineno=57, col_offset=3), Num(70, lineno=58, col_offset=3), Num(71, lineno=59, col_offset=3), Num(72, lineno=60, col_offset=3), Num(73, lineno=61, col_offset=3), Num(74, lineno=62, col_offset=3), Num(75, lineno=63, col_offset=3), Num(76, lineno=64, col_offset=3), Num(77, lineno=65, col_offset=3), Num(78, lineno=66, col_offset=3), Num(79, lineno=67, col_offset=3), Num(80, lineno=68, col_offset=3), Num(81, lineno=69, col_offset=3), Num(82, lineno=70, col_offset=3), Num(83, lineno=71, col_offset=3), Num(84, lineno=72, col_offset=3), Num(85, lineno=73, col_offset=3), Num(86, lineno=74, col_offset=3), Num(87, lineno=75, col_offset=3), Num(88, lineno=76, col_offset=3), Num(89, lineno=77, col_offset=3), Num(90, lineno=78, col_offset=3), Num(97, lineno=79, col_offset=3), Num(98, lineno=80, col_offset=3), Num(99, lineno=81, col_offset=3), Num(100, lineno=82, col_offset=3), Num(101, lineno=83, col_offset=3), Num(102, lineno=84, col_offset=3), Num(103, lineno=85, col_offset=3), Num(104, lineno=86, col_offset=3), Num(105, lineno=87, col_offset=3), Num(106, lineno=88, col_offset=3), Num(107, lineno=89, col_offset=3), Num(108, lineno=90, col_offset=3), Num(109, lineno=91, col_offset=3), Num(110, lineno=92, col_offset=3), Num(111, lineno=93, col_offset=3), Num(112, lineno=94, col_offset=3), Num(113, lineno=95, col_offset=3), Num(114, lineno=96, col_offset=3), Num(115, lineno=97, col_offset=3), Num(116, lineno=98, col_offset=3), Num(117, lineno=99, col_offset=3), Num(118, lineno=100, col_offset=3), Num(119, lineno=101, col_offset=3), Num(120, lineno=102, col_offset=3), Num(121, lineno=103, col_offset=3), Num(122, lineno=104, col_offset=3)], [Num(78, lineno=53, col_offset=11), Num(79, lineno=54, col_offset=11), Num(80, lineno=55, col_offset=11), Num(81, lineno=56, col_offset=11), Num(82, lineno=57, col_offset=11), Num(83, lineno=58, col_offset=11), Num(84, lineno=59, col_offset=11), Num(85, lineno=60, col_offset=11), Num(86, lineno=61, col_offset=11), Num(87, lineno=62, col_offset=11), Num(88, lineno=63, col_offset=11), Num(89, lineno=64, col_offset=11), Num(90, lineno=65, col_offset=11), Num(65, lineno=66, col_offset=11), Num(66, lineno=67, col_offset=11), Num(67, lineno=68, col_offset=11), Num(68, lineno=69, col_offset=11), Num(69, lineno=70, col_offset=11), Num(70, lineno=71, col_offset=11), Num(71, lineno=72, col_offset=11), Num(72, lineno=73, col_offset=11), Num(73, lineno=74, col_offset=11), Num(74, lineno=75, col_offset=11), Num(75, lineno=76, col_offset=11), Num(76, lineno=77, col_offset=11), Num(77, lineno=78, col_offset=11), Num(110, lineno=79, col_offset=11), Num(111, lineno=80, col_offset=11), Num(112, lineno=81, col_offset=11), Num(113, lineno=82, col_offset=11), Num(114, lineno=83, col_offset=11), Num(115, lineno=84, col_offset=11), Num(116, lineno=85, col_offset=11), Num(117, lineno=86, col_offset=11), Num(118, lineno=87, col_offset=11), Num(119, lineno=88, col_offset=11), Num(120, lineno=89, col_offset=11), Num(121, lineno=90, col_offset=11), Num(122, lineno=91, col_offset=11), Num(97, lineno=92, col_offset=11), Num(98, lineno=93, col_offset=11), Num(99, lineno=94, col_offset=11), Num(100, lineno=95, col_offset=11), Num(101, lineno=96, col_offset=11), Num(102, lineno=97, col_offset=11), Num(103, lineno=98, col_offset=11), Num(104, lineno=99, col_offset=11), Num(105, lineno=100, col_offset=11), Num(106, lineno=101, col_offset=11), Num(107, lineno=102, col_offset=11), Num(108, lineno=103, col_offset=11), Num(109, lineno=104, col_offset=11)], lineno=52, col_offset=20)], [], None, None, lineno=52, col_offset=0), lineno=52, col_offset=0), Assign([Name('encoding_map', Store(), lineno=109, col_offset=0)], Call(Attribute(Name('codecs', Load(), lineno=109, col_offset=15), 'make_encoding_map', Load(), lineno=109, col_offset=15), [Name('decoding_map', Load(), lineno=109, col_offset=40)], [], None, None, lineno=109, col_offset=15), lineno=109, col_offset=0), FunctionDef('rot13', arguments([Name('infile', Param(), lineno=113, col_offset=10), Name('outfile', Param(), lineno=113, col_offset=18)], None, None, []), [Expr(Call(Attribute(Name('outfile', Load(), lineno=114, col_offset=4), 'write', Load(), lineno=114, col_offset=4), [Call(Attribute(Call(Attribute(Name('infile', Load(), lineno=114, col_offset=18), 'read', Load(), lineno=114, col_offset=18), [], [], None, None, lineno=114, col_offset=18), 'encode', Load(), lineno=114, col_offset=18), [Str('rot-13', lineno=114, col_offset=39)], [], None, None, lineno=114, col_offset=18)], [], None, None, lineno=114, col_offset=4), lineno=114, col_offset=4)], [], lineno=113, col_offset=0), If(Compare(Name('__name__', Load(), lineno=116, col_offset=3), [Eq()], [Str('__main__', lineno=116, col_offset=15)], lineno=116, col_offset=3), [Import([alias('sys', None)], lineno=117, col_offset=4), Expr(Call(Name('rot13', Load(), lineno=118, col_offset=4), [Attribute(Name('sys', Load(), lineno=118, col_offset=10), 'stdin', Load(), lineno=118, col_offset=10), Attribute(Name('sys', Load(), lineno=118, col_offset=21), 'stdout', Load(), lineno=118, col_offset=21)], [], None, None, lineno=118, col_offset=4), lineno=118, col_offset=4)], [], lineno=116, col_offset=0)])
