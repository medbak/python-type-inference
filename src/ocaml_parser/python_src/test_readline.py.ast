Module([Expr(Str('\nVery minimal unittests for parts of the readline module.\n\nThese tests were added to check that the libedit emulation on OSX and\nthe "real" readline have the same interface for history manipulation. That\'s\nwhy the tests cover only a small subset of the interface.\n', lineno=7, col_offset=-1), lineno=7, col_offset=-1), Import([alias('unittest', None)], lineno=8, col_offset=0), ImportFrom('test.test_support', [alias('run_unittest', None), alias('import_module', None)], 0, lineno=9, col_offset=0), Assign([Name('readline', Store(), lineno=12, col_offset=0)], Call(Name('import_module', Load(), lineno=12, col_offset=11), [Str('readline', lineno=12, col_offset=25)], [], None, None, lineno=12, col_offset=11), lineno=12, col_offset=0), ClassDef('TestHistoryManipulation', [Attribute(Name('unittest', Load(), lineno=14, col_offset=31), 'TestCase', Load(), lineno=14, col_offset=31)], [FunctionDef('testHistoryUpdates', arguments([Name('self', Param(), lineno=15, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('readline', Load(), lineno=16, col_offset=8), 'clear_history', Load(), lineno=16, col_offset=8), [], [], None, None, lineno=16, col_offset=8), lineno=16, col_offset=8), Expr(Call(Attribute(Name('readline', Load(), lineno=18, col_offset=8), 'add_history', Load(), lineno=18, col_offset=8), [Str('first line', lineno=18, col_offset=29)], [], None, None, lineno=18, col_offset=8), lineno=18, col_offset=8), Expr(Call(Attribute(Name('readline', Load(), lineno=19, col_offset=8), 'add_history', Load(), lineno=19, col_offset=8), [Str('second line', lineno=19, col_offset=29)], [], None, None, lineno=19, col_offset=8), lineno=19, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=21, col_offset=8), 'assertEqual', Load(), lineno=21, col_offset=8), [Call(Attribute(Name('readline', Load(), lineno=21, col_offset=25), 'get_history_item', Load(), lineno=21, col_offset=25), [Num(0, lineno=21, col_offset=51)], [], None, None, lineno=21, col_offset=25), Name('None', Load(), lineno=21, col_offset=55)], [], None, None, lineno=21, col_offset=8), lineno=21, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=22, col_offset=8), 'assertEqual', Load(), lineno=22, col_offset=8), [Call(Attribute(Name('readline', Load(), lineno=22, col_offset=25), 'get_history_item', Load(), lineno=22, col_offset=25), [Num(1, lineno=22, col_offset=51)], [], None, None, lineno=22, col_offset=25), Str('first line', lineno=22, col_offset=55)], [], None, None, lineno=22, col_offset=8), lineno=22, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=23, col_offset=8), 'assertEqual', Load(), lineno=23, col_offset=8), [Call(Attribute(Name('readline', Load(), lineno=23, col_offset=25), 'get_history_item', Load(), lineno=23, col_offset=25), [Num(2, lineno=23, col_offset=51)], [], None, None, lineno=23, col_offset=25), Str('second line', lineno=23, col_offset=55)], [], None, None, lineno=23, col_offset=8), lineno=23, col_offset=8), Expr(Call(Attribute(Name('readline', Load(), lineno=25, col_offset=8), 'replace_history_item', Load(), lineno=25, col_offset=8), [Num(0, lineno=25, col_offset=38), Str('replaced line', lineno=25, col_offset=41)], [], None, None, lineno=25, col_offset=8), lineno=25, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=26, col_offset=8), 'assertEqual', Load(), lineno=26, col_offset=8), [Call(Attribute(Name('readline', Load(), lineno=26, col_offset=25), 'get_history_item', Load(), lineno=26, col_offset=25), [Num(0, lineno=26, col_offset=51)], [], None, None, lineno=26, col_offset=25), Name('None', Load(), lineno=26, col_offset=55)], [], None, None, lineno=26, col_offset=8), lineno=26, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=27, col_offset=8), 'assertEqual', Load(), lineno=27, col_offset=8), [Call(Attribute(Name('readline', Load(), lineno=27, col_offset=25), 'get_history_item', Load(), lineno=27, col_offset=25), [Num(1, lineno=27, col_offset=51)], [], None, None, lineno=27, col_offset=25), Str('replaced line', lineno=27, col_offset=55)], [], None, None, lineno=27, col_offset=8), lineno=27, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=28, col_offset=8), 'assertEqual', Load(), lineno=28, col_offset=8), [Call(Attribute(Name('readline', Load(), lineno=28, col_offset=25), 'get_history_item', Load(), lineno=28, col_offset=25), [Num(2, lineno=28, col_offset=51)], [], None, None, lineno=28, col_offset=25), Str('second line', lineno=28, col_offset=55)], [], None, None, lineno=28, col_offset=8), lineno=28, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=30, col_offset=8), 'assertEqual', Load(), lineno=30, col_offset=8), [Call(Attribute(Name('readline', Load(), lineno=30, col_offset=25), 'get_current_history_length', Load(), lineno=30, col_offset=25), [], [], None, None, lineno=30, col_offset=25), Num(2, lineno=30, col_offset=64)], [], None, None, lineno=30, col_offset=8), lineno=30, col_offset=8), Expr(Call(Attribute(Name('readline', Load(), lineno=32, col_offset=8), 'remove_history_item', Load(), lineno=32, col_offset=8), [Num(0, lineno=32, col_offset=37)], [], None, None, lineno=32, col_offset=8), lineno=32, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=33, col_offset=8), 'assertEqual', Load(), lineno=33, col_offset=8), [Call(Attribute(Name('readline', Load(), lineno=33, col_offset=25), 'get_history_item', Load(), lineno=33, col_offset=25), [Num(0, lineno=33, col_offset=51)], [], None, None, lineno=33, col_offset=25), Name('None', Load(), lineno=33, col_offset=55)], [], None, None, lineno=33, col_offset=8), lineno=33, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=34, col_offset=8), 'assertEqual', Load(), lineno=34, col_offset=8), [Call(Attribute(Name('readline', Load(), lineno=34, col_offset=25), 'get_history_item', Load(), lineno=34, col_offset=25), [Num(1, lineno=34, col_offset=51)], [], None, None, lineno=34, col_offset=25), Str('second line', lineno=34, col_offset=55)], [], None, None, lineno=34, col_offset=8), lineno=34, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=36, col_offset=8), 'assertEqual', Load(), lineno=36, col_offset=8), [Call(Attribute(Name('readline', Load(), lineno=36, col_offset=25), 'get_current_history_length', Load(), lineno=36, col_offset=25), [], [], None, None, lineno=36, col_offset=25), Num(1, lineno=36, col_offset=64)], [], None, None, lineno=36, col_offset=8), lineno=36, col_offset=8)], [], lineno=15, col_offset=4)], [], lineno=14, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Name('run_unittest', Load(), lineno=40, col_offset=4), [Name('TestHistoryManipulation', Load(), lineno=40, col_offset=17)], [], None, None, lineno=40, col_offset=4), lineno=40, col_offset=4)], [], lineno=39, col_offset=0), If(Compare(Name('__name__', Load(), lineno=42, col_offset=3), [Eq()], [Str('__main__', lineno=42, col_offset=15)], lineno=42, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=43, col_offset=4), [], [], None, None, lineno=43, col_offset=4), lineno=43, col_offset=4)], [], lineno=42, col_offset=0)])
