Module([Import([alias('unittest', None)], lineno=11, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=12, col_offset=0), ImportFrom('textwrap', [alias('TextWrapper', None), alias('wrap', None), alias('fill', None), alias('dedent', None)], 0, lineno=14, col_offset=0), ClassDef('BaseTestCase', [Attribute(Name('unittest', Load(), lineno=17, col_offset=19), 'TestCase', Load(), lineno=17, col_offset=19)], [Expr(Str('Parent class with utility methods for textwrap tests.', lineno=18, col_offset=4), lineno=18, col_offset=4), FunctionDef('show', arguments([Name('self', Param(), lineno=20, col_offset=13), Name('textin', Param(), lineno=20, col_offset=19)], None, None, []), [If(Call(Name('isinstance', Load(), lineno=21, col_offset=11), [Name('textin', Load(), lineno=21, col_offset=22), Name('list', Load(), lineno=21, col_offset=30)], [], None, None, lineno=21, col_offset=11), [Assign([Name('result', Store(), lineno=22, col_offset=12)], List([], Load(), lineno=22, col_offset=21), lineno=22, col_offset=12), For(Name('i', Store(), lineno=23, col_offset=16), Call(Name('range', Load(), lineno=23, col_offset=21), [Call(Name('len', Load(), lineno=23, col_offset=27), [Name('textin', Load(), lineno=23, col_offset=31)], [], None, None, lineno=23, col_offset=27)], [], None, None, lineno=23, col_offset=21), [Expr(Call(Attribute(Name('result', Load(), lineno=24, col_offset=16), 'append', Load(), lineno=24, col_offset=16), [BinOp(Str('  %d: %r', lineno=24, col_offset=30), Mod(), Tuple([Name('i', Load(), lineno=24, col_offset=44), Subscript(Name('textin', Load(), lineno=24, col_offset=47), Index(Name('i', Load(), lineno=24, col_offset=54)), Load(), lineno=24, col_offset=47)], Load(), lineno=24, col_offset=44), lineno=24, col_offset=30)], [], None, None, lineno=24, col_offset=16), lineno=24, col_offset=16)], [], lineno=23, col_offset=12), Assign([Name('result', Store(), lineno=25, col_offset=12)], Call(Attribute(Str('\n', lineno=25, col_offset=21), 'join', Load(), lineno=25, col_offset=21), [Name('result', Load(), lineno=25, col_offset=31)], [], None, None, lineno=25, col_offset=21), lineno=25, col_offset=12)], [If(Call(Name('isinstance', Load(), lineno=26, col_offset=13), [Name('textin', Load(), lineno=26, col_offset=24), Name('basestring', Load(), lineno=26, col_offset=32)], [], None, None, lineno=26, col_offset=13), [Assign([Name('result', Store(), lineno=27, col_offset=12)], BinOp(Str('  %s\n', lineno=27, col_offset=21), Mod(), Call(Name('repr', Load(), lineno=27, col_offset=32), [Name('textin', Load(), lineno=27, col_offset=37)], [], None, None, lineno=27, col_offset=32), lineno=27, col_offset=21), lineno=27, col_offset=12)], [], lineno=26, col_offset=13)], lineno=21, col_offset=8), Return(Name('result', Load(), lineno=28, col_offset=15), lineno=28, col_offset=8)], [], lineno=20, col_offset=4), FunctionDef('check', arguments([Name('self', Param(), lineno=31, col_offset=14), Name('result', Param(), lineno=31, col_offset=20), Name('expect', Param(), lineno=31, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=32, col_offset=8), 'assertEqual', Load(), lineno=32, col_offset=8), [Name('result', Load(), lineno=32, col_offset=25), Name('expect', Load(), lineno=32, col_offset=33), BinOp(Str('expected:\n%s\nbut got:\n%s', lineno=33, col_offset=12), Mod(), Tuple([Call(Attribute(Name('self', Load(), lineno=34, col_offset=16), 'show', Load(), lineno=34, col_offset=16), [Name('expect', Load(), lineno=34, col_offset=26)], [], None, None, lineno=34, col_offset=16), Call(Attribute(Name('self', Load(), lineno=34, col_offset=35), 'show', Load(), lineno=34, col_offset=35), [Name('result', Load(), lineno=34, col_offset=45)], [], None, None, lineno=34, col_offset=35)], Load(), lineno=34, col_offset=16), lineno=33, col_offset=12)], [], None, None, lineno=32, col_offset=8), lineno=32, col_offset=8)], [], lineno=31, col_offset=4), FunctionDef('check_wrap', arguments([Name('self', Param(), lineno=36, col_offset=19), Name('text', Param(), lineno=36, col_offset=25), Name('width', Param(), lineno=36, col_offset=31), Name('expect', Param(), lineno=36, col_offset=38)], None, 'kwargs', []), [Assign([Name('result', Store(), lineno=37, col_offset=8)], Call(Name('wrap', Load(), lineno=37, col_offset=17), [Name('text', Load(), lineno=37, col_offset=22), Name('width', Load(), lineno=37, col_offset=28)], [], None, Name('kwargs', Load(), lineno=37, col_offset=37), lineno=37, col_offset=17), lineno=37, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=38, col_offset=8), 'check', Load(), lineno=38, col_offset=8), [Name('result', Load(), lineno=38, col_offset=19), Name('expect', Load(), lineno=38, col_offset=27)], [], None, None, lineno=38, col_offset=8), lineno=38, col_offset=8)], [], lineno=36, col_offset=4), FunctionDef('check_split', arguments([Name('self', Param(), lineno=40, col_offset=20), Name('text', Param(), lineno=40, col_offset=26), Name('expect', Param(), lineno=40, col_offset=32)], None, None, []), [Assign([Name('result', Store(), lineno=41, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=41, col_offset=17), 'wrapper', Load(), lineno=41, col_offset=17), '_split', Load(), lineno=41, col_offset=17), [Name('text', Load(), lineno=41, col_offset=37)], [], None, None, lineno=41, col_offset=17), lineno=41, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=42, col_offset=8), 'assertEqual', Load(), lineno=42, col_offset=8), [Name('result', Load(), lineno=42, col_offset=25), Name('expect', Load(), lineno=42, col_offset=33), BinOp(Str('\nexpected %r\nbut got  %r', lineno=43, col_offset=25), Mod(), Tuple([Name('expect', Load(), lineno=44, col_offset=42), Name('result', Load(), lineno=44, col_offset=50)], Load(), lineno=44, col_offset=42), lineno=43, col_offset=25)], [], None, None, lineno=42, col_offset=8), lineno=42, col_offset=8)], [], lineno=40, col_offset=4)], [], lineno=17, col_offset=0), ClassDef('WrapTestCase', [Name('BaseTestCase', Load(), lineno=47, col_offset=19)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=49, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=50, col_offset=8), 'wrapper', Store(), lineno=50, col_offset=8)], Call(Name('TextWrapper', Load(), lineno=50, col_offset=23), [], [keyword('width', Num(45, lineno=50, col_offset=41))], None, None, lineno=50, col_offset=23), lineno=50, col_offset=8)], [], lineno=49, col_offset=4), FunctionDef('test_simple', arguments([Name('self', Param(), lineno=52, col_offset=20)], None, None, []), [Assign([Name('text', Store(), lineno=55, col_offset=8)], Str("Hello there, how are you this fine day?  I'm glad to hear it!", lineno=55, col_offset=15), lineno=55, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=57, col_offset=8), 'check_wrap', Load(), lineno=57, col_offset=8), [Name('text', Load(), lineno=57, col_offset=24), Num(12, lineno=57, col_offset=30), List([Str('Hello there,', lineno=58, col_offset=25), Str('how are you', lineno=59, col_offset=25), Str('this fine', lineno=60, col_offset=25), Str("day?  I'm", lineno=61, col_offset=25), Str('glad to hear', lineno=62, col_offset=25), Str('it!', lineno=63, col_offset=25)], Load(), lineno=58, col_offset=24)], [], None, None, lineno=57, col_offset=8), lineno=57, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=64, col_offset=8), 'check_wrap', Load(), lineno=64, col_offset=8), [Name('text', Load(), lineno=64, col_offset=24), Num(42, lineno=64, col_offset=30), List([Str('Hello there, how are you this fine day?', lineno=65, col_offset=25), Str("I'm glad to hear it!", lineno=66, col_offset=25)], Load(), lineno=65, col_offset=24)], [], None, None, lineno=64, col_offset=8), lineno=64, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=67, col_offset=8), 'check_wrap', Load(), lineno=67, col_offset=8), [Name('text', Load(), lineno=67, col_offset=24), Num(80, lineno=67, col_offset=30), List([Name('text', Load(), lineno=67, col_offset=35)], Load(), lineno=67, col_offset=34)], [], None, None, lineno=67, col_offset=8), lineno=67, col_offset=8)], [], lineno=52, col_offset=4), FunctionDef('test_whitespace', arguments([Name('self', Param(), lineno=70, col_offset=24)], None, None, []), [Assign([Name('text', Store(), lineno=73, col_offset=8)], Str('This is a paragraph that already has\nline breaks.  But some of its lines are much longer than the others,\nso it needs to be wrapped.\nSome lines are \ttabbed too.\nWhat a mess!\n', lineno=79, col_offset=-1), lineno=73, col_offset=8), Assign([Name('expect', Store(), lineno=81, col_offset=8)], List([Str('This is a paragraph that already has line', lineno=81, col_offset=18), Str('breaks.  But some of its lines are much', lineno=82, col_offset=18), Str('longer than the others, so it needs to be', lineno=83, col_offset=18), Str('wrapped.  Some lines are  tabbed too.  What a', lineno=84, col_offset=18), Str('mess!', lineno=85, col_offset=18)], Load(), lineno=81, col_offset=17), lineno=81, col_offset=8), Assign([Name('wrapper', Store(), lineno=87, col_offset=8)], Call(Name('TextWrapper', Load(), lineno=87, col_offset=18), [Num(45, lineno=87, col_offset=30)], [keyword('fix_sentence_endings', Name('True', Load(), lineno=87, col_offset=55))], None, None, lineno=87, col_offset=18), lineno=87, col_offset=8), Assign([Name('result', Store(), lineno=88, col_offset=8)], Call(Attribute(Name('wrapper', Load(), lineno=88, col_offset=17), 'wrap', Load(), lineno=88, col_offset=17), [Name('text', Load(), lineno=88, col_offset=30)], [], None, None, lineno=88, col_offset=17), lineno=88, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=89, col_offset=8), 'check', Load(), lineno=89, col_offset=8), [Name('result', Load(), lineno=89, col_offset=19), Name('expect', Load(), lineno=89, col_offset=27)], [], None, None, lineno=89, col_offset=8), lineno=89, col_offset=8), Assign([Name('result', Store(), lineno=91, col_offset=8)], Call(Attribute(Name('wrapper', Load(), lineno=91, col_offset=17), 'fill', Load(), lineno=91, col_offset=17), [Name('text', Load(), lineno=91, col_offset=30)], [], None, None, lineno=91, col_offset=17), lineno=91, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=92, col_offset=8), 'check', Load(), lineno=92, col_offset=8), [Name('result', Load(), lineno=92, col_offset=19), Call(Attribute(Str('\n', lineno=92, col_offset=27), 'join', Load(), lineno=92, col_offset=27), [Name('expect', Load(), lineno=92, col_offset=37)], [], None, None, lineno=92, col_offset=27)], [], None, None, lineno=92, col_offset=8), lineno=92, col_offset=8)], [], lineno=70, col_offset=4), FunctionDef('test_fix_sentence_endings', arguments([Name('self', Param(), lineno=94, col_offset=34)], None, None, []), [Assign([Name('wrapper', Store(), lineno=95, col_offset=8)], Call(Name('TextWrapper', Load(), lineno=95, col_offset=18), [Num(60, lineno=95, col_offset=30)], [keyword('fix_sentence_endings', Name('True', Load(), lineno=95, col_offset=55))], None, None, lineno=95, col_offset=18), lineno=95, col_offset=8), Assign([Name('text', Store(), lineno=100, col_offset=8)], Str('A short line. Note the single space.', lineno=100, col_offset=15), lineno=100, col_offset=8), Assign([Name('expect', Store(), lineno=101, col_offset=8)], List([Str('A short line.  Note the single space.', lineno=101, col_offset=18)], Load(), lineno=101, col_offset=17), lineno=101, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=102, col_offset=8), 'check', Load(), lineno=102, col_offset=8), [Call(Attribute(Name('wrapper', Load(), lineno=102, col_offset=19), 'wrap', Load(), lineno=102, col_offset=19), [Name('text', Load(), lineno=102, col_offset=32)], [], None, None, lineno=102, col_offset=19), Name('expect', Load(), lineno=102, col_offset=39)], [], None, None, lineno=102, col_offset=8), lineno=102, col_offset=8), Assign([Name('text', Store(), lineno=107, col_offset=8)], Str('Well, Doctor? What do you think?', lineno=107, col_offset=15), lineno=107, col_offset=8), Assign([Name('expect', Store(), lineno=108, col_offset=8)], List([Str('Well, Doctor?  What do you think?', lineno=108, col_offset=18)], Load(), lineno=108, col_offset=17), lineno=108, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=109, col_offset=8), 'check', Load(), lineno=109, col_offset=8), [Call(Attribute(Name('wrapper', Load(), lineno=109, col_offset=19), 'wrap', Load(), lineno=109, col_offset=19), [Name('text', Load(), lineno=109, col_offset=32)], [], None, None, lineno=109, col_offset=19), Name('expect', Load(), lineno=109, col_offset=39)], [], None, None, lineno=109, col_offset=8), lineno=109, col_offset=8), Assign([Name('text', Store(), lineno=111, col_offset=8)], Str('Well, Doctor?\nWhat do you think?', lineno=111, col_offset=15), lineno=111, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=112, col_offset=8), 'check', Load(), lineno=112, col_offset=8), [Call(Attribute(Name('wrapper', Load(), lineno=112, col_offset=19), 'wrap', Load(), lineno=112, col_offset=19), [Name('text', Load(), lineno=112, col_offset=32)], [], None, None, lineno=112, col_offset=19), Name('expect', Load(), lineno=112, col_offset=39)], [], None, None, lineno=112, col_offset=8), lineno=112, col_offset=8), Assign([Name('text', Store(), lineno=114, col_offset=8)], Str('I say, chaps! Anyone for "tennis?"\nHmmph!', lineno=114, col_offset=15), lineno=114, col_offset=8), Assign([Name('expect', Store(), lineno=115, col_offset=8)], List([Str('I say, chaps!  Anyone for "tennis?"  Hmmph!', lineno=115, col_offset=18)], Load(), lineno=115, col_offset=17), lineno=115, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=116, col_offset=8), 'check', Load(), lineno=116, col_offset=8), [Call(Attribute(Name('wrapper', Load(), lineno=116, col_offset=19), 'wrap', Load(), lineno=116, col_offset=19), [Name('text', Load(), lineno=116, col_offset=32)], [], None, None, lineno=116, col_offset=19), Name('expect', Load(), lineno=116, col_offset=39)], [], None, None, lineno=116, col_offset=8), lineno=116, col_offset=8), Assign([Attribute(Name('wrapper', Load(), lineno=118, col_offset=8), 'width', Store(), lineno=118, col_offset=8)], Num(20, lineno=118, col_offset=24), lineno=118, col_offset=8), Assign([Name('expect', Store(), lineno=119, col_offset=8)], List([Str('I say, chaps!', lineno=119, col_offset=18), Str('Anyone for "tennis?"', lineno=119, col_offset=35), Str('Hmmph!', lineno=119, col_offset=59)], Load(), lineno=119, col_offset=17), lineno=119, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=120, col_offset=8), 'check', Load(), lineno=120, col_offset=8), [Call(Attribute(Name('wrapper', Load(), lineno=120, col_offset=19), 'wrap', Load(), lineno=120, col_offset=19), [Name('text', Load(), lineno=120, col_offset=32)], [], None, None, lineno=120, col_offset=19), Name('expect', Load(), lineno=120, col_offset=39)], [], None, None, lineno=120, col_offset=8), lineno=120, col_offset=8), Assign([Name('text', Store(), lineno=122, col_offset=8)], Str('And she said, "Go to hell!"\nCan you believe that?', lineno=122, col_offset=15), lineno=122, col_offset=8), Assign([Name('expect', Store(), lineno=123, col_offset=8)], List([Str('And she said, "Go to', lineno=123, col_offset=18), Str('hell!"  Can you', lineno=124, col_offset=18), Str('believe that?', lineno=125, col_offset=18)], Load(), lineno=123, col_offset=17), lineno=123, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=126, col_offset=8), 'check', Load(), lineno=126, col_offset=8), [Call(Attribute(Name('wrapper', Load(), lineno=126, col_offset=19), 'wrap', Load(), lineno=126, col_offset=19), [Name('text', Load(), lineno=126, col_offset=32)], [], None, None, lineno=126, col_offset=19), Name('expect', Load(), lineno=126, col_offset=39)], [], None, None, lineno=126, col_offset=8), lineno=126, col_offset=8), Assign([Attribute(Name('wrapper', Load(), lineno=128, col_offset=8), 'width', Store(), lineno=128, col_offset=8)], Num(60, lineno=128, col_offset=24), lineno=128, col_offset=8), Assign([Name('expect', Store(), lineno=129, col_offset=8)], List([Str('And she said, "Go to hell!"  Can you believe that?', lineno=129, col_offset=18)], Load(), lineno=129, col_offset=17), lineno=129, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=130, col_offset=8), 'check', Load(), lineno=130, col_offset=8), [Call(Attribute(Name('wrapper', Load(), lineno=130, col_offset=19), 'wrap', Load(), lineno=130, col_offset=19), [Name('text', Load(), lineno=130, col_offset=32)], [], None, None, lineno=130, col_offset=19), Name('expect', Load(), lineno=130, col_offset=39)], [], None, None, lineno=130, col_offset=8), lineno=130, col_offset=8), Assign([Name('text', Store(), lineno=132, col_offset=8)], Str('File stdio.h is nice.', lineno=132, col_offset=15), lineno=132, col_offset=8), Assign([Name('expect', Store(), lineno=133, col_offset=8)], List([Str('File stdio.h is nice.', lineno=133, col_offset=18)], Load(), lineno=133, col_offset=17), lineno=133, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=134, col_offset=8), 'check', Load(), lineno=134, col_offset=8), [Call(Attribute(Name('wrapper', Load(), lineno=134, col_offset=19), 'wrap', Load(), lineno=134, col_offset=19), [Name('text', Load(), lineno=134, col_offset=32)], [], None, None, lineno=134, col_offset=19), Name('expect', Load(), lineno=134, col_offset=39)], [], None, None, lineno=134, col_offset=8), lineno=134, col_offset=8)], [], lineno=94, col_offset=4), FunctionDef('test_wrap_short', arguments([Name('self', Param(), lineno=136, col_offset=24)], None, None, []), [Assign([Name('text', Store(), lineno=139, col_offset=8)], Str('This is a\nshort paragraph.', lineno=139, col_offset=15), lineno=139, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=141, col_offset=8), 'check_wrap', Load(), lineno=141, col_offset=8), [Name('text', Load(), lineno=141, col_offset=24), Num(20, lineno=141, col_offset=30), List([Str('This is a short', lineno=141, col_offset=35), Str('paragraph.', lineno=142, col_offset=35)], Load(), lineno=141, col_offset=34)], [], None, None, lineno=141, col_offset=8), lineno=141, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=143, col_offset=8), 'check_wrap', Load(), lineno=143, col_offset=8), [Name('text', Load(), lineno=143, col_offset=24), Num(40, lineno=143, col_offset=30), List([Str('This is a short paragraph.', lineno=143, col_offset=35)], Load(), lineno=143, col_offset=34)], [], None, None, lineno=143, col_offset=8), lineno=143, col_offset=8)], [], lineno=136, col_offset=4), FunctionDef('test_wrap_short_1line', arguments([Name('self', Param(), lineno=146, col_offset=30)], None, None, []), [Assign([Name('text', Store(), lineno=149, col_offset=8)], Str('This is a short line.', lineno=149, col_offset=15), lineno=149, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=151, col_offset=8), 'check_wrap', Load(), lineno=151, col_offset=8), [Name('text', Load(), lineno=151, col_offset=24), Num(30, lineno=151, col_offset=30), List([Str('This is a short line.', lineno=151, col_offset=35)], Load(), lineno=151, col_offset=34)], [], None, None, lineno=151, col_offset=8), lineno=151, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=152, col_offset=8), 'check_wrap', Load(), lineno=152, col_offset=8), [Name('text', Load(), lineno=152, col_offset=24), Num(30, lineno=152, col_offset=30), List([Str('(1) This is a short line.', lineno=152, col_offset=35)], Load(), lineno=152, col_offset=34)], [keyword('initial_indent', Str('(1) ', lineno=153, col_offset=39))], None, None, lineno=152, col_offset=8), lineno=152, col_offset=8)], [], lineno=146, col_offset=4), FunctionDef('test_hyphenated', arguments([Name('self', Param(), lineno=156, col_offset=24)], None, None, []), [Assign([Name('text', Store(), lineno=159, col_offset=8)], Str("this-is-a-useful-feature-for-reformatting-posts-from-tim-peters'ly", lineno=159, col_offset=16), lineno=159, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=162, col_offset=8), 'check_wrap', Load(), lineno=162, col_offset=8), [Name('text', Load(), lineno=162, col_offset=24), Num(40, lineno=162, col_offset=30), List([Str('this-is-a-useful-feature-for-', lineno=163, col_offset=25), Str("reformatting-posts-from-tim-peters'ly", lineno=164, col_offset=25)], Load(), lineno=163, col_offset=24)], [], None, None, lineno=162, col_offset=8), lineno=162, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=165, col_offset=8), 'check_wrap', Load(), lineno=165, col_offset=8), [Name('text', Load(), lineno=165, col_offset=24), Num(41, lineno=165, col_offset=30), List([Str('this-is-a-useful-feature-for-', lineno=166, col_offset=25), Str("reformatting-posts-from-tim-peters'ly", lineno=167, col_offset=25)], Load(), lineno=166, col_offset=24)], [], None, None, lineno=165, col_offset=8), lineno=165, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=168, col_offset=8), 'check_wrap', Load(), lineno=168, col_offset=8), [Name('text', Load(), lineno=168, col_offset=24), Num(42, lineno=168, col_offset=30), List([Str('this-is-a-useful-feature-for-reformatting-', lineno=169, col_offset=25), Str("posts-from-tim-peters'ly", lineno=170, col_offset=25)], Load(), lineno=169, col_offset=24)], [], None, None, lineno=168, col_offset=8), lineno=168, col_offset=8)], [], lineno=156, col_offset=4), FunctionDef('test_hyphenated_numbers', arguments([Name('self', Param(), lineno=172, col_offset=32)], None, None, []), [Assign([Name('text', Store(), lineno=174, col_offset=8)], Str('Python 1.0.0 was released on 1994-01-26.  Python 1.0.1 was\nreleased on 1994-02-15.', lineno=174, col_offset=16), lineno=174, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=177, col_offset=8), 'check_wrap', Load(), lineno=177, col_offset=8), [Name('text', Load(), lineno=177, col_offset=24), Num(35, lineno=177, col_offset=30), List([Str('Python 1.0.0 was released on', lineno=177, col_offset=35), Str('1994-01-26.  Python 1.0.1 was', lineno=178, col_offset=35), Str('released on 1994-02-15.', lineno=179, col_offset=35)], Load(), lineno=177, col_offset=34)], [], None, None, lineno=177, col_offset=8), lineno=177, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=180, col_offset=8), 'check_wrap', Load(), lineno=180, col_offset=8), [Name('text', Load(), lineno=180, col_offset=24), Num(40, lineno=180, col_offset=30), List([Str('Python 1.0.0 was released on 1994-01-26.', lineno=180, col_offset=35), Str('Python 1.0.1 was released on 1994-02-15.', lineno=181, col_offset=35)], Load(), lineno=180, col_offset=34)], [], None, None, lineno=180, col_offset=8), lineno=180, col_offset=8), Assign([Name('text', Store(), lineno=183, col_offset=8)], Str('I do all my shopping at 7-11.', lineno=183, col_offset=15), lineno=183, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=184, col_offset=8), 'check_wrap', Load(), lineno=184, col_offset=8), [Name('text', Load(), lineno=184, col_offset=24), Num(25, lineno=184, col_offset=30), List([Str('I do all my shopping at', lineno=184, col_offset=35), Str('7-11.', lineno=185, col_offset=35)], Load(), lineno=184, col_offset=34)], [], None, None, lineno=184, col_offset=8), lineno=184, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=186, col_offset=8), 'check_wrap', Load(), lineno=186, col_offset=8), [Name('text', Load(), lineno=186, col_offset=24), Num(27, lineno=186, col_offset=30), List([Str('I do all my shopping at', lineno=186, col_offset=35), Str('7-11.', lineno=187, col_offset=35)], Load(), lineno=186, col_offset=34)], [], None, None, lineno=186, col_offset=8), lineno=186, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=188, col_offset=8), 'check_wrap', Load(), lineno=188, col_offset=8), [Name('text', Load(), lineno=188, col_offset=24), Num(29, lineno=188, col_offset=30), List([Str('I do all my shopping at 7-11.', lineno=188, col_offset=35)], Load(), lineno=188, col_offset=34)], [], None, None, lineno=188, col_offset=8), lineno=188, col_offset=8)], [], lineno=172, col_offset=4), FunctionDef('test_em_dash', arguments([Name('self', Param(), lineno=190, col_offset=21)], None, None, []), [Assign([Name('text', Store(), lineno=192, col_offset=8)], Str('Em-dashes should be written -- thus.', lineno=192, col_offset=15), lineno=192, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=193, col_offset=8), 'check_wrap', Load(), lineno=193, col_offset=8), [Name('text', Load(), lineno=193, col_offset=24), Num(25, lineno=193, col_offset=30), List([Str('Em-dashes should be', lineno=194, col_offset=25), Str('written -- thus.', lineno=195, col_offset=25)], Load(), lineno=194, col_offset=24)], [], None, None, lineno=193, col_offset=8), lineno=193, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=199, col_offset=8), 'check_wrap', Load(), lineno=199, col_offset=8), [Name('text', Load(), lineno=199, col_offset=24), Num(29, lineno=199, col_offset=30), List([Str('Em-dashes should be written', lineno=200, col_offset=25), Str('-- thus.', lineno=201, col_offset=25)], Load(), lineno=200, col_offset=24)], [], None, None, lineno=199, col_offset=8), lineno=199, col_offset=8), Assign([Name('expect', Store(), lineno=202, col_offset=8)], List([Str('Em-dashes should be written --', lineno=202, col_offset=18), Str('thus.', lineno=203, col_offset=18)], Load(), lineno=202, col_offset=17), lineno=202, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=204, col_offset=8), 'check_wrap', Load(), lineno=204, col_offset=8), [Name('text', Load(), lineno=204, col_offset=24), Num(30, lineno=204, col_offset=30), Name('expect', Load(), lineno=204, col_offset=34)], [], None, None, lineno=204, col_offset=8), lineno=204, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=205, col_offset=8), 'check_wrap', Load(), lineno=205, col_offset=8), [Name('text', Load(), lineno=205, col_offset=24), Num(35, lineno=205, col_offset=30), Name('expect', Load(), lineno=205, col_offset=34)], [], None, None, lineno=205, col_offset=8), lineno=205, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=206, col_offset=8), 'check_wrap', Load(), lineno=206, col_offset=8), [Name('text', Load(), lineno=206, col_offset=24), Num(36, lineno=206, col_offset=30), List([Str('Em-dashes should be written -- thus.', lineno=207, col_offset=25)], Load(), lineno=207, col_offset=24)], [], None, None, lineno=206, col_offset=8), lineno=206, col_offset=8), Assign([Name('text', Store(), lineno=211, col_offset=8)], Str('You can also do--this or even---this.', lineno=211, col_offset=15), lineno=211, col_offset=8), Assign([Name('expect', Store(), lineno=212, col_offset=8)], List([Str('You can also do', lineno=212, col_offset=18), Str('--this or even', lineno=213, col_offset=18), Str('---this.', lineno=214, col_offset=18)], Load(), lineno=212, col_offset=17), lineno=212, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=215, col_offset=8), 'check_wrap', Load(), lineno=215, col_offset=8), [Name('text', Load(), lineno=215, col_offset=24), Num(15, lineno=215, col_offset=30), Name('expect', Load(), lineno=215, col_offset=34)], [], None, None, lineno=215, col_offset=8), lineno=215, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=216, col_offset=8), 'check_wrap', Load(), lineno=216, col_offset=8), [Name('text', Load(), lineno=216, col_offset=24), Num(16, lineno=216, col_offset=30), Name('expect', Load(), lineno=216, col_offset=34)], [], None, None, lineno=216, col_offset=8), lineno=216, col_offset=8), Assign([Name('expect', Store(), lineno=217, col_offset=8)], List([Str('You can also do--', lineno=217, col_offset=18), Str('this or even---', lineno=218, col_offset=18), Str('this.', lineno=219, col_offset=18)], Load(), lineno=217, col_offset=17), lineno=217, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=220, col_offset=8), 'check_wrap', Load(), lineno=220, col_offset=8), [Name('text', Load(), lineno=220, col_offset=24), Num(17, lineno=220, col_offset=30), Name('expect', Load(), lineno=220, col_offset=34)], [], None, None, lineno=220, col_offset=8), lineno=220, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=221, col_offset=8), 'check_wrap', Load(), lineno=221, col_offset=8), [Name('text', Load(), lineno=221, col_offset=24), Num(19, lineno=221, col_offset=30), Name('expect', Load(), lineno=221, col_offset=34)], [], None, None, lineno=221, col_offset=8), lineno=221, col_offset=8), Assign([Name('expect', Store(), lineno=222, col_offset=8)], List([Str('You can also do--this or even', lineno=222, col_offset=18), Str('---this.', lineno=223, col_offset=18)], Load(), lineno=222, col_offset=17), lineno=222, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=224, col_offset=8), 'check_wrap', Load(), lineno=224, col_offset=8), [Name('text', Load(), lineno=224, col_offset=24), Num(29, lineno=224, col_offset=30), Name('expect', Load(), lineno=224, col_offset=34)], [], None, None, lineno=224, col_offset=8), lineno=224, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=225, col_offset=8), 'check_wrap', Load(), lineno=225, col_offset=8), [Name('text', Load(), lineno=225, col_offset=24), Num(31, lineno=225, col_offset=30), Name('expect', Load(), lineno=225, col_offset=34)], [], None, None, lineno=225, col_offset=8), lineno=225, col_offset=8), Assign([Name('expect', Store(), lineno=226, col_offset=8)], List([Str('You can also do--this or even---', lineno=226, col_offset=18), Str('this.', lineno=227, col_offset=18)], Load(), lineno=226, col_offset=17), lineno=226, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=228, col_offset=8), 'check_wrap', Load(), lineno=228, col_offset=8), [Name('text', Load(), lineno=228, col_offset=24), Num(32, lineno=228, col_offset=30), Name('expect', Load(), lineno=228, col_offset=34)], [], None, None, lineno=228, col_offset=8), lineno=228, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=229, col_offset=8), 'check_wrap', Load(), lineno=229, col_offset=8), [Name('text', Load(), lineno=229, col_offset=24), Num(35, lineno=229, col_offset=30), Name('expect', Load(), lineno=229, col_offset=34)], [], None, None, lineno=229, col_offset=8), lineno=229, col_offset=8), Assign([Name('text', Store(), lineno=233, col_offset=8)], Str("Here's an -- em-dash and--here's another---and another!", lineno=233, col_offset=15), lineno=233, col_offset=8), Assign([Name('expect', Store(), lineno=234, col_offset=8)], List([Str("Here's", lineno=234, col_offset=18), Str(' ', lineno=234, col_offset=28), Str('an', lineno=234, col_offset=33), Str(' ', lineno=234, col_offset=39), Str('--', lineno=234, col_offset=44), Str(' ', lineno=234, col_offset=50), Str('em-', lineno=234, col_offset=55), Str('dash', lineno=234, col_offset=62), Str(' ', lineno=234, col_offset=70), Str('and', lineno=235, col_offset=18), Str('--', lineno=235, col_offset=25), Str("here's", lineno=235, col_offset=31), Str(' ', lineno=235, col_offset=41), Str('another', lineno=235, col_offset=46), Str('---', lineno=235, col_offset=57), Str('and', lineno=236, col_offset=18), Str(' ', lineno=236, col_offset=25), Str('another!', lineno=236, col_offset=30)], Load(), lineno=234, col_offset=17), lineno=234, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=237, col_offset=8), 'check_split', Load(), lineno=237, col_offset=8), [Name('text', Load(), lineno=237, col_offset=25), Name('expect', Load(), lineno=237, col_offset=31)], [], None, None, lineno=237, col_offset=8), lineno=237, col_offset=8), Assign([Name('text', Store(), lineno=239, col_offset=8)], Str('and then--bam!--he was gone', lineno=239, col_offset=15), lineno=239, col_offset=8), Assign([Name('expect', Store(), lineno=240, col_offset=8)], List([Str('and', lineno=240, col_offset=18), Str(' ', lineno=240, col_offset=25), Str('then', lineno=240, col_offset=30), Str('--', lineno=240, col_offset=38), Str('bam!', lineno=240, col_offset=44), Str('--', lineno=240, col_offset=52), Str('he', lineno=241, col_offset=18), Str(' ', lineno=241, col_offset=24), Str('was', lineno=241, col_offset=29), Str(' ', lineno=241, col_offset=36), Str('gone', lineno=241, col_offset=41)], Load(), lineno=240, col_offset=17), lineno=240, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=242, col_offset=8), 'check_split', Load(), lineno=242, col_offset=8), [Name('text', Load(), lineno=242, col_offset=25), Name('expect', Load(), lineno=242, col_offset=31)], [], None, None, lineno=242, col_offset=8), lineno=242, col_offset=8)], [], lineno=190, col_offset=4), FunctionDef('test_unix_options', arguments([Name('self', Param(), lineno=245, col_offset=27)], None, None, []), [Assign([Name('text', Store(), lineno=249, col_offset=8)], Str('You should use the -n option, or --dry-run in its long form.', lineno=249, col_offset=15), lineno=249, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=250, col_offset=8), 'check_wrap', Load(), lineno=250, col_offset=8), [Name('text', Load(), lineno=250, col_offset=24), Num(20, lineno=250, col_offset=30), List([Str('You should use the', lineno=251, col_offset=25), Str('-n option, or --dry-', lineno=252, col_offset=25), Str('run in its long', lineno=253, col_offset=25), Str('form.', lineno=254, col_offset=25)], Load(), lineno=251, col_offset=24)], [], None, None, lineno=250, col_offset=8), lineno=250, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=255, col_offset=8), 'check_wrap', Load(), lineno=255, col_offset=8), [Name('text', Load(), lineno=255, col_offset=24), Num(21, lineno=255, col_offset=30), List([Str('You should use the -n', lineno=256, col_offset=25), Str('option, or --dry-run', lineno=257, col_offset=25), Str('in its long form.', lineno=258, col_offset=25)], Load(), lineno=256, col_offset=24)], [], None, None, lineno=255, col_offset=8), lineno=255, col_offset=8), Assign([Name('expect', Store(), lineno=259, col_offset=8)], List([Str('You should use the -n option, or', lineno=259, col_offset=18), Str('--dry-run in its long form.', lineno=260, col_offset=18)], Load(), lineno=259, col_offset=17), lineno=259, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=261, col_offset=8), 'check_wrap', Load(), lineno=261, col_offset=8), [Name('text', Load(), lineno=261, col_offset=24), Num(32, lineno=261, col_offset=30), Name('expect', Load(), lineno=261, col_offset=34)], [], None, None, lineno=261, col_offset=8), lineno=261, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=262, col_offset=8), 'check_wrap', Load(), lineno=262, col_offset=8), [Name('text', Load(), lineno=262, col_offset=24), Num(34, lineno=262, col_offset=30), Name('expect', Load(), lineno=262, col_offset=34)], [], None, None, lineno=262, col_offset=8), lineno=262, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=263, col_offset=8), 'check_wrap', Load(), lineno=263, col_offset=8), [Name('text', Load(), lineno=263, col_offset=24), Num(35, lineno=263, col_offset=30), Name('expect', Load(), lineno=263, col_offset=34)], [], None, None, lineno=263, col_offset=8), lineno=263, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=264, col_offset=8), 'check_wrap', Load(), lineno=264, col_offset=8), [Name('text', Load(), lineno=264, col_offset=24), Num(38, lineno=264, col_offset=30), Name('expect', Load(), lineno=264, col_offset=34)], [], None, None, lineno=264, col_offset=8), lineno=264, col_offset=8), Assign([Name('expect', Store(), lineno=265, col_offset=8)], List([Str('You should use the -n option, or --dry-', lineno=265, col_offset=18), Str('run in its long form.', lineno=266, col_offset=18)], Load(), lineno=265, col_offset=17), lineno=265, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=267, col_offset=8), 'check_wrap', Load(), lineno=267, col_offset=8), [Name('text', Load(), lineno=267, col_offset=24), Num(39, lineno=267, col_offset=30), Name('expect', Load(), lineno=267, col_offset=34)], [], None, None, lineno=267, col_offset=8), lineno=267, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=268, col_offset=8), 'check_wrap', Load(), lineno=268, col_offset=8), [Name('text', Load(), lineno=268, col_offset=24), Num(41, lineno=268, col_offset=30), Name('expect', Load(), lineno=268, col_offset=34)], [], None, None, lineno=268, col_offset=8), lineno=268, col_offset=8), Assign([Name('expect', Store(), lineno=269, col_offset=8)], List([Str('You should use the -n option, or --dry-run', lineno=269, col_offset=18), Str('in its long form.', lineno=270, col_offset=18)], Load(), lineno=269, col_offset=17), lineno=269, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=271, col_offset=8), 'check_wrap', Load(), lineno=271, col_offset=8), [Name('text', Load(), lineno=271, col_offset=24), Num(42, lineno=271, col_offset=30), Name('expect', Load(), lineno=271, col_offset=34)], [], None, None, lineno=271, col_offset=8), lineno=271, col_offset=8), Assign([Name('text', Store(), lineno=274, col_offset=8)], Str('the -n option, or --dry-run or --dryrun', lineno=274, col_offset=15), lineno=274, col_offset=8), Assign([Name('expect', Store(), lineno=275, col_offset=8)], List([Str('the', lineno=275, col_offset=18), Str(' ', lineno=275, col_offset=25), Str('-n', lineno=275, col_offset=30), Str(' ', lineno=275, col_offset=36), Str('option,', lineno=275, col_offset=41), Str(' ', lineno=275, col_offset=52), Str('or', lineno=275, col_offset=57), Str(' ', lineno=275, col_offset=63), Str('--dry-', lineno=276, col_offset=18), Str('run', lineno=276, col_offset=28), Str(' ', lineno=276, col_offset=35), Str('or', lineno=276, col_offset=40), Str(' ', lineno=276, col_offset=46), Str('--dryrun', lineno=276, col_offset=51)], Load(), lineno=275, col_offset=17), lineno=275, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=277, col_offset=8), 'check_split', Load(), lineno=277, col_offset=8), [Name('text', Load(), lineno=277, col_offset=25), Name('expect', Load(), lineno=277, col_offset=31)], [], None, None, lineno=277, col_offset=8), lineno=277, col_offset=8)], [], lineno=245, col_offset=4), FunctionDef('test_funky_hyphens', arguments([Name('self', Param(), lineno=279, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=282, col_offset=8), 'check_split', Load(), lineno=282, col_offset=8), [Str('what the--hey!', lineno=282, col_offset=25), List([Str('what', lineno=282, col_offset=44), Str(' ', lineno=282, col_offset=52), Str('the', lineno=282, col_offset=57), Str('--', lineno=282, col_offset=64), Str('hey!', lineno=282, col_offset=70)], Load(), lineno=282, col_offset=43)], [], None, None, lineno=282, col_offset=8), lineno=282, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=283, col_offset=8), 'check_split', Load(), lineno=283, col_offset=8), [Str('what the--', lineno=283, col_offset=25), List([Str('what', lineno=283, col_offset=40), Str(' ', lineno=283, col_offset=48), Str('the--', lineno=283, col_offset=53)], Load(), lineno=283, col_offset=39)], [], None, None, lineno=283, col_offset=8), lineno=283, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=284, col_offset=8), 'check_split', Load(), lineno=284, col_offset=8), [Str('what the--.', lineno=284, col_offset=25), List([Str('what', lineno=284, col_offset=41), Str(' ', lineno=284, col_offset=49), Str('the--.', lineno=284, col_offset=54)], Load(), lineno=284, col_offset=40)], [], None, None, lineno=284, col_offset=8), lineno=284, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=285, col_offset=8), 'check_split', Load(), lineno=285, col_offset=8), [Str('--text--.', lineno=285, col_offset=25), List([Str('--text--.', lineno=285, col_offset=39)], Load(), lineno=285, col_offset=38)], [], None, None, lineno=285, col_offset=8), lineno=285, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=291, col_offset=8), 'check_split', Load(), lineno=291, col_offset=8), [Str('--option', lineno=291, col_offset=25), List([Str('--option', lineno=291, col_offset=38)], Load(), lineno=291, col_offset=37)], [], None, None, lineno=291, col_offset=8), lineno=291, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=292, col_offset=8), 'check_split', Load(), lineno=292, col_offset=8), [Str('--option-opt', lineno=292, col_offset=25), List([Str('--option-', lineno=292, col_offset=42), Str('opt', lineno=292, col_offset=55)], Load(), lineno=292, col_offset=41)], [], None, None, lineno=292, col_offset=8), lineno=292, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=293, col_offset=8), 'check_split', Load(), lineno=293, col_offset=8), [Str('foo --option-opt bar', lineno=293, col_offset=25), List([Str('foo', lineno=294, col_offset=26), Str(' ', lineno=294, col_offset=33), Str('--option-', lineno=294, col_offset=38), Str('opt', lineno=294, col_offset=51), Str(' ', lineno=294, col_offset=58), Str('bar', lineno=294, col_offset=63)], Load(), lineno=294, col_offset=25)], [], None, None, lineno=293, col_offset=8), lineno=293, col_offset=8)], [], lineno=279, col_offset=4), FunctionDef('test_punct_hyphens', arguments([Name('self', Param(), lineno=296, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=304, col_offset=8), 'check_split', Load(), lineno=304, col_offset=8), [Str("the 'wibble-wobble' widget", lineno=304, col_offset=25), List([Str('the', lineno=305, col_offset=26), Str(' ', lineno=305, col_offset=33), Str("'wibble-", lineno=305, col_offset=38), Str("wobble'", lineno=305, col_offset=50), Str(' ', lineno=305, col_offset=61), Str('widget', lineno=305, col_offset=66)], Load(), lineno=305, col_offset=25)], [], None, None, lineno=304, col_offset=8), lineno=304, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=306, col_offset=8), 'check_split', Load(), lineno=306, col_offset=8), [Str('the "wibble-wobble" widget', lineno=306, col_offset=25), List([Str('the', lineno=307, col_offset=26), Str(' ', lineno=307, col_offset=33), Str('"wibble-', lineno=307, col_offset=38), Str('wobble"', lineno=307, col_offset=50), Str(' ', lineno=307, col_offset=61), Str('widget', lineno=307, col_offset=66)], Load(), lineno=307, col_offset=25)], [], None, None, lineno=306, col_offset=8), lineno=306, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=308, col_offset=8), 'check_split', Load(), lineno=308, col_offset=8), [Str('the (wibble-wobble) widget', lineno=308, col_offset=25), List([Str('the', lineno=309, col_offset=26), Str(' ', lineno=309, col_offset=33), Str('(wibble-', lineno=309, col_offset=38), Str('wobble)', lineno=309, col_offset=50), Str(' ', lineno=309, col_offset=61), Str('widget', lineno=309, col_offset=66)], Load(), lineno=309, col_offset=25)], [], None, None, lineno=308, col_offset=8), lineno=308, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=310, col_offset=8), 'check_split', Load(), lineno=310, col_offset=8), [Str("the ['wibble-wobble'] widget", lineno=310, col_offset=25), List([Str('the', lineno=311, col_offset=26), Str(' ', lineno=311, col_offset=33), Str("['wibble-", lineno=311, col_offset=38), Str("wobble']", lineno=311, col_offset=51), Str(' ', lineno=311, col_offset=63), Str('widget', lineno=311, col_offset=68)], Load(), lineno=311, col_offset=25)], [], None, None, lineno=310, col_offset=8), lineno=310, col_offset=8)], [], lineno=296, col_offset=4), FunctionDef('test_funky_parens', arguments([Name('self', Param(), lineno=313, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=316, col_offset=8), 'check_split', Load(), lineno=316, col_offset=8), [Str('foo (--option) bar', lineno=316, col_offset=25), List([Str('foo', lineno=317, col_offset=26), Str(' ', lineno=317, col_offset=33), Str('(--option)', lineno=317, col_offset=38), Str(' ', lineno=317, col_offset=52), Str('bar', lineno=317, col_offset=57)], Load(), lineno=317, col_offset=25)], [], None, None, lineno=316, col_offset=8), lineno=316, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=320, col_offset=8), 'check_split', Load(), lineno=320, col_offset=8), [Str('foo (bar) baz', lineno=320, col_offset=25), List([Str('foo', lineno=321, col_offset=26), Str(' ', lineno=321, col_offset=33), Str('(bar)', lineno=321, col_offset=38), Str(' ', lineno=321, col_offset=47), Str('baz', lineno=321, col_offset=52)], Load(), lineno=321, col_offset=25)], [], None, None, lineno=320, col_offset=8), lineno=320, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=322, col_offset=8), 'check_split', Load(), lineno=322, col_offset=8), [Str('blah (ding dong), wubba', lineno=322, col_offset=25), List([Str('blah', lineno=323, col_offset=26), Str(' ', lineno=323, col_offset=34), Str('(ding', lineno=323, col_offset=39), Str(' ', lineno=323, col_offset=48), Str('dong),', lineno=323, col_offset=53), Str(' ', lineno=324, col_offset=26), Str('wubba', lineno=324, col_offset=31)], Load(), lineno=323, col_offset=25)], [], None, None, lineno=322, col_offset=8), lineno=322, col_offset=8)], [], lineno=313, col_offset=4), FunctionDef('test_initial_whitespace', arguments([Name('self', Param(), lineno=326, col_offset=32)], None, None, []), [Assign([Name('text', Store(), lineno=329, col_offset=8)], Str(' This is a sentence with leading whitespace.', lineno=329, col_offset=15), lineno=329, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=330, col_offset=8), 'check_wrap', Load(), lineno=330, col_offset=8), [Name('text', Load(), lineno=330, col_offset=24), Num(50, lineno=330, col_offset=30), List([Str(' This is a sentence with leading whitespace.', lineno=331, col_offset=25)], Load(), lineno=331, col_offset=24)], [], None, None, lineno=330, col_offset=8), lineno=330, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=332, col_offset=8), 'check_wrap', Load(), lineno=332, col_offset=8), [Name('text', Load(), lineno=332, col_offset=24), Num(30, lineno=332, col_offset=30), List([Str(' This is a sentence with', lineno=333, col_offset=25), Str('leading whitespace.', lineno=333, col_offset=53)], Load(), lineno=333, col_offset=24)], [], None, None, lineno=332, col_offset=8), lineno=332, col_offset=8)], [], lineno=326, col_offset=4), FunctionDef('test_no_drop_whitespace', arguments([Name('self', Param(), lineno=335, col_offset=32)], None, None, []), [Assign([Name('text', Store(), lineno=337, col_offset=8)], Str(' This is a    sentence with     much whitespace.', lineno=337, col_offset=15), lineno=337, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=338, col_offset=8), 'check_wrap', Load(), lineno=338, col_offset=8), [Name('text', Load(), lineno=338, col_offset=24), Num(10, lineno=338, col_offset=30), List([Str(' This is a', lineno=339, col_offset=25), Str('    ', lineno=339, col_offset=39), Str('sentence ', lineno=339, col_offset=47), Str('with     ', lineno=340, col_offset=25), Str('much white', lineno=340, col_offset=38), Str('space.', lineno=340, col_offset=52)], Load(), lineno=339, col_offset=24)], [keyword('drop_whitespace', Name('False', Load(), lineno=341, col_offset=40))], None, None, lineno=338, col_offset=8), lineno=338, col_offset=8)], [], lineno=335, col_offset=4), If(Attribute(Name('test_support', Load(), lineno=343, col_offset=7), 'have_unicode', Load(), lineno=343, col_offset=7), [FunctionDef('test_unicode', arguments([Name('self', Param(), lineno=344, col_offset=25)], None, None, []), [Assign([Name('text', Store(), lineno=348, col_offset=12)], Str(u'Hello there, how are you today?', lineno=348, col_offset=19), lineno=348, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=349, col_offset=12), 'check_wrap', Load(), lineno=349, col_offset=12), [Name('text', Load(), lineno=349, col_offset=28), Num(50, lineno=349, col_offset=34), List([Str(u'Hello there, how are you today?', lineno=349, col_offset=39)], Load(), lineno=349, col_offset=38)], [], None, None, lineno=349, col_offset=12), lineno=349, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=350, col_offset=12), 'check_wrap', Load(), lineno=350, col_offset=12), [Name('text', Load(), lineno=350, col_offset=28), Num(20, lineno=350, col_offset=34), List([Str(u'Hello there, how are', lineno=350, col_offset=39), Str('you today?', lineno=350, col_offset=64)], Load(), lineno=350, col_offset=38)], [], None, None, lineno=350, col_offset=12), lineno=350, col_offset=12), Assign([Name('olines', Store(), lineno=351, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=351, col_offset=21), 'wrapper', Load(), lineno=351, col_offset=21), 'wrap', Load(), lineno=351, col_offset=21), [Name('text', Load(), lineno=351, col_offset=39)], [], None, None, lineno=351, col_offset=21), lineno=351, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=352, col_offset=12), 'assertIsInstance', Load(), lineno=352, col_offset=12), [Name('olines', Load(), lineno=352, col_offset=34), Name('list', Load(), lineno=352, col_offset=42)], [], None, None, lineno=352, col_offset=12), lineno=352, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=353, col_offset=12), 'assertIsInstance', Load(), lineno=353, col_offset=12), [Subscript(Name('olines', Load(), lineno=353, col_offset=34), Index(Num(0, lineno=353, col_offset=41)), Load(), lineno=353, col_offset=34), Name('unicode', Load(), lineno=353, col_offset=45)], [], None, None, lineno=353, col_offset=12), lineno=353, col_offset=12), Assign([Name('otext', Store(), lineno=354, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=354, col_offset=20), 'wrapper', Load(), lineno=354, col_offset=20), 'fill', Load(), lineno=354, col_offset=20), [Name('text', Load(), lineno=354, col_offset=38)], [], None, None, lineno=354, col_offset=20), lineno=354, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=355, col_offset=12), 'assertIsInstance', Load(), lineno=355, col_offset=12), [Name('otext', Load(), lineno=355, col_offset=34), Name('unicode', Load(), lineno=355, col_offset=41)], [], None, None, lineno=355, col_offset=12), lineno=355, col_offset=12)], [], lineno=344, col_offset=8), FunctionDef('test_no_split_at_umlaut', arguments([Name('self', Param(), lineno=357, col_offset=36)], None, None, []), [Assign([Name('text', Store(), lineno=358, col_offset=12)], Str(u'Die Empf\xe4nger-Auswahl', lineno=358, col_offset=19), lineno=358, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=359, col_offset=12), 'check_wrap', Load(), lineno=359, col_offset=12), [Name('text', Load(), lineno=359, col_offset=28), Num(13, lineno=359, col_offset=34), List([Str(u'Die', lineno=359, col_offset=39), Str(u'Empf\xe4nger-', lineno=359, col_offset=47), Str(u'Auswahl', lineno=359, col_offset=65)], Load(), lineno=359, col_offset=38)], [], None, None, lineno=359, col_offset=12), lineno=359, col_offset=12)], [], lineno=357, col_offset=8), FunctionDef('test_umlaut_followed_by_dash', arguments([Name('self', Param(), lineno=361, col_offset=41)], None, None, []), [Assign([Name('text', Store(), lineno=362, col_offset=12)], Str(u'aa \xe4\xe4-\xe4\xe4', lineno=362, col_offset=19), lineno=362, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=363, col_offset=12), 'check_wrap', Load(), lineno=363, col_offset=12), [Name('text', Load(), lineno=363, col_offset=28), Num(7, lineno=363, col_offset=34), List([Str(u'aa \xe4\xe4-', lineno=363, col_offset=38), Str(u'\xe4\xe4', lineno=363, col_offset=55)], Load(), lineno=363, col_offset=37)], [], None, None, lineno=363, col_offset=12), lineno=363, col_offset=12)], [], lineno=361, col_offset=8)], [], lineno=343, col_offset=4), FunctionDef('test_split', arguments([Name('self', Param(), lineno=365, col_offset=19)], None, None, []), [Assign([Name('text', Store(), lineno=369, col_offset=8)], Str('Hello there -- you goof-ball, use the -b option!', lineno=369, col_offset=15), lineno=369, col_offset=8), Assign([Name('result', Store(), lineno=371, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=371, col_offset=17), 'wrapper', Load(), lineno=371, col_offset=17), '_split', Load(), lineno=371, col_offset=17), [Name('text', Load(), lineno=371, col_offset=37)], [], None, None, lineno=371, col_offset=17), lineno=371, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=372, col_offset=8), 'check', Load(), lineno=372, col_offset=8), [Name('result', Load(), lineno=372, col_offset=19), List([Str('Hello', lineno=373, col_offset=14), Str(' ', lineno=373, col_offset=23), Str('there', lineno=373, col_offset=28), Str(' ', lineno=373, col_offset=37), Str('--', lineno=373, col_offset=42), Str(' ', lineno=373, col_offset=48), Str('you', lineno=373, col_offset=53), Str(' ', lineno=373, col_offset=60), Str('goof-', lineno=373, col_offset=65), Str('ball,', lineno=374, col_offset=14), Str(' ', lineno=374, col_offset=23), Str('use', lineno=374, col_offset=28), Str(' ', lineno=374, col_offset=35), Str('the', lineno=374, col_offset=40), Str(' ', lineno=374, col_offset=47), Str('-b', lineno=374, col_offset=52), Str(' ', lineno=374, col_offset=58), Str('option!', lineno=374, col_offset=64)], Load(), lineno=373, col_offset=13)], [], None, None, lineno=372, col_offset=8), lineno=372, col_offset=8)], [], lineno=365, col_offset=4), FunctionDef('test_break_on_hyphens', arguments([Name('self', Param(), lineno=376, col_offset=30)], None, None, []), [Assign([Name('text', Store(), lineno=378, col_offset=8)], Str('yaba daba-doo', lineno=378, col_offset=15), lineno=378, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=379, col_offset=8), 'check_wrap', Load(), lineno=379, col_offset=8), [Name('text', Load(), lineno=379, col_offset=24), Num(10, lineno=379, col_offset=30), List([Str('yaba daba-', lineno=379, col_offset=35), Str('doo', lineno=379, col_offset=49)], Load(), lineno=379, col_offset=34)], [keyword('break_on_hyphens', Name('True', Load(), lineno=380, col_offset=41))], None, None, lineno=379, col_offset=8), lineno=379, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=381, col_offset=8), 'check_wrap', Load(), lineno=381, col_offset=8), [Name('text', Load(), lineno=381, col_offset=24), Num(10, lineno=381, col_offset=30), List([Str('yaba', lineno=381, col_offset=35), Str('daba-doo', lineno=381, col_offset=43)], Load(), lineno=381, col_offset=34)], [keyword('break_on_hyphens', Name('False', Load(), lineno=382, col_offset=41))], None, None, lineno=381, col_offset=8), lineno=381, col_offset=8)], [], lineno=376, col_offset=4), FunctionDef('test_bad_width', arguments([Name('self', Param(), lineno=384, col_offset=23)], None, None, []), [Assign([Name('text', Store(), lineno=386, col_offset=8)], Str("Whatever, it doesn't matter.", lineno=386, col_offset=15), lineno=386, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=387, col_offset=8), 'assertRaises', Load(), lineno=387, col_offset=8), [Name('ValueError', Load(), lineno=387, col_offset=26), Name('wrap', Load(), lineno=387, col_offset=38), Name('text', Load(), lineno=387, col_offset=44), Num(0, lineno=387, col_offset=50)], [], None, None, lineno=387, col_offset=8), lineno=387, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=388, col_offset=8), 'assertRaises', Load(), lineno=388, col_offset=8), [Name('ValueError', Load(), lineno=388, col_offset=26), Name('wrap', Load(), lineno=388, col_offset=38), Name('text', Load(), lineno=388, col_offset=44), Num(-1, lineno=388, col_offset=51)], [], None, None, lineno=388, col_offset=8), lineno=388, col_offset=8)], [], lineno=384, col_offset=4)], [], lineno=47, col_offset=0), ClassDef('LongWordTestCase', [Name('BaseTestCase', Load(), lineno=391, col_offset=24)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=392, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=393, col_offset=8), 'wrapper', Store(), lineno=393, col_offset=8)], Call(Name('TextWrapper', Load(), lineno=393, col_offset=23), [], [], None, None, lineno=393, col_offset=23), lineno=393, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=394, col_offset=8), 'text', Store(), lineno=394, col_offset=8)], Str('Did you say "supercalifragilisticexpialidocious?"\nHow *do* you spell that odd word, anyways?\n', lineno=397, col_offset=-1), lineno=394, col_offset=8)], [], lineno=392, col_offset=4), FunctionDef('test_break_long', arguments([Name('self', Param(), lineno=399, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=402, col_offset=8), 'check_wrap', Load(), lineno=402, col_offset=8), [Attribute(Name('self', Load(), lineno=402, col_offset=24), 'text', Load(), lineno=402, col_offset=24), Num(30, lineno=402, col_offset=35), List([Str('Did you say "supercalifragilis', lineno=403, col_offset=25), Str('ticexpialidocious?" How *do*', lineno=404, col_offset=25), Str('you spell that odd word,', lineno=405, col_offset=25), Str('anyways?', lineno=406, col_offset=25)], Load(), lineno=403, col_offset=24)], [], None, None, lineno=402, col_offset=8), lineno=402, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=407, col_offset=8), 'check_wrap', Load(), lineno=407, col_offset=8), [Attribute(Name('self', Load(), lineno=407, col_offset=24), 'text', Load(), lineno=407, col_offset=24), Num(50, lineno=407, col_offset=35), List([Str('Did you say "supercalifragilisticexpialidocious?"', lineno=408, col_offset=25), Str('How *do* you spell that odd word, anyways?', lineno=409, col_offset=25)], Load(), lineno=408, col_offset=24)], [], None, None, lineno=407, col_offset=8), lineno=407, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=413, col_offset=8), 'check_wrap', Load(), lineno=413, col_offset=8), [BinOp(BinOp(Str('-', lineno=413, col_offset=24), Mult(), Num(10, lineno=413, col_offset=28), lineno=413, col_offset=24), Add(), Str('hello', lineno=413, col_offset=31), lineno=413, col_offset=24), Num(10, lineno=413, col_offset=40), List([Str('----------', lineno=414, col_offset=25), Str('               h', lineno=415, col_offset=25), Str('               e', lineno=416, col_offset=25), Str('               l', lineno=417, col_offset=25), Str('               l', lineno=418, col_offset=25), Str('               o', lineno=419, col_offset=25)], Load(), lineno=414, col_offset=24)], [keyword('subsequent_indent', BinOp(Str(' ', lineno=420, col_offset=44), Mult(), Num(15, lineno=420, col_offset=48), lineno=420, col_offset=44))], None, None, lineno=413, col_offset=8), lineno=413, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=424, col_offset=8), 'check_wrap', Load(), lineno=424, col_offset=8), [Attribute(Name('self', Load(), lineno=424, col_offset=24), 'text', Load(), lineno=424, col_offset=24), Num(12, lineno=424, col_offset=35), List([Str('Did you say ', lineno=425, col_offset=25), Str('"supercalifr', lineno=426, col_offset=25), Str('agilisticexp', lineno=427, col_offset=25), Str('ialidocious?', lineno=428, col_offset=25), Str('" How *do*', lineno=429, col_offset=25), Str('you spell', lineno=430, col_offset=25), Str('that odd', lineno=431, col_offset=25), Str('word,', lineno=432, col_offset=25), Str('anyways?', lineno=433, col_offset=25)], Load(), lineno=425, col_offset=24)], [], None, None, lineno=424, col_offset=8), lineno=424, col_offset=8)], [], lineno=399, col_offset=4), FunctionDef('test_nobreak_long', arguments([Name('self', Param(), lineno=435, col_offset=26)], None, None, []), [Assign([Attribute(Attribute(Name('self', Load(), lineno=437, col_offset=8), 'wrapper', Load(), lineno=437, col_offset=8), 'break_long_words', Store(), lineno=437, col_offset=8)], Num(0, lineno=437, col_offset=40), lineno=437, col_offset=8), Assign([Attribute(Attribute(Name('self', Load(), lineno=438, col_offset=8), 'wrapper', Load(), lineno=438, col_offset=8), 'width', Store(), lineno=438, col_offset=8)], Num(30, lineno=438, col_offset=29), lineno=438, col_offset=8), Assign([Name('expect', Store(), lineno=439, col_offset=8)], List([Str('Did you say', lineno=439, col_offset=18), Str('"supercalifragilisticexpialidocious?"', lineno=440, col_offset=18), Str('How *do* you spell that odd', lineno=441, col_offset=18), Str('word, anyways?', lineno=442, col_offset=18)], Load(), lineno=439, col_offset=17), lineno=439, col_offset=8), Assign([Name('result', Store(), lineno=444, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=444, col_offset=17), 'wrapper', Load(), lineno=444, col_offset=17), 'wrap', Load(), lineno=444, col_offset=17), [Attribute(Name('self', Load(), lineno=444, col_offset=35), 'text', Load(), lineno=444, col_offset=35)], [], None, None, lineno=444, col_offset=17), lineno=444, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=445, col_offset=8), 'check', Load(), lineno=445, col_offset=8), [Name('result', Load(), lineno=445, col_offset=19), Name('expect', Load(), lineno=445, col_offset=27)], [], None, None, lineno=445, col_offset=8), lineno=445, col_offset=8), Assign([Name('result', Store(), lineno=448, col_offset=8)], Call(Name('wrap', Load(), lineno=448, col_offset=17), [Attribute(Name('self', Load(), lineno=448, col_offset=22), 'text', Load(), lineno=448, col_offset=22)], [keyword('width', Num(30, lineno=448, col_offset=39)), keyword('break_long_words', Num(0, lineno=448, col_offset=60))], None, None, lineno=448, col_offset=17), lineno=448, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=449, col_offset=8), 'check', Load(), lineno=449, col_offset=8), [Name('result', Load(), lineno=449, col_offset=19), Name('expect', Load(), lineno=449, col_offset=27)], [], None, None, lineno=449, col_offset=8), lineno=449, col_offset=8)], [], lineno=435, col_offset=4)], [], lineno=391, col_offset=0), ClassDef('IndentTestCases', [Name('BaseTestCase', Load(), lineno=452, col_offset=22)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=455, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=456, col_offset=8), 'text', Store(), lineno=456, col_offset=8)], Str('This paragraph will be filled, first without any indentation,\nand then with some (including a hanging indent).', lineno=458, col_offset=-1), lineno=456, col_offset=8)], [], lineno=455, col_offset=4), FunctionDef('test_fill', arguments([Name('self', Param(), lineno=461, col_offset=18)], None, None, []), [Assign([Name('expect', Store(), lineno=464, col_offset=8)], Str('This paragraph will be filled, first\nwithout any indentation, and then with\nsome (including a hanging indent).', lineno=467, col_offset=-1), lineno=464, col_offset=8), Assign([Name('result', Store(), lineno=469, col_offset=8)], Call(Name('fill', Load(), lineno=469, col_offset=17), [Attribute(Name('self', Load(), lineno=469, col_offset=22), 'text', Load(), lineno=469, col_offset=22), Num(40, lineno=469, col_offset=33)], [], None, None, lineno=469, col_offset=17), lineno=469, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=470, col_offset=8), 'check', Load(), lineno=470, col_offset=8), [Name('result', Load(), lineno=470, col_offset=19), Name('expect', Load(), lineno=470, col_offset=27)], [], None, None, lineno=470, col_offset=8), lineno=470, col_offset=8)], [], lineno=461, col_offset=4), FunctionDef('test_initial_indent', arguments([Name('self', Param(), lineno=473, col_offset=28)], None, None, []), [Assign([Name('expect', Store(), lineno=476, col_offset=8)], List([Str('     This paragraph will be filled,', lineno=476, col_offset=18), Str('first without any indentation, and then', lineno=477, col_offset=18), Str('with some (including a hanging indent).', lineno=478, col_offset=18)], Load(), lineno=476, col_offset=17), lineno=476, col_offset=8), Assign([Name('result', Store(), lineno=479, col_offset=8)], Call(Name('wrap', Load(), lineno=479, col_offset=17), [Attribute(Name('self', Load(), lineno=479, col_offset=22), 'text', Load(), lineno=479, col_offset=22), Num(40, lineno=479, col_offset=33)], [keyword('initial_indent', Str('     ', lineno=479, col_offset=52))], None, None, lineno=479, col_offset=17), lineno=479, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=480, col_offset=8), 'check', Load(), lineno=480, col_offset=8), [Name('result', Load(), lineno=480, col_offset=19), Name('expect', Load(), lineno=480, col_offset=27)], [], None, None, lineno=480, col_offset=8), lineno=480, col_offset=8), Assign([Name('expect', Store(), lineno=482, col_offset=8)], Call(Attribute(Str('\n', lineno=482, col_offset=17), 'join', Load(), lineno=482, col_offset=17), [Name('expect', Load(), lineno=482, col_offset=27)], [], None, None, lineno=482, col_offset=17), lineno=482, col_offset=8), Assign([Name('result', Store(), lineno=483, col_offset=8)], Call(Name('fill', Load(), lineno=483, col_offset=17), [Attribute(Name('self', Load(), lineno=483, col_offset=22), 'text', Load(), lineno=483, col_offset=22), Num(40, lineno=483, col_offset=33)], [keyword('initial_indent', Str('     ', lineno=483, col_offset=52))], None, None, lineno=483, col_offset=17), lineno=483, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=484, col_offset=8), 'check', Load(), lineno=484, col_offset=8), [Name('result', Load(), lineno=484, col_offset=19), Name('expect', Load(), lineno=484, col_offset=27)], [], None, None, lineno=484, col_offset=8), lineno=484, col_offset=8)], [], lineno=473, col_offset=4), FunctionDef('test_subsequent_indent', arguments([Name('self', Param(), lineno=487, col_offset=31)], None, None, []), [Assign([Name('expect', Store(), lineno=490, col_offset=8)], Str('  * This paragraph will be filled, first\n    without any indentation, and then\n    with some (including a hanging\n    indent).', lineno=494, col_offset=-1), lineno=490, col_offset=8), Assign([Name('result', Store(), lineno=496, col_offset=8)], Call(Name('fill', Load(), lineno=496, col_offset=17), [Attribute(Name('self', Load(), lineno=496, col_offset=22), 'text', Load(), lineno=496, col_offset=22), Num(40, lineno=496, col_offset=33)], [keyword('initial_indent', Str('  * ', lineno=497, col_offset=37)), keyword('subsequent_indent', Str('    ', lineno=497, col_offset=63))], None, None, lineno=496, col_offset=17), lineno=496, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=498, col_offset=8), 'check', Load(), lineno=498, col_offset=8), [Name('result', Load(), lineno=498, col_offset=19), Name('expect', Load(), lineno=498, col_offset=27)], [], None, None, lineno=498, col_offset=8), lineno=498, col_offset=8)], [], lineno=487, col_offset=4)], [], lineno=452, col_offset=0), ClassDef('DedentTestCase', [Attribute(Name('unittest', Load(), lineno=503, col_offset=21), 'TestCase', Load(), lineno=503, col_offset=21)], [FunctionDef('assertUnchanged', arguments([Name('self', Param(), lineno=505, col_offset=24), Name('text', Param(), lineno=505, col_offset=30)], None, None, []), [Expr(Str("assert that dedent() has no effect on 'text'", lineno=506, col_offset=8), lineno=506, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=507, col_offset=8), 'assertEqual', Load(), lineno=507, col_offset=8), [Name('text', Load(), lineno=507, col_offset=25), Call(Name('dedent', Load(), lineno=507, col_offset=31), [Name('text', Load(), lineno=507, col_offset=38)], [], None, None, lineno=507, col_offset=31)], [], None, None, lineno=507, col_offset=8), lineno=507, col_offset=8)], [], lineno=505, col_offset=4), FunctionDef('test_dedent_nomargin', arguments([Name('self', Param(), lineno=509, col_offset=29)], None, None, []), [Assign([Name('text', Store(), lineno=511, col_offset=8)], Str("Hello there.\nHow are you?\nOh good, I'm glad.", lineno=511, col_offset=15), lineno=511, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=512, col_offset=8), 'assertUnchanged', Load(), lineno=512, col_offset=8), [Name('text', Load(), lineno=512, col_offset=29)], [], None, None, lineno=512, col_offset=8), lineno=512, col_offset=8), Assign([Name('text', Store(), lineno=515, col_offset=8)], Str('Hello there.\n\nBoo!', lineno=515, col_offset=15), lineno=515, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=516, col_offset=8), 'assertUnchanged', Load(), lineno=516, col_offset=8), [Name('text', Load(), lineno=516, col_offset=29)], [], None, None, lineno=516, col_offset=8), lineno=516, col_offset=8), Assign([Name('text', Store(), lineno=519, col_offset=8)], Str('Hello there.\n  This is indented.', lineno=519, col_offset=15), lineno=519, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=520, col_offset=8), 'assertUnchanged', Load(), lineno=520, col_offset=8), [Name('text', Load(), lineno=520, col_offset=29)], [], None, None, lineno=520, col_offset=8), lineno=520, col_offset=8), Assign([Name('text', Store(), lineno=523, col_offset=8)], Str('Hello there.\n\n  Boo!\n', lineno=523, col_offset=15), lineno=523, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=524, col_offset=8), 'assertUnchanged', Load(), lineno=524, col_offset=8), [Name('text', Load(), lineno=524, col_offset=29)], [], None, None, lineno=524, col_offset=8), lineno=524, col_offset=8)], [], lineno=509, col_offset=4), FunctionDef('test_dedent_even', arguments([Name('self', Param(), lineno=526, col_offset=25)], None, None, []), [Assign([Name('text', Store(), lineno=528, col_offset=8)], Str('  Hello there.\n  How are ya?\n  Oh good.', lineno=528, col_offset=15), lineno=528, col_offset=8), Assign([Name('expect', Store(), lineno=529, col_offset=8)], Str('Hello there.\nHow are ya?\nOh good.', lineno=529, col_offset=17), lineno=529, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=530, col_offset=8), 'assertEqual', Load(), lineno=530, col_offset=8), [Name('expect', Load(), lineno=530, col_offset=25), Call(Name('dedent', Load(), lineno=530, col_offset=33), [Name('text', Load(), lineno=530, col_offset=40)], [], None, None, lineno=530, col_offset=33)], [], None, None, lineno=530, col_offset=8), lineno=530, col_offset=8), Assign([Name('text', Store(), lineno=533, col_offset=8)], Str('  Hello there.\n\n  How are ya?\n  Oh good.\n', lineno=533, col_offset=15), lineno=533, col_offset=8), Assign([Name('expect', Store(), lineno=534, col_offset=8)], Str('Hello there.\n\nHow are ya?\nOh good.\n', lineno=534, col_offset=17), lineno=534, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=535, col_offset=8), 'assertEqual', Load(), lineno=535, col_offset=8), [Name('expect', Load(), lineno=535, col_offset=25), Call(Name('dedent', Load(), lineno=535, col_offset=33), [Name('text', Load(), lineno=535, col_offset=40)], [], None, None, lineno=535, col_offset=33)], [], None, None, lineno=535, col_offset=8), lineno=535, col_offset=8), Assign([Name('text', Store(), lineno=538, col_offset=8)], Str('  Hello there.\n  \n  How are ya?\n  Oh good.\n', lineno=538, col_offset=15), lineno=538, col_offset=8), Assign([Name('expect', Store(), lineno=539, col_offset=8)], Str('Hello there.\n\nHow are ya?\nOh good.\n', lineno=539, col_offset=17), lineno=539, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=540, col_offset=8), 'assertEqual', Load(), lineno=540, col_offset=8), [Name('expect', Load(), lineno=540, col_offset=25), Call(Name('dedent', Load(), lineno=540, col_offset=33), [Name('text', Load(), lineno=540, col_offset=40)], [], None, None, lineno=540, col_offset=33)], [], None, None, lineno=540, col_offset=8), lineno=540, col_offset=8)], [], lineno=526, col_offset=4), FunctionDef('test_dedent_uneven', arguments([Name('self', Param(), lineno=542, col_offset=27)], None, None, []), [Assign([Name('text', Store(), lineno=544, col_offset=8)], Str('        def foo():\n            while 1:\n                return foo\n        ', lineno=548, col_offset=-1), lineno=544, col_offset=8), Assign([Name('expect', Store(), lineno=549, col_offset=8)], Str('def foo():\n    while 1:\n        return foo\n', lineno=553, col_offset=-1), lineno=549, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=554, col_offset=8), 'assertEqual', Load(), lineno=554, col_offset=8), [Name('expect', Load(), lineno=554, col_offset=25), Call(Name('dedent', Load(), lineno=554, col_offset=33), [Name('text', Load(), lineno=554, col_offset=40)], [], None, None, lineno=554, col_offset=33)], [], None, None, lineno=554, col_offset=8), lineno=554, col_offset=8), Assign([Name('text', Store(), lineno=557, col_offset=8)], Str('  Foo\n    Bar\n\n   Baz\n', lineno=557, col_offset=15), lineno=557, col_offset=8), Assign([Name('expect', Store(), lineno=558, col_offset=8)], Str('Foo\n  Bar\n\n Baz\n', lineno=558, col_offset=17), lineno=558, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=559, col_offset=8), 'assertEqual', Load(), lineno=559, col_offset=8), [Name('expect', Load(), lineno=559, col_offset=25), Call(Name('dedent', Load(), lineno=559, col_offset=33), [Name('text', Load(), lineno=559, col_offset=40)], [], None, None, lineno=559, col_offset=33)], [], None, None, lineno=559, col_offset=8), lineno=559, col_offset=8), Assign([Name('text', Store(), lineno=562, col_offset=8)], Str('  Foo\n    Bar\n \n   Baz\n', lineno=562, col_offset=15), lineno=562, col_offset=8), Assign([Name('expect', Store(), lineno=563, col_offset=8)], Str('Foo\n  Bar\n\n Baz\n', lineno=563, col_offset=17), lineno=563, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=564, col_offset=8), 'assertEqual', Load(), lineno=564, col_offset=8), [Name('expect', Load(), lineno=564, col_offset=25), Call(Name('dedent', Load(), lineno=564, col_offset=33), [Name('text', Load(), lineno=564, col_offset=40)], [], None, None, lineno=564, col_offset=33)], [], None, None, lineno=564, col_offset=8), lineno=564, col_offset=8)], [], lineno=542, col_offset=4), FunctionDef('test_dedent_preserve_internal_tabs', arguments([Name('self', Param(), lineno=567, col_offset=43)], None, None, []), [Assign([Name('text', Store(), lineno=568, col_offset=8)], Str('  hello\tthere\n  how are\tyou?', lineno=568, col_offset=15), lineno=568, col_offset=8), Assign([Name('expect', Store(), lineno=569, col_offset=8)], Str('hello\tthere\nhow are\tyou?', lineno=569, col_offset=17), lineno=569, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=570, col_offset=8), 'assertEqual', Load(), lineno=570, col_offset=8), [Name('expect', Load(), lineno=570, col_offset=25), Call(Name('dedent', Load(), lineno=570, col_offset=33), [Name('text', Load(), lineno=570, col_offset=40)], [], None, None, lineno=570, col_offset=33)], [], None, None, lineno=570, col_offset=8), lineno=570, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=574, col_offset=8), 'assertEqual', Load(), lineno=574, col_offset=8), [Name('expect', Load(), lineno=574, col_offset=25), Call(Name('dedent', Load(), lineno=574, col_offset=33), [Name('expect', Load(), lineno=574, col_offset=40)], [], None, None, lineno=574, col_offset=33)], [], None, None, lineno=574, col_offset=8), lineno=574, col_offset=8)], [], lineno=567, col_offset=4), FunctionDef('test_dedent_preserve_margin_tabs', arguments([Name('self', Param(), lineno=579, col_offset=41)], None, None, []), [Assign([Name('text', Store(), lineno=580, col_offset=8)], Str('  hello there\n\thow are you?', lineno=580, col_offset=15), lineno=580, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=581, col_offset=8), 'assertUnchanged', Load(), lineno=581, col_offset=8), [Name('text', Load(), lineno=581, col_offset=29)], [], None, None, lineno=581, col_offset=8), lineno=581, col_offset=8), Assign([Name('text', Store(), lineno=584, col_offset=8)], Str('        hello there\n\thow are you?', lineno=584, col_offset=15), lineno=584, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=585, col_offset=8), 'assertUnchanged', Load(), lineno=585, col_offset=8), [Name('text', Load(), lineno=585, col_offset=29)], [], None, None, lineno=585, col_offset=8), lineno=585, col_offset=8), Assign([Name('text', Store(), lineno=588, col_offset=8)], Str('\thello there\n\thow are you?', lineno=588, col_offset=15), lineno=588, col_offset=8), Assign([Name('expect', Store(), lineno=589, col_offset=8)], Str('hello there\nhow are you?', lineno=589, col_offset=17), lineno=589, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=590, col_offset=8), 'assertEqual', Load(), lineno=590, col_offset=8), [Name('expect', Load(), lineno=590, col_offset=25), Call(Name('dedent', Load(), lineno=590, col_offset=33), [Name('text', Load(), lineno=590, col_offset=40)], [], None, None, lineno=590, col_offset=33)], [], None, None, lineno=590, col_offset=8), lineno=590, col_offset=8), Assign([Name('text', Store(), lineno=592, col_offset=8)], Str('  \thello there\n  \thow are you?', lineno=592, col_offset=15), lineno=592, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=593, col_offset=8), 'assertEqual', Load(), lineno=593, col_offset=8), [Name('expect', Load(), lineno=593, col_offset=25), Call(Name('dedent', Load(), lineno=593, col_offset=33), [Name('text', Load(), lineno=593, col_offset=40)], [], None, None, lineno=593, col_offset=33)], [], None, None, lineno=593, col_offset=8), lineno=593, col_offset=8), Assign([Name('text', Store(), lineno=595, col_offset=8)], Str('  \t  hello there\n  \t  how are you?', lineno=595, col_offset=15), lineno=595, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=596, col_offset=8), 'assertEqual', Load(), lineno=596, col_offset=8), [Name('expect', Load(), lineno=596, col_offset=25), Call(Name('dedent', Load(), lineno=596, col_offset=33), [Name('text', Load(), lineno=596, col_offset=40)], [], None, None, lineno=596, col_offset=33)], [], None, None, lineno=596, col_offset=8), lineno=596, col_offset=8), Assign([Name('text', Store(), lineno=598, col_offset=8)], Str('  \thello there\n  \t  how are you?', lineno=598, col_offset=15), lineno=598, col_offset=8), Assign([Name('expect', Store(), lineno=599, col_offset=8)], Str('hello there\n  how are you?', lineno=599, col_offset=17), lineno=599, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=600, col_offset=8), 'assertEqual', Load(), lineno=600, col_offset=8), [Name('expect', Load(), lineno=600, col_offset=25), Call(Name('dedent', Load(), lineno=600, col_offset=33), [Name('text', Load(), lineno=600, col_offset=40)], [], None, None, lineno=600, col_offset=33)], [], None, None, lineno=600, col_offset=8), lineno=600, col_offset=8)], [], lineno=579, col_offset=4)], [], lineno=503, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=604, col_offset=4), 'run_unittest', Load(), lineno=604, col_offset=4), [Name('WrapTestCase', Load(), lineno=604, col_offset=30), Name('LongWordTestCase', Load(), lineno=605, col_offset=30), Name('IndentTestCases', Load(), lineno=606, col_offset=30), Name('DedentTestCase', Load(), lineno=607, col_offset=30)], [], None, None, lineno=604, col_offset=4), lineno=604, col_offset=4)], [], lineno=603, col_offset=0), If(Compare(Name('__name__', Load(), lineno=609, col_offset=3), [Eq()], [Str('__main__', lineno=609, col_offset=15)], lineno=609, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=610, col_offset=4), [], [], None, None, lineno=610, col_offset=4), lineno=610, col_offset=4)], [], lineno=609, col_offset=0)])
