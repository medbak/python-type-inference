Module([TryExcept([Import([alias('fintl', None)], lineno=18, col_offset=4), Assign([Name('_', Store(), lineno=19, col_offset=4)], Attribute(Name('fintl', Load(), lineno=19, col_offset=8), 'gettext', Load(), lineno=19, col_offset=8), lineno=19, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=20, col_offset=7), None, [Assign([Name('_', Store(), lineno=21, col_offset=4)], Lambda(arguments([Name('s', Param(), lineno=21, col_offset=15)], None, None, []), Name('s', Load(), lineno=21, col_offset=18), lineno=21, col_offset=8), lineno=21, col_offset=4)], lineno=20, col_offset=0)], [], lineno=17, col_offset=0), Assign([Name('__doc__', Store(), lineno=23, col_offset=0)], Call(Name('_', Load(), lineno=23, col_offset=10), [Str('pygettext -- Python equivalent of xgettext(1)\n\nMany systems (Solaris, Linux, Gnu) provide extensive tools that ease the\ninternationalization of C programs. Most of these tools are independent of\nthe programming language and can be used from within Python programs.\nMartin von Loewis\' work[1] helps considerably in this regard.\n\nThere\'s one problem though; xgettext is the program that scans source code\nlooking for message strings, but it groks only C (or C++). Python\nintroduces a few wrinkles, such as dual quoting characters, triple quoted\nstrings, and raw strings. xgettext understands none of this.\n\nEnter pygettext, which uses Python\'s standard tokenize module to scan\nPython source code, generating .pot files identical to what GNU xgettext[2]\ngenerates for C and C++ code. From there, the standard GNU tools can be\nused.\n\nA word about marking Python strings as candidates for translation. GNU\nxgettext recognizes the following keywords: gettext, dgettext, dcgettext,\nand gettext_noop. But those can be a lot of text to include all over your\ncode. C and C++ have a trick: they use the C preprocessor. Most\ninternationalized C source includes a #define for gettext() to _() so that\nwhat has to be written in the source is much less. Thus these are both\ntranslatable strings:\n\n    gettext("Translatable String")\n    _("Translatable String")\n\nPython of course has no preprocessor so this doesn\'t work so well.  Thus,\npygettext searches only for _() by default, but see the -k/--keyword flag\nbelow for how to augment this.\n\n [1] http://www.python.org/workshops/1997-10/proceedings/loewis.html\n [2] http://www.gnu.org/software/gettext/gettext.html\n\nNOTE: pygettext attempts to be option and feature compatible with GNU\nxgettext where ever possible. However some options are still missing or are\nnot fully implemented. Also, xgettext\'s use of command line switches with\noption arguments is broken, and in these cases, pygettext just defines\nadditional switches.\n\nUsage: pygettext [options] inputfile ...\n\nOptions:\n\n    -a\n    --extract-all\n        Extract all strings.\n\n    -d name\n    --default-domain=name\n        Rename the default output file from messages.pot to name.pot.\n\n    -E\n    --escape\n        Replace non-ASCII characters with octal escape sequences.\n\n    -D\n    --docstrings\n        Extract module, class, method, and function docstrings.  These do\n        not need to be wrapped in _() markers, and in fact cannot be for\n        Python to consider them docstrings. (See also the -X option).\n\n    -h\n    --help\n        Print this help message and exit.\n\n    -k word\n    --keyword=word\n        Keywords to look for in addition to the default set, which are:\n        %(DEFAULTKEYWORDS)s\n\n        You can have multiple -k flags on the command line.\n\n    -K\n    --no-default-keywords\n        Disable the default set of keywords (see above).  Any keywords\n        explicitly added with the -k/--keyword option are still recognized.\n\n    --no-location\n        Do not write filename/lineno location comments.\n\n    -n\n    --add-location\n        Write filename/lineno location comments indicating where each\n        extracted string is found in the source.  These lines appear before\n        each msgid.  The style of comments is controlled by the -S/--style\n        option.  This is the default.\n\n    -o filename\n    --output=filename\n        Rename the default output file from messages.pot to filename.  If\n        filename is `-\' then the output is sent to standard out.\n\n    -p dir\n    --output-dir=dir\n        Output files will be placed in directory dir.\n\n    -S stylename\n    --style stylename\n        Specify which style to use for location comments.  Two styles are\n        supported:\n\n        Solaris  # File: filename, line: line-number\n        GNU      #: filename:line\n\n        The style name is case insensitive.  GNU style is the default.\n\n    -v\n    --verbose\n        Print the names of the files being processed.\n\n    -V\n    --version\n        Print the version of pygettext and exit.\n\n    -w columns\n    --width=columns\n        Set width of output to columns.\n\n    -x filename\n    --exclude-file=filename\n        Specify a file that contains a list of strings that are not be\n        extracted from the input files.  Each string to be excluded must\n        appear on a line by itself in the file.\n\n    -X filename\n    --no-docstrings=filename\n        Specify a file that contains a list of files (one per line) that\n        should not have their docstrings extracted.  This is only useful in\n        conjunction with the -D option above.\n\nIf `inputfile\' is -, standard input is read.\n', lineno=156, col_offset=-1)], [], None, None, lineno=23, col_offset=10), lineno=23, col_offset=0), Import([alias('os', None)], lineno=158, col_offset=0), Import([alias('imp', None)], lineno=159, col_offset=0), Import([alias('sys', None)], lineno=160, col_offset=0), Import([alias('glob', None)], lineno=161, col_offset=0), Import([alias('time', None)], lineno=162, col_offset=0), Import([alias('getopt', None)], lineno=163, col_offset=0), Import([alias('token', None)], lineno=164, col_offset=0), Import([alias('tokenize', None)], lineno=165, col_offset=0), Import([alias('operator', None)], lineno=166, col_offset=0), Assign([Name('__version__', Store(), lineno=168, col_offset=0)], Str('1.5', lineno=168, col_offset=14), lineno=168, col_offset=0), Assign([Name('default_keywords', Store(), lineno=170, col_offset=0)], List([Str('_', lineno=170, col_offset=20)], Load(), lineno=170, col_offset=19), lineno=170, col_offset=0), Assign([Name('DEFAULTKEYWORDS', Store(), lineno=171, col_offset=0)], Call(Attribute(Str(', ', lineno=171, col_offset=18), 'join', Load(), lineno=171, col_offset=18), [Name('default_keywords', Load(), lineno=171, col_offset=28)], [], None, None, lineno=171, col_offset=18), lineno=171, col_offset=0), Assign([Name('EMPTYSTRING', Store(), lineno=173, col_offset=0)], Str('', lineno=173, col_offset=14), lineno=173, col_offset=0), Assign([Name('pot_header', Store(), lineno=179, col_offset=0)], Call(Name('_', Load(), lineno=179, col_offset=13), [Str('# SOME DESCRIPTIVE TITLE.\n# Copyright (C) YEAR ORGANIZATION\n# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.\n#\nmsgid ""\nmsgstr ""\n"Project-Id-Version: PACKAGE VERSION\\n"\n"POT-Creation-Date: %(time)s\\n"\n"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\\n"\n"Last-Translator: FULL NAME <EMAIL@ADDRESS>\\n"\n"Language-Team: LANGUAGE <LL@li.org>\\n"\n"MIME-Version: 1.0\\n"\n"Content-Type: text/plain; charset=CHARSET\\n"\n"Content-Transfer-Encoding: ENCODING\\n"\n"Generated-By: pygettext.py %(version)s\\n"\n\n', lineno=196, col_offset=-1)], [], None, None, lineno=179, col_offset=13), lineno=179, col_offset=0), FunctionDef('usage', arguments([Name('code', Param(), lineno=199, col_offset=10), Name('msg', Param(), lineno=199, col_offset=16)], None, None, [Str('', lineno=199, col_offset=20)]), [Print(Attribute(Name('sys', Load(), lineno=200, col_offset=13), 'stderr', Load(), lineno=200, col_offset=13), [BinOp(Name('__doc__', Load(), lineno=200, col_offset=25), Mod(), Call(Name('globals', Load(), lineno=200, col_offset=35), [], [], None, None, lineno=200, col_offset=35), lineno=200, col_offset=25)], True, lineno=200, col_offset=4), If(Name('msg', Load(), lineno=201, col_offset=7), [Print(Attribute(Name('sys', Load(), lineno=202, col_offset=17), 'stderr', Load(), lineno=202, col_offset=17), [Name('msg', Load(), lineno=202, col_offset=29)], True, lineno=202, col_offset=8)], [], lineno=201, col_offset=4), Expr(Call(Attribute(Name('sys', Load(), lineno=203, col_offset=4), 'exit', Load(), lineno=203, col_offset=4), [Name('code', Load(), lineno=203, col_offset=13)], [], None, None, lineno=203, col_offset=4), lineno=203, col_offset=4)], [], lineno=199, col_offset=0), Assign([Name('escapes', Store(), lineno=207, col_offset=0)], List([], Load(), lineno=207, col_offset=10), lineno=207, col_offset=0), FunctionDef('make_escapes', arguments([Name('pass_iso8859', Param(), lineno=209, col_offset=17)], None, None, []), [Global(['escapes'], lineno=210, col_offset=4), If(Name('pass_iso8859', Load(), lineno=211, col_offset=7), [Assign([Name('mod', Store(), lineno=215, col_offset=8)], Num(128, lineno=215, col_offset=14), lineno=215, col_offset=8)], [Assign([Name('mod', Store(), lineno=217, col_offset=8)], Num(256, lineno=217, col_offset=14), lineno=217, col_offset=8)], lineno=211, col_offset=4), For(Name('i', Store(), lineno=218, col_offset=8), Call(Name('range', Load(), lineno=218, col_offset=13), [Num(256, lineno=218, col_offset=19)], [], None, None, lineno=218, col_offset=13), [If(Compare(Num(32, lineno=219, col_offset=11), [LtE(), LtE()], [BinOp(Name('i', Load(), lineno=219, col_offset=18), Mod(), Name('mod', Load(), lineno=219, col_offset=22), lineno=219, col_offset=18), Num(126, lineno=219, col_offset=30)], lineno=219, col_offset=11), [Expr(Call(Attribute(Name('escapes', Load(), lineno=220, col_offset=12), 'append', Load(), lineno=220, col_offset=12), [Call(Name('chr', Load(), lineno=220, col_offset=27), [Name('i', Load(), lineno=220, col_offset=31)], [], None, None, lineno=220, col_offset=27)], [], None, None, lineno=220, col_offset=12), lineno=220, col_offset=12)], [Expr(Call(Attribute(Name('escapes', Load(), lineno=222, col_offset=12), 'append', Load(), lineno=222, col_offset=12), [BinOp(Str('\\%03o', lineno=222, col_offset=27), Mod(), Name('i', Load(), lineno=222, col_offset=38), lineno=222, col_offset=27)], [], None, None, lineno=222, col_offset=12), lineno=222, col_offset=12)], lineno=219, col_offset=8)], [], lineno=218, col_offset=4), Assign([Subscript(Name('escapes', Load(), lineno=223, col_offset=4), Index(Call(Name('ord', Load(), lineno=223, col_offset=12), [Str('\\', lineno=223, col_offset=16)], [], None, None, lineno=223, col_offset=12)), Store(), lineno=223, col_offset=4)], Str('\\\\', lineno=223, col_offset=25), lineno=223, col_offset=4), Assign([Subscript(Name('escapes', Load(), lineno=224, col_offset=4), Index(Call(Name('ord', Load(), lineno=224, col_offset=12), [Str('\t', lineno=224, col_offset=16)], [], None, None, lineno=224, col_offset=12)), Store(), lineno=224, col_offset=4)], Str('\\t', lineno=224, col_offset=25), lineno=224, col_offset=4), Assign([Subscript(Name('escapes', Load(), lineno=225, col_offset=4), Index(Call(Name('ord', Load(), lineno=225, col_offset=12), [Str('\r', lineno=225, col_offset=16)], [], None, None, lineno=225, col_offset=12)), Store(), lineno=225, col_offset=4)], Str('\\r', lineno=225, col_offset=25), lineno=225, col_offset=4), Assign([Subscript(Name('escapes', Load(), lineno=226, col_offset=4), Index(Call(Name('ord', Load(), lineno=226, col_offset=12), [Str('\n', lineno=226, col_offset=16)], [], None, None, lineno=226, col_offset=12)), Store(), lineno=226, col_offset=4)], Str('\\n', lineno=226, col_offset=25), lineno=226, col_offset=4), Assign([Subscript(Name('escapes', Load(), lineno=227, col_offset=4), Index(Call(Name('ord', Load(), lineno=227, col_offset=12), [Str('"', lineno=227, col_offset=16)], [], None, None, lineno=227, col_offset=12)), Store(), lineno=227, col_offset=4)], Str('\\"', lineno=227, col_offset=25), lineno=227, col_offset=4)], [], lineno=209, col_offset=0), FunctionDef('escape', arguments([Name('s', Param(), lineno=230, col_offset=11)], None, None, []), [Global(['escapes'], lineno=231, col_offset=4), Assign([Name('s', Store(), lineno=232, col_offset=4)], Call(Name('list', Load(), lineno=232, col_offset=8), [Name('s', Load(), lineno=232, col_offset=13)], [], None, None, lineno=232, col_offset=8), lineno=232, col_offset=4), For(Name('i', Store(), lineno=233, col_offset=8), Call(Name('range', Load(), lineno=233, col_offset=13), [Call(Name('len', Load(), lineno=233, col_offset=19), [Name('s', Load(), lineno=233, col_offset=23)], [], None, None, lineno=233, col_offset=19)], [], None, None, lineno=233, col_offset=13), [Assign([Subscript(Name('s', Load(), lineno=234, col_offset=8), Index(Name('i', Load(), lineno=234, col_offset=10)), Store(), lineno=234, col_offset=8)], Subscript(Name('escapes', Load(), lineno=234, col_offset=15), Index(Call(Name('ord', Load(), lineno=234, col_offset=23), [Subscript(Name('s', Load(), lineno=234, col_offset=27), Index(Name('i', Load(), lineno=234, col_offset=29)), Load(), lineno=234, col_offset=27)], [], None, None, lineno=234, col_offset=23)), Load(), lineno=234, col_offset=15), lineno=234, col_offset=8)], [], lineno=233, col_offset=4), Return(Call(Attribute(Name('EMPTYSTRING', Load(), lineno=235, col_offset=11), 'join', Load(), lineno=235, col_offset=11), [Name('s', Load(), lineno=235, col_offset=28)], [], None, None, lineno=235, col_offset=11), lineno=235, col_offset=4)], [], lineno=230, col_offset=0), FunctionDef('safe_eval', arguments([Name('s', Param(), lineno=238, col_offset=14)], None, None, []), [Return(Call(Name('eval', Load(), lineno=240, col_offset=11), [Name('s', Load(), lineno=240, col_offset=16), Dict([Str('__builtins__', lineno=240, col_offset=20)], [Dict([], [], lineno=240, col_offset=35)], lineno=240, col_offset=19), Dict([], [], lineno=240, col_offset=40)], [], None, None, lineno=240, col_offset=11), lineno=240, col_offset=4)], [], lineno=238, col_offset=0), FunctionDef('normalize', arguments([Name('s', Param(), lineno=243, col_offset=14)], None, None, []), [Assign([Name('lines', Store(), lineno=246, col_offset=4)], Call(Attribute(Name('s', Load(), lineno=246, col_offset=12), 'split', Load(), lineno=246, col_offset=12), [Str('\n', lineno=246, col_offset=20)], [], None, None, lineno=246, col_offset=12), lineno=246, col_offset=4), If(Compare(Call(Name('len', Load(), lineno=247, col_offset=7), [Name('lines', Load(), lineno=247, col_offset=11)], [], None, None, lineno=247, col_offset=7), [Eq()], [Num(1, lineno=247, col_offset=21)], lineno=247, col_offset=7), [Assign([Name('s', Store(), lineno=248, col_offset=8)], BinOp(BinOp(Str('"', lineno=248, col_offset=12), Add(), Call(Name('escape', Load(), lineno=248, col_offset=18), [Name('s', Load(), lineno=248, col_offset=25)], [], None, None, lineno=248, col_offset=18), lineno=248, col_offset=12), Add(), Str('"', lineno=248, col_offset=30), lineno=248, col_offset=28), lineno=248, col_offset=8)], [If(UnaryOp(Not(), Subscript(Name('lines', Load(), lineno=250, col_offset=15), Index(Num(-1, lineno=250, col_offset=22)), Load(), lineno=250, col_offset=15), lineno=250, col_offset=11), [Delete([Subscript(Name('lines', Load(), lineno=251, col_offset=16), Index(Num(-1, lineno=251, col_offset=23)), Del(), lineno=251, col_offset=16)], lineno=251, col_offset=12), Assign([Subscript(Name('lines', Load(), lineno=252, col_offset=12), Index(Num(-1, lineno=252, col_offset=19)), Store(), lineno=252, col_offset=12)], BinOp(Subscript(Name('lines', Load(), lineno=252, col_offset=24), Index(Num(-1, lineno=252, col_offset=31)), Load(), lineno=252, col_offset=24), Add(), Str('\n', lineno=252, col_offset=36), lineno=252, col_offset=24), lineno=252, col_offset=12)], [], lineno=250, col_offset=8), For(Name('i', Store(), lineno=253, col_offset=12), Call(Name('range', Load(), lineno=253, col_offset=17), [Call(Name('len', Load(), lineno=253, col_offset=23), [Name('lines', Load(), lineno=253, col_offset=27)], [], None, None, lineno=253, col_offset=23)], [], None, None, lineno=253, col_offset=17), [Assign([Subscript(Name('lines', Load(), lineno=254, col_offset=12), Index(Name('i', Load(), lineno=254, col_offset=18)), Store(), lineno=254, col_offset=12)], Call(Name('escape', Load(), lineno=254, col_offset=23), [Subscript(Name('lines', Load(), lineno=254, col_offset=30), Index(Name('i', Load(), lineno=254, col_offset=36)), Load(), lineno=254, col_offset=30)], [], None, None, lineno=254, col_offset=23), lineno=254, col_offset=12)], [], lineno=253, col_offset=8), Assign([Name('lineterm', Store(), lineno=255, col_offset=8)], Str('\\n"\n"', lineno=255, col_offset=19), lineno=255, col_offset=8), Assign([Name('s', Store(), lineno=256, col_offset=8)], BinOp(BinOp(Str('""\n"', lineno=256, col_offset=12), Add(), Call(Attribute(Name('lineterm', Load(), lineno=256, col_offset=22), 'join', Load(), lineno=256, col_offset=22), [Name('lines', Load(), lineno=256, col_offset=36)], [], None, None, lineno=256, col_offset=22), lineno=256, col_offset=12), Add(), Str('"', lineno=256, col_offset=45), lineno=256, col_offset=43), lineno=256, col_offset=8)], lineno=247, col_offset=4), Return(Name('s', Load(), lineno=257, col_offset=11), lineno=257, col_offset=4)], [], lineno=243, col_offset=0), FunctionDef('containsAny', arguments([Name('str', Param(), lineno=260, col_offset=16), Name('set', Param(), lineno=260, col_offset=21)], None, None, []), [Expr(Str("Check whether 'str' contains ANY of the chars in 'set'", lineno=261, col_offset=4), lineno=261, col_offset=4), Return(Compare(Num(1, lineno=262, col_offset=11), [In()], [ListComp(Compare(Name('c', Load(), lineno=262, col_offset=17), [In()], [Name('str', Load(), lineno=262, col_offset=22)], lineno=262, col_offset=17), [comprehension(Name('c', Store(), lineno=262, col_offset=30), Name('set', Load(), lineno=262, col_offset=35), [])], lineno=262, col_offset=17)], lineno=262, col_offset=11), lineno=262, col_offset=4)], [], lineno=260, col_offset=0), FunctionDef('_visit_pyfiles', arguments([Name('list', Param(), lineno=265, col_offset=19), Name('dirname', Param(), lineno=265, col_offset=25), Name('names', Param(), lineno=265, col_offset=34)], None, None, []), [Expr(Str('Helper for getFilesForName().', lineno=266, col_offset=4), lineno=266, col_offset=4), If(UnaryOp(Not(), Call(Attribute(Call(Name('globals', Load(), lineno=268, col_offset=11), [], [], None, None, lineno=268, col_offset=11), 'has_key', Load(), lineno=268, col_offset=11), [Str('_py_ext', lineno=268, col_offset=29)], [], None, None, lineno=268, col_offset=11), lineno=268, col_offset=7), [Global(['_py_ext'], lineno=269, col_offset=8), Assign([Name('_py_ext', Store(), lineno=270, col_offset=8)], Subscript(ListComp(Subscript(Name('triple', Load(), lineno=270, col_offset=19), Index(Num(0, lineno=270, col_offset=26)), Load(), lineno=270, col_offset=19), [comprehension(Name('triple', Store(), lineno=270, col_offset=33), Call(Attribute(Name('imp', Load(), lineno=270, col_offset=43), 'get_suffixes', Load(), lineno=270, col_offset=43), [], [], None, None, lineno=270, col_offset=43), [Compare(Subscript(Name('triple', Load(), lineno=271, col_offset=22), Index(Num(2, lineno=271, col_offset=29)), Load(), lineno=271, col_offset=22), [Eq()], [Attribute(Name('imp', Load(), lineno=271, col_offset=35), 'PY_SOURCE', Load(), lineno=271, col_offset=35)], lineno=271, col_offset=22)])], lineno=270, col_offset=19), Index(Num(0, lineno=271, col_offset=50)), Load(), lineno=270, col_offset=19), lineno=270, col_offset=8)], [], lineno=268, col_offset=4), If(Compare(Str('CVS', lineno=274, col_offset=7), [In()], [Name('names', Load(), lineno=274, col_offset=16)], lineno=274, col_offset=7), [Expr(Call(Attribute(Name('names', Load(), lineno=275, col_offset=8), 'remove', Load(), lineno=275, col_offset=8), [Str('CVS', lineno=275, col_offset=21)], [], None, None, lineno=275, col_offset=8), lineno=275, col_offset=8)], [], lineno=274, col_offset=4), Expr(Call(Attribute(Name('list', Load(), lineno=278, col_offset=4), 'extend', Load(), lineno=278, col_offset=4), [ListComp(Call(Attribute(Attribute(Name('os', Load(), lineno=279, col_offset=9), 'path', Load(), lineno=279, col_offset=9), 'join', Load(), lineno=279, col_offset=9), [Name('dirname', Load(), lineno=279, col_offset=22), Name('file', Load(), lineno=279, col_offset=31)], [], None, None, lineno=279, col_offset=9), [comprehension(Name('file', Store(), lineno=279, col_offset=41), Name('names', Load(), lineno=279, col_offset=49), [Compare(Subscript(Call(Attribute(Attribute(Name('os', Load(), lineno=280, col_offset=12), 'path', Load(), lineno=280, col_offset=12), 'splitext', Load(), lineno=280, col_offset=12), [Name('file', Load(), lineno=280, col_offset=29)], [], None, None, lineno=280, col_offset=12), Index(Num(1, lineno=280, col_offset=35)), Load(), lineno=280, col_offset=12), [Eq()], [Name('_py_ext', Load(), lineno=280, col_offset=41)], lineno=280, col_offset=12)])], lineno=279, col_offset=9)], [], None, None, lineno=278, col_offset=4), lineno=278, col_offset=4)], [], lineno=265, col_offset=0), FunctionDef('_get_modpkg_path', arguments([Name('dotted_name', Param(), lineno=284, col_offset=21), Name('pathlist', Param(), lineno=284, col_offset=34)], None, None, [Name('None', Load(), lineno=284, col_offset=43)]), [Expr(Str('Get the filesystem path for a module or a package.\n\n    Return the file system path to a file for a module, and to a directory for\n    a package. Return None if the name is not found, or is a builtin or\n    extension module.\n    ', lineno=290, col_offset=-1), lineno=290, col_offset=-1), Assign([Name('parts', Store(), lineno=292, col_offset=4)], Call(Attribute(Name('dotted_name', Load(), lineno=292, col_offset=12), 'split', Load(), lineno=292, col_offset=12), [Str('.', lineno=292, col_offset=30), Num(1, lineno=292, col_offset=35)], [], None, None, lineno=292, col_offset=12), lineno=292, col_offset=4), If(Compare(Call(Name('len', Load(), lineno=294, col_offset=7), [Name('parts', Load(), lineno=294, col_offset=11)], [], None, None, lineno=294, col_offset=7), [Gt()], [Num(1, lineno=294, col_offset=20)], lineno=294, col_offset=7), [TryExcept([Assign([Tuple([Name('file', Store(), lineno=297, col_offset=12), Name('pathname', Store(), lineno=297, col_offset=18), Name('description', Store(), lineno=297, col_offset=28)], Store(), lineno=297, col_offset=12)], Call(Attribute(Name('imp', Load(), lineno=297, col_offset=42), 'find_module', Load(), lineno=297, col_offset=42), [Subscript(Name('parts', Load(), lineno=297, col_offset=58), Index(Num(0, lineno=297, col_offset=64)), Load(), lineno=297, col_offset=58), Name('pathlist', Load(), lineno=297, col_offset=68)], [], None, None, lineno=297, col_offset=42), lineno=297, col_offset=12), If(Name('file', Load(), lineno=298, col_offset=15), [Expr(Call(Attribute(Name('file', Load(), lineno=298, col_offset=21), 'close', Load(), lineno=298, col_offset=21), [], [], None, None, lineno=298, col_offset=21), lineno=298, col_offset=21)], [], lineno=298, col_offset=12)], [ExceptHandler(Name('ImportError', Load(), lineno=299, col_offset=15), None, [Return(Name('None', Load(), lineno=300, col_offset=19), lineno=300, col_offset=12)], lineno=299, col_offset=8)], [], lineno=296, col_offset=8), If(Compare(Subscript(Name('description', Load(), lineno=303, col_offset=11), Index(Num(2, lineno=303, col_offset=23)), Load(), lineno=303, col_offset=11), [Eq()], [Attribute(Name('imp', Load(), lineno=303, col_offset=29), 'PKG_DIRECTORY', Load(), lineno=303, col_offset=29)], lineno=303, col_offset=11), [Assign([Name('pathname', Store(), lineno=305, col_offset=12)], Call(Name('_get_modpkg_path', Load(), lineno=305, col_offset=23), [Subscript(Name('parts', Load(), lineno=305, col_offset=40), Index(Num(1, lineno=305, col_offset=46)), Load(), lineno=305, col_offset=40), List([Name('pathname', Load(), lineno=305, col_offset=51)], Load(), lineno=305, col_offset=50)], [], None, None, lineno=305, col_offset=23), lineno=305, col_offset=12)], [Assign([Name('pathname', Store(), lineno=307, col_offset=12)], Name('None', Load(), lineno=307, col_offset=23), lineno=307, col_offset=12)], lineno=303, col_offset=8)], [TryExcept([Assign([Tuple([Name('file', Store(), lineno=311, col_offset=12), Name('pathname', Store(), lineno=311, col_offset=18), Name('description', Store(), lineno=311, col_offset=28)], Store(), lineno=311, col_offset=12)], Call(Attribute(Name('imp', Load(), lineno=311, col_offset=42), 'find_module', Load(), lineno=311, col_offset=42), [Name('dotted_name', Load(), lineno=312, col_offset=16), Name('pathlist', Load(), lineno=312, col_offset=29)], [], None, None, lineno=311, col_offset=42), lineno=311, col_offset=12), If(Name('file', Load(), lineno=313, col_offset=15), [Expr(Call(Attribute(Name('file', Load(), lineno=314, col_offset=16), 'close', Load(), lineno=314, col_offset=16), [], [], None, None, lineno=314, col_offset=16), lineno=314, col_offset=16)], [], lineno=313, col_offset=12), If(Compare(Subscript(Name('description', Load(), lineno=315, col_offset=15), Index(Num(2, lineno=315, col_offset=27)), Load(), lineno=315, col_offset=15), [NotIn()], [List([Attribute(Name('imp', Load(), lineno=315, col_offset=38), 'PY_SOURCE', Load(), lineno=315, col_offset=38), Attribute(Name('imp', Load(), lineno=315, col_offset=53), 'PKG_DIRECTORY', Load(), lineno=315, col_offset=53)], Load(), lineno=315, col_offset=37)], lineno=315, col_offset=15), [Assign([Name('pathname', Store(), lineno=316, col_offset=16)], Name('None', Load(), lineno=316, col_offset=27), lineno=316, col_offset=16)], [], lineno=315, col_offset=12)], [ExceptHandler(Name('ImportError', Load(), lineno=317, col_offset=15), None, [Assign([Name('pathname', Store(), lineno=318, col_offset=12)], Name('None', Load(), lineno=318, col_offset=23), lineno=318, col_offset=12)], lineno=317, col_offset=8)], [], lineno=310, col_offset=8)], lineno=294, col_offset=4), Return(Name('pathname', Load(), lineno=320, col_offset=11), lineno=320, col_offset=4)], [], lineno=284, col_offset=0), FunctionDef('getFilesForName', arguments([Name('name', Param(), lineno=323, col_offset=20)], None, None, []), [Expr(Str('Get a list of module files for a filename, a module or package name,\n    or a directory.\n    ', lineno=326, col_offset=-1), lineno=326, col_offset=-1), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=327, col_offset=11), 'path', Load(), lineno=327, col_offset=11), 'exists', Load(), lineno=327, col_offset=11), [Name('name', Load(), lineno=327, col_offset=26)], [], None, None, lineno=327, col_offset=11), lineno=327, col_offset=7), [If(Call(Name('containsAny', Load(), lineno=329, col_offset=11), [Name('name', Load(), lineno=329, col_offset=23), Str('*?[]', lineno=329, col_offset=29)], [], None, None, lineno=329, col_offset=11), [Assign([Name('files', Store(), lineno=330, col_offset=12)], Call(Attribute(Name('glob', Load(), lineno=330, col_offset=20), 'glob', Load(), lineno=330, col_offset=20), [Name('name', Load(), lineno=330, col_offset=30)], [], None, None, lineno=330, col_offset=20), lineno=330, col_offset=12), Assign([Name('list', Store(), lineno=331, col_offset=12)], List([], Load(), lineno=331, col_offset=19), lineno=331, col_offset=12), For(Name('file', Store(), lineno=332, col_offset=16), Name('files', Load(), lineno=332, col_offset=24), [Expr(Call(Attribute(Name('list', Load(), lineno=333, col_offset=16), 'extend', Load(), lineno=333, col_offset=16), [Call(Name('getFilesForName', Load(), lineno=333, col_offset=28), [Name('file', Load(), lineno=333, col_offset=44)], [], None, None, lineno=333, col_offset=28)], [], None, None, lineno=333, col_offset=16), lineno=333, col_offset=16)], [], lineno=332, col_offset=12), Return(Name('list', Load(), lineno=334, col_offset=19), lineno=334, col_offset=12)], [], lineno=329, col_offset=8), Assign([Name('name', Store(), lineno=337, col_offset=8)], Call(Name('_get_modpkg_path', Load(), lineno=337, col_offset=15), [Name('name', Load(), lineno=337, col_offset=32)], [], None, None, lineno=337, col_offset=15), lineno=337, col_offset=8), If(UnaryOp(Not(), Name('name', Load(), lineno=338, col_offset=15), lineno=338, col_offset=11), [Return(List([], Load(), lineno=339, col_offset=19), lineno=339, col_offset=12)], [], lineno=338, col_offset=8)], [], lineno=327, col_offset=4), If(Call(Attribute(Attribute(Name('os', Load(), lineno=341, col_offset=7), 'path', Load(), lineno=341, col_offset=7), 'isdir', Load(), lineno=341, col_offset=7), [Name('name', Load(), lineno=341, col_offset=21)], [], None, None, lineno=341, col_offset=7), [Assign([Name('list', Store(), lineno=343, col_offset=8)], List([], Load(), lineno=343, col_offset=15), lineno=343, col_offset=8), Expr(Call(Attribute(Attribute(Name('os', Load(), lineno=344, col_offset=8), 'path', Load(), lineno=344, col_offset=8), 'walk', Load(), lineno=344, col_offset=8), [Name('name', Load(), lineno=344, col_offset=21), Name('_visit_pyfiles', Load(), lineno=344, col_offset=27), Name('list', Load(), lineno=344, col_offset=43)], [], None, None, lineno=344, col_offset=8), lineno=344, col_offset=8), Return(Name('list', Load(), lineno=345, col_offset=15), lineno=345, col_offset=8)], [If(Call(Attribute(Attribute(Name('os', Load(), lineno=346, col_offset=9), 'path', Load(), lineno=346, col_offset=9), 'exists', Load(), lineno=346, col_offset=9), [Name('name', Load(), lineno=346, col_offset=24)], [], None, None, lineno=346, col_offset=9), [Return(List([Name('name', Load(), lineno=348, col_offset=16)], Load(), lineno=348, col_offset=15), lineno=348, col_offset=8)], [], lineno=346, col_offset=9)], lineno=341, col_offset=4), Return(List([], Load(), lineno=350, col_offset=11), lineno=350, col_offset=4)], [], lineno=323, col_offset=0), ClassDef('TokenEater', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=354, col_offset=17), Name('options', Param(), lineno=354, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=355, col_offset=8), '__options', Store(), lineno=355, col_offset=8)], Name('options', Load(), lineno=355, col_offset=25), lineno=355, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=356, col_offset=8), '__messages', Store(), lineno=356, col_offset=8)], Dict([], [], lineno=356, col_offset=26), lineno=356, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=357, col_offset=8), '__state', Store(), lineno=357, col_offset=8)], Attribute(Name('self', Load(), lineno=357, col_offset=23), '__waiting', Load(), lineno=357, col_offset=23), lineno=357, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=358, col_offset=8), '__data', Store(), lineno=358, col_offset=8)], List([], Load(), lineno=358, col_offset=22), lineno=358, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=359, col_offset=8), '__lineno', Store(), lineno=359, col_offset=8)], Num(-1, lineno=359, col_offset=25), lineno=359, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=360, col_offset=8), '__freshmodule', Store(), lineno=360, col_offset=8)], Num(1, lineno=360, col_offset=29), lineno=360, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=361, col_offset=8), '__curfile', Store(), lineno=361, col_offset=8)], Name('None', Load(), lineno=361, col_offset=25), lineno=361, col_offset=8)], [], lineno=354, col_offset=4), FunctionDef('__call__', arguments([Name('self', Param(), lineno=363, col_offset=17), Name('ttype', Param(), lineno=363, col_offset=23), Name('tstring', Param(), lineno=363, col_offset=30), Name('stup', Param(), lineno=363, col_offset=39), Name('etup', Param(), lineno=363, col_offset=45), Name('line', Param(), lineno=363, col_offset=51)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=368, col_offset=8), '__state', Load(), lineno=368, col_offset=8), [Name('ttype', Load(), lineno=368, col_offset=21), Name('tstring', Load(), lineno=368, col_offset=28), Subscript(Name('stup', Load(), lineno=368, col_offset=37), Index(Num(0, lineno=368, col_offset=42)), Load(), lineno=368, col_offset=37)], [], None, None, lineno=368, col_offset=8), lineno=368, col_offset=8)], [], lineno=363, col_offset=4), FunctionDef('__waiting', arguments([Name('self', Param(), lineno=370, col_offset=18), Name('ttype', Param(), lineno=370, col_offset=24), Name('tstring', Param(), lineno=370, col_offset=31), Name('lineno', Param(), lineno=370, col_offset=40)], None, None, []), [Assign([Name('opts', Store(), lineno=371, col_offset=8)], Attribute(Name('self', Load(), lineno=371, col_offset=15), '__options', Load(), lineno=371, col_offset=15), lineno=371, col_offset=8), If(BoolOp(And(), [Attribute(Name('opts', Load(), lineno=373, col_offset=11), 'docstrings', Load(), lineno=373, col_offset=11), UnaryOp(Not(), Call(Attribute(Attribute(Name('opts', Load(), lineno=373, col_offset=35), 'nodocstrings', Load(), lineno=373, col_offset=35), 'get', Load(), lineno=373, col_offset=35), [Attribute(Name('self', Load(), lineno=373, col_offset=57), '__curfile', Load(), lineno=373, col_offset=57)], [], None, None, lineno=373, col_offset=35), lineno=373, col_offset=31)], lineno=373, col_offset=11), [If(Attribute(Name('self', Load(), lineno=375, col_offset=15), '__freshmodule', Load(), lineno=375, col_offset=15), [If(Compare(Name('ttype', Load(), lineno=376, col_offset=19), [Eq()], [Attribute(Name('tokenize', Load(), lineno=376, col_offset=28), 'STRING', Load(), lineno=376, col_offset=28)], lineno=376, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=377, col_offset=20), '__addentry', Load(), lineno=377, col_offset=20), [Call(Name('safe_eval', Load(), lineno=377, col_offset=36), [Name('tstring', Load(), lineno=377, col_offset=46)], [], None, None, lineno=377, col_offset=36), Name('lineno', Load(), lineno=377, col_offset=56)], [keyword('isdocstring', Num(1, lineno=377, col_offset=76))], None, None, lineno=377, col_offset=20), lineno=377, col_offset=20), Assign([Attribute(Name('self', Load(), lineno=378, col_offset=20), '__freshmodule', Store(), lineno=378, col_offset=20)], Num(0, lineno=378, col_offset=41), lineno=378, col_offset=20)], [If(Compare(Name('ttype', Load(), lineno=379, col_offset=21), [NotIn()], [Tuple([Attribute(Name('tokenize', Load(), lineno=379, col_offset=35), 'COMMENT', Load(), lineno=379, col_offset=35), Attribute(Name('tokenize', Load(), lineno=379, col_offset=53), 'NL', Load(), lineno=379, col_offset=53)], Load(), lineno=379, col_offset=35)], lineno=379, col_offset=21), [Assign([Attribute(Name('self', Load(), lineno=380, col_offset=20), '__freshmodule', Store(), lineno=380, col_offset=20)], Num(0, lineno=380, col_offset=41), lineno=380, col_offset=20)], [], lineno=379, col_offset=21)], lineno=376, col_offset=16), Return(None, lineno=381, col_offset=16)], [], lineno=375, col_offset=12), If(BoolOp(And(), [Compare(Name('ttype', Load(), lineno=383, col_offset=15), [Eq()], [Attribute(Name('tokenize', Load(), lineno=383, col_offset=24), 'NAME', Load(), lineno=383, col_offset=24)], lineno=383, col_offset=15), Compare(Name('tstring', Load(), lineno=383, col_offset=42), [In()], [Tuple([Str('class', lineno=383, col_offset=54), Str('def', lineno=383, col_offset=63)], Load(), lineno=383, col_offset=54)], lineno=383, col_offset=42)], lineno=383, col_offset=15), [Assign([Attribute(Name('self', Load(), lineno=384, col_offset=16), '__state', Store(), lineno=384, col_offset=16)], Attribute(Name('self', Load(), lineno=384, col_offset=31), '__suiteseen', Load(), lineno=384, col_offset=31), lineno=384, col_offset=16), Return(None, lineno=385, col_offset=16)], [], lineno=383, col_offset=12)], [], lineno=373, col_offset=8), If(BoolOp(And(), [Compare(Name('ttype', Load(), lineno=386, col_offset=11), [Eq()], [Attribute(Name('tokenize', Load(), lineno=386, col_offset=20), 'NAME', Load(), lineno=386, col_offset=20)], lineno=386, col_offset=11), Compare(Name('tstring', Load(), lineno=386, col_offset=38), [In()], [Attribute(Name('opts', Load(), lineno=386, col_offset=49), 'keywords', Load(), lineno=386, col_offset=49)], lineno=386, col_offset=38)], lineno=386, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=387, col_offset=12), '__state', Store(), lineno=387, col_offset=12)], Attribute(Name('self', Load(), lineno=387, col_offset=27), '__keywordseen', Load(), lineno=387, col_offset=27), lineno=387, col_offset=12)], [], lineno=386, col_offset=8)], [], lineno=370, col_offset=4), FunctionDef('__suiteseen', arguments([Name('self', Param(), lineno=389, col_offset=20), Name('ttype', Param(), lineno=389, col_offset=26), Name('tstring', Param(), lineno=389, col_offset=33), Name('lineno', Param(), lineno=389, col_offset=42)], None, None, []), [If(BoolOp(And(), [Compare(Name('ttype', Load(), lineno=391, col_offset=11), [Eq()], [Attribute(Name('tokenize', Load(), lineno=391, col_offset=20), 'OP', Load(), lineno=391, col_offset=20)], lineno=391, col_offset=11), Compare(Name('tstring', Load(), lineno=391, col_offset=36), [Eq()], [Str(':', lineno=391, col_offset=47)], lineno=391, col_offset=36)], lineno=391, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=392, col_offset=12), '__state', Store(), lineno=392, col_offset=12)], Attribute(Name('self', Load(), lineno=392, col_offset=27), '__suitedocstring', Load(), lineno=392, col_offset=27), lineno=392, col_offset=12)], [], lineno=391, col_offset=8)], [], lineno=389, col_offset=4), FunctionDef('__suitedocstring', arguments([Name('self', Param(), lineno=394, col_offset=25), Name('ttype', Param(), lineno=394, col_offset=31), Name('tstring', Param(), lineno=394, col_offset=38), Name('lineno', Param(), lineno=394, col_offset=47)], None, None, []), [If(Compare(Name('ttype', Load(), lineno=396, col_offset=11), [Eq()], [Attribute(Name('tokenize', Load(), lineno=396, col_offset=20), 'STRING', Load(), lineno=396, col_offset=20)], lineno=396, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=397, col_offset=12), '__addentry', Load(), lineno=397, col_offset=12), [Call(Name('safe_eval', Load(), lineno=397, col_offset=28), [Name('tstring', Load(), lineno=397, col_offset=38)], [], None, None, lineno=397, col_offset=28), Name('lineno', Load(), lineno=397, col_offset=48)], [keyword('isdocstring', Num(1, lineno=397, col_offset=68))], None, None, lineno=397, col_offset=12), lineno=397, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=398, col_offset=12), '__state', Store(), lineno=398, col_offset=12)], Attribute(Name('self', Load(), lineno=398, col_offset=27), '__waiting', Load(), lineno=398, col_offset=27), lineno=398, col_offset=12)], [If(Compare(Name('ttype', Load(), lineno=399, col_offset=13), [NotIn()], [Tuple([Attribute(Name('tokenize', Load(), lineno=399, col_offset=27), 'NEWLINE', Load(), lineno=399, col_offset=27), Attribute(Name('tokenize', Load(), lineno=399, col_offset=45), 'INDENT', Load(), lineno=399, col_offset=45), Attribute(Name('tokenize', Load(), lineno=400, col_offset=27), 'COMMENT', Load(), lineno=400, col_offset=27)], Load(), lineno=399, col_offset=27)], lineno=399, col_offset=13), [Assign([Attribute(Name('self', Load(), lineno=402, col_offset=12), '__state', Store(), lineno=402, col_offset=12)], Attribute(Name('self', Load(), lineno=402, col_offset=27), '__waiting', Load(), lineno=402, col_offset=27), lineno=402, col_offset=12)], [], lineno=399, col_offset=13)], lineno=396, col_offset=8)], [], lineno=394, col_offset=4), FunctionDef('__keywordseen', arguments([Name('self', Param(), lineno=404, col_offset=22), Name('ttype', Param(), lineno=404, col_offset=28), Name('tstring', Param(), lineno=404, col_offset=35), Name('lineno', Param(), lineno=404, col_offset=44)], None, None, []), [If(BoolOp(And(), [Compare(Name('ttype', Load(), lineno=405, col_offset=11), [Eq()], [Attribute(Name('tokenize', Load(), lineno=405, col_offset=20), 'OP', Load(), lineno=405, col_offset=20)], lineno=405, col_offset=11), Compare(Name('tstring', Load(), lineno=405, col_offset=36), [Eq()], [Str('(', lineno=405, col_offset=47)], lineno=405, col_offset=36)], lineno=405, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=406, col_offset=12), '__data', Store(), lineno=406, col_offset=12)], List([], Load(), lineno=406, col_offset=26), lineno=406, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=407, col_offset=12), '__lineno', Store(), lineno=407, col_offset=12)], Name('lineno', Load(), lineno=407, col_offset=28), lineno=407, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=408, col_offset=12), '__state', Store(), lineno=408, col_offset=12)], Attribute(Name('self', Load(), lineno=408, col_offset=27), '__openseen', Load(), lineno=408, col_offset=27), lineno=408, col_offset=12)], [Assign([Attribute(Name('self', Load(), lineno=410, col_offset=12), '__state', Store(), lineno=410, col_offset=12)], Attribute(Name('self', Load(), lineno=410, col_offset=27), '__waiting', Load(), lineno=410, col_offset=27), lineno=410, col_offset=12)], lineno=405, col_offset=8)], [], lineno=404, col_offset=4), FunctionDef('__openseen', arguments([Name('self', Param(), lineno=412, col_offset=19), Name('ttype', Param(), lineno=412, col_offset=25), Name('tstring', Param(), lineno=412, col_offset=32), Name('lineno', Param(), lineno=412, col_offset=41)], None, None, []), [If(BoolOp(And(), [Compare(Name('ttype', Load(), lineno=413, col_offset=11), [Eq()], [Attribute(Name('tokenize', Load(), lineno=413, col_offset=20), 'OP', Load(), lineno=413, col_offset=20)], lineno=413, col_offset=11), Compare(Name('tstring', Load(), lineno=413, col_offset=36), [Eq()], [Str(')', lineno=413, col_offset=47)], lineno=413, col_offset=36)], lineno=413, col_offset=11), [If(Attribute(Name('self', Load(), lineno=418, col_offset=15), '__data', Load(), lineno=418, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=419, col_offset=16), '__addentry', Load(), lineno=419, col_offset=16), [Call(Attribute(Name('EMPTYSTRING', Load(), lineno=419, col_offset=32), 'join', Load(), lineno=419, col_offset=32), [Attribute(Name('self', Load(), lineno=419, col_offset=49), '__data', Load(), lineno=419, col_offset=49)], [], None, None, lineno=419, col_offset=32)], [], None, None, lineno=419, col_offset=16), lineno=419, col_offset=16)], [], lineno=418, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=420, col_offset=12), '__state', Store(), lineno=420, col_offset=12)], Attribute(Name('self', Load(), lineno=420, col_offset=27), '__waiting', Load(), lineno=420, col_offset=27), lineno=420, col_offset=12)], [If(Compare(Name('ttype', Load(), lineno=421, col_offset=13), [Eq()], [Attribute(Name('tokenize', Load(), lineno=421, col_offset=22), 'STRING', Load(), lineno=421, col_offset=22)], lineno=421, col_offset=13), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=422, col_offset=12), '__data', Load(), lineno=422, col_offset=12), 'append', Load(), lineno=422, col_offset=12), [Call(Name('safe_eval', Load(), lineno=422, col_offset=31), [Name('tstring', Load(), lineno=422, col_offset=41)], [], None, None, lineno=422, col_offset=31)], [], None, None, lineno=422, col_offset=12), lineno=422, col_offset=12)], [If(Compare(Name('ttype', Load(), lineno=423, col_offset=13), [NotIn()], [List([Attribute(Name('tokenize', Load(), lineno=423, col_offset=27), 'COMMENT', Load(), lineno=423, col_offset=27), Attribute(Name('token', Load(), lineno=423, col_offset=45), 'INDENT', Load(), lineno=423, col_offset=45), Attribute(Name('token', Load(), lineno=423, col_offset=59), 'DEDENT', Load(), lineno=423, col_offset=59), Attribute(Name('token', Load(), lineno=424, col_offset=27), 'NEWLINE', Load(), lineno=424, col_offset=27), Attribute(Name('tokenize', Load(), lineno=424, col_offset=42), 'NL', Load(), lineno=424, col_offset=42)], Load(), lineno=423, col_offset=26)], lineno=423, col_offset=13), [Print(Attribute(Name('sys', Load(), lineno=426, col_offset=21), 'stderr', Load(), lineno=426, col_offset=21), [BinOp(Call(Name('_', Load(), lineno=426, col_offset=33), [Str('*** %(file)s:%(lineno)s: Seen unexpected token "%(token)s"', lineno=427, col_offset=16)], [], None, None, lineno=426, col_offset=33), Mod(), Dict([Str('token', lineno=429, col_offset=16), Str('file', lineno=430, col_offset=16), Str('lineno', lineno=431, col_offset=16)], [Name('tstring', Load(), lineno=429, col_offset=25), Attribute(Name('self', Load(), lineno=430, col_offset=24), '__curfile', Load(), lineno=430, col_offset=24), Attribute(Name('self', Load(), lineno=431, col_offset=26), '__lineno', Load(), lineno=431, col_offset=26)], lineno=428, col_offset=20), lineno=426, col_offset=33)], True, lineno=426, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=433, col_offset=12), '__state', Store(), lineno=433, col_offset=12)], Attribute(Name('self', Load(), lineno=433, col_offset=27), '__waiting', Load(), lineno=433, col_offset=27), lineno=433, col_offset=12)], [], lineno=423, col_offset=13)], lineno=421, col_offset=13)], lineno=413, col_offset=8)], [], lineno=412, col_offset=4), FunctionDef('__addentry', arguments([Name('self', Param(), lineno=435, col_offset=19), Name('msg', Param(), lineno=435, col_offset=25), Name('lineno', Param(), lineno=435, col_offset=30), Name('isdocstring', Param(), lineno=435, col_offset=43)], None, None, [Name('None', Load(), lineno=435, col_offset=37), Num(0, lineno=435, col_offset=55)]), [If(Compare(Name('lineno', Load(), lineno=436, col_offset=11), [Is()], [Name('None', Load(), lineno=436, col_offset=21)], lineno=436, col_offset=11), [Assign([Name('lineno', Store(), lineno=437, col_offset=12)], Attribute(Name('self', Load(), lineno=437, col_offset=21), '__lineno', Load(), lineno=437, col_offset=21), lineno=437, col_offset=12)], [], lineno=436, col_offset=8), If(UnaryOp(Not(), Compare(Name('msg', Load(), lineno=438, col_offset=15), [In()], [Attribute(Attribute(Name('self', Load(), lineno=438, col_offset=22), '__options', Load(), lineno=438, col_offset=22), 'toexclude', Load(), lineno=438, col_offset=22)], lineno=438, col_offset=15), lineno=438, col_offset=11), [Assign([Name('entry', Store(), lineno=439, col_offset=12)], Tuple([Attribute(Name('self', Load(), lineno=439, col_offset=21), '__curfile', Load(), lineno=439, col_offset=21), Name('lineno', Load(), lineno=439, col_offset=37)], Load(), lineno=439, col_offset=21), lineno=439, col_offset=12), Assign([Subscript(Call(Attribute(Attribute(Name('self', Load(), lineno=440, col_offset=12), '__messages', Load(), lineno=440, col_offset=12), 'setdefault', Load(), lineno=440, col_offset=12), [Name('msg', Load(), lineno=440, col_offset=39), Dict([], [], lineno=440, col_offset=44)], [], None, None, lineno=440, col_offset=12), Index(Name('entry', Load(), lineno=440, col_offset=48)), Store(), lineno=440, col_offset=12)], Name('isdocstring', Load(), lineno=440, col_offset=57), lineno=440, col_offset=12)], [], lineno=438, col_offset=8)], [], lineno=435, col_offset=4), FunctionDef('set_filename', arguments([Name('self', Param(), lineno=442, col_offset=21), Name('filename', Param(), lineno=442, col_offset=27)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=443, col_offset=8), '__curfile', Store(), lineno=443, col_offset=8)], Name('filename', Load(), lineno=443, col_offset=25), lineno=443, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=444, col_offset=8), '__freshmodule', Store(), lineno=444, col_offset=8)], Num(1, lineno=444, col_offset=29), lineno=444, col_offset=8)], [], lineno=442, col_offset=4), FunctionDef('write', arguments([Name('self', Param(), lineno=446, col_offset=14), Name('fp', Param(), lineno=446, col_offset=20)], None, None, []), [Assign([Name('options', Store(), lineno=447, col_offset=8)], Attribute(Name('self', Load(), lineno=447, col_offset=18), '__options', Load(), lineno=447, col_offset=18), lineno=447, col_offset=8), Assign([Name('timestamp', Store(), lineno=448, col_offset=8)], Call(Attribute(Name('time', Load(), lineno=448, col_offset=20), 'strftime', Load(), lineno=448, col_offset=20), [Str('%Y-%m-%d %H:%M+%Z', lineno=448, col_offset=34)], [], None, None, lineno=448, col_offset=20), lineno=448, col_offset=8), Print(Name('fp', Load(), lineno=451, col_offset=17), [BinOp(Name('pot_header', Load(), lineno=451, col_offset=21), Mod(), Dict([Str('time', lineno=451, col_offset=35), Str('version', lineno=451, col_offset=54)], [Name('timestamp', Load(), lineno=451, col_offset=43), Name('__version__', Load(), lineno=451, col_offset=65)], lineno=451, col_offset=34), lineno=451, col_offset=21)], True, lineno=451, col_offset=8), Assign([Name('reverse', Store(), lineno=454, col_offset=8)], Dict([], [], lineno=454, col_offset=18), lineno=454, col_offset=8), For(Tuple([Name('k', Store(), lineno=455, col_offset=12), Name('v', Store(), lineno=455, col_offset=15)], Store(), lineno=455, col_offset=12), Call(Attribute(Attribute(Name('self', Load(), lineno=455, col_offset=20), '__messages', Load(), lineno=455, col_offset=20), 'items', Load(), lineno=455, col_offset=20), [], [], None, None, lineno=455, col_offset=20), [Assign([Name('keys', Store(), lineno=456, col_offset=12)], Call(Attribute(Name('v', Load(), lineno=456, col_offset=19), 'keys', Load(), lineno=456, col_offset=19), [], [], None, None, lineno=456, col_offset=19), lineno=456, col_offset=12), Expr(Call(Attribute(Name('keys', Load(), lineno=457, col_offset=12), 'sort', Load(), lineno=457, col_offset=12), [], [], None, None, lineno=457, col_offset=12), lineno=457, col_offset=12), Expr(Call(Attribute(Call(Attribute(Name('reverse', Load(), lineno=458, col_offset=12), 'setdefault', Load(), lineno=458, col_offset=12), [Call(Name('tuple', Load(), lineno=458, col_offset=31), [Name('keys', Load(), lineno=458, col_offset=37)], [], None, None, lineno=458, col_offset=31), List([], Load(), lineno=458, col_offset=44)], [], None, None, lineno=458, col_offset=12), 'append', Load(), lineno=458, col_offset=12), [Tuple([Name('k', Load(), lineno=458, col_offset=56), Name('v', Load(), lineno=458, col_offset=59)], Load(), lineno=458, col_offset=56)], [], None, None, lineno=458, col_offset=12), lineno=458, col_offset=12)], [], lineno=455, col_offset=8), Assign([Name('rkeys', Store(), lineno=459, col_offset=8)], Call(Attribute(Name('reverse', Load(), lineno=459, col_offset=16), 'keys', Load(), lineno=459, col_offset=16), [], [], None, None, lineno=459, col_offset=16), lineno=459, col_offset=8), Expr(Call(Attribute(Name('rkeys', Load(), lineno=460, col_offset=8), 'sort', Load(), lineno=460, col_offset=8), [], [], None, None, lineno=460, col_offset=8), lineno=460, col_offset=8), For(Name('rkey', Store(), lineno=461, col_offset=12), Name('rkeys', Load(), lineno=461, col_offset=20), [Assign([Name('rentries', Store(), lineno=462, col_offset=12)], Subscript(Name('reverse', Load(), lineno=462, col_offset=23), Index(Name('rkey', Load(), lineno=462, col_offset=31)), Load(), lineno=462, col_offset=23), lineno=462, col_offset=12), Expr(Call(Attribute(Name('rentries', Load(), lineno=463, col_offset=12), 'sort', Load(), lineno=463, col_offset=12), [], [], None, None, lineno=463, col_offset=12), lineno=463, col_offset=12), For(Tuple([Name('k', Store(), lineno=464, col_offset=16), Name('v', Store(), lineno=464, col_offset=19)], Store(), lineno=464, col_offset=16), Name('rentries', Load(), lineno=464, col_offset=24), [Assign([Name('isdocstring', Store(), lineno=465, col_offset=16)], Num(0, lineno=465, col_offset=30), lineno=465, col_offset=16), If(Call(Name('reduce', Load(), lineno=469, col_offset=19), [Attribute(Name('operator', Load(), lineno=469, col_offset=26), '__add__', Load(), lineno=469, col_offset=26), Call(Attribute(Name('v', Load(), lineno=469, col_offset=44), 'values', Load(), lineno=469, col_offset=44), [], [], None, None, lineno=469, col_offset=44)], [], None, None, lineno=469, col_offset=19), [Assign([Name('isdocstring', Store(), lineno=470, col_offset=20)], Num(1, lineno=470, col_offset=34), lineno=470, col_offset=20)], [], lineno=469, col_offset=16), Assign([Name('v', Store(), lineno=474, col_offset=16)], Call(Attribute(Name('v', Load(), lineno=474, col_offset=20), 'keys', Load(), lineno=474, col_offset=20), [], [], None, None, lineno=474, col_offset=20), lineno=474, col_offset=16), Expr(Call(Attribute(Name('v', Load(), lineno=475, col_offset=16), 'sort', Load(), lineno=475, col_offset=16), [], [], None, None, lineno=475, col_offset=16), lineno=475, col_offset=16), If(UnaryOp(Not(), Attribute(Name('options', Load(), lineno=476, col_offset=23), 'writelocations', Load(), lineno=476, col_offset=23), lineno=476, col_offset=19), [Pass( lineno=477, col_offset=20)], [If(Compare(Attribute(Name('options', Load(), lineno=479, col_offset=21), 'locationstyle', Load(), lineno=479, col_offset=21), [Eq()], [Attribute(Name('options', Load(), lineno=479, col_offset=46), 'SOLARIS', Load(), lineno=479, col_offset=46)], lineno=479, col_offset=21), [For(Tuple([Name('filename', Store(), lineno=480, col_offset=24), Name('lineno', Store(), lineno=480, col_offset=34)], Store(), lineno=480, col_offset=24), Name('v', Load(), lineno=480, col_offset=44), [Assign([Name('d', Store(), lineno=481, col_offset=24)], Dict([Str('filename', lineno=481, col_offset=29), Str('lineno', lineno=481, col_offset=51)], [Name('filename', Load(), lineno=481, col_offset=41), Name('lineno', Load(), lineno=481, col_offset=61)], lineno=481, col_offset=28), lineno=481, col_offset=24), Print(Name('fp', Load(), lineno=482, col_offset=32), [BinOp(Call(Name('_', Load(), lineno=482, col_offset=36), [Str('# File: %(filename)s, line: %(lineno)d', lineno=483, col_offset=28)], [], None, None, lineno=482, col_offset=36), Mod(), Name('d', Load(), lineno=483, col_offset=72), lineno=482, col_offset=36)], True, lineno=482, col_offset=24)], [], lineno=480, col_offset=20)], [If(Compare(Attribute(Name('options', Load(), lineno=484, col_offset=21), 'locationstyle', Load(), lineno=484, col_offset=21), [Eq()], [Attribute(Name('options', Load(), lineno=484, col_offset=46), 'GNU', Load(), lineno=484, col_offset=46)], lineno=484, col_offset=21), [Assign([Name('locline', Store(), lineno=487, col_offset=20)], Str('#:', lineno=487, col_offset=30), lineno=487, col_offset=20), For(Tuple([Name('filename', Store(), lineno=488, col_offset=24), Name('lineno', Store(), lineno=488, col_offset=34)], Store(), lineno=488, col_offset=24), Name('v', Load(), lineno=488, col_offset=44), [Assign([Name('d', Store(), lineno=489, col_offset=24)], Dict([Str('filename', lineno=489, col_offset=29), Str('lineno', lineno=489, col_offset=51)], [Name('filename', Load(), lineno=489, col_offset=41), Name('lineno', Load(), lineno=489, col_offset=61)], lineno=489, col_offset=28), lineno=489, col_offset=24), Assign([Name('s', Store(), lineno=490, col_offset=24)], BinOp(Call(Name('_', Load(), lineno=490, col_offset=28), [Str(' %(filename)s:%(lineno)d', lineno=490, col_offset=30)], [], None, None, lineno=490, col_offset=28), Mod(), Name('d', Load(), lineno=490, col_offset=60), lineno=490, col_offset=28), lineno=490, col_offset=24), If(Compare(BinOp(Call(Name('len', Load(), lineno=491, col_offset=27), [Name('locline', Load(), lineno=491, col_offset=31)], [], None, None, lineno=491, col_offset=27), Add(), Call(Name('len', Load(), lineno=491, col_offset=42), [Name('s', Load(), lineno=491, col_offset=46)], [], None, None, lineno=491, col_offset=42), lineno=491, col_offset=27), [LtE()], [Attribute(Name('options', Load(), lineno=491, col_offset=52), 'width', Load(), lineno=491, col_offset=52)], lineno=491, col_offset=27), [Assign([Name('locline', Store(), lineno=492, col_offset=28)], BinOp(Name('locline', Load(), lineno=492, col_offset=38), Add(), Name('s', Load(), lineno=492, col_offset=48), lineno=492, col_offset=38), lineno=492, col_offset=28)], [Print(Name('fp', Load(), lineno=494, col_offset=37), [Name('locline', Load(), lineno=494, col_offset=41)], True, lineno=494, col_offset=28), Assign([Name('locline', Store(), lineno=495, col_offset=28)], BinOp(Str('#:', lineno=495, col_offset=38), Add(), Name('s', Load(), lineno=495, col_offset=45), lineno=495, col_offset=38), lineno=495, col_offset=28)], lineno=491, col_offset=24)], [], lineno=488, col_offset=20), If(Compare(Call(Name('len', Load(), lineno=496, col_offset=23), [Name('locline', Load(), lineno=496, col_offset=27)], [], None, None, lineno=496, col_offset=23), [Gt()], [Num(2, lineno=496, col_offset=38)], lineno=496, col_offset=23), [Print(Name('fp', Load(), lineno=497, col_offset=33), [Name('locline', Load(), lineno=497, col_offset=37)], True, lineno=497, col_offset=24)], [], lineno=496, col_offset=20)], [], lineno=484, col_offset=21)], lineno=479, col_offset=21)], lineno=476, col_offset=16), If(Name('isdocstring', Load(), lineno=498, col_offset=19), [Print(Name('fp', Load(), lineno=499, col_offset=29), [Str('#, docstring', lineno=499, col_offset=33)], True, lineno=499, col_offset=20)], [], lineno=498, col_offset=16), Print(Name('fp', Load(), lineno=500, col_offset=25), [Str('msgid', lineno=500, col_offset=29), Call(Name('normalize', Load(), lineno=500, col_offset=38), [Name('k', Load(), lineno=500, col_offset=48)], [], None, None, lineno=500, col_offset=38)], True, lineno=500, col_offset=16), Print(Name('fp', Load(), lineno=501, col_offset=25), [Str('msgstr ""\n', lineno=501, col_offset=29)], True, lineno=501, col_offset=16)], [], lineno=464, col_offset=12)], [], lineno=461, col_offset=8)], [], lineno=446, col_offset=4)], [], lineno=353, col_offset=0), FunctionDef('main', arguments([], None, None, []), [Global(['default_keywords'], lineno=506, col_offset=4), TryExcept([Assign([Tuple([Name('opts', Store(), lineno=508, col_offset=8), Name('args', Store(), lineno=508, col_offset=14)], Store(), lineno=508, col_offset=8)], Call(Attribute(Name('getopt', Load(), lineno=508, col_offset=21), 'getopt', Load(), lineno=508, col_offset=21), [Subscript(Attribute(Name('sys', Load(), lineno=509, col_offset=12), 'argv', Load(), lineno=509, col_offset=12), Slice(Num(1, lineno=509, col_offset=21), None, None), Load(), lineno=509, col_offset=12), Str('ad:DEhk:Kno:p:S:Vvw:x:X:', lineno=510, col_offset=12), List([Str('extract-all', lineno=511, col_offset=13), Str('default-domain=', lineno=511, col_offset=28), Str('escape', lineno=511, col_offset=47), Str('help', lineno=511, col_offset=57), Str('keyword=', lineno=512, col_offset=13), Str('no-default-keywords', lineno=512, col_offset=25), Str('add-location', lineno=513, col_offset=13), Str('no-location', lineno=513, col_offset=29), Str('output=', lineno=513, col_offset=44), Str('output-dir=', lineno=513, col_offset=55), Str('style=', lineno=514, col_offset=13), Str('verbose', lineno=514, col_offset=23), Str('version', lineno=514, col_offset=34), Str('width=', lineno=514, col_offset=45), Str('exclude-file=', lineno=514, col_offset=55), Str('docstrings', lineno=515, col_offset=13), Str('no-docstrings', lineno=515, col_offset=27)], Load(), lineno=511, col_offset=12)], [], None, None, lineno=508, col_offset=21), lineno=508, col_offset=8)], [ExceptHandler(Attribute(Name('getopt', Load(), lineno=517, col_offset=11), 'error', Load(), lineno=517, col_offset=11), Name('msg', Store(), lineno=517, col_offset=25), [Expr(Call(Name('usage', Load(), lineno=518, col_offset=8), [Num(1, lineno=518, col_offset=14), Name('msg', Load(), lineno=518, col_offset=17)], [], None, None, lineno=518, col_offset=8), lineno=518, col_offset=8)], lineno=517, col_offset=4)], [], lineno=507, col_offset=4), ClassDef('Options', [], [Assign([Name('GNU', Store(), lineno=523, col_offset=8)], Num(1, lineno=523, col_offset=14), lineno=523, col_offset=8), Assign([Name('SOLARIS', Store(), lineno=524, col_offset=8)], Num(2, lineno=524, col_offset=18), lineno=524, col_offset=8), Assign([Name('extractall', Store(), lineno=526, col_offset=8)], Num(0, lineno=526, col_offset=21), lineno=526, col_offset=8), Assign([Name('escape', Store(), lineno=527, col_offset=8)], Num(0, lineno=527, col_offset=17), lineno=527, col_offset=8), Assign([Name('keywords', Store(), lineno=528, col_offset=8)], List([], Load(), lineno=528, col_offset=19), lineno=528, col_offset=8), Assign([Name('outpath', Store(), lineno=529, col_offset=8)], Str('', lineno=529, col_offset=18), lineno=529, col_offset=8), Assign([Name('outfile', Store(), lineno=530, col_offset=8)], Str('messages.pot', lineno=530, col_offset=18), lineno=530, col_offset=8), Assign([Name('writelocations', Store(), lineno=531, col_offset=8)], Num(1, lineno=531, col_offset=25), lineno=531, col_offset=8), Assign([Name('locationstyle', Store(), lineno=532, col_offset=8)], Name('GNU', Load(), lineno=532, col_offset=24), lineno=532, col_offset=8), Assign([Name('verbose', Store(), lineno=533, col_offset=8)], Num(0, lineno=533, col_offset=18), lineno=533, col_offset=8), Assign([Name('width', Store(), lineno=534, col_offset=8)], Num(78, lineno=534, col_offset=16), lineno=534, col_offset=8), Assign([Name('excludefilename', Store(), lineno=535, col_offset=8)], Str('', lineno=535, col_offset=26), lineno=535, col_offset=8), Assign([Name('docstrings', Store(), lineno=536, col_offset=8)], Num(0, lineno=536, col_offset=21), lineno=536, col_offset=8), Assign([Name('nodocstrings', Store(), lineno=537, col_offset=8)], Dict([], [], lineno=537, col_offset=23), lineno=537, col_offset=8)], [], lineno=521, col_offset=4), Assign([Name('options', Store(), lineno=539, col_offset=4)], Call(Name('Options', Load(), lineno=539, col_offset=14), [], [], None, None, lineno=539, col_offset=14), lineno=539, col_offset=4), Assign([Name('locations', Store(), lineno=540, col_offset=4)], Dict([Str('gnu', lineno=540, col_offset=17), Str('solaris', lineno=541, col_offset=17)], [Attribute(Name('options', Load(), lineno=540, col_offset=25), 'GNU', Load(), lineno=540, col_offset=25), Attribute(Name('options', Load(), lineno=541, col_offset=29), 'SOLARIS', Load(), lineno=541, col_offset=29)], lineno=540, col_offset=16), lineno=540, col_offset=4), For(Tuple([Name('opt', Store(), lineno=545, col_offset=8), Name('arg', Store(), lineno=545, col_offset=13)], Store(), lineno=545, col_offset=8), Name('opts', Load(), lineno=545, col_offset=20), [If(Compare(Name('opt', Load(), lineno=546, col_offset=11), [In()], [Tuple([Str('-h', lineno=546, col_offset=19), Str('--help', lineno=546, col_offset=25)], Load(), lineno=546, col_offset=19)], lineno=546, col_offset=11), [Expr(Call(Name('usage', Load(), lineno=547, col_offset=12), [Num(0, lineno=547, col_offset=18)], [], None, None, lineno=547, col_offset=12), lineno=547, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=548, col_offset=13), [In()], [Tuple([Str('-a', lineno=548, col_offset=21), Str('--extract-all', lineno=548, col_offset=27)], Load(), lineno=548, col_offset=21)], lineno=548, col_offset=13), [Assign([Attribute(Name('options', Load(), lineno=549, col_offset=12), 'extractall', Store(), lineno=549, col_offset=12)], Num(1, lineno=549, col_offset=33), lineno=549, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=550, col_offset=13), [In()], [Tuple([Str('-d', lineno=550, col_offset=21), Str('--default-domain', lineno=550, col_offset=27)], Load(), lineno=550, col_offset=21)], lineno=550, col_offset=13), [Assign([Attribute(Name('options', Load(), lineno=551, col_offset=12), 'outfile', Store(), lineno=551, col_offset=12)], BinOp(Name('arg', Load(), lineno=551, col_offset=30), Add(), Str('.pot', lineno=551, col_offset=36), lineno=551, col_offset=30), lineno=551, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=552, col_offset=13), [In()], [Tuple([Str('-E', lineno=552, col_offset=21), Str('--escape', lineno=552, col_offset=27)], Load(), lineno=552, col_offset=21)], lineno=552, col_offset=13), [Assign([Attribute(Name('options', Load(), lineno=553, col_offset=12), 'escape', Store(), lineno=553, col_offset=12)], Num(1, lineno=553, col_offset=29), lineno=553, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=554, col_offset=13), [In()], [Tuple([Str('-D', lineno=554, col_offset=21), Str('--docstrings', lineno=554, col_offset=27)], Load(), lineno=554, col_offset=21)], lineno=554, col_offset=13), [Assign([Attribute(Name('options', Load(), lineno=555, col_offset=12), 'docstrings', Store(), lineno=555, col_offset=12)], Num(1, lineno=555, col_offset=33), lineno=555, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=556, col_offset=13), [In()], [Tuple([Str('-k', lineno=556, col_offset=21), Str('--keyword', lineno=556, col_offset=27)], Load(), lineno=556, col_offset=21)], lineno=556, col_offset=13), [Expr(Call(Attribute(Attribute(Name('options', Load(), lineno=557, col_offset=12), 'keywords', Load(), lineno=557, col_offset=12), 'append', Load(), lineno=557, col_offset=12), [Name('arg', Load(), lineno=557, col_offset=36)], [], None, None, lineno=557, col_offset=12), lineno=557, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=558, col_offset=13), [In()], [Tuple([Str('-K', lineno=558, col_offset=21), Str('--no-default-keywords', lineno=558, col_offset=27)], Load(), lineno=558, col_offset=21)], lineno=558, col_offset=13), [Assign([Name('default_keywords', Store(), lineno=559, col_offset=12)], List([], Load(), lineno=559, col_offset=31), lineno=559, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=560, col_offset=13), [In()], [Tuple([Str('-n', lineno=560, col_offset=21), Str('--add-location', lineno=560, col_offset=27)], Load(), lineno=560, col_offset=21)], lineno=560, col_offset=13), [Assign([Attribute(Name('options', Load(), lineno=561, col_offset=12), 'writelocations', Store(), lineno=561, col_offset=12)], Num(1, lineno=561, col_offset=37), lineno=561, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=562, col_offset=13), [In()], [Tuple([Str('--no-location', lineno=562, col_offset=21)], Load(), lineno=562, col_offset=21)], lineno=562, col_offset=13), [Assign([Attribute(Name('options', Load(), lineno=563, col_offset=12), 'writelocations', Store(), lineno=563, col_offset=12)], Num(0, lineno=563, col_offset=37), lineno=563, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=564, col_offset=13), [In()], [Tuple([Str('-S', lineno=564, col_offset=21), Str('--style', lineno=564, col_offset=27)], Load(), lineno=564, col_offset=21)], lineno=564, col_offset=13), [Assign([Attribute(Name('options', Load(), lineno=565, col_offset=12), 'locationstyle', Store(), lineno=565, col_offset=12)], Call(Attribute(Name('locations', Load(), lineno=565, col_offset=36), 'get', Load(), lineno=565, col_offset=36), [Call(Attribute(Name('arg', Load(), lineno=565, col_offset=50), 'lower', Load(), lineno=565, col_offset=50), [], [], None, None, lineno=565, col_offset=50)], [], None, None, lineno=565, col_offset=36), lineno=565, col_offset=12), If(Compare(Attribute(Name('options', Load(), lineno=566, col_offset=15), 'locationstyle', Load(), lineno=566, col_offset=15), [Is()], [Name('None', Load(), lineno=566, col_offset=40)], lineno=566, col_offset=15), [Expr(Call(Name('usage', Load(), lineno=567, col_offset=16), [Num(1, lineno=567, col_offset=22), BinOp(Call(Name('_', Load(), lineno=567, col_offset=25), [Str('Invalid value for --style: %s', lineno=567, col_offset=27)], [], None, None, lineno=567, col_offset=25), Mod(), Name('arg', Load(), lineno=567, col_offset=62), lineno=567, col_offset=25)], [], None, None, lineno=567, col_offset=16), lineno=567, col_offset=16)], [], lineno=566, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=568, col_offset=13), [In()], [Tuple([Str('-o', lineno=568, col_offset=21), Str('--output', lineno=568, col_offset=27)], Load(), lineno=568, col_offset=21)], lineno=568, col_offset=13), [Assign([Attribute(Name('options', Load(), lineno=569, col_offset=12), 'outfile', Store(), lineno=569, col_offset=12)], Name('arg', Load(), lineno=569, col_offset=30), lineno=569, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=570, col_offset=13), [In()], [Tuple([Str('-p', lineno=570, col_offset=21), Str('--output-dir', lineno=570, col_offset=27)], Load(), lineno=570, col_offset=21)], lineno=570, col_offset=13), [Assign([Attribute(Name('options', Load(), lineno=571, col_offset=12), 'outpath', Store(), lineno=571, col_offset=12)], Name('arg', Load(), lineno=571, col_offset=30), lineno=571, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=572, col_offset=13), [In()], [Tuple([Str('-v', lineno=572, col_offset=21), Str('--verbose', lineno=572, col_offset=27)], Load(), lineno=572, col_offset=21)], lineno=572, col_offset=13), [Assign([Attribute(Name('options', Load(), lineno=573, col_offset=12), 'verbose', Store(), lineno=573, col_offset=12)], Num(1, lineno=573, col_offset=30), lineno=573, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=574, col_offset=13), [In()], [Tuple([Str('-V', lineno=574, col_offset=21), Str('--version', lineno=574, col_offset=27)], Load(), lineno=574, col_offset=21)], lineno=574, col_offset=13), [Print(None, [BinOp(Call(Name('_', Load(), lineno=575, col_offset=18), [Str('pygettext.py (xgettext for Python) %s', lineno=575, col_offset=20)], [], None, None, lineno=575, col_offset=18), Mod(), Name('__version__', Load(), lineno=575, col_offset=63), lineno=575, col_offset=18)], True, lineno=575, col_offset=12), Expr(Call(Attribute(Name('sys', Load(), lineno=576, col_offset=12), 'exit', Load(), lineno=576, col_offset=12), [Num(0, lineno=576, col_offset=21)], [], None, None, lineno=576, col_offset=12), lineno=576, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=577, col_offset=13), [In()], [Tuple([Str('-w', lineno=577, col_offset=21), Str('--width', lineno=577, col_offset=27)], Load(), lineno=577, col_offset=21)], lineno=577, col_offset=13), [TryExcept([Assign([Attribute(Name('options', Load(), lineno=579, col_offset=16), 'width', Store(), lineno=579, col_offset=16)], Call(Name('int', Load(), lineno=579, col_offset=32), [Name('arg', Load(), lineno=579, col_offset=36)], [], None, None, lineno=579, col_offset=32), lineno=579, col_offset=16)], [ExceptHandler(Name('ValueError', Load(), lineno=580, col_offset=19), None, [Expr(Call(Name('usage', Load(), lineno=581, col_offset=16), [Num(1, lineno=581, col_offset=22), BinOp(Call(Name('_', Load(), lineno=581, col_offset=25), [Str('--width argument must be an integer: %s', lineno=581, col_offset=27)], [], None, None, lineno=581, col_offset=25), Mod(), Name('arg', Load(), lineno=581, col_offset=72), lineno=581, col_offset=25)], [], None, None, lineno=581, col_offset=16), lineno=581, col_offset=16)], lineno=580, col_offset=12)], [], lineno=578, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=582, col_offset=13), [In()], [Tuple([Str('-x', lineno=582, col_offset=21), Str('--exclude-file', lineno=582, col_offset=27)], Load(), lineno=582, col_offset=21)], lineno=582, col_offset=13), [Assign([Attribute(Name('options', Load(), lineno=583, col_offset=12), 'excludefilename', Store(), lineno=583, col_offset=12)], Name('arg', Load(), lineno=583, col_offset=38), lineno=583, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=584, col_offset=13), [In()], [Tuple([Str('-X', lineno=584, col_offset=21), Str('--no-docstrings', lineno=584, col_offset=27)], Load(), lineno=584, col_offset=21)], lineno=584, col_offset=13), [Assign([Name('fp', Store(), lineno=585, col_offset=12)], Call(Name('open', Load(), lineno=585, col_offset=17), [Name('arg', Load(), lineno=585, col_offset=22)], [], None, None, lineno=585, col_offset=17), lineno=585, col_offset=12), TryFinally([While(Num(1, lineno=587, col_offset=22), [Assign([Name('line', Store(), lineno=588, col_offset=20)], Call(Attribute(Name('fp', Load(), lineno=588, col_offset=27), 'readline', Load(), lineno=588, col_offset=27), [], [], None, None, lineno=588, col_offset=27), lineno=588, col_offset=20), If(UnaryOp(Not(), Name('line', Load(), lineno=589, col_offset=27), lineno=589, col_offset=23), [Break( lineno=590, col_offset=24)], [], lineno=589, col_offset=20), Assign([Subscript(Attribute(Name('options', Load(), lineno=591, col_offset=20), 'nodocstrings', Load(), lineno=591, col_offset=20), Index(Subscript(Name('line', Load(), lineno=591, col_offset=41), Slice(None, Num(-1, lineno=591, col_offset=48), None), Load(), lineno=591, col_offset=41)), Store(), lineno=591, col_offset=20)], Num(1, lineno=591, col_offset=54), lineno=591, col_offset=20)], [], lineno=587, col_offset=16)], [Expr(Call(Attribute(Name('fp', Load(), lineno=593, col_offset=16), 'close', Load(), lineno=593, col_offset=16), [], [], None, None, lineno=593, col_offset=16), lineno=593, col_offset=16)], lineno=586, col_offset=12)], [], lineno=584, col_offset=13)], lineno=582, col_offset=13)], lineno=577, col_offset=13)], lineno=574, col_offset=13)], lineno=572, col_offset=13)], lineno=570, col_offset=13)], lineno=568, col_offset=13)], lineno=564, col_offset=13)], lineno=562, col_offset=13)], lineno=560, col_offset=13)], lineno=558, col_offset=13)], lineno=556, col_offset=13)], lineno=554, col_offset=13)], lineno=552, col_offset=13)], lineno=550, col_offset=13)], lineno=548, col_offset=13)], lineno=546, col_offset=8)], [], lineno=545, col_offset=4), Expr(Call(Name('make_escapes', Load(), lineno=596, col_offset=4), [Attribute(Name('options', Load(), lineno=596, col_offset=17), 'escape', Load(), lineno=596, col_offset=17)], [], None, None, lineno=596, col_offset=4), lineno=596, col_offset=4), Expr(Call(Attribute(Attribute(Name('options', Load(), lineno=599, col_offset=4), 'keywords', Load(), lineno=599, col_offset=4), 'extend', Load(), lineno=599, col_offset=4), [Name('default_keywords', Load(), lineno=599, col_offset=28)], [], None, None, lineno=599, col_offset=4), lineno=599, col_offset=4), If(Attribute(Name('options', Load(), lineno=602, col_offset=7), 'excludefilename', Load(), lineno=602, col_offset=7), [TryExcept([Assign([Name('fp', Store(), lineno=604, col_offset=12)], Call(Name('open', Load(), lineno=604, col_offset=17), [Attribute(Name('options', Load(), lineno=604, col_offset=22), 'excludefilename', Load(), lineno=604, col_offset=22)], [], None, None, lineno=604, col_offset=17), lineno=604, col_offset=12), Assign([Attribute(Name('options', Load(), lineno=605, col_offset=12), 'toexclude', Store(), lineno=605, col_offset=12)], Call(Attribute(Name('fp', Load(), lineno=605, col_offset=32), 'readlines', Load(), lineno=605, col_offset=32), [], [], None, None, lineno=605, col_offset=32), lineno=605, col_offset=12), Expr(Call(Attribute(Name('fp', Load(), lineno=606, col_offset=12), 'close', Load(), lineno=606, col_offset=12), [], [], None, None, lineno=606, col_offset=12), lineno=606, col_offset=12)], [ExceptHandler(Name('IOError', Load(), lineno=607, col_offset=15), None, [Print(Attribute(Name('sys', Load(), lineno=608, col_offset=21), 'stderr', Load(), lineno=608, col_offset=21), [BinOp(Call(Name('_', Load(), lineno=608, col_offset=33), [Str("Can't read --exclude-file: %s", lineno=609, col_offset=16)], [], None, None, lineno=608, col_offset=33), Mod(), Attribute(Name('options', Load(), lineno=609, col_offset=51), 'excludefilename', Load(), lineno=609, col_offset=51), lineno=608, col_offset=33)], True, lineno=608, col_offset=12), Expr(Call(Attribute(Name('sys', Load(), lineno=610, col_offset=12), 'exit', Load(), lineno=610, col_offset=12), [Num(1, lineno=610, col_offset=21)], [], None, None, lineno=610, col_offset=12), lineno=610, col_offset=12)], lineno=607, col_offset=8)], [], lineno=603, col_offset=8)], [Assign([Attribute(Name('options', Load(), lineno=612, col_offset=8), 'toexclude', Store(), lineno=612, col_offset=8)], List([], Load(), lineno=612, col_offset=28), lineno=612, col_offset=8)], lineno=602, col_offset=4), Assign([Name('expanded', Store(), lineno=615, col_offset=4)], List([], Load(), lineno=615, col_offset=15), lineno=615, col_offset=4), For(Name('arg', Store(), lineno=616, col_offset=8), Name('args', Load(), lineno=616, col_offset=15), [If(Compare(Name('arg', Load(), lineno=617, col_offset=11), [Eq()], [Str('-', lineno=617, col_offset=18)], lineno=617, col_offset=11), [Expr(Call(Attribute(Name('expanded', Load(), lineno=618, col_offset=12), 'append', Load(), lineno=618, col_offset=12), [Name('arg', Load(), lineno=618, col_offset=28)], [], None, None, lineno=618, col_offset=12), lineno=618, col_offset=12)], [Expr(Call(Attribute(Name('expanded', Load(), lineno=620, col_offset=12), 'extend', Load(), lineno=620, col_offset=12), [Call(Name('getFilesForName', Load(), lineno=620, col_offset=28), [Name('arg', Load(), lineno=620, col_offset=44)], [], None, None, lineno=620, col_offset=28)], [], None, None, lineno=620, col_offset=12), lineno=620, col_offset=12)], lineno=617, col_offset=8)], [], lineno=616, col_offset=4), Assign([Name('args', Store(), lineno=621, col_offset=4)], Name('expanded', Load(), lineno=621, col_offset=11), lineno=621, col_offset=4), Assign([Name('eater', Store(), lineno=624, col_offset=4)], Call(Name('TokenEater', Load(), lineno=624, col_offset=12), [Name('options', Load(), lineno=624, col_offset=23)], [], None, None, lineno=624, col_offset=12), lineno=624, col_offset=4), For(Name('filename', Store(), lineno=625, col_offset=8), Name('args', Load(), lineno=625, col_offset=20), [If(Compare(Name('filename', Load(), lineno=626, col_offset=11), [Eq()], [Str('-', lineno=626, col_offset=23)], lineno=626, col_offset=11), [If(Attribute(Name('options', Load(), lineno=627, col_offset=15), 'verbose', Load(), lineno=627, col_offset=15), [Print(None, [Call(Name('_', Load(), lineno=628, col_offset=22), [Str('Reading standard input', lineno=628, col_offset=24)], [], None, None, lineno=628, col_offset=22)], True, lineno=628, col_offset=16)], [], lineno=627, col_offset=12), Assign([Name('fp', Store(), lineno=629, col_offset=12)], Attribute(Name('sys', Load(), lineno=629, col_offset=17), 'stdin', Load(), lineno=629, col_offset=17), lineno=629, col_offset=12), Assign([Name('closep', Store(), lineno=630, col_offset=12)], Num(0, lineno=630, col_offset=21), lineno=630, col_offset=12)], [If(Attribute(Name('options', Load(), lineno=632, col_offset=15), 'verbose', Load(), lineno=632, col_offset=15), [Print(None, [BinOp(Call(Name('_', Load(), lineno=633, col_offset=22), [Str('Working on %s', lineno=633, col_offset=24)], [], None, None, lineno=633, col_offset=22), Mod(), Name('filename', Load(), lineno=633, col_offset=43), lineno=633, col_offset=22)], True, lineno=633, col_offset=16)], [], lineno=632, col_offset=12), Assign([Name('fp', Store(), lineno=634, col_offset=12)], Call(Name('open', Load(), lineno=634, col_offset=17), [Name('filename', Load(), lineno=634, col_offset=22)], [], None, None, lineno=634, col_offset=17), lineno=634, col_offset=12), Assign([Name('closep', Store(), lineno=635, col_offset=12)], Num(1, lineno=635, col_offset=21), lineno=635, col_offset=12)], lineno=626, col_offset=8), TryFinally([Expr(Call(Attribute(Name('eater', Load(), lineno=637, col_offset=12), 'set_filename', Load(), lineno=637, col_offset=12), [Name('filename', Load(), lineno=637, col_offset=31)], [], None, None, lineno=637, col_offset=12), lineno=637, col_offset=12), TryExcept([Expr(Call(Attribute(Name('tokenize', Load(), lineno=639, col_offset=16), 'tokenize', Load(), lineno=639, col_offset=16), [Attribute(Name('fp', Load(), lineno=639, col_offset=34), 'readline', Load(), lineno=639, col_offset=34), Name('eater', Load(), lineno=639, col_offset=47)], [], None, None, lineno=639, col_offset=16), lineno=639, col_offset=16)], [ExceptHandler(Attribute(Name('tokenize', Load(), lineno=640, col_offset=19), 'TokenError', Load(), lineno=640, col_offset=19), Name('e', Store(), lineno=640, col_offset=40), [Print(Attribute(Name('sys', Load(), lineno=641, col_offset=25), 'stderr', Load(), lineno=641, col_offset=25), [BinOp(Str('%s: %s, line %d, column %d', lineno=641, col_offset=37), Mod(), Tuple([Subscript(Name('e', Load(), lineno=642, col_offset=20), Index(Num(0, lineno=642, col_offset=22)), Load(), lineno=642, col_offset=20), Name('filename', Load(), lineno=642, col_offset=26), Subscript(Subscript(Name('e', Load(), lineno=642, col_offset=36), Index(Num(1, lineno=642, col_offset=38)), Load(), lineno=642, col_offset=36), Index(Num(0, lineno=642, col_offset=41)), Load(), lineno=642, col_offset=36), Subscript(Subscript(Name('e', Load(), lineno=642, col_offset=45), Index(Num(1, lineno=642, col_offset=47)), Load(), lineno=642, col_offset=45), Index(Num(1, lineno=642, col_offset=50)), Load(), lineno=642, col_offset=45)], Load(), lineno=642, col_offset=20), lineno=641, col_offset=37)], True, lineno=641, col_offset=16)], lineno=640, col_offset=12)], [], lineno=638, col_offset=12)], [If(Name('closep', Load(), lineno=644, col_offset=15), [Expr(Call(Attribute(Name('fp', Load(), lineno=645, col_offset=16), 'close', Load(), lineno=645, col_offset=16), [], [], None, None, lineno=645, col_offset=16), lineno=645, col_offset=16)], [], lineno=644, col_offset=12)], lineno=636, col_offset=8)], [], lineno=625, col_offset=4), If(Compare(Attribute(Name('options', Load(), lineno=648, col_offset=7), 'outfile', Load(), lineno=648, col_offset=7), [Eq()], [Str('-', lineno=648, col_offset=26)], lineno=648, col_offset=7), [Assign([Name('fp', Store(), lineno=649, col_offset=8)], Attribute(Name('sys', Load(), lineno=649, col_offset=13), 'stdout', Load(), lineno=649, col_offset=13), lineno=649, col_offset=8), Assign([Name('closep', Store(), lineno=650, col_offset=8)], Num(0, lineno=650, col_offset=17), lineno=650, col_offset=8)], [If(Attribute(Name('options', Load(), lineno=652, col_offset=11), 'outpath', Load(), lineno=652, col_offset=11), [Assign([Attribute(Name('options', Load(), lineno=653, col_offset=12), 'outfile', Store(), lineno=653, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=653, col_offset=30), 'path', Load(), lineno=653, col_offset=30), 'join', Load(), lineno=653, col_offset=30), [Attribute(Name('options', Load(), lineno=653, col_offset=43), 'outpath', Load(), lineno=653, col_offset=43), Attribute(Name('options', Load(), lineno=653, col_offset=60), 'outfile', Load(), lineno=653, col_offset=60)], [], None, None, lineno=653, col_offset=30), lineno=653, col_offset=12)], [], lineno=652, col_offset=8), Assign([Name('fp', Store(), lineno=654, col_offset=8)], Call(Name('open', Load(), lineno=654, col_offset=13), [Attribute(Name('options', Load(), lineno=654, col_offset=18), 'outfile', Load(), lineno=654, col_offset=18), Str('w', lineno=654, col_offset=35)], [], None, None, lineno=654, col_offset=13), lineno=654, col_offset=8), Assign([Name('closep', Store(), lineno=655, col_offset=8)], Num(1, lineno=655, col_offset=17), lineno=655, col_offset=8)], lineno=648, col_offset=4), TryFinally([Expr(Call(Attribute(Name('eater', Load(), lineno=657, col_offset=8), 'write', Load(), lineno=657, col_offset=8), [Name('fp', Load(), lineno=657, col_offset=20)], [], None, None, lineno=657, col_offset=8), lineno=657, col_offset=8)], [If(Name('closep', Load(), lineno=659, col_offset=11), [Expr(Call(Attribute(Name('fp', Load(), lineno=660, col_offset=12), 'close', Load(), lineno=660, col_offset=12), [], [], None, None, lineno=660, col_offset=12), lineno=660, col_offset=12)], [], lineno=659, col_offset=8)], lineno=656, col_offset=4)], [], lineno=505, col_offset=0), If(Compare(Name('__name__', Load(), lineno=663, col_offset=3), [Eq()], [Str('__main__', lineno=663, col_offset=15)], lineno=663, col_offset=3), [Expr(Call(Name('main', Load(), lineno=664, col_offset=4), [], [], None, None, lineno=664, col_offset=4), lineno=664, col_offset=4), Expr(Call(Name('_', Load(), lineno=666, col_offset=4), [Str(u'a unicode string', lineno=666, col_offset=6)], [], None, None, lineno=666, col_offset=4), lineno=666, col_offset=4), Expr(BinOp(Call(Name('_', Load(), lineno=668, col_offset=4), [Str('*** Seen unexpected token "%(token)s"', lineno=668, col_offset=6)], [], None, None, lineno=668, col_offset=4), Mod(), Dict([Str('token', lineno=668, col_offset=50)], [Str('test', lineno=668, col_offset=59)], lineno=668, col_offset=49), lineno=668, col_offset=4), lineno=668, col_offset=4), Expr(Call(Name('_', Load(), lineno=669, col_offset=4), [Str('morethanonestring', lineno=669, col_offset=6)], [], None, None, lineno=669, col_offset=4), lineno=669, col_offset=4)], [], lineno=663, col_offset=0)])
