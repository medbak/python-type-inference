Module([Expr(Str('Simple HTTP Server.\n\nThis module builds on BaseHTTPServer by implementing the standard GET\nand HEAD requests in a fairly straightforward manner.\n\n', lineno=6, col_offset=-1), lineno=6, col_offset=-1), Assign([Name('__version__', Store(), lineno=9, col_offset=0)], Str('0.6', lineno=9, col_offset=14), lineno=9, col_offset=0), Assign([Name('__all__', Store(), lineno=11, col_offset=0)], List([Str('SimpleHTTPRequestHandler', lineno=11, col_offset=11)], Load(), lineno=11, col_offset=10), lineno=11, col_offset=0), Import([alias('os', None)], lineno=13, col_offset=0), Import([alias('posixpath', None)], lineno=14, col_offset=0), Import([alias('BaseHTTPServer', None)], lineno=15, col_offset=0), Import([alias('urllib', None)], lineno=16, col_offset=0), Import([alias('cgi', None)], lineno=17, col_offset=0), Import([alias('shutil', None)], lineno=18, col_offset=0), Import([alias('mimetypes', None)], lineno=19, col_offset=0), TryExcept([ImportFrom('cStringIO', [alias('StringIO', None)], 0, lineno=21, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=22, col_offset=7), None, [ImportFrom('StringIO', [alias('StringIO', None)], 0, lineno=23, col_offset=4)], lineno=22, col_offset=0)], [], lineno=20, col_offset=0), ClassDef('SimpleHTTPRequestHandler', [Attribute(Name('BaseHTTPServer', Load(), lineno=26, col_offset=31), 'BaseHTTPRequestHandler', Load(), lineno=26, col_offset=31)], [Expr(Str('Simple HTTP request handler with GET and HEAD commands.\n\n    This serves files from the current directory and any of its\n    subdirectories.  The MIME type for files is determined by\n    calling the .guess_type() method.\n\n    The GET and HEAD requests are identical except that the HEAD\n    request omits the actual contents of the file.\n\n    ', lineno=37, col_offset=-1), lineno=37, col_offset=-1), Assign([Name('server_version', Store(), lineno=39, col_offset=4)], BinOp(Str('SimpleHTTP/', lineno=39, col_offset=21), Add(), Name('__version__', Load(), lineno=39, col_offset=37), lineno=39, col_offset=21), lineno=39, col_offset=4), FunctionDef('do_GET', arguments([Name('self', Param(), lineno=41, col_offset=15)], None, None, []), [Expr(Str('Serve a GET request.', lineno=42, col_offset=8), lineno=42, col_offset=8), Assign([Name('f', Store(), lineno=43, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=43, col_offset=12), 'send_head', Load(), lineno=43, col_offset=12), [], [], None, None, lineno=43, col_offset=12), lineno=43, col_offset=8), If(Name('f', Load(), lineno=44, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=45, col_offset=12), 'copyfile', Load(), lineno=45, col_offset=12), [Name('f', Load(), lineno=45, col_offset=26), Attribute(Name('self', Load(), lineno=45, col_offset=29), 'wfile', Load(), lineno=45, col_offset=29)], [], None, None, lineno=45, col_offset=12), lineno=45, col_offset=12), Expr(Call(Attribute(Name('f', Load(), lineno=46, col_offset=12), 'close', Load(), lineno=46, col_offset=12), [], [], None, None, lineno=46, col_offset=12), lineno=46, col_offset=12)], [], lineno=44, col_offset=8)], [], lineno=41, col_offset=4), FunctionDef('do_HEAD', arguments([Name('self', Param(), lineno=48, col_offset=16)], None, None, []), [Expr(Str('Serve a HEAD request.', lineno=49, col_offset=8), lineno=49, col_offset=8), Assign([Name('f', Store(), lineno=50, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=50, col_offset=12), 'send_head', Load(), lineno=50, col_offset=12), [], [], None, None, lineno=50, col_offset=12), lineno=50, col_offset=8), If(Name('f', Load(), lineno=51, col_offset=11), [Expr(Call(Attribute(Name('f', Load(), lineno=52, col_offset=12), 'close', Load(), lineno=52, col_offset=12), [], [], None, None, lineno=52, col_offset=12), lineno=52, col_offset=12)], [], lineno=51, col_offset=8)], [], lineno=48, col_offset=4), FunctionDef('send_head', arguments([Name('self', Param(), lineno=54, col_offset=18)], None, None, []), [Expr(Str('Common code for GET and HEAD commands.\n\n        This sends the response code and MIME headers.\n\n        Return value is either a file object (which has to be copied\n        to the outputfile by the caller unless the command was HEAD,\n        and must be closed by the caller under all circumstances), or\n        None, in which case the caller has nothing further to do.\n\n        ', lineno=64, col_offset=-1), lineno=64, col_offset=-1), Assign([Name('path', Store(), lineno=65, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=65, col_offset=15), 'translate_path', Load(), lineno=65, col_offset=15), [Attribute(Name('self', Load(), lineno=65, col_offset=35), 'path', Load(), lineno=65, col_offset=35)], [], None, None, lineno=65, col_offset=15), lineno=65, col_offset=8), Assign([Name('f', Store(), lineno=66, col_offset=8)], Name('None', Load(), lineno=66, col_offset=12), lineno=66, col_offset=8), If(Call(Attribute(Attribute(Name('os', Load(), lineno=67, col_offset=11), 'path', Load(), lineno=67, col_offset=11), 'isdir', Load(), lineno=67, col_offset=11), [Name('path', Load(), lineno=67, col_offset=25)], [], None, None, lineno=67, col_offset=11), [If(UnaryOp(Not(), Call(Attribute(Attribute(Name('self', Load(), lineno=68, col_offset=19), 'path', Load(), lineno=68, col_offset=19), 'endswith', Load(), lineno=68, col_offset=19), [Str('/', lineno=68, col_offset=38)], [], None, None, lineno=68, col_offset=19), lineno=68, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=70, col_offset=16), 'send_response', Load(), lineno=70, col_offset=16), [Num(301, lineno=70, col_offset=35)], [], None, None, lineno=70, col_offset=16), lineno=70, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=71, col_offset=16), 'send_header', Load(), lineno=71, col_offset=16), [Str('Location', lineno=71, col_offset=33), BinOp(Attribute(Name('self', Load(), lineno=71, col_offset=45), 'path', Load(), lineno=71, col_offset=45), Add(), Str('/', lineno=71, col_offset=57), lineno=71, col_offset=45)], [], None, None, lineno=71, col_offset=16), lineno=71, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=72, col_offset=16), 'end_headers', Load(), lineno=72, col_offset=16), [], [], None, None, lineno=72, col_offset=16), lineno=72, col_offset=16), Return(Name('None', Load(), lineno=73, col_offset=23), lineno=73, col_offset=16)], [], lineno=68, col_offset=12), For(Name('index', Store(), lineno=74, col_offset=16), Tuple([Str('index.html', lineno=74, col_offset=25), Str('index.htm', lineno=74, col_offset=39)], Load(), lineno=74, col_offset=25), [Assign([Name('index', Store(), lineno=75, col_offset=16)], Call(Attribute(Attribute(Name('os', Load(), lineno=75, col_offset=24), 'path', Load(), lineno=75, col_offset=24), 'join', Load(), lineno=75, col_offset=24), [Name('path', Load(), lineno=75, col_offset=37), Name('index', Load(), lineno=75, col_offset=43)], [], None, None, lineno=75, col_offset=24), lineno=75, col_offset=16), If(Call(Attribute(Attribute(Name('os', Load(), lineno=76, col_offset=19), 'path', Load(), lineno=76, col_offset=19), 'exists', Load(), lineno=76, col_offset=19), [Name('index', Load(), lineno=76, col_offset=34)], [], None, None, lineno=76, col_offset=19), [Assign([Name('path', Store(), lineno=77, col_offset=20)], Name('index', Load(), lineno=77, col_offset=27), lineno=77, col_offset=20), Break( lineno=78, col_offset=20)], [], lineno=76, col_offset=16)], [Return(Call(Attribute(Name('self', Load(), lineno=80, col_offset=23), 'list_directory', Load(), lineno=80, col_offset=23), [Name('path', Load(), lineno=80, col_offset=43)], [], None, None, lineno=80, col_offset=23), lineno=80, col_offset=16)], lineno=74, col_offset=12)], [], lineno=67, col_offset=8), Assign([Name('ctype', Store(), lineno=81, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=81, col_offset=16), 'guess_type', Load(), lineno=81, col_offset=16), [Name('path', Load(), lineno=81, col_offset=32)], [], None, None, lineno=81, col_offset=16), lineno=81, col_offset=8), TryExcept([Assign([Name('f', Store(), lineno=86, col_offset=12)], Call(Name('open', Load(), lineno=86, col_offset=16), [Name('path', Load(), lineno=86, col_offset=21), Str('rb', lineno=86, col_offset=27)], [], None, None, lineno=86, col_offset=16), lineno=86, col_offset=12)], [ExceptHandler(Name('IOError', Load(), lineno=87, col_offset=15), None, [Expr(Call(Attribute(Name('self', Load(), lineno=88, col_offset=12), 'send_error', Load(), lineno=88, col_offset=12), [Num(404, lineno=88, col_offset=28), Str('File not found', lineno=88, col_offset=33)], [], None, None, lineno=88, col_offset=12), lineno=88, col_offset=12), Return(Name('None', Load(), lineno=89, col_offset=19), lineno=89, col_offset=12)], lineno=87, col_offset=8)], [], lineno=82, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=90, col_offset=8), 'send_response', Load(), lineno=90, col_offset=8), [Num(200, lineno=90, col_offset=27)], [], None, None, lineno=90, col_offset=8), lineno=90, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=91, col_offset=8), 'send_header', Load(), lineno=91, col_offset=8), [Str('Content-type', lineno=91, col_offset=25), Name('ctype', Load(), lineno=91, col_offset=41)], [], None, None, lineno=91, col_offset=8), lineno=91, col_offset=8), Assign([Name('fs', Store(), lineno=92, col_offset=8)], Call(Attribute(Name('os', Load(), lineno=92, col_offset=13), 'fstat', Load(), lineno=92, col_offset=13), [Call(Attribute(Name('f', Load(), lineno=92, col_offset=22), 'fileno', Load(), lineno=92, col_offset=22), [], [], None, None, lineno=92, col_offset=22)], [], None, None, lineno=92, col_offset=13), lineno=92, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=93, col_offset=8), 'send_header', Load(), lineno=93, col_offset=8), [Str('Content-Length', lineno=93, col_offset=25), Call(Name('str', Load(), lineno=93, col_offset=43), [Subscript(Name('fs', Load(), lineno=93, col_offset=47), Index(Num(6, lineno=93, col_offset=50)), Load(), lineno=93, col_offset=47)], [], None, None, lineno=93, col_offset=43)], [], None, None, lineno=93, col_offset=8), lineno=93, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=94, col_offset=8), 'send_header', Load(), lineno=94, col_offset=8), [Str('Last-Modified', lineno=94, col_offset=25), Call(Attribute(Name('self', Load(), lineno=94, col_offset=42), 'date_time_string', Load(), lineno=94, col_offset=42), [Attribute(Name('fs', Load(), lineno=94, col_offset=64), 'st_mtime', Load(), lineno=94, col_offset=64)], [], None, None, lineno=94, col_offset=42)], [], None, None, lineno=94, col_offset=8), lineno=94, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=95, col_offset=8), 'end_headers', Load(), lineno=95, col_offset=8), [], [], None, None, lineno=95, col_offset=8), lineno=95, col_offset=8), Return(Name('f', Load(), lineno=96, col_offset=15), lineno=96, col_offset=8)], [], lineno=54, col_offset=4), FunctionDef('list_directory', arguments([Name('self', Param(), lineno=98, col_offset=23), Name('path', Param(), lineno=98, col_offset=29)], None, None, []), [Expr(Str('Helper to produce a directory listing (absent index.html).\n\n        Return value is either a file object, or None (indicating an\n        error).  In either case, the headers are sent, making the\n        interface the same as for send_head().\n\n        ', lineno=105, col_offset=-1), lineno=105, col_offset=-1), TryExcept([Assign([Name('list', Store(), lineno=107, col_offset=12)], Call(Attribute(Name('os', Load(), lineno=107, col_offset=19), 'listdir', Load(), lineno=107, col_offset=19), [Name('path', Load(), lineno=107, col_offset=30)], [], None, None, lineno=107, col_offset=19), lineno=107, col_offset=12)], [ExceptHandler(Attribute(Name('os', Load(), lineno=108, col_offset=15), 'error', Load(), lineno=108, col_offset=15), None, [Expr(Call(Attribute(Name('self', Load(), lineno=109, col_offset=12), 'send_error', Load(), lineno=109, col_offset=12), [Num(404, lineno=109, col_offset=28), Str('No permission to list directory', lineno=109, col_offset=33)], [], None, None, lineno=109, col_offset=12), lineno=109, col_offset=12), Return(Name('None', Load(), lineno=110, col_offset=19), lineno=110, col_offset=12)], lineno=108, col_offset=8)], [], lineno=106, col_offset=8), Expr(Call(Attribute(Name('list', Load(), lineno=111, col_offset=8), 'sort', Load(), lineno=111, col_offset=8), [], [keyword('key', Lambda(arguments([Name('a', Param(), lineno=111, col_offset=29)], None, None, []), Call(Attribute(Name('a', Load(), lineno=111, col_offset=32), 'lower', Load(), lineno=111, col_offset=32), [], [], None, None, lineno=111, col_offset=32), lineno=111, col_offset=22))], None, None, lineno=111, col_offset=8), lineno=111, col_offset=8), Assign([Name('f', Store(), lineno=112, col_offset=8)], Call(Name('StringIO', Load(), lineno=112, col_offset=12), [], [], None, None, lineno=112, col_offset=12), lineno=112, col_offset=8), Assign([Name('displaypath', Store(), lineno=113, col_offset=8)], Call(Attribute(Name('cgi', Load(), lineno=113, col_offset=22), 'escape', Load(), lineno=113, col_offset=22), [Call(Attribute(Name('urllib', Load(), lineno=113, col_offset=33), 'unquote', Load(), lineno=113, col_offset=33), [Attribute(Name('self', Load(), lineno=113, col_offset=48), 'path', Load(), lineno=113, col_offset=48)], [], None, None, lineno=113, col_offset=33)], [], None, None, lineno=113, col_offset=22), lineno=113, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=114, col_offset=8), 'write', Load(), lineno=114, col_offset=8), [Str('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">', lineno=114, col_offset=16)], [], None, None, lineno=114, col_offset=8), lineno=114, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=115, col_offset=8), 'write', Load(), lineno=115, col_offset=8), [BinOp(Str('<html>\n<title>Directory listing for %s</title>\n', lineno=115, col_offset=16), Mod(), Name('displaypath', Load(), lineno=115, col_offset=70), lineno=115, col_offset=16)], [], None, None, lineno=115, col_offset=8), lineno=115, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=116, col_offset=8), 'write', Load(), lineno=116, col_offset=8), [BinOp(Str('<body>\n<h2>Directory listing for %s</h2>\n', lineno=116, col_offset=16), Mod(), Name('displaypath', Load(), lineno=116, col_offset=64), lineno=116, col_offset=16)], [], None, None, lineno=116, col_offset=8), lineno=116, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=117, col_offset=8), 'write', Load(), lineno=117, col_offset=8), [Str('<hr>\n<ul>\n', lineno=117, col_offset=16)], [], None, None, lineno=117, col_offset=8), lineno=117, col_offset=8), For(Name('name', Store(), lineno=118, col_offset=12), Name('list', Load(), lineno=118, col_offset=20), [Assign([Name('fullname', Store(), lineno=119, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=119, col_offset=23), 'path', Load(), lineno=119, col_offset=23), 'join', Load(), lineno=119, col_offset=23), [Name('path', Load(), lineno=119, col_offset=36), Name('name', Load(), lineno=119, col_offset=42)], [], None, None, lineno=119, col_offset=23), lineno=119, col_offset=12), Assign([Name('displayname', Store(), lineno=120, col_offset=12), Name('linkname', Store(), lineno=120, col_offset=26)], Name('name', Load(), lineno=120, col_offset=37), lineno=120, col_offset=12), If(Call(Attribute(Attribute(Name('os', Load(), lineno=122, col_offset=15), 'path', Load(), lineno=122, col_offset=15), 'isdir', Load(), lineno=122, col_offset=15), [Name('fullname', Load(), lineno=122, col_offset=29)], [], None, None, lineno=122, col_offset=15), [Assign([Name('displayname', Store(), lineno=123, col_offset=16)], BinOp(Name('name', Load(), lineno=123, col_offset=30), Add(), Str('/', lineno=123, col_offset=37), lineno=123, col_offset=30), lineno=123, col_offset=16), Assign([Name('linkname', Store(), lineno=124, col_offset=16)], BinOp(Name('name', Load(), lineno=124, col_offset=27), Add(), Str('/', lineno=124, col_offset=34), lineno=124, col_offset=27), lineno=124, col_offset=16)], [], lineno=122, col_offset=12), If(Call(Attribute(Attribute(Name('os', Load(), lineno=125, col_offset=15), 'path', Load(), lineno=125, col_offset=15), 'islink', Load(), lineno=125, col_offset=15), [Name('fullname', Load(), lineno=125, col_offset=30)], [], None, None, lineno=125, col_offset=15), [Assign([Name('displayname', Store(), lineno=126, col_offset=16)], BinOp(Name('name', Load(), lineno=126, col_offset=30), Add(), Str('@', lineno=126, col_offset=37), lineno=126, col_offset=30), lineno=126, col_offset=16)], [], lineno=125, col_offset=12), Expr(Call(Attribute(Name('f', Load(), lineno=128, col_offset=12), 'write', Load(), lineno=128, col_offset=12), [BinOp(Str('<li><a href="%s">%s</a>\n', lineno=128, col_offset=20), Mod(), Tuple([Call(Attribute(Name('urllib', Load(), lineno=129, col_offset=23), 'quote', Load(), lineno=129, col_offset=23), [Name('linkname', Load(), lineno=129, col_offset=36)], [], None, None, lineno=129, col_offset=23), Call(Attribute(Name('cgi', Load(), lineno=129, col_offset=47), 'escape', Load(), lineno=129, col_offset=47), [Name('displayname', Load(), lineno=129, col_offset=58)], [], None, None, lineno=129, col_offset=47)], Load(), lineno=129, col_offset=23), lineno=128, col_offset=20)], [], None, None, lineno=128, col_offset=12), lineno=128, col_offset=12)], [], lineno=118, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=130, col_offset=8), 'write', Load(), lineno=130, col_offset=8), [Str('</ul>\n<hr>\n</body>\n</html>\n', lineno=130, col_offset=16)], [], None, None, lineno=130, col_offset=8), lineno=130, col_offset=8), Assign([Name('length', Store(), lineno=131, col_offset=8)], Call(Attribute(Name('f', Load(), lineno=131, col_offset=17), 'tell', Load(), lineno=131, col_offset=17), [], [], None, None, lineno=131, col_offset=17), lineno=131, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=132, col_offset=8), 'seek', Load(), lineno=132, col_offset=8), [Num(0, lineno=132, col_offset=15)], [], None, None, lineno=132, col_offset=8), lineno=132, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=133, col_offset=8), 'send_response', Load(), lineno=133, col_offset=8), [Num(200, lineno=133, col_offset=27)], [], None, None, lineno=133, col_offset=8), lineno=133, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=134, col_offset=8), 'send_header', Load(), lineno=134, col_offset=8), [Str('Content-type', lineno=134, col_offset=25), Str('text/html', lineno=134, col_offset=41)], [], None, None, lineno=134, col_offset=8), lineno=134, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=135, col_offset=8), 'send_header', Load(), lineno=135, col_offset=8), [Str('Content-Length', lineno=135, col_offset=25), Call(Name('str', Load(), lineno=135, col_offset=43), [Name('length', Load(), lineno=135, col_offset=47)], [], None, None, lineno=135, col_offset=43)], [], None, None, lineno=135, col_offset=8), lineno=135, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=136, col_offset=8), 'end_headers', Load(), lineno=136, col_offset=8), [], [], None, None, lineno=136, col_offset=8), lineno=136, col_offset=8), Return(Name('f', Load(), lineno=137, col_offset=15), lineno=137, col_offset=8)], [], lineno=98, col_offset=4), FunctionDef('translate_path', arguments([Name('self', Param(), lineno=139, col_offset=23), Name('path', Param(), lineno=139, col_offset=29)], None, None, []), [Expr(Str('Translate a /-separated PATH to the local filename syntax.\n\n        Components that mean special things to the local file system\n        (e.g. drive or directory names) are ignored.  (XXX They should\n        probably be diagnosed.)\n\n        ', lineno=146, col_offset=-1), lineno=146, col_offset=-1), Assign([Name('path', Store(), lineno=148, col_offset=8)], Subscript(Call(Attribute(Name('path', Load(), lineno=148, col_offset=15), 'split', Load(), lineno=148, col_offset=15), [Str('?', lineno=148, col_offset=26), Num(1, lineno=148, col_offset=30)], [], None, None, lineno=148, col_offset=15), Index(Num(0, lineno=148, col_offset=33)), Load(), lineno=148, col_offset=15), lineno=148, col_offset=8), Assign([Name('path', Store(), lineno=149, col_offset=8)], Subscript(Call(Attribute(Name('path', Load(), lineno=149, col_offset=15), 'split', Load(), lineno=149, col_offset=15), [Str('#', lineno=149, col_offset=26), Num(1, lineno=149, col_offset=30)], [], None, None, lineno=149, col_offset=15), Index(Num(0, lineno=149, col_offset=33)), Load(), lineno=149, col_offset=15), lineno=149, col_offset=8), Assign([Name('path', Store(), lineno=150, col_offset=8)], Call(Attribute(Name('posixpath', Load(), lineno=150, col_offset=15), 'normpath', Load(), lineno=150, col_offset=15), [Call(Attribute(Name('urllib', Load(), lineno=150, col_offset=34), 'unquote', Load(), lineno=150, col_offset=34), [Name('path', Load(), lineno=150, col_offset=49)], [], None, None, lineno=150, col_offset=34)], [], None, None, lineno=150, col_offset=15), lineno=150, col_offset=8), Assign([Name('words', Store(), lineno=151, col_offset=8)], Call(Attribute(Name('path', Load(), lineno=151, col_offset=16), 'split', Load(), lineno=151, col_offset=16), [Str('/', lineno=151, col_offset=27)], [], None, None, lineno=151, col_offset=16), lineno=151, col_offset=8), Assign([Name('words', Store(), lineno=152, col_offset=8)], Call(Name('filter', Load(), lineno=152, col_offset=16), [Name('None', Load(), lineno=152, col_offset=23), Name('words', Load(), lineno=152, col_offset=29)], [], None, None, lineno=152, col_offset=16), lineno=152, col_offset=8), Assign([Name('path', Store(), lineno=153, col_offset=8)], Call(Attribute(Name('os', Load(), lineno=153, col_offset=15), 'getcwd', Load(), lineno=153, col_offset=15), [], [], None, None, lineno=153, col_offset=15), lineno=153, col_offset=8), For(Name('word', Store(), lineno=154, col_offset=12), Name('words', Load(), lineno=154, col_offset=20), [Assign([Tuple([Name('drive', Store(), lineno=155, col_offset=12), Name('word', Store(), lineno=155, col_offset=19)], Store(), lineno=155, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=155, col_offset=26), 'path', Load(), lineno=155, col_offset=26), 'splitdrive', Load(), lineno=155, col_offset=26), [Name('word', Load(), lineno=155, col_offset=45)], [], None, None, lineno=155, col_offset=26), lineno=155, col_offset=12), Assign([Tuple([Name('head', Store(), lineno=156, col_offset=12), Name('word', Store(), lineno=156, col_offset=18)], Store(), lineno=156, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=156, col_offset=25), 'path', Load(), lineno=156, col_offset=25), 'split', Load(), lineno=156, col_offset=25), [Name('word', Load(), lineno=156, col_offset=39)], [], None, None, lineno=156, col_offset=25), lineno=156, col_offset=12), If(Compare(Name('word', Load(), lineno=157, col_offset=15), [In()], [Tuple([Attribute(Name('os', Load(), lineno=157, col_offset=24), 'curdir', Load(), lineno=157, col_offset=24), Attribute(Name('os', Load(), lineno=157, col_offset=35), 'pardir', Load(), lineno=157, col_offset=35)], Load(), lineno=157, col_offset=24)], lineno=157, col_offset=15), [Continue( lineno=157, col_offset=47)], [], lineno=157, col_offset=12), Assign([Name('path', Store(), lineno=158, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=158, col_offset=19), 'path', Load(), lineno=158, col_offset=19), 'join', Load(), lineno=158, col_offset=19), [Name('path', Load(), lineno=158, col_offset=32), Name('word', Load(), lineno=158, col_offset=38)], [], None, None, lineno=158, col_offset=19), lineno=158, col_offset=12)], [], lineno=154, col_offset=8), Return(Name('path', Load(), lineno=159, col_offset=15), lineno=159, col_offset=8)], [], lineno=139, col_offset=4), FunctionDef('copyfile', arguments([Name('self', Param(), lineno=161, col_offset=17), Name('source', Param(), lineno=161, col_offset=23), Name('outputfile', Param(), lineno=161, col_offset=31)], None, None, []), [Expr(Str('Copy all data between two file objects.\n\n        The SOURCE argument is a file object open for reading\n        (or anything with a read() method) and the DESTINATION\n        argument is a file object open for writing (or\n        anything with a write() method).\n\n        The only reason for overriding this would be to change\n        the block size or perhaps to replace newlines by CRLF\n        -- note however that this the default server uses this\n        to copy binary data as well.\n\n        ', lineno=174, col_offset=-1), lineno=174, col_offset=-1), Expr(Call(Attribute(Name('shutil', Load(), lineno=175, col_offset=8), 'copyfileobj', Load(), lineno=175, col_offset=8), [Name('source', Load(), lineno=175, col_offset=27), Name('outputfile', Load(), lineno=175, col_offset=35)], [], None, None, lineno=175, col_offset=8), lineno=175, col_offset=8)], [], lineno=161, col_offset=4), FunctionDef('guess_type', arguments([Name('self', Param(), lineno=177, col_offset=19), Name('path', Param(), lineno=177, col_offset=25)], None, None, []), [Expr(Str("Guess the type of a file.\n\n        Argument is a PATH (a filename).\n\n        Return value is a string of the form type/subtype,\n        usable for a MIME Content-type header.\n\n        The default implementation looks the file's extension\n        up in the table self.extensions_map, using application/octet-stream\n        as a default; however it would be permissible (if\n        slow) to look inside the data to make a better guess.\n\n        ", lineno=190, col_offset=-1), lineno=190, col_offset=-1), Assign([Tuple([Name('base', Store(), lineno=192, col_offset=8), Name('ext', Store(), lineno=192, col_offset=14)], Store(), lineno=192, col_offset=8)], Call(Attribute(Name('posixpath', Load(), lineno=192, col_offset=20), 'splitext', Load(), lineno=192, col_offset=20), [Name('path', Load(), lineno=192, col_offset=39)], [], None, None, lineno=192, col_offset=20), lineno=192, col_offset=8), If(Compare(Name('ext', Load(), lineno=193, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=193, col_offset=18), 'extensions_map', Load(), lineno=193, col_offset=18)], lineno=193, col_offset=11), [Return(Subscript(Attribute(Name('self', Load(), lineno=194, col_offset=19), 'extensions_map', Load(), lineno=194, col_offset=19), Index(Name('ext', Load(), lineno=194, col_offset=39)), Load(), lineno=194, col_offset=19), lineno=194, col_offset=12)], [], lineno=193, col_offset=8), Assign([Name('ext', Store(), lineno=195, col_offset=8)], Call(Attribute(Name('ext', Load(), lineno=195, col_offset=14), 'lower', Load(), lineno=195, col_offset=14), [], [], None, None, lineno=195, col_offset=14), lineno=195, col_offset=8), If(Compare(Name('ext', Load(), lineno=196, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=196, col_offset=18), 'extensions_map', Load(), lineno=196, col_offset=18)], lineno=196, col_offset=11), [Return(Subscript(Attribute(Name('self', Load(), lineno=197, col_offset=19), 'extensions_map', Load(), lineno=197, col_offset=19), Index(Name('ext', Load(), lineno=197, col_offset=39)), Load(), lineno=197, col_offset=19), lineno=197, col_offset=12)], [Return(Subscript(Attribute(Name('self', Load(), lineno=199, col_offset=19), 'extensions_map', Load(), lineno=199, col_offset=19), Index(Str('', lineno=199, col_offset=39)), Load(), lineno=199, col_offset=19), lineno=199, col_offset=12)], lineno=196, col_offset=8)], [], lineno=177, col_offset=4), If(UnaryOp(Not(), Attribute(Name('mimetypes', Load(), lineno=201, col_offset=11), 'inited', Load(), lineno=201, col_offset=11), lineno=201, col_offset=7), [Expr(Call(Attribute(Name('mimetypes', Load(), lineno=202, col_offset=8), 'init', Load(), lineno=202, col_offset=8), [], [], None, None, lineno=202, col_offset=8), lineno=202, col_offset=8)], [], lineno=201, col_offset=4), Assign([Name('extensions_map', Store(), lineno=203, col_offset=4)], Call(Attribute(Attribute(Name('mimetypes', Load(), lineno=203, col_offset=21), 'types_map', Load(), lineno=203, col_offset=21), 'copy', Load(), lineno=203, col_offset=21), [], [], None, None, lineno=203, col_offset=21), lineno=203, col_offset=4), Expr(Call(Attribute(Name('extensions_map', Load(), lineno=204, col_offset=4), 'update', Load(), lineno=204, col_offset=4), [Dict([Str('', lineno=205, col_offset=8), Str('.py', lineno=206, col_offset=8), Str('.c', lineno=207, col_offset=8), Str('.h', lineno=208, col_offset=8)], [Str('application/octet-stream', lineno=205, col_offset=12), Str('text/plain', lineno=206, col_offset=15), Str('text/plain', lineno=207, col_offset=14), Str('text/plain', lineno=208, col_offset=14)], lineno=204, col_offset=26)], [], None, None, lineno=204, col_offset=4), lineno=204, col_offset=4)], [], lineno=26, col_offset=0), FunctionDef('test', arguments([Name('HandlerClass', Param(), lineno=212, col_offset=9), Name('ServerClass', Param(), lineno=213, col_offset=9)], None, None, [Name('SimpleHTTPRequestHandler', Load(), lineno=212, col_offset=24), Attribute(Name('BaseHTTPServer', Load(), lineno=213, col_offset=23), 'HTTPServer', Load(), lineno=213, col_offset=23)]), [Expr(Call(Attribute(Name('BaseHTTPServer', Load(), lineno=214, col_offset=4), 'test', Load(), lineno=214, col_offset=4), [Name('HandlerClass', Load(), lineno=214, col_offset=24), Name('ServerClass', Load(), lineno=214, col_offset=38)], [], None, None, lineno=214, col_offset=4), lineno=214, col_offset=4)], [], lineno=212, col_offset=0), If(Compare(Name('__name__', Load(), lineno=217, col_offset=3), [Eq()], [Str('__main__', lineno=217, col_offset=15)], lineno=217, col_offset=3), [Expr(Call(Name('test', Load(), lineno=218, col_offset=4), [], [], None, None, lineno=218, col_offset=4), lineno=218, col_offset=4)], [], lineno=217, col_offset=0)])
