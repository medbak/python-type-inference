Module([Import([alias('array', None)], lineno=9, col_offset=0), Import([alias('hashlib', None)], lineno=10, col_offset=0), Import([alias('itertools', None)], lineno=11, col_offset=0), Import([alias('sys', None)], lineno=12, col_offset=0), TryExcept([Import([alias('threading', None)], lineno=14, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=15, col_offset=7), None, [Assign([Name('threading', Store(), lineno=16, col_offset=4)], Name('None', Load(), lineno=16, col_offset=16), lineno=16, col_offset=4)], lineno=15, col_offset=0)], [], lineno=13, col_offset=0), Import([alias('unittest', None)], lineno=17, col_offset=0), Import([alias('warnings', None)], lineno=18, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=19, col_offset=0), ImportFrom('test.test_support', [alias('_4G', None), alias('precisionbigmemtest', None)], 0, lineno=20, col_offset=0), Assign([Name('COMPILED_WITH_PYDEBUG', Store(), lineno=23, col_offset=0)], Call(Name('hasattr', Load(), lineno=23, col_offset=24), [Name('sys', Load(), lineno=23, col_offset=32), Str('gettotalrefcount', lineno=23, col_offset=37)], [], None, None, lineno=23, col_offset=24), lineno=23, col_offset=0), FunctionDef('hexstr', arguments([Name('s', Param(), lineno=26, col_offset=11)], None, None, []), [Import([alias('string', None)], lineno=27, col_offset=4), Assign([Name('h', Store(), lineno=28, col_offset=4)], Attribute(Name('string', Load(), lineno=28, col_offset=8), 'hexdigits', Load(), lineno=28, col_offset=8), lineno=28, col_offset=4), Assign([Name('r', Store(), lineno=29, col_offset=4)], Str('', lineno=29, col_offset=8), lineno=29, col_offset=4), For(Name('c', Store(), lineno=30, col_offset=8), Name('s', Load(), lineno=30, col_offset=13), [Assign([Name('i', Store(), lineno=31, col_offset=8)], Call(Name('ord', Load(), lineno=31, col_offset=12), [Name('c', Load(), lineno=31, col_offset=16)], [], None, None, lineno=31, col_offset=12), lineno=31, col_offset=8), Assign([Name('r', Store(), lineno=32, col_offset=8)], BinOp(BinOp(Name('r', Load(), lineno=32, col_offset=12), Add(), Subscript(Name('h', Load(), lineno=32, col_offset=16), Index(BinOp(BinOp(Name('i', Load(), lineno=32, col_offset=19), RShift(), Num(4, lineno=32, col_offset=24), lineno=32, col_offset=19), BitAnd(), Num(15, lineno=32, col_offset=29), lineno=32, col_offset=18)), Load(), lineno=32, col_offset=16), lineno=32, col_offset=12), Add(), Subscript(Name('h', Load(), lineno=32, col_offset=36), Index(BinOp(Name('i', Load(), lineno=32, col_offset=38), BitAnd(), Num(15, lineno=32, col_offset=42), lineno=32, col_offset=38)), Load(), lineno=32, col_offset=36), lineno=32, col_offset=34), lineno=32, col_offset=8)], [], lineno=30, col_offset=4), Return(Name('r', Load(), lineno=33, col_offset=11), lineno=33, col_offset=4)], [], lineno=26, col_offset=0), ClassDef('HashLibTestCase', [Attribute(Name('unittest', Load(), lineno=36, col_offset=22), 'TestCase', Load(), lineno=36, col_offset=22)], [Assign([Name('supported_hash_names', Store(), lineno=37, col_offset=4)], Tuple([Str('md5', lineno=37, col_offset=29), Str('MD5', lineno=37, col_offset=36), Str('sha1', lineno=37, col_offset=43), Str('SHA1', lineno=37, col_offset=51), Str('sha224', lineno=38, col_offset=29), Str('SHA224', lineno=38, col_offset=39), Str('sha256', lineno=38, col_offset=49), Str('SHA256', lineno=38, col_offset=59), Str('sha384', lineno=39, col_offset=29), Str('SHA384', lineno=39, col_offset=39), Str('sha512', lineno=39, col_offset=49), Str('SHA512', lineno=39, col_offset=59)], Load(), lineno=37, col_offset=29), lineno=37, col_offset=4), Assign([Name('_warn_on_extension_import', Store(), lineno=41, col_offset=4)], Name('COMPILED_WITH_PYDEBUG', Load(), lineno=41, col_offset=32), lineno=41, col_offset=4), FunctionDef('_conditional_import_module', arguments([Name('self', Param(), lineno=43, col_offset=35), Name('module_name', Param(), lineno=43, col_offset=41)], None, None, []), [Expr(Str('Import a module and return a reference to it or None on failure.', lineno=44, col_offset=8), lineno=44, col_offset=8), TryExcept([Exec(BinOp(Str('import ', lineno=46, col_offset=17), Add(), Name('module_name', Load(), lineno=46, col_offset=27), lineno=46, col_offset=17), None, None, lineno=46, col_offset=12)], [ExceptHandler(Name('ImportError', Load(), lineno=47, col_offset=15), Name('error', Store(), lineno=47, col_offset=28), [If(Attribute(Name('self', Load(), lineno=48, col_offset=15), '_warn_on_extension_import', Load(), lineno=48, col_offset=15), [Expr(Call(Attribute(Name('warnings', Load(), lineno=49, col_offset=16), 'warn', Load(), lineno=49, col_offset=16), [BinOp(Str('Did a C extension fail to compile? %s', lineno=49, col_offset=30), Mod(), Name('error', Load(), lineno=49, col_offset=72), lineno=49, col_offset=30)], [], None, None, lineno=49, col_offset=16), lineno=49, col_offset=16)], [], lineno=48, col_offset=12)], lineno=47, col_offset=8)], [], lineno=45, col_offset=8), Return(Call(Attribute(Call(Name('locals', Load(), lineno=50, col_offset=15), [], [], None, None, lineno=50, col_offset=15), 'get', Load(), lineno=50, col_offset=15), [Name('module_name', Load(), lineno=50, col_offset=28)], [], None, None, lineno=50, col_offset=15), lineno=50, col_offset=8)], [], lineno=43, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=52, col_offset=17)], 'args', 'kwargs', []), [Assign([Name('algorithms', Store(), lineno=53, col_offset=8)], Call(Name('set', Load(), lineno=53, col_offset=21), [], [], None, None, lineno=53, col_offset=21), lineno=53, col_offset=8), For(Name('algorithm', Store(), lineno=54, col_offset=12), Attribute(Name('self', Load(), lineno=54, col_offset=25), 'supported_hash_names', Load(), lineno=54, col_offset=25), [Expr(Call(Attribute(Name('algorithms', Load(), lineno=55, col_offset=12), 'add', Load(), lineno=55, col_offset=12), [Call(Attribute(Name('algorithm', Load(), lineno=55, col_offset=27), 'lower', Load(), lineno=55, col_offset=27), [], [], None, None, lineno=55, col_offset=27)], [], None, None, lineno=55, col_offset=12), lineno=55, col_offset=12)], [], lineno=54, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=56, col_offset=8), 'constructors_to_test', Store(), lineno=56, col_offset=8)], Dict([], [], lineno=56, col_offset=36), lineno=56, col_offset=8), For(Name('algorithm', Store(), lineno=57, col_offset=12), Name('algorithms', Load(), lineno=57, col_offset=25), [Assign([Subscript(Attribute(Name('self', Load(), lineno=58, col_offset=12), 'constructors_to_test', Load(), lineno=58, col_offset=12), Index(Name('algorithm', Load(), lineno=58, col_offset=38)), Store(), lineno=58, col_offset=12)], Call(Name('set', Load(), lineno=58, col_offset=51), [], [], None, None, lineno=58, col_offset=51), lineno=58, col_offset=12)], [], lineno=57, col_offset=8), For(Tuple([Name('algorithm', Store(), lineno=62, col_offset=12), Name('constructors', Store(), lineno=62, col_offset=23)], Store(), lineno=62, col_offset=12), Call(Attribute(Attribute(Name('self', Load(), lineno=62, col_offset=39), 'constructors_to_test', Load(), lineno=62, col_offset=39), 'items', Load(), lineno=62, col_offset=39), [], [], None, None, lineno=62, col_offset=39), [Expr(Call(Attribute(Name('constructors', Load(), lineno=63, col_offset=12), 'add', Load(), lineno=63, col_offset=12), [Call(Name('getattr', Load(), lineno=63, col_offset=29), [Name('hashlib', Load(), lineno=63, col_offset=37), Name('algorithm', Load(), lineno=63, col_offset=46)], [], None, None, lineno=63, col_offset=29)], [], None, None, lineno=63, col_offset=12), lineno=63, col_offset=12), FunctionDef('_test_algorithm_via_hashlib_new', arguments([Name('data', Param(), lineno=64, col_offset=48), Name('_alg', Param(), lineno=64, col_offset=59)], None, None, [Name('None', Load(), lineno=64, col_offset=53), Name('algorithm', Load(), lineno=64, col_offset=64)]), [If(Compare(Name('data', Load(), lineno=65, col_offset=19), [Is()], [Name('None', Load(), lineno=65, col_offset=27)], lineno=65, col_offset=19), [Return(Call(Attribute(Name('hashlib', Load(), lineno=66, col_offset=27), 'new', Load(), lineno=66, col_offset=27), [Name('_alg', Load(), lineno=66, col_offset=39)], [], None, None, lineno=66, col_offset=27), lineno=66, col_offset=20)], [], lineno=65, col_offset=16), Return(Call(Attribute(Name('hashlib', Load(), lineno=67, col_offset=23), 'new', Load(), lineno=67, col_offset=23), [Name('_alg', Load(), lineno=67, col_offset=35), Name('data', Load(), lineno=67, col_offset=41)], [], None, None, lineno=67, col_offset=23), lineno=67, col_offset=16)], [], lineno=64, col_offset=12), Expr(Call(Attribute(Name('constructors', Load(), lineno=68, col_offset=12), 'add', Load(), lineno=68, col_offset=12), [Name('_test_algorithm_via_hashlib_new', Load(), lineno=68, col_offset=29)], [], None, None, lineno=68, col_offset=12), lineno=68, col_offset=12)], [], lineno=62, col_offset=8), Assign([Name('_hashlib', Store(), lineno=70, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=70, col_offset=19), '_conditional_import_module', Load(), lineno=70, col_offset=19), [Str('_hashlib', lineno=70, col_offset=51)], [], None, None, lineno=70, col_offset=19), lineno=70, col_offset=8), If(Name('_hashlib', Load(), lineno=71, col_offset=11), [Assert(Call(Name('hasattr', Load(), lineno=74, col_offset=19), [Name('_hashlib', Load(), lineno=74, col_offset=27), Str('openssl_md5', lineno=74, col_offset=37)], [], None, None, lineno=74, col_offset=19), None, lineno=74, col_offset=12), Assert(Call(Name('hasattr', Load(), lineno=75, col_offset=19), [Name('_hashlib', Load(), lineno=75, col_offset=27), Str('openssl_sha1', lineno=75, col_offset=37)], [], None, None, lineno=75, col_offset=19), None, lineno=75, col_offset=12), For(Tuple([Name('algorithm', Store(), lineno=76, col_offset=16), Name('constructors', Store(), lineno=76, col_offset=27)], Store(), lineno=76, col_offset=16), Call(Attribute(Attribute(Name('self', Load(), lineno=76, col_offset=43), 'constructors_to_test', Load(), lineno=76, col_offset=43), 'items', Load(), lineno=76, col_offset=43), [], [], None, None, lineno=76, col_offset=43), [Assign([Name('constructor', Store(), lineno=77, col_offset=16)], Call(Name('getattr', Load(), lineno=77, col_offset=30), [Name('_hashlib', Load(), lineno=77, col_offset=38), BinOp(Str('openssl_', lineno=77, col_offset=48), Add(), Name('algorithm', Load(), lineno=77, col_offset=59), lineno=77, col_offset=48), Name('None', Load(), lineno=77, col_offset=70)], [], None, None, lineno=77, col_offset=30), lineno=77, col_offset=16), If(Name('constructor', Load(), lineno=78, col_offset=19), [Expr(Call(Attribute(Name('constructors', Load(), lineno=79, col_offset=20), 'add', Load(), lineno=79, col_offset=20), [Name('constructor', Load(), lineno=79, col_offset=37)], [], None, None, lineno=79, col_offset=20), lineno=79, col_offset=20)], [], lineno=78, col_offset=16)], [], lineno=76, col_offset=12)], [], lineno=71, col_offset=8), Assign([Name('_md5', Store(), lineno=81, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=81, col_offset=15), '_conditional_import_module', Load(), lineno=81, col_offset=15), [Str('_md5', lineno=81, col_offset=47)], [], None, None, lineno=81, col_offset=15), lineno=81, col_offset=8), If(Name('_md5', Load(), lineno=82, col_offset=11), [Expr(Call(Attribute(Subscript(Attribute(Name('self', Load(), lineno=83, col_offset=12), 'constructors_to_test', Load(), lineno=83, col_offset=12), Index(Str('md5', lineno=83, col_offset=38)), Load(), lineno=83, col_offset=12), 'add', Load(), lineno=83, col_offset=12), [Attribute(Name('_md5', Load(), lineno=83, col_offset=49), 'new', Load(), lineno=83, col_offset=49)], [], None, None, lineno=83, col_offset=12), lineno=83, col_offset=12)], [], lineno=82, col_offset=8), Assign([Name('_sha', Store(), lineno=84, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=84, col_offset=15), '_conditional_import_module', Load(), lineno=84, col_offset=15), [Str('_sha', lineno=84, col_offset=47)], [], None, None, lineno=84, col_offset=15), lineno=84, col_offset=8), If(Name('_sha', Load(), lineno=85, col_offset=11), [Expr(Call(Attribute(Subscript(Attribute(Name('self', Load(), lineno=86, col_offset=12), 'constructors_to_test', Load(), lineno=86, col_offset=12), Index(Str('sha1', lineno=86, col_offset=38)), Load(), lineno=86, col_offset=12), 'add', Load(), lineno=86, col_offset=12), [Attribute(Name('_sha', Load(), lineno=86, col_offset=50), 'new', Load(), lineno=86, col_offset=50)], [], None, None, lineno=86, col_offset=12), lineno=86, col_offset=12)], [], lineno=85, col_offset=8), Assign([Name('_sha256', Store(), lineno=87, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=87, col_offset=18), '_conditional_import_module', Load(), lineno=87, col_offset=18), [Str('_sha256', lineno=87, col_offset=50)], [], None, None, lineno=87, col_offset=18), lineno=87, col_offset=8), If(Name('_sha256', Load(), lineno=88, col_offset=11), [Expr(Call(Attribute(Subscript(Attribute(Name('self', Load(), lineno=89, col_offset=12), 'constructors_to_test', Load(), lineno=89, col_offset=12), Index(Str('sha224', lineno=89, col_offset=38)), Load(), lineno=89, col_offset=12), 'add', Load(), lineno=89, col_offset=12), [Attribute(Name('_sha256', Load(), lineno=89, col_offset=52), 'sha224', Load(), lineno=89, col_offset=52)], [], None, None, lineno=89, col_offset=12), lineno=89, col_offset=12), Expr(Call(Attribute(Subscript(Attribute(Name('self', Load(), lineno=90, col_offset=12), 'constructors_to_test', Load(), lineno=90, col_offset=12), Index(Str('sha256', lineno=90, col_offset=38)), Load(), lineno=90, col_offset=12), 'add', Load(), lineno=90, col_offset=12), [Attribute(Name('_sha256', Load(), lineno=90, col_offset=52), 'sha256', Load(), lineno=90, col_offset=52)], [], None, None, lineno=90, col_offset=12), lineno=90, col_offset=12)], [], lineno=88, col_offset=8), Assign([Name('_sha512', Store(), lineno=91, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=91, col_offset=18), '_conditional_import_module', Load(), lineno=91, col_offset=18), [Str('_sha512', lineno=91, col_offset=50)], [], None, None, lineno=91, col_offset=18), lineno=91, col_offset=8), If(Name('_sha512', Load(), lineno=92, col_offset=11), [Expr(Call(Attribute(Subscript(Attribute(Name('self', Load(), lineno=93, col_offset=12), 'constructors_to_test', Load(), lineno=93, col_offset=12), Index(Str('sha384', lineno=93, col_offset=38)), Load(), lineno=93, col_offset=12), 'add', Load(), lineno=93, col_offset=12), [Attribute(Name('_sha512', Load(), lineno=93, col_offset=52), 'sha384', Load(), lineno=93, col_offset=52)], [], None, None, lineno=93, col_offset=12), lineno=93, col_offset=12), Expr(Call(Attribute(Subscript(Attribute(Name('self', Load(), lineno=94, col_offset=12), 'constructors_to_test', Load(), lineno=94, col_offset=12), Index(Str('sha512', lineno=94, col_offset=38)), Load(), lineno=94, col_offset=12), 'add', Load(), lineno=94, col_offset=12), [Attribute(Name('_sha512', Load(), lineno=94, col_offset=52), 'sha512', Load(), lineno=94, col_offset=52)], [], None, None, lineno=94, col_offset=12), lineno=94, col_offset=12)], [], lineno=92, col_offset=8), Expr(Call(Attribute(Call(Name('super', Load(), lineno=96, col_offset=8), [Name('HashLibTestCase', Load(), lineno=96, col_offset=14), Name('self', Load(), lineno=96, col_offset=31)], [], None, None, lineno=96, col_offset=8), '__init__', Load(), lineno=96, col_offset=8), [], [], Name('args', Load(), lineno=96, col_offset=47), Name('kwargs', Load(), lineno=96, col_offset=55), lineno=96, col_offset=8), lineno=96, col_offset=8)], [], lineno=52, col_offset=4), FunctionDef('test_hash_array', arguments([Name('self', Param(), lineno=98, col_offset=24)], None, None, []), [Assign([Name('a', Store(), lineno=99, col_offset=8)], Call(Attribute(Name('array', Load(), lineno=99, col_offset=12), 'array', Load(), lineno=99, col_offset=12), [Str('b', lineno=99, col_offset=24), Call(Name('range', Load(), lineno=99, col_offset=29), [Num(10, lineno=99, col_offset=35)], [], None, None, lineno=99, col_offset=29)], [], None, None, lineno=99, col_offset=12), lineno=99, col_offset=8), Assign([Name('constructors', Store(), lineno=100, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=100, col_offset=23), 'constructors_to_test', Load(), lineno=100, col_offset=23), 'itervalues', Load(), lineno=100, col_offset=23), [], [], None, None, lineno=100, col_offset=23), lineno=100, col_offset=8), For(Name('cons', Store(), lineno=101, col_offset=12), Call(Attribute(Attribute(Name('itertools', Load(), lineno=101, col_offset=20), 'chain', Load(), lineno=101, col_offset=20), 'from_iterable', Load(), lineno=101, col_offset=20), [Name('constructors', Load(), lineno=101, col_offset=50)], [], None, None, lineno=101, col_offset=20), [Assign([Name('c', Store(), lineno=102, col_offset=12)], Call(Name('cons', Load(), lineno=102, col_offset=16), [Name('a', Load(), lineno=102, col_offset=21)], [], None, None, lineno=102, col_offset=16), lineno=102, col_offset=12), Expr(Call(Attribute(Name('c', Load(), lineno=103, col_offset=12), 'hexdigest', Load(), lineno=103, col_offset=12), [], [], None, None, lineno=103, col_offset=12), lineno=103, col_offset=12)], [], lineno=101, col_offset=8)], [], lineno=98, col_offset=4), FunctionDef('test_algorithms_attribute', arguments([Name('self', Param(), lineno=105, col_offset=34)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=106, col_offset=8), 'assertEqual', Load(), lineno=106, col_offset=8), [Attribute(Name('hashlib', Load(), lineno=106, col_offset=25), 'algorithms', Load(), lineno=106, col_offset=25), Call(Name('tuple', Load(), lineno=107, col_offset=12), [ListComp(Name('_algo', Load(), lineno=107, col_offset=19), [comprehension(Name('_algo', Store(), lineno=107, col_offset=29), Attribute(Name('self', Load(), lineno=107, col_offset=38), 'supported_hash_names', Load(), lineno=107, col_offset=38), [Call(Attribute(Name('_algo', Load(), lineno=108, col_offset=48), 'islower', Load(), lineno=108, col_offset=48), [], [], None, None, lineno=108, col_offset=48)])], lineno=107, col_offset=19)], [], None, None, lineno=107, col_offset=12)], [], None, None, lineno=106, col_offset=8), lineno=106, col_offset=8)], [], lineno=105, col_offset=4), FunctionDef('test_unknown_hash', arguments([Name('self', Param(), lineno=110, col_offset=26)], None, None, []), [TryExcept([Expr(Call(Attribute(Name('hashlib', Load(), lineno=112, col_offset=12), 'new', Load(), lineno=112, col_offset=12), [Str('spam spam spam spam spam', lineno=112, col_offset=24)], [], None, None, lineno=112, col_offset=12), lineno=112, col_offset=12)], [ExceptHandler(Name('ValueError', Load(), lineno=113, col_offset=15), None, [Pass( lineno=114, col_offset=12)], lineno=113, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=116, col_offset=12), 'assertTrue', Load(), lineno=116, col_offset=12), [Compare(Num(0, lineno=116, col_offset=28), [Eq()], [Str("hashlib didn't reject bogus hash name", lineno=116, col_offset=33)], lineno=116, col_offset=28)], [], None, None, lineno=116, col_offset=12), lineno=116, col_offset=12)], lineno=111, col_offset=8)], [], lineno=110, col_offset=4), FunctionDef('test_hexdigest', arguments([Name('self', Param(), lineno=118, col_offset=23)], None, None, []), [For(Name('name', Store(), lineno=119, col_offset=12), Attribute(Name('self', Load(), lineno=119, col_offset=20), 'supported_hash_names', Load(), lineno=119, col_offset=20), [Assign([Name('h', Store(), lineno=120, col_offset=12)], Call(Attribute(Name('hashlib', Load(), lineno=120, col_offset=16), 'new', Load(), lineno=120, col_offset=16), [Name('name', Load(), lineno=120, col_offset=28)], [], None, None, lineno=120, col_offset=16), lineno=120, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=121, col_offset=12), 'assertTrue', Load(), lineno=121, col_offset=12), [Compare(Call(Name('hexstr', Load(), lineno=121, col_offset=28), [Call(Attribute(Name('h', Load(), lineno=121, col_offset=35), 'digest', Load(), lineno=121, col_offset=35), [], [], None, None, lineno=121, col_offset=35)], [], None, None, lineno=121, col_offset=28), [Eq()], [Call(Attribute(Name('h', Load(), lineno=121, col_offset=50), 'hexdigest', Load(), lineno=121, col_offset=50), [], [], None, None, lineno=121, col_offset=50)], lineno=121, col_offset=28)], [], None, None, lineno=121, col_offset=12), lineno=121, col_offset=12)], [], lineno=119, col_offset=8)], [], lineno=118, col_offset=4), FunctionDef('test_large_update', arguments([Name('self', Param(), lineno=123, col_offset=26)], None, None, []), [Assign([Name('aas', Store(), lineno=124, col_offset=8)], BinOp(Str('a', lineno=124, col_offset=14), Mult(), Num(128, lineno=124, col_offset=20), lineno=124, col_offset=14), lineno=124, col_offset=8), Assign([Name('bees', Store(), lineno=125, col_offset=8)], BinOp(Str('b', lineno=125, col_offset=15), Mult(), Num(127, lineno=125, col_offset=21), lineno=125, col_offset=15), lineno=125, col_offset=8), Assign([Name('cees', Store(), lineno=126, col_offset=8)], BinOp(Str('c', lineno=126, col_offset=15), Mult(), Num(126, lineno=126, col_offset=21), lineno=126, col_offset=15), lineno=126, col_offset=8), Assign([Name('abcs', Store(), lineno=127, col_offset=8)], BinOp(BinOp(Name('aas', Load(), lineno=127, col_offset=15), Add(), Name('bees', Load(), lineno=127, col_offset=21), lineno=127, col_offset=15), Add(), Name('cees', Load(), lineno=127, col_offset=28), lineno=127, col_offset=26), lineno=127, col_offset=8), For(Name('name', Store(), lineno=129, col_offset=12), Attribute(Name('self', Load(), lineno=129, col_offset=20), 'supported_hash_names', Load(), lineno=129, col_offset=20), [Assign([Name('m1', Store(), lineno=130, col_offset=12)], Call(Attribute(Name('hashlib', Load(), lineno=130, col_offset=17), 'new', Load(), lineno=130, col_offset=17), [Name('name', Load(), lineno=130, col_offset=29)], [], None, None, lineno=130, col_offset=17), lineno=130, col_offset=12), Expr(Call(Attribute(Name('m1', Load(), lineno=131, col_offset=12), 'update', Load(), lineno=131, col_offset=12), [Name('aas', Load(), lineno=131, col_offset=22)], [], None, None, lineno=131, col_offset=12), lineno=131, col_offset=12), Expr(Call(Attribute(Name('m1', Load(), lineno=132, col_offset=12), 'update', Load(), lineno=132, col_offset=12), [Name('bees', Load(), lineno=132, col_offset=22)], [], None, None, lineno=132, col_offset=12), lineno=132, col_offset=12), Expr(Call(Attribute(Name('m1', Load(), lineno=133, col_offset=12), 'update', Load(), lineno=133, col_offset=12), [Name('cees', Load(), lineno=133, col_offset=22)], [], None, None, lineno=133, col_offset=12), lineno=133, col_offset=12), Assign([Name('m2', Store(), lineno=135, col_offset=12)], Call(Attribute(Name('hashlib', Load(), lineno=135, col_offset=17), 'new', Load(), lineno=135, col_offset=17), [Name('name', Load(), lineno=135, col_offset=29)], [], None, None, lineno=135, col_offset=17), lineno=135, col_offset=12), Expr(Call(Attribute(Name('m2', Load(), lineno=136, col_offset=12), 'update', Load(), lineno=136, col_offset=12), [Name('abcs', Load(), lineno=136, col_offset=22)], [], None, None, lineno=136, col_offset=12), lineno=136, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=137, col_offset=12), 'assertEqual', Load(), lineno=137, col_offset=12), [Call(Attribute(Name('m1', Load(), lineno=137, col_offset=29), 'digest', Load(), lineno=137, col_offset=29), [], [], None, None, lineno=137, col_offset=29), Call(Attribute(Name('m2', Load(), lineno=137, col_offset=42), 'digest', Load(), lineno=137, col_offset=42), [], [], None, None, lineno=137, col_offset=42), BinOp(Name('name', Load(), lineno=137, col_offset=55), Add(), Str(' update problem.', lineno=137, col_offset=60), lineno=137, col_offset=55)], [], None, None, lineno=137, col_offset=12), lineno=137, col_offset=12), Assign([Name('m3', Store(), lineno=139, col_offset=12)], Call(Attribute(Name('hashlib', Load(), lineno=139, col_offset=17), 'new', Load(), lineno=139, col_offset=17), [Name('name', Load(), lineno=139, col_offset=29), Name('abcs', Load(), lineno=139, col_offset=35)], [], None, None, lineno=139, col_offset=17), lineno=139, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=140, col_offset=12), 'assertEqual', Load(), lineno=140, col_offset=12), [Call(Attribute(Name('m1', Load(), lineno=140, col_offset=29), 'digest', Load(), lineno=140, col_offset=29), [], [], None, None, lineno=140, col_offset=29), Call(Attribute(Name('m3', Load(), lineno=140, col_offset=42), 'digest', Load(), lineno=140, col_offset=42), [], [], None, None, lineno=140, col_offset=42), BinOp(Name('name', Load(), lineno=140, col_offset=55), Add(), Str(' new problem.', lineno=140, col_offset=60), lineno=140, col_offset=55)], [], None, None, lineno=140, col_offset=12), lineno=140, col_offset=12)], [], lineno=129, col_offset=8)], [], lineno=123, col_offset=4), FunctionDef('check', arguments([Name('self', Param(), lineno=142, col_offset=14), Name('name', Param(), lineno=142, col_offset=20), Name('data', Param(), lineno=142, col_offset=26), Name('digest', Param(), lineno=142, col_offset=32)], None, None, []), [Assign([Name('constructors', Store(), lineno=143, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=143, col_offset=23), 'constructors_to_test', Load(), lineno=143, col_offset=23), Index(Name('name', Load(), lineno=143, col_offset=49)), Load(), lineno=143, col_offset=23), lineno=143, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=145, col_offset=8), 'assertGreaterEqual', Load(), lineno=145, col_offset=8), [Call(Name('len', Load(), lineno=145, col_offset=32), [Name('constructors', Load(), lineno=145, col_offset=36)], [], None, None, lineno=145, col_offset=32), Num(2, lineno=145, col_offset=51)], [], None, None, lineno=145, col_offset=8), lineno=145, col_offset=8), For(Name('hash_object_constructor', Store(), lineno=146, col_offset=12), Name('constructors', Load(), lineno=146, col_offset=39), [Assign([Name('computed', Store(), lineno=147, col_offset=12)], Call(Attribute(Call(Name('hash_object_constructor', Load(), lineno=147, col_offset=23), [Name('data', Load(), lineno=147, col_offset=47)], [], None, None, lineno=147, col_offset=23), 'hexdigest', Load(), lineno=147, col_offset=23), [], [], None, None, lineno=147, col_offset=23), lineno=147, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=148, col_offset=12), 'assertEqual', Load(), lineno=148, col_offset=12), [Name('computed', Load(), lineno=149, col_offset=20), Name('digest', Load(), lineno=149, col_offset=30), BinOp(Str('Hash algorithm %s constructed using %s returned hexdigest %r for %d byte input data that should have hashed to %r.', lineno=150, col_offset=20), Mod(), Tuple([Name('name', Load(), lineno=152, col_offset=23), Name('hash_object_constructor', Load(), lineno=152, col_offset=29), Name('computed', Load(), lineno=153, col_offset=23), Call(Name('len', Load(), lineno=153, col_offset=33), [Name('data', Load(), lineno=153, col_offset=37)], [], None, None, lineno=153, col_offset=33), Name('digest', Load(), lineno=153, col_offset=44)], Load(), lineno=152, col_offset=23), lineno=150, col_offset=20)], [], None, None, lineno=148, col_offset=12), lineno=148, col_offset=12)], [], lineno=146, col_offset=8)], [], lineno=142, col_offset=4), FunctionDef('check_unicode', arguments([Name('self', Param(), lineno=155, col_offset=22), Name('algorithm_name', Param(), lineno=155, col_offset=28)], None, None, []), [Assign([Name('expected', Store(), lineno=157, col_offset=8)], Call(Attribute(Call(Attribute(Name('hashlib', Load(), lineno=157, col_offset=19), 'new', Load(), lineno=157, col_offset=19), [Name('algorithm_name', Load(), lineno=157, col_offset=31), Call(Name('str', Load(), lineno=157, col_offset=47), [Str(u'spam', lineno=157, col_offset=51)], [], None, None, lineno=157, col_offset=47)], [], None, None, lineno=157, col_offset=19), 'hexdigest', Load(), lineno=157, col_offset=19), [], [], None, None, lineno=157, col_offset=19), lineno=157, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=158, col_offset=8), 'check', Load(), lineno=158, col_offset=8), [Name('algorithm_name', Load(), lineno=158, col_offset=19), Str(u'spam', lineno=158, col_offset=35), Name('expected', Load(), lineno=158, col_offset=44)], [], None, None, lineno=158, col_offset=8), lineno=158, col_offset=8)], [], lineno=155, col_offset=4), FunctionDef('test_unicode', arguments([Name('self', Param(), lineno=160, col_offset=21)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=163, col_offset=8), 'check_unicode', Load(), lineno=163, col_offset=8), [Str('md5', lineno=163, col_offset=27)], [], None, None, lineno=163, col_offset=8), lineno=163, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=164, col_offset=8), 'check_unicode', Load(), lineno=164, col_offset=8), [Str('sha1', lineno=164, col_offset=27)], [], None, None, lineno=164, col_offset=8), lineno=164, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=165, col_offset=8), 'check_unicode', Load(), lineno=165, col_offset=8), [Str('sha224', lineno=165, col_offset=27)], [], None, None, lineno=165, col_offset=8), lineno=165, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=166, col_offset=8), 'check_unicode', Load(), lineno=166, col_offset=8), [Str('sha256', lineno=166, col_offset=27)], [], None, None, lineno=166, col_offset=8), lineno=166, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=167, col_offset=8), 'check_unicode', Load(), lineno=167, col_offset=8), [Str('sha384', lineno=167, col_offset=27)], [], None, None, lineno=167, col_offset=8), lineno=167, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=168, col_offset=8), 'check_unicode', Load(), lineno=168, col_offset=8), [Str('sha512', lineno=168, col_offset=27)], [], None, None, lineno=168, col_offset=8), lineno=168, col_offset=8)], [], lineno=160, col_offset=4), FunctionDef('test_case_md5_0', arguments([Name('self', Param(), lineno=170, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=171, col_offset=8), 'check', Load(), lineno=171, col_offset=8), [Str('md5', lineno=171, col_offset=19), Str('', lineno=171, col_offset=26), Str('d41d8cd98f00b204e9800998ecf8427e', lineno=171, col_offset=30)], [], None, None, lineno=171, col_offset=8), lineno=171, col_offset=8)], [], lineno=170, col_offset=4), FunctionDef('test_case_md5_1', arguments([Name('self', Param(), lineno=173, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=174, col_offset=8), 'check', Load(), lineno=174, col_offset=8), [Str('md5', lineno=174, col_offset=19), Str('abc', lineno=174, col_offset=26), Str('900150983cd24fb0d6963f7d28e17f72', lineno=174, col_offset=33)], [], None, None, lineno=174, col_offset=8), lineno=174, col_offset=8)], [], lineno=173, col_offset=4), FunctionDef('test_case_md5_2', arguments([Name('self', Param(), lineno=176, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=177, col_offset=8), 'check', Load(), lineno=177, col_offset=8), [Str('md5', lineno=177, col_offset=19), Str('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789', lineno=177, col_offset=26), Str('d174ab98d277d9f5a5611c2c9f419d9f', lineno=178, col_offset=19)], [], None, None, lineno=177, col_offset=8), lineno=177, col_offset=8)], [], lineno=176, col_offset=4), FunctionDef('test_case_md5_huge', arguments([Name('self', Param(), lineno=181, col_offset=27), Name('size', Param(), lineno=181, col_offset=33)], None, None, []), [If(Compare(Name('size', Load(), lineno=182, col_offset=11), [Eq()], [BinOp(Name('_4G', Load(), lineno=182, col_offset=19), Add(), Num(5, lineno=182, col_offset=25), lineno=182, col_offset=19)], lineno=182, col_offset=11), [TryExcept([Expr(Call(Attribute(Name('self', Load(), lineno=184, col_offset=16), 'check', Load(), lineno=184, col_offset=16), [Str('md5', lineno=184, col_offset=27), BinOp(Str('A', lineno=184, col_offset=34), Mult(), Name('size', Load(), lineno=184, col_offset=38), lineno=184, col_offset=34), Str('c9af2dff37468ce5dfee8f2cfc0a9c6d', lineno=184, col_offset=44)], [], None, None, lineno=184, col_offset=16), lineno=184, col_offset=16)], [ExceptHandler(Name('OverflowError', Load(), lineno=185, col_offset=19), None, [Pass( lineno=186, col_offset=16)], lineno=185, col_offset=12)], [], lineno=183, col_offset=12)], [], lineno=182, col_offset=8)], [Call(Name('precisionbigmemtest', Load(), lineno=180, col_offset=5), [], [keyword('size', BinOp(Name('_4G', Load(), lineno=180, col_offset=30), Add(), Num(5, lineno=180, col_offset=36), lineno=180, col_offset=30)), keyword('memuse', Num(1, lineno=180, col_offset=46))], None, None, lineno=180, col_offset=5)], lineno=180, col_offset=4), FunctionDef('test_case_md5_uintmax', arguments([Name('self', Param(), lineno=189, col_offset=30), Name('size', Param(), lineno=189, col_offset=36)], None, None, []), [If(Compare(Name('size', Load(), lineno=190, col_offset=11), [Eq()], [BinOp(Name('_4G', Load(), lineno=190, col_offset=19), Sub(), Num(1, lineno=190, col_offset=25), lineno=190, col_offset=19)], lineno=190, col_offset=11), [TryExcept([Expr(Call(Attribute(Name('self', Load(), lineno=192, col_offset=16), 'check', Load(), lineno=192, col_offset=16), [Str('md5', lineno=192, col_offset=27), BinOp(Str('A', lineno=192, col_offset=34), Mult(), Name('size', Load(), lineno=192, col_offset=38), lineno=192, col_offset=34), Str('28138d306ff1b8281f1a9067e1a1a2b3', lineno=192, col_offset=44)], [], None, None, lineno=192, col_offset=16), lineno=192, col_offset=16)], [ExceptHandler(Name('OverflowError', Load(), lineno=193, col_offset=19), None, [Pass( lineno=194, col_offset=16)], lineno=193, col_offset=12)], [], lineno=191, col_offset=12)], [], lineno=190, col_offset=8)], [Call(Name('precisionbigmemtest', Load(), lineno=188, col_offset=5), [], [keyword('size', BinOp(Name('_4G', Load(), lineno=188, col_offset=30), Sub(), Num(1, lineno=188, col_offset=36), lineno=188, col_offset=30)), keyword('memuse', Num(1, lineno=188, col_offset=46))], None, None, lineno=188, col_offset=5)], lineno=188, col_offset=4), FunctionDef('test_case_sha1_0', arguments([Name('self', Param(), lineno=200, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=201, col_offset=8), 'check', Load(), lineno=201, col_offset=8), [Str('sha1', lineno=201, col_offset=19), Str('', lineno=201, col_offset=27), Str('da39a3ee5e6b4b0d3255bfef95601890afd80709', lineno=202, col_offset=19)], [], None, None, lineno=201, col_offset=8), lineno=201, col_offset=8)], [], lineno=200, col_offset=4), FunctionDef('test_case_sha1_1', arguments([Name('self', Param(), lineno=204, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=205, col_offset=8), 'check', Load(), lineno=205, col_offset=8), [Str('sha1', lineno=205, col_offset=19), Str('abc', lineno=205, col_offset=27), Str('a9993e364706816aba3e25717850c26c9cd0d89d', lineno=206, col_offset=19)], [], None, None, lineno=205, col_offset=8), lineno=205, col_offset=8)], [], lineno=204, col_offset=4), FunctionDef('test_case_sha1_2', arguments([Name('self', Param(), lineno=208, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=209, col_offset=8), 'check', Load(), lineno=209, col_offset=8), [Str('sha1', lineno=209, col_offset=19), Str('abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq', lineno=209, col_offset=27), Str('84983e441c3bd26ebaae4aa1f95129e5e54670f1', lineno=210, col_offset=19)], [], None, None, lineno=209, col_offset=8), lineno=209, col_offset=8)], [], lineno=208, col_offset=4), FunctionDef('test_case_sha1_3', arguments([Name('self', Param(), lineno=212, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=213, col_offset=8), 'check', Load(), lineno=213, col_offset=8), [Str('sha1', lineno=213, col_offset=19), BinOp(Str('a', lineno=213, col_offset=27), Mult(), Num(1000000, lineno=213, col_offset=33), lineno=213, col_offset=27), Str('34aa973cd4c4daa4f61eeb2bdbad27316534016f', lineno=214, col_offset=19)], [], None, None, lineno=213, col_offset=8), lineno=213, col_offset=8)], [], lineno=212, col_offset=4), FunctionDef('test_case_sha224_0', arguments([Name('self', Param(), lineno=221, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=222, col_offset=8), 'check', Load(), lineno=222, col_offset=8), [Str('sha224', lineno=222, col_offset=19), Str('', lineno=222, col_offset=29), Str('d14a028c2a3a2bc9476102bb288234c415a2b01f828ea62ac5b3e42f', lineno=223, col_offset=10)], [], None, None, lineno=222, col_offset=8), lineno=222, col_offset=8)], [], lineno=221, col_offset=4), FunctionDef('test_case_sha224_1', arguments([Name('self', Param(), lineno=225, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=226, col_offset=8), 'check', Load(), lineno=226, col_offset=8), [Str('sha224', lineno=226, col_offset=19), Str('abc', lineno=226, col_offset=29), Str('23097d223405d8228642a477bda255b32aadbce4bda0b3f7e36c9da7', lineno=227, col_offset=10)], [], None, None, lineno=226, col_offset=8), lineno=226, col_offset=8)], [], lineno=225, col_offset=4), FunctionDef('test_case_sha224_2', arguments([Name('self', Param(), lineno=229, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=230, col_offset=8), 'check', Load(), lineno=230, col_offset=8), [Str('sha224', lineno=230, col_offset=19), Str('abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq', lineno=231, col_offset=10), Str('75388b16512776cc5dba5da1fd890150b0c6455cb4f58b1952522525', lineno=232, col_offset=10)], [], None, None, lineno=230, col_offset=8), lineno=230, col_offset=8)], [], lineno=229, col_offset=4), FunctionDef('test_case_sha224_3', arguments([Name('self', Param(), lineno=234, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=235, col_offset=8), 'check', Load(), lineno=235, col_offset=8), [Str('sha224', lineno=235, col_offset=19), BinOp(Str('a', lineno=235, col_offset=29), Mult(), Num(1000000, lineno=235, col_offset=35), lineno=235, col_offset=29), Str('20794655980c91d8bbb4c1ea97618a4bf03f42581948b2ee4ee7ad67', lineno=236, col_offset=10)], [], None, None, lineno=235, col_offset=8), lineno=235, col_offset=8)], [], lineno=234, col_offset=4), FunctionDef('test_case_sha256_0', arguments([Name('self', Param(), lineno=239, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=240, col_offset=8), 'check', Load(), lineno=240, col_offset=8), [Str('sha256', lineno=240, col_offset=19), Str('', lineno=240, col_offset=29), Str('e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', lineno=241, col_offset=10)], [], None, None, lineno=240, col_offset=8), lineno=240, col_offset=8)], [], lineno=239, col_offset=4), FunctionDef('test_case_sha256_1', arguments([Name('self', Param(), lineno=243, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=244, col_offset=8), 'check', Load(), lineno=244, col_offset=8), [Str('sha256', lineno=244, col_offset=19), Str('abc', lineno=244, col_offset=29), Str('ba7816bf8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad', lineno=245, col_offset=10)], [], None, None, lineno=244, col_offset=8), lineno=244, col_offset=8)], [], lineno=243, col_offset=4), FunctionDef('test_case_sha256_2', arguments([Name('self', Param(), lineno=247, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=248, col_offset=8), 'check', Load(), lineno=248, col_offset=8), [Str('sha256', lineno=248, col_offset=19), Str('abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq', lineno=249, col_offset=10), Str('248d6a61d20638b8e5c026930c3e6039a33ce45964ff2167f6ecedd419db06c1', lineno=250, col_offset=10)], [], None, None, lineno=248, col_offset=8), lineno=248, col_offset=8)], [], lineno=247, col_offset=4), FunctionDef('test_case_sha256_3', arguments([Name('self', Param(), lineno=252, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=253, col_offset=8), 'check', Load(), lineno=253, col_offset=8), [Str('sha256', lineno=253, col_offset=19), BinOp(Str('a', lineno=253, col_offset=29), Mult(), Num(1000000, lineno=253, col_offset=35), lineno=253, col_offset=29), Str('cdc76e5c9914fb9281a1c7e284d73e67f1809a48a497200e046d39ccc7112cd0', lineno=254, col_offset=10)], [], None, None, lineno=253, col_offset=8), lineno=253, col_offset=8)], [], lineno=252, col_offset=4), FunctionDef('test_case_sha384_0', arguments([Name('self', Param(), lineno=257, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=258, col_offset=8), 'check', Load(), lineno=258, col_offset=8), [Str('sha384', lineno=258, col_offset=19), Str('', lineno=258, col_offset=29), BinOp(Str('38b060a751ac96384cd9327eb1b1e36a21fdb71114be07434c0cc7bf63f6e1da', lineno=259, col_offset=10), Add(), Str('274edebfe76f65fbd51ad2f14898b95b', lineno=260, col_offset=10), lineno=259, col_offset=10)], [], None, None, lineno=258, col_offset=8), lineno=258, col_offset=8)], [], lineno=257, col_offset=4), FunctionDef('test_case_sha384_1', arguments([Name('self', Param(), lineno=262, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=263, col_offset=8), 'check', Load(), lineno=263, col_offset=8), [Str('sha384', lineno=263, col_offset=19), Str('abc', lineno=263, col_offset=29), BinOp(Str('cb00753f45a35e8bb5a03d699ac65007272c32ab0eded1631a8b605a43ff5bed', lineno=264, col_offset=10), Add(), Str('8086072ba1e7cc2358baeca134c825a7', lineno=265, col_offset=10), lineno=264, col_offset=10)], [], None, None, lineno=263, col_offset=8), lineno=263, col_offset=8)], [], lineno=262, col_offset=4), FunctionDef('test_case_sha384_2', arguments([Name('self', Param(), lineno=267, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=268, col_offset=8), 'check', Load(), lineno=268, col_offset=8), [Str('sha384', lineno=268, col_offset=19), BinOp(Str('abcdefghbcdefghicdefghijdefghijkefghijklfghijklmghijklmn', lineno=269, col_offset=19), Add(), Str('hijklmnoijklmnopjklmnopqklmnopqrlmnopqrsmnopqrstnopqrstu', lineno=270, col_offset=19), lineno=269, col_offset=19), BinOp(Str('09330c33f71147e83d192fc782cd1b4753111b173b3b05d22fa08086e3b0f712', lineno=271, col_offset=10), Add(), Str('fcc7c71a557e2db966c3e9fa91746039', lineno=272, col_offset=10), lineno=271, col_offset=10)], [], None, None, lineno=268, col_offset=8), lineno=268, col_offset=8)], [], lineno=267, col_offset=4), FunctionDef('test_case_sha384_3', arguments([Name('self', Param(), lineno=274, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=275, col_offset=8), 'check', Load(), lineno=275, col_offset=8), [Str('sha384', lineno=275, col_offset=19), BinOp(Str('a', lineno=275, col_offset=29), Mult(), Num(1000000, lineno=275, col_offset=35), lineno=275, col_offset=29), BinOp(Str('9d0e1809716474cb086e834e310a4a1ced149e9c00f248527972cec5704c2a5b', lineno=276, col_offset=10), Add(), Str('07b8b3dc38ecc4ebae97ddd87f3d8985', lineno=277, col_offset=10), lineno=276, col_offset=10)], [], None, None, lineno=275, col_offset=8), lineno=275, col_offset=8)], [], lineno=274, col_offset=4), FunctionDef('test_case_sha512_0', arguments([Name('self', Param(), lineno=280, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=281, col_offset=8), 'check', Load(), lineno=281, col_offset=8), [Str('sha512', lineno=281, col_offset=19), Str('', lineno=281, col_offset=29), BinOp(Str('cf83e1357eefb8bdf1542850d66d8007d620e4050b5715dc83f4a921d36ce9ce', lineno=282, col_offset=10), Add(), Str('47d0d13c5d85f2b0ff8318d2877eec2f63b931bd47417a81a538327af927da3e', lineno=283, col_offset=10), lineno=282, col_offset=10)], [], None, None, lineno=281, col_offset=8), lineno=281, col_offset=8)], [], lineno=280, col_offset=4), FunctionDef('test_case_sha512_1', arguments([Name('self', Param(), lineno=285, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=286, col_offset=8), 'check', Load(), lineno=286, col_offset=8), [Str('sha512', lineno=286, col_offset=19), Str('abc', lineno=286, col_offset=29), BinOp(Str('ddaf35a193617abacc417349ae20413112e6fa4e89a97ea20a9eeee64b55d39a', lineno=287, col_offset=10), Add(), Str('2192992a274fc1a836ba3c23a3feebbd454d4423643ce80e2a9ac94fa54ca49f', lineno=288, col_offset=10), lineno=287, col_offset=10)], [], None, None, lineno=286, col_offset=8), lineno=286, col_offset=8)], [], lineno=285, col_offset=4), FunctionDef('test_case_sha512_2', arguments([Name('self', Param(), lineno=290, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=291, col_offset=8), 'check', Load(), lineno=291, col_offset=8), [Str('sha512', lineno=291, col_offset=19), BinOp(Str('abcdefghbcdefghicdefghijdefghijkefghijklfghijklmghijklmn', lineno=292, col_offset=19), Add(), Str('hijklmnoijklmnopjklmnopqklmnopqrlmnopqrsmnopqrstnopqrstu', lineno=293, col_offset=19), lineno=292, col_offset=19), BinOp(Str('8e959b75dae313da8cf4f72814fc143f8f7779c6eb9f7fa17299aeadb6889018', lineno=294, col_offset=10), Add(), Str('501d289e4900f7e4331b99dec4b5433ac7d329eeb6dd26545e96e55b874be909', lineno=295, col_offset=10), lineno=294, col_offset=10)], [], None, None, lineno=291, col_offset=8), lineno=291, col_offset=8)], [], lineno=290, col_offset=4), FunctionDef('test_case_sha512_3', arguments([Name('self', Param(), lineno=297, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=298, col_offset=8), 'check', Load(), lineno=298, col_offset=8), [Str('sha512', lineno=298, col_offset=19), BinOp(Str('a', lineno=298, col_offset=29), Mult(), Num(1000000, lineno=298, col_offset=35), lineno=298, col_offset=29), BinOp(Str('e718483d0ce769644e2e42c7bc15b4638e1f98b13b2044285632a803afa973eb', lineno=299, col_offset=10), Add(), Str('de0ff244877ea60a4cb0432ce577c31beb009c5c2c49aa2e4eadb217ad8cc09b', lineno=300, col_offset=10), lineno=299, col_offset=10)], [], None, None, lineno=298, col_offset=8), lineno=298, col_offset=8)], [], lineno=297, col_offset=4), FunctionDef('test_threaded_hashing', arguments([Name('self', Param(), lineno=304, col_offset=30)], None, None, []), [Assign([Name('hasher', Store(), lineno=311, col_offset=8)], Call(Attribute(Name('hashlib', Load(), lineno=311, col_offset=17), 'sha1', Load(), lineno=311, col_offset=17), [], [], None, None, lineno=311, col_offset=17), lineno=311, col_offset=8), Assign([Name('num_threads', Store(), lineno=312, col_offset=8)], Num(5, lineno=312, col_offset=22), lineno=312, col_offset=8), Assign([Name('smallest_data', Store(), lineno=313, col_offset=8)], Str('swineflu', lineno=313, col_offset=24), lineno=313, col_offset=8), Assign([Name('data', Store(), lineno=314, col_offset=8)], BinOp(Name('smallest_data', Load(), lineno=314, col_offset=15), Mult(), Num(200000, lineno=314, col_offset=29), lineno=314, col_offset=15), lineno=314, col_offset=8), Assign([Name('expected_hash', Store(), lineno=315, col_offset=8)], Call(Attribute(Call(Attribute(Name('hashlib', Load(), lineno=315, col_offset=24), 'sha1', Load(), lineno=315, col_offset=24), [BinOp(Name('data', Load(), lineno=315, col_offset=37), Mult(), Name('num_threads', Load(), lineno=315, col_offset=42), lineno=315, col_offset=37)], [], None, None, lineno=315, col_offset=24), 'hexdigest', Load(), lineno=315, col_offset=24), [], [], None, None, lineno=315, col_offset=24), lineno=315, col_offset=8), FunctionDef('hash_in_chunks', arguments([Name('chunk_size', Param(), lineno=317, col_offset=27), Name('event', Param(), lineno=317, col_offset=39)], None, None, []), [Assign([Name('index', Store(), lineno=318, col_offset=12)], Num(0, lineno=318, col_offset=20), lineno=318, col_offset=12), While(Compare(Name('index', Load(), lineno=319, col_offset=18), [Lt()], [Call(Name('len', Load(), lineno=319, col_offset=26), [Name('data', Load(), lineno=319, col_offset=30)], [], None, None, lineno=319, col_offset=26)], lineno=319, col_offset=18), [Expr(Call(Attribute(Name('hasher', Load(), lineno=320, col_offset=16), 'update', Load(), lineno=320, col_offset=16), [Subscript(Name('data', Load(), lineno=320, col_offset=30), Slice(Name('index', Load(), lineno=320, col_offset=35), BinOp(Name('index', Load(), lineno=320, col_offset=41), Add(), Name('chunk_size', Load(), lineno=320, col_offset=47), lineno=320, col_offset=41), None), Load(), lineno=320, col_offset=30)], [], None, None, lineno=320, col_offset=16), lineno=320, col_offset=16), AugAssign(Name('index', Store(), lineno=321, col_offset=16), Add(), Name('chunk_size', Load(), lineno=321, col_offset=25), lineno=321, col_offset=16)], [], lineno=319, col_offset=12), Expr(Call(Attribute(Name('event', Load(), lineno=322, col_offset=12), 'set', Load(), lineno=322, col_offset=12), [], [], None, None, lineno=322, col_offset=12), lineno=322, col_offset=12)], [], lineno=317, col_offset=8), Assign([Name('events', Store(), lineno=324, col_offset=8)], List([], Load(), lineno=324, col_offset=17), lineno=324, col_offset=8), For(Name('threadnum', Store(), lineno=325, col_offset=12), Call(Name('xrange', Load(), lineno=325, col_offset=25), [Name('num_threads', Load(), lineno=325, col_offset=32)], [], None, None, lineno=325, col_offset=25), [Assign([Name('chunk_size', Store(), lineno=326, col_offset=12)], BinOp(Call(Name('len', Load(), lineno=326, col_offset=25), [Name('data', Load(), lineno=326, col_offset=29)], [], None, None, lineno=326, col_offset=25), FloorDiv(), BinOp(Num(10, lineno=326, col_offset=39), Pow(), Name('threadnum', Load(), lineno=326, col_offset=43), lineno=326, col_offset=39), lineno=326, col_offset=25), lineno=326, col_offset=12), Assert(Compare(Name('chunk_size', Load(), lineno=327, col_offset=19), [Gt()], [Num(0, lineno=327, col_offset=32)], lineno=327, col_offset=19), None, lineno=327, col_offset=12), Assert(Compare(BinOp(Name('chunk_size', Load(), lineno=328, col_offset=19), Mod(), Call(Name('len', Load(), lineno=328, col_offset=32), [Name('smallest_data', Load(), lineno=328, col_offset=36)], [], None, None, lineno=328, col_offset=32), lineno=328, col_offset=19), [Eq()], [Num(0, lineno=328, col_offset=54)], lineno=328, col_offset=19), None, lineno=328, col_offset=12), Assign([Name('event', Store(), lineno=329, col_offset=12)], Call(Attribute(Name('threading', Load(), lineno=329, col_offset=20), 'Event', Load(), lineno=329, col_offset=20), [], [], None, None, lineno=329, col_offset=20), lineno=329, col_offset=12), Expr(Call(Attribute(Name('events', Load(), lineno=330, col_offset=12), 'append', Load(), lineno=330, col_offset=12), [Name('event', Load(), lineno=330, col_offset=26)], [], None, None, lineno=330, col_offset=12), lineno=330, col_offset=12), Expr(Call(Attribute(Call(Attribute(Name('threading', Load(), lineno=331, col_offset=12), 'Thread', Load(), lineno=331, col_offset=12), [], [keyword('target', Name('hash_in_chunks', Load(), lineno=331, col_offset=36)), keyword('args', Tuple([Name('chunk_size', Load(), lineno=332, col_offset=35), Name('event', Load(), lineno=332, col_offset=47)], Load(), lineno=332, col_offset=35))], None, None, lineno=331, col_offset=12), 'start', Load(), lineno=331, col_offset=12), [], [], None, None, lineno=331, col_offset=12), lineno=331, col_offset=12)], [], lineno=325, col_offset=8), For(Name('event', Store(), lineno=334, col_offset=12), Name('events', Load(), lineno=334, col_offset=21), [Expr(Call(Attribute(Name('event', Load(), lineno=335, col_offset=12), 'wait', Load(), lineno=335, col_offset=12), [], [], None, None, lineno=335, col_offset=12), lineno=335, col_offset=12)], [], lineno=334, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=337, col_offset=8), 'assertEqual', Load(), lineno=337, col_offset=8), [Name('expected_hash', Load(), lineno=337, col_offset=25), Call(Attribute(Name('hasher', Load(), lineno=337, col_offset=40), 'hexdigest', Load(), lineno=337, col_offset=40), [], [], None, None, lineno=337, col_offset=40)], [], None, None, lineno=337, col_offset=8), lineno=337, col_offset=8)], [Call(Attribute(Name('unittest', Load(), lineno=302, col_offset=5), 'skipUnless', Load(), lineno=302, col_offset=5), [Name('threading', Load(), lineno=302, col_offset=25), Str('Threading required for this test.', lineno=302, col_offset=36)], [], None, None, lineno=302, col_offset=5), Attribute(Name('test_support', Load(), lineno=303, col_offset=5), 'reap_threads', Load(), lineno=303, col_offset=5)], lineno=302, col_offset=4)], [], lineno=36, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=340, col_offset=4), 'run_unittest', Load(), lineno=340, col_offset=4), [Name('HashLibTestCase', Load(), lineno=340, col_offset=30)], [], None, None, lineno=340, col_offset=4), lineno=340, col_offset=4)], [], lineno=339, col_offset=0), If(Compare(Name('__name__', Load(), lineno=342, col_offset=3), [Eq()], [Str('__main__', lineno=342, col_offset=15)], lineno=342, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=343, col_offset=4), [], [], None, None, lineno=343, col_offset=4), lineno=343, col_offset=4)], [], lineno=342, col_offset=0)])
