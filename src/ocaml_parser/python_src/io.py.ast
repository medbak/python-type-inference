Module([Expr(Str("The io module provides the Python interfaces to stream handling. The\nbuiltin open function is defined in this module.\n\nAt the top of the I/O hierarchy is the abstract base class IOBase. It\ndefines the basic interface to a stream. Note, however, that there is no\nseparation between reading and writing to streams; implementations are\nallowed to throw an IOError if they do not support a given operation.\n\nExtending IOBase is RawIOBase which deals simply with the reading and\nwriting of raw bytes to a stream. FileIO subclasses RawIOBase to provide\nan interface to OS files.\n\nBufferedIOBase deals with buffering on a raw byte stream (RawIOBase). Its\nsubclasses, BufferedWriter, BufferedReader, and BufferedRWPair buffer\nstreams that are readable, writable, and both respectively.\nBufferedRandom provides a buffered interface to random access\nstreams. BytesIO is a simple stream of in-memory bytes.\n\nAnother IOBase subclass, TextIOBase, deals with the encoding and decoding\nof streams into text. TextIOWrapper, which extends it, is a buffered text\ninterface to a buffered raw stream (`BufferedIOBase`). Finally, StringIO\nis a in-memory stream for text.\n\nArgument names are not part of the specification, and only the arguments\nof open() are intended to be used as keyword arguments.\n\ndata:\n\nDEFAULT_BUFFER_SIZE\n\n   An int containing the default buffer size used by the module's buffered\n   I/O classes. open() uses the file's blksize (as obtained by os.stat) if\n   possible.\n", lineno=34, col_offset=-1), lineno=34, col_offset=-1), Assign([Name('__author__', Store(), lineno=46, col_offset=0)], Str("Guido van Rossum <guido@python.org>, Mike Verdone <mike.verdone@gmail.com>, Mark Russell <mark.russell@zen.co.uk>, Antoine Pitrou <solipsis@pitrou.net>, Amaury Forgeot d'Arc <amauryfa@gmail.com>, Benjamin Peterson <benjamin@python.org>", lineno=46, col_offset=14), lineno=46, col_offset=0), Assign([Name('__all__', Store(), lineno=53, col_offset=0)], List([Str('BlockingIOError', lineno=53, col_offset=11), Str('open', lineno=53, col_offset=30), Str('IOBase', lineno=53, col_offset=38), Str('RawIOBase', lineno=53, col_offset=48), Str('FileIO', lineno=53, col_offset=61), Str('BytesIO', lineno=54, col_offset=11), Str('StringIO', lineno=54, col_offset=22), Str('BufferedIOBase', lineno=54, col_offset=34), Str('BufferedReader', lineno=55, col_offset=11), Str('BufferedWriter', lineno=55, col_offset=29), Str('BufferedRWPair', lineno=55, col_offset=47), Str('BufferedRandom', lineno=56, col_offset=11), Str('TextIOBase', lineno=56, col_offset=29), Str('TextIOWrapper', lineno=56, col_offset=43), Str('UnsupportedOperation', lineno=57, col_offset=11), Str('SEEK_SET', lineno=57, col_offset=35), Str('SEEK_CUR', lineno=57, col_offset=47), Str('SEEK_END', lineno=57, col_offset=59)], Load(), lineno=53, col_offset=10), lineno=53, col_offset=0), Import([alias('_io', None)], lineno=60, col_offset=0), Import([alias('abc', None)], lineno=61, col_offset=0), ImportFrom('_io', [alias('DEFAULT_BUFFER_SIZE', None), alias('BlockingIOError', None), alias('UnsupportedOperation', None), alias('open', None), alias('FileIO', None), alias('BytesIO', None), alias('StringIO', None), alias('BufferedReader', None), alias('BufferedWriter', None), alias('BufferedRWPair', None), alias('BufferedRandom', None), alias('IncrementalNewlineDecoder', None), alias('TextIOWrapper', None)], 0, lineno=63, col_offset=0), Assign([Name('OpenWrapper', Store(), lineno=68, col_offset=0)], Attribute(Name('_io', Load(), lineno=68, col_offset=14), 'open', Load(), lineno=68, col_offset=14), lineno=68, col_offset=0), Assign([Name('SEEK_SET', Store(), lineno=71, col_offset=0)], Num(0, lineno=71, col_offset=11), lineno=71, col_offset=0), Assign([Name('SEEK_CUR', Store(), lineno=72, col_offset=0)], Num(1, lineno=72, col_offset=11), lineno=72, col_offset=0), Assign([Name('SEEK_END', Store(), lineno=73, col_offset=0)], Num(2, lineno=73, col_offset=11), lineno=73, col_offset=0), ClassDef('IOBase', [Attribute(Name('_io', Load(), lineno=78, col_offset=13), '_IOBase', Load(), lineno=78, col_offset=13)], [Assign([Name('__metaclass__', Store(), lineno=79, col_offset=4)], Attribute(Name('abc', Load(), lineno=79, col_offset=20), 'ABCMeta', Load(), lineno=79, col_offset=20), lineno=79, col_offset=4)], [], lineno=78, col_offset=0), ClassDef('RawIOBase', [Attribute(Name('_io', Load(), lineno=81, col_offset=16), '_RawIOBase', Load(), lineno=81, col_offset=16), Name('IOBase', Load(), lineno=81, col_offset=32)], [Pass( lineno=82, col_offset=4)], [], lineno=81, col_offset=0), ClassDef('BufferedIOBase', [Attribute(Name('_io', Load(), lineno=84, col_offset=21), '_BufferedIOBase', Load(), lineno=84, col_offset=21), Name('IOBase', Load(), lineno=84, col_offset=42)], [Pass( lineno=85, col_offset=4)], [], lineno=84, col_offset=0), ClassDef('TextIOBase', [Attribute(Name('_io', Load(), lineno=87, col_offset=17), '_TextIOBase', Load(), lineno=87, col_offset=17), Name('IOBase', Load(), lineno=87, col_offset=34)], [Pass( lineno=88, col_offset=4)], [], lineno=87, col_offset=0), Expr(Call(Attribute(Name('RawIOBase', Load(), lineno=90, col_offset=0), 'register', Load(), lineno=90, col_offset=0), [Name('FileIO', Load(), lineno=90, col_offset=19)], [], None, None, lineno=90, col_offset=0), lineno=90, col_offset=0), For(Name('klass', Store(), lineno=92, col_offset=4), Tuple([Name('BytesIO', Load(), lineno=92, col_offset=14), Name('BufferedReader', Load(), lineno=92, col_offset=23), Name('BufferedWriter', Load(), lineno=92, col_offset=39), Name('BufferedRandom', Load(), lineno=92, col_offset=55), Name('BufferedRWPair', Load(), lineno=93, col_offset=14)], Load(), lineno=92, col_offset=14), [Expr(Call(Attribute(Name('BufferedIOBase', Load(), lineno=94, col_offset=4), 'register', Load(), lineno=94, col_offset=4), [Name('klass', Load(), lineno=94, col_offset=28)], [], None, None, lineno=94, col_offset=4), lineno=94, col_offset=4)], [], lineno=92, col_offset=0), For(Name('klass', Store(), lineno=96, col_offset=4), Tuple([Name('StringIO', Load(), lineno=96, col_offset=14), Name('TextIOWrapper', Load(), lineno=96, col_offset=24)], Load(), lineno=96, col_offset=14), [Expr(Call(Attribute(Name('TextIOBase', Load(), lineno=97, col_offset=4), 'register', Load(), lineno=97, col_offset=4), [Name('klass', Load(), lineno=97, col_offset=24)], [], None, None, lineno=97, col_offset=4), lineno=97, col_offset=4)], [], lineno=96, col_offset=0), Delete([Name('klass', Del(), lineno=98, col_offset=4)], lineno=98, col_offset=0)])
