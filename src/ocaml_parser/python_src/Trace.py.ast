Module([Expr(Str('program/module to trace Python program or function execution\n\nSample use, command line:\n  trace.py -c -f counts --ignore-dir \'$prefix\' spam.py eggs\n  trace.py -t --ignore-dir \'$prefix\' spam.py eggs\n  trace.py --trackcalls spam.py eggs\n\nSample use, programmatically\n  import sys\n\n  # create a Trace object, telling it what to ignore, and whether to\n  # do tracing or line-counting or both.\n  tracer = trace.Trace(ignoredirs=[sys.prefix, sys.exec_prefix,], trace=0,\n                    count=1)\n  # run the new command using the given tracer\n  tracer.run(\'main()\')\n  # make a report, placing output in /tmp\n  r = tracer.results()\n  r.write_results(show_missing=True, coverdir="/tmp")\n', lineno=49, col_offset=-1), lineno=49, col_offset=-1), Import([alias('linecache', None)], lineno=51, col_offset=0), Import([alias('os', None)], lineno=52, col_offset=0), Import([alias('re', None)], lineno=53, col_offset=0), Import([alias('sys', None)], lineno=54, col_offset=0), Import([alias('time', None)], lineno=55, col_offset=0), Import([alias('token', None)], lineno=56, col_offset=0), Import([alias('tokenize', None)], lineno=57, col_offset=0), Import([alias('inspect', None)], lineno=58, col_offset=0), Import([alias('gc', None)], lineno=59, col_offset=0), Import([alias('dis', None)], lineno=60, col_offset=0), TryExcept([Import([alias('cPickle', None)], lineno=62, col_offset=4), Assign([Name('pickle', Store(), lineno=63, col_offset=4)], Name('cPickle', Load(), lineno=63, col_offset=13), lineno=63, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=64, col_offset=7), None, [Import([alias('pickle', None)], lineno=65, col_offset=4)], lineno=64, col_offset=0)], [], lineno=61, col_offset=0), TryExcept([Import([alias('threading', None)], lineno=68, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=69, col_offset=7), None, [Assign([Name('_settrace', Store(), lineno=70, col_offset=4)], Attribute(Name('sys', Load(), lineno=70, col_offset=16), 'settrace', Load(), lineno=70, col_offset=16), lineno=70, col_offset=4), FunctionDef('_unsettrace', arguments([], None, None, []), [Expr(Call(Attribute(Name('sys', Load(), lineno=73, col_offset=8), 'settrace', Load(), lineno=73, col_offset=8), [Name('None', Load(), lineno=73, col_offset=21)], [], None, None, lineno=73, col_offset=8), lineno=73, col_offset=8)], [], lineno=72, col_offset=4)], lineno=69, col_offset=0)], [FunctionDef('_settrace', arguments([Name('func', Param(), lineno=75, col_offset=18)], None, None, []), [Expr(Call(Attribute(Name('threading', Load(), lineno=76, col_offset=8), 'settrace', Load(), lineno=76, col_offset=8), [Name('func', Load(), lineno=76, col_offset=27)], [], None, None, lineno=76, col_offset=8), lineno=76, col_offset=8), Expr(Call(Attribute(Name('sys', Load(), lineno=77, col_offset=8), 'settrace', Load(), lineno=77, col_offset=8), [Name('func', Load(), lineno=77, col_offset=21)], [], None, None, lineno=77, col_offset=8), lineno=77, col_offset=8)], [], lineno=75, col_offset=4), FunctionDef('_unsettrace', arguments([], None, None, []), [Expr(Call(Attribute(Name('sys', Load(), lineno=80, col_offset=8), 'settrace', Load(), lineno=80, col_offset=8), [Name('None', Load(), lineno=80, col_offset=21)], [], None, None, lineno=80, col_offset=8), lineno=80, col_offset=8), Expr(Call(Attribute(Name('threading', Load(), lineno=81, col_offset=8), 'settrace', Load(), lineno=81, col_offset=8), [Name('None', Load(), lineno=81, col_offset=27)], [], None, None, lineno=81, col_offset=8), lineno=81, col_offset=8)], [], lineno=79, col_offset=4)], lineno=67, col_offset=0), FunctionDef('usage', arguments([Name('outfile', Param(), lineno=83, col_offset=10)], None, None, []), [Expr(Call(Attribute(Name('outfile', Load(), lineno=84, col_offset=4), 'write', Load(), lineno=84, col_offset=4), [BinOp(Str("Usage: %s [OPTIONS] <file> [ARGS]\n\nMeta-options:\n--help                Display this help then exit.\n--version             Output version information then exit.\n\nOtherwise, exactly one of the following three options must be given:\n-t, --trace           Print each line to sys.stdout before it is executed.\n-c, --count           Count the number of times each line is executed\n                      and write the counts to <module>.cover for each\n                      module executed, in the module's directory.\n                      See also `--coverdir', `--file', `--no-report' below.\n-l, --listfuncs       Keep track of which functions are executed at least\n                      once and write the results to sys.stdout after the\n                      program exits.\n-T, --trackcalls      Keep track of caller/called pairs and write the\n                      results to sys.stdout after the program exits.\n-r, --report          Generate a report from a counts file; do not execute\n                      any code.  `--file' must specify the results file to\n                      read, which must have been created in a previous run\n                      with `--count --file=FILE'.\n\nModifiers:\n-f, --file=<file>     File to accumulate counts over several runs.\n-R, --no-report       Do not generate the coverage report files.\n                      Useful if you want to accumulate over several runs.\n-C, --coverdir=<dir>  Directory where the report files.  The coverage\n                      report for <package>.<module> is written to file\n                      <dir>/<package>/<module>.cover.\n-m, --missing         Annotate executable lines that were not executed\n                      with '>>>>>> '.\n-s, --summary         Write a brief summary on stdout for each file.\n                      (Can only be used with --count or --report.)\n-g, --timing          Prefix each line with the time since the program started.\n                      Only used while tracing.\n\nFilters, may be repeated multiple times:\n--ignore-module=<mod> Ignore the given module(s) and its submodules\n                      (if it is a package).  Accepts comma separated\n                      list of module names\n--ignore-dir=<dir>    Ignore files in the given directory (multiple\n                      directories can be joined by os.pathsep).\n", lineno=126, col_offset=-1), Mod(), Subscript(Attribute(Name('sys', Load(), lineno=126, col_offset=6), 'argv', Load(), lineno=126, col_offset=6), Index(Num(0, lineno=126, col_offset=15)), Load(), lineno=126, col_offset=6), lineno=126, col_offset=-1)], [], None, None, lineno=84, col_offset=4), lineno=84, col_offset=4)], [], lineno=83, col_offset=0), Assign([Name('PRAGMA_NOCOVER', Store(), lineno=128, col_offset=0)], Str('#pragma NO COVER', lineno=128, col_offset=17), lineno=128, col_offset=0), Assign([Name('rx_blank', Store(), lineno=131, col_offset=0)], Call(Attribute(Name('re', Load(), lineno=131, col_offset=11), 'compile', Load(), lineno=131, col_offset=11), [Str('^\\s*(#.*)?$', lineno=131, col_offset=22)], [], None, None, lineno=131, col_offset=11), lineno=131, col_offset=0), ClassDef('Ignore', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=134, col_offset=17), Name('modules', Param(), lineno=134, col_offset=23), Name('dirs', Param(), lineno=134, col_offset=39)], None, None, [Name('None', Load(), lineno=134, col_offset=33), Name('None', Load(), lineno=134, col_offset=46)]), [Assign([Attribute(Name('self', Load(), lineno=135, col_offset=8), '_mods', Store(), lineno=135, col_offset=8)], BoolOp(Or(), [Name('modules', Load(), lineno=135, col_offset=21), List([], Load(), lineno=135, col_offset=32)], lineno=135, col_offset=21), lineno=135, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=136, col_offset=8), '_dirs', Store(), lineno=136, col_offset=8)], BoolOp(Or(), [Name('dirs', Load(), lineno=136, col_offset=21), List([], Load(), lineno=136, col_offset=29)], lineno=136, col_offset=21), lineno=136, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=138, col_offset=8), '_dirs', Store(), lineno=138, col_offset=8)], Call(Name('map', Load(), lineno=138, col_offset=21), [Attribute(Attribute(Name('os', Load(), lineno=138, col_offset=25), 'path', Load(), lineno=138, col_offset=25), 'normpath', Load(), lineno=138, col_offset=25), Attribute(Name('self', Load(), lineno=138, col_offset=43), '_dirs', Load(), lineno=138, col_offset=43)], [], None, None, lineno=138, col_offset=21), lineno=138, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=139, col_offset=8), '_ignore', Store(), lineno=139, col_offset=8)], Dict([Str('<string>', lineno=139, col_offset=25)], [Num(1, lineno=139, col_offset=37)], lineno=139, col_offset=23), lineno=139, col_offset=8)], [], lineno=134, col_offset=4), FunctionDef('names', arguments([Name('self', Param(), lineno=141, col_offset=14), Name('filename', Param(), lineno=141, col_offset=20), Name('modulename', Param(), lineno=141, col_offset=30)], None, None, []), [If(Compare(Name('modulename', Load(), lineno=142, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=142, col_offset=25), '_ignore', Load(), lineno=142, col_offset=25)], lineno=142, col_offset=11), [Return(Subscript(Attribute(Name('self', Load(), lineno=143, col_offset=19), '_ignore', Load(), lineno=143, col_offset=19), Index(Name('modulename', Load(), lineno=143, col_offset=32)), Load(), lineno=143, col_offset=19), lineno=143, col_offset=12)], [], lineno=142, col_offset=8), For(Name('mod', Store(), lineno=149, col_offset=12), Attribute(Name('self', Load(), lineno=149, col_offset=19), '_mods', Load(), lineno=149, col_offset=19), [If(Compare(Name('mod', Load(), lineno=150, col_offset=15), [Eq()], [Name('modulename', Load(), lineno=150, col_offset=22)], lineno=150, col_offset=15), [Assign([Subscript(Attribute(Name('self', Load(), lineno=151, col_offset=16), '_ignore', Load(), lineno=151, col_offset=16), Index(Name('modulename', Load(), lineno=151, col_offset=29)), Store(), lineno=151, col_offset=16)], Num(1, lineno=151, col_offset=43), lineno=151, col_offset=16), Return(Num(1, lineno=152, col_offset=23), lineno=152, col_offset=16)], [], lineno=150, col_offset=12), Assign([Name('n', Store(), lineno=155, col_offset=12)], Call(Name('len', Load(), lineno=155, col_offset=16), [Name('mod', Load(), lineno=155, col_offset=20)], [], None, None, lineno=155, col_offset=16), lineno=155, col_offset=12), If(BoolOp(And(), [Compare(Name('mod', Load(), lineno=159, col_offset=15), [Eq()], [Subscript(Name('modulename', Load(), lineno=159, col_offset=22), Slice(None, Name('n', Load(), lineno=159, col_offset=34), None), Load(), lineno=159, col_offset=22)], lineno=159, col_offset=15), Compare(Subscript(Name('modulename', Load(), lineno=159, col_offset=41), Index(Name('n', Load(), lineno=159, col_offset=52)), Load(), lineno=159, col_offset=41), [Eq()], [Str('.', lineno=159, col_offset=58)], lineno=159, col_offset=41)], lineno=159, col_offset=15), [Assign([Subscript(Attribute(Name('self', Load(), lineno=160, col_offset=16), '_ignore', Load(), lineno=160, col_offset=16), Index(Name('modulename', Load(), lineno=160, col_offset=29)), Store(), lineno=160, col_offset=16)], Num(1, lineno=160, col_offset=43), lineno=160, col_offset=16), Return(Num(1, lineno=161, col_offset=23), lineno=161, col_offset=16)], [], lineno=159, col_offset=12)], [], lineno=149, col_offset=8), If(Compare(Name('filename', Load(), lineno=164, col_offset=11), [Is()], [Name('None', Load(), lineno=164, col_offset=23)], lineno=164, col_offset=11), [Assign([Subscript(Attribute(Name('self', Load(), lineno=166, col_offset=12), '_ignore', Load(), lineno=166, col_offset=12), Index(Name('modulename', Load(), lineno=166, col_offset=25)), Store(), lineno=166, col_offset=12)], Num(1, lineno=166, col_offset=39), lineno=166, col_offset=12), Return(Num(1, lineno=167, col_offset=19), lineno=167, col_offset=12)], [], lineno=164, col_offset=8), For(Name('d', Store(), lineno=170, col_offset=12), Attribute(Name('self', Load(), lineno=170, col_offset=17), '_dirs', Load(), lineno=170, col_offset=17), [If(Call(Attribute(Name('filename', Load(), lineno=178, col_offset=15), 'startswith', Load(), lineno=178, col_offset=15), [BinOp(Name('d', Load(), lineno=178, col_offset=35), Add(), Attribute(Name('os', Load(), lineno=178, col_offset=39), 'sep', Load(), lineno=178, col_offset=39), lineno=178, col_offset=35)], [], None, None, lineno=178, col_offset=15), [Assign([Subscript(Attribute(Name('self', Load(), lineno=179, col_offset=16), '_ignore', Load(), lineno=179, col_offset=16), Index(Name('modulename', Load(), lineno=179, col_offset=29)), Store(), lineno=179, col_offset=16)], Num(1, lineno=179, col_offset=43), lineno=179, col_offset=16), Return(Num(1, lineno=180, col_offset=23), lineno=180, col_offset=16)], [], lineno=178, col_offset=12)], [], lineno=170, col_offset=8), Assign([Subscript(Attribute(Name('self', Load(), lineno=183, col_offset=8), '_ignore', Load(), lineno=183, col_offset=8), Index(Name('modulename', Load(), lineno=183, col_offset=21)), Store(), lineno=183, col_offset=8)], Num(0, lineno=183, col_offset=35), lineno=183, col_offset=8), Return(Num(0, lineno=184, col_offset=15), lineno=184, col_offset=8)], [], lineno=141, col_offset=4)], [], lineno=133, col_offset=0), FunctionDef('modname', arguments([Name('path', Param(), lineno=186, col_offset=12)], None, None, []), [Expr(Str('Return a plausible module name for the patch.', lineno=187, col_offset=4), lineno=187, col_offset=4), Assign([Name('base', Store(), lineno=189, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=189, col_offset=11), 'path', Load(), lineno=189, col_offset=11), 'basename', Load(), lineno=189, col_offset=11), [Name('path', Load(), lineno=189, col_offset=28)], [], None, None, lineno=189, col_offset=11), lineno=189, col_offset=4), Assign([Tuple([Name('filename', Store(), lineno=190, col_offset=4), Name('ext', Store(), lineno=190, col_offset=14)], Store(), lineno=190, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=190, col_offset=20), 'path', Load(), lineno=190, col_offset=20), 'splitext', Load(), lineno=190, col_offset=20), [Name('base', Load(), lineno=190, col_offset=37)], [], None, None, lineno=190, col_offset=20), lineno=190, col_offset=4), Return(Name('filename', Load(), lineno=191, col_offset=11), lineno=191, col_offset=4)], [], lineno=186, col_offset=0), FunctionDef('fullmodname', arguments([Name('path', Param(), lineno=193, col_offset=16)], None, None, []), [Expr(Str('Return a plausible module name for the path.', lineno=194, col_offset=4), lineno=194, col_offset=4), Assign([Name('comparepath', Store(), lineno=201, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=201, col_offset=18), 'path', Load(), lineno=201, col_offset=18), 'normcase', Load(), lineno=201, col_offset=18), [Name('path', Load(), lineno=201, col_offset=35)], [], None, None, lineno=201, col_offset=18), lineno=201, col_offset=4), Assign([Name('longest', Store(), lineno=202, col_offset=4)], Str('', lineno=202, col_offset=14), lineno=202, col_offset=4), For(Name('dir', Store(), lineno=203, col_offset=8), Attribute(Name('sys', Load(), lineno=203, col_offset=15), 'path', Load(), lineno=203, col_offset=15), [Assign([Name('dir', Store(), lineno=204, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=204, col_offset=14), 'path', Load(), lineno=204, col_offset=14), 'normcase', Load(), lineno=204, col_offset=14), [Name('dir', Load(), lineno=204, col_offset=31)], [], None, None, lineno=204, col_offset=14), lineno=204, col_offset=8), If(BoolOp(And(), [Call(Attribute(Name('comparepath', Load(), lineno=205, col_offset=11), 'startswith', Load(), lineno=205, col_offset=11), [Name('dir', Load(), lineno=205, col_offset=34)], [], None, None, lineno=205, col_offset=11), Compare(Subscript(Name('comparepath', Load(), lineno=205, col_offset=43), Index(Call(Name('len', Load(), lineno=205, col_offset=55), [Name('dir', Load(), lineno=205, col_offset=59)], [], None, None, lineno=205, col_offset=55)), Load(), lineno=205, col_offset=43), [Eq()], [Attribute(Name('os', Load(), lineno=205, col_offset=68), 'sep', Load(), lineno=205, col_offset=68)], lineno=205, col_offset=43)], lineno=205, col_offset=11), [If(Compare(Call(Name('len', Load(), lineno=206, col_offset=15), [Name('dir', Load(), lineno=206, col_offset=19)], [], None, None, lineno=206, col_offset=15), [Gt()], [Call(Name('len', Load(), lineno=206, col_offset=26), [Name('longest', Load(), lineno=206, col_offset=30)], [], None, None, lineno=206, col_offset=26)], lineno=206, col_offset=15), [Assign([Name('longest', Store(), lineno=207, col_offset=16)], Name('dir', Load(), lineno=207, col_offset=26), lineno=207, col_offset=16)], [], lineno=206, col_offset=12)], [], lineno=205, col_offset=8)], [], lineno=203, col_offset=4), If(Name('longest', Load(), lineno=209, col_offset=7), [Assign([Name('base', Store(), lineno=210, col_offset=8)], Subscript(Name('path', Load(), lineno=210, col_offset=15), Slice(BinOp(Call(Name('len', Load(), lineno=210, col_offset=20), [Name('longest', Load(), lineno=210, col_offset=24)], [], None, None, lineno=210, col_offset=20), Add(), Num(1, lineno=210, col_offset=35), lineno=210, col_offset=20), None, None), Load(), lineno=210, col_offset=15), lineno=210, col_offset=8)], [Assign([Name('base', Store(), lineno=212, col_offset=8)], Name('path', Load(), lineno=212, col_offset=15), lineno=212, col_offset=8)], lineno=209, col_offset=4), Assign([Tuple([Name('drive', Store(), lineno=214, col_offset=4), Name('base', Store(), lineno=214, col_offset=11)], Store(), lineno=214, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=214, col_offset=18), 'path', Load(), lineno=214, col_offset=18), 'splitdrive', Load(), lineno=214, col_offset=18), [Name('base', Load(), lineno=214, col_offset=37)], [], None, None, lineno=214, col_offset=18), lineno=214, col_offset=4), Assign([Name('base', Store(), lineno=215, col_offset=4)], Call(Attribute(Name('base', Load(), lineno=215, col_offset=11), 'replace', Load(), lineno=215, col_offset=11), [Attribute(Name('os', Load(), lineno=215, col_offset=24), 'sep', Load(), lineno=215, col_offset=24), Str('.', lineno=215, col_offset=32)], [], None, None, lineno=215, col_offset=11), lineno=215, col_offset=4), If(Attribute(Name('os', Load(), lineno=216, col_offset=7), 'altsep', Load(), lineno=216, col_offset=7), [Assign([Name('base', Store(), lineno=217, col_offset=8)], Call(Attribute(Name('base', Load(), lineno=217, col_offset=15), 'replace', Load(), lineno=217, col_offset=15), [Attribute(Name('os', Load(), lineno=217, col_offset=28), 'altsep', Load(), lineno=217, col_offset=28), Str('.', lineno=217, col_offset=39)], [], None, None, lineno=217, col_offset=15), lineno=217, col_offset=8)], [], lineno=216, col_offset=4), Assign([Tuple([Name('filename', Store(), lineno=218, col_offset=4), Name('ext', Store(), lineno=218, col_offset=14)], Store(), lineno=218, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=218, col_offset=20), 'path', Load(), lineno=218, col_offset=20), 'splitext', Load(), lineno=218, col_offset=20), [Name('base', Load(), lineno=218, col_offset=37)], [], None, None, lineno=218, col_offset=20), lineno=218, col_offset=4), Return(Call(Attribute(Name('filename', Load(), lineno=219, col_offset=11), 'lstrip', Load(), lineno=219, col_offset=11), [Str('.', lineno=219, col_offset=27)], [], None, None, lineno=219, col_offset=11), lineno=219, col_offset=4)], [], lineno=193, col_offset=0), ClassDef('CoverageResults', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=222, col_offset=17), Name('counts', Param(), lineno=222, col_offset=23), Name('calledfuncs', Param(), lineno=222, col_offset=36), Name('infile', Param(), lineno=222, col_offset=54), Name('callers', Param(), lineno=223, col_offset=17), Name('outfile', Param(), lineno=223, col_offset=31)], None, None, [Name('None', Load(), lineno=222, col_offset=30), Name('None', Load(), lineno=222, col_offset=48), Name('None', Load(), lineno=222, col_offset=61), Name('None', Load(), lineno=223, col_offset=25), Name('None', Load(), lineno=223, col_offset=39)]), [Assign([Attribute(Name('self', Load(), lineno=224, col_offset=8), 'counts', Store(), lineno=224, col_offset=8)], Name('counts', Load(), lineno=224, col_offset=22), lineno=224, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=225, col_offset=11), 'counts', Load(), lineno=225, col_offset=11), [Is()], [Name('None', Load(), lineno=225, col_offset=26)], lineno=225, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=226, col_offset=12), 'counts', Store(), lineno=226, col_offset=12)], Dict([], [], lineno=226, col_offset=26), lineno=226, col_offset=12)], [], lineno=225, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=227, col_offset=8), 'counter', Store(), lineno=227, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=227, col_offset=23), 'counts', Load(), lineno=227, col_offset=23), 'copy', Load(), lineno=227, col_offset=23), [], [], None, None, lineno=227, col_offset=23), lineno=227, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=228, col_offset=8), 'calledfuncs', Store(), lineno=228, col_offset=8)], Name('calledfuncs', Load(), lineno=228, col_offset=27), lineno=228, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=229, col_offset=11), 'calledfuncs', Load(), lineno=229, col_offset=11), [Is()], [Name('None', Load(), lineno=229, col_offset=31)], lineno=229, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=230, col_offset=12), 'calledfuncs', Store(), lineno=230, col_offset=12)], Dict([], [], lineno=230, col_offset=31), lineno=230, col_offset=12)], [], lineno=229, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=231, col_offset=8), 'calledfuncs', Store(), lineno=231, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=231, col_offset=27), 'calledfuncs', Load(), lineno=231, col_offset=27), 'copy', Load(), lineno=231, col_offset=27), [], [], None, None, lineno=231, col_offset=27), lineno=231, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=232, col_offset=8), 'callers', Store(), lineno=232, col_offset=8)], Name('callers', Load(), lineno=232, col_offset=23), lineno=232, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=233, col_offset=11), 'callers', Load(), lineno=233, col_offset=11), [Is()], [Name('None', Load(), lineno=233, col_offset=27)], lineno=233, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=234, col_offset=12), 'callers', Store(), lineno=234, col_offset=12)], Dict([], [], lineno=234, col_offset=27), lineno=234, col_offset=12)], [], lineno=233, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=235, col_offset=8), 'callers', Store(), lineno=235, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=235, col_offset=23), 'callers', Load(), lineno=235, col_offset=23), 'copy', Load(), lineno=235, col_offset=23), [], [], None, None, lineno=235, col_offset=23), lineno=235, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=236, col_offset=8), 'infile', Store(), lineno=236, col_offset=8)], Name('infile', Load(), lineno=236, col_offset=22), lineno=236, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=237, col_offset=8), 'outfile', Store(), lineno=237, col_offset=8)], Name('outfile', Load(), lineno=237, col_offset=23), lineno=237, col_offset=8), If(Attribute(Name('self', Load(), lineno=238, col_offset=11), 'infile', Load(), lineno=238, col_offset=11), [TryExcept([Assign([Tuple([Name('counts', Store(), lineno=241, col_offset=16), Name('calledfuncs', Store(), lineno=241, col_offset=24), Name('callers', Store(), lineno=241, col_offset=37)], Store(), lineno=241, col_offset=16)], Call(Attribute(Name('pickle', Load(), lineno=242, col_offset=24), 'load', Load(), lineno=242, col_offset=24), [Call(Name('open', Load(), lineno=242, col_offset=36), [Attribute(Name('self', Load(), lineno=242, col_offset=41), 'infile', Load(), lineno=242, col_offset=41), Str('rb', lineno=242, col_offset=54)], [], None, None, lineno=242, col_offset=36)], [], None, None, lineno=242, col_offset=24), lineno=241, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=243, col_offset=16), 'update', Load(), lineno=243, col_offset=16), [Call(Attribute(Name('self', Load(), lineno=243, col_offset=28), '__class__', Load(), lineno=243, col_offset=28), [Name('counts', Load(), lineno=243, col_offset=43), Name('calledfuncs', Load(), lineno=243, col_offset=51), Name('callers', Load(), lineno=243, col_offset=64)], [], None, None, lineno=243, col_offset=28)], [], None, None, lineno=243, col_offset=16), lineno=243, col_offset=16)], [ExceptHandler(Tuple([Name('IOError', Load(), lineno=244, col_offset=20), Name('EOFError', Load(), lineno=244, col_offset=29), Name('ValueError', Load(), lineno=244, col_offset=39)], Load(), lineno=244, col_offset=20), Name('err', Store(), lineno=244, col_offset=52), [Print(Attribute(Name('sys', Load(), lineno=245, col_offset=25), 'stderr', Load(), lineno=245, col_offset=25), [BinOp(Str('Skipping counts file %r: %s', lineno=245, col_offset=38), Mod(), Tuple([Attribute(Name('self', Load(), lineno=246, col_offset=41), 'infile', Load(), lineno=246, col_offset=41), Name('err', Load(), lineno=246, col_offset=54)], Load(), lineno=246, col_offset=41), lineno=245, col_offset=38)], True, lineno=245, col_offset=16)], lineno=244, col_offset=12)], [], lineno=240, col_offset=12)], [], lineno=238, col_offset=8)], [], lineno=222, col_offset=4), FunctionDef('update', arguments([Name('self', Param(), lineno=248, col_offset=15), Name('other', Param(), lineno=248, col_offset=21)], None, None, []), [Expr(Str('Merge in the data from another CoverageResults', lineno=249, col_offset=8), lineno=249, col_offset=8), Assign([Name('counts', Store(), lineno=250, col_offset=8)], Attribute(Name('self', Load(), lineno=250, col_offset=17), 'counts', Load(), lineno=250, col_offset=17), lineno=250, col_offset=8), Assign([Name('calledfuncs', Store(), lineno=251, col_offset=8)], Attribute(Name('self', Load(), lineno=251, col_offset=22), 'calledfuncs', Load(), lineno=251, col_offset=22), lineno=251, col_offset=8), Assign([Name('callers', Store(), lineno=252, col_offset=8)], Attribute(Name('self', Load(), lineno=252, col_offset=18), 'callers', Load(), lineno=252, col_offset=18), lineno=252, col_offset=8), Assign([Name('other_counts', Store(), lineno=253, col_offset=8)], Attribute(Name('other', Load(), lineno=253, col_offset=23), 'counts', Load(), lineno=253, col_offset=23), lineno=253, col_offset=8), Assign([Name('other_calledfuncs', Store(), lineno=254, col_offset=8)], Attribute(Name('other', Load(), lineno=254, col_offset=28), 'calledfuncs', Load(), lineno=254, col_offset=28), lineno=254, col_offset=8), Assign([Name('other_callers', Store(), lineno=255, col_offset=8)], Attribute(Name('other', Load(), lineno=255, col_offset=24), 'callers', Load(), lineno=255, col_offset=24), lineno=255, col_offset=8), For(Name('key', Store(), lineno=257, col_offset=12), Call(Attribute(Name('other_counts', Load(), lineno=257, col_offset=19), 'keys', Load(), lineno=257, col_offset=19), [], [], None, None, lineno=257, col_offset=19), [Assign([Subscript(Name('counts', Load(), lineno=258, col_offset=12), Index(Name('key', Load(), lineno=258, col_offset=19)), Store(), lineno=258, col_offset=12)], BinOp(Call(Attribute(Name('counts', Load(), lineno=258, col_offset=26), 'get', Load(), lineno=258, col_offset=26), [Name('key', Load(), lineno=258, col_offset=37), Num(0, lineno=258, col_offset=42)], [], None, None, lineno=258, col_offset=26), Add(), Subscript(Name('other_counts', Load(), lineno=258, col_offset=47), Index(Name('key', Load(), lineno=258, col_offset=60)), Load(), lineno=258, col_offset=47), lineno=258, col_offset=26), lineno=258, col_offset=12)], [], lineno=257, col_offset=8), For(Name('key', Store(), lineno=260, col_offset=12), Call(Attribute(Name('other_calledfuncs', Load(), lineno=260, col_offset=19), 'keys', Load(), lineno=260, col_offset=19), [], [], None, None, lineno=260, col_offset=19), [Assign([Subscript(Name('calledfuncs', Load(), lineno=261, col_offset=12), Index(Name('key', Load(), lineno=261, col_offset=24)), Store(), lineno=261, col_offset=12)], Num(1, lineno=261, col_offset=31), lineno=261, col_offset=12)], [], lineno=260, col_offset=8), For(Name('key', Store(), lineno=263, col_offset=12), Call(Attribute(Name('other_callers', Load(), lineno=263, col_offset=19), 'keys', Load(), lineno=263, col_offset=19), [], [], None, None, lineno=263, col_offset=19), [Assign([Subscript(Name('callers', Load(), lineno=264, col_offset=12), Index(Name('key', Load(), lineno=264, col_offset=20)), Store(), lineno=264, col_offset=12)], Num(1, lineno=264, col_offset=27), lineno=264, col_offset=12)], [], lineno=263, col_offset=8)], [], lineno=248, col_offset=4), FunctionDef('write_results', arguments([Name('self', Param(), lineno=266, col_offset=22), Name('show_missing', Param(), lineno=266, col_offset=28), Name('summary', Param(), lineno=266, col_offset=47), Name('coverdir', Param(), lineno=266, col_offset=62)], None, None, [Name('True', Load(), lineno=266, col_offset=41), Name('False', Load(), lineno=266, col_offset=55), Name('None', Load(), lineno=266, col_offset=71)]), [Expr(Str('\n        @param coverdir\n        ', lineno=269, col_offset=-1), lineno=269, col_offset=-1), If(Attribute(Name('self', Load(), lineno=270, col_offset=11), 'calledfuncs', Load(), lineno=270, col_offset=11), [Print(None, [], True, lineno=271, col_offset=12), Print(None, [Str('functions called:', lineno=272, col_offset=18)], True, lineno=272, col_offset=12), Assign([Name('calls', Store(), lineno=273, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=273, col_offset=20), 'calledfuncs', Load(), lineno=273, col_offset=20), 'keys', Load(), lineno=273, col_offset=20), [], [], None, None, lineno=273, col_offset=20), lineno=273, col_offset=12), Expr(Call(Attribute(Name('calls', Load(), lineno=274, col_offset=12), 'sort', Load(), lineno=274, col_offset=12), [], [], None, None, lineno=274, col_offset=12), lineno=274, col_offset=12), For(Tuple([Name('filename', Store(), lineno=275, col_offset=16), Name('modulename', Store(), lineno=275, col_offset=26), Name('funcname', Store(), lineno=275, col_offset=38)], Store(), lineno=275, col_offset=16), Name('calls', Load(), lineno=275, col_offset=50), [Print(None, [BinOp(Str('filename: %s, modulename: %s, funcname: %s', lineno=276, col_offset=23), Mod(), Tuple([Name('filename', Load(), lineno=277, col_offset=26), Name('modulename', Load(), lineno=277, col_offset=36), Name('funcname', Load(), lineno=277, col_offset=48)], Load(), lineno=277, col_offset=26), lineno=276, col_offset=23)], True, lineno=276, col_offset=16)], [], lineno=275, col_offset=12)], [], lineno=270, col_offset=8), If(Attribute(Name('self', Load(), lineno=279, col_offset=11), 'callers', Load(), lineno=279, col_offset=11), [Print(None, [], True, lineno=280, col_offset=12), Print(None, [Str('calling relationships:', lineno=281, col_offset=18)], True, lineno=281, col_offset=12), Assign([Name('calls', Store(), lineno=282, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=282, col_offset=20), 'callers', Load(), lineno=282, col_offset=20), 'keys', Load(), lineno=282, col_offset=20), [], [], None, None, lineno=282, col_offset=20), lineno=282, col_offset=12), Expr(Call(Attribute(Name('calls', Load(), lineno=283, col_offset=12), 'sort', Load(), lineno=283, col_offset=12), [], [], None, None, lineno=283, col_offset=12), lineno=283, col_offset=12), Assign([Name('lastfile', Store(), lineno=284, col_offset=12), Name('lastcfile', Store(), lineno=284, col_offset=23)], Str('', lineno=284, col_offset=35), lineno=284, col_offset=12), For(Tuple([Tuple([Name('pfile', Store(), lineno=285, col_offset=18), Name('pmod', Store(), lineno=285, col_offset=25), Name('pfunc', Store(), lineno=285, col_offset=31)], Store(), lineno=285, col_offset=18), Tuple([Name('cfile', Store(), lineno=285, col_offset=40), Name('cmod', Store(), lineno=285, col_offset=47), Name('cfunc', Store(), lineno=285, col_offset=53)], Store(), lineno=285, col_offset=40)], Store(), lineno=285, col_offset=17), Name('calls', Load(), lineno=285, col_offset=64), [If(Compare(Name('pfile', Load(), lineno=286, col_offset=19), [NotEq()], [Name('lastfile', Load(), lineno=286, col_offset=28)], lineno=286, col_offset=19), [Print(None, [], True, lineno=287, col_offset=20), Print(None, [Str('***', lineno=288, col_offset=26), Name('pfile', Load(), lineno=288, col_offset=33), Str('***', lineno=288, col_offset=40)], True, lineno=288, col_offset=20), Assign([Name('lastfile', Store(), lineno=289, col_offset=20)], Name('pfile', Load(), lineno=289, col_offset=31), lineno=289, col_offset=20), Assign([Name('lastcfile', Store(), lineno=290, col_offset=20)], Str('', lineno=290, col_offset=32), lineno=290, col_offset=20)], [], lineno=286, col_offset=16), If(BoolOp(And(), [Compare(Name('cfile', Load(), lineno=291, col_offset=19), [NotEq()], [Name('pfile', Load(), lineno=291, col_offset=28)], lineno=291, col_offset=19), Compare(Name('lastcfile', Load(), lineno=291, col_offset=38), [NotEq()], [Name('cfile', Load(), lineno=291, col_offset=51)], lineno=291, col_offset=38)], lineno=291, col_offset=19), [Print(None, [Str('  -->', lineno=292, col_offset=26), Name('cfile', Load(), lineno=292, col_offset=35)], True, lineno=292, col_offset=20), Assign([Name('lastcfile', Store(), lineno=293, col_offset=20)], Name('cfile', Load(), lineno=293, col_offset=32), lineno=293, col_offset=20)], [], lineno=291, col_offset=16), Print(None, [BinOp(Str('    %s.%s -> %s.%s', lineno=294, col_offset=22), Mod(), Tuple([Name('pmod', Load(), lineno=294, col_offset=46), Name('pfunc', Load(), lineno=294, col_offset=52), Name('cmod', Load(), lineno=294, col_offset=59), Name('cfunc', Load(), lineno=294, col_offset=65)], Load(), lineno=294, col_offset=46), lineno=294, col_offset=22)], True, lineno=294, col_offset=16)], [], lineno=285, col_offset=12)], [], lineno=279, col_offset=8), Assign([Name('per_file', Store(), lineno=298, col_offset=8)], Dict([], [], lineno=298, col_offset=19), lineno=298, col_offset=8), For(Tuple([Name('filename', Store(), lineno=299, col_offset=12), Name('lineno', Store(), lineno=299, col_offset=22)], Store(), lineno=299, col_offset=12), Call(Attribute(Attribute(Name('self', Load(), lineno=299, col_offset=32), 'counts', Load(), lineno=299, col_offset=32), 'keys', Load(), lineno=299, col_offset=32), [], [], None, None, lineno=299, col_offset=32), [Assign([Name('lines_hit', Store(), lineno=300, col_offset=12), Subscript(Name('per_file', Load(), lineno=300, col_offset=24), Index(Name('filename', Load(), lineno=300, col_offset=33)), Store(), lineno=300, col_offset=24)], Call(Attribute(Name('per_file', Load(), lineno=300, col_offset=45), 'get', Load(), lineno=300, col_offset=45), [Name('filename', Load(), lineno=300, col_offset=58), Dict([], [], lineno=300, col_offset=68)], [], None, None, lineno=300, col_offset=45), lineno=300, col_offset=12), Assign([Subscript(Name('lines_hit', Load(), lineno=301, col_offset=12), Index(Name('lineno', Load(), lineno=301, col_offset=22)), Store(), lineno=301, col_offset=12)], Subscript(Attribute(Name('self', Load(), lineno=301, col_offset=32), 'counts', Load(), lineno=301, col_offset=32), Index(Tuple([Name('filename', Load(), lineno=301, col_offset=45), Name('lineno', Load(), lineno=301, col_offset=55)], Load(), lineno=301, col_offset=45)), Load(), lineno=301, col_offset=32), lineno=301, col_offset=12)], [], lineno=299, col_offset=8), Assign([Name('sums', Store(), lineno=304, col_offset=8)], Dict([], [], lineno=304, col_offset=15), lineno=304, col_offset=8), For(Tuple([Name('filename', Store(), lineno=306, col_offset=12), Name('count', Store(), lineno=306, col_offset=22)], Store(), lineno=306, col_offset=12), Call(Attribute(Name('per_file', Load(), lineno=306, col_offset=31), 'iteritems', Load(), lineno=306, col_offset=31), [], [], None, None, lineno=306, col_offset=31), [If(Compare(Name('filename', Load(), lineno=308, col_offset=15), [Eq()], [Str('<string>', lineno=308, col_offset=27)], lineno=308, col_offset=15), [Continue( lineno=309, col_offset=16)], [], lineno=308, col_offset=12), If(Call(Attribute(Name('filename', Load(), lineno=310, col_offset=15), 'startswith', Load(), lineno=310, col_offset=15), [Str('<doctest ', lineno=310, col_offset=35)], [], None, None, lineno=310, col_offset=15), [Continue( lineno=311, col_offset=16)], [], lineno=310, col_offset=12), If(Call(Attribute(Name('filename', Load(), lineno=313, col_offset=15), 'endswith', Load(), lineno=313, col_offset=15), [Tuple([Str('.pyc', lineno=313, col_offset=34), Str('.pyo', lineno=313, col_offset=42)], Load(), lineno=313, col_offset=34)], [], None, None, lineno=313, col_offset=15), [Assign([Name('filename', Store(), lineno=314, col_offset=16)], Subscript(Name('filename', Load(), lineno=314, col_offset=27), Slice(None, Num(-1, lineno=314, col_offset=38), None), Load(), lineno=314, col_offset=27), lineno=314, col_offset=16)], [], lineno=313, col_offset=12), If(Compare(Name('coverdir', Load(), lineno=316, col_offset=15), [Is()], [Name('None', Load(), lineno=316, col_offset=27)], lineno=316, col_offset=15), [Assign([Name('dir', Store(), lineno=317, col_offset=16)], Call(Attribute(Attribute(Name('os', Load(), lineno=317, col_offset=22), 'path', Load(), lineno=317, col_offset=22), 'dirname', Load(), lineno=317, col_offset=22), [Call(Attribute(Attribute(Name('os', Load(), lineno=317, col_offset=38), 'path', Load(), lineno=317, col_offset=38), 'abspath', Load(), lineno=317, col_offset=38), [Name('filename', Load(), lineno=317, col_offset=54)], [], None, None, lineno=317, col_offset=38)], [], None, None, lineno=317, col_offset=22), lineno=317, col_offset=16), Assign([Name('modulename', Store(), lineno=318, col_offset=16)], Call(Name('modname', Load(), lineno=318, col_offset=29), [Name('filename', Load(), lineno=318, col_offset=37)], [], None, None, lineno=318, col_offset=29), lineno=318, col_offset=16)], [Assign([Name('dir', Store(), lineno=320, col_offset=16)], Name('coverdir', Load(), lineno=320, col_offset=22), lineno=320, col_offset=16), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=321, col_offset=23), 'path', Load(), lineno=321, col_offset=23), 'exists', Load(), lineno=321, col_offset=23), [Name('dir', Load(), lineno=321, col_offset=38)], [], None, None, lineno=321, col_offset=23), lineno=321, col_offset=19), [Expr(Call(Attribute(Name('os', Load(), lineno=322, col_offset=20), 'makedirs', Load(), lineno=322, col_offset=20), [Name('dir', Load(), lineno=322, col_offset=32)], [], None, None, lineno=322, col_offset=20), lineno=322, col_offset=20)], [], lineno=321, col_offset=16), Assign([Name('modulename', Store(), lineno=323, col_offset=16)], Call(Name('fullmodname', Load(), lineno=323, col_offset=29), [Name('filename', Load(), lineno=323, col_offset=41)], [], None, None, lineno=323, col_offset=29), lineno=323, col_offset=16)], lineno=316, col_offset=12), If(Name('show_missing', Load(), lineno=327, col_offset=15), [Assign([Name('lnotab', Store(), lineno=328, col_offset=16)], Call(Name('find_executable_linenos', Load(), lineno=328, col_offset=25), [Name('filename', Load(), lineno=328, col_offset=49)], [], None, None, lineno=328, col_offset=25), lineno=328, col_offset=16)], [Assign([Name('lnotab', Store(), lineno=330, col_offset=16)], Dict([], [], lineno=330, col_offset=25), lineno=330, col_offset=16)], lineno=327, col_offset=12), Assign([Name('source', Store(), lineno=332, col_offset=12)], Call(Attribute(Name('linecache', Load(), lineno=332, col_offset=21), 'getlines', Load(), lineno=332, col_offset=21), [Name('filename', Load(), lineno=332, col_offset=40)], [], None, None, lineno=332, col_offset=21), lineno=332, col_offset=12), Assign([Name('coverpath', Store(), lineno=333, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=333, col_offset=24), 'path', Load(), lineno=333, col_offset=24), 'join', Load(), lineno=333, col_offset=24), [Name('dir', Load(), lineno=333, col_offset=37), BinOp(Name('modulename', Load(), lineno=333, col_offset=42), Add(), Str('.cover', lineno=333, col_offset=55), lineno=333, col_offset=42)], [], None, None, lineno=333, col_offset=24), lineno=333, col_offset=12), Assign([Tuple([Name('n_hits', Store(), lineno=334, col_offset=12), Name('n_lines', Store(), lineno=334, col_offset=20)], Store(), lineno=334, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=334, col_offset=30), 'write_results_file', Load(), lineno=334, col_offset=30), [Name('coverpath', Load(), lineno=334, col_offset=54), Name('source', Load(), lineno=334, col_offset=65), Name('lnotab', Load(), lineno=335, col_offset=54), Name('count', Load(), lineno=335, col_offset=62)], [], None, None, lineno=334, col_offset=30), lineno=334, col_offset=12), If(BoolOp(And(), [Name('summary', Load(), lineno=337, col_offset=15), Name('n_lines', Load(), lineno=337, col_offset=27)], lineno=337, col_offset=15), [Assign([Name('percent', Store(), lineno=338, col_offset=16)], Call(Name('int', Load(), lineno=338, col_offset=26), [BinOp(BinOp(Num(100, lineno=338, col_offset=30), Mult(), Name('n_hits', Load(), lineno=338, col_offset=36), lineno=338, col_offset=30), Div(), Name('n_lines', Load(), lineno=338, col_offset=45), lineno=338, col_offset=43)], [], None, None, lineno=338, col_offset=26), lineno=338, col_offset=16), Assign([Subscript(Name('sums', Load(), lineno=339, col_offset=16), Index(Name('modulename', Load(), lineno=339, col_offset=21)), Store(), lineno=339, col_offset=16)], Tuple([Name('n_lines', Load(), lineno=339, col_offset=35), Name('percent', Load(), lineno=339, col_offset=44), Name('modulename', Load(), lineno=339, col_offset=53), Name('filename', Load(), lineno=339, col_offset=65)], Load(), lineno=339, col_offset=35), lineno=339, col_offset=16)], [], lineno=337, col_offset=12)], [], lineno=306, col_offset=8), If(BoolOp(And(), [Name('summary', Load(), lineno=341, col_offset=11), Name('sums', Load(), lineno=341, col_offset=23)], lineno=341, col_offset=11), [Assign([Name('mods', Store(), lineno=342, col_offset=12)], Call(Attribute(Name('sums', Load(), lineno=342, col_offset=19), 'keys', Load(), lineno=342, col_offset=19), [], [], None, None, lineno=342, col_offset=19), lineno=342, col_offset=12), Expr(Call(Attribute(Name('mods', Load(), lineno=343, col_offset=12), 'sort', Load(), lineno=343, col_offset=12), [], [], None, None, lineno=343, col_offset=12), lineno=343, col_offset=12), Print(None, [Str('lines   cov%   module   (path)', lineno=344, col_offset=18)], True, lineno=344, col_offset=12), For(Name('m', Store(), lineno=345, col_offset=16), Name('mods', Load(), lineno=345, col_offset=21), [Assign([Tuple([Name('n_lines', Store(), lineno=346, col_offset=16), Name('percent', Store(), lineno=346, col_offset=25), Name('modulename', Store(), lineno=346, col_offset=34), Name('filename', Store(), lineno=346, col_offset=46)], Store(), lineno=346, col_offset=16)], Subscript(Name('sums', Load(), lineno=346, col_offset=57), Index(Name('m', Load(), lineno=346, col_offset=62)), Load(), lineno=346, col_offset=57), lineno=346, col_offset=16), Print(None, [BinOp(Str('%5d   %3d%%   %s   (%s)', lineno=347, col_offset=22), Mod(), Subscript(Name('sums', Load(), lineno=347, col_offset=50), Index(Name('m', Load(), lineno=347, col_offset=55)), Load(), lineno=347, col_offset=50), lineno=347, col_offset=22)], True, lineno=347, col_offset=16)], [], lineno=345, col_offset=12)], [], lineno=341, col_offset=8), If(Attribute(Name('self', Load(), lineno=349, col_offset=11), 'outfile', Load(), lineno=349, col_offset=11), [TryExcept([Expr(Call(Attribute(Name('pickle', Load(), lineno=352, col_offset=16), 'dump', Load(), lineno=352, col_offset=16), [Tuple([Attribute(Name('self', Load(), lineno=352, col_offset=29), 'counts', Load(), lineno=352, col_offset=29), Attribute(Name('self', Load(), lineno=352, col_offset=42), 'calledfuncs', Load(), lineno=352, col_offset=42), Attribute(Name('self', Load(), lineno=352, col_offset=60), 'callers', Load(), lineno=352, col_offset=60)], Load(), lineno=352, col_offset=29), Call(Name('open', Load(), lineno=353, col_offset=28), [Attribute(Name('self', Load(), lineno=353, col_offset=33), 'outfile', Load(), lineno=353, col_offset=33), Str('wb', lineno=353, col_offset=47)], [], None, None, lineno=353, col_offset=28), Num(1, lineno=353, col_offset=54)], [], None, None, lineno=352, col_offset=16), lineno=352, col_offset=16)], [ExceptHandler(Name('IOError', Load(), lineno=354, col_offset=19), Name('err', Store(), lineno=354, col_offset=28), [Print(Attribute(Name('sys', Load(), lineno=355, col_offset=25), 'stderr', Load(), lineno=355, col_offset=25), [BinOp(Str("Can't save counts files because %s", lineno=355, col_offset=37), Mod(), Name('err', Load(), lineno=355, col_offset=76), lineno=355, col_offset=37)], True, lineno=355, col_offset=16)], lineno=354, col_offset=12)], [], lineno=351, col_offset=12)], [], lineno=349, col_offset=8)], [], lineno=266, col_offset=4), FunctionDef('write_results_file', arguments([Name('self', Param(), lineno=357, col_offset=27), Name('path', Param(), lineno=357, col_offset=33), Name('lines', Param(), lineno=357, col_offset=39), Name('lnotab', Param(), lineno=357, col_offset=46), Name('lines_hit', Param(), lineno=357, col_offset=54)], None, None, []), [Expr(Str('Return a coverage results file in path.', lineno=358, col_offset=8), lineno=358, col_offset=8), TryExcept([Assign([Name('outfile', Store(), lineno=361, col_offset=12)], Call(Name('open', Load(), lineno=361, col_offset=22), [Name('path', Load(), lineno=361, col_offset=27), Str('w', lineno=361, col_offset=33)], [], None, None, lineno=361, col_offset=22), lineno=361, col_offset=12)], [ExceptHandler(Name('IOError', Load(), lineno=362, col_offset=15), Name('err', Store(), lineno=362, col_offset=24), [Print(Attribute(Name('sys', Load(), lineno=363, col_offset=21), 'stderr', Load(), lineno=363, col_offset=21), [BinOp(Str('trace: Could not open %r for writing: %s- skipping', lineno=363, col_offset=34), Mod(), Tuple([Name('path', Load(), lineno=364, col_offset=50), Name('err', Load(), lineno=364, col_offset=56)], Load(), lineno=364, col_offset=50), lineno=363, col_offset=34)], True, lineno=363, col_offset=12), Return(Tuple([Num(0, lineno=365, col_offset=19), Num(0, lineno=365, col_offset=22)], Load(), lineno=365, col_offset=19), lineno=365, col_offset=12)], lineno=362, col_offset=8)], [], lineno=360, col_offset=8), Assign([Name('n_lines', Store(), lineno=367, col_offset=8)], Num(0, lineno=367, col_offset=18), lineno=367, col_offset=8), Assign([Name('n_hits', Store(), lineno=368, col_offset=8)], Num(0, lineno=368, col_offset=17), lineno=368, col_offset=8), For(Tuple([Name('i', Store(), lineno=369, col_offset=12), Name('line', Store(), lineno=369, col_offset=15)], Store(), lineno=369, col_offset=12), Call(Name('enumerate', Load(), lineno=369, col_offset=23), [Name('lines', Load(), lineno=369, col_offset=33)], [], None, None, lineno=369, col_offset=23), [Assign([Name('lineno', Store(), lineno=370, col_offset=12)], BinOp(Name('i', Load(), lineno=370, col_offset=21), Add(), Num(1, lineno=370, col_offset=25), lineno=370, col_offset=21), lineno=370, col_offset=12), If(Compare(Name('lineno', Load(), lineno=373, col_offset=15), [In()], [Name('lines_hit', Load(), lineno=373, col_offset=25)], lineno=373, col_offset=15), [Expr(Call(Attribute(Name('outfile', Load(), lineno=374, col_offset=16), 'write', Load(), lineno=374, col_offset=16), [BinOp(Str('%5d: ', lineno=374, col_offset=30), Mod(), Subscript(Name('lines_hit', Load(), lineno=374, col_offset=40), Index(Name('lineno', Load(), lineno=374, col_offset=50)), Load(), lineno=374, col_offset=40), lineno=374, col_offset=30)], [], None, None, lineno=374, col_offset=16), lineno=374, col_offset=16), AugAssign(Name('n_hits', Store(), lineno=375, col_offset=16), Add(), Num(1, lineno=375, col_offset=26), lineno=375, col_offset=16), AugAssign(Name('n_lines', Store(), lineno=376, col_offset=16), Add(), Num(1, lineno=376, col_offset=27), lineno=376, col_offset=16)], [If(Call(Attribute(Name('rx_blank', Load(), lineno=377, col_offset=17), 'match', Load(), lineno=377, col_offset=17), [Name('line', Load(), lineno=377, col_offset=32)], [], None, None, lineno=377, col_offset=17), [Expr(Call(Attribute(Name('outfile', Load(), lineno=378, col_offset=16), 'write', Load(), lineno=378, col_offset=16), [Str('       ', lineno=378, col_offset=30)], [], None, None, lineno=378, col_offset=16), lineno=378, col_offset=16)], [If(BoolOp(And(), [Compare(Name('lineno', Load(), lineno=383, col_offset=19), [In()], [Name('lnotab', Load(), lineno=383, col_offset=29)], lineno=383, col_offset=19), UnaryOp(Not(), Compare(Name('PRAGMA_NOCOVER', Load(), lineno=383, col_offset=44), [In()], [Subscript(Name('lines', Load(), lineno=383, col_offset=62), Index(Name('i', Load(), lineno=383, col_offset=68)), Load(), lineno=383, col_offset=62)], lineno=383, col_offset=44), lineno=383, col_offset=40)], lineno=383, col_offset=19), [Expr(Call(Attribute(Name('outfile', Load(), lineno=384, col_offset=20), 'write', Load(), lineno=384, col_offset=20), [Str('>>>>>> ', lineno=384, col_offset=34)], [], None, None, lineno=384, col_offset=20), lineno=384, col_offset=20), AugAssign(Name('n_lines', Store(), lineno=385, col_offset=20), Add(), Num(1, lineno=385, col_offset=31), lineno=385, col_offset=20)], [Expr(Call(Attribute(Name('outfile', Load(), lineno=387, col_offset=20), 'write', Load(), lineno=387, col_offset=20), [Str('       ', lineno=387, col_offset=34)], [], None, None, lineno=387, col_offset=20), lineno=387, col_offset=20)], lineno=383, col_offset=16)], lineno=377, col_offset=17)], lineno=373, col_offset=12), Expr(Call(Attribute(Name('outfile', Load(), lineno=388, col_offset=12), 'write', Load(), lineno=388, col_offset=12), [Call(Attribute(Subscript(Name('lines', Load(), lineno=388, col_offset=26), Index(Name('i', Load(), lineno=388, col_offset=32)), Load(), lineno=388, col_offset=26), 'expandtabs', Load(), lineno=388, col_offset=26), [Num(8, lineno=388, col_offset=46)], [], None, None, lineno=388, col_offset=26)], [], None, None, lineno=388, col_offset=12), lineno=388, col_offset=12)], [], lineno=369, col_offset=8), Expr(Call(Attribute(Name('outfile', Load(), lineno=389, col_offset=8), 'close', Load(), lineno=389, col_offset=8), [], [], None, None, lineno=389, col_offset=8), lineno=389, col_offset=8), Return(Tuple([Name('n_hits', Load(), lineno=391, col_offset=15), Name('n_lines', Load(), lineno=391, col_offset=23)], Load(), lineno=391, col_offset=15), lineno=391, col_offset=8)], [], lineno=357, col_offset=4)], [], lineno=221, col_offset=0), FunctionDef('find_lines_from_code', arguments([Name('code', Param(), lineno=393, col_offset=25), Name('strs', Param(), lineno=393, col_offset=31)], None, None, []), [Expr(Str('Return dict where keys are lines in the line number table.', lineno=394, col_offset=4), lineno=394, col_offset=4), Assign([Name('linenos', Store(), lineno=395, col_offset=4)], Dict([], [], lineno=395, col_offset=14), lineno=395, col_offset=4), For(Tuple([Name('_', Store(), lineno=397, col_offset=8), Name('lineno', Store(), lineno=397, col_offset=11)], Store(), lineno=397, col_offset=8), Call(Attribute(Name('dis', Load(), lineno=397, col_offset=21), 'findlinestarts', Load(), lineno=397, col_offset=21), [Name('code', Load(), lineno=397, col_offset=40)], [], None, None, lineno=397, col_offset=21), [If(Compare(Name('lineno', Load(), lineno=398, col_offset=11), [NotIn()], [Name('strs', Load(), lineno=398, col_offset=25)], lineno=398, col_offset=11), [Assign([Subscript(Name('linenos', Load(), lineno=399, col_offset=12), Index(Name('lineno', Load(), lineno=399, col_offset=20)), Store(), lineno=399, col_offset=12)], Num(1, lineno=399, col_offset=30), lineno=399, col_offset=12)], [], lineno=398, col_offset=8)], [], lineno=397, col_offset=4), Return(Name('linenos', Load(), lineno=401, col_offset=11), lineno=401, col_offset=4)], [], lineno=393, col_offset=0), FunctionDef('find_lines', arguments([Name('code', Param(), lineno=403, col_offset=15), Name('strs', Param(), lineno=403, col_offset=21)], None, None, []), [Expr(Str('Return lineno dict for all code objects reachable from code.', lineno=404, col_offset=4), lineno=404, col_offset=4), Assign([Name('linenos', Store(), lineno=406, col_offset=4)], Call(Name('find_lines_from_code', Load(), lineno=406, col_offset=14), [Name('code', Load(), lineno=406, col_offset=35), Name('strs', Load(), lineno=406, col_offset=41)], [], None, None, lineno=406, col_offset=14), lineno=406, col_offset=4), For(Name('c', Store(), lineno=409, col_offset=8), Attribute(Name('code', Load(), lineno=409, col_offset=13), 'co_consts', Load(), lineno=409, col_offset=13), [If(Call(Attribute(Name('inspect', Load(), lineno=410, col_offset=11), 'iscode', Load(), lineno=410, col_offset=11), [Name('c', Load(), lineno=410, col_offset=26)], [], None, None, lineno=410, col_offset=11), [Expr(Call(Attribute(Name('linenos', Load(), lineno=412, col_offset=12), 'update', Load(), lineno=412, col_offset=12), [Call(Name('find_lines', Load(), lineno=412, col_offset=27), [Name('c', Load(), lineno=412, col_offset=38), Name('strs', Load(), lineno=412, col_offset=41)], [], None, None, lineno=412, col_offset=27)], [], None, None, lineno=412, col_offset=12), lineno=412, col_offset=12)], [], lineno=410, col_offset=8)], [], lineno=409, col_offset=4), Return(Name('linenos', Load(), lineno=413, col_offset=11), lineno=413, col_offset=4)], [], lineno=403, col_offset=0), FunctionDef('find_strings', arguments([Name('filename', Param(), lineno=415, col_offset=17)], None, None, []), [Expr(Str('Return a dict of possible docstring positions.\n\n    The dict maps line numbers to strings.  There is an entry for\n    line that contains only a string or a part of a triple-quoted\n    string.\n    ', lineno=421, col_offset=-1), lineno=421, col_offset=-1), Assign([Name('d', Store(), lineno=422, col_offset=4)], Dict([], [], lineno=422, col_offset=8), lineno=422, col_offset=4), Assign([Name('prev_ttype', Store(), lineno=425, col_offset=4)], Attribute(Name('token', Load(), lineno=425, col_offset=17), 'INDENT', Load(), lineno=425, col_offset=17), lineno=425, col_offset=4), Assign([Name('f', Store(), lineno=426, col_offset=4)], Call(Name('open', Load(), lineno=426, col_offset=8), [Name('filename', Load(), lineno=426, col_offset=13)], [], None, None, lineno=426, col_offset=8), lineno=426, col_offset=4), For(Tuple([Name('ttype', Store(), lineno=427, col_offset=8), Name('tstr', Store(), lineno=427, col_offset=15), Name('start', Store(), lineno=427, col_offset=21), Name('end', Store(), lineno=427, col_offset=28), Name('line', Store(), lineno=427, col_offset=33)], Store(), lineno=427, col_offset=8), Call(Attribute(Name('tokenize', Load(), lineno=427, col_offset=41), 'generate_tokens', Load(), lineno=427, col_offset=41), [Attribute(Name('f', Load(), lineno=427, col_offset=66), 'readline', Load(), lineno=427, col_offset=66)], [], None, None, lineno=427, col_offset=41), [If(Compare(Name('ttype', Load(), lineno=428, col_offset=11), [Eq()], [Attribute(Name('token', Load(), lineno=428, col_offset=20), 'STRING', Load(), lineno=428, col_offset=20)], lineno=428, col_offset=11), [If(Compare(Name('prev_ttype', Load(), lineno=429, col_offset=15), [Eq()], [Attribute(Name('token', Load(), lineno=429, col_offset=29), 'INDENT', Load(), lineno=429, col_offset=29)], lineno=429, col_offset=15), [Assign([Tuple([Name('sline', Store(), lineno=430, col_offset=16), Name('scol', Store(), lineno=430, col_offset=23)], Store(), lineno=430, col_offset=16)], Name('start', Load(), lineno=430, col_offset=30), lineno=430, col_offset=16), Assign([Tuple([Name('eline', Store(), lineno=431, col_offset=16), Name('ecol', Store(), lineno=431, col_offset=23)], Store(), lineno=431, col_offset=16)], Name('end', Load(), lineno=431, col_offset=30), lineno=431, col_offset=16), For(Name('i', Store(), lineno=432, col_offset=20), Call(Name('range', Load(), lineno=432, col_offset=25), [Name('sline', Load(), lineno=432, col_offset=31), BinOp(Name('eline', Load(), lineno=432, col_offset=38), Add(), Num(1, lineno=432, col_offset=46), lineno=432, col_offset=38)], [], None, None, lineno=432, col_offset=25), [Assign([Subscript(Name('d', Load(), lineno=433, col_offset=20), Index(Name('i', Load(), lineno=433, col_offset=22)), Store(), lineno=433, col_offset=20)], Num(1, lineno=433, col_offset=27), lineno=433, col_offset=20)], [], lineno=432, col_offset=16)], [], lineno=429, col_offset=12)], [], lineno=428, col_offset=8), Assign([Name('prev_ttype', Store(), lineno=434, col_offset=8)], Name('ttype', Load(), lineno=434, col_offset=21), lineno=434, col_offset=8)], [], lineno=427, col_offset=4), Expr(Call(Attribute(Name('f', Load(), lineno=435, col_offset=4), 'close', Load(), lineno=435, col_offset=4), [], [], None, None, lineno=435, col_offset=4), lineno=435, col_offset=4), Return(Name('d', Load(), lineno=436, col_offset=11), lineno=436, col_offset=4)], [], lineno=415, col_offset=0), FunctionDef('find_executable_linenos', arguments([Name('filename', Param(), lineno=438, col_offset=28)], None, None, []), [Expr(Str('Return dict where keys are line numbers in the line number table.', lineno=439, col_offset=4), lineno=439, col_offset=4), TryExcept([Assign([Name('prog', Store(), lineno=441, col_offset=8)], Call(Attribute(Call(Name('open', Load(), lineno=441, col_offset=15), [Name('filename', Load(), lineno=441, col_offset=20), Str('rU', lineno=441, col_offset=30)], [], None, None, lineno=441, col_offset=15), 'read', Load(), lineno=441, col_offset=15), [], [], None, None, lineno=441, col_offset=15), lineno=441, col_offset=8)], [ExceptHandler(Name('IOError', Load(), lineno=442, col_offset=11), Name('err', Store(), lineno=442, col_offset=20), [Print(Attribute(Name('sys', Load(), lineno=443, col_offset=17), 'stderr', Load(), lineno=443, col_offset=17), [BinOp(Str('Not printing coverage data for %r: %s', lineno=443, col_offset=30), Mod(), Tuple([Name('filename', Load(), lineno=444, col_offset=33), Name('err', Load(), lineno=444, col_offset=43)], Load(), lineno=444, col_offset=33), lineno=443, col_offset=30)], True, lineno=443, col_offset=8), Return(Dict([], [], lineno=445, col_offset=15), lineno=445, col_offset=8)], lineno=442, col_offset=4)], [], lineno=440, col_offset=4), Assign([Name('code', Store(), lineno=446, col_offset=4)], Call(Name('compile', Load(), lineno=446, col_offset=11), [Name('prog', Load(), lineno=446, col_offset=19), Name('filename', Load(), lineno=446, col_offset=25), Str('exec', lineno=446, col_offset=35)], [], None, None, lineno=446, col_offset=11), lineno=446, col_offset=4), Assign([Name('strs', Store(), lineno=447, col_offset=4)], Call(Name('find_strings', Load(), lineno=447, col_offset=11), [Name('filename', Load(), lineno=447, col_offset=24)], [], None, None, lineno=447, col_offset=11), lineno=447, col_offset=4), Return(Call(Name('find_lines', Load(), lineno=448, col_offset=11), [Name('code', Load(), lineno=448, col_offset=22), Name('strs', Load(), lineno=448, col_offset=28)], [], None, None, lineno=448, col_offset=11), lineno=448, col_offset=4)], [], lineno=438, col_offset=0), ClassDef('Trace', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=451, col_offset=17), Name('count', Param(), lineno=451, col_offset=23), Name('trace', Param(), lineno=451, col_offset=32), Name('countfuncs', Param(), lineno=451, col_offset=41), Name('countcallers', Param(), lineno=451, col_offset=55), Name('ignoremods', Param(), lineno=452, col_offset=17), Name('ignoredirs', Param(), lineno=452, col_offset=32), Name('infile', Param(), lineno=452, col_offset=47), Name('outfile', Param(), lineno=452, col_offset=60), Name('timing', Param(), lineno=453, col_offset=17)], None, None, [Num(1, lineno=451, col_offset=29), Num(1, lineno=451, col_offset=38), Num(0, lineno=451, col_offset=52), Num(0, lineno=451, col_offset=68), Tuple([], Load(), lineno=452, col_offset=28), Tuple([], Load(), lineno=452, col_offset=43), Name('None', Load(), lineno=452, col_offset=54), Name('None', Load(), lineno=452, col_offset=68), Name('False', Load(), lineno=453, col_offset=24)]), [Expr(Str("\n        @param count true iff it should count number of times each\n                     line is executed\n        @param trace true iff it should print out each line that is\n                     being counted\n        @param countfuncs true iff it should just output a list of\n                     (filename, modulename, funcname,) for functions\n                     that were called at least once;  This overrides\n                     `count' and `trace'\n        @param ignoremods a list of the names of modules to ignore\n        @param ignoredirs a list of the names of directories to ignore\n                     all of the (recursive) contents of\n        @param infile file from which to read stored counts to be\n                     added into the results\n        @param outfile file in which to write the results\n        @param timing true iff timing information be displayed\n        ", lineno=470, col_offset=-1), lineno=470, col_offset=-1), Assign([Attribute(Name('self', Load(), lineno=471, col_offset=8), 'infile', Store(), lineno=471, col_offset=8)], Name('infile', Load(), lineno=471, col_offset=22), lineno=471, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=472, col_offset=8), 'outfile', Store(), lineno=472, col_offset=8)], Name('outfile', Load(), lineno=472, col_offset=23), lineno=472, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=473, col_offset=8), 'ignore', Store(), lineno=473, col_offset=8)], Call(Name('Ignore', Load(), lineno=473, col_offset=22), [Name('ignoremods', Load(), lineno=473, col_offset=29), Name('ignoredirs', Load(), lineno=473, col_offset=41)], [], None, None, lineno=473, col_offset=22), lineno=473, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=474, col_offset=8), 'counts', Store(), lineno=474, col_offset=8)], Dict([], [], lineno=474, col_offset=22), lineno=474, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=475, col_offset=8), 'blabbed', Store(), lineno=475, col_offset=8)], Dict([], [], lineno=475, col_offset=23), lineno=475, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=476, col_offset=8), 'pathtobasename', Store(), lineno=476, col_offset=8)], Dict([], [], lineno=476, col_offset=30), lineno=476, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=477, col_offset=8), 'donothing', Store(), lineno=477, col_offset=8)], Num(0, lineno=477, col_offset=25), lineno=477, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=478, col_offset=8), 'trace', Store(), lineno=478, col_offset=8)], Name('trace', Load(), lineno=478, col_offset=21), lineno=478, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=479, col_offset=8), '_calledfuncs', Store(), lineno=479, col_offset=8)], Dict([], [], lineno=479, col_offset=28), lineno=479, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=480, col_offset=8), '_callers', Store(), lineno=480, col_offset=8)], Dict([], [], lineno=480, col_offset=24), lineno=480, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=481, col_offset=8), '_caller_cache', Store(), lineno=481, col_offset=8)], Dict([], [], lineno=481, col_offset=29), lineno=481, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=482, col_offset=8), 'start_time', Store(), lineno=482, col_offset=8)], Name('None', Load(), lineno=482, col_offset=26), lineno=482, col_offset=8), If(Name('timing', Load(), lineno=483, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=484, col_offset=12), 'start_time', Store(), lineno=484, col_offset=12)], Call(Attribute(Name('time', Load(), lineno=484, col_offset=30), 'time', Load(), lineno=484, col_offset=30), [], [], None, None, lineno=484, col_offset=30), lineno=484, col_offset=12)], [], lineno=483, col_offset=8), If(Name('countcallers', Load(), lineno=485, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=486, col_offset=12), 'globaltrace', Store(), lineno=486, col_offset=12)], Attribute(Name('self', Load(), lineno=486, col_offset=31), 'globaltrace_trackcallers', Load(), lineno=486, col_offset=31), lineno=486, col_offset=12)], [If(Name('countfuncs', Load(), lineno=487, col_offset=13), [Assign([Attribute(Name('self', Load(), lineno=488, col_offset=12), 'globaltrace', Store(), lineno=488, col_offset=12)], Attribute(Name('self', Load(), lineno=488, col_offset=31), 'globaltrace_countfuncs', Load(), lineno=488, col_offset=31), lineno=488, col_offset=12)], [If(BoolOp(And(), [Name('trace', Load(), lineno=489, col_offset=13), Name('count', Load(), lineno=489, col_offset=23)], lineno=489, col_offset=13), [Assign([Attribute(Name('self', Load(), lineno=490, col_offset=12), 'globaltrace', Store(), lineno=490, col_offset=12)], Attribute(Name('self', Load(), lineno=490, col_offset=31), 'globaltrace_lt', Load(), lineno=490, col_offset=31), lineno=490, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=491, col_offset=12), 'localtrace', Store(), lineno=491, col_offset=12)], Attribute(Name('self', Load(), lineno=491, col_offset=30), 'localtrace_trace_and_count', Load(), lineno=491, col_offset=30), lineno=491, col_offset=12)], [If(Name('trace', Load(), lineno=492, col_offset=13), [Assign([Attribute(Name('self', Load(), lineno=493, col_offset=12), 'globaltrace', Store(), lineno=493, col_offset=12)], Attribute(Name('self', Load(), lineno=493, col_offset=31), 'globaltrace_lt', Load(), lineno=493, col_offset=31), lineno=493, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=494, col_offset=12), 'localtrace', Store(), lineno=494, col_offset=12)], Attribute(Name('self', Load(), lineno=494, col_offset=30), 'localtrace_trace', Load(), lineno=494, col_offset=30), lineno=494, col_offset=12)], [If(Name('count', Load(), lineno=495, col_offset=13), [Assign([Attribute(Name('self', Load(), lineno=496, col_offset=12), 'globaltrace', Store(), lineno=496, col_offset=12)], Attribute(Name('self', Load(), lineno=496, col_offset=31), 'globaltrace_lt', Load(), lineno=496, col_offset=31), lineno=496, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=497, col_offset=12), 'localtrace', Store(), lineno=497, col_offset=12)], Attribute(Name('self', Load(), lineno=497, col_offset=30), 'localtrace_count', Load(), lineno=497, col_offset=30), lineno=497, col_offset=12)], [Assign([Attribute(Name('self', Load(), lineno=500, col_offset=12), 'donothing', Store(), lineno=500, col_offset=12)], Num(1, lineno=500, col_offset=29), lineno=500, col_offset=12)], lineno=495, col_offset=13)], lineno=492, col_offset=13)], lineno=489, col_offset=13)], lineno=487, col_offset=13)], lineno=485, col_offset=8)], [], lineno=451, col_offset=4), FunctionDef('run', arguments([Name('self', Param(), lineno=502, col_offset=12), Name('cmd', Param(), lineno=502, col_offset=18)], None, None, []), [Import([alias('__main__', None)], lineno=503, col_offset=8), Assign([Name('dict', Store(), lineno=504, col_offset=8)], Attribute(Name('__main__', Load(), lineno=504, col_offset=15), '__dict__', Load(), lineno=504, col_offset=15), lineno=504, col_offset=8), If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=505, col_offset=15), 'donothing', Load(), lineno=505, col_offset=15), lineno=505, col_offset=11), [Expr(Call(Attribute(Name('threading', Load(), lineno=506, col_offset=12), 'settrace', Load(), lineno=506, col_offset=12), [Attribute(Name('self', Load(), lineno=506, col_offset=31), 'globaltrace', Load(), lineno=506, col_offset=31)], [], None, None, lineno=506, col_offset=12), lineno=506, col_offset=12), Expr(Call(Attribute(Name('sys', Load(), lineno=507, col_offset=12), 'settrace', Load(), lineno=507, col_offset=12), [Attribute(Name('self', Load(), lineno=507, col_offset=25), 'globaltrace', Load(), lineno=507, col_offset=25)], [], None, None, lineno=507, col_offset=12), lineno=507, col_offset=12)], [], lineno=505, col_offset=8), TryFinally([Exec(Name('cmd', Load(), lineno=509, col_offset=17), Name('dict', Load(), lineno=509, col_offset=24), Name('dict', Load(), lineno=509, col_offset=30), lineno=509, col_offset=12)], [If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=511, col_offset=19), 'donothing', Load(), lineno=511, col_offset=19), lineno=511, col_offset=15), [Expr(Call(Attribute(Name('sys', Load(), lineno=512, col_offset=16), 'settrace', Load(), lineno=512, col_offset=16), [Name('None', Load(), lineno=512, col_offset=29)], [], None, None, lineno=512, col_offset=16), lineno=512, col_offset=16), Expr(Call(Attribute(Name('threading', Load(), lineno=513, col_offset=16), 'settrace', Load(), lineno=513, col_offset=16), [Name('None', Load(), lineno=513, col_offset=35)], [], None, None, lineno=513, col_offset=16), lineno=513, col_offset=16)], [], lineno=511, col_offset=12)], lineno=508, col_offset=8)], [], lineno=502, col_offset=4), FunctionDef('runctx', arguments([Name('self', Param(), lineno=515, col_offset=15), Name('cmd', Param(), lineno=515, col_offset=21), Name('globals', Param(), lineno=515, col_offset=26), Name('locals', Param(), lineno=515, col_offset=40)], None, None, [Name('None', Load(), lineno=515, col_offset=34), Name('None', Load(), lineno=515, col_offset=47)]), [If(Compare(Name('globals', Load(), lineno=516, col_offset=11), [Is()], [Name('None', Load(), lineno=516, col_offset=22)], lineno=516, col_offset=11), [Assign([Name('globals', Store(), lineno=516, col_offset=28)], Dict([], [], lineno=516, col_offset=38), lineno=516, col_offset=28)], [], lineno=516, col_offset=8), If(Compare(Name('locals', Load(), lineno=517, col_offset=11), [Is()], [Name('None', Load(), lineno=517, col_offset=21)], lineno=517, col_offset=11), [Assign([Name('locals', Store(), lineno=517, col_offset=27)], Dict([], [], lineno=517, col_offset=36), lineno=517, col_offset=27)], [], lineno=517, col_offset=8), If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=518, col_offset=15), 'donothing', Load(), lineno=518, col_offset=15), lineno=518, col_offset=11), [Expr(Call(Name('_settrace', Load(), lineno=519, col_offset=12), [Attribute(Name('self', Load(), lineno=519, col_offset=22), 'globaltrace', Load(), lineno=519, col_offset=22)], [], None, None, lineno=519, col_offset=12), lineno=519, col_offset=12)], [], lineno=518, col_offset=8), TryFinally([Exec(Name('cmd', Load(), lineno=521, col_offset=17), Name('globals', Load(), lineno=521, col_offset=24), Name('locals', Load(), lineno=521, col_offset=33), lineno=521, col_offset=12)], [If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=523, col_offset=19), 'donothing', Load(), lineno=523, col_offset=19), lineno=523, col_offset=15), [Expr(Call(Name('_unsettrace', Load(), lineno=524, col_offset=16), [], [], None, None, lineno=524, col_offset=16), lineno=524, col_offset=16)], [], lineno=523, col_offset=12)], lineno=520, col_offset=8)], [], lineno=515, col_offset=4), FunctionDef('runfunc', arguments([Name('self', Param(), lineno=526, col_offset=16), Name('func', Param(), lineno=526, col_offset=22)], 'args', 'kw', []), [Assign([Name('result', Store(), lineno=527, col_offset=8)], Name('None', Load(), lineno=527, col_offset=17), lineno=527, col_offset=8), If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=528, col_offset=15), 'donothing', Load(), lineno=528, col_offset=15), lineno=528, col_offset=11), [Expr(Call(Attribute(Name('sys', Load(), lineno=529, col_offset=12), 'settrace', Load(), lineno=529, col_offset=12), [Attribute(Name('self', Load(), lineno=529, col_offset=25), 'globaltrace', Load(), lineno=529, col_offset=25)], [], None, None, lineno=529, col_offset=12), lineno=529, col_offset=12)], [], lineno=528, col_offset=8), TryFinally([Assign([Name('result', Store(), lineno=531, col_offset=12)], Call(Name('func', Load(), lineno=531, col_offset=21), [], [], Name('args', Load(), lineno=531, col_offset=27), Name('kw', Load(), lineno=531, col_offset=35), lineno=531, col_offset=21), lineno=531, col_offset=12)], [If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=533, col_offset=19), 'donothing', Load(), lineno=533, col_offset=19), lineno=533, col_offset=15), [Expr(Call(Attribute(Name('sys', Load(), lineno=534, col_offset=16), 'settrace', Load(), lineno=534, col_offset=16), [Name('None', Load(), lineno=534, col_offset=29)], [], None, None, lineno=534, col_offset=16), lineno=534, col_offset=16)], [], lineno=533, col_offset=12)], lineno=530, col_offset=8), Return(Name('result', Load(), lineno=535, col_offset=15), lineno=535, col_offset=8)], [], lineno=526, col_offset=4), FunctionDef('file_module_function_of', arguments([Name('self', Param(), lineno=537, col_offset=32), Name('frame', Param(), lineno=537, col_offset=38)], None, None, []), [Assign([Name('code', Store(), lineno=538, col_offset=8)], Attribute(Name('frame', Load(), lineno=538, col_offset=15), 'f_code', Load(), lineno=538, col_offset=15), lineno=538, col_offset=8), Assign([Name('filename', Store(), lineno=539, col_offset=8)], Attribute(Name('code', Load(), lineno=539, col_offset=19), 'co_filename', Load(), lineno=539, col_offset=19), lineno=539, col_offset=8), If(Name('filename', Load(), lineno=540, col_offset=11), [Assign([Name('modulename', Store(), lineno=541, col_offset=12)], Call(Name('modname', Load(), lineno=541, col_offset=25), [Name('filename', Load(), lineno=541, col_offset=33)], [], None, None, lineno=541, col_offset=25), lineno=541, col_offset=12)], [Assign([Name('modulename', Store(), lineno=543, col_offset=12)], Name('None', Load(), lineno=543, col_offset=25), lineno=543, col_offset=12)], lineno=540, col_offset=8), Assign([Name('funcname', Store(), lineno=545, col_offset=8)], Attribute(Name('code', Load(), lineno=545, col_offset=19), 'co_name', Load(), lineno=545, col_offset=19), lineno=545, col_offset=8), Assign([Name('clsname', Store(), lineno=546, col_offset=8)], Name('None', Load(), lineno=546, col_offset=18), lineno=546, col_offset=8), If(Compare(Name('code', Load(), lineno=547, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=547, col_offset=19), '_caller_cache', Load(), lineno=547, col_offset=19)], lineno=547, col_offset=11), [If(Compare(Subscript(Attribute(Name('self', Load(), lineno=548, col_offset=15), '_caller_cache', Load(), lineno=548, col_offset=15), Index(Name('code', Load(), lineno=548, col_offset=34)), Load(), lineno=548, col_offset=15), [IsNot()], [Name('None', Load(), lineno=548, col_offset=47)], lineno=548, col_offset=15), [Assign([Name('clsname', Store(), lineno=549, col_offset=16)], Subscript(Attribute(Name('self', Load(), lineno=549, col_offset=26), '_caller_cache', Load(), lineno=549, col_offset=26), Index(Name('code', Load(), lineno=549, col_offset=45)), Load(), lineno=549, col_offset=26), lineno=549, col_offset=16)], [], lineno=548, col_offset=12)], [Assign([Subscript(Attribute(Name('self', Load(), lineno=551, col_offset=12), '_caller_cache', Load(), lineno=551, col_offset=12), Index(Name('code', Load(), lineno=551, col_offset=31)), Store(), lineno=551, col_offset=12)], Name('None', Load(), lineno=551, col_offset=39), lineno=551, col_offset=12), Assign([Name('funcs', Store(), lineno=554, col_offset=12)], ListComp(Name('f', Load(), lineno=554, col_offset=21), [comprehension(Name('f', Store(), lineno=554, col_offset=27), Call(Attribute(Name('gc', Load(), lineno=554, col_offset=32), 'get_referrers', Load(), lineno=554, col_offset=32), [Name('code', Load(), lineno=554, col_offset=49)], [], None, None, lineno=554, col_offset=32), [Call(Attribute(Name('inspect', Load(), lineno=555, col_offset=28), 'isfunction', Load(), lineno=555, col_offset=28), [Name('f', Load(), lineno=555, col_offset=47)], [], None, None, lineno=555, col_offset=28)])], lineno=554, col_offset=21), lineno=554, col_offset=12), If(Compare(Call(Name('len', Load(), lineno=559, col_offset=15), [Name('funcs', Load(), lineno=559, col_offset=19)], [], None, None, lineno=559, col_offset=15), [Eq()], [Num(1, lineno=559, col_offset=29)], lineno=559, col_offset=15), [Assign([Name('dicts', Store(), lineno=560, col_offset=16)], ListComp(Name('d', Load(), lineno=560, col_offset=25), [comprehension(Name('d', Store(), lineno=560, col_offset=31), Call(Attribute(Name('gc', Load(), lineno=560, col_offset=36), 'get_referrers', Load(), lineno=560, col_offset=36), [Subscript(Name('funcs', Load(), lineno=560, col_offset=53), Index(Num(0, lineno=560, col_offset=59)), Load(), lineno=560, col_offset=53)], [], None, None, lineno=560, col_offset=36), [Call(Name('isinstance', Load(), lineno=561, col_offset=32), [Name('d', Load(), lineno=561, col_offset=43), Name('dict', Load(), lineno=561, col_offset=46)], [], None, None, lineno=561, col_offset=32)])], lineno=560, col_offset=25), lineno=560, col_offset=16), If(Compare(Call(Name('len', Load(), lineno=562, col_offset=19), [Name('dicts', Load(), lineno=562, col_offset=23)], [], None, None, lineno=562, col_offset=19), [Eq()], [Num(1, lineno=562, col_offset=33)], lineno=562, col_offset=19), [Assign([Name('classes', Store(), lineno=563, col_offset=20)], ListComp(Name('c', Load(), lineno=563, col_offset=31), [comprehension(Name('c', Store(), lineno=563, col_offset=37), Call(Attribute(Name('gc', Load(), lineno=563, col_offset=42), 'get_referrers', Load(), lineno=563, col_offset=42), [Subscript(Name('dicts', Load(), lineno=563, col_offset=59), Index(Num(0, lineno=563, col_offset=65)), Load(), lineno=563, col_offset=59)], [], None, None, lineno=563, col_offset=42), [Call(Name('hasattr', Load(), lineno=564, col_offset=38), [Name('c', Load(), lineno=564, col_offset=46), Str('__bases__', lineno=564, col_offset=49)], [], None, None, lineno=564, col_offset=38)])], lineno=563, col_offset=31), lineno=563, col_offset=20), If(Compare(Call(Name('len', Load(), lineno=565, col_offset=23), [Name('classes', Load(), lineno=565, col_offset=27)], [], None, None, lineno=565, col_offset=23), [Eq()], [Num(1, lineno=565, col_offset=39)], lineno=565, col_offset=23), [Assign([Name('clsname', Store(), lineno=567, col_offset=24)], Attribute(Subscript(Name('classes', Load(), lineno=567, col_offset=34), Index(Num(0, lineno=567, col_offset=42)), Load(), lineno=567, col_offset=34), '__name__', Load(), lineno=567, col_offset=34), lineno=567, col_offset=24), Assign([Subscript(Attribute(Name('self', Load(), lineno=572, col_offset=24), '_caller_cache', Load(), lineno=572, col_offset=24), Index(Name('code', Load(), lineno=572, col_offset=43)), Store(), lineno=572, col_offset=24)], Name('clsname', Load(), lineno=572, col_offset=51), lineno=572, col_offset=24)], [], lineno=565, col_offset=20)], [], lineno=562, col_offset=16)], [], lineno=559, col_offset=12)], lineno=547, col_offset=8), If(Compare(Name('clsname', Load(), lineno=573, col_offset=11), [IsNot()], [Name('None', Load(), lineno=573, col_offset=26)], lineno=573, col_offset=11), [Assign([Name('funcname', Store(), lineno=574, col_offset=12)], BinOp(Str('%s.%s', lineno=574, col_offset=23), Mod(), Tuple([Name('clsname', Load(), lineno=574, col_offset=34), Name('funcname', Load(), lineno=574, col_offset=43)], Load(), lineno=574, col_offset=34), lineno=574, col_offset=23), lineno=574, col_offset=12)], [], lineno=573, col_offset=8), Return(Tuple([Name('filename', Load(), lineno=576, col_offset=15), Name('modulename', Load(), lineno=576, col_offset=25), Name('funcname', Load(), lineno=576, col_offset=37)], Load(), lineno=576, col_offset=15), lineno=576, col_offset=8)], [], lineno=537, col_offset=4), FunctionDef('globaltrace_trackcallers', arguments([Name('self', Param(), lineno=578, col_offset=33), Name('frame', Param(), lineno=578, col_offset=39), Name('why', Param(), lineno=578, col_offset=46), Name('arg', Param(), lineno=578, col_offset=51)], None, None, []), [Expr(Str('Handler for call events.\n\n        Adds information about who called who to the self._callers dict.\n        ', lineno=582, col_offset=-1), lineno=582, col_offset=-1), If(Compare(Name('why', Load(), lineno=583, col_offset=11), [Eq()], [Str('call', lineno=583, col_offset=18)], lineno=583, col_offset=11), [Assign([Name('this_func', Store(), lineno=585, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=585, col_offset=24), 'file_module_function_of', Load(), lineno=585, col_offset=24), [Name('frame', Load(), lineno=585, col_offset=53)], [], None, None, lineno=585, col_offset=24), lineno=585, col_offset=12), Assign([Name('parent_func', Store(), lineno=586, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=586, col_offset=26), 'file_module_function_of', Load(), lineno=586, col_offset=26), [Attribute(Name('frame', Load(), lineno=586, col_offset=55), 'f_back', Load(), lineno=586, col_offset=55)], [], None, None, lineno=586, col_offset=26), lineno=586, col_offset=12), Assign([Subscript(Attribute(Name('self', Load(), lineno=587, col_offset=12), '_callers', Load(), lineno=587, col_offset=12), Index(Tuple([Name('parent_func', Load(), lineno=587, col_offset=27), Name('this_func', Load(), lineno=587, col_offset=40)], Load(), lineno=587, col_offset=27)), Store(), lineno=587, col_offset=12)], Num(1, lineno=587, col_offset=54), lineno=587, col_offset=12)], [], lineno=583, col_offset=8)], [], lineno=578, col_offset=4), FunctionDef('globaltrace_countfuncs', arguments([Name('self', Param(), lineno=589, col_offset=31), Name('frame', Param(), lineno=589, col_offset=37), Name('why', Param(), lineno=589, col_offset=44), Name('arg', Param(), lineno=589, col_offset=49)], None, None, []), [Expr(Str('Handler for call events.\n\n        Adds (filename, modulename, funcname) to the self._calledfuncs dict.\n        ', lineno=593, col_offset=-1), lineno=593, col_offset=-1), If(Compare(Name('why', Load(), lineno=594, col_offset=11), [Eq()], [Str('call', lineno=594, col_offset=18)], lineno=594, col_offset=11), [Assign([Name('this_func', Store(), lineno=595, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=595, col_offset=24), 'file_module_function_of', Load(), lineno=595, col_offset=24), [Name('frame', Load(), lineno=595, col_offset=53)], [], None, None, lineno=595, col_offset=24), lineno=595, col_offset=12), Assign([Subscript(Attribute(Name('self', Load(), lineno=596, col_offset=12), '_calledfuncs', Load(), lineno=596, col_offset=12), Index(Name('this_func', Load(), lineno=596, col_offset=30)), Store(), lineno=596, col_offset=12)], Num(1, lineno=596, col_offset=43), lineno=596, col_offset=12)], [], lineno=594, col_offset=8)], [], lineno=589, col_offset=4), FunctionDef('globaltrace_lt', arguments([Name('self', Param(), lineno=598, col_offset=23), Name('frame', Param(), lineno=598, col_offset=29), Name('why', Param(), lineno=598, col_offset=36), Name('arg', Param(), lineno=598, col_offset=41)], None, None, []), [Expr(Str("Handler for call events.\n\n        If the code block being entered is to be ignored, returns `None',\n        else returns self.localtrace.\n        ", lineno=603, col_offset=-1), lineno=603, col_offset=-1), If(Compare(Name('why', Load(), lineno=604, col_offset=11), [Eq()], [Str('call', lineno=604, col_offset=18)], lineno=604, col_offset=11), [Assign([Name('code', Store(), lineno=605, col_offset=12)], Attribute(Name('frame', Load(), lineno=605, col_offset=19), 'f_code', Load(), lineno=605, col_offset=19), lineno=605, col_offset=12), Assign([Name('filename', Store(), lineno=606, col_offset=12)], Call(Attribute(Attribute(Name('frame', Load(), lineno=606, col_offset=23), 'f_globals', Load(), lineno=606, col_offset=23), 'get', Load(), lineno=606, col_offset=23), [Str('__file__', lineno=606, col_offset=43), Name('None', Load(), lineno=606, col_offset=55)], [], None, None, lineno=606, col_offset=23), lineno=606, col_offset=12), If(Name('filename', Load(), lineno=607, col_offset=15), [Assign([Name('modulename', Store(), lineno=610, col_offset=16)], Call(Name('modname', Load(), lineno=610, col_offset=29), [Name('filename', Load(), lineno=610, col_offset=37)], [], None, None, lineno=610, col_offset=29), lineno=610, col_offset=16), If(Compare(Name('modulename', Load(), lineno=611, col_offset=19), [IsNot()], [Name('None', Load(), lineno=611, col_offset=37)], lineno=611, col_offset=19), [Assign([Name('ignore_it', Store(), lineno=612, col_offset=20)], Call(Attribute(Attribute(Name('self', Load(), lineno=612, col_offset=32), 'ignore', Load(), lineno=612, col_offset=32), 'names', Load(), lineno=612, col_offset=32), [Name('filename', Load(), lineno=612, col_offset=50), Name('modulename', Load(), lineno=612, col_offset=60)], [], None, None, lineno=612, col_offset=32), lineno=612, col_offset=20), If(UnaryOp(Not(), Name('ignore_it', Load(), lineno=613, col_offset=27), lineno=613, col_offset=23), [If(Attribute(Name('self', Load(), lineno=614, col_offset=27), 'trace', Load(), lineno=614, col_offset=27), [Print(None, [BinOp(Str(' --- modulename: %s, funcname: %s', lineno=615, col_offset=35), Mod(), Tuple([Name('modulename', Load(), lineno=616, col_offset=38), Attribute(Name('code', Load(), lineno=616, col_offset=50), 'co_name', Load(), lineno=616, col_offset=50)], Load(), lineno=616, col_offset=38), lineno=615, col_offset=35)], True, lineno=615, col_offset=28)], [], lineno=614, col_offset=24), Return(Attribute(Name('self', Load(), lineno=617, col_offset=31), 'localtrace', Load(), lineno=617, col_offset=31), lineno=617, col_offset=24)], [], lineno=613, col_offset=20)], [], lineno=611, col_offset=16)], [Return(Name('None', Load(), lineno=619, col_offset=23), lineno=619, col_offset=16)], lineno=607, col_offset=12)], [], lineno=604, col_offset=8)], [], lineno=598, col_offset=4), FunctionDef('localtrace_trace_and_count', arguments([Name('self', Param(), lineno=621, col_offset=35), Name('frame', Param(), lineno=621, col_offset=41), Name('why', Param(), lineno=621, col_offset=48), Name('arg', Param(), lineno=621, col_offset=53)], None, None, []), [If(Compare(Name('why', Load(), lineno=622, col_offset=11), [Eq()], [Str('line', lineno=622, col_offset=18)], lineno=622, col_offset=11), [Assign([Name('filename', Store(), lineno=624, col_offset=12)], Attribute(Attribute(Name('frame', Load(), lineno=624, col_offset=23), 'f_code', Load(), lineno=624, col_offset=23), 'co_filename', Load(), lineno=624, col_offset=23), lineno=624, col_offset=12), Assign([Name('lineno', Store(), lineno=625, col_offset=12)], Attribute(Name('frame', Load(), lineno=625, col_offset=21), 'f_lineno', Load(), lineno=625, col_offset=21), lineno=625, col_offset=12), Assign([Name('key', Store(), lineno=626, col_offset=12)], Tuple([Name('filename', Load(), lineno=626, col_offset=18), Name('lineno', Load(), lineno=626, col_offset=28)], Load(), lineno=626, col_offset=18), lineno=626, col_offset=12), Assign([Subscript(Attribute(Name('self', Load(), lineno=627, col_offset=12), 'counts', Load(), lineno=627, col_offset=12), Index(Name('key', Load(), lineno=627, col_offset=24)), Store(), lineno=627, col_offset=12)], BinOp(Call(Attribute(Attribute(Name('self', Load(), lineno=627, col_offset=31), 'counts', Load(), lineno=627, col_offset=31), 'get', Load(), lineno=627, col_offset=31), [Name('key', Load(), lineno=627, col_offset=47), Num(0, lineno=627, col_offset=52)], [], None, None, lineno=627, col_offset=31), Add(), Num(1, lineno=627, col_offset=57), lineno=627, col_offset=31), lineno=627, col_offset=12), If(Attribute(Name('self', Load(), lineno=629, col_offset=15), 'start_time', Load(), lineno=629, col_offset=15), [Print(None, [BinOp(Str('%.2f', lineno=630, col_offset=22), Mod(), BinOp(Call(Attribute(Name('time', Load(), lineno=630, col_offset=32), 'time', Load(), lineno=630, col_offset=32), [], [], None, None, lineno=630, col_offset=32), Sub(), Attribute(Name('self', Load(), lineno=630, col_offset=46), 'start_time', Load(), lineno=630, col_offset=46), lineno=630, col_offset=32), lineno=630, col_offset=22)], False, lineno=630, col_offset=16)], [], lineno=629, col_offset=12), Assign([Name('bname', Store(), lineno=631, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=631, col_offset=20), 'path', Load(), lineno=631, col_offset=20), 'basename', Load(), lineno=631, col_offset=20), [Name('filename', Load(), lineno=631, col_offset=37)], [], None, None, lineno=631, col_offset=20), lineno=631, col_offset=12), Print(None, [BinOp(Str('%s(%d): %s', lineno=632, col_offset=18), Mod(), Tuple([Name('bname', Load(), lineno=632, col_offset=34), Name('lineno', Load(), lineno=632, col_offset=41), Call(Attribute(Name('linecache', Load(), lineno=633, col_offset=34), 'getline', Load(), lineno=633, col_offset=34), [Name('filename', Load(), lineno=633, col_offset=52), Name('lineno', Load(), lineno=633, col_offset=62)], [], None, None, lineno=633, col_offset=34)], Load(), lineno=632, col_offset=34), lineno=632, col_offset=18)], False, lineno=632, col_offset=12)], [], lineno=622, col_offset=8), Return(Attribute(Name('self', Load(), lineno=634, col_offset=15), 'localtrace', Load(), lineno=634, col_offset=15), lineno=634, col_offset=8)], [], lineno=621, col_offset=4), FunctionDef('localtrace_trace', arguments([Name('self', Param(), lineno=636, col_offset=25), Name('frame', Param(), lineno=636, col_offset=31), Name('why', Param(), lineno=636, col_offset=38), Name('arg', Param(), lineno=636, col_offset=43)], None, None, []), [If(Compare(Name('why', Load(), lineno=637, col_offset=11), [Eq()], [Str('line', lineno=637, col_offset=18)], lineno=637, col_offset=11), [Assign([Name('filename', Store(), lineno=639, col_offset=12)], Attribute(Attribute(Name('frame', Load(), lineno=639, col_offset=23), 'f_code', Load(), lineno=639, col_offset=23), 'co_filename', Load(), lineno=639, col_offset=23), lineno=639, col_offset=12), Assign([Name('lineno', Store(), lineno=640, col_offset=12)], Attribute(Name('frame', Load(), lineno=640, col_offset=21), 'f_lineno', Load(), lineno=640, col_offset=21), lineno=640, col_offset=12), If(Attribute(Name('self', Load(), lineno=642, col_offset=15), 'start_time', Load(), lineno=642, col_offset=15), [Print(None, [BinOp(Str('%.2f', lineno=643, col_offset=22), Mod(), BinOp(Call(Attribute(Name('time', Load(), lineno=643, col_offset=32), 'time', Load(), lineno=643, col_offset=32), [], [], None, None, lineno=643, col_offset=32), Sub(), Attribute(Name('self', Load(), lineno=643, col_offset=46), 'start_time', Load(), lineno=643, col_offset=46), lineno=643, col_offset=32), lineno=643, col_offset=22)], False, lineno=643, col_offset=16)], [], lineno=642, col_offset=12), Assign([Name('bname', Store(), lineno=644, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=644, col_offset=20), 'path', Load(), lineno=644, col_offset=20), 'basename', Load(), lineno=644, col_offset=20), [Name('filename', Load(), lineno=644, col_offset=37)], [], None, None, lineno=644, col_offset=20), lineno=644, col_offset=12), Print(None, [BinOp(Str('%s(%d): %s', lineno=645, col_offset=18), Mod(), Tuple([Name('bname', Load(), lineno=645, col_offset=34), Name('lineno', Load(), lineno=645, col_offset=41), Call(Attribute(Name('linecache', Load(), lineno=646, col_offset=34), 'getline', Load(), lineno=646, col_offset=34), [Name('filename', Load(), lineno=646, col_offset=52), Name('lineno', Load(), lineno=646, col_offset=62)], [], None, None, lineno=646, col_offset=34)], Load(), lineno=645, col_offset=34), lineno=645, col_offset=18)], False, lineno=645, col_offset=12)], [], lineno=637, col_offset=8), Return(Attribute(Name('self', Load(), lineno=647, col_offset=15), 'localtrace', Load(), lineno=647, col_offset=15), lineno=647, col_offset=8)], [], lineno=636, col_offset=4), FunctionDef('localtrace_count', arguments([Name('self', Param(), lineno=649, col_offset=25), Name('frame', Param(), lineno=649, col_offset=31), Name('why', Param(), lineno=649, col_offset=38), Name('arg', Param(), lineno=649, col_offset=43)], None, None, []), [If(Compare(Name('why', Load(), lineno=650, col_offset=11), [Eq()], [Str('line', lineno=650, col_offset=18)], lineno=650, col_offset=11), [Assign([Name('filename', Store(), lineno=651, col_offset=12)], Attribute(Attribute(Name('frame', Load(), lineno=651, col_offset=23), 'f_code', Load(), lineno=651, col_offset=23), 'co_filename', Load(), lineno=651, col_offset=23), lineno=651, col_offset=12), Assign([Name('lineno', Store(), lineno=652, col_offset=12)], Attribute(Name('frame', Load(), lineno=652, col_offset=21), 'f_lineno', Load(), lineno=652, col_offset=21), lineno=652, col_offset=12), Assign([Name('key', Store(), lineno=653, col_offset=12)], Tuple([Name('filename', Load(), lineno=653, col_offset=18), Name('lineno', Load(), lineno=653, col_offset=28)], Load(), lineno=653, col_offset=18), lineno=653, col_offset=12), Assign([Subscript(Attribute(Name('self', Load(), lineno=654, col_offset=12), 'counts', Load(), lineno=654, col_offset=12), Index(Name('key', Load(), lineno=654, col_offset=24)), Store(), lineno=654, col_offset=12)], BinOp(Call(Attribute(Attribute(Name('self', Load(), lineno=654, col_offset=31), 'counts', Load(), lineno=654, col_offset=31), 'get', Load(), lineno=654, col_offset=31), [Name('key', Load(), lineno=654, col_offset=47), Num(0, lineno=654, col_offset=52)], [], None, None, lineno=654, col_offset=31), Add(), Num(1, lineno=654, col_offset=57), lineno=654, col_offset=31), lineno=654, col_offset=12)], [], lineno=650, col_offset=8), Return(Attribute(Name('self', Load(), lineno=655, col_offset=15), 'localtrace', Load(), lineno=655, col_offset=15), lineno=655, col_offset=8)], [], lineno=649, col_offset=4), FunctionDef('results', arguments([Name('self', Param(), lineno=657, col_offset=16)], None, None, []), [Return(Call(Name('CoverageResults', Load(), lineno=658, col_offset=15), [Attribute(Name('self', Load(), lineno=658, col_offset=31), 'counts', Load(), lineno=658, col_offset=31)], [keyword('infile', Attribute(Name('self', Load(), lineno=658, col_offset=51), 'infile', Load(), lineno=658, col_offset=51)), keyword('outfile', Attribute(Name('self', Load(), lineno=659, col_offset=39), 'outfile', Load(), lineno=659, col_offset=39)), keyword('calledfuncs', Attribute(Name('self', Load(), lineno=660, col_offset=43), '_calledfuncs', Load(), lineno=660, col_offset=43)), keyword('callers', Attribute(Name('self', Load(), lineno=661, col_offset=39), '_callers', Load(), lineno=661, col_offset=39))], None, None, lineno=658, col_offset=15), lineno=658, col_offset=8)], [], lineno=657, col_offset=4)], [], lineno=450, col_offset=0), FunctionDef('_err_exit', arguments([Name('msg', Param(), lineno=663, col_offset=14)], None, None, []), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=664, col_offset=4), 'stderr', Load(), lineno=664, col_offset=4), 'write', Load(), lineno=664, col_offset=4), [BinOp(Str('%s: %s\n', lineno=664, col_offset=21), Mod(), Tuple([Subscript(Attribute(Name('sys', Load(), lineno=664, col_offset=35), 'argv', Load(), lineno=664, col_offset=35), Index(Num(0, lineno=664, col_offset=44)), Load(), lineno=664, col_offset=35), Name('msg', Load(), lineno=664, col_offset=48)], Load(), lineno=664, col_offset=35), lineno=664, col_offset=21)], [], None, None, lineno=664, col_offset=4), lineno=664, col_offset=4), Expr(Call(Attribute(Name('sys', Load(), lineno=665, col_offset=4), 'exit', Load(), lineno=665, col_offset=4), [Num(1, lineno=665, col_offset=13)], [], None, None, lineno=665, col_offset=4), lineno=665, col_offset=4)], [], lineno=663, col_offset=0), FunctionDef('main', arguments([Name('argv', Param(), lineno=667, col_offset=9)], None, None, [Name('None', Load(), lineno=667, col_offset=14)]), [Import([alias('getopt', None)], lineno=668, col_offset=4), If(Compare(Name('argv', Load(), lineno=670, col_offset=7), [Is()], [Name('None', Load(), lineno=670, col_offset=15)], lineno=670, col_offset=7), [Assign([Name('argv', Store(), lineno=671, col_offset=8)], Attribute(Name('sys', Load(), lineno=671, col_offset=15), 'argv', Load(), lineno=671, col_offset=15), lineno=671, col_offset=8)], [], lineno=670, col_offset=4), TryExcept([Assign([Tuple([Name('opts', Store(), lineno=673, col_offset=8), Name('prog_argv', Store(), lineno=673, col_offset=14)], Store(), lineno=673, col_offset=8)], Call(Attribute(Name('getopt', Load(), lineno=673, col_offset=26), 'getopt', Load(), lineno=673, col_offset=26), [Subscript(Name('argv', Load(), lineno=673, col_offset=40), Slice(Num(1, lineno=673, col_offset=45), None, None), Load(), lineno=673, col_offset=40), Str('tcrRf:d:msC:lTg', lineno=673, col_offset=50), List([Str('help', lineno=674, col_offset=41), Str('version', lineno=674, col_offset=49), Str('trace', lineno=674, col_offset=60), Str('count', lineno=674, col_offset=69), Str('report', lineno=675, col_offset=41), Str('no-report', lineno=675, col_offset=51), Str('summary', lineno=675, col_offset=64), Str('file=', lineno=676, col_offset=41), Str('missing', lineno=676, col_offset=50), Str('ignore-module=', lineno=677, col_offset=41), Str('ignore-dir=', lineno=677, col_offset=59), Str('coverdir=', lineno=678, col_offset=41), Str('listfuncs', lineno=678, col_offset=54), Str('trackcalls', lineno=679, col_offset=41), Str('timing', lineno=679, col_offset=55)], Load(), lineno=674, col_offset=40)], [], None, None, lineno=673, col_offset=26), lineno=673, col_offset=8)], [ExceptHandler(Attribute(Name('getopt', Load(), lineno=681, col_offset=11), 'error', Load(), lineno=681, col_offset=11), Name('msg', Store(), lineno=681, col_offset=25), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=682, col_offset=8), 'stderr', Load(), lineno=682, col_offset=8), 'write', Load(), lineno=682, col_offset=8), [BinOp(Str('%s: %s\n', lineno=682, col_offset=25), Mod(), Tuple([Subscript(Attribute(Name('sys', Load(), lineno=682, col_offset=39), 'argv', Load(), lineno=682, col_offset=39), Index(Num(0, lineno=682, col_offset=48)), Load(), lineno=682, col_offset=39), Name('msg', Load(), lineno=682, col_offset=52)], Load(), lineno=682, col_offset=39), lineno=682, col_offset=25)], [], None, None, lineno=682, col_offset=8), lineno=682, col_offset=8), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=683, col_offset=8), 'stderr', Load(), lineno=683, col_offset=8), 'write', Load(), lineno=683, col_offset=8), [BinOp(Str("Try `%s --help' for more information\n", lineno=683, col_offset=25), Mod(), Subscript(Attribute(Name('sys', Load(), lineno=684, col_offset=27), 'argv', Load(), lineno=684, col_offset=27), Index(Num(0, lineno=684, col_offset=36)), Load(), lineno=684, col_offset=27), lineno=683, col_offset=25)], [], None, None, lineno=683, col_offset=8), lineno=683, col_offset=8), Expr(Call(Attribute(Name('sys', Load(), lineno=685, col_offset=8), 'exit', Load(), lineno=685, col_offset=8), [Num(1, lineno=685, col_offset=17)], [], None, None, lineno=685, col_offset=8), lineno=685, col_offset=8)], lineno=681, col_offset=4)], [], lineno=672, col_offset=4), Assign([Name('trace', Store(), lineno=687, col_offset=4)], Num(0, lineno=687, col_offset=12), lineno=687, col_offset=4), Assign([Name('count', Store(), lineno=688, col_offset=4)], Num(0, lineno=688, col_offset=12), lineno=688, col_offset=4), Assign([Name('report', Store(), lineno=689, col_offset=4)], Num(0, lineno=689, col_offset=13), lineno=689, col_offset=4), Assign([Name('no_report', Store(), lineno=690, col_offset=4)], Num(0, lineno=690, col_offset=16), lineno=690, col_offset=4), Assign([Name('counts_file', Store(), lineno=691, col_offset=4)], Name('None', Load(), lineno=691, col_offset=18), lineno=691, col_offset=4), Assign([Name('missing', Store(), lineno=692, col_offset=4)], Num(0, lineno=692, col_offset=14), lineno=692, col_offset=4), Assign([Name('ignore_modules', Store(), lineno=693, col_offset=4)], List([], Load(), lineno=693, col_offset=21), lineno=693, col_offset=4), Assign([Name('ignore_dirs', Store(), lineno=694, col_offset=4)], List([], Load(), lineno=694, col_offset=18), lineno=694, col_offset=4), Assign([Name('coverdir', Store(), lineno=695, col_offset=4)], Name('None', Load(), lineno=695, col_offset=15), lineno=695, col_offset=4), Assign([Name('summary', Store(), lineno=696, col_offset=4)], Num(0, lineno=696, col_offset=14), lineno=696, col_offset=4), Assign([Name('listfuncs', Store(), lineno=697, col_offset=4)], Name('False', Load(), lineno=697, col_offset=16), lineno=697, col_offset=4), Assign([Name('countcallers', Store(), lineno=698, col_offset=4)], Name('False', Load(), lineno=698, col_offset=19), lineno=698, col_offset=4), Assign([Name('timing', Store(), lineno=699, col_offset=4)], Name('False', Load(), lineno=699, col_offset=13), lineno=699, col_offset=4), For(Tuple([Name('opt', Store(), lineno=701, col_offset=8), Name('val', Store(), lineno=701, col_offset=13)], Store(), lineno=701, col_offset=8), Name('opts', Load(), lineno=701, col_offset=20), [If(Compare(Name('opt', Load(), lineno=702, col_offset=11), [Eq()], [Str('--help', lineno=702, col_offset=18)], lineno=702, col_offset=11), [Expr(Call(Name('usage', Load(), lineno=703, col_offset=12), [Attribute(Name('sys', Load(), lineno=703, col_offset=18), 'stdout', Load(), lineno=703, col_offset=18)], [], None, None, lineno=703, col_offset=12), lineno=703, col_offset=12), Expr(Call(Attribute(Name('sys', Load(), lineno=704, col_offset=12), 'exit', Load(), lineno=704, col_offset=12), [Num(0, lineno=704, col_offset=21)], [], None, None, lineno=704, col_offset=12), lineno=704, col_offset=12)], [], lineno=702, col_offset=8), If(Compare(Name('opt', Load(), lineno=706, col_offset=11), [Eq()], [Str('--version', lineno=706, col_offset=18)], lineno=706, col_offset=11), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=707, col_offset=12), 'stdout', Load(), lineno=707, col_offset=12), 'write', Load(), lineno=707, col_offset=12), [Str('trace 2.0\n', lineno=707, col_offset=29)], [], None, None, lineno=707, col_offset=12), lineno=707, col_offset=12), Expr(Call(Attribute(Name('sys', Load(), lineno=708, col_offset=12), 'exit', Load(), lineno=708, col_offset=12), [Num(0, lineno=708, col_offset=21)], [], None, None, lineno=708, col_offset=12), lineno=708, col_offset=12)], [], lineno=706, col_offset=8), If(BoolOp(Or(), [Compare(Name('opt', Load(), lineno=710, col_offset=11), [Eq()], [Str('-T', lineno=710, col_offset=18)], lineno=710, col_offset=11), Compare(Name('opt', Load(), lineno=710, col_offset=26), [Eq()], [Str('--trackcalls', lineno=710, col_offset=33)], lineno=710, col_offset=26)], lineno=710, col_offset=11), [Assign([Name('countcallers', Store(), lineno=711, col_offset=12)], Name('True', Load(), lineno=711, col_offset=27), lineno=711, col_offset=12), Continue( lineno=712, col_offset=12)], [], lineno=710, col_offset=8), If(BoolOp(Or(), [Compare(Name('opt', Load(), lineno=714, col_offset=11), [Eq()], [Str('-l', lineno=714, col_offset=18)], lineno=714, col_offset=11), Compare(Name('opt', Load(), lineno=714, col_offset=26), [Eq()], [Str('--listfuncs', lineno=714, col_offset=33)], lineno=714, col_offset=26)], lineno=714, col_offset=11), [Assign([Name('listfuncs', Store(), lineno=715, col_offset=12)], Name('True', Load(), lineno=715, col_offset=24), lineno=715, col_offset=12), Continue( lineno=716, col_offset=12)], [], lineno=714, col_offset=8), If(BoolOp(Or(), [Compare(Name('opt', Load(), lineno=718, col_offset=11), [Eq()], [Str('-g', lineno=718, col_offset=18)], lineno=718, col_offset=11), Compare(Name('opt', Load(), lineno=718, col_offset=26), [Eq()], [Str('--timing', lineno=718, col_offset=33)], lineno=718, col_offset=26)], lineno=718, col_offset=11), [Assign([Name('timing', Store(), lineno=719, col_offset=12)], Name('True', Load(), lineno=719, col_offset=21), lineno=719, col_offset=12), Continue( lineno=720, col_offset=12)], [], lineno=718, col_offset=8), If(BoolOp(Or(), [Compare(Name('opt', Load(), lineno=722, col_offset=11), [Eq()], [Str('-t', lineno=722, col_offset=18)], lineno=722, col_offset=11), Compare(Name('opt', Load(), lineno=722, col_offset=26), [Eq()], [Str('--trace', lineno=722, col_offset=33)], lineno=722, col_offset=26)], lineno=722, col_offset=11), [Assign([Name('trace', Store(), lineno=723, col_offset=12)], Num(1, lineno=723, col_offset=20), lineno=723, col_offset=12), Continue( lineno=724, col_offset=12)], [], lineno=722, col_offset=8), If(BoolOp(Or(), [Compare(Name('opt', Load(), lineno=726, col_offset=11), [Eq()], [Str('-c', lineno=726, col_offset=18)], lineno=726, col_offset=11), Compare(Name('opt', Load(), lineno=726, col_offset=26), [Eq()], [Str('--count', lineno=726, col_offset=33)], lineno=726, col_offset=26)], lineno=726, col_offset=11), [Assign([Name('count', Store(), lineno=727, col_offset=12)], Num(1, lineno=727, col_offset=20), lineno=727, col_offset=12), Continue( lineno=728, col_offset=12)], [], lineno=726, col_offset=8), If(BoolOp(Or(), [Compare(Name('opt', Load(), lineno=730, col_offset=11), [Eq()], [Str('-r', lineno=730, col_offset=18)], lineno=730, col_offset=11), Compare(Name('opt', Load(), lineno=730, col_offset=26), [Eq()], [Str('--report', lineno=730, col_offset=33)], lineno=730, col_offset=26)], lineno=730, col_offset=11), [Assign([Name('report', Store(), lineno=731, col_offset=12)], Num(1, lineno=731, col_offset=21), lineno=731, col_offset=12), Continue( lineno=732, col_offset=12)], [], lineno=730, col_offset=8), If(BoolOp(Or(), [Compare(Name('opt', Load(), lineno=734, col_offset=11), [Eq()], [Str('-R', lineno=734, col_offset=18)], lineno=734, col_offset=11), Compare(Name('opt', Load(), lineno=734, col_offset=26), [Eq()], [Str('--no-report', lineno=734, col_offset=33)], lineno=734, col_offset=26)], lineno=734, col_offset=11), [Assign([Name('no_report', Store(), lineno=735, col_offset=12)], Num(1, lineno=735, col_offset=24), lineno=735, col_offset=12), Continue( lineno=736, col_offset=12)], [], lineno=734, col_offset=8), If(BoolOp(Or(), [Compare(Name('opt', Load(), lineno=738, col_offset=11), [Eq()], [Str('-f', lineno=738, col_offset=18)], lineno=738, col_offset=11), Compare(Name('opt', Load(), lineno=738, col_offset=26), [Eq()], [Str('--file', lineno=738, col_offset=33)], lineno=738, col_offset=26)], lineno=738, col_offset=11), [Assign([Name('counts_file', Store(), lineno=739, col_offset=12)], Name('val', Load(), lineno=739, col_offset=26), lineno=739, col_offset=12), Continue( lineno=740, col_offset=12)], [], lineno=738, col_offset=8), If(BoolOp(Or(), [Compare(Name('opt', Load(), lineno=742, col_offset=11), [Eq()], [Str('-m', lineno=742, col_offset=18)], lineno=742, col_offset=11), Compare(Name('opt', Load(), lineno=742, col_offset=26), [Eq()], [Str('--missing', lineno=742, col_offset=33)], lineno=742, col_offset=26)], lineno=742, col_offset=11), [Assign([Name('missing', Store(), lineno=743, col_offset=12)], Num(1, lineno=743, col_offset=22), lineno=743, col_offset=12), Continue( lineno=744, col_offset=12)], [], lineno=742, col_offset=8), If(BoolOp(Or(), [Compare(Name('opt', Load(), lineno=746, col_offset=11), [Eq()], [Str('-C', lineno=746, col_offset=18)], lineno=746, col_offset=11), Compare(Name('opt', Load(), lineno=746, col_offset=26), [Eq()], [Str('--coverdir', lineno=746, col_offset=33)], lineno=746, col_offset=26)], lineno=746, col_offset=11), [Assign([Name('coverdir', Store(), lineno=747, col_offset=12)], Name('val', Load(), lineno=747, col_offset=23), lineno=747, col_offset=12), Continue( lineno=748, col_offset=12)], [], lineno=746, col_offset=8), If(BoolOp(Or(), [Compare(Name('opt', Load(), lineno=750, col_offset=11), [Eq()], [Str('-s', lineno=750, col_offset=18)], lineno=750, col_offset=11), Compare(Name('opt', Load(), lineno=750, col_offset=26), [Eq()], [Str('--summary', lineno=750, col_offset=33)], lineno=750, col_offset=26)], lineno=750, col_offset=11), [Assign([Name('summary', Store(), lineno=751, col_offset=12)], Num(1, lineno=751, col_offset=22), lineno=751, col_offset=12), Continue( lineno=752, col_offset=12)], [], lineno=750, col_offset=8), If(Compare(Name('opt', Load(), lineno=754, col_offset=11), [Eq()], [Str('--ignore-module', lineno=754, col_offset=18)], lineno=754, col_offset=11), [For(Name('mod', Store(), lineno=755, col_offset=16), Call(Attribute(Name('val', Load(), lineno=755, col_offset=23), 'split', Load(), lineno=755, col_offset=23), [Str(',', lineno=755, col_offset=33)], [], None, None, lineno=755, col_offset=23), [Expr(Call(Attribute(Name('ignore_modules', Load(), lineno=756, col_offset=16), 'append', Load(), lineno=756, col_offset=16), [Call(Attribute(Name('mod', Load(), lineno=756, col_offset=38), 'strip', Load(), lineno=756, col_offset=38), [], [], None, None, lineno=756, col_offset=38)], [], None, None, lineno=756, col_offset=16), lineno=756, col_offset=16)], [], lineno=755, col_offset=12), Continue( lineno=757, col_offset=12)], [], lineno=754, col_offset=8), If(Compare(Name('opt', Load(), lineno=759, col_offset=11), [Eq()], [Str('--ignore-dir', lineno=759, col_offset=18)], lineno=759, col_offset=11), [For(Name('s', Store(), lineno=760, col_offset=16), Call(Attribute(Name('val', Load(), lineno=760, col_offset=21), 'split', Load(), lineno=760, col_offset=21), [Attribute(Name('os', Load(), lineno=760, col_offset=31), 'pathsep', Load(), lineno=760, col_offset=31)], [], None, None, lineno=760, col_offset=21), [Assign([Name('s', Store(), lineno=761, col_offset=16)], Call(Attribute(Attribute(Name('os', Load(), lineno=761, col_offset=20), 'path', Load(), lineno=761, col_offset=20), 'expandvars', Load(), lineno=761, col_offset=20), [Name('s', Load(), lineno=761, col_offset=39)], [], None, None, lineno=761, col_offset=20), lineno=761, col_offset=16), Assign([Name('s', Store(), lineno=764, col_offset=16)], Call(Attribute(Name('s', Load(), lineno=764, col_offset=20), 'replace', Load(), lineno=764, col_offset=20), [Str('$prefix', lineno=764, col_offset=30), Call(Attribute(Attribute(Name('os', Load(), lineno=765, col_offset=30), 'path', Load(), lineno=765, col_offset=30), 'join', Load(), lineno=765, col_offset=30), [Attribute(Name('sys', Load(), lineno=765, col_offset=43), 'prefix', Load(), lineno=765, col_offset=43), Str('lib', lineno=765, col_offset=55), BinOp(Str('python', lineno=766, col_offset=43), Add(), Subscript(Attribute(Name('sys', Load(), lineno=766, col_offset=54), 'version', Load(), lineno=766, col_offset=54), Slice(None, Num(3, lineno=766, col_offset=67), None), Load(), lineno=766, col_offset=54), lineno=766, col_offset=43)], [], None, None, lineno=765, col_offset=30)], [], None, None, lineno=764, col_offset=20), lineno=764, col_offset=16), Assign([Name('s', Store(), lineno=767, col_offset=16)], Call(Attribute(Name('s', Load(), lineno=767, col_offset=20), 'replace', Load(), lineno=767, col_offset=20), [Str('$exec_prefix', lineno=767, col_offset=30), Call(Attribute(Attribute(Name('os', Load(), lineno=768, col_offset=30), 'path', Load(), lineno=768, col_offset=30), 'join', Load(), lineno=768, col_offset=30), [Attribute(Name('sys', Load(), lineno=768, col_offset=43), 'exec_prefix', Load(), lineno=768, col_offset=43), Str('lib', lineno=768, col_offset=60), BinOp(Str('python', lineno=769, col_offset=43), Add(), Subscript(Attribute(Name('sys', Load(), lineno=769, col_offset=54), 'version', Load(), lineno=769, col_offset=54), Slice(None, Num(3, lineno=769, col_offset=67), None), Load(), lineno=769, col_offset=54), lineno=769, col_offset=43)], [], None, None, lineno=768, col_offset=30)], [], None, None, lineno=767, col_offset=20), lineno=767, col_offset=16), Assign([Name('s', Store(), lineno=770, col_offset=16)], Call(Attribute(Attribute(Name('os', Load(), lineno=770, col_offset=20), 'path', Load(), lineno=770, col_offset=20), 'normpath', Load(), lineno=770, col_offset=20), [Name('s', Load(), lineno=770, col_offset=37)], [], None, None, lineno=770, col_offset=20), lineno=770, col_offset=16), Expr(Call(Attribute(Name('ignore_dirs', Load(), lineno=771, col_offset=16), 'append', Load(), lineno=771, col_offset=16), [Name('s', Load(), lineno=771, col_offset=35)], [], None, None, lineno=771, col_offset=16), lineno=771, col_offset=16)], [], lineno=760, col_offset=12), Continue( lineno=772, col_offset=12)], [], lineno=759, col_offset=8), Assert(Num(0, lineno=774, col_offset=15), Str('Should never get here', lineno=774, col_offset=18), lineno=774, col_offset=8)], [], lineno=701, col_offset=4), If(BoolOp(And(), [Name('listfuncs', Load(), lineno=776, col_offset=7), BoolOp(Or(), [Name('count', Load(), lineno=776, col_offset=22), Name('trace', Load(), lineno=776, col_offset=31)], lineno=776, col_offset=22)], lineno=776, col_offset=7), [Expr(Call(Name('_err_exit', Load(), lineno=777, col_offset=8), [Str('cannot specify both --listfuncs and (--trace or --count)', lineno=777, col_offset=18)], [], None, None, lineno=777, col_offset=8), lineno=777, col_offset=8)], [], lineno=776, col_offset=4), If(UnaryOp(Not(), BoolOp(Or(), [Name('count', Load(), lineno=779, col_offset=12), Name('trace', Load(), lineno=779, col_offset=21), Name('report', Load(), lineno=779, col_offset=30), Name('listfuncs', Load(), lineno=779, col_offset=40), Name('countcallers', Load(), lineno=779, col_offset=53)], lineno=779, col_offset=12), lineno=779, col_offset=7), [Expr(Call(Name('_err_exit', Load(), lineno=780, col_offset=8), [Str('must specify one of --trace, --count, --report, --listfuncs, or --trackcalls', lineno=780, col_offset=18)], [], None, None, lineno=780, col_offset=8), lineno=780, col_offset=8)], [], lineno=779, col_offset=4), If(BoolOp(And(), [Name('report', Load(), lineno=783, col_offset=7), Name('no_report', Load(), lineno=783, col_offset=18)], lineno=783, col_offset=7), [Expr(Call(Name('_err_exit', Load(), lineno=784, col_offset=8), [Str('cannot specify both --report and --no-report', lineno=784, col_offset=18)], [], None, None, lineno=784, col_offset=8), lineno=784, col_offset=8)], [], lineno=783, col_offset=4), If(BoolOp(And(), [Name('report', Load(), lineno=786, col_offset=7), UnaryOp(Not(), Name('counts_file', Load(), lineno=786, col_offset=22), lineno=786, col_offset=18)], lineno=786, col_offset=7), [Expr(Call(Name('_err_exit', Load(), lineno=787, col_offset=8), [Str('--report requires a --file', lineno=787, col_offset=18)], [], None, None, lineno=787, col_offset=8), lineno=787, col_offset=8)], [], lineno=786, col_offset=4), If(BoolOp(And(), [Name('no_report', Load(), lineno=789, col_offset=7), Compare(Call(Name('len', Load(), lineno=789, col_offset=21), [Name('prog_argv', Load(), lineno=789, col_offset=25)], [], None, None, lineno=789, col_offset=21), [Eq()], [Num(0, lineno=789, col_offset=39)], lineno=789, col_offset=21)], lineno=789, col_offset=7), [Expr(Call(Name('_err_exit', Load(), lineno=790, col_offset=8), [Str('missing name of file to run', lineno=790, col_offset=18)], [], None, None, lineno=790, col_offset=8), lineno=790, col_offset=8)], [], lineno=789, col_offset=4), If(Name('report', Load(), lineno=793, col_offset=7), [Assign([Name('results', Store(), lineno=794, col_offset=8)], Call(Name('CoverageResults', Load(), lineno=794, col_offset=18), [], [keyword('infile', Name('counts_file', Load(), lineno=794, col_offset=41)), keyword('outfile', Name('counts_file', Load(), lineno=794, col_offset=62))], None, None, lineno=794, col_offset=18), lineno=794, col_offset=8), Expr(Call(Attribute(Name('results', Load(), lineno=795, col_offset=8), 'write_results', Load(), lineno=795, col_offset=8), [Name('missing', Load(), lineno=795, col_offset=30)], [keyword('summary', Name('summary', Load(), lineno=795, col_offset=47)), keyword('coverdir', Name('coverdir', Load(), lineno=795, col_offset=65))], None, None, lineno=795, col_offset=8), lineno=795, col_offset=8)], [Assign([Attribute(Name('sys', Load(), lineno=797, col_offset=8), 'argv', Store(), lineno=797, col_offset=8)], Name('prog_argv', Load(), lineno=797, col_offset=19), lineno=797, col_offset=8), Assign([Name('progname', Store(), lineno=798, col_offset=8)], Subscript(Name('prog_argv', Load(), lineno=798, col_offset=19), Index(Num(0, lineno=798, col_offset=29)), Load(), lineno=798, col_offset=19), lineno=798, col_offset=8), Assign([Subscript(Attribute(Name('sys', Load(), lineno=799, col_offset=8), 'path', Load(), lineno=799, col_offset=8), Index(Num(0, lineno=799, col_offset=17)), Store(), lineno=799, col_offset=8)], Subscript(Call(Attribute(Attribute(Name('os', Load(), lineno=799, col_offset=22), 'path', Load(), lineno=799, col_offset=22), 'split', Load(), lineno=799, col_offset=22), [Name('progname', Load(), lineno=799, col_offset=36)], [], None, None, lineno=799, col_offset=22), Index(Num(0, lineno=799, col_offset=46)), Load(), lineno=799, col_offset=22), lineno=799, col_offset=8), Assign([Name('t', Store(), lineno=801, col_offset=8)], Call(Name('Trace', Load(), lineno=801, col_offset=12), [Name('count', Load(), lineno=801, col_offset=18), Name('trace', Load(), lineno=801, col_offset=25)], [keyword('countfuncs', Name('listfuncs', Load(), lineno=801, col_offset=43)), keyword('countcallers', Name('countcallers', Load(), lineno=802, col_offset=31)), keyword('ignoremods', Name('ignore_modules', Load(), lineno=802, col_offset=56)), keyword('ignoredirs', Name('ignore_dirs', Load(), lineno=803, col_offset=29)), keyword('infile', Name('counts_file', Load(), lineno=803, col_offset=49)), keyword('outfile', Name('counts_file', Load(), lineno=804, col_offset=26)), keyword('timing', Name('timing', Load(), lineno=804, col_offset=46))], None, None, lineno=801, col_offset=12), lineno=801, col_offset=8), TryExcept([With(Call(Name('open', Load(), lineno=806, col_offset=17), [Name('progname', Load(), lineno=806, col_offset=22)], [], None, None, lineno=806, col_offset=17), Name('fp', Store(), lineno=806, col_offset=35), [Assign([Name('code', Store(), lineno=807, col_offset=16)], Call(Name('compile', Load(), lineno=807, col_offset=23), [Call(Attribute(Name('fp', Load(), lineno=807, col_offset=31), 'read', Load(), lineno=807, col_offset=31), [], [], None, None, lineno=807, col_offset=31), Name('progname', Load(), lineno=807, col_offset=42), Str('exec', lineno=807, col_offset=52)], [], None, None, lineno=807, col_offset=23), lineno=807, col_offset=16)], lineno=806, col_offset=17), Assign([Name('globs', Store(), lineno=809, col_offset=12)], Dict([Str('__file__', lineno=810, col_offset=16), Str('__name__', lineno=811, col_offset=16), Str('__package__', lineno=812, col_offset=16), Str('__cached__', lineno=813, col_offset=16)], [Name('progname', Load(), lineno=810, col_offset=28), Str('__main__', lineno=811, col_offset=28), Name('None', Load(), lineno=812, col_offset=31), Name('None', Load(), lineno=813, col_offset=30)], lineno=809, col_offset=20), lineno=809, col_offset=12), Expr(Call(Attribute(Name('t', Load(), lineno=815, col_offset=12), 'runctx', Load(), lineno=815, col_offset=12), [Name('code', Load(), lineno=815, col_offset=21), Name('globs', Load(), lineno=815, col_offset=27), Name('globs', Load(), lineno=815, col_offset=34)], [], None, None, lineno=815, col_offset=12), lineno=815, col_offset=12)], [ExceptHandler(Name('IOError', Load(), lineno=816, col_offset=15), Name('err', Store(), lineno=816, col_offset=24), [Expr(Call(Name('_err_exit', Load(), lineno=817, col_offset=12), [BinOp(Str('Cannot run file %r because: %s', lineno=817, col_offset=22), Mod(), Tuple([Subscript(Attribute(Name('sys', Load(), lineno=817, col_offset=58), 'argv', Load(), lineno=817, col_offset=58), Index(Num(0, lineno=817, col_offset=67)), Load(), lineno=817, col_offset=58), Name('err', Load(), lineno=817, col_offset=71)], Load(), lineno=817, col_offset=58), lineno=817, col_offset=22)], [], None, None, lineno=817, col_offset=12), lineno=817, col_offset=12)], lineno=816, col_offset=8), ExceptHandler(Name('SystemExit', Load(), lineno=818, col_offset=15), None, [Pass( lineno=819, col_offset=12)], lineno=818, col_offset=8)], [], lineno=805, col_offset=8), Assign([Name('results', Store(), lineno=821, col_offset=8)], Call(Attribute(Name('t', Load(), lineno=821, col_offset=18), 'results', Load(), lineno=821, col_offset=18), [], [], None, None, lineno=821, col_offset=18), lineno=821, col_offset=8), If(UnaryOp(Not(), Name('no_report', Load(), lineno=823, col_offset=15), lineno=823, col_offset=11), [Expr(Call(Attribute(Name('results', Load(), lineno=824, col_offset=12), 'write_results', Load(), lineno=824, col_offset=12), [Name('missing', Load(), lineno=824, col_offset=34)], [keyword('summary', Name('summary', Load(), lineno=824, col_offset=51)), keyword('coverdir', Name('coverdir', Load(), lineno=824, col_offset=69))], None, None, lineno=824, col_offset=12), lineno=824, col_offset=12)], [], lineno=823, col_offset=8)], lineno=793, col_offset=4)], [], lineno=667, col_offset=0), If(Compare(Name('__name__', Load(), lineno=826, col_offset=3), [Eq()], [Str('__main__', lineno=826, col_offset=13)], lineno=826, col_offset=3), [Expr(Call(Name('main', Load(), lineno=827, col_offset=4), [], [], None, None, lineno=827, col_offset=4), lineno=827, col_offset=4)], [], lineno=826, col_offset=0)])
