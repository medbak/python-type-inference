Module([Expr(Str('Fixer that cleans up a tuple argument to isinstance after the tokens\nin it were fixed.  This is mainly used to remove double occurrences of\ntokens as a leftover of the long -> int / unicode -> str conversion.\n\neg.  isinstance(x, (int, long)) -> isinstance(x, (int, int))\n       -> isinstance(x, int)\n', lineno=10, col_offset=-1), lineno=10, col_offset=-1), ImportFrom(None, [alias('fixer_base', None)], 2, lineno=12, col_offset=0), ImportFrom('fixer_util', [alias('token', None)], 2, lineno=13, col_offset=0), ClassDef('FixIsinstance', [Attribute(Name('fixer_base', Load(), lineno=16, col_offset=20), 'BaseFix', Load(), lineno=16, col_offset=20)], [Assign([Name('BM_compatible', Store(), lineno=17, col_offset=4)], Name('True', Load(), lineno=17, col_offset=20), lineno=17, col_offset=4), Assign([Name('PATTERN', Store(), lineno=18, col_offset=4)], Str("\n    power<\n        'isinstance'\n        trailer< '(' arglist< any ',' atom< '('\n            args=testlist_gexp< any+ >\n        ')' > > ')' >\n    >\n    ", lineno=25, col_offset=-1), lineno=18, col_offset=4), Assign([Name('run_order', Store(), lineno=27, col_offset=4)], Num(6, lineno=27, col_offset=16), lineno=27, col_offset=4), FunctionDef('transform', arguments([Name('self', Param(), lineno=29, col_offset=18), Name('node', Param(), lineno=29, col_offset=24), Name('results', Param(), lineno=29, col_offset=30)], None, None, []), [Assign([Name('names_inserted', Store(), lineno=30, col_offset=8)], Call(Name('set', Load(), lineno=30, col_offset=25), [], [], None, None, lineno=30, col_offset=25), lineno=30, col_offset=8), Assign([Name('testlist', Store(), lineno=31, col_offset=8)], Subscript(Name('results', Load(), lineno=31, col_offset=19), Index(Str('args', lineno=31, col_offset=27)), Load(), lineno=31, col_offset=19), lineno=31, col_offset=8), Assign([Name('args', Store(), lineno=32, col_offset=8)], Attribute(Name('testlist', Load(), lineno=32, col_offset=15), 'children', Load(), lineno=32, col_offset=15), lineno=32, col_offset=8), Assign([Name('new_args', Store(), lineno=33, col_offset=8)], List([], Load(), lineno=33, col_offset=19), lineno=33, col_offset=8), Assign([Name('iterator', Store(), lineno=34, col_offset=8)], Call(Name('enumerate', Load(), lineno=34, col_offset=19), [Name('args', Load(), lineno=34, col_offset=29)], [], None, None, lineno=34, col_offset=19), lineno=34, col_offset=8), For(Tuple([Name('idx', Store(), lineno=35, col_offset=12), Name('arg', Store(), lineno=35, col_offset=17)], Store(), lineno=35, col_offset=12), Name('iterator', Load(), lineno=35, col_offset=24), [If(BoolOp(And(), [Compare(Attribute(Name('arg', Load(), lineno=36, col_offset=15), 'type', Load(), lineno=36, col_offset=15), [Eq()], [Attribute(Name('token', Load(), lineno=36, col_offset=27), 'NAME', Load(), lineno=36, col_offset=27)], lineno=36, col_offset=15), Compare(Attribute(Name('arg', Load(), lineno=36, col_offset=42), 'value', Load(), lineno=36, col_offset=42), [In()], [Name('names_inserted', Load(), lineno=36, col_offset=55)], lineno=36, col_offset=42)], lineno=36, col_offset=15), [If(BoolOp(And(), [Compare(Name('idx', Load(), lineno=37, col_offset=19), [Lt()], [BinOp(Call(Name('len', Load(), lineno=37, col_offset=25), [Name('args', Load(), lineno=37, col_offset=29)], [], None, None, lineno=37, col_offset=25), Sub(), Num(1, lineno=37, col_offset=37), lineno=37, col_offset=25)], lineno=37, col_offset=19), Compare(Attribute(Subscript(Name('args', Load(), lineno=37, col_offset=43), Index(BinOp(Name('idx', Load(), lineno=37, col_offset=48), Add(), Num(1, lineno=37, col_offset=54), lineno=37, col_offset=48)), Load(), lineno=37, col_offset=43), 'type', Load(), lineno=37, col_offset=43), [Eq()], [Attribute(Name('token', Load(), lineno=37, col_offset=65), 'COMMA', Load(), lineno=37, col_offset=65)], lineno=37, col_offset=43)], lineno=37, col_offset=19), [Expr(Call(Attribute(Name('iterator', Load(), lineno=38, col_offset=20), 'next', Load(), lineno=38, col_offset=20), [], [], None, None, lineno=38, col_offset=20), lineno=38, col_offset=20), Continue( lineno=39, col_offset=20)], [], lineno=37, col_offset=16)], [Expr(Call(Attribute(Name('new_args', Load(), lineno=41, col_offset=16), 'append', Load(), lineno=41, col_offset=16), [Name('arg', Load(), lineno=41, col_offset=32)], [], None, None, lineno=41, col_offset=16), lineno=41, col_offset=16), If(Compare(Attribute(Name('arg', Load(), lineno=42, col_offset=19), 'type', Load(), lineno=42, col_offset=19), [Eq()], [Attribute(Name('token', Load(), lineno=42, col_offset=31), 'NAME', Load(), lineno=42, col_offset=31)], lineno=42, col_offset=19), [Expr(Call(Attribute(Name('names_inserted', Load(), lineno=43, col_offset=20), 'add', Load(), lineno=43, col_offset=20), [Attribute(Name('arg', Load(), lineno=43, col_offset=39), 'value', Load(), lineno=43, col_offset=39)], [], None, None, lineno=43, col_offset=20), lineno=43, col_offset=20)], [], lineno=42, col_offset=16)], lineno=36, col_offset=12)], [], lineno=35, col_offset=8), If(BoolOp(And(), [Name('new_args', Load(), lineno=44, col_offset=11), Compare(Attribute(Subscript(Name('new_args', Load(), lineno=44, col_offset=24), Index(Num(-1, lineno=44, col_offset=34)), Load(), lineno=44, col_offset=24), 'type', Load(), lineno=44, col_offset=24), [Eq()], [Attribute(Name('token', Load(), lineno=44, col_offset=45), 'COMMA', Load(), lineno=44, col_offset=45)], lineno=44, col_offset=24)], lineno=44, col_offset=11), [Delete([Subscript(Name('new_args', Load(), lineno=45, col_offset=16), Index(Num(-1, lineno=45, col_offset=26)), Del(), lineno=45, col_offset=16)], lineno=45, col_offset=12)], [], lineno=44, col_offset=8), If(Compare(Call(Name('len', Load(), lineno=46, col_offset=11), [Name('new_args', Load(), lineno=46, col_offset=15)], [], None, None, lineno=46, col_offset=11), [Eq()], [Num(1, lineno=46, col_offset=28)], lineno=46, col_offset=11), [Assign([Name('atom', Store(), lineno=47, col_offset=12)], Attribute(Name('testlist', Load(), lineno=47, col_offset=19), 'parent', Load(), lineno=47, col_offset=19), lineno=47, col_offset=12), Assign([Attribute(Subscript(Name('new_args', Load(), lineno=48, col_offset=12), Index(Num(0, lineno=48, col_offset=21)), Load(), lineno=48, col_offset=12), 'prefix', Store(), lineno=48, col_offset=12)], Attribute(Name('atom', Load(), lineno=48, col_offset=33), 'prefix', Load(), lineno=48, col_offset=33), lineno=48, col_offset=12), Expr(Call(Attribute(Name('atom', Load(), lineno=49, col_offset=12), 'replace', Load(), lineno=49, col_offset=12), [Subscript(Name('new_args', Load(), lineno=49, col_offset=25), Index(Num(0, lineno=49, col_offset=34)), Load(), lineno=49, col_offset=25)], [], None, None, lineno=49, col_offset=12), lineno=49, col_offset=12)], [Assign([Subscript(Name('args', Load(), lineno=51, col_offset=12), Slice(None, None, None), Store(), lineno=51, col_offset=12)], Name('new_args', Load(), lineno=51, col_offset=22), lineno=51, col_offset=12), Expr(Call(Attribute(Name('node', Load(), lineno=52, col_offset=12), 'changed', Load(), lineno=52, col_offset=12), [], [], None, None, lineno=52, col_offset=12), lineno=52, col_offset=12)], lineno=46, col_offset=8)], [], lineno=29, col_offset=4)], [], lineno=16, col_offset=0)])
