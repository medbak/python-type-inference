Module([ImportFrom('test', [alias('test_support', None)], 0, lineno=1, col_offset=0), Import([alias('unittest', None)], lineno=2, col_offset=0), Import([alias('sys', None), alias('cStringIO', None), alias('subprocess', None)], lineno=4, col_offset=0), Import([alias('quopri', None)], lineno=5, col_offset=0), Assign([Name('ENCSAMPLE', Store(), lineno=9, col_offset=0)], Str("Here's a bunch of special=20\n\n=A1=A2=A3=A4=A5=A6=A7=A8=A9\n=AA=AB=AC=AD=AE=AF=B0=B1=B2=B3\n=B4=B5=B6=B7=B8=B9=BA=BB=BC=BD=BE\n=BF=C0=C1=C2=C3=C4=C5=C6\n=C7=C8=C9=CA=CB=CC=CD=CE=CF\n=D0=D1=D2=D3=D4=D5=D6=D7\n=D8=D9=DA=DB=DC=DD=DE=DF\n=E0=E1=E2=E3=E4=E5=E6=E7\n=E8=E9=EA=EB=EC=ED=EE=EF\n=F0=F1=F2=F3=F4=F5=F6=F7\n=F8=F9=FA=FB=FC=FD=FE=FF\n\ncharacters... have fun!\n", lineno=25, col_offset=-1), lineno=9, col_offset=0), Assign([Name('DECSAMPLE', Store(), lineno=28, col_offset=0)], BinOp(Str("Here's a bunch of special \n", lineno=28, col_offset=12), Add(), Str('\n\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\n\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\n\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\n\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\n\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\n\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\n\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\n\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\n\xe8\xe9\xea\xeb\xec\xed\xee\xef\n\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\n\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\n\ncharacters... have fun!\n', lineno=44, col_offset=-1), lineno=28, col_offset=12), lineno=28, col_offset=0), FunctionDef('withpythonimplementation', arguments([Name('testfunc', Param(), lineno=47, col_offset=29)], None, None, []), [FunctionDef('newtest', arguments([Name('self', Param(), lineno=48, col_offset=16)], None, None, []), [Expr(Call(Name('testfunc', Load(), lineno=50, col_offset=8), [Name('self', Load(), lineno=50, col_offset=17)], [], None, None, lineno=50, col_offset=8), lineno=50, col_offset=8), If(BoolOp(Or(), [Compare(Attribute(Name('quopri', Load(), lineno=52, col_offset=11), 'b2a_qp', Load(), lineno=52, col_offset=11), [IsNot()], [Name('None', Load(), lineno=52, col_offset=32)], lineno=52, col_offset=11), Compare(Attribute(Name('quopri', Load(), lineno=52, col_offset=40), 'a2b_qp', Load(), lineno=52, col_offset=40), [IsNot()], [Name('None', Load(), lineno=52, col_offset=61)], lineno=52, col_offset=40)], lineno=52, col_offset=11), [Assign([Name('oldencode', Store(), lineno=53, col_offset=12)], Attribute(Name('quopri', Load(), lineno=53, col_offset=24), 'b2a_qp', Load(), lineno=53, col_offset=24), lineno=53, col_offset=12), Assign([Name('olddecode', Store(), lineno=54, col_offset=12)], Attribute(Name('quopri', Load(), lineno=54, col_offset=24), 'a2b_qp', Load(), lineno=54, col_offset=24), lineno=54, col_offset=12), TryFinally([Assign([Attribute(Name('quopri', Load(), lineno=56, col_offset=16), 'b2a_qp', Store(), lineno=56, col_offset=16)], Name('None', Load(), lineno=56, col_offset=32), lineno=56, col_offset=16), Assign([Attribute(Name('quopri', Load(), lineno=57, col_offset=16), 'a2b_qp', Store(), lineno=57, col_offset=16)], Name('None', Load(), lineno=57, col_offset=32), lineno=57, col_offset=16), Expr(Call(Name('testfunc', Load(), lineno=58, col_offset=16), [Name('self', Load(), lineno=58, col_offset=25)], [], None, None, lineno=58, col_offset=16), lineno=58, col_offset=16)], [Assign([Attribute(Name('quopri', Load(), lineno=60, col_offset=16), 'b2a_qp', Store(), lineno=60, col_offset=16)], Name('oldencode', Load(), lineno=60, col_offset=32), lineno=60, col_offset=16), Assign([Attribute(Name('quopri', Load(), lineno=61, col_offset=16), 'a2b_qp', Store(), lineno=61, col_offset=16)], Name('olddecode', Load(), lineno=61, col_offset=32), lineno=61, col_offset=16)], lineno=55, col_offset=12)], [], lineno=52, col_offset=8)], [], lineno=48, col_offset=4), Assign([Attribute(Name('newtest', Load(), lineno=62, col_offset=4), '__name__', Store(), lineno=62, col_offset=4)], Attribute(Name('testfunc', Load(), lineno=62, col_offset=23), '__name__', Load(), lineno=62, col_offset=23), lineno=62, col_offset=4), Return(Name('newtest', Load(), lineno=63, col_offset=11), lineno=63, col_offset=4)], [], lineno=47, col_offset=0), ClassDef('QuopriTestCase', [Attribute(Name('unittest', Load(), lineno=65, col_offset=21), 'TestCase', Load(), lineno=65, col_offset=21)], [Assign([Name('STRINGS', Store(), lineno=68, col_offset=4)], Tuple([Tuple([Str('hello', lineno=70, col_offset=9), Str('hello', lineno=70, col_offset=18)], Load(), lineno=70, col_offset=9), Tuple([Str('hello\n        there\n        world', lineno=73, col_offset=-1), Str('hello\n        there\n        world', lineno=75, col_offset=-1)], Load(), lineno=73, col_offset=-1), Tuple([Str('hello\n        there\n        world\n', lineno=79, col_offset=-1), Str('hello\n        there\n        world\n', lineno=82, col_offset=-1)], Load(), lineno=79, col_offset=-1), Tuple([Str('\x81\x82\x83', lineno=83, col_offset=9), Str('=81=82=83', lineno=83, col_offset=25)], Load(), lineno=83, col_offset=9), Tuple([Str('hello ', lineno=85, col_offset=9), Str('hello=20', lineno=85, col_offset=19)], Load(), lineno=85, col_offset=9), Tuple([Str('hello\t', lineno=86, col_offset=9), Str('hello=09', lineno=86, col_offset=20)], Load(), lineno=86, col_offset=9), Tuple([Str('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\xd8\xd9\xda\xdb\xdc\xdd\xde\xdfxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx', lineno=88, col_offset=9), Str('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=D8=D9=DA=DB=DC=DD=DE=DFx=\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx', lineno=90, col_offset=-1)], Load(), lineno=88, col_offset=9), Tuple([Str('yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy', lineno=92, col_offset=9), Str('yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy', lineno=93, col_offset=8)], Load(), lineno=92, col_offset=9), Tuple([Str('zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz', lineno=97, col_offset=9), Str('zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz=\nzz', lineno=99, col_offset=-1)], Load(), lineno=97, col_offset=9), Tuple([Str('zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz', lineno=102, col_offset=9), Str('zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz=\nzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz', lineno=104, col_offset=-1)], Load(), lineno=102, col_offset=9), Tuple([Str('yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\nzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz', lineno=110, col_offset=-1), Str('yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy=\nyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\nzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz', lineno=113, col_offset=-1)], Load(), lineno=110, col_offset=-1), Tuple([Name('DECSAMPLE', Load(), lineno=115, col_offset=9), Name('ENCSAMPLE', Load(), lineno=115, col_offset=20)], Load(), lineno=115, col_offset=9)], Load(), lineno=70, col_offset=8), lineno=68, col_offset=4), Assign([Name('ESTRINGS', Store(), lineno=119, col_offset=4)], Tuple([Tuple([Str('hello world', lineno=120, col_offset=9), Str('hello=20world', lineno=120, col_offset=24)], Load(), lineno=120, col_offset=9), Tuple([Str('hello\tworld', lineno=121, col_offset=9), Str('hello=09world', lineno=121, col_offset=25)], Load(), lineno=121, col_offset=9)], Load(), lineno=120, col_offset=8), lineno=119, col_offset=4), Assign([Name('HSTRINGS', Store(), lineno=125, col_offset=4)], Tuple([Tuple([Str('hello world', lineno=126, col_offset=9), Str('hello_world', lineno=126, col_offset=24)], Load(), lineno=126, col_offset=9), Tuple([Str('hello_world', lineno=127, col_offset=9), Str('hello=5Fworld', lineno=127, col_offset=24)], Load(), lineno=127, col_offset=9)], Load(), lineno=126, col_offset=8), lineno=125, col_offset=4), FunctionDef('test_encodestring', arguments([Name('self', Param(), lineno=131, col_offset=26)], None, None, []), [For(Tuple([Name('p', Store(), lineno=132, col_offset=12), Name('e', Store(), lineno=132, col_offset=15)], Store(), lineno=132, col_offset=12), Attribute(Name('self', Load(), lineno=132, col_offset=20), 'STRINGS', Load(), lineno=132, col_offset=20), [Expr(Call(Attribute(Name('self', Load(), lineno=133, col_offset=12), 'assertTrue', Load(), lineno=133, col_offset=12), [Compare(Call(Attribute(Name('quopri', Load(), lineno=133, col_offset=28), 'encodestring', Load(), lineno=133, col_offset=28), [Name('p', Load(), lineno=133, col_offset=48)], [], None, None, lineno=133, col_offset=28), [Eq()], [Name('e', Load(), lineno=133, col_offset=54)], lineno=133, col_offset=28)], [], None, None, lineno=133, col_offset=12), lineno=133, col_offset=12)], [], lineno=132, col_offset=8)], [Name('withpythonimplementation', Load(), lineno=130, col_offset=5)], lineno=130, col_offset=4), FunctionDef('test_decodestring', arguments([Name('self', Param(), lineno=136, col_offset=26)], None, None, []), [For(Tuple([Name('p', Store(), lineno=137, col_offset=12), Name('e', Store(), lineno=137, col_offset=15)], Store(), lineno=137, col_offset=12), Attribute(Name('self', Load(), lineno=137, col_offset=20), 'STRINGS', Load(), lineno=137, col_offset=20), [Expr(Call(Attribute(Name('self', Load(), lineno=138, col_offset=12), 'assertTrue', Load(), lineno=138, col_offset=12), [Compare(Call(Attribute(Name('quopri', Load(), lineno=138, col_offset=28), 'decodestring', Load(), lineno=138, col_offset=28), [Name('e', Load(), lineno=138, col_offset=48)], [], None, None, lineno=138, col_offset=28), [Eq()], [Name('p', Load(), lineno=138, col_offset=54)], lineno=138, col_offset=28)], [], None, None, lineno=138, col_offset=12), lineno=138, col_offset=12)], [], lineno=137, col_offset=8)], [Name('withpythonimplementation', Load(), lineno=135, col_offset=5)], lineno=135, col_offset=4), FunctionDef('test_idempotent_string', arguments([Name('self', Param(), lineno=141, col_offset=31)], None, None, []), [For(Tuple([Name('p', Store(), lineno=142, col_offset=12), Name('e', Store(), lineno=142, col_offset=15)], Store(), lineno=142, col_offset=12), Attribute(Name('self', Load(), lineno=142, col_offset=20), 'STRINGS', Load(), lineno=142, col_offset=20), [Expr(Call(Attribute(Name('self', Load(), lineno=143, col_offset=12), 'assertTrue', Load(), lineno=143, col_offset=12), [Compare(Call(Attribute(Name('quopri', Load(), lineno=143, col_offset=28), 'decodestring', Load(), lineno=143, col_offset=28), [Call(Attribute(Name('quopri', Load(), lineno=143, col_offset=48), 'encodestring', Load(), lineno=143, col_offset=48), [Name('e', Load(), lineno=143, col_offset=68)], [], None, None, lineno=143, col_offset=48)], [], None, None, lineno=143, col_offset=28), [Eq()], [Name('e', Load(), lineno=143, col_offset=75)], lineno=143, col_offset=28)], [], None, None, lineno=143, col_offset=12), lineno=143, col_offset=12)], [], lineno=142, col_offset=8)], [Name('withpythonimplementation', Load(), lineno=140, col_offset=5)], lineno=140, col_offset=4), FunctionDef('test_encode', arguments([Name('self', Param(), lineno=146, col_offset=20)], None, None, []), [For(Tuple([Name('p', Store(), lineno=147, col_offset=12), Name('e', Store(), lineno=147, col_offset=15)], Store(), lineno=147, col_offset=12), Attribute(Name('self', Load(), lineno=147, col_offset=20), 'STRINGS', Load(), lineno=147, col_offset=20), [Assign([Name('infp', Store(), lineno=148, col_offset=12)], Call(Attribute(Name('cStringIO', Load(), lineno=148, col_offset=19), 'StringIO', Load(), lineno=148, col_offset=19), [Name('p', Load(), lineno=148, col_offset=38)], [], None, None, lineno=148, col_offset=19), lineno=148, col_offset=12), Assign([Name('outfp', Store(), lineno=149, col_offset=12)], Call(Attribute(Name('cStringIO', Load(), lineno=149, col_offset=20), 'StringIO', Load(), lineno=149, col_offset=20), [], [], None, None, lineno=149, col_offset=20), lineno=149, col_offset=12), Expr(Call(Attribute(Name('quopri', Load(), lineno=150, col_offset=12), 'encode', Load(), lineno=150, col_offset=12), [Name('infp', Load(), lineno=150, col_offset=26), Name('outfp', Load(), lineno=150, col_offset=32)], [keyword('quotetabs', Name('False', Load(), lineno=150, col_offset=49))], None, None, lineno=150, col_offset=12), lineno=150, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=151, col_offset=12), 'assertTrue', Load(), lineno=151, col_offset=12), [Compare(Call(Attribute(Name('outfp', Load(), lineno=151, col_offset=28), 'getvalue', Load(), lineno=151, col_offset=28), [], [], None, None, lineno=151, col_offset=28), [Eq()], [Name('e', Load(), lineno=151, col_offset=48)], lineno=151, col_offset=28)], [], None, None, lineno=151, col_offset=12), lineno=151, col_offset=12)], [], lineno=147, col_offset=8)], [Name('withpythonimplementation', Load(), lineno=145, col_offset=5)], lineno=145, col_offset=4), FunctionDef('test_decode', arguments([Name('self', Param(), lineno=154, col_offset=20)], None, None, []), [For(Tuple([Name('p', Store(), lineno=155, col_offset=12), Name('e', Store(), lineno=155, col_offset=15)], Store(), lineno=155, col_offset=12), Attribute(Name('self', Load(), lineno=155, col_offset=20), 'STRINGS', Load(), lineno=155, col_offset=20), [Assign([Name('infp', Store(), lineno=156, col_offset=12)], Call(Attribute(Name('cStringIO', Load(), lineno=156, col_offset=19), 'StringIO', Load(), lineno=156, col_offset=19), [Name('e', Load(), lineno=156, col_offset=38)], [], None, None, lineno=156, col_offset=19), lineno=156, col_offset=12), Assign([Name('outfp', Store(), lineno=157, col_offset=12)], Call(Attribute(Name('cStringIO', Load(), lineno=157, col_offset=20), 'StringIO', Load(), lineno=157, col_offset=20), [], [], None, None, lineno=157, col_offset=20), lineno=157, col_offset=12), Expr(Call(Attribute(Name('quopri', Load(), lineno=158, col_offset=12), 'decode', Load(), lineno=158, col_offset=12), [Name('infp', Load(), lineno=158, col_offset=26), Name('outfp', Load(), lineno=158, col_offset=32)], [], None, None, lineno=158, col_offset=12), lineno=158, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=159, col_offset=12), 'assertTrue', Load(), lineno=159, col_offset=12), [Compare(Call(Attribute(Name('outfp', Load(), lineno=159, col_offset=28), 'getvalue', Load(), lineno=159, col_offset=28), [], [], None, None, lineno=159, col_offset=28), [Eq()], [Name('p', Load(), lineno=159, col_offset=48)], lineno=159, col_offset=28)], [], None, None, lineno=159, col_offset=12), lineno=159, col_offset=12)], [], lineno=155, col_offset=8)], [Name('withpythonimplementation', Load(), lineno=153, col_offset=5)], lineno=153, col_offset=4), FunctionDef('test_embedded_ws', arguments([Name('self', Param(), lineno=162, col_offset=25)], None, None, []), [For(Tuple([Name('p', Store(), lineno=163, col_offset=12), Name('e', Store(), lineno=163, col_offset=15)], Store(), lineno=163, col_offset=12), Attribute(Name('self', Load(), lineno=163, col_offset=20), 'ESTRINGS', Load(), lineno=163, col_offset=20), [Expr(Call(Attribute(Name('self', Load(), lineno=164, col_offset=12), 'assertTrue', Load(), lineno=164, col_offset=12), [Compare(Call(Attribute(Name('quopri', Load(), lineno=164, col_offset=28), 'encodestring', Load(), lineno=164, col_offset=28), [Name('p', Load(), lineno=164, col_offset=48)], [keyword('quotetabs', Name('True', Load(), lineno=164, col_offset=61))], None, None, lineno=164, col_offset=28), [Eq()], [Name('e', Load(), lineno=164, col_offset=70)], lineno=164, col_offset=28)], [], None, None, lineno=164, col_offset=12), lineno=164, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=165, col_offset=12), 'assertTrue', Load(), lineno=165, col_offset=12), [Compare(Call(Attribute(Name('quopri', Load(), lineno=165, col_offset=28), 'decodestring', Load(), lineno=165, col_offset=28), [Name('e', Load(), lineno=165, col_offset=48)], [], None, None, lineno=165, col_offset=28), [Eq()], [Name('p', Load(), lineno=165, col_offset=54)], lineno=165, col_offset=28)], [], None, None, lineno=165, col_offset=12), lineno=165, col_offset=12)], [], lineno=163, col_offset=8)], [Name('withpythonimplementation', Load(), lineno=161, col_offset=5)], lineno=161, col_offset=4), FunctionDef('test_encode_header', arguments([Name('self', Param(), lineno=168, col_offset=27)], None, None, []), [For(Tuple([Name('p', Store(), lineno=169, col_offset=12), Name('e', Store(), lineno=169, col_offset=15)], Store(), lineno=169, col_offset=12), Attribute(Name('self', Load(), lineno=169, col_offset=20), 'HSTRINGS', Load(), lineno=169, col_offset=20), [Expr(Call(Attribute(Name('self', Load(), lineno=170, col_offset=12), 'assertTrue', Load(), lineno=170, col_offset=12), [Compare(Call(Attribute(Name('quopri', Load(), lineno=170, col_offset=28), 'encodestring', Load(), lineno=170, col_offset=28), [Name('p', Load(), lineno=170, col_offset=48)], [keyword('header', Name('True', Load(), lineno=170, col_offset=58))], None, None, lineno=170, col_offset=28), [Eq()], [Name('e', Load(), lineno=170, col_offset=67)], lineno=170, col_offset=28)], [], None, None, lineno=170, col_offset=12), lineno=170, col_offset=12)], [], lineno=169, col_offset=8)], [Name('withpythonimplementation', Load(), lineno=167, col_offset=5)], lineno=167, col_offset=4), FunctionDef('test_decode_header', arguments([Name('self', Param(), lineno=173, col_offset=27)], None, None, []), [For(Tuple([Name('p', Store(), lineno=174, col_offset=12), Name('e', Store(), lineno=174, col_offset=15)], Store(), lineno=174, col_offset=12), Attribute(Name('self', Load(), lineno=174, col_offset=20), 'HSTRINGS', Load(), lineno=174, col_offset=20), [Expr(Call(Attribute(Name('self', Load(), lineno=175, col_offset=12), 'assertTrue', Load(), lineno=175, col_offset=12), [Compare(Call(Attribute(Name('quopri', Load(), lineno=175, col_offset=28), 'decodestring', Load(), lineno=175, col_offset=28), [Name('e', Load(), lineno=175, col_offset=48)], [keyword('header', Name('True', Load(), lineno=175, col_offset=58))], None, None, lineno=175, col_offset=28), [Eq()], [Name('p', Load(), lineno=175, col_offset=67)], lineno=175, col_offset=28)], [], None, None, lineno=175, col_offset=12), lineno=175, col_offset=12)], [], lineno=174, col_offset=8)], [Name('withpythonimplementation', Load(), lineno=172, col_offset=5)], lineno=172, col_offset=4), FunctionDef('test_scriptencode', arguments([Name('self', Param(), lineno=177, col_offset=26)], None, None, []), [Assign([Tuple([Name('p', Store(), lineno=178, col_offset=9), Name('e', Store(), lineno=178, col_offset=12)], Store(), lineno=178, col_offset=9)], Subscript(Attribute(Name('self', Load(), lineno=178, col_offset=17), 'STRINGS', Load(), lineno=178, col_offset=17), Index(Num(-1, lineno=178, col_offset=31)), Load(), lineno=178, col_offset=17), lineno=178, col_offset=8), Assign([Name('process', Store(), lineno=179, col_offset=8)], Call(Attribute(Name('subprocess', Load(), lineno=179, col_offset=18), 'Popen', Load(), lineno=179, col_offset=18), [List([Attribute(Name('sys', Load(), lineno=179, col_offset=36), 'executable', Load(), lineno=179, col_offset=36), Str('-mquopri', lineno=179, col_offset=52)], Load(), lineno=179, col_offset=35)], [keyword('stdin', Attribute(Name('subprocess', Load(), lineno=180, col_offset=41), 'PIPE', Load(), lineno=180, col_offset=41)), keyword('stdout', Attribute(Name('subprocess', Load(), lineno=180, col_offset=65), 'PIPE', Load(), lineno=180, col_offset=65))], None, None, lineno=179, col_offset=18), lineno=179, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=181, col_offset=8), 'addCleanup', Load(), lineno=181, col_offset=8), [Attribute(Attribute(Name('process', Load(), lineno=181, col_offset=24), 'stdout', Load(), lineno=181, col_offset=24), 'close', Load(), lineno=181, col_offset=24)], [], None, None, lineno=181, col_offset=8), lineno=181, col_offset=8), Assign([Tuple([Name('cout', Store(), lineno=182, col_offset=8), Name('cerr', Store(), lineno=182, col_offset=14)], Store(), lineno=182, col_offset=8)], Call(Attribute(Name('process', Load(), lineno=182, col_offset=21), 'communicate', Load(), lineno=182, col_offset=21), [Name('p', Load(), lineno=182, col_offset=41)], [], None, None, lineno=182, col_offset=21), lineno=182, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=186, col_offset=8), 'assertEqual', Load(), lineno=186, col_offset=8), [Call(Attribute(Name('cout', Load(), lineno=186, col_offset=25), 'splitlines', Load(), lineno=186, col_offset=25), [], [], None, None, lineno=186, col_offset=25), Call(Attribute(Name('e', Load(), lineno=186, col_offset=44), 'splitlines', Load(), lineno=186, col_offset=44), [], [], None, None, lineno=186, col_offset=44)], [], None, None, lineno=186, col_offset=8), lineno=186, col_offset=8)], [], lineno=177, col_offset=4), FunctionDef('test_scriptdecode', arguments([Name('self', Param(), lineno=188, col_offset=26)], None, None, []), [Assign([Tuple([Name('p', Store(), lineno=189, col_offset=9), Name('e', Store(), lineno=189, col_offset=12)], Store(), lineno=189, col_offset=9)], Subscript(Attribute(Name('self', Load(), lineno=189, col_offset=17), 'STRINGS', Load(), lineno=189, col_offset=17), Index(Num(-1, lineno=189, col_offset=31)), Load(), lineno=189, col_offset=17), lineno=189, col_offset=8), Assign([Name('process', Store(), lineno=190, col_offset=8)], Call(Attribute(Name('subprocess', Load(), lineno=190, col_offset=18), 'Popen', Load(), lineno=190, col_offset=18), [List([Attribute(Name('sys', Load(), lineno=190, col_offset=36), 'executable', Load(), lineno=190, col_offset=36), Str('-mquopri', lineno=190, col_offset=52), Str('-d', lineno=190, col_offset=64)], Load(), lineno=190, col_offset=35)], [keyword('stdin', Attribute(Name('subprocess', Load(), lineno=191, col_offset=41), 'PIPE', Load(), lineno=191, col_offset=41)), keyword('stdout', Attribute(Name('subprocess', Load(), lineno=191, col_offset=65), 'PIPE', Load(), lineno=191, col_offset=65))], None, None, lineno=190, col_offset=18), lineno=190, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=192, col_offset=8), 'addCleanup', Load(), lineno=192, col_offset=8), [Attribute(Attribute(Name('process', Load(), lineno=192, col_offset=24), 'stdout', Load(), lineno=192, col_offset=24), 'close', Load(), lineno=192, col_offset=24)], [], None, None, lineno=192, col_offset=8), lineno=192, col_offset=8), Assign([Tuple([Name('cout', Store(), lineno=193, col_offset=8), Name('cerr', Store(), lineno=193, col_offset=14)], Store(), lineno=193, col_offset=8)], Call(Attribute(Name('process', Load(), lineno=193, col_offset=21), 'communicate', Load(), lineno=193, col_offset=21), [Name('e', Load(), lineno=193, col_offset=41)], [], None, None, lineno=193, col_offset=21), lineno=193, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=194, col_offset=8), 'assertEqual', Load(), lineno=194, col_offset=8), [Call(Attribute(Name('cout', Load(), lineno=194, col_offset=25), 'splitlines', Load(), lineno=194, col_offset=25), [], [], None, None, lineno=194, col_offset=25), Call(Attribute(Name('p', Load(), lineno=194, col_offset=44), 'splitlines', Load(), lineno=194, col_offset=44), [], [], None, None, lineno=194, col_offset=44)], [], None, None, lineno=194, col_offset=8), lineno=194, col_offset=8)], [], lineno=188, col_offset=4)], [], lineno=65, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=197, col_offset=4), 'run_unittest', Load(), lineno=197, col_offset=4), [Name('QuopriTestCase', Load(), lineno=197, col_offset=30)], [], None, None, lineno=197, col_offset=4), lineno=197, col_offset=4)], [], lineno=196, col_offset=0), If(Compare(Name('__name__', Load(), lineno=200, col_offset=3), [Eq()], [Str('__main__', lineno=200, col_offset=15)], lineno=200, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=201, col_offset=4), [], [], None, None, lineno=201, col_offset=4), lineno=201, col_offset=4)], [], lineno=200, col_offset=0)])
