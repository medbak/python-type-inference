Module([Import([alias('sys', None)], lineno=3, col_offset=0), ImportFrom('bgenlocations', [alias('TOOLBOXDIR', None), alias('BGENDIR', None)], 0, lineno=4, col_offset=0), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=5, col_offset=0), 'path', Load(), lineno=5, col_offset=0), 'append', Load(), lineno=5, col_offset=0), [Name('BGENDIR', Load(), lineno=5, col_offset=16)], [], None, None, lineno=5, col_offset=0), lineno=5, col_offset=0), ImportFrom('scantools', [alias('Scanner_OSX', None)], 0, lineno=6, col_offset=0), Assign([Name('LONG', Store(), lineno=8, col_offset=0)], Str('CoreGraphics', lineno=8, col_offset=7), lineno=8, col_offset=0), Assign([Name('SHORT', Store(), lineno=9, col_offset=0)], Str('cg', lineno=9, col_offset=8), lineno=9, col_offset=0), Assign([Name('OBJECTS', Store(), lineno=10, col_offset=0)], Tuple([Str('CGContextRef', lineno=10, col_offset=11)], Load(), lineno=10, col_offset=11), lineno=10, col_offset=0), FunctionDef('main', arguments([], None, None, []), [Assign([Name('input', Store(), lineno=15, col_offset=4)], List([Str('CGContext.h', lineno=16, col_offset=12)], Load(), lineno=15, col_offset=12), lineno=15, col_offset=4), Assign([Name('output', Store(), lineno=18, col_offset=4)], BinOp(Name('SHORT', Load(), lineno=18, col_offset=13), Add(), Str('gen.py', lineno=18, col_offset=21), lineno=18, col_offset=13), lineno=18, col_offset=4), Assign([Name('defsoutput', Store(), lineno=19, col_offset=4)], BinOp(BinOp(Name('TOOLBOXDIR', Load(), lineno=19, col_offset=17), Add(), Name('LONG', Load(), lineno=19, col_offset=30), lineno=19, col_offset=17), Add(), Str('.py', lineno=19, col_offset=37), lineno=19, col_offset=35), lineno=19, col_offset=4), Assign([Name('scanner', Store(), lineno=20, col_offset=4)], Call(Name('MyScanner', Load(), lineno=20, col_offset=14), [Name('input', Load(), lineno=20, col_offset=24), Name('output', Load(), lineno=20, col_offset=31), Name('defsoutput', Load(), lineno=20, col_offset=39)], [], None, None, lineno=20, col_offset=14), lineno=20, col_offset=4), Expr(Call(Attribute(Name('scanner', Load(), lineno=21, col_offset=4), 'scan', Load(), lineno=21, col_offset=4), [], [], None, None, lineno=21, col_offset=4), lineno=21, col_offset=4), Expr(Call(Attribute(Name('scanner', Load(), lineno=22, col_offset=4), 'gentypetest', Load(), lineno=22, col_offset=4), [BinOp(Name('SHORT', Load(), lineno=22, col_offset=24), Add(), Str('typetest.py', lineno=22, col_offset=30), lineno=22, col_offset=24)], [], None, None, lineno=22, col_offset=4), lineno=22, col_offset=4), Expr(Call(Attribute(Name('scanner', Load(), lineno=23, col_offset=4), 'close', Load(), lineno=23, col_offset=4), [], [], None, None, lineno=23, col_offset=4), lineno=23, col_offset=4), Print(None, [Str('=== Testing definitions output code ===', lineno=24, col_offset=10)], True, lineno=24, col_offset=4), Expr(Call(Name('execfile', Load(), lineno=25, col_offset=4), [Name('defsoutput', Load(), lineno=25, col_offset=13), Dict([], [], lineno=25, col_offset=25), Dict([], [], lineno=25, col_offset=29)], [], None, None, lineno=25, col_offset=4), lineno=25, col_offset=4), Print(None, [Str('=== Done scanning and generating, now importing the generated code... ===', lineno=26, col_offset=10)], True, lineno=26, col_offset=4), Exec(BinOp(BinOp(Str('import ', lineno=27, col_offset=9), Add(), Name('SHORT', Load(), lineno=27, col_offset=21), lineno=27, col_offset=9), Add(), Str('support', lineno=27, col_offset=29), lineno=27, col_offset=27), None, None, lineno=27, col_offset=4), Print(None, [Str("=== Done.  It's up to you to compile it now! ===", lineno=28, col_offset=10)], True, lineno=28, col_offset=4)], [], lineno=14, col_offset=0), ClassDef('MyScanner', [Name('Scanner_OSX', Load(), lineno=30, col_offset=16)], [FunctionDef('destination', arguments([Name('self', Param(), lineno=32, col_offset=20), Name('type', Param(), lineno=32, col_offset=26), Name('name', Param(), lineno=32, col_offset=32), Name('arglist', Param(), lineno=32, col_offset=38)], None, None, []), [Assign([Name('classname', Store(), lineno=33, col_offset=8)], Str('Function', lineno=33, col_offset=20), lineno=33, col_offset=8), Assign([Name('listname', Store(), lineno=34, col_offset=8)], Str('functions', lineno=34, col_offset=19), lineno=34, col_offset=8), If(Name('arglist', Load(), lineno=35, col_offset=11), [Assign([Tuple([Name('t', Store(), lineno=36, col_offset=12), Name('n', Store(), lineno=36, col_offset=15), Name('m', Store(), lineno=36, col_offset=18)], Store(), lineno=36, col_offset=12)], Subscript(Name('arglist', Load(), lineno=36, col_offset=22), Index(Num(0, lineno=36, col_offset=30)), Load(), lineno=36, col_offset=22), lineno=36, col_offset=12), If(BoolOp(And(), [Compare(Name('t', Load(), lineno=37, col_offset=15), [In()], [Name('OBJECTS', Load(), lineno=37, col_offset=20)], lineno=37, col_offset=15), Compare(Name('m', Load(), lineno=37, col_offset=32), [Eq()], [Str('InMode', lineno=37, col_offset=37)], lineno=37, col_offset=32)], lineno=37, col_offset=15), [Assign([Name('classname', Store(), lineno=38, col_offset=16)], Str('Method', lineno=38, col_offset=28), lineno=38, col_offset=16), Assign([Name('listname', Store(), lineno=39, col_offset=16)], BinOp(Name('t', Load(), lineno=39, col_offset=27), Add(), Str('_methods', lineno=39, col_offset=31), lineno=39, col_offset=27), lineno=39, col_offset=16)], [], lineno=37, col_offset=12), If(BoolOp(And(), [Compare(Name('t', Load(), lineno=41, col_offset=15), [Eq()], [Str('CFAllocatorRef', lineno=41, col_offset=20)], lineno=41, col_offset=15), Compare(Name('m', Load(), lineno=41, col_offset=41), [Eq()], [Str('InMode', lineno=41, col_offset=46)], lineno=41, col_offset=41), Compare(Call(Name('len', Load(), lineno=41, col_offset=59), [Name('arglist', Load(), lineno=41, col_offset=63)], [], None, None, lineno=41, col_offset=59), [Gt()], [Num(1, lineno=41, col_offset=74)], lineno=41, col_offset=59)], lineno=41, col_offset=15), [Assign([Tuple([Name('t', Store(), lineno=42, col_offset=16), Name('n', Store(), lineno=42, col_offset=19), Name('m', Store(), lineno=42, col_offset=22)], Store(), lineno=42, col_offset=16)], Subscript(Name('arglist', Load(), lineno=42, col_offset=26), Index(Num(1, lineno=42, col_offset=34)), Load(), lineno=42, col_offset=26), lineno=42, col_offset=16), If(BoolOp(And(), [Compare(Name('t', Load(), lineno=43, col_offset=19), [In()], [Name('OBJECTS', Load(), lineno=43, col_offset=24)], lineno=43, col_offset=19), Compare(Name('m', Load(), lineno=43, col_offset=36), [Eq()], [Str('InMode', lineno=43, col_offset=41)], lineno=43, col_offset=36)], lineno=43, col_offset=19), [Assign([Name('classname', Store(), lineno=44, col_offset=20)], Str('MethodSkipArg1', lineno=44, col_offset=32), lineno=44, col_offset=20), Assign([Name('listname', Store(), lineno=45, col_offset=20)], BinOp(Name('t', Load(), lineno=45, col_offset=31), Add(), Str('_methods', lineno=45, col_offset=35), lineno=45, col_offset=31), lineno=45, col_offset=20)], [], lineno=43, col_offset=16)], [], lineno=41, col_offset=12)], [], lineno=35, col_offset=8), Return(Tuple([Name('classname', Load(), lineno=46, col_offset=15), Name('listname', Load(), lineno=46, col_offset=26)], Load(), lineno=46, col_offset=15), lineno=46, col_offset=8)], [], lineno=32, col_offset=4), FunctionDef('writeinitialdefs', arguments([Name('self', Param(), lineno=48, col_offset=25)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=49, col_offset=8), 'defsfile', Load(), lineno=49, col_offset=8), 'write', Load(), lineno=49, col_offset=8), [Str('def FOUR_CHAR_CODE(x): return x\n', lineno=49, col_offset=28)], [], None, None, lineno=49, col_offset=8), lineno=49, col_offset=8)], [], lineno=48, col_offset=4), FunctionDef('makeblacklistnames', arguments([Name('self', Param(), lineno=51, col_offset=27)], None, None, []), [Return(List([Str('CGContextRetain', lineno=53, col_offset=16), Str('CGContextRelease', lineno=54, col_offset=16)], Load(), lineno=52, col_offset=15), lineno=52, col_offset=8)], [], lineno=51, col_offset=4), FunctionDef('makegreylist', arguments([Name('self', Param(), lineno=57, col_offset=21)], None, None, []), [Return(List([], Load(), lineno=58, col_offset=15), lineno=58, col_offset=8)], [], lineno=57, col_offset=4), FunctionDef('makeblacklisttypes', arguments([Name('self', Param(), lineno=60, col_offset=27)], None, None, []), [Return(List([Str('float_ptr', lineno=62, col_offset=16), Str('CGRect_ptr', lineno=63, col_offset=16), Str('CGPoint_ptr', lineno=64, col_offset=16), Str('CGColorSpaceRef', lineno=65, col_offset=16), Str('CGColorRenderingIntent', lineno=66, col_offset=16), Str('CGFontRef', lineno=67, col_offset=16), Str('CGGlyph_ptr', lineno=69, col_offset=16), Str('CGImageRef', lineno=70, col_offset=16), Str('CGPDFDocumentRef', lineno=71, col_offset=16)], Load(), lineno=61, col_offset=15), lineno=61, col_offset=8)], [], lineno=60, col_offset=4), FunctionDef('makerepairinstructions', arguments([Name('self', Param(), lineno=74, col_offset=31)], None, None, []), [Return(List([Tuple([List([Tuple([Str('char_ptr', lineno=76, col_offset=19), Str('cstring', lineno=76, col_offset=31), Str('InMode', lineno=76, col_offset=42)], Load(), lineno=76, col_offset=19), Tuple([Str('size_t', lineno=76, col_offset=54), Str('length', lineno=76, col_offset=64), Str('InMode', lineno=76, col_offset=74)], Load(), lineno=76, col_offset=54)], Load(), lineno=76, col_offset=17), List([Tuple([Str('InBuffer', lineno=77, col_offset=19), Str('*', lineno=77, col_offset=31), Str('*', lineno=77, col_offset=36)], Load(), lineno=77, col_offset=19)], Load(), lineno=77, col_offset=17)], Load(), lineno=76, col_offset=17)], Load(), lineno=75, col_offset=15), lineno=75, col_offset=8)], [], lineno=74, col_offset=4)], [], lineno=30, col_offset=0), If(Compare(Name('__name__', Load(), lineno=82, col_offset=3), [Eq()], [Str('__main__', lineno=82, col_offset=15)], lineno=82, col_offset=3), [Expr(Call(Name('main', Load(), lineno=83, col_offset=4), [], [], None, None, lineno=83, col_offset=4), lineno=83, col_offset=4)], [], lineno=82, col_offset=0)])
