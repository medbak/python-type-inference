Module([Expr(Str(" Python 'undefined' Codec\n\n    This codec will always raise a ValueError exception when being\n    used. It is intended for use by the site.py file to switch off\n    automatic string to Unicode coercion.\n\nWritten by Marc-Andre Lemburg (mal@lemburg.com).\n\n(c) Copyright CNRI, All Rights Reserved. NO WARRANTY.\n\n", lineno=11, col_offset=-1), lineno=11, col_offset=-1), Import([alias('codecs', None)], lineno=12, col_offset=0), ClassDef('Codec', [Attribute(Name('codecs', Load(), lineno=16, col_offset=12), 'Codec', Load(), lineno=16, col_offset=12)], [FunctionDef('encode', arguments([Name('self', Param(), lineno=18, col_offset=15), Name('input', Param(), lineno=18, col_offset=20), Name('errors', Param(), lineno=18, col_offset=26)], None, None, [Str('strict', lineno=18, col_offset=33)]), [Raise(Call(Name('UnicodeError', Load(), lineno=19, col_offset=14), [Str('undefined encoding', lineno=19, col_offset=27)], [], None, None, lineno=19, col_offset=14), None, None, lineno=19, col_offset=8)], [], lineno=18, col_offset=4), FunctionDef('decode', arguments([Name('self', Param(), lineno=21, col_offset=15), Name('input', Param(), lineno=21, col_offset=20), Name('errors', Param(), lineno=21, col_offset=26)], None, None, [Str('strict', lineno=21, col_offset=33)]), [Raise(Call(Name('UnicodeError', Load(), lineno=22, col_offset=14), [Str('undefined encoding', lineno=22, col_offset=27)], [], None, None, lineno=22, col_offset=14), None, None, lineno=22, col_offset=8)], [], lineno=21, col_offset=4)], [], lineno=16, col_offset=0), ClassDef('IncrementalEncoder', [Attribute(Name('codecs', Load(), lineno=24, col_offset=25), 'IncrementalEncoder', Load(), lineno=24, col_offset=25)], [FunctionDef('encode', arguments([Name('self', Param(), lineno=25, col_offset=15), Name('input', Param(), lineno=25, col_offset=21), Name('final', Param(), lineno=25, col_offset=28)], None, None, [Name('False', Load(), lineno=25, col_offset=34)]), [Raise(Call(Name('UnicodeError', Load(), lineno=26, col_offset=14), [Str('undefined encoding', lineno=26, col_offset=27)], [], None, None, lineno=26, col_offset=14), None, None, lineno=26, col_offset=8)], [], lineno=25, col_offset=4)], [], lineno=24, col_offset=0), ClassDef('IncrementalDecoder', [Attribute(Name('codecs', Load(), lineno=28, col_offset=25), 'IncrementalDecoder', Load(), lineno=28, col_offset=25)], [FunctionDef('decode', arguments([Name('self', Param(), lineno=29, col_offset=15), Name('input', Param(), lineno=29, col_offset=21), Name('final', Param(), lineno=29, col_offset=28)], None, None, [Name('False', Load(), lineno=29, col_offset=34)]), [Raise(Call(Name('UnicodeError', Load(), lineno=30, col_offset=14), [Str('undefined encoding', lineno=30, col_offset=27)], [], None, None, lineno=30, col_offset=14), None, None, lineno=30, col_offset=8)], [], lineno=29, col_offset=4)], [], lineno=28, col_offset=0), ClassDef('StreamWriter', [Name('Codec', Load(), lineno=32, col_offset=19), Attribute(Name('codecs', Load(), lineno=32, col_offset=25), 'StreamWriter', Load(), lineno=32, col_offset=25)], [Pass( lineno=33, col_offset=4)], [], lineno=32, col_offset=0), ClassDef('StreamReader', [Name('Codec', Load(), lineno=35, col_offset=19), Attribute(Name('codecs', Load(), lineno=35, col_offset=25), 'StreamReader', Load(), lineno=35, col_offset=25)], [Pass( lineno=36, col_offset=4)], [], lineno=35, col_offset=0), FunctionDef('getregentry', arguments([], None, None, []), [Return(Call(Attribute(Name('codecs', Load(), lineno=41, col_offset=11), 'CodecInfo', Load(), lineno=41, col_offset=11), [], [keyword('name', Str('undefined', lineno=42, col_offset=13)), keyword('encode', Attribute(Call(Name('Codec', Load(), lineno=43, col_offset=15), [], [], None, None, lineno=43, col_offset=15), 'encode', Load(), lineno=43, col_offset=15)), keyword('decode', Attribute(Call(Name('Codec', Load(), lineno=44, col_offset=15), [], [], None, None, lineno=44, col_offset=15), 'decode', Load(), lineno=44, col_offset=15)), keyword('incrementalencoder', Name('IncrementalEncoder', Load(), lineno=45, col_offset=27)), keyword('incrementaldecoder', Name('IncrementalDecoder', Load(), lineno=46, col_offset=27)), keyword('streamwriter', Name('StreamWriter', Load(), lineno=47, col_offset=21)), keyword('streamreader', Name('StreamReader', Load(), lineno=48, col_offset=21))], None, None, lineno=41, col_offset=11), lineno=41, col_offset=4)], [], lineno=40, col_offset=0)])
