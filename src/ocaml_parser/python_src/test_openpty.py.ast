Module([Import([alias('os', None), alias('unittest', None)], lineno=3, col_offset=0), ImportFrom('test.test_support', [alias('run_unittest', None)], 0, lineno=4, col_offset=0), If(UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=6, col_offset=7), [Name('os', Load(), lineno=6, col_offset=15), Str('openpty', lineno=6, col_offset=19)], [], None, None, lineno=6, col_offset=7), lineno=6, col_offset=3), [Raise(Attribute(Name('unittest', Load(), lineno=7, col_offset=10), 'SkipTest', Load(), lineno=7, col_offset=10), Str('No openpty() available.', lineno=7, col_offset=29), None, lineno=7, col_offset=4)], [], lineno=6, col_offset=0), ClassDef('OpenptyTest', [Attribute(Name('unittest', Load(), lineno=10, col_offset=18), 'TestCase', Load(), lineno=10, col_offset=18)], [FunctionDef('test', arguments([Name('self', Param(), lineno=11, col_offset=13)], None, None, []), [Assign([Tuple([Name('master', Store(), lineno=12, col_offset=8), Name('slave', Store(), lineno=12, col_offset=16)], Store(), lineno=12, col_offset=8)], Call(Attribute(Name('os', Load(), lineno=12, col_offset=24), 'openpty', Load(), lineno=12, col_offset=24), [], [], None, None, lineno=12, col_offset=24), lineno=12, col_offset=8), If(UnaryOp(Not(), Call(Attribute(Name('os', Load(), lineno=13, col_offset=15), 'isatty', Load(), lineno=13, col_offset=15), [Name('slave', Load(), lineno=13, col_offset=25)], [], None, None, lineno=13, col_offset=15), lineno=13, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=14, col_offset=12), 'fail', Load(), lineno=14, col_offset=12), [Str('Slave-end of pty is not a terminal.', lineno=14, col_offset=22)], [], None, None, lineno=14, col_offset=12), lineno=14, col_offset=12)], [], lineno=13, col_offset=8), Expr(Call(Attribute(Name('os', Load(), lineno=16, col_offset=8), 'write', Load(), lineno=16, col_offset=8), [Name('slave', Load(), lineno=16, col_offset=17), Str('Ping!', lineno=16, col_offset=24)], [], None, None, lineno=16, col_offset=8), lineno=16, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=17, col_offset=8), 'assertEqual', Load(), lineno=17, col_offset=8), [Call(Attribute(Name('os', Load(), lineno=17, col_offset=25), 'read', Load(), lineno=17, col_offset=25), [Name('master', Load(), lineno=17, col_offset=33), Num(1024, lineno=17, col_offset=41)], [], None, None, lineno=17, col_offset=25), Str('Ping!', lineno=17, col_offset=48)], [], None, None, lineno=17, col_offset=8), lineno=17, col_offset=8)], [], lineno=11, col_offset=4)], [], lineno=10, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Name('run_unittest', Load(), lineno=20, col_offset=4), [Name('OpenptyTest', Load(), lineno=20, col_offset=17)], [], None, None, lineno=20, col_offset=4), lineno=20, col_offset=4)], [], lineno=19, col_offset=0), If(Compare(Name('__name__', Load(), lineno=22, col_offset=3), [Eq()], [Str('__main__', lineno=22, col_offset=15)], lineno=22, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=23, col_offset=4), [], [], None, None, lineno=23, col_offset=4), lineno=23, col_offset=4)], [], lineno=22, col_offset=0)])
