Module([Import([alias('unittest', None)], lineno=1, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=2, col_offset=0), Assign([Name('rfc822', Store(), lineno=4, col_offset=0)], Call(Attribute(Name('test_support', Load(), lineno=4, col_offset=9), 'import_module', Load(), lineno=4, col_offset=9), [Str('rfc822', lineno=4, col_offset=36)], [keyword('deprecated', Name('True', Load(), lineno=4, col_offset=57))], None, None, lineno=4, col_offset=9), lineno=4, col_offset=0), TryExcept([ImportFrom('cStringIO', [alias('StringIO', None)], 0, lineno=7, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=8, col_offset=7), None, [ImportFrom('StringIO', [alias('StringIO', None)], 0, lineno=9, col_offset=4)], lineno=8, col_offset=0)], [], lineno=6, col_offset=0), ClassDef('MessageTestCase', [Attribute(Name('unittest', Load(), lineno=12, col_offset=22), 'TestCase', Load(), lineno=12, col_offset=22)], [FunctionDef('create_message', arguments([Name('self', Param(), lineno=13, col_offset=23), Name('msg', Param(), lineno=13, col_offset=29)], None, None, []), [Return(Call(Attribute(Name('rfc822', Load(), lineno=14, col_offset=15), 'Message', Load(), lineno=14, col_offset=15), [Call(Name('StringIO', Load(), lineno=14, col_offset=30), [Name('msg', Load(), lineno=14, col_offset=39)], [], None, None, lineno=14, col_offset=30)], [], None, None, lineno=14, col_offset=15), lineno=14, col_offset=8)], [], lineno=13, col_offset=4), FunctionDef('test_get', arguments([Name('self', Param(), lineno=16, col_offset=17)], None, None, []), [Assign([Name('msg', Store(), lineno=17, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=17, col_offset=14), 'create_message', Load(), lineno=17, col_offset=14), [Str('To: "last, first" <userid@foo.net>\n\ntest\n', lineno=18, col_offset=12)], [], None, None, lineno=17, col_offset=14), lineno=17, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=19, col_offset=8), 'assertTrue', Load(), lineno=19, col_offset=8), [Compare(Call(Attribute(Name('msg', Load(), lineno=19, col_offset=24), 'get', Load(), lineno=19, col_offset=24), [Str('to', lineno=19, col_offset=32)], [], None, None, lineno=19, col_offset=24), [Eq()], [Str('"last, first" <userid@foo.net>', lineno=19, col_offset=41)], lineno=19, col_offset=24)], [], None, None, lineno=19, col_offset=8), lineno=19, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=20, col_offset=8), 'assertTrue', Load(), lineno=20, col_offset=8), [Compare(Call(Attribute(Name('msg', Load(), lineno=20, col_offset=24), 'get', Load(), lineno=20, col_offset=24), [Str('TO', lineno=20, col_offset=32)], [], None, None, lineno=20, col_offset=24), [Eq()], [Str('"last, first" <userid@foo.net>', lineno=20, col_offset=41)], lineno=20, col_offset=24)], [], None, None, lineno=20, col_offset=8), lineno=20, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=21, col_offset=8), 'assertTrue', Load(), lineno=21, col_offset=8), [Compare(Call(Attribute(Name('msg', Load(), lineno=21, col_offset=24), 'get', Load(), lineno=21, col_offset=24), [Str('No-Such-Header', lineno=21, col_offset=32)], [], None, None, lineno=21, col_offset=24), [Is()], [Name('None', Load(), lineno=21, col_offset=53)], lineno=21, col_offset=24)], [], None, None, lineno=21, col_offset=8), lineno=21, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=22, col_offset=8), 'assertTrue', Load(), lineno=22, col_offset=8), [Compare(Call(Attribute(Name('msg', Load(), lineno=22, col_offset=24), 'get', Load(), lineno=22, col_offset=24), [Str('No-Such-Header', lineno=22, col_offset=32), Str('No-Such-Value', lineno=22, col_offset=50)], [], None, None, lineno=22, col_offset=24), [Eq()], [Str('No-Such-Value', lineno=23, col_offset=24)], lineno=22, col_offset=24)], [], None, None, lineno=22, col_offset=8), lineno=22, col_offset=8)], [], lineno=16, col_offset=4), FunctionDef('test_setdefault', arguments([Name('self', Param(), lineno=25, col_offset=24)], None, None, []), [Assign([Name('msg', Store(), lineno=26, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=26, col_offset=14), 'create_message', Load(), lineno=26, col_offset=14), [Str('To: "last, first" <userid@foo.net>\n\ntest\n', lineno=27, col_offset=12)], [], None, None, lineno=26, col_offset=14), lineno=26, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=28, col_offset=8), 'assertTrue', Load(), lineno=28, col_offset=8), [UnaryOp(Not(), Call(Attribute(Name('msg', Load(), lineno=28, col_offset=28), 'has_key', Load(), lineno=28, col_offset=28), [Str('New-Header', lineno=28, col_offset=40)], [], None, None, lineno=28, col_offset=28), lineno=28, col_offset=24)], [], None, None, lineno=28, col_offset=8), lineno=28, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=29, col_offset=8), 'assertTrue', Load(), lineno=29, col_offset=8), [Compare(Call(Attribute(Name('msg', Load(), lineno=29, col_offset=24), 'setdefault', Load(), lineno=29, col_offset=24), [Str('New-Header', lineno=29, col_offset=39), Str('New-Value', lineno=29, col_offset=53)], [], None, None, lineno=29, col_offset=24), [Eq()], [Str('New-Value', lineno=29, col_offset=69)], lineno=29, col_offset=24)], [], None, None, lineno=29, col_offset=8), lineno=29, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=30, col_offset=8), 'assertTrue', Load(), lineno=30, col_offset=8), [Compare(Call(Attribute(Name('msg', Load(), lineno=30, col_offset=24), 'setdefault', Load(), lineno=30, col_offset=24), [Str('New-Header', lineno=30, col_offset=39), Str('Different-Value', lineno=30, col_offset=53)], [], None, None, lineno=30, col_offset=24), [Eq()], [Str('New-Value', lineno=31, col_offset=24)], lineno=30, col_offset=24)], [], None, None, lineno=30, col_offset=8), lineno=30, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=32, col_offset=8), 'assertTrue', Load(), lineno=32, col_offset=8), [Compare(Subscript(Name('msg', Load(), lineno=32, col_offset=24), Index(Str('new-header', lineno=32, col_offset=28)), Load(), lineno=32, col_offset=24), [Eq()], [Str('New-Value', lineno=32, col_offset=45)], lineno=32, col_offset=24)], [], None, None, lineno=32, col_offset=8), lineno=32, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=34, col_offset=8), 'assertTrue', Load(), lineno=34, col_offset=8), [Compare(Call(Attribute(Name('msg', Load(), lineno=34, col_offset=24), 'setdefault', Load(), lineno=34, col_offset=24), [Str('Another-Header', lineno=34, col_offset=39)], [], None, None, lineno=34, col_offset=24), [Eq()], [Str('', lineno=34, col_offset=60)], lineno=34, col_offset=24)], [], None, None, lineno=34, col_offset=8), lineno=34, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=35, col_offset=8), 'assertTrue', Load(), lineno=35, col_offset=8), [Compare(Subscript(Name('msg', Load(), lineno=35, col_offset=24), Index(Str('another-header', lineno=35, col_offset=28)), Load(), lineno=35, col_offset=24), [Eq()], [Str('', lineno=35, col_offset=49)], lineno=35, col_offset=24)], [], None, None, lineno=35, col_offset=8), lineno=35, col_offset=8)], [], lineno=25, col_offset=4), FunctionDef('check', arguments([Name('self', Param(), lineno=37, col_offset=14), Name('msg', Param(), lineno=37, col_offset=20), Name('results', Param(), lineno=37, col_offset=25)], None, None, []), [Expr(Str('Check addresses and the date.', lineno=38, col_offset=8), lineno=38, col_offset=8), Assign([Name('m', Store(), lineno=39, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=39, col_offset=12), 'create_message', Load(), lineno=39, col_offset=12), [Name('msg', Load(), lineno=39, col_offset=32)], [], None, None, lineno=39, col_offset=12), lineno=39, col_offset=8), Assign([Name('i', Store(), lineno=40, col_offset=8)], Num(0, lineno=40, col_offset=12), lineno=40, col_offset=8), For(Tuple([Name('n', Store(), lineno=41, col_offset=12), Name('a', Store(), lineno=41, col_offset=15)], Store(), lineno=41, col_offset=12), BinOp(Call(Attribute(Name('m', Load(), lineno=41, col_offset=20), 'getaddrlist', Load(), lineno=41, col_offset=20), [Str('to', lineno=41, col_offset=34)], [], None, None, lineno=41, col_offset=20), Add(), Call(Attribute(Name('m', Load(), lineno=41, col_offset=42), 'getaddrlist', Load(), lineno=41, col_offset=42), [Str('cc', lineno=41, col_offset=56)], [], None, None, lineno=41, col_offset=42), lineno=41, col_offset=20), [TryExcept([Assign([Tuple([Name('mn', Store(), lineno=43, col_offset=16), Name('ma', Store(), lineno=43, col_offset=20)], Store(), lineno=43, col_offset=16)], Tuple([Subscript(Subscript(Name('results', Load(), lineno=43, col_offset=25), Index(Name('i', Load(), lineno=43, col_offset=33)), Load(), lineno=43, col_offset=25), Index(Num(0, lineno=43, col_offset=36)), Load(), lineno=43, col_offset=25), Subscript(Subscript(Name('results', Load(), lineno=43, col_offset=40), Index(Name('i', Load(), lineno=43, col_offset=48)), Load(), lineno=43, col_offset=40), Index(Num(1, lineno=43, col_offset=51)), Load(), lineno=43, col_offset=40)], Load(), lineno=43, col_offset=25), lineno=43, col_offset=16)], [ExceptHandler(Name('IndexError', Load(), lineno=44, col_offset=19), None, [Print(None, [Str('extra parsed address:', lineno=45, col_offset=22), Call(Name('repr', Load(), lineno=45, col_offset=47), [Name('n', Load(), lineno=45, col_offset=52)], [], None, None, lineno=45, col_offset=47), Call(Name('repr', Load(), lineno=45, col_offset=56), [Name('a', Load(), lineno=45, col_offset=61)], [], None, None, lineno=45, col_offset=56)], True, lineno=45, col_offset=16), Continue( lineno=46, col_offset=16)], lineno=44, col_offset=12)], [], lineno=42, col_offset=12), Assign([Name('i', Store(), lineno=47, col_offset=12)], BinOp(Name('i', Load(), lineno=47, col_offset=16), Add(), Num(1, lineno=47, col_offset=20), lineno=47, col_offset=16), lineno=47, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=48, col_offset=12), 'assertEqual', Load(), lineno=48, col_offset=12), [Name('mn', Load(), lineno=48, col_offset=29), Name('n', Load(), lineno=48, col_offset=33), BinOp(Str('Un-expected name: %r != %r', lineno=49, col_offset=29), Mod(), Tuple([Name('mn', Load(), lineno=49, col_offset=61), Name('n', Load(), lineno=49, col_offset=65)], Load(), lineno=49, col_offset=61), lineno=49, col_offset=29)], [], None, None, lineno=48, col_offset=12), lineno=48, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=50, col_offset=12), 'assertEqual', Load(), lineno=50, col_offset=12), [Name('ma', Load(), lineno=50, col_offset=29), Name('a', Load(), lineno=50, col_offset=33), BinOp(Str('Un-expected address: %r != %r', lineno=51, col_offset=29), Mod(), Tuple([Name('ma', Load(), lineno=51, col_offset=64), Name('a', Load(), lineno=51, col_offset=68)], Load(), lineno=51, col_offset=64), lineno=51, col_offset=29)], [], None, None, lineno=50, col_offset=12), lineno=50, col_offset=12), If(BoolOp(And(), [Compare(Name('mn', Load(), lineno=52, col_offset=15), [Eq()], [Name('n', Load(), lineno=52, col_offset=21)], lineno=52, col_offset=15), Compare(Name('ma', Load(), lineno=52, col_offset=27), [Eq()], [Name('a', Load(), lineno=52, col_offset=33)], lineno=52, col_offset=27)], lineno=52, col_offset=15), [Pass( lineno=53, col_offset=16)], [Print(None, [Str('not found:', lineno=55, col_offset=22), Call(Name('repr', Load(), lineno=55, col_offset=36), [Name('n', Load(), lineno=55, col_offset=41)], [], None, None, lineno=55, col_offset=36), Call(Name('repr', Load(), lineno=55, col_offset=45), [Name('a', Load(), lineno=55, col_offset=50)], [], None, None, lineno=55, col_offset=45)], True, lineno=55, col_offset=16)], lineno=52, col_offset=12)], [], lineno=41, col_offset=8), Assign([Name('out', Store(), lineno=57, col_offset=8)], Call(Attribute(Name('m', Load(), lineno=57, col_offset=14), 'getdate', Load(), lineno=57, col_offset=14), [Str('date', lineno=57, col_offset=24)], [], None, None, lineno=57, col_offset=14), lineno=57, col_offset=8), If(Name('out', Load(), lineno=58, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=59, col_offset=12), 'assertEqual', Load(), lineno=59, col_offset=12), [Name('out', Load(), lineno=59, col_offset=29), Tuple([Num(1999, lineno=60, col_offset=30), Num(1, lineno=60, col_offset=36), Num(13, lineno=60, col_offset=39), Num(23, lineno=60, col_offset=43), Num(57, lineno=60, col_offset=47), Num(35, lineno=60, col_offset=51), Num(0, lineno=60, col_offset=55), Num(1, lineno=60, col_offset=58), Num(0, lineno=60, col_offset=61)], Load(), lineno=60, col_offset=30), Str('date conversion failed', lineno=61, col_offset=29)], [], None, None, lineno=59, col_offset=12), lineno=59, col_offset=12)], [], lineno=58, col_offset=8)], [], lineno=37, col_offset=4), FunctionDef('test_basic', arguments([Name('self', Param(), lineno=67, col_offset=19)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=68, col_offset=8), 'check', Load(), lineno=68, col_offset=8), [Str('Date:    Wed, 13 Jan 1999 23:57:35 -0500\nFrom:    Guido van Rossum <guido@CNRI.Reston.VA.US>\nTo:      "Guido van\n\t : Rossum" <guido@python.org>\nSubject: test2\n\ntest2\n', lineno=69, col_offset=12), List([Tuple([Str('Guido van\n\t : Rossum', lineno=76, col_offset=14), Str('guido@python.org', lineno=76, col_offset=40)], Load(), lineno=76, col_offset=14)], Load(), lineno=76, col_offset=12)], [], None, None, lineno=68, col_offset=8), lineno=68, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=78, col_offset=8), 'check', Load(), lineno=78, col_offset=8), [Str('From: Barry <bwarsaw@python.org\nTo: guido@python.org (Guido: the Barbarian)\nSubject: nonsense\nDate: Wednesday, January 13 1999 23:57:35 -0500\n\ntest', lineno=79, col_offset=12), List([Tuple([Str('Guido: the Barbarian', lineno=85, col_offset=14), Str('guido@python.org', lineno=85, col_offset=38)], Load(), lineno=85, col_offset=14)], Load(), lineno=85, col_offset=12)], [], None, None, lineno=78, col_offset=8), lineno=78, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=87, col_offset=8), 'check', Load(), lineno=87, col_offset=8), [Str('From: Barry <bwarsaw@python.org\nTo: guido@python.org (Guido: the Barbarian)\nCc: "Guido: the Madman" <guido@python.org>\nDate:  13-Jan-1999 23:57:35 EST\n\ntest', lineno=88, col_offset=12), List([Tuple([Str('Guido: the Barbarian', lineno=94, col_offset=14), Str('guido@python.org', lineno=94, col_offset=38)], Load(), lineno=94, col_offset=14), Tuple([Str('Guido: the Madman', lineno=95, col_offset=14), Str('guido@python.org', lineno=95, col_offset=35)], Load(), lineno=95, col_offset=14)], Load(), lineno=94, col_offset=12)], [], None, None, lineno=87, col_offset=8), lineno=87, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=98, col_offset=8), 'check', Load(), lineno=98, col_offset=8), [Str('To: "The monster with\n     the very long name: Guido" <guido@python.org>\nDate:    Wed, 13 Jan 1999 23:57:35 -0500\n\ntest', lineno=99, col_offset=12), List([Tuple([Str('The monster with\n     the very long name: Guido', lineno=104, col_offset=14), Str('guido@python.org', lineno=105, col_offset=14)], Load(), lineno=104, col_offset=14)], Load(), lineno=104, col_offset=12)], [], None, None, lineno=98, col_offset=8), lineno=98, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=107, col_offset=8), 'check', Load(), lineno=107, col_offset=8), [Str('To: "Amit J. Patel" <amitp@Theory.Stanford.EDU>\nCC: Mike Fletcher <mfletch@vrtelecom.com>,\n        "\'string-sig@python.org\'" <string-sig@python.org>\nCc: fooz@bat.com, bart@toof.com\nCc: goit@lip.com\nDate:    Wed, 13 Jan 1999 23:57:35 -0500\n\ntest', lineno=108, col_offset=12), List([Tuple([Str('Amit J. Patel', lineno=116, col_offset=14), Str('amitp@Theory.Stanford.EDU', lineno=116, col_offset=31)], Load(), lineno=116, col_offset=14), Tuple([Str('Mike Fletcher', lineno=117, col_offset=14), Str('mfletch@vrtelecom.com', lineno=117, col_offset=31)], Load(), lineno=117, col_offset=14), Tuple([Str("'string-sig@python.org'", lineno=118, col_offset=14), Str('string-sig@python.org', lineno=118, col_offset=41)], Load(), lineno=118, col_offset=14), Tuple([Str('', lineno=119, col_offset=14), Str('fooz@bat.com', lineno=119, col_offset=18)], Load(), lineno=119, col_offset=14), Tuple([Str('', lineno=120, col_offset=14), Str('bart@toof.com', lineno=120, col_offset=18)], Load(), lineno=120, col_offset=14), Tuple([Str('', lineno=121, col_offset=14), Str('goit@lip.com', lineno=121, col_offset=18)], Load(), lineno=121, col_offset=14)], Load(), lineno=116, col_offset=12)], [], None, None, lineno=107, col_offset=8), lineno=107, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=124, col_offset=8), 'check', Load(), lineno=124, col_offset=8), [Str('To: Some One <someone@dom.ain>\nFrom: Anudder Persin <subuddy.else@dom.ain>\nDate:\n\ntest', lineno=125, col_offset=12), List([Tuple([Str('Some One', lineno=130, col_offset=14), Str('someone@dom.ain', lineno=130, col_offset=26)], Load(), lineno=130, col_offset=14)], Load(), lineno=130, col_offset=12)], [], None, None, lineno=124, col_offset=8), lineno=124, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=132, col_offset=8), 'check', Load(), lineno=132, col_offset=8), [Str('To: person@dom.ain (User J. Person)\n\n', lineno=133, col_offset=12), List([Tuple([Str('User J. Person', lineno=134, col_offset=14), Str('person@dom.ain', lineno=134, col_offset=32)], Load(), lineno=134, col_offset=14)], Load(), lineno=134, col_offset=12)], [], None, None, lineno=132, col_offset=8), lineno=132, col_offset=8)], [], lineno=67, col_offset=4), FunctionDef('test_doublecomment', arguments([Name('self', Param(), lineno=136, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=138, col_offset=8), 'check', Load(), lineno=138, col_offset=8), [Str('To: person@dom.ain ((User J. Person)), John Doe <foo@bar.com>\n\n', lineno=139, col_offset=12), List([Tuple([Str('User J. Person', lineno=140, col_offset=14), Str('person@dom.ain', lineno=140, col_offset=32)], Load(), lineno=140, col_offset=14), Tuple([Str('John Doe', lineno=140, col_offset=52), Str('foo@bar.com', lineno=140, col_offset=64)], Load(), lineno=140, col_offset=52)], Load(), lineno=140, col_offset=12)], [], None, None, lineno=138, col_offset=8), lineno=138, col_offset=8)], [], lineno=136, col_offset=4), FunctionDef('test_twisted', arguments([Name('self', Param(), lineno=142, col_offset=21)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=146, col_offset=8), 'check', Load(), lineno=146, col_offset=8), [Str('To: <[smtp:dd47@mail.xxx.edu]_at_hmhq@hdq-mdm1-imgout.companay.com>\nDate:    Wed, 13 Jan 1999 23:57:35 -0500\n\ntest', lineno=147, col_offset=12), List([Tuple([Str('', lineno=151, col_offset=14), Str('', lineno=151, col_offset=18)], Load(), lineno=151, col_offset=14), Tuple([Str('', lineno=152, col_offset=14), Str('dd47@mail.xxx.edu', lineno=152, col_offset=18)], Load(), lineno=152, col_offset=14), Tuple([Str('', lineno=153, col_offset=14), Str('_at_hmhq@hdq-mdm1-imgout.companay.com', lineno=153, col_offset=18)], Load(), lineno=153, col_offset=14)], Load(), lineno=151, col_offset=12)], [], None, None, lineno=146, col_offset=8), lineno=146, col_offset=8)], [], lineno=142, col_offset=4), FunctionDef('test_commas_in_full_name', arguments([Name('self', Param(), lineno=156, col_offset=33)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=160, col_offset=8), 'check', Load(), lineno=160, col_offset=8), [Str('To: "last, first" <userid@foo.net>\n\ntest', lineno=161, col_offset=12), List([Tuple([Str('last, first', lineno=164, col_offset=14), Str('userid@foo.net', lineno=164, col_offset=29)], Load(), lineno=164, col_offset=14)], Load(), lineno=164, col_offset=12)], [], None, None, lineno=160, col_offset=8), lineno=160, col_offset=8)], [], lineno=156, col_offset=4), FunctionDef('test_quoted_name', arguments([Name('self', Param(), lineno=166, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=167, col_offset=8), 'check', Load(), lineno=167, col_offset=8), [Str('To: (Comment stuff) "Quoted name"@somewhere.com\n\ntest', lineno=168, col_offset=12), List([Tuple([Str('Comment stuff', lineno=171, col_offset=14), Str('"Quoted name"@somewhere.com', lineno=171, col_offset=31)], Load(), lineno=171, col_offset=14)], Load(), lineno=171, col_offset=12)], [], None, None, lineno=167, col_offset=8), lineno=167, col_offset=8)], [], lineno=166, col_offset=4), FunctionDef('test_bogus_to_header', arguments([Name('self', Param(), lineno=173, col_offset=29)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=174, col_offset=8), 'check', Load(), lineno=174, col_offset=8), [Str('To: :\nCc: goit@lip.com\nDate:    Wed, 13 Jan 1999 23:57:35 -0500\n\ntest', lineno=175, col_offset=12), List([Tuple([Str('', lineno=180, col_offset=14), Str('goit@lip.com', lineno=180, col_offset=18)], Load(), lineno=180, col_offset=14)], Load(), lineno=180, col_offset=12)], [], None, None, lineno=174, col_offset=8), lineno=174, col_offset=8)], [], lineno=173, col_offset=4), FunctionDef('test_addr_ipquad', arguments([Name('self', Param(), lineno=182, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=183, col_offset=8), 'check', Load(), lineno=183, col_offset=8), [Str('To: guido@[132.151.1.21]\n\nfoo', lineno=184, col_offset=12), List([Tuple([Str('', lineno=187, col_offset=14), Str('guido@[132.151.1.21]', lineno=187, col_offset=18)], Load(), lineno=187, col_offset=14)], Load(), lineno=187, col_offset=12)], [], None, None, lineno=183, col_offset=8), lineno=183, col_offset=8)], [], lineno=182, col_offset=4), FunctionDef('test_iter', arguments([Name('self', Param(), lineno=189, col_offset=18)], None, None, []), [Assign([Name('m', Store(), lineno=190, col_offset=8)], Call(Attribute(Name('rfc822', Load(), lineno=190, col_offset=12), 'Message', Load(), lineno=190, col_offset=12), [Call(Name('StringIO', Load(), lineno=190, col_offset=27), [Str('Date:    Wed, 13 Jan 1999 23:57:35 -0500\nFrom:    Guido van Rossum <guido@CNRI.Reston.VA.US>\nTo:      "Guido van\n\t : Rossum" <guido@python.org>\nSubject: test2\n\ntest2\n', lineno=191, col_offset=12)], [], None, None, lineno=190, col_offset=27)], [], None, None, lineno=190, col_offset=12), lineno=190, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=198, col_offset=8), 'assertEqual', Load(), lineno=198, col_offset=8), [Call(Name('sorted', Load(), lineno=198, col_offset=25), [Name('m', Load(), lineno=198, col_offset=32)], [], None, None, lineno=198, col_offset=25), List([Str('date', lineno=198, col_offset=37), Str('from', lineno=198, col_offset=45), Str('subject', lineno=198, col_offset=53), Str('to', lineno=198, col_offset=64)], Load(), lineno=198, col_offset=36)], [], None, None, lineno=198, col_offset=8), lineno=198, col_offset=8)], [], lineno=189, col_offset=4), FunctionDef('test_rfc2822_phrases', arguments([Name('self', Param(), lineno=200, col_offset=29)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=206, col_offset=8), 'check', Load(), lineno=206, col_offset=8), [Str('To: User J. Person <person@dom.ain>\n\n', lineno=206, col_offset=19), List([Tuple([Str('User J. Person', lineno=207, col_offset=21), Str('person@dom.ain', lineno=207, col_offset=39)], Load(), lineno=207, col_offset=21)], Load(), lineno=207, col_offset=19)], [], None, None, lineno=206, col_offset=8), lineno=206, col_offset=8)], [], lineno=200, col_offset=4), FunctionDef('test_2getaddrlist', arguments([Name('self', Param(), lineno=217, col_offset=26)], None, None, []), [Assign([Name('eq', Store(), lineno=218, col_offset=8)], Attribute(Name('self', Load(), lineno=218, col_offset=13), 'assertEqual', Load(), lineno=218, col_offset=13), lineno=218, col_offset=8), Assign([Name('msg', Store(), lineno=219, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=219, col_offset=14), 'create_message', Load(), lineno=219, col_offset=14), [Str('To: aperson@dom.ain\nCc: bperson@dom.ain\nCc: cperson@dom.ain\nCc: dperson@dom.ain\n\nA test message.\n', lineno=226, col_offset=-1)], [], None, None, lineno=219, col_offset=14), lineno=219, col_offset=8), Assign([Name('ccs', Store(), lineno=227, col_offset=8)], ListComp(Tuple([Str('', lineno=227, col_offset=16), Name('a', Load(), lineno=227, col_offset=20)], Load(), lineno=227, col_offset=16), [comprehension(Name('a', Store(), lineno=227, col_offset=27), List([Str('bperson@dom.ain', lineno=228, col_offset=16), Str('cperson@dom.ain', lineno=228, col_offset=35), Str('dperson@dom.ain', lineno=228, col_offset=54)], Load(), lineno=228, col_offset=15), [])], lineno=227, col_offset=15), lineno=227, col_offset=8), Assign([Name('addrs', Store(), lineno=229, col_offset=8)], Call(Attribute(Name('msg', Load(), lineno=229, col_offset=16), 'getaddrlist', Load(), lineno=229, col_offset=16), [Str('cc', lineno=229, col_offset=32)], [], None, None, lineno=229, col_offset=16), lineno=229, col_offset=8), Expr(Call(Attribute(Name('addrs', Load(), lineno=230, col_offset=8), 'sort', Load(), lineno=230, col_offset=8), [], [], None, None, lineno=230, col_offset=8), lineno=230, col_offset=8), Expr(Call(Name('eq', Load(), lineno=231, col_offset=8), [Name('addrs', Load(), lineno=231, col_offset=11), Name('ccs', Load(), lineno=231, col_offset=18)], [], None, None, lineno=231, col_offset=8), lineno=231, col_offset=8), Assign([Name('addrs', Store(), lineno=233, col_offset=8)], Call(Attribute(Name('msg', Load(), lineno=233, col_offset=16), 'getaddrlist', Load(), lineno=233, col_offset=16), [Str('cc', lineno=233, col_offset=32)], [], None, None, lineno=233, col_offset=16), lineno=233, col_offset=8), Expr(Call(Attribute(Name('addrs', Load(), lineno=234, col_offset=8), 'sort', Load(), lineno=234, col_offset=8), [], [], None, None, lineno=234, col_offset=8), lineno=234, col_offset=8), Expr(Call(Name('eq', Load(), lineno=235, col_offset=8), [Name('addrs', Load(), lineno=235, col_offset=11), Name('ccs', Load(), lineno=235, col_offset=18)], [], None, None, lineno=235, col_offset=8), lineno=235, col_offset=8)], [], lineno=217, col_offset=4), FunctionDef('test_parseaddr', arguments([Name('self', Param(), lineno=237, col_offset=23)], None, None, []), [Assign([Name('eq', Store(), lineno=238, col_offset=8)], Attribute(Name('self', Load(), lineno=238, col_offset=13), 'assertEqual', Load(), lineno=238, col_offset=13), lineno=238, col_offset=8), Expr(Call(Name('eq', Load(), lineno=239, col_offset=8), [Call(Attribute(Name('rfc822', Load(), lineno=239, col_offset=11), 'parseaddr', Load(), lineno=239, col_offset=11), [Str('<>', lineno=239, col_offset=28)], [], None, None, lineno=239, col_offset=11), Tuple([Str('', lineno=239, col_offset=36), Str('', lineno=239, col_offset=40)], Load(), lineno=239, col_offset=36)], [], None, None, lineno=239, col_offset=8), lineno=239, col_offset=8), Expr(Call(Name('eq', Load(), lineno=240, col_offset=8), [Call(Attribute(Name('rfc822', Load(), lineno=240, col_offset=11), 'parseaddr', Load(), lineno=240, col_offset=11), [Str('aperson@dom.ain', lineno=240, col_offset=28)], [], None, None, lineno=240, col_offset=11), Tuple([Str('', lineno=240, col_offset=49), Str('aperson@dom.ain', lineno=240, col_offset=53)], Load(), lineno=240, col_offset=49)], [], None, None, lineno=240, col_offset=8), lineno=240, col_offset=8), Expr(Call(Name('eq', Load(), lineno=241, col_offset=8), [Call(Attribute(Name('rfc822', Load(), lineno=241, col_offset=11), 'parseaddr', Load(), lineno=241, col_offset=11), [Str('bperson@dom.ain (Bea A. Person)', lineno=241, col_offset=28)], [], None, None, lineno=241, col_offset=11), Tuple([Str('Bea A. Person', lineno=242, col_offset=12), Str('bperson@dom.ain', lineno=242, col_offset=29)], Load(), lineno=242, col_offset=12)], [], None, None, lineno=241, col_offset=8), lineno=241, col_offset=8), Expr(Call(Name('eq', Load(), lineno=243, col_offset=8), [Call(Attribute(Name('rfc822', Load(), lineno=243, col_offset=11), 'parseaddr', Load(), lineno=243, col_offset=11), [Str('Cynthia Person <cperson@dom.ain>', lineno=243, col_offset=28)], [], None, None, lineno=243, col_offset=11), Tuple([Str('Cynthia Person', lineno=244, col_offset=12), Str('cperson@dom.ain', lineno=244, col_offset=30)], Load(), lineno=244, col_offset=12)], [], None, None, lineno=243, col_offset=8), lineno=243, col_offset=8)], [], lineno=237, col_offset=4), FunctionDef('test_quote_unquote', arguments([Name('self', Param(), lineno=246, col_offset=27)], None, None, []), [Assign([Name('eq', Store(), lineno=247, col_offset=8)], Attribute(Name('self', Load(), lineno=247, col_offset=13), 'assertEqual', Load(), lineno=247, col_offset=13), lineno=247, col_offset=8), Expr(Call(Name('eq', Load(), lineno=248, col_offset=8), [Call(Attribute(Name('rfc822', Load(), lineno=248, col_offset=11), 'quote', Load(), lineno=248, col_offset=11), [Str('foo\\wacky"name', lineno=248, col_offset=24)], [], None, None, lineno=248, col_offset=11), Str('foo\\\\wacky\\"name', lineno=248, col_offset=44)], [], None, None, lineno=248, col_offset=8), lineno=248, col_offset=8), Expr(Call(Name('eq', Load(), lineno=249, col_offset=8), [Call(Attribute(Name('rfc822', Load(), lineno=249, col_offset=11), 'unquote', Load(), lineno=249, col_offset=11), [Str('"foo\\\\wacky\\"name"', lineno=249, col_offset=26)], [], None, None, lineno=249, col_offset=11), Str('foo\\wacky"name', lineno=249, col_offset=52)], [], None, None, lineno=249, col_offset=8), lineno=249, col_offset=8)], [], lineno=246, col_offset=4)], [], lineno=12, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=253, col_offset=4), 'run_unittest', Load(), lineno=253, col_offset=4), [Name('MessageTestCase', Load(), lineno=253, col_offset=30)], [], None, None, lineno=253, col_offset=4), lineno=253, col_offset=4)], [], lineno=252, col_offset=0), If(Compare(Name('__name__', Load(), lineno=256, col_offset=3), [Eq()], [Str('__main__', lineno=256, col_offset=15)], lineno=256, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=257, col_offset=4), [], [], None, None, lineno=257, col_offset=4), lineno=257, col_offset=4)], [], lineno=256, col_offset=0)])
