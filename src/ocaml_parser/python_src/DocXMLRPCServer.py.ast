Module([Expr(Str('Self documenting XML-RPC Server.\n\nThis module can be used to create XML-RPC servers that\nserve pydoc-style documentation in response to HTTP\nGET requests. This documentation is dynamically generated\nbased on the functions and methods registered with the\nserver.\n\nThis module is built upon the pydoc and SimpleXMLRPCServer\nmodules.\n', lineno=11, col_offset=-1), lineno=11, col_offset=-1), Import([alias('pydoc', None)], lineno=13, col_offset=0), Import([alias('inspect', None)], lineno=14, col_offset=0), Import([alias('re', None)], lineno=15, col_offset=0), Import([alias('sys', None)], lineno=16, col_offset=0), ImportFrom('SimpleXMLRPCServer', [alias('SimpleXMLRPCServer', None), alias('SimpleXMLRPCRequestHandler', None), alias('CGIXMLRPCRequestHandler', None), alias('resolve_dotted_attribute', None)], 0, lineno=18, col_offset=0), ClassDef('ServerHTMLDoc', [Attribute(Name('pydoc', Load(), lineno=23, col_offset=20), 'HTMLDoc', Load(), lineno=23, col_offset=20)], [Expr(Str('Class used to generate pydoc HTML document for a server', lineno=24, col_offset=4), lineno=24, col_offset=4), FunctionDef('markup', arguments([Name('self', Param(), lineno=26, col_offset=15), Name('text', Param(), lineno=26, col_offset=21), Name('escape', Param(), lineno=26, col_offset=27), Name('funcs', Param(), lineno=26, col_offset=40), Name('classes', Param(), lineno=26, col_offset=50), Name('methods', Param(), lineno=26, col_offset=62)], None, None, [Name('None', Load(), lineno=26, col_offset=34), Dict([], [], lineno=26, col_offset=46), Dict([], [], lineno=26, col_offset=58), Dict([], [], lineno=26, col_offset=70)]), [Expr(Str('Mark up some plain text, given a context of symbols to look for.\n        Each context dictionary maps object names to anchor names.', lineno=28, col_offset=-1), lineno=28, col_offset=-1), Assign([Name('escape', Store(), lineno=29, col_offset=8)], BoolOp(Or(), [Name('escape', Load(), lineno=29, col_offset=17), Attribute(Name('self', Load(), lineno=29, col_offset=27), 'escape', Load(), lineno=29, col_offset=27)], lineno=29, col_offset=17), lineno=29, col_offset=8), Assign([Name('results', Store(), lineno=30, col_offset=8)], List([], Load(), lineno=30, col_offset=18), lineno=30, col_offset=8), Assign([Name('here', Store(), lineno=31, col_offset=8)], Num(0, lineno=31, col_offset=15), lineno=31, col_offset=8), Assign([Name('pattern', Store(), lineno=37, col_offset=8)], Call(Attribute(Name('re', Load(), lineno=37, col_offset=18), 'compile', Load(), lineno=37, col_offset=18), [Str('\\b((http|ftp)://\\S+[\\w/]|RFC[- ]?(\\d+)|PEP[- ]?(\\d+)|(self\\.)?((?:\\w|\\.)+))\\b', lineno=37, col_offset=29)], [], None, None, lineno=37, col_offset=18), lineno=37, col_offset=8), While(Num(1, lineno=41, col_offset=14), [Assign([Name('match', Store(), lineno=42, col_offset=12)], Call(Attribute(Name('pattern', Load(), lineno=42, col_offset=20), 'search', Load(), lineno=42, col_offset=20), [Name('text', Load(), lineno=42, col_offset=35), Name('here', Load(), lineno=42, col_offset=41)], [], None, None, lineno=42, col_offset=20), lineno=42, col_offset=12), If(UnaryOp(Not(), Name('match', Load(), lineno=43, col_offset=19), lineno=43, col_offset=15), [Break( lineno=43, col_offset=26)], [], lineno=43, col_offset=12), Assign([Tuple([Name('start', Store(), lineno=44, col_offset=12), Name('end', Store(), lineno=44, col_offset=19)], Store(), lineno=44, col_offset=12)], Call(Attribute(Name('match', Load(), lineno=44, col_offset=25), 'span', Load(), lineno=44, col_offset=25), [], [], None, None, lineno=44, col_offset=25), lineno=44, col_offset=12), Expr(Call(Attribute(Name('results', Load(), lineno=45, col_offset=12), 'append', Load(), lineno=45, col_offset=12), [Call(Name('escape', Load(), lineno=45, col_offset=27), [Subscript(Name('text', Load(), lineno=45, col_offset=34), Slice(Name('here', Load(), lineno=45, col_offset=39), Name('start', Load(), lineno=45, col_offset=44), None), Load(), lineno=45, col_offset=34)], [], None, None, lineno=45, col_offset=27)], [], None, None, lineno=45, col_offset=12), lineno=45, col_offset=12), Assign([Tuple([Name('all', Store(), lineno=47, col_offset=12), Name('scheme', Store(), lineno=47, col_offset=17), Name('rfc', Store(), lineno=47, col_offset=25), Name('pep', Store(), lineno=47, col_offset=30), Name('selfdot', Store(), lineno=47, col_offset=35), Name('name', Store(), lineno=47, col_offset=44)], Store(), lineno=47, col_offset=12)], Call(Attribute(Name('match', Load(), lineno=47, col_offset=51), 'groups', Load(), lineno=47, col_offset=51), [], [], None, None, lineno=47, col_offset=51), lineno=47, col_offset=12), If(Name('scheme', Load(), lineno=48, col_offset=15), [Assign([Name('url', Store(), lineno=49, col_offset=16)], Call(Attribute(Call(Name('escape', Load(), lineno=49, col_offset=22), [Name('all', Load(), lineno=49, col_offset=29)], [], None, None, lineno=49, col_offset=22), 'replace', Load(), lineno=49, col_offset=22), [Str('"', lineno=49, col_offset=42), Str('&quot;', lineno=49, col_offset=47)], [], None, None, lineno=49, col_offset=22), lineno=49, col_offset=16), Expr(Call(Attribute(Name('results', Load(), lineno=50, col_offset=16), 'append', Load(), lineno=50, col_offset=16), [BinOp(Str('<a href="%s">%s</a>', lineno=50, col_offset=31), Mod(), Tuple([Name('url', Load(), lineno=50, col_offset=56), Name('url', Load(), lineno=50, col_offset=61)], Load(), lineno=50, col_offset=56), lineno=50, col_offset=31)], [], None, None, lineno=50, col_offset=16), lineno=50, col_offset=16)], [If(Name('rfc', Load(), lineno=51, col_offset=17), [Assign([Name('url', Store(), lineno=52, col_offset=16)], BinOp(Str('http://www.rfc-editor.org/rfc/rfc%d.txt', lineno=52, col_offset=22), Mod(), Call(Name('int', Load(), lineno=52, col_offset=66), [Name('rfc', Load(), lineno=52, col_offset=70)], [], None, None, lineno=52, col_offset=66), lineno=52, col_offset=22), lineno=52, col_offset=16), Expr(Call(Attribute(Name('results', Load(), lineno=53, col_offset=16), 'append', Load(), lineno=53, col_offset=16), [BinOp(Str('<a href="%s">%s</a>', lineno=53, col_offset=31), Mod(), Tuple([Name('url', Load(), lineno=53, col_offset=56), Call(Name('escape', Load(), lineno=53, col_offset=61), [Name('all', Load(), lineno=53, col_offset=68)], [], None, None, lineno=53, col_offset=61)], Load(), lineno=53, col_offset=56), lineno=53, col_offset=31)], [], None, None, lineno=53, col_offset=16), lineno=53, col_offset=16)], [If(Name('pep', Load(), lineno=54, col_offset=17), [Assign([Name('url', Store(), lineno=55, col_offset=16)], BinOp(Str('http://www.python.org/dev/peps/pep-%04d/', lineno=55, col_offset=22), Mod(), Call(Name('int', Load(), lineno=55, col_offset=67), [Name('pep', Load(), lineno=55, col_offset=71)], [], None, None, lineno=55, col_offset=67), lineno=55, col_offset=22), lineno=55, col_offset=16), Expr(Call(Attribute(Name('results', Load(), lineno=56, col_offset=16), 'append', Load(), lineno=56, col_offset=16), [BinOp(Str('<a href="%s">%s</a>', lineno=56, col_offset=31), Mod(), Tuple([Name('url', Load(), lineno=56, col_offset=56), Call(Name('escape', Load(), lineno=56, col_offset=61), [Name('all', Load(), lineno=56, col_offset=68)], [], None, None, lineno=56, col_offset=61)], Load(), lineno=56, col_offset=56), lineno=56, col_offset=31)], [], None, None, lineno=56, col_offset=16), lineno=56, col_offset=16)], [If(Compare(Subscript(Name('text', Load(), lineno=57, col_offset=17), Slice(Name('end', Load(), lineno=57, col_offset=22), BinOp(Name('end', Load(), lineno=57, col_offset=26), Add(), Num(1, lineno=57, col_offset=30), lineno=57, col_offset=26), None), Load(), lineno=57, col_offset=17), [Eq()], [Str('(', lineno=57, col_offset=36)], lineno=57, col_offset=17), [Expr(Call(Attribute(Name('results', Load(), lineno=58, col_offset=16), 'append', Load(), lineno=58, col_offset=16), [Call(Attribute(Name('self', Load(), lineno=58, col_offset=31), 'namelink', Load(), lineno=58, col_offset=31), [Name('name', Load(), lineno=58, col_offset=45), Name('methods', Load(), lineno=58, col_offset=51), Name('funcs', Load(), lineno=58, col_offset=60), Name('classes', Load(), lineno=58, col_offset=67)], [], None, None, lineno=58, col_offset=31)], [], None, None, lineno=58, col_offset=16), lineno=58, col_offset=16)], [If(Name('selfdot', Load(), lineno=59, col_offset=17), [Expr(Call(Attribute(Name('results', Load(), lineno=60, col_offset=16), 'append', Load(), lineno=60, col_offset=16), [BinOp(Str('self.<strong>%s</strong>', lineno=60, col_offset=31), Mod(), Name('name', Load(), lineno=60, col_offset=60), lineno=60, col_offset=31)], [], None, None, lineno=60, col_offset=16), lineno=60, col_offset=16)], [Expr(Call(Attribute(Name('results', Load(), lineno=62, col_offset=16), 'append', Load(), lineno=62, col_offset=16), [Call(Attribute(Name('self', Load(), lineno=62, col_offset=31), 'namelink', Load(), lineno=62, col_offset=31), [Name('name', Load(), lineno=62, col_offset=45), Name('classes', Load(), lineno=62, col_offset=51)], [], None, None, lineno=62, col_offset=31)], [], None, None, lineno=62, col_offset=16), lineno=62, col_offset=16)], lineno=59, col_offset=17)], lineno=57, col_offset=17)], lineno=54, col_offset=17)], lineno=51, col_offset=17)], lineno=48, col_offset=12), Assign([Name('here', Store(), lineno=63, col_offset=12)], Name('end', Load(), lineno=63, col_offset=19), lineno=63, col_offset=12)], [], lineno=41, col_offset=8), Expr(Call(Attribute(Name('results', Load(), lineno=64, col_offset=8), 'append', Load(), lineno=64, col_offset=8), [Call(Name('escape', Load(), lineno=64, col_offset=23), [Subscript(Name('text', Load(), lineno=64, col_offset=30), Slice(Name('here', Load(), lineno=64, col_offset=35), None, None), Load(), lineno=64, col_offset=30)], [], None, None, lineno=64, col_offset=23)], [], None, None, lineno=64, col_offset=8), lineno=64, col_offset=8), Return(Call(Attribute(Str('', lineno=65, col_offset=15), 'join', Load(), lineno=65, col_offset=15), [Name('results', Load(), lineno=65, col_offset=23)], [], None, None, lineno=65, col_offset=15), lineno=65, col_offset=8)], [], lineno=26, col_offset=4), FunctionDef('docroutine', arguments([Name('self', Param(), lineno=67, col_offset=19), Name('object', Param(), lineno=67, col_offset=25), Name('name', Param(), lineno=67, col_offset=33), Name('mod', Param(), lineno=67, col_offset=39), Name('funcs', Param(), lineno=68, col_offset=19), Name('classes', Param(), lineno=68, col_offset=29), Name('methods', Param(), lineno=68, col_offset=41), Name('cl', Param(), lineno=68, col_offset=53)], None, None, [Name('None', Load(), lineno=67, col_offset=43), Dict([], [], lineno=68, col_offset=25), Dict([], [], lineno=68, col_offset=37), Dict([], [], lineno=68, col_offset=49), Name('None', Load(), lineno=68, col_offset=56)]), [Expr(Str('Produce HTML documentation for a function or method object.', lineno=69, col_offset=8), lineno=69, col_offset=8), Assign([Name('anchor', Store(), lineno=71, col_offset=8)], BinOp(BinOp(BoolOp(Or(), [BoolOp(And(), [Name('cl', Load(), lineno=71, col_offset=18), Attribute(Name('cl', Load(), lineno=71, col_offset=25), '__name__', Load(), lineno=71, col_offset=25)], lineno=71, col_offset=18), Str('', lineno=71, col_offset=40)], lineno=71, col_offset=18), Add(), Str('-', lineno=71, col_offset=46), lineno=71, col_offset=17), Add(), Name('name', Load(), lineno=71, col_offset=52), lineno=71, col_offset=50), lineno=71, col_offset=8), Assign([Name('note', Store(), lineno=72, col_offset=8)], Str('', lineno=72, col_offset=15), lineno=72, col_offset=8), Assign([Name('title', Store(), lineno=74, col_offset=8)], BinOp(Str('<a name="%s"><strong>%s</strong></a>', lineno=74, col_offset=16), Mod(), Tuple([Call(Attribute(Name('self', Load(), lineno=75, col_offset=12), 'escape', Load(), lineno=75, col_offset=12), [Name('anchor', Load(), lineno=75, col_offset=24)], [], None, None, lineno=75, col_offset=12), Call(Attribute(Name('self', Load(), lineno=75, col_offset=33), 'escape', Load(), lineno=75, col_offset=33), [Name('name', Load(), lineno=75, col_offset=45)], [], None, None, lineno=75, col_offset=33)], Load(), lineno=75, col_offset=12), lineno=74, col_offset=16), lineno=74, col_offset=8), If(Call(Attribute(Name('inspect', Load(), lineno=77, col_offset=11), 'ismethod', Load(), lineno=77, col_offset=11), [Name('object', Load(), lineno=77, col_offset=28)], [], None, None, lineno=77, col_offset=11), [Assign([Tuple([Name('args', Store(), lineno=78, col_offset=12), Name('varargs', Store(), lineno=78, col_offset=18), Name('varkw', Store(), lineno=78, col_offset=27), Name('defaults', Store(), lineno=78, col_offset=34)], Store(), lineno=78, col_offset=12)], Call(Attribute(Name('inspect', Load(), lineno=78, col_offset=45), 'getargspec', Load(), lineno=78, col_offset=45), [Attribute(Name('object', Load(), lineno=78, col_offset=64), 'im_func', Load(), lineno=78, col_offset=64)], [], None, None, lineno=78, col_offset=45), lineno=78, col_offset=12), Assign([Name('argspec', Store(), lineno=81, col_offset=12)], Call(Attribute(Name('inspect', Load(), lineno=81, col_offset=22), 'formatargspec', Load(), lineno=81, col_offset=22), [Subscript(Name('args', Load(), lineno=82, col_offset=20), Slice(Num(1, lineno=82, col_offset=25), None, None), Load(), lineno=82, col_offset=20), Name('varargs', Load(), lineno=83, col_offset=20), Name('varkw', Load(), lineno=84, col_offset=20), Name('defaults', Load(), lineno=85, col_offset=20)], [keyword('formatvalue', Attribute(Name('self', Load(), lineno=86, col_offset=32), 'formatvalue', Load(), lineno=86, col_offset=32))], None, None, lineno=81, col_offset=22), lineno=81, col_offset=12)], [If(Call(Attribute(Name('inspect', Load(), lineno=88, col_offset=13), 'isfunction', Load(), lineno=88, col_offset=13), [Name('object', Load(), lineno=88, col_offset=32)], [], None, None, lineno=88, col_offset=13), [Assign([Tuple([Name('args', Store(), lineno=89, col_offset=12), Name('varargs', Store(), lineno=89, col_offset=18), Name('varkw', Store(), lineno=89, col_offset=27), Name('defaults', Store(), lineno=89, col_offset=34)], Store(), lineno=89, col_offset=12)], Call(Attribute(Name('inspect', Load(), lineno=89, col_offset=45), 'getargspec', Load(), lineno=89, col_offset=45), [Name('object', Load(), lineno=89, col_offset=64)], [], None, None, lineno=89, col_offset=45), lineno=89, col_offset=12), Assign([Name('argspec', Store(), lineno=90, col_offset=12)], Call(Attribute(Name('inspect', Load(), lineno=90, col_offset=22), 'formatargspec', Load(), lineno=90, col_offset=22), [Name('args', Load(), lineno=91, col_offset=16), Name('varargs', Load(), lineno=91, col_offset=22), Name('varkw', Load(), lineno=91, col_offset=31), Name('defaults', Load(), lineno=91, col_offset=38)], [keyword('formatvalue', Attribute(Name('self', Load(), lineno=91, col_offset=60), 'formatvalue', Load(), lineno=91, col_offset=60))], None, None, lineno=90, col_offset=22), lineno=90, col_offset=12)], [Assign([Name('argspec', Store(), lineno=93, col_offset=12)], Str('(...)', lineno=93, col_offset=22), lineno=93, col_offset=12)], lineno=88, col_offset=13)], lineno=77, col_offset=8), If(Call(Name('isinstance', Load(), lineno=95, col_offset=11), [Name('object', Load(), lineno=95, col_offset=22), Name('tuple', Load(), lineno=95, col_offset=30)], [], None, None, lineno=95, col_offset=11), [Assign([Name('argspec', Store(), lineno=96, col_offset=12)], BoolOp(Or(), [Subscript(Name('object', Load(), lineno=96, col_offset=22), Index(Num(0, lineno=96, col_offset=29)), Load(), lineno=96, col_offset=22), Name('argspec', Load(), lineno=96, col_offset=35)], lineno=96, col_offset=22), lineno=96, col_offset=12), Assign([Name('docstring', Store(), lineno=97, col_offset=12)], BoolOp(Or(), [Subscript(Name('object', Load(), lineno=97, col_offset=24), Index(Num(1, lineno=97, col_offset=31)), Load(), lineno=97, col_offset=24), Str('', lineno=97, col_offset=37)], lineno=97, col_offset=24), lineno=97, col_offset=12)], [Assign([Name('docstring', Store(), lineno=99, col_offset=12)], Call(Attribute(Name('pydoc', Load(), lineno=99, col_offset=24), 'getdoc', Load(), lineno=99, col_offset=24), [Name('object', Load(), lineno=99, col_offset=37)], [], None, None, lineno=99, col_offset=24), lineno=99, col_offset=12)], lineno=95, col_offset=8), Assign([Name('decl', Store(), lineno=101, col_offset=8)], BinOp(BinOp(Name('title', Load(), lineno=101, col_offset=15), Add(), Name('argspec', Load(), lineno=101, col_offset=23), lineno=101, col_offset=15), Add(), BoolOp(And(), [Name('note', Load(), lineno=101, col_offset=34), Call(Attribute(Name('self', Load(), lineno=101, col_offset=43), 'grey', Load(), lineno=101, col_offset=43), [BinOp(Str('<font face="helvetica, arial">%s</font>', lineno=102, col_offset=15), Mod(), Name('note', Load(), lineno=102, col_offset=59), lineno=102, col_offset=15)], [], None, None, lineno=101, col_offset=43)], lineno=101, col_offset=34), lineno=101, col_offset=31), lineno=101, col_offset=8), Assign([Name('doc', Store(), lineno=104, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=104, col_offset=14), 'markup', Load(), lineno=104, col_offset=14), [Name('docstring', Load(), lineno=105, col_offset=12), Attribute(Name('self', Load(), lineno=105, col_offset=23), 'preformat', Load(), lineno=105, col_offset=23), Name('funcs', Load(), lineno=105, col_offset=39), Name('classes', Load(), lineno=105, col_offset=46), Name('methods', Load(), lineno=105, col_offset=55)], [], None, None, lineno=104, col_offset=14), lineno=104, col_offset=8), Assign([Name('doc', Store(), lineno=106, col_offset=8)], BoolOp(And(), [Name('doc', Load(), lineno=106, col_offset=14), BinOp(Str('<dd><tt>%s</tt></dd>', lineno=106, col_offset=22), Mod(), Name('doc', Load(), lineno=106, col_offset=47), lineno=106, col_offset=22)], lineno=106, col_offset=14), lineno=106, col_offset=8), Return(BinOp(Str('<dl><dt>%s</dt>%s</dl>\n', lineno=107, col_offset=15), Mod(), Tuple([Name('decl', Load(), lineno=107, col_offset=45), Name('doc', Load(), lineno=107, col_offset=51)], Load(), lineno=107, col_offset=45), lineno=107, col_offset=15), lineno=107, col_offset=8)], [], lineno=67, col_offset=4), FunctionDef('docserver', arguments([Name('self', Param(), lineno=109, col_offset=18), Name('server_name', Param(), lineno=109, col_offset=24), Name('package_documentation', Param(), lineno=109, col_offset=37), Name('methods', Param(), lineno=109, col_offset=60)], None, None, []), [Expr(Str('Produce HTML documentation for an XML-RPC server.', lineno=110, col_offset=8), lineno=110, col_offset=8), Assign([Name('fdict', Store(), lineno=112, col_offset=8)], Dict([], [], lineno=112, col_offset=16), lineno=112, col_offset=8), For(Tuple([Name('key', Store(), lineno=113, col_offset=12), Name('value', Store(), lineno=113, col_offset=17)], Store(), lineno=113, col_offset=12), Call(Attribute(Name('methods', Load(), lineno=113, col_offset=26), 'items', Load(), lineno=113, col_offset=26), [], [], None, None, lineno=113, col_offset=26), [Assign([Subscript(Name('fdict', Load(), lineno=114, col_offset=12), Index(Name('key', Load(), lineno=114, col_offset=18)), Store(), lineno=114, col_offset=12)], BinOp(Str('#-', lineno=114, col_offset=25), Add(), Name('key', Load(), lineno=114, col_offset=32), lineno=114, col_offset=25), lineno=114, col_offset=12), Assign([Subscript(Name('fdict', Load(), lineno=115, col_offset=12), Index(Name('value', Load(), lineno=115, col_offset=18)), Store(), lineno=115, col_offset=12)], Subscript(Name('fdict', Load(), lineno=115, col_offset=27), Index(Name('key', Load(), lineno=115, col_offset=33)), Load(), lineno=115, col_offset=27), lineno=115, col_offset=12)], [], lineno=113, col_offset=8), Assign([Name('server_name', Store(), lineno=117, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=117, col_offset=22), 'escape', Load(), lineno=117, col_offset=22), [Name('server_name', Load(), lineno=117, col_offset=34)], [], None, None, lineno=117, col_offset=22), lineno=117, col_offset=8), Assign([Name('head', Store(), lineno=118, col_offset=8)], BinOp(Str('<big><big><strong>%s</strong></big></big>', lineno=118, col_offset=15), Mod(), Name('server_name', Load(), lineno=118, col_offset=61), lineno=118, col_offset=15), lineno=118, col_offset=8), Assign([Name('result', Store(), lineno=119, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=119, col_offset=17), 'heading', Load(), lineno=119, col_offset=17), [Name('head', Load(), lineno=119, col_offset=30), Str('#ffffff', lineno=119, col_offset=36), Str('#7799ee', lineno=119, col_offset=47)], [], None, None, lineno=119, col_offset=17), lineno=119, col_offset=8), Assign([Name('doc', Store(), lineno=121, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=121, col_offset=14), 'markup', Load(), lineno=121, col_offset=14), [Name('package_documentation', Load(), lineno=121, col_offset=26), Attribute(Name('self', Load(), lineno=121, col_offset=49), 'preformat', Load(), lineno=121, col_offset=49), Name('fdict', Load(), lineno=121, col_offset=65)], [], None, None, lineno=121, col_offset=14), lineno=121, col_offset=8), Assign([Name('doc', Store(), lineno=122, col_offset=8)], BoolOp(And(), [Name('doc', Load(), lineno=122, col_offset=14), BinOp(Str('<tt>%s</tt>', lineno=122, col_offset=22), Mod(), Name('doc', Load(), lineno=122, col_offset=38), lineno=122, col_offset=22)], lineno=122, col_offset=14), lineno=122, col_offset=8), Assign([Name('result', Store(), lineno=123, col_offset=8)], BinOp(Name('result', Load(), lineno=123, col_offset=17), Add(), BinOp(Str('<p>%s</p>\n', lineno=123, col_offset=26), Mod(), Name('doc', Load(), lineno=123, col_offset=42), lineno=123, col_offset=26), lineno=123, col_offset=17), lineno=123, col_offset=8), Assign([Name('contents', Store(), lineno=125, col_offset=8)], List([], Load(), lineno=125, col_offset=19), lineno=125, col_offset=8), Assign([Name('method_items', Store(), lineno=126, col_offset=8)], Call(Name('sorted', Load(), lineno=126, col_offset=23), [Call(Attribute(Name('methods', Load(), lineno=126, col_offset=30), 'items', Load(), lineno=126, col_offset=30), [], [], None, None, lineno=126, col_offset=30)], [], None, None, lineno=126, col_offset=23), lineno=126, col_offset=8), For(Tuple([Name('key', Store(), lineno=127, col_offset=12), Name('value', Store(), lineno=127, col_offset=17)], Store(), lineno=127, col_offset=12), Name('method_items', Load(), lineno=127, col_offset=26), [Expr(Call(Attribute(Name('contents', Load(), lineno=128, col_offset=12), 'append', Load(), lineno=128, col_offset=12), [Call(Attribute(Name('self', Load(), lineno=128, col_offset=28), 'docroutine', Load(), lineno=128, col_offset=28), [Name('value', Load(), lineno=128, col_offset=44), Name('key', Load(), lineno=128, col_offset=51)], [keyword('funcs', Name('fdict', Load(), lineno=128, col_offset=62))], None, None, lineno=128, col_offset=28)], [], None, None, lineno=128, col_offset=12), lineno=128, col_offset=12)], [], lineno=127, col_offset=8), Assign([Name('result', Store(), lineno=129, col_offset=8)], BinOp(Name('result', Load(), lineno=129, col_offset=17), Add(), Call(Attribute(Name('self', Load(), lineno=129, col_offset=26), 'bigsection', Load(), lineno=129, col_offset=26), [Str('Methods', lineno=130, col_offset=12), Str('#ffffff', lineno=130, col_offset=23), Str('#eeaa77', lineno=130, col_offset=34), Call(Attribute(Name('pydoc', Load(), lineno=130, col_offset=45), 'join', Load(), lineno=130, col_offset=45), [Name('contents', Load(), lineno=130, col_offset=56)], [], None, None, lineno=130, col_offset=45)], [], None, None, lineno=129, col_offset=26), lineno=129, col_offset=17), lineno=129, col_offset=8), Return(Name('result', Load(), lineno=132, col_offset=15), lineno=132, col_offset=8)], [], lineno=109, col_offset=4)], [], lineno=23, col_offset=0), ClassDef('XMLRPCDocGenerator', [], [Expr(Str('Generates documentation for an XML-RPC server.\n\n    This class is designed as mix-in and should not\n    be constructed directly.\n    ', lineno=139, col_offset=-1), lineno=139, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=141, col_offset=17)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=143, col_offset=8), 'server_name', Store(), lineno=143, col_offset=8)], Str('XML-RPC Server Documentation', lineno=143, col_offset=27), lineno=143, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=144, col_offset=8), 'server_documentation', Store(), lineno=144, col_offset=8)], Str('This server exports the following methods through the XML-RPC protocol.', lineno=145, col_offset=12), lineno=144, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=147, col_offset=8), 'server_title', Store(), lineno=147, col_offset=8)], Str('XML-RPC Server Documentation', lineno=147, col_offset=28), lineno=147, col_offset=8)], [], lineno=141, col_offset=4), FunctionDef('set_server_title', arguments([Name('self', Param(), lineno=149, col_offset=25), Name('server_title', Param(), lineno=149, col_offset=31)], None, None, []), [Expr(Str('Set the HTML title of the generated server documentation', lineno=150, col_offset=8), lineno=150, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=152, col_offset=8), 'server_title', Store(), lineno=152, col_offset=8)], Name('server_title', Load(), lineno=152, col_offset=28), lineno=152, col_offset=8)], [], lineno=149, col_offset=4), FunctionDef('set_server_name', arguments([Name('self', Param(), lineno=154, col_offset=24), Name('server_name', Param(), lineno=154, col_offset=30)], None, None, []), [Expr(Str('Set the name of the generated HTML server documentation', lineno=155, col_offset=8), lineno=155, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=157, col_offset=8), 'server_name', Store(), lineno=157, col_offset=8)], Name('server_name', Load(), lineno=157, col_offset=27), lineno=157, col_offset=8)], [], lineno=154, col_offset=4), FunctionDef('set_server_documentation', arguments([Name('self', Param(), lineno=159, col_offset=33), Name('server_documentation', Param(), lineno=159, col_offset=39)], None, None, []), [Expr(Str('Set the documentation string for the entire server.', lineno=160, col_offset=8), lineno=160, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=162, col_offset=8), 'server_documentation', Store(), lineno=162, col_offset=8)], Name('server_documentation', Load(), lineno=162, col_offset=36), lineno=162, col_offset=8)], [], lineno=159, col_offset=4), FunctionDef('generate_html_documentation', arguments([Name('self', Param(), lineno=164, col_offset=36)], None, None, []), [Expr(Str('generate_html_documentation() => html documentation for the server\n\n        Generates HTML documentation for the server using introspection for\n        installed functions and instances that do not implement the\n        _dispatch method. Alternatively, instances can choose to implement\n        the _get_method_argstring(method_name) method to provide the\n        argument string used in the documentation and the\n        _methodHelp(method_name) method to provide the help text used\n        in the documentation.', lineno=173, col_offset=-1), lineno=173, col_offset=-1), Assign([Name('methods', Store(), lineno=175, col_offset=8)], Dict([], [], lineno=175, col_offset=18), lineno=175, col_offset=8), For(Name('method_name', Store(), lineno=177, col_offset=12), Call(Attribute(Name('self', Load(), lineno=177, col_offset=27), 'system_listMethods', Load(), lineno=177, col_offset=27), [], [], None, None, lineno=177, col_offset=27), [If(Compare(Name('method_name', Load(), lineno=178, col_offset=15), [In()], [Attribute(Name('self', Load(), lineno=178, col_offset=30), 'funcs', Load(), lineno=178, col_offset=30)], lineno=178, col_offset=15), [Assign([Name('method', Store(), lineno=179, col_offset=16)], Subscript(Attribute(Name('self', Load(), lineno=179, col_offset=25), 'funcs', Load(), lineno=179, col_offset=25), Index(Name('method_name', Load(), lineno=179, col_offset=36)), Load(), lineno=179, col_offset=25), lineno=179, col_offset=16)], [If(Compare(Attribute(Name('self', Load(), lineno=180, col_offset=17), 'instance', Load(), lineno=180, col_offset=17), [IsNot()], [Name('None', Load(), lineno=180, col_offset=38)], lineno=180, col_offset=17), [Assign([Name('method_info', Store(), lineno=181, col_offset=16)], List([Name('None', Load(), lineno=181, col_offset=31), Name('None', Load(), lineno=181, col_offset=37)], Load(), lineno=181, col_offset=30), lineno=181, col_offset=16), If(Call(Name('hasattr', Load(), lineno=182, col_offset=19), [Attribute(Name('self', Load(), lineno=182, col_offset=27), 'instance', Load(), lineno=182, col_offset=27), Str('_get_method_argstring', lineno=182, col_offset=42)], [], None, None, lineno=182, col_offset=19), [Assign([Subscript(Name('method_info', Load(), lineno=183, col_offset=20), Index(Num(0, lineno=183, col_offset=32)), Store(), lineno=183, col_offset=20)], Call(Attribute(Attribute(Name('self', Load(), lineno=183, col_offset=37), 'instance', Load(), lineno=183, col_offset=37), '_get_method_argstring', Load(), lineno=183, col_offset=37), [Name('method_name', Load(), lineno=183, col_offset=73)], [], None, None, lineno=183, col_offset=37), lineno=183, col_offset=20)], [], lineno=182, col_offset=16), If(Call(Name('hasattr', Load(), lineno=184, col_offset=19), [Attribute(Name('self', Load(), lineno=184, col_offset=27), 'instance', Load(), lineno=184, col_offset=27), Str('_methodHelp', lineno=184, col_offset=42)], [], None, None, lineno=184, col_offset=19), [Assign([Subscript(Name('method_info', Load(), lineno=185, col_offset=20), Index(Num(1, lineno=185, col_offset=32)), Store(), lineno=185, col_offset=20)], Call(Attribute(Attribute(Name('self', Load(), lineno=185, col_offset=37), 'instance', Load(), lineno=185, col_offset=37), '_methodHelp', Load(), lineno=185, col_offset=37), [Name('method_name', Load(), lineno=185, col_offset=63)], [], None, None, lineno=185, col_offset=37), lineno=185, col_offset=20)], [], lineno=184, col_offset=16), Assign([Name('method_info', Store(), lineno=187, col_offset=16)], Call(Name('tuple', Load(), lineno=187, col_offset=30), [Name('method_info', Load(), lineno=187, col_offset=36)], [], None, None, lineno=187, col_offset=30), lineno=187, col_offset=16), If(Compare(Name('method_info', Load(), lineno=188, col_offset=19), [NotEq()], [Tuple([Name('None', Load(), lineno=188, col_offset=35), Name('None', Load(), lineno=188, col_offset=41)], Load(), lineno=188, col_offset=35)], lineno=188, col_offset=19), [Assign([Name('method', Store(), lineno=189, col_offset=20)], Name('method_info', Load(), lineno=189, col_offset=29), lineno=189, col_offset=20)], [If(UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=190, col_offset=25), [Attribute(Name('self', Load(), lineno=190, col_offset=33), 'instance', Load(), lineno=190, col_offset=33), Str('_dispatch', lineno=190, col_offset=48)], [], None, None, lineno=190, col_offset=25), lineno=190, col_offset=21), [TryExcept([Assign([Name('method', Store(), lineno=192, col_offset=24)], Call(Name('resolve_dotted_attribute', Load(), lineno=192, col_offset=33), [Attribute(Name('self', Load(), lineno=193, col_offset=36), 'instance', Load(), lineno=193, col_offset=36), Name('method_name', Load(), lineno=194, col_offset=36)], [], None, None, lineno=192, col_offset=33), lineno=192, col_offset=24)], [ExceptHandler(Name('AttributeError', Load(), lineno=196, col_offset=27), None, [Assign([Name('method', Store(), lineno=197, col_offset=24)], Name('method_info', Load(), lineno=197, col_offset=33), lineno=197, col_offset=24)], lineno=196, col_offset=20)], [], lineno=191, col_offset=20)], [Assign([Name('method', Store(), lineno=199, col_offset=20)], Name('method_info', Load(), lineno=199, col_offset=29), lineno=199, col_offset=20)], lineno=190, col_offset=21)], lineno=188, col_offset=16)], [Assert(Num(0, lineno=201, col_offset=23), Str('Could not find method in self.functions and no instance installed', lineno=201, col_offset=26), lineno=201, col_offset=16)], lineno=180, col_offset=17)], lineno=178, col_offset=12), Assign([Subscript(Name('methods', Load(), lineno=204, col_offset=12), Index(Name('method_name', Load(), lineno=204, col_offset=20)), Store(), lineno=204, col_offset=12)], Name('method', Load(), lineno=204, col_offset=35), lineno=204, col_offset=12)], [], lineno=177, col_offset=8), Assign([Name('documenter', Store(), lineno=206, col_offset=8)], Call(Name('ServerHTMLDoc', Load(), lineno=206, col_offset=21), [], [], None, None, lineno=206, col_offset=21), lineno=206, col_offset=8), Assign([Name('documentation', Store(), lineno=207, col_offset=8)], Call(Attribute(Name('documenter', Load(), lineno=207, col_offset=24), 'docserver', Load(), lineno=207, col_offset=24), [Attribute(Name('self', Load(), lineno=208, col_offset=32), 'server_name', Load(), lineno=208, col_offset=32), Attribute(Name('self', Load(), lineno=209, col_offset=32), 'server_documentation', Load(), lineno=209, col_offset=32), Name('methods', Load(), lineno=210, col_offset=32)], [], None, None, lineno=207, col_offset=24), lineno=207, col_offset=8), Return(Call(Attribute(Name('documenter', Load(), lineno=213, col_offset=15), 'page', Load(), lineno=213, col_offset=15), [Attribute(Name('self', Load(), lineno=213, col_offset=31), 'server_title', Load(), lineno=213, col_offset=31), Name('documentation', Load(), lineno=213, col_offset=50)], [], None, None, lineno=213, col_offset=15), lineno=213, col_offset=8)], [], lineno=164, col_offset=4)], [], lineno=134, col_offset=0), ClassDef('DocXMLRPCRequestHandler', [Name('SimpleXMLRPCRequestHandler', Load(), lineno=215, col_offset=30)], [Expr(Str('XML-RPC and documentation request handler class.\n\n    Handles all HTTP POST requests and attempts to decode them as\n    XML-RPC requests.\n\n    Handles all HTTP GET requests and interprets them as requests\n    for documentation.\n    ', lineno=223, col_offset=-1), lineno=223, col_offset=-1), FunctionDef('do_GET', arguments([Name('self', Param(), lineno=225, col_offset=15)], None, None, []), [Expr(Str('Handles the HTTP GET request.\n\n        Interpret all HTTP GET requests as requests for server\n        documentation.\n        ', lineno=230, col_offset=-1), lineno=230, col_offset=-1), If(UnaryOp(Not(), Call(Attribute(Name('self', Load(), lineno=232, col_offset=15), 'is_rpc_path_valid', Load(), lineno=232, col_offset=15), [], [], None, None, lineno=232, col_offset=15), lineno=232, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=233, col_offset=12), 'report_404', Load(), lineno=233, col_offset=12), [], [], None, None, lineno=233, col_offset=12), lineno=233, col_offset=12), Return(None, lineno=234, col_offset=12)], [], lineno=232, col_offset=8), Assign([Name('response', Store(), lineno=236, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=236, col_offset=19), 'server', Load(), lineno=236, col_offset=19), 'generate_html_documentation', Load(), lineno=236, col_offset=19), [], [], None, None, lineno=236, col_offset=19), lineno=236, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=237, col_offset=8), 'send_response', Load(), lineno=237, col_offset=8), [Num(200, lineno=237, col_offset=27)], [], None, None, lineno=237, col_offset=8), lineno=237, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=238, col_offset=8), 'send_header', Load(), lineno=238, col_offset=8), [Str('Content-type', lineno=238, col_offset=25), Str('text/html', lineno=238, col_offset=41)], [], None, None, lineno=238, col_offset=8), lineno=238, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=239, col_offset=8), 'send_header', Load(), lineno=239, col_offset=8), [Str('Content-length', lineno=239, col_offset=25), Call(Name('str', Load(), lineno=239, col_offset=43), [Call(Name('len', Load(), lineno=239, col_offset=47), [Name('response', Load(), lineno=239, col_offset=51)], [], None, None, lineno=239, col_offset=47)], [], None, None, lineno=239, col_offset=43)], [], None, None, lineno=239, col_offset=8), lineno=239, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=240, col_offset=8), 'end_headers', Load(), lineno=240, col_offset=8), [], [], None, None, lineno=240, col_offset=8), lineno=240, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=241, col_offset=8), 'wfile', Load(), lineno=241, col_offset=8), 'write', Load(), lineno=241, col_offset=8), [Name('response', Load(), lineno=241, col_offset=25)], [], None, None, lineno=241, col_offset=8), lineno=241, col_offset=8)], [], lineno=225, col_offset=4)], [], lineno=215, col_offset=0), ClassDef('DocXMLRPCServer', [Name('SimpleXMLRPCServer', Load(), lineno=243, col_offset=24), Name('XMLRPCDocGenerator', Load(), lineno=244, col_offset=24)], [Expr(Str('XML-RPC and HTML documentation server.\n\n    Adds the ability to serve server documentation to the capabilities\n    of SimpleXMLRPCServer.\n    ', lineno=249, col_offset=-1), lineno=249, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=251, col_offset=17), Name('addr', Param(), lineno=251, col_offset=23), Name('requestHandler', Param(), lineno=251, col_offset=29), Name('logRequests', Param(), lineno=252, col_offset=17), Name('allow_none', Param(), lineno=252, col_offset=32), Name('encoding', Param(), lineno=252, col_offset=50), Name('bind_and_activate', Param(), lineno=253, col_offset=17)], None, None, [Name('DocXMLRPCRequestHandler', Load(), lineno=251, col_offset=44), Num(1, lineno=252, col_offset=29), Name('False', Load(), lineno=252, col_offset=43), Name('None', Load(), lineno=252, col_offset=59), Name('True', Load(), lineno=253, col_offset=35)]), [Expr(Call(Attribute(Name('SimpleXMLRPCServer', Load(), lineno=254, col_offset=8), '__init__', Load(), lineno=254, col_offset=8), [Name('self', Load(), lineno=254, col_offset=36), Name('addr', Load(), lineno=254, col_offset=42), Name('requestHandler', Load(), lineno=254, col_offset=48), Name('logRequests', Load(), lineno=254, col_offset=64), Name('allow_none', Load(), lineno=255, col_offset=36), Name('encoding', Load(), lineno=255, col_offset=48), Name('bind_and_activate', Load(), lineno=255, col_offset=58)], [], None, None, lineno=254, col_offset=8), lineno=254, col_offset=8), Expr(Call(Attribute(Name('XMLRPCDocGenerator', Load(), lineno=256, col_offset=8), '__init__', Load(), lineno=256, col_offset=8), [Name('self', Load(), lineno=256, col_offset=36)], [], None, None, lineno=256, col_offset=8), lineno=256, col_offset=8)], [], lineno=251, col_offset=4)], [], lineno=243, col_offset=0), ClassDef('DocCGIXMLRPCRequestHandler', [Name('CGIXMLRPCRequestHandler', Load(), lineno=258, col_offset=36), Name('XMLRPCDocGenerator', Load(), lineno=259, col_offset=36)], [Expr(Str('Handler for XML-RPC data and documentation requests passed through\n    CGI', lineno=261, col_offset=-1), lineno=261, col_offset=-1), FunctionDef('handle_get', arguments([Name('self', Param(), lineno=263, col_offset=19)], None, None, []), [Expr(Str('Handles the HTTP GET request.\n\n        Interpret all HTTP GET requests as requests for server\n        documentation.\n        ', lineno=268, col_offset=-1), lineno=268, col_offset=-1), Assign([Name('response', Store(), lineno=270, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=270, col_offset=19), 'generate_html_documentation', Load(), lineno=270, col_offset=19), [], [], None, None, lineno=270, col_offset=19), lineno=270, col_offset=8), Print(None, [Str('Content-Type: text/html', lineno=272, col_offset=14)], True, lineno=272, col_offset=8), Print(None, [BinOp(Str('Content-Length: %d', lineno=273, col_offset=14), Mod(), Call(Name('len', Load(), lineno=273, col_offset=37), [Name('response', Load(), lineno=273, col_offset=41)], [], None, None, lineno=273, col_offset=37), lineno=273, col_offset=14)], True, lineno=273, col_offset=8), Print(None, [], True, lineno=274, col_offset=8), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=275, col_offset=8), 'stdout', Load(), lineno=275, col_offset=8), 'write', Load(), lineno=275, col_offset=8), [Name('response', Load(), lineno=275, col_offset=25)], [], None, None, lineno=275, col_offset=8), lineno=275, col_offset=8)], [], lineno=263, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=277, col_offset=17)], None, None, []), [Expr(Call(Attribute(Name('CGIXMLRPCRequestHandler', Load(), lineno=278, col_offset=8), '__init__', Load(), lineno=278, col_offset=8), [Name('self', Load(), lineno=278, col_offset=41)], [], None, None, lineno=278, col_offset=8), lineno=278, col_offset=8), Expr(Call(Attribute(Name('XMLRPCDocGenerator', Load(), lineno=279, col_offset=8), '__init__', Load(), lineno=279, col_offset=8), [Name('self', Load(), lineno=279, col_offset=36)], [], None, None, lineno=279, col_offset=8), lineno=279, col_offset=8)], [], lineno=277, col_offset=4)], [], lineno=258, col_offset=0)])
