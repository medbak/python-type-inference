Module([Expr(Str('Synchronization metaclass.\n\nThis metaclass  makes it possible to declare synchronized methods.\n\n', lineno=5, col_offset=-1), lineno=5, col_offset=-1), Import([alias('thread', None)], lineno=7, col_offset=0), ClassDef('Lock', [], [Expr(Str('Reentrant lock.\n\n    This is a mutex-like object which can be acquired by the same\n    thread more than once.  It keeps a reference count of the number\n    of times it has been acquired by the same thread.  Each acquire()\n    call must be matched by a release() call and only the last\n    release() call actually releases the lock for acquisition by\n    another thread.\n\n    The implementation uses two locks internally:\n\n    __mutex is a short term lock used to protect the instance variables\n    __wait is the lock for which other threads wait\n\n    A thread intending to acquire both locks should acquire __wait\n    first.\n\n   The implementation uses two other instance variables, protected by\n   locking __mutex:\n\n    __tid is the thread ID of the thread that currently has the lock\n    __count is the number of times the current thread has acquired it\n\n    When the lock is released, __tid is None and __count is zero.\n\n    ', lineno=40, col_offset=-1), lineno=40, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=42, col_offset=17)], None, None, []), [Expr(Str('Constructor.  Initialize all instance variables.', lineno=43, col_offset=8), lineno=43, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=44, col_offset=8), '__mutex', Store(), lineno=44, col_offset=8)], Call(Attribute(Name('thread', Load(), lineno=44, col_offset=23), 'allocate_lock', Load(), lineno=44, col_offset=23), [], [], None, None, lineno=44, col_offset=23), lineno=44, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=45, col_offset=8), '__wait', Store(), lineno=45, col_offset=8)], Call(Attribute(Name('thread', Load(), lineno=45, col_offset=22), 'allocate_lock', Load(), lineno=45, col_offset=22), [], [], None, None, lineno=45, col_offset=22), lineno=45, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=46, col_offset=8), '__tid', Store(), lineno=46, col_offset=8)], Name('None', Load(), lineno=46, col_offset=21), lineno=46, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=47, col_offset=8), '__count', Store(), lineno=47, col_offset=8)], Num(0, lineno=47, col_offset=23), lineno=47, col_offset=8)], [], lineno=42, col_offset=4), FunctionDef('acquire', arguments([Name('self', Param(), lineno=49, col_offset=16), Name('flag', Param(), lineno=49, col_offset=22)], None, None, [Num(1, lineno=49, col_offset=27)]), [Expr(Str('Acquire the lock.\n\n        If the optional flag argument is false, returns immediately\n        when it cannot acquire the __wait lock without blocking (it\n        may still block for a little while in order to acquire the\n        __mutex lock).\n\n        The return value is only relevant when the flag argument is\n        false; it is 1 if the lock is acquired, 0 if not.\n\n        ', lineno=60, col_offset=-1), lineno=60, col_offset=-1), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=61, col_offset=8), '__mutex', Load(), lineno=61, col_offset=8), 'acquire', Load(), lineno=61, col_offset=8), [], [], None, None, lineno=61, col_offset=8), lineno=61, col_offset=8), TryFinally([If(Compare(Attribute(Name('self', Load(), lineno=63, col_offset=15), '__tid', Load(), lineno=63, col_offset=15), [Eq()], [Call(Attribute(Name('thread', Load(), lineno=63, col_offset=29), 'get_ident', Load(), lineno=63, col_offset=29), [], [], None, None, lineno=63, col_offset=29)], lineno=63, col_offset=15), [Assign([Attribute(Name('self', Load(), lineno=64, col_offset=16), '__count', Store(), lineno=64, col_offset=16)], BinOp(Attribute(Name('self', Load(), lineno=64, col_offset=31), '__count', Load(), lineno=64, col_offset=31), Add(), Num(1, lineno=64, col_offset=46), lineno=64, col_offset=31), lineno=64, col_offset=16), Return(Num(1, lineno=65, col_offset=23), lineno=65, col_offset=16)], [], lineno=63, col_offset=12)], [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=67, col_offset=12), '__mutex', Load(), lineno=67, col_offset=12), 'release', Load(), lineno=67, col_offset=12), [], [], None, None, lineno=67, col_offset=12), lineno=67, col_offset=12)], lineno=62, col_offset=8), Assign([Name('locked', Store(), lineno=68, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=68, col_offset=17), '__wait', Load(), lineno=68, col_offset=17), 'acquire', Load(), lineno=68, col_offset=17), [Name('flag', Load(), lineno=68, col_offset=37)], [], None, None, lineno=68, col_offset=17), lineno=68, col_offset=8), If(BoolOp(And(), [UnaryOp(Not(), Name('flag', Load(), lineno=69, col_offset=15), lineno=69, col_offset=11), UnaryOp(Not(), Name('locked', Load(), lineno=69, col_offset=28), lineno=69, col_offset=24)], lineno=69, col_offset=11), [Return(Num(0, lineno=70, col_offset=19), lineno=70, col_offset=12)], [], lineno=69, col_offset=8), TryFinally([Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=72, col_offset=12), '__mutex', Load(), lineno=72, col_offset=12), 'acquire', Load(), lineno=72, col_offset=12), [], [], None, None, lineno=72, col_offset=12), lineno=72, col_offset=12), Assert(Compare(Attribute(Name('self', Load(), lineno=73, col_offset=19), '__tid', Load(), lineno=73, col_offset=19), [Eq()], [Name('None', Load(), lineno=73, col_offset=33)], lineno=73, col_offset=19), None, lineno=73, col_offset=12), Assert(Compare(Attribute(Name('self', Load(), lineno=74, col_offset=19), '__count', Load(), lineno=74, col_offset=19), [Eq()], [Num(0, lineno=74, col_offset=35)], lineno=74, col_offset=19), None, lineno=74, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=75, col_offset=12), '__tid', Store(), lineno=75, col_offset=12)], Call(Attribute(Name('thread', Load(), lineno=75, col_offset=25), 'get_ident', Load(), lineno=75, col_offset=25), [], [], None, None, lineno=75, col_offset=25), lineno=75, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=76, col_offset=12), '__count', Store(), lineno=76, col_offset=12)], Num(1, lineno=76, col_offset=27), lineno=76, col_offset=12), Return(Num(1, lineno=77, col_offset=19), lineno=77, col_offset=12)], [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=79, col_offset=12), '__mutex', Load(), lineno=79, col_offset=12), 'release', Load(), lineno=79, col_offset=12), [], [], None, None, lineno=79, col_offset=12), lineno=79, col_offset=12)], lineno=71, col_offset=8)], [], lineno=49, col_offset=4), FunctionDef('release', arguments([Name('self', Param(), lineno=81, col_offset=16)], None, None, []), [Expr(Str("Release the lock.\n\n        If this thread doesn't currently have the lock, an assertion\n        error is raised.\n\n        Only allow another thread to acquire the lock when the count\n        reaches zero after decrementing it.\n\n        ", lineno=90, col_offset=-1), lineno=90, col_offset=-1), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=91, col_offset=8), '__mutex', Load(), lineno=91, col_offset=8), 'acquire', Load(), lineno=91, col_offset=8), [], [], None, None, lineno=91, col_offset=8), lineno=91, col_offset=8), TryFinally([Assert(Compare(Attribute(Name('self', Load(), lineno=93, col_offset=19), '__tid', Load(), lineno=93, col_offset=19), [Eq()], [Call(Attribute(Name('thread', Load(), lineno=93, col_offset=33), 'get_ident', Load(), lineno=93, col_offset=33), [], [], None, None, lineno=93, col_offset=33)], lineno=93, col_offset=19), None, lineno=93, col_offset=12), Assert(Compare(Attribute(Name('self', Load(), lineno=94, col_offset=19), '__count', Load(), lineno=94, col_offset=19), [Gt()], [Num(0, lineno=94, col_offset=34)], lineno=94, col_offset=19), None, lineno=94, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=95, col_offset=12), '__count', Store(), lineno=95, col_offset=12)], BinOp(Attribute(Name('self', Load(), lineno=95, col_offset=27), '__count', Load(), lineno=95, col_offset=27), Sub(), Num(1, lineno=95, col_offset=42), lineno=95, col_offset=27), lineno=95, col_offset=12), If(Compare(Attribute(Name('self', Load(), lineno=96, col_offset=15), '__count', Load(), lineno=96, col_offset=15), [Eq()], [Num(0, lineno=96, col_offset=31)], lineno=96, col_offset=15), [Assign([Attribute(Name('self', Load(), lineno=97, col_offset=16), '__tid', Store(), lineno=97, col_offset=16)], Name('None', Load(), lineno=97, col_offset=29), lineno=97, col_offset=16), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=98, col_offset=16), '__wait', Load(), lineno=98, col_offset=16), 'release', Load(), lineno=98, col_offset=16), [], [], None, None, lineno=98, col_offset=16), lineno=98, col_offset=16)], [], lineno=96, col_offset=12)], [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=100, col_offset=12), '__mutex', Load(), lineno=100, col_offset=12), 'release', Load(), lineno=100, col_offset=12), [], [], None, None, lineno=100, col_offset=12), lineno=100, col_offset=12)], lineno=92, col_offset=8)], [], lineno=81, col_offset=4)], [], lineno=13, col_offset=0), FunctionDef('_testLock', arguments([], None, None, []), [Assign([Name('done', Store(), lineno=105, col_offset=4)], List([], Load(), lineno=105, col_offset=11), lineno=105, col_offset=4), FunctionDef('f2', arguments([Name('lock', Param(), lineno=107, col_offset=11), Name('done', Param(), lineno=107, col_offset=17)], None, None, [Name('done', Load(), lineno=107, col_offset=22)]), [Expr(Call(Attribute(Name('lock', Load(), lineno=108, col_offset=8), 'acquire', Load(), lineno=108, col_offset=8), [], [], None, None, lineno=108, col_offset=8), lineno=108, col_offset=8), Print(None, [BinOp(Str('f2 running in thread %d\n', lineno=109, col_offset=14), Mod(), Call(Attribute(Name('thread', Load(), lineno=109, col_offset=44), 'get_ident', Load(), lineno=109, col_offset=44), [], [], None, None, lineno=109, col_offset=44), lineno=109, col_offset=14)], False, lineno=109, col_offset=8), Expr(Call(Attribute(Name('lock', Load(), lineno=110, col_offset=8), 'release', Load(), lineno=110, col_offset=8), [], [], None, None, lineno=110, col_offset=8), lineno=110, col_offset=8), Expr(Call(Attribute(Name('done', Load(), lineno=111, col_offset=8), 'append', Load(), lineno=111, col_offset=8), [Num(1, lineno=111, col_offset=20)], [], None, None, lineno=111, col_offset=8), lineno=111, col_offset=8)], [], lineno=107, col_offset=4), FunctionDef('f1', arguments([Name('lock', Param(), lineno=113, col_offset=11), Name('f2', Param(), lineno=113, col_offset=17), Name('done', Param(), lineno=113, col_offset=24)], None, None, [Name('f2', Load(), lineno=113, col_offset=20), Name('done', Load(), lineno=113, col_offset=29)]), [Expr(Call(Attribute(Name('lock', Load(), lineno=114, col_offset=8), 'acquire', Load(), lineno=114, col_offset=8), [], [], None, None, lineno=114, col_offset=8), lineno=114, col_offset=8), Print(None, [BinOp(Str('f1 running in thread %d\n', lineno=115, col_offset=14), Mod(), Call(Attribute(Name('thread', Load(), lineno=115, col_offset=44), 'get_ident', Load(), lineno=115, col_offset=44), [], [], None, None, lineno=115, col_offset=44), lineno=115, col_offset=14)], False, lineno=115, col_offset=8), TryFinally([Expr(Call(Name('f2', Load(), lineno=117, col_offset=12), [Name('lock', Load(), lineno=117, col_offset=15)], [], None, None, lineno=117, col_offset=12), lineno=117, col_offset=12)], [Expr(Call(Attribute(Name('lock', Load(), lineno=119, col_offset=12), 'release', Load(), lineno=119, col_offset=12), [], [], None, None, lineno=119, col_offset=12), lineno=119, col_offset=12)], lineno=116, col_offset=8), Expr(Call(Attribute(Name('done', Load(), lineno=120, col_offset=8), 'append', Load(), lineno=120, col_offset=8), [Num(1, lineno=120, col_offset=20)], [], None, None, lineno=120, col_offset=8), lineno=120, col_offset=8)], [], lineno=113, col_offset=4), Assign([Name('lock', Store(), lineno=122, col_offset=4)], Call(Name('Lock', Load(), lineno=122, col_offset=11), [], [], None, None, lineno=122, col_offset=11), lineno=122, col_offset=4), Expr(Call(Attribute(Name('lock', Load(), lineno=123, col_offset=4), 'acquire', Load(), lineno=123, col_offset=4), [], [], None, None, lineno=123, col_offset=4), lineno=123, col_offset=4), Expr(Call(Name('f1', Load(), lineno=124, col_offset=4), [Name('lock', Load(), lineno=124, col_offset=7)], [], None, None, lineno=124, col_offset=4), lineno=124, col_offset=4), Expr(Call(Attribute(Name('lock', Load(), lineno=125, col_offset=4), 'release', Load(), lineno=125, col_offset=4), [], [], None, None, lineno=125, col_offset=4), lineno=125, col_offset=4), Expr(Call(Attribute(Name('lock', Load(), lineno=127, col_offset=4), 'acquire', Load(), lineno=127, col_offset=4), [], [], None, None, lineno=127, col_offset=4), lineno=127, col_offset=4), Expr(Call(Attribute(Name('thread', Load(), lineno=129, col_offset=4), 'start_new_thread', Load(), lineno=129, col_offset=4), [Name('f1', Load(), lineno=129, col_offset=28), Tuple([Name('lock', Load(), lineno=129, col_offset=33)], Load(), lineno=129, col_offset=33)], [], None, None, lineno=129, col_offset=4), lineno=129, col_offset=4), Expr(Call(Attribute(Name('thread', Load(), lineno=130, col_offset=4), 'start_new_thread', Load(), lineno=130, col_offset=4), [Name('f1', Load(), lineno=130, col_offset=28), Tuple([Name('lock', Load(), lineno=130, col_offset=33), Name('f1', Load(), lineno=130, col_offset=39)], Load(), lineno=130, col_offset=33)], [], None, None, lineno=130, col_offset=4), lineno=130, col_offset=4), Expr(Call(Attribute(Name('thread', Load(), lineno=131, col_offset=4), 'start_new_thread', Load(), lineno=131, col_offset=4), [Name('f2', Load(), lineno=131, col_offset=28), Tuple([Name('lock', Load(), lineno=131, col_offset=33)], Load(), lineno=131, col_offset=33)], [], None, None, lineno=131, col_offset=4), lineno=131, col_offset=4), Expr(Call(Attribute(Name('thread', Load(), lineno=132, col_offset=4), 'start_new_thread', Load(), lineno=132, col_offset=4), [Name('f2', Load(), lineno=132, col_offset=28), Tuple([Name('lock', Load(), lineno=132, col_offset=33)], Load(), lineno=132, col_offset=33)], [], None, None, lineno=132, col_offset=4), lineno=132, col_offset=4), Expr(Call(Attribute(Name('lock', Load(), lineno=134, col_offset=4), 'release', Load(), lineno=134, col_offset=4), [], [], None, None, lineno=134, col_offset=4), lineno=134, col_offset=4), Import([alias('time', None)], lineno=135, col_offset=4), While(Compare(Call(Name('len', Load(), lineno=136, col_offset=10), [Name('done', Load(), lineno=136, col_offset=14)], [], None, None, lineno=136, col_offset=10), [Lt()], [Num(9, lineno=136, col_offset=22)], lineno=136, col_offset=10), [Print(None, [Call(Name('len', Load(), lineno=137, col_offset=14), [Name('done', Load(), lineno=137, col_offset=18)], [], None, None, lineno=137, col_offset=14)], True, lineno=137, col_offset=8), Expr(Call(Attribute(Name('time', Load(), lineno=138, col_offset=8), 'sleep', Load(), lineno=138, col_offset=8), [Num(0.001, lineno=138, col_offset=19)], [], None, None, lineno=138, col_offset=8), lineno=138, col_offset=8)], [], lineno=136, col_offset=4), Print(None, [Call(Name('len', Load(), lineno=139, col_offset=10), [Name('done', Load(), lineno=139, col_offset=14)], [], None, None, lineno=139, col_offset=10)], True, lineno=139, col_offset=4)], [], lineno=103, col_offset=0), ImportFrom('Meta', [alias('MetaClass', None), alias('MetaHelper', None), alias('MetaMethodWrapper', None)], 0, lineno=146, col_offset=0), ClassDef('LockingMethodWrapper', [Name('MetaMethodWrapper', Load(), lineno=148, col_offset=27)], [FunctionDef('__call__', arguments([Name('self', Param(), lineno=149, col_offset=17)], 'args', 'kw', []), [If(BoolOp(And(), [Compare(Subscript(Attribute(Name('self', Load(), lineno=150, col_offset=11), '__name__', Load(), lineno=150, col_offset=11), Slice(None, Num(1, lineno=150, col_offset=26), None), Load(), lineno=150, col_offset=11), [Eq()], [Str('_', lineno=150, col_offset=32)], lineno=150, col_offset=11), Compare(Subscript(Attribute(Name('self', Load(), lineno=150, col_offset=40), '__name__', Load(), lineno=150, col_offset=40), Slice(Num(1, lineno=150, col_offset=54), None, None), Load(), lineno=150, col_offset=40), [NotEq()], [Str('_', lineno=150, col_offset=61)], lineno=150, col_offset=40)], lineno=150, col_offset=11), [Return(Call(Name('apply', Load(), lineno=151, col_offset=19), [Attribute(Name('self', Load(), lineno=151, col_offset=25), 'func', Load(), lineno=151, col_offset=25), BinOp(Tuple([Attribute(Name('self', Load(), lineno=151, col_offset=37), 'inst', Load(), lineno=151, col_offset=37)], Load(), lineno=151, col_offset=37), Add(), Name('args', Load(), lineno=151, col_offset=51), lineno=151, col_offset=36), Name('kw', Load(), lineno=151, col_offset=57)], [], None, None, lineno=151, col_offset=19), lineno=151, col_offset=12)], [], lineno=150, col_offset=8), Expr(Call(Attribute(Attribute(Attribute(Name('self', Load(), lineno=152, col_offset=8), 'inst', Load(), lineno=152, col_offset=8), '__lock__', Load(), lineno=152, col_offset=8), 'acquire', Load(), lineno=152, col_offset=8), [], [], None, None, lineno=152, col_offset=8), lineno=152, col_offset=8), TryFinally([Return(Call(Name('apply', Load(), lineno=154, col_offset=19), [Attribute(Name('self', Load(), lineno=154, col_offset=25), 'func', Load(), lineno=154, col_offset=25), BinOp(Tuple([Attribute(Name('self', Load(), lineno=154, col_offset=37), 'inst', Load(), lineno=154, col_offset=37)], Load(), lineno=154, col_offset=37), Add(), Name('args', Load(), lineno=154, col_offset=51), lineno=154, col_offset=36), Name('kw', Load(), lineno=154, col_offset=57)], [], None, None, lineno=154, col_offset=19), lineno=154, col_offset=12)], [Expr(Call(Attribute(Attribute(Attribute(Name('self', Load(), lineno=156, col_offset=12), 'inst', Load(), lineno=156, col_offset=12), '__lock__', Load(), lineno=156, col_offset=12), 'release', Load(), lineno=156, col_offset=12), [], [], None, None, lineno=156, col_offset=12), lineno=156, col_offset=12)], lineno=153, col_offset=8)], [], lineno=149, col_offset=4)], [], lineno=148, col_offset=0), ClassDef('LockingHelper', [Name('MetaHelper', Load(), lineno=158, col_offset=20)], [Assign([Name('__methodwrapper__', Store(), lineno=159, col_offset=4)], Name('LockingMethodWrapper', Load(), lineno=159, col_offset=24), lineno=159, col_offset=4), FunctionDef('__helperinit__', arguments([Name('self', Param(), lineno=160, col_offset=23), Name('formalclass', Param(), lineno=160, col_offset=29)], None, None, []), [Expr(Call(Attribute(Name('MetaHelper', Load(), lineno=161, col_offset=8), '__helperinit__', Load(), lineno=161, col_offset=8), [Name('self', Load(), lineno=161, col_offset=34), Name('formalclass', Load(), lineno=161, col_offset=40)], [], None, None, lineno=161, col_offset=8), lineno=161, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=162, col_offset=8), '__lock__', Store(), lineno=162, col_offset=8)], Call(Name('Lock', Load(), lineno=162, col_offset=24), [], [], None, None, lineno=162, col_offset=24), lineno=162, col_offset=8)], [], lineno=160, col_offset=4)], [], lineno=158, col_offset=0), ClassDef('LockingMetaClass', [Name('MetaClass', Load(), lineno=164, col_offset=23)], [Assign([Name('__helper__', Store(), lineno=165, col_offset=4)], Name('LockingHelper', Load(), lineno=165, col_offset=17), lineno=165, col_offset=4)], [], lineno=164, col_offset=0), Assign([Name('Locking', Store(), lineno=167, col_offset=0)], Call(Name('LockingMetaClass', Load(), lineno=167, col_offset=10), [Str('Locking', lineno=167, col_offset=27), Tuple([], Load(), lineno=167, col_offset=38), Dict([], [], lineno=167, col_offset=42)], [], None, None, lineno=167, col_offset=10), lineno=167, col_offset=0), FunctionDef('_test', arguments([], None, None, []), [ClassDef('Buffer', [Name('Locking', Load(), lineno=171, col_offset=17)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=172, col_offset=21), Name('initialsize', Param(), lineno=172, col_offset=27)], None, None, []), [Assert(Compare(Name('initialsize', Load(), lineno=173, col_offset=19), [Gt()], [Num(0, lineno=173, col_offset=33)], lineno=173, col_offset=19), None, lineno=173, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=174, col_offset=12), 'size', Store(), lineno=174, col_offset=12)], Name('initialsize', Load(), lineno=174, col_offset=24), lineno=174, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=175, col_offset=12), 'buffer', Store(), lineno=175, col_offset=12)], BinOp(List([Name('None', Load(), lineno=175, col_offset=27)], Load(), lineno=175, col_offset=26), Mult(), Attribute(Name('self', Load(), lineno=175, col_offset=33), 'size', Load(), lineno=175, col_offset=33), lineno=175, col_offset=26), lineno=175, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=176, col_offset=12), 'first', Store(), lineno=176, col_offset=12), Attribute(Name('self', Load(), lineno=176, col_offset=25), 'last', Store(), lineno=176, col_offset=25)], Num(0, lineno=176, col_offset=37), lineno=176, col_offset=12)], [], lineno=172, col_offset=8), FunctionDef('put', arguments([Name('self', Param(), lineno=177, col_offset=16), Name('item', Param(), lineno=177, col_offset=22)], None, None, []), [If(Compare(BinOp(BinOp(Attribute(Name('self', Load(), lineno=179, col_offset=16), 'last', Load(), lineno=179, col_offset=16), Add(), Num(1, lineno=179, col_offset=26), lineno=179, col_offset=16), Mod(), Attribute(Name('self', Load(), lineno=179, col_offset=31), 'size', Load(), lineno=179, col_offset=31), lineno=179, col_offset=15), [NotEq()], [Attribute(Name('self', Load(), lineno=179, col_offset=44), 'first', Load(), lineno=179, col_offset=44)], lineno=179, col_offset=15), [Assign([Subscript(Attribute(Name('self', Load(), lineno=181, col_offset=16), 'buffer', Load(), lineno=181, col_offset=16), Index(Attribute(Name('self', Load(), lineno=181, col_offset=28), 'last', Load(), lineno=181, col_offset=28)), Store(), lineno=181, col_offset=16)], Name('item', Load(), lineno=181, col_offset=41), lineno=181, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=182, col_offset=16), 'last', Store(), lineno=182, col_offset=16)], BinOp(BinOp(Attribute(Name('self', Load(), lineno=182, col_offset=29), 'last', Load(), lineno=182, col_offset=29), Add(), Num(1, lineno=182, col_offset=39), lineno=182, col_offset=29), Mod(), Attribute(Name('self', Load(), lineno=182, col_offset=44), 'size', Load(), lineno=182, col_offset=44), lineno=182, col_offset=28), lineno=182, col_offset=16), Return(None, lineno=183, col_offset=16)], [], lineno=179, col_offset=12), Print(None, [Str('buffer =', lineno=186, col_offset=18), Attribute(Name('self', Load(), lineno=186, col_offset=30), 'buffer', Load(), lineno=186, col_offset=30)], True, lineno=186, col_offset=12), Print(None, [BinOp(Str('first = %d, last = %d, size = %d', lineno=187, col_offset=18), Mod(), Tuple([Attribute(Name('self', Load(), lineno=188, col_offset=16), 'first', Load(), lineno=188, col_offset=16), Attribute(Name('self', Load(), lineno=188, col_offset=28), 'last', Load(), lineno=188, col_offset=28), Attribute(Name('self', Load(), lineno=188, col_offset=39), 'size', Load(), lineno=188, col_offset=39)], Load(), lineno=188, col_offset=16), lineno=187, col_offset=18)], True, lineno=187, col_offset=12), If(Compare(Attribute(Name('self', Load(), lineno=189, col_offset=15), 'first', Load(), lineno=189, col_offset=15), [LtE()], [Attribute(Name('self', Load(), lineno=189, col_offset=29), 'last', Load(), lineno=189, col_offset=29)], lineno=189, col_offset=15), [Assign([Name('temp', Store(), lineno=190, col_offset=16)], Subscript(Attribute(Name('self', Load(), lineno=190, col_offset=23), 'buffer', Load(), lineno=190, col_offset=23), Slice(Attribute(Name('self', Load(), lineno=190, col_offset=35), 'first', Load(), lineno=190, col_offset=35), Attribute(Name('self', Load(), lineno=190, col_offset=46), 'last', Load(), lineno=190, col_offset=46), None), Load(), lineno=190, col_offset=23), lineno=190, col_offset=16)], [Assign([Name('temp', Store(), lineno=192, col_offset=16)], BinOp(Subscript(Attribute(Name('self', Load(), lineno=192, col_offset=23), 'buffer', Load(), lineno=192, col_offset=23), Slice(Attribute(Name('self', Load(), lineno=192, col_offset=35), 'first', Load(), lineno=192, col_offset=35), None, None), Load(), lineno=192, col_offset=23), Add(), Subscript(Attribute(Name('self', Load(), lineno=192, col_offset=50), 'buffer', Load(), lineno=192, col_offset=50), Slice(None, Attribute(Name('self', Load(), lineno=192, col_offset=63), 'last', Load(), lineno=192, col_offset=63), None), Load(), lineno=192, col_offset=50), lineno=192, col_offset=23), lineno=192, col_offset=16)], lineno=189, col_offset=12), Print(None, [Str('temp =', lineno=193, col_offset=18), Name('temp', Load(), lineno=193, col_offset=28)], True, lineno=193, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=194, col_offset=12), 'buffer', Store(), lineno=194, col_offset=12)], BinOp(Name('temp', Load(), lineno=194, col_offset=26), Add(), BinOp(List([Name('None', Load(), lineno=194, col_offset=34)], Load(), lineno=194, col_offset=33), Mult(), BinOp(Attribute(Name('self', Load(), lineno=194, col_offset=41), 'size', Load(), lineno=194, col_offset=41), Add(), Num(1, lineno=194, col_offset=51), lineno=194, col_offset=41), lineno=194, col_offset=33), lineno=194, col_offset=26), lineno=194, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=195, col_offset=12), 'first', Store(), lineno=195, col_offset=12)], Num(0, lineno=195, col_offset=25), lineno=195, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=196, col_offset=12), 'last', Store(), lineno=196, col_offset=12)], BinOp(Attribute(Name('self', Load(), lineno=196, col_offset=24), 'size', Load(), lineno=196, col_offset=24), Sub(), Num(1, lineno=196, col_offset=34), lineno=196, col_offset=24), lineno=196, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=197, col_offset=12), 'size', Store(), lineno=197, col_offset=12)], BinOp(Attribute(Name('self', Load(), lineno=197, col_offset=24), 'size', Load(), lineno=197, col_offset=24), Mult(), Num(2, lineno=197, col_offset=34), lineno=197, col_offset=24), lineno=197, col_offset=12), Print(None, [Str('Buffer size doubled to', lineno=198, col_offset=18), Attribute(Name('self', Load(), lineno=198, col_offset=44), 'size', Load(), lineno=198, col_offset=44)], True, lineno=198, col_offset=12), Print(None, [Str('new buffer =', lineno=199, col_offset=18), Attribute(Name('self', Load(), lineno=199, col_offset=34), 'buffer', Load(), lineno=199, col_offset=34)], True, lineno=199, col_offset=12), Print(None, [BinOp(Str('first = %d, last = %d, size = %d', lineno=200, col_offset=18), Mod(), Tuple([Attribute(Name('self', Load(), lineno=201, col_offset=16), 'first', Load(), lineno=201, col_offset=16), Attribute(Name('self', Load(), lineno=201, col_offset=28), 'last', Load(), lineno=201, col_offset=28), Attribute(Name('self', Load(), lineno=201, col_offset=39), 'size', Load(), lineno=201, col_offset=39)], Load(), lineno=201, col_offset=16), lineno=200, col_offset=18)], True, lineno=200, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=202, col_offset=12), 'put', Load(), lineno=202, col_offset=12), [Name('item', Load(), lineno=202, col_offset=21)], [], None, None, lineno=202, col_offset=12), lineno=202, col_offset=12)], [], lineno=177, col_offset=8), FunctionDef('get', arguments([Name('self', Param(), lineno=203, col_offset=16)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=205, col_offset=15), 'first', Load(), lineno=205, col_offset=15), [Eq()], [Attribute(Name('self', Load(), lineno=205, col_offset=29), 'last', Load(), lineno=205, col_offset=29)], lineno=205, col_offset=15), [Raise(Name('EOFError', Load(), lineno=206, col_offset=22), None, None, lineno=206, col_offset=16)], [], lineno=205, col_offset=12), Assign([Name('item', Store(), lineno=207, col_offset=12)], Subscript(Attribute(Name('self', Load(), lineno=207, col_offset=19), 'buffer', Load(), lineno=207, col_offset=19), Index(Attribute(Name('self', Load(), lineno=207, col_offset=31), 'first', Load(), lineno=207, col_offset=31)), Load(), lineno=207, col_offset=19), lineno=207, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=208, col_offset=12), 'first', Store(), lineno=208, col_offset=12)], BinOp(BinOp(Attribute(Name('self', Load(), lineno=208, col_offset=26), 'first', Load(), lineno=208, col_offset=26), Add(), Num(1, lineno=208, col_offset=37), lineno=208, col_offset=26), Mod(), Attribute(Name('self', Load(), lineno=208, col_offset=42), 'size', Load(), lineno=208, col_offset=42), lineno=208, col_offset=25), lineno=208, col_offset=12), Return(Name('item', Load(), lineno=209, col_offset=19), lineno=209, col_offset=12)], [], lineno=203, col_offset=8)], [], lineno=171, col_offset=4), FunctionDef('producer', arguments([Name('buffer', Param(), lineno=211, col_offset=17), Name('wait', Param(), lineno=211, col_offset=25), Name('n', Param(), lineno=211, col_offset=31)], None, None, [Num(1000, lineno=211, col_offset=33)]), [Import([alias('time', None)], lineno=212, col_offset=8), Assign([Name('i', Store(), lineno=213, col_offset=8)], Num(0, lineno=213, col_offset=12), lineno=213, col_offset=8), While(Compare(Name('i', Load(), lineno=214, col_offset=14), [Lt()], [Name('n', Load(), lineno=214, col_offset=18)], lineno=214, col_offset=14), [Print(None, [Str('put', lineno=215, col_offset=18), Name('i', Load(), lineno=215, col_offset=25)], True, lineno=215, col_offset=12), Expr(Call(Attribute(Name('buffer', Load(), lineno=216, col_offset=12), 'put', Load(), lineno=216, col_offset=12), [Name('i', Load(), lineno=216, col_offset=23)], [], None, None, lineno=216, col_offset=12), lineno=216, col_offset=12), Assign([Name('i', Store(), lineno=217, col_offset=12)], BinOp(Name('i', Load(), lineno=217, col_offset=16), Add(), Num(1, lineno=217, col_offset=18), lineno=217, col_offset=16), lineno=217, col_offset=12)], [], lineno=214, col_offset=8), Print(None, [Str('Producer: done producing', lineno=218, col_offset=14), Name('n', Load(), lineno=218, col_offset=42), Str('items', lineno=218, col_offset=45)], True, lineno=218, col_offset=8), Expr(Call(Attribute(Name('wait', Load(), lineno=219, col_offset=8), 'release', Load(), lineno=219, col_offset=8), [], [], None, None, lineno=219, col_offset=8), lineno=219, col_offset=8)], [], lineno=211, col_offset=4), FunctionDef('consumer', arguments([Name('buffer', Param(), lineno=221, col_offset=17), Name('wait', Param(), lineno=221, col_offset=25), Name('n', Param(), lineno=221, col_offset=31)], None, None, [Num(1000, lineno=221, col_offset=33)]), [Import([alias('time', None)], lineno=222, col_offset=8), Assign([Name('i', Store(), lineno=223, col_offset=8)], Num(0, lineno=223, col_offset=12), lineno=223, col_offset=8), Assign([Name('tout', Store(), lineno=224, col_offset=8)], Num(0.001, lineno=224, col_offset=15), lineno=224, col_offset=8), While(Compare(Name('i', Load(), lineno=225, col_offset=14), [Lt()], [Name('n', Load(), lineno=225, col_offset=18)], lineno=225, col_offset=14), [TryExcept([Assign([Name('x', Store(), lineno=227, col_offset=16)], Call(Attribute(Name('buffer', Load(), lineno=227, col_offset=20), 'get', Load(), lineno=227, col_offset=20), [], [], None, None, lineno=227, col_offset=20), lineno=227, col_offset=16), If(Compare(Name('x', Load(), lineno=228, col_offset=19), [NotEq()], [Name('i', Load(), lineno=228, col_offset=24)], lineno=228, col_offset=19), [Raise(Name('AssertionError', Load(), lineno=229, col_offset=26), BinOp(Str('get() returned %s, expected %s', lineno=230, col_offset=26), Mod(), Tuple([Name('x', Load(), lineno=230, col_offset=62), Name('i', Load(), lineno=230, col_offset=65)], Load(), lineno=230, col_offset=62), lineno=230, col_offset=26), None, lineno=229, col_offset=20)], [], lineno=228, col_offset=16), Print(None, [Str('got', lineno=231, col_offset=22), Name('i', Load(), lineno=231, col_offset=29)], True, lineno=231, col_offset=16), Assign([Name('i', Store(), lineno=232, col_offset=16)], BinOp(Name('i', Load(), lineno=232, col_offset=20), Add(), Num(1, lineno=232, col_offset=22), lineno=232, col_offset=20), lineno=232, col_offset=16), Assign([Name('tout', Store(), lineno=233, col_offset=16)], Num(0.001, lineno=233, col_offset=23), lineno=233, col_offset=16)], [ExceptHandler(Name('EOFError', Load(), lineno=234, col_offset=19), None, [Expr(Call(Attribute(Name('time', Load(), lineno=235, col_offset=16), 'sleep', Load(), lineno=235, col_offset=16), [Name('tout', Load(), lineno=235, col_offset=27)], [], None, None, lineno=235, col_offset=16), lineno=235, col_offset=16), Assign([Name('tout', Store(), lineno=236, col_offset=16)], BinOp(Name('tout', Load(), lineno=236, col_offset=23), Mult(), Num(2, lineno=236, col_offset=28), lineno=236, col_offset=23), lineno=236, col_offset=16)], lineno=234, col_offset=12)], [], lineno=226, col_offset=12)], [], lineno=225, col_offset=8), Print(None, [Str('Consumer: done consuming', lineno=237, col_offset=14), Name('n', Load(), lineno=237, col_offset=42), Str('items', lineno=237, col_offset=45)], True, lineno=237, col_offset=8), Expr(Call(Attribute(Name('wait', Load(), lineno=238, col_offset=8), 'release', Load(), lineno=238, col_offset=8), [], [], None, None, lineno=238, col_offset=8), lineno=238, col_offset=8)], [], lineno=221, col_offset=4), Assign([Name('pwait', Store(), lineno=240, col_offset=4)], Call(Attribute(Name('thread', Load(), lineno=240, col_offset=12), 'allocate_lock', Load(), lineno=240, col_offset=12), [], [], None, None, lineno=240, col_offset=12), lineno=240, col_offset=4), Expr(Call(Attribute(Name('pwait', Load(), lineno=241, col_offset=4), 'acquire', Load(), lineno=241, col_offset=4), [], [], None, None, lineno=241, col_offset=4), lineno=241, col_offset=4), Assign([Name('cwait', Store(), lineno=242, col_offset=4)], Call(Attribute(Name('thread', Load(), lineno=242, col_offset=12), 'allocate_lock', Load(), lineno=242, col_offset=12), [], [], None, None, lineno=242, col_offset=12), lineno=242, col_offset=4), Expr(Call(Attribute(Name('cwait', Load(), lineno=243, col_offset=4), 'acquire', Load(), lineno=243, col_offset=4), [], [], None, None, lineno=243, col_offset=4), lineno=243, col_offset=4), Assign([Name('buffer', Store(), lineno=244, col_offset=4)], Call(Name('Buffer', Load(), lineno=244, col_offset=13), [Num(1, lineno=244, col_offset=20)], [], None, None, lineno=244, col_offset=13), lineno=244, col_offset=4), Assign([Name('n', Store(), lineno=245, col_offset=4)], Num(1000, lineno=245, col_offset=8), lineno=245, col_offset=4), Expr(Call(Attribute(Name('thread', Load(), lineno=246, col_offset=4), 'start_new_thread', Load(), lineno=246, col_offset=4), [Name('consumer', Load(), lineno=246, col_offset=28), Tuple([Name('buffer', Load(), lineno=246, col_offset=39), Name('cwait', Load(), lineno=246, col_offset=47), Name('n', Load(), lineno=246, col_offset=54)], Load(), lineno=246, col_offset=39)], [], None, None, lineno=246, col_offset=4), lineno=246, col_offset=4), Expr(Call(Attribute(Name('thread', Load(), lineno=247, col_offset=4), 'start_new_thread', Load(), lineno=247, col_offset=4), [Name('producer', Load(), lineno=247, col_offset=28), Tuple([Name('buffer', Load(), lineno=247, col_offset=39), Name('pwait', Load(), lineno=247, col_offset=47), Name('n', Load(), lineno=247, col_offset=54)], Load(), lineno=247, col_offset=39)], [], None, None, lineno=247, col_offset=4), lineno=247, col_offset=4), Expr(Call(Attribute(Name('pwait', Load(), lineno=248, col_offset=4), 'acquire', Load(), lineno=248, col_offset=4), [], [], None, None, lineno=248, col_offset=4), lineno=248, col_offset=4), Print(None, [Str('Producer done', lineno=249, col_offset=10)], True, lineno=249, col_offset=4), Expr(Call(Attribute(Name('cwait', Load(), lineno=250, col_offset=4), 'acquire', Load(), lineno=250, col_offset=4), [], [], None, None, lineno=250, col_offset=4), lineno=250, col_offset=4), Print(None, [Str('All done', lineno=251, col_offset=10)], True, lineno=251, col_offset=4), Print(None, [Str('buffer size ==', lineno=252, col_offset=10), Call(Name('len', Load(), lineno=252, col_offset=28), [Attribute(Name('buffer', Load(), lineno=252, col_offset=32), 'buffer', Load(), lineno=252, col_offset=32)], [], None, None, lineno=252, col_offset=28)], True, lineno=252, col_offset=4)], [], lineno=169, col_offset=0), If(Compare(Name('__name__', Load(), lineno=254, col_offset=3), [Eq()], [Str('__main__', lineno=254, col_offset=15)], lineno=254, col_offset=3), [Expr(Call(Name('_testLock', Load(), lineno=255, col_offset=4), [], [], None, None, lineno=255, col_offset=4), lineno=255, col_offset=4), Expr(Call(Name('_test', Load(), lineno=256, col_offset=4), [], [], None, None, lineno=256, col_offset=4), lineno=256, col_offset=4)], [], lineno=254, col_offset=0)])
