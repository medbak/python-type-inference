Module([Import([alias('contextlib', None)], lineno=1, col_offset=0), Import([alias('imp', None)], lineno=2, col_offset=0), Import([alias('importlib', None)], lineno=3, col_offset=0), Import([alias('sys', None)], lineno=4, col_offset=0), Import([alias('unittest', None)], lineno=5, col_offset=0), FunctionDef('uncache', arguments([], 'names', None, []), [Expr(Str("Uncache a module from sys.modules.\n\n    A basic sanity check is performed to prevent uncaching modules that either\n    cannot/shouldn't be uncached.\n\n    ", lineno=15, col_offset=-1), lineno=15, col_offset=-1), For(Name('name', Store(), lineno=16, col_offset=8), Name('names', Load(), lineno=16, col_offset=16), [If(Compare(Name('name', Load(), lineno=17, col_offset=11), [In()], [Tuple([Str('sys', lineno=17, col_offset=20), Str('marshal', lineno=17, col_offset=27), Str('imp', lineno=17, col_offset=38)], Load(), lineno=17, col_offset=20)], lineno=17, col_offset=11), [Raise(Call(Name('ValueError', Load(), lineno=18, col_offset=18), [Call(Attribute(Str('cannot uncache {0} as it will break _importlib', lineno=19, col_offset=16), 'format', Load(), lineno=19, col_offset=16), [Name('name', Load(), lineno=19, col_offset=72)], [], None, None, lineno=19, col_offset=16)], [], None, None, lineno=18, col_offset=18), None, None, lineno=18, col_offset=12)], [], lineno=17, col_offset=8), TryExcept([Delete([Subscript(Attribute(Name('sys', Load(), lineno=21, col_offset=16), 'modules', Load(), lineno=21, col_offset=16), Index(Name('name', Load(), lineno=21, col_offset=28)), Del(), lineno=21, col_offset=16)], lineno=21, col_offset=12)], [ExceptHandler(Name('KeyError', Load(), lineno=22, col_offset=15), None, [Pass( lineno=23, col_offset=12)], lineno=22, col_offset=8)], [], lineno=20, col_offset=8)], [], lineno=16, col_offset=4), TryFinally([Expr(Yield(None, lineno=25, col_offset=8), lineno=25, col_offset=8)], [For(Name('name', Store(), lineno=27, col_offset=12), Name('names', Load(), lineno=27, col_offset=20), [TryExcept([Delete([Subscript(Attribute(Name('sys', Load(), lineno=29, col_offset=20), 'modules', Load(), lineno=29, col_offset=20), Index(Name('name', Load(), lineno=29, col_offset=32)), Del(), lineno=29, col_offset=20)], lineno=29, col_offset=16)], [ExceptHandler(Name('KeyError', Load(), lineno=30, col_offset=19), None, [Pass( lineno=31, col_offset=16)], lineno=30, col_offset=12)], [], lineno=28, col_offset=12)], [], lineno=27, col_offset=8)], lineno=24, col_offset=4)], [Attribute(Name('contextlib', Load(), lineno=8, col_offset=1), 'contextmanager', Load(), lineno=8, col_offset=1)], lineno=8, col_offset=0), FunctionDef('import_state', arguments([], None, 'kwargs', []), [Expr(Str("Context manager to manage the various importers and stored state in the\n    sys module.\n\n    The 'modules' attribute is not supported as the interpreter state stores a\n    pointer to the dict that the interpreter uses internally;\n    reassigning to sys.modules does not have the desired effect.\n\n    ", lineno=43, col_offset=-1), lineno=43, col_offset=-1), Assign([Name('originals', Store(), lineno=44, col_offset=4)], Dict([], [], lineno=44, col_offset=16), lineno=44, col_offset=4), TryFinally([For(Tuple([Name('attr', Store(), lineno=46, col_offset=12), Name('default', Store(), lineno=46, col_offset=18)], Store(), lineno=46, col_offset=12), Tuple([Tuple([Str('meta_path', lineno=46, col_offset=31), List([], Load(), lineno=46, col_offset=44)], Load(), lineno=46, col_offset=31), Tuple([Str('path', lineno=46, col_offset=50), List([], Load(), lineno=46, col_offset=58)], Load(), lineno=46, col_offset=50), Tuple([Str('path_hooks', lineno=47, col_offset=31), List([], Load(), lineno=47, col_offset=45)], Load(), lineno=47, col_offset=31), Tuple([Str('path_importer_cache', lineno=48, col_offset=31), Dict([], [], lineno=48, col_offset=54)], Load(), lineno=48, col_offset=31)], Load(), lineno=46, col_offset=30), [Assign([Subscript(Name('originals', Load(), lineno=49, col_offset=12), Index(Name('attr', Load(), lineno=49, col_offset=22)), Store(), lineno=49, col_offset=12)], Call(Name('getattr', Load(), lineno=49, col_offset=30), [Name('sys', Load(), lineno=49, col_offset=38), Name('attr', Load(), lineno=49, col_offset=43)], [], None, None, lineno=49, col_offset=30), lineno=49, col_offset=12), If(Compare(Name('attr', Load(), lineno=50, col_offset=15), [In()], [Name('kwargs', Load(), lineno=50, col_offset=23)], lineno=50, col_offset=15), [Assign([Name('new_value', Store(), lineno=51, col_offset=16)], Subscript(Name('kwargs', Load(), lineno=51, col_offset=28), Index(Name('attr', Load(), lineno=51, col_offset=35)), Load(), lineno=51, col_offset=28), lineno=51, col_offset=16), Delete([Subscript(Name('kwargs', Load(), lineno=52, col_offset=20), Index(Name('attr', Load(), lineno=52, col_offset=27)), Del(), lineno=52, col_offset=20)], lineno=52, col_offset=16)], [Assign([Name('new_value', Store(), lineno=54, col_offset=16)], Name('default', Load(), lineno=54, col_offset=28), lineno=54, col_offset=16)], lineno=50, col_offset=12), Expr(Call(Name('setattr', Load(), lineno=55, col_offset=12), [Name('sys', Load(), lineno=55, col_offset=20), Name('attr', Load(), lineno=55, col_offset=25), Name('new_value', Load(), lineno=55, col_offset=31)], [], None, None, lineno=55, col_offset=12), lineno=55, col_offset=12)], [], lineno=46, col_offset=8), If(Call(Name('len', Load(), lineno=56, col_offset=11), [Name('kwargs', Load(), lineno=56, col_offset=15)], [], None, None, lineno=56, col_offset=11), [Raise(Call(Name('ValueError', Load(), lineno=57, col_offset=18), [Call(Attribute(Str('unrecognized arguments: {0}', lineno=58, col_offset=20), 'format', Load(), lineno=58, col_offset=20), [Call(Attribute(Name('kwargs', Load(), lineno=58, col_offset=57), 'keys', Load(), lineno=58, col_offset=57), [], [], None, None, lineno=58, col_offset=57)], [], None, None, lineno=58, col_offset=20)], [], None, None, lineno=57, col_offset=18), None, None, lineno=57, col_offset=12)], [], lineno=56, col_offset=8), Expr(Yield(None, lineno=59, col_offset=8), lineno=59, col_offset=8)], [For(Tuple([Name('attr', Store(), lineno=61, col_offset=12), Name('value', Store(), lineno=61, col_offset=18)], Store(), lineno=61, col_offset=12), Call(Attribute(Name('originals', Load(), lineno=61, col_offset=27), 'items', Load(), lineno=61, col_offset=27), [], [], None, None, lineno=61, col_offset=27), [Expr(Call(Name('setattr', Load(), lineno=62, col_offset=12), [Name('sys', Load(), lineno=62, col_offset=20), Name('attr', Load(), lineno=62, col_offset=25), Name('value', Load(), lineno=62, col_offset=31)], [], None, None, lineno=62, col_offset=12), lineno=62, col_offset=12)], [], lineno=61, col_offset=8)], lineno=45, col_offset=4)], [Attribute(Name('contextlib', Load(), lineno=34, col_offset=1), 'contextmanager', Load(), lineno=34, col_offset=1)], lineno=34, col_offset=0), ClassDef('mock_modules', [Name('object', Load(), lineno=65, col_offset=19)], [Expr(Str('A mock importer/loader.', lineno=67, col_offset=4), lineno=67, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=69, col_offset=17)], 'names', None, []), [Assign([Attribute(Name('self', Load(), lineno=70, col_offset=8), 'modules', Store(), lineno=70, col_offset=8)], Dict([], [], lineno=70, col_offset=23), lineno=70, col_offset=8), For(Name('name', Store(), lineno=71, col_offset=12), Name('names', Load(), lineno=71, col_offset=20), [If(UnaryOp(Not(), Call(Attribute(Name('name', Load(), lineno=72, col_offset=19), 'endswith', Load(), lineno=72, col_offset=19), [Str('.__init__', lineno=72, col_offset=33)], [], None, None, lineno=72, col_offset=19), lineno=72, col_offset=15), [Assign([Name('import_name', Store(), lineno=73, col_offset=16)], Name('name', Load(), lineno=73, col_offset=30), lineno=73, col_offset=16)], [Assign([Name('import_name', Store(), lineno=75, col_offset=16)], Subscript(Name('name', Load(), lineno=75, col_offset=30), Slice(None, UnaryOp(USub(), Call(Name('len', Load(), lineno=75, col_offset=37), [Str('.__init__', lineno=75, col_offset=41)], [], None, None, lineno=75, col_offset=37), lineno=75, col_offset=36), None), Load(), lineno=75, col_offset=30), lineno=75, col_offset=16)], lineno=72, col_offset=12), If(Compare(Str('.', lineno=76, col_offset=15), [NotIn()], [Name('name', Load(), lineno=76, col_offset=26)], lineno=76, col_offset=15), [Assign([Name('package', Store(), lineno=77, col_offset=16)], Name('None', Load(), lineno=77, col_offset=26), lineno=77, col_offset=16)], [If(Compare(Name('import_name', Load(), lineno=78, col_offset=17), [Eq()], [Name('name', Load(), lineno=78, col_offset=32)], lineno=78, col_offset=17), [Assign([Name('package', Store(), lineno=79, col_offset=16)], Subscript(Call(Attribute(Name('name', Load(), lineno=79, col_offset=26), 'rsplit', Load(), lineno=79, col_offset=26), [Str('.', lineno=79, col_offset=38), Num(1, lineno=79, col_offset=43)], [], None, None, lineno=79, col_offset=26), Index(Num(0, lineno=79, col_offset=46)), Load(), lineno=79, col_offset=26), lineno=79, col_offset=16)], [Assign([Name('package', Store(), lineno=81, col_offset=16)], Name('import_name', Load(), lineno=81, col_offset=26), lineno=81, col_offset=16)], lineno=78, col_offset=17)], lineno=76, col_offset=12), Assign([Name('module', Store(), lineno=82, col_offset=12)], Call(Attribute(Name('imp', Load(), lineno=82, col_offset=21), 'new_module', Load(), lineno=82, col_offset=21), [Name('import_name', Load(), lineno=82, col_offset=36)], [], None, None, lineno=82, col_offset=21), lineno=82, col_offset=12), Assign([Attribute(Name('module', Load(), lineno=83, col_offset=12), '__loader__', Store(), lineno=83, col_offset=12)], Name('self', Load(), lineno=83, col_offset=32), lineno=83, col_offset=12), Assign([Attribute(Name('module', Load(), lineno=84, col_offset=12), '__file__', Store(), lineno=84, col_offset=12)], Str('<mock __file__>', lineno=84, col_offset=30), lineno=84, col_offset=12), Assign([Attribute(Name('module', Load(), lineno=85, col_offset=12), '__package__', Store(), lineno=85, col_offset=12)], Name('package', Load(), lineno=85, col_offset=33), lineno=85, col_offset=12), Assign([Attribute(Name('module', Load(), lineno=86, col_offset=12), 'attr', Store(), lineno=86, col_offset=12)], Name('name', Load(), lineno=86, col_offset=26), lineno=86, col_offset=12), If(Compare(Name('import_name', Load(), lineno=87, col_offset=15), [NotEq()], [Name('name', Load(), lineno=87, col_offset=30)], lineno=87, col_offset=15), [Assign([Attribute(Name('module', Load(), lineno=88, col_offset=16), '__path__', Store(), lineno=88, col_offset=16)], List([Str('<mock __path__>', lineno=88, col_offset=35)], Load(), lineno=88, col_offset=34), lineno=88, col_offset=16)], [], lineno=87, col_offset=12), Assign([Subscript(Attribute(Name('self', Load(), lineno=89, col_offset=12), 'modules', Load(), lineno=89, col_offset=12), Index(Name('import_name', Load(), lineno=89, col_offset=25)), Store(), lineno=89, col_offset=12)], Name('module', Load(), lineno=89, col_offset=40), lineno=89, col_offset=12)], [], lineno=71, col_offset=8)], [], lineno=69, col_offset=4), FunctionDef('__getitem__', arguments([Name('self', Param(), lineno=91, col_offset=20), Name('name', Param(), lineno=91, col_offset=26)], None, None, []), [Return(Subscript(Attribute(Name('self', Load(), lineno=92, col_offset=15), 'modules', Load(), lineno=92, col_offset=15), Index(Name('name', Load(), lineno=92, col_offset=28)), Load(), lineno=92, col_offset=15), lineno=92, col_offset=8)], [], lineno=91, col_offset=4), FunctionDef('find_module', arguments([Name('self', Param(), lineno=94, col_offset=20), Name('fullname', Param(), lineno=94, col_offset=26), Name('path', Param(), lineno=94, col_offset=36)], None, None, [Name('None', Load(), lineno=94, col_offset=41)]), [If(Compare(Name('fullname', Load(), lineno=95, col_offset=11), [NotIn()], [Attribute(Name('self', Load(), lineno=95, col_offset=27), 'modules', Load(), lineno=95, col_offset=27)], lineno=95, col_offset=11), [Return(Name('None', Load(), lineno=96, col_offset=19), lineno=96, col_offset=12)], [Return(Name('self', Load(), lineno=98, col_offset=19), lineno=98, col_offset=12)], lineno=95, col_offset=8)], [], lineno=94, col_offset=4), FunctionDef('load_module', arguments([Name('self', Param(), lineno=100, col_offset=20), Name('fullname', Param(), lineno=100, col_offset=26)], None, None, []), [If(Compare(Name('fullname', Load(), lineno=101, col_offset=11), [NotIn()], [Attribute(Name('self', Load(), lineno=101, col_offset=27), 'modules', Load(), lineno=101, col_offset=27)], lineno=101, col_offset=11), [Raise(Name('ImportError', Load(), lineno=102, col_offset=18), None, None, lineno=102, col_offset=12)], [Assign([Subscript(Attribute(Name('sys', Load(), lineno=104, col_offset=12), 'modules', Load(), lineno=104, col_offset=12), Index(Name('fullname', Load(), lineno=104, col_offset=24)), Store(), lineno=104, col_offset=12)], Subscript(Attribute(Name('self', Load(), lineno=104, col_offset=36), 'modules', Load(), lineno=104, col_offset=36), Index(Name('fullname', Load(), lineno=104, col_offset=49)), Load(), lineno=104, col_offset=36), lineno=104, col_offset=12), Return(Subscript(Attribute(Name('self', Load(), lineno=105, col_offset=19), 'modules', Load(), lineno=105, col_offset=19), Index(Name('fullname', Load(), lineno=105, col_offset=32)), Load(), lineno=105, col_offset=19), lineno=105, col_offset=12)], lineno=101, col_offset=8)], [], lineno=100, col_offset=4), FunctionDef('__enter__', arguments([Name('self', Param(), lineno=107, col_offset=18)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=108, col_offset=8), '_uncache', Store(), lineno=108, col_offset=8)], Call(Name('uncache', Load(), lineno=108, col_offset=24), [], [], Call(Attribute(Attribute(Name('self', Load(), lineno=108, col_offset=33), 'modules', Load(), lineno=108, col_offset=33), 'keys', Load(), lineno=108, col_offset=33), [], [], None, None, lineno=108, col_offset=33), None, lineno=108, col_offset=24), lineno=108, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=109, col_offset=8), '_uncache', Load(), lineno=109, col_offset=8), '__enter__', Load(), lineno=109, col_offset=8), [], [], None, None, lineno=109, col_offset=8), lineno=109, col_offset=8), Return(Name('self', Load(), lineno=110, col_offset=15), lineno=110, col_offset=8)], [], lineno=107, col_offset=4), FunctionDef('__exit__', arguments([Name('self', Param(), lineno=112, col_offset=17)], 'exc_info', None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=113, col_offset=8), '_uncache', Load(), lineno=113, col_offset=8), '__exit__', Load(), lineno=113, col_offset=8), [Name('None', Load(), lineno=113, col_offset=31), Name('None', Load(), lineno=113, col_offset=37), Name('None', Load(), lineno=113, col_offset=43)], [], None, None, lineno=113, col_offset=8), lineno=113, col_offset=8)], [], lineno=112, col_offset=4)], [], lineno=65, col_offset=0), ClassDef('ImportModuleTests', [Attribute(Name('unittest', Load(), lineno=117, col_offset=24), 'TestCase', Load(), lineno=117, col_offset=24)], [Expr(Str('Test importlib.import_module.', lineno=119, col_offset=4), lineno=119, col_offset=4), FunctionDef('test_module_import', arguments([Name('self', Param(), lineno=121, col_offset=27)], None, None, []), [With(Call(Name('mock_modules', Load(), lineno=123, col_offset=13), [Str('top_level', lineno=123, col_offset=26)], [], None, None, lineno=123, col_offset=13), Name('mock', Store(), lineno=123, col_offset=42), [With(Call(Name('import_state', Load(), lineno=124, col_offset=17), [], [keyword('meta_path', List([Name('mock', Load(), lineno=124, col_offset=41)], Load(), lineno=124, col_offset=40))], None, None, lineno=124, col_offset=17), None, [Assign([Name('module', Store(), lineno=125, col_offset=16)], Call(Attribute(Name('importlib', Load(), lineno=125, col_offset=25), 'import_module', Load(), lineno=125, col_offset=25), [Str('top_level', lineno=125, col_offset=49)], [], None, None, lineno=125, col_offset=25), lineno=125, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=126, col_offset=16), 'assertEqual', Load(), lineno=126, col_offset=16), [Attribute(Name('module', Load(), lineno=126, col_offset=33), '__name__', Load(), lineno=126, col_offset=33), Str('top_level', lineno=126, col_offset=50)], [], None, None, lineno=126, col_offset=16), lineno=126, col_offset=16)], lineno=124, col_offset=17)], lineno=123, col_offset=13)], [], lineno=121, col_offset=4), FunctionDef('test_absolute_package_import', arguments([Name('self', Param(), lineno=128, col_offset=37)], None, None, []), [Assign([Name('pkg_name', Store(), lineno=130, col_offset=8)], Str('pkg', lineno=130, col_offset=19), lineno=130, col_offset=8), Assign([Name('pkg_long_name', Store(), lineno=131, col_offset=8)], Call(Attribute(Str('{0}.__init__', lineno=131, col_offset=24), 'format', Load(), lineno=131, col_offset=24), [Name('pkg_name', Load(), lineno=131, col_offset=46)], [], None, None, lineno=131, col_offset=24), lineno=131, col_offset=8), Assign([Name('name', Store(), lineno=132, col_offset=8)], Call(Attribute(Str('{0}.mod', lineno=132, col_offset=15), 'format', Load(), lineno=132, col_offset=15), [Name('pkg_name', Load(), lineno=132, col_offset=32)], [], None, None, lineno=132, col_offset=15), lineno=132, col_offset=8), With(Call(Name('mock_modules', Load(), lineno=133, col_offset=13), [Name('pkg_long_name', Load(), lineno=133, col_offset=26), Name('name', Load(), lineno=133, col_offset=41)], [], None, None, lineno=133, col_offset=13), Name('mock', Store(), lineno=133, col_offset=50), [With(Call(Name('import_state', Load(), lineno=134, col_offset=17), [], [keyword('meta_path', List([Name('mock', Load(), lineno=134, col_offset=41)], Load(), lineno=134, col_offset=40))], None, None, lineno=134, col_offset=17), None, [Assign([Name('module', Store(), lineno=135, col_offset=16)], Call(Attribute(Name('importlib', Load(), lineno=135, col_offset=25), 'import_module', Load(), lineno=135, col_offset=25), [Name('name', Load(), lineno=135, col_offset=49)], [], None, None, lineno=135, col_offset=25), lineno=135, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=136, col_offset=16), 'assertEqual', Load(), lineno=136, col_offset=16), [Attribute(Name('module', Load(), lineno=136, col_offset=33), '__name__', Load(), lineno=136, col_offset=33), Name('name', Load(), lineno=136, col_offset=50)], [], None, None, lineno=136, col_offset=16), lineno=136, col_offset=16)], lineno=134, col_offset=17)], lineno=133, col_offset=13)], [], lineno=128, col_offset=4), FunctionDef('test_shallow_relative_package_import', arguments([Name('self', Param(), lineno=138, col_offset=45)], None, None, []), [Assign([Name('modules', Store(), lineno=139, col_offset=8)], List([Str('a.__init__', lineno=139, col_offset=19), Str('a.b.__init__', lineno=139, col_offset=33), Str('a.b.c.__init__', lineno=139, col_offset=49), Str('a.b.c.d', lineno=139, col_offset=67)], Load(), lineno=139, col_offset=18), lineno=139, col_offset=8), With(Call(Name('mock_modules', Load(), lineno=140, col_offset=13), [], [], Name('modules', Load(), lineno=140, col_offset=27), None, lineno=140, col_offset=13), Name('mock', Store(), lineno=140, col_offset=39), [With(Call(Name('import_state', Load(), lineno=141, col_offset=17), [], [keyword('meta_path', List([Name('mock', Load(), lineno=141, col_offset=41)], Load(), lineno=141, col_offset=40))], None, None, lineno=141, col_offset=17), None, [Assign([Name('module', Store(), lineno=142, col_offset=16)], Call(Attribute(Name('importlib', Load(), lineno=142, col_offset=25), 'import_module', Load(), lineno=142, col_offset=25), [Str('.d', lineno=142, col_offset=49), Str('a.b.c', lineno=142, col_offset=55)], [], None, None, lineno=142, col_offset=25), lineno=142, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=143, col_offset=16), 'assertEqual', Load(), lineno=143, col_offset=16), [Attribute(Name('module', Load(), lineno=143, col_offset=33), '__name__', Load(), lineno=143, col_offset=33), Str('a.b.c.d', lineno=143, col_offset=50)], [], None, None, lineno=143, col_offset=16), lineno=143, col_offset=16)], lineno=141, col_offset=17)], lineno=140, col_offset=13)], [], lineno=138, col_offset=4), FunctionDef('test_deep_relative_package_import', arguments([Name('self', Param(), lineno=145, col_offset=42)], None, None, []), [Assign([Name('modules', Store(), lineno=147, col_offset=8)], List([Str('a.__init__', lineno=147, col_offset=19), Str('a.b.__init__', lineno=147, col_offset=33), Str('a.c', lineno=147, col_offset=49)], Load(), lineno=147, col_offset=18), lineno=147, col_offset=8), With(Call(Name('mock_modules', Load(), lineno=148, col_offset=13), [], [], Name('modules', Load(), lineno=148, col_offset=27), None, lineno=148, col_offset=13), Name('mock', Store(), lineno=148, col_offset=39), [With(Call(Name('import_state', Load(), lineno=149, col_offset=17), [], [keyword('meta_path', List([Name('mock', Load(), lineno=149, col_offset=41)], Load(), lineno=149, col_offset=40))], None, None, lineno=149, col_offset=17), None, [Assign([Name('module', Store(), lineno=150, col_offset=16)], Call(Attribute(Name('importlib', Load(), lineno=150, col_offset=25), 'import_module', Load(), lineno=150, col_offset=25), [Str('..c', lineno=150, col_offset=49), Str('a.b', lineno=150, col_offset=56)], [], None, None, lineno=150, col_offset=25), lineno=150, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=151, col_offset=16), 'assertEqual', Load(), lineno=151, col_offset=16), [Attribute(Name('module', Load(), lineno=151, col_offset=33), '__name__', Load(), lineno=151, col_offset=33), Str('a.c', lineno=151, col_offset=50)], [], None, None, lineno=151, col_offset=16), lineno=151, col_offset=16)], lineno=149, col_offset=17)], lineno=148, col_offset=13)], [], lineno=145, col_offset=4), FunctionDef('test_absolute_import_with_package', arguments([Name('self', Param(), lineno=153, col_offset=42)], None, None, []), [Assign([Name('pkg_name', Store(), lineno=156, col_offset=8)], Str('pkg', lineno=156, col_offset=19), lineno=156, col_offset=8), Assign([Name('pkg_long_name', Store(), lineno=157, col_offset=8)], Call(Attribute(Str('{0}.__init__', lineno=157, col_offset=24), 'format', Load(), lineno=157, col_offset=24), [Name('pkg_name', Load(), lineno=157, col_offset=46)], [], None, None, lineno=157, col_offset=24), lineno=157, col_offset=8), Assign([Name('name', Store(), lineno=158, col_offset=8)], Call(Attribute(Str('{0}.mod', lineno=158, col_offset=15), 'format', Load(), lineno=158, col_offset=15), [Name('pkg_name', Load(), lineno=158, col_offset=32)], [], None, None, lineno=158, col_offset=15), lineno=158, col_offset=8), With(Call(Name('mock_modules', Load(), lineno=159, col_offset=13), [Name('pkg_long_name', Load(), lineno=159, col_offset=26), Name('name', Load(), lineno=159, col_offset=41)], [], None, None, lineno=159, col_offset=13), Name('mock', Store(), lineno=159, col_offset=50), [With(Call(Name('import_state', Load(), lineno=160, col_offset=17), [], [keyword('meta_path', List([Name('mock', Load(), lineno=160, col_offset=41)], Load(), lineno=160, col_offset=40))], None, None, lineno=160, col_offset=17), None, [Assign([Name('module', Store(), lineno=161, col_offset=16)], Call(Attribute(Name('importlib', Load(), lineno=161, col_offset=25), 'import_module', Load(), lineno=161, col_offset=25), [Name('name', Load(), lineno=161, col_offset=49), Name('pkg_name', Load(), lineno=161, col_offset=55)], [], None, None, lineno=161, col_offset=25), lineno=161, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=162, col_offset=16), 'assertEqual', Load(), lineno=162, col_offset=16), [Attribute(Name('module', Load(), lineno=162, col_offset=33), '__name__', Load(), lineno=162, col_offset=33), Name('name', Load(), lineno=162, col_offset=50)], [], None, None, lineno=162, col_offset=16), lineno=162, col_offset=16)], lineno=160, col_offset=17)], lineno=159, col_offset=13)], [], lineno=153, col_offset=4), FunctionDef('test_relative_import_wo_package', arguments([Name('self', Param(), lineno=164, col_offset=40)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=167, col_offset=8), 'assertRaises', Load(), lineno=167, col_offset=8), [Name('TypeError', Load(), lineno=167, col_offset=26), Attribute(Name('importlib', Load(), lineno=167, col_offset=37), 'import_module', Load(), lineno=167, col_offset=37), Str('.support', lineno=167, col_offset=62)], [], None, None, lineno=167, col_offset=8), lineno=167, col_offset=8)], [], lineno=164, col_offset=4)], [], lineno=117, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [ImportFrom('test.test_support', [alias('run_unittest', None)], 0, lineno=171, col_offset=4), Expr(Call(Name('run_unittest', Load(), lineno=172, col_offset=4), [Name('ImportModuleTests', Load(), lineno=172, col_offset=17)], [], None, None, lineno=172, col_offset=4), lineno=172, col_offset=4)], [], lineno=170, col_offset=0), If(Compare(Name('__name__', Load(), lineno=175, col_offset=3), [Eq()], [Str('__main__', lineno=175, col_offset=15)], lineno=175, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=176, col_offset=4), [], [], None, None, lineno=176, col_offset=4), lineno=176, col_offset=4)], [], lineno=175, col_offset=0)])
