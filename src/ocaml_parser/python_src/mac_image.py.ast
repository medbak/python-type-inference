Module([Expr(Str('mac_image - Helper routines (hacks) for images', lineno=1, col_offset=0), lineno=1, col_offset=0), Import([alias('imgformat', None)], lineno=2, col_offset=0), ImportFrom('Carbon', [alias('Qd', None)], 0, lineno=3, col_offset=0), Import([alias('struct', None)], lineno=4, col_offset=0), Import([alias('MacOS', None)], lineno=5, col_offset=0), Assign([Name('_fmt_to_mac', Store(), lineno=7, col_offset=0)], Dict([Attribute(Name('imgformat', Load(), lineno=8, col_offset=8), 'macrgb16', Load(), lineno=8, col_offset=8)], [Tuple([Num(16, lineno=8, col_offset=30), Num(16, lineno=8, col_offset=34), Num(3, lineno=8, col_offset=38), Num(5, lineno=8, col_offset=41)], Load(), lineno=8, col_offset=30)], lineno=7, col_offset=14), lineno=7, col_offset=0), FunctionDef('mkpixmap', arguments([Name('w', Param(), lineno=11, col_offset=13), Name('h', Param(), lineno=11, col_offset=16), Name('fmt', Param(), lineno=11, col_offset=19), Name('data', Param(), lineno=11, col_offset=24)], None, None, []), [Expr(Str('kludge a pixmap together', lineno=12, col_offset=4), lineno=12, col_offset=4), Assign([Name('fmtinfo', Store(), lineno=13, col_offset=4)], Subscript(Name('_fmt_to_mac', Load(), lineno=13, col_offset=14), Index(Name('fmt', Load(), lineno=13, col_offset=26)), Load(), lineno=13, col_offset=14), lineno=13, col_offset=4), Assign([Name('rv', Store(), lineno=15, col_offset=4)], Call(Attribute(Name('struct', Load(), lineno=15, col_offset=9), 'pack', Load(), lineno=15, col_offset=9), [Str('lHhhhhhhlllhhhhlll', lineno=15, col_offset=21), BinOp(Call(Name('id', Load(), lineno=16, col_offset=12), [Name('data', Load(), lineno=16, col_offset=15)], [], None, None, lineno=16, col_offset=12), Add(), Attribute(Name('MacOS', Load(), lineno=16, col_offset=21), 'string_id_to_buffer', Load(), lineno=16, col_offset=21), lineno=16, col_offset=12), BinOp(BinOp(Name('w', Load(), lineno=17, col_offset=12), Mult(), Num(2, lineno=17, col_offset=14), lineno=17, col_offset=12), Add(), Num(32768, lineno=17, col_offset=18), lineno=17, col_offset=12), Num(0, lineno=18, col_offset=12), Num(0, lineno=18, col_offset=15), Name('h', Load(), lineno=18, col_offset=18), Name('w', Load(), lineno=18, col_offset=21), Num(0, lineno=19, col_offset=12), Num(0, lineno=20, col_offset=12), Num(0, lineno=20, col_offset=15), BinOp(Num(72, lineno=21, col_offset=12), LShift(), Num(16, lineno=21, col_offset=16), lineno=21, col_offset=12), BinOp(Num(72, lineno=21, col_offset=20), LShift(), Num(16, lineno=21, col_offset=24), lineno=21, col_offset=20), Subscript(Name('fmtinfo', Load(), lineno=22, col_offset=12), Index(Num(0, lineno=22, col_offset=20)), Load(), lineno=22, col_offset=12), Subscript(Name('fmtinfo', Load(), lineno=22, col_offset=24), Index(Num(1, lineno=22, col_offset=32)), Load(), lineno=22, col_offset=24), Subscript(Name('fmtinfo', Load(), lineno=23, col_offset=12), Index(Num(2, lineno=23, col_offset=20)), Load(), lineno=23, col_offset=12), Subscript(Name('fmtinfo', Load(), lineno=23, col_offset=24), Index(Num(3, lineno=23, col_offset=32)), Load(), lineno=23, col_offset=24), Num(0, lineno=24, col_offset=12), Num(0, lineno=24, col_offset=15), Num(0, lineno=24, col_offset=18)], [], None, None, lineno=15, col_offset=9), lineno=15, col_offset=4), Return(Call(Attribute(Name('Qd', Load(), lineno=27, col_offset=11), 'RawBitMap', Load(), lineno=27, col_offset=11), [Name('rv', Load(), lineno=27, col_offset=24)], [], None, None, lineno=27, col_offset=11), lineno=27, col_offset=4)], [], lineno=11, col_offset=0), FunctionDef('dumppixmap', arguments([Name('data', Param(), lineno=29, col_offset=15)], None, None, []), [Assign([Tuple([Name('baseAddr', Store(), lineno=30, col_offset=4), Name('rowBytes', Store(), lineno=31, col_offset=12), Name('t', Store(), lineno=32, col_offset=12), Name('l', Store(), lineno=32, col_offset=15), Name('b', Store(), lineno=32, col_offset=18), Name('r', Store(), lineno=32, col_offset=21), Name('pmVersion', Store(), lineno=33, col_offset=12), Name('packType', Store(), lineno=34, col_offset=12), Name('packSize', Store(), lineno=34, col_offset=22), Name('hRes', Store(), lineno=35, col_offset=12), Name('vRes', Store(), lineno=35, col_offset=18), Name('pixelType', Store(), lineno=36, col_offset=12), Name('pixelSize', Store(), lineno=36, col_offset=23), Name('cmpCount', Store(), lineno=37, col_offset=12), Name('cmpSize', Store(), lineno=37, col_offset=22), Name('planeBytes', Store(), lineno=38, col_offset=12), Name('pmTable', Store(), lineno=38, col_offset=24), Name('pmReserved', Store(), lineno=38, col_offset=33)], Store(), lineno=30, col_offset=4)], Call(Attribute(Name('struct', Load(), lineno=39, col_offset=22), 'unpack', Load(), lineno=39, col_offset=22), [Str('lhhhhhhhlllhhhhlll', lineno=39, col_offset=36), Name('data', Load(), lineno=39, col_offset=58)], [], None, None, lineno=39, col_offset=22), lineno=30, col_offset=4), Print(None, [BinOp(Str('Base:       0x%x', lineno=40, col_offset=10), Mod(), Name('baseAddr', Load(), lineno=40, col_offset=29), lineno=40, col_offset=10)], True, lineno=40, col_offset=4), Print(None, [BinOp(Str('rowBytes:   %d (0x%x)', lineno=41, col_offset=10), Mod(), Tuple([BinOp(Name('rowBytes', Load(), lineno=41, col_offset=35), BitAnd(), Num(16383, lineno=41, col_offset=44), lineno=41, col_offset=35), Name('rowBytes', Load(), lineno=41, col_offset=52)], Load(), lineno=41, col_offset=35), lineno=41, col_offset=10)], True, lineno=41, col_offset=4), Print(None, [BinOp(Str('rect:       %d, %d, %d, %d', lineno=42, col_offset=10), Mod(), Tuple([Name('t', Load(), lineno=42, col_offset=40), Name('l', Load(), lineno=42, col_offset=43), Name('b', Load(), lineno=42, col_offset=46), Name('r', Load(), lineno=42, col_offset=49)], Load(), lineno=42, col_offset=40), lineno=42, col_offset=10)], True, lineno=42, col_offset=4), Print(None, [BinOp(Str('pmVersion:  0x%x', lineno=43, col_offset=10), Mod(), Name('pmVersion', Load(), lineno=43, col_offset=29), lineno=43, col_offset=10)], True, lineno=43, col_offset=4), Print(None, [BinOp(Str('packing:    %d %d', lineno=44, col_offset=10), Mod(), Tuple([Name('packType', Load(), lineno=44, col_offset=31), Name('packSize', Load(), lineno=44, col_offset=41)], Load(), lineno=44, col_offset=31), lineno=44, col_offset=10)], True, lineno=44, col_offset=4), Print(None, [BinOp(Str('resolution: %f x %f', lineno=45, col_offset=10), Mod(), Tuple([BinOp(Call(Name('float', Load(), lineno=45, col_offset=33), [Name('hRes', Load(), lineno=45, col_offset=39)], [], None, None, lineno=45, col_offset=33), Div(), Num(65536, lineno=45, col_offset=45), lineno=45, col_offset=33), BinOp(Call(Name('float', Load(), lineno=45, col_offset=54), [Name('vRes', Load(), lineno=45, col_offset=60)], [], None, None, lineno=45, col_offset=54), Div(), Num(65536, lineno=45, col_offset=66), lineno=45, col_offset=54)], Load(), lineno=45, col_offset=33), lineno=45, col_offset=10)], True, lineno=45, col_offset=4), Print(None, [BinOp(Str('pixeltype:  %d, size %d', lineno=46, col_offset=10), Mod(), Tuple([Name('pixelType', Load(), lineno=46, col_offset=37), Name('pixelSize', Load(), lineno=46, col_offset=48)], Load(), lineno=46, col_offset=37), lineno=46, col_offset=10)], True, lineno=46, col_offset=4), Print(None, [BinOp(Str('components: %d, size %d', lineno=47, col_offset=10), Mod(), Tuple([Name('cmpCount', Load(), lineno=47, col_offset=37), Name('cmpSize', Load(), lineno=47, col_offset=47)], Load(), lineno=47, col_offset=37), lineno=47, col_offset=10)], True, lineno=47, col_offset=4), Print(None, [BinOp(Str('planeBytes: %d (0x%x)', lineno=48, col_offset=10), Mod(), Tuple([Name('planeBytes', Load(), lineno=48, col_offset=35), Name('planeBytes', Load(), lineno=48, col_offset=47)], Load(), lineno=48, col_offset=35), lineno=48, col_offset=10)], True, lineno=48, col_offset=4), Print(None, [BinOp(Str('pmTable:    0x%x', lineno=49, col_offset=10), Mod(), Name('pmTable', Load(), lineno=49, col_offset=29), lineno=49, col_offset=10)], True, lineno=49, col_offset=4), Print(None, [BinOp(Str('pmReserved: 0x%x', lineno=50, col_offset=10), Mod(), Name('pmReserved', Load(), lineno=50, col_offset=29), lineno=50, col_offset=10)], True, lineno=50, col_offset=4), For(Name('i', Store(), lineno=51, col_offset=8), Call(Name('range', Load(), lineno=51, col_offset=13), [Num(0, lineno=51, col_offset=19), Call(Name('len', Load(), lineno=51, col_offset=22), [Name('data', Load(), lineno=51, col_offset=26)], [], None, None, lineno=51, col_offset=22), Num(16, lineno=51, col_offset=33)], [], None, None, lineno=51, col_offset=13), [For(Name('j', Store(), lineno=52, col_offset=12), Call(Name('range', Load(), lineno=52, col_offset=17), [Num(16, lineno=52, col_offset=23)], [], None, None, lineno=52, col_offset=17), [If(Compare(BinOp(Name('i', Load(), lineno=53, col_offset=15), Add(), Name('j', Load(), lineno=53, col_offset=19), lineno=53, col_offset=15), [Lt()], [Call(Name('len', Load(), lineno=53, col_offset=23), [Name('data', Load(), lineno=53, col_offset=27)], [], None, None, lineno=53, col_offset=23)], lineno=53, col_offset=15), [Print(None, [BinOp(Str('%02.2x', lineno=54, col_offset=22), Mod(), Call(Name('ord', Load(), lineno=54, col_offset=31), [Subscript(Name('data', Load(), lineno=54, col_offset=35), Index(BinOp(Name('i', Load(), lineno=54, col_offset=40), Add(), Name('j', Load(), lineno=54, col_offset=42), lineno=54, col_offset=40)), Load(), lineno=54, col_offset=35)], [], None, None, lineno=54, col_offset=31), lineno=54, col_offset=22)], False, lineno=54, col_offset=16)], [], lineno=53, col_offset=12)], [], lineno=52, col_offset=8), Print(None, [], True, lineno=55, col_offset=8)], [], lineno=51, col_offset=4)], [], lineno=29, col_offset=0)])
