Module([Expr(Str('Test the binascii C module.', lineno=1, col_offset=0), lineno=1, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=3, col_offset=0), Import([alias('unittest', None)], lineno=4, col_offset=0), Import([alias('binascii', None)], lineno=5, col_offset=0), Import([alias('array', None)], lineno=6, col_offset=0), Assign([Name('b2a_functions', Store(), lineno=9, col_offset=0)], List([Str('b2a_base64', lineno=9, col_offset=17), Str('b2a_hex', lineno=9, col_offset=31), Str('b2a_hqx', lineno=9, col_offset=42), Str('b2a_qp', lineno=9, col_offset=53), Str('b2a_uu', lineno=9, col_offset=63), Str('hexlify', lineno=10, col_offset=17), Str('rlecode_hqx', lineno=10, col_offset=28)], Load(), lineno=9, col_offset=16), lineno=9, col_offset=0), Assign([Name('a2b_functions', Store(), lineno=11, col_offset=0)], List([Str('a2b_base64', lineno=11, col_offset=17), Str('a2b_hex', lineno=11, col_offset=31), Str('a2b_hqx', lineno=11, col_offset=42), Str('a2b_qp', lineno=11, col_offset=53), Str('a2b_uu', lineno=11, col_offset=63), Str('unhexlify', lineno=12, col_offset=17), Str('rledecode_hqx', lineno=12, col_offset=30)], Load(), lineno=11, col_offset=16), lineno=11, col_offset=0), Assign([Name('all_functions', Store(), lineno=13, col_offset=0)], BinOp(BinOp(Name('a2b_functions', Load(), lineno=13, col_offset=16), Add(), Name('b2a_functions', Load(), lineno=13, col_offset=32), lineno=13, col_offset=16), Add(), List([Str('crc32', lineno=13, col_offset=49), Str('crc_hqx', lineno=13, col_offset=58)], Load(), lineno=13, col_offset=48), lineno=13, col_offset=46), lineno=13, col_offset=0), ClassDef('BinASCIITest', [Attribute(Name('unittest', Load(), lineno=16, col_offset=19), 'TestCase', Load(), lineno=16, col_offset=19)], [Assign([Name('type2test', Store(), lineno=18, col_offset=4)], Name('str', Load(), lineno=18, col_offset=16), lineno=18, col_offset=4), Assign([Name('rawdata', Store(), lineno=20, col_offset=4)], Str('The quick brown fox jumps over the lazy dog.\r\n', lineno=20, col_offset=14), lineno=20, col_offset=4), AugAssign(Name('rawdata', Store(), lineno=22, col_offset=4), Add(), Call(Attribute(Str('', lineno=22, col_offset=15), 'join', Load(), lineno=22, col_offset=15), [Call(Name('map', Load(), lineno=22, col_offset=23), [Name('chr', Load(), lineno=22, col_offset=27), Call(Name('xrange', Load(), lineno=22, col_offset=32), [Num(256, lineno=22, col_offset=39)], [], None, None, lineno=22, col_offset=32)], [], None, None, lineno=22, col_offset=23)], [], None, None, lineno=22, col_offset=15), lineno=22, col_offset=4), AugAssign(Name('rawdata', Store(), lineno=23, col_offset=4), Add(), Str('\r\nHello world.\n', lineno=23, col_offset=15), lineno=23, col_offset=4), FunctionDef('setUp', arguments([Name('self', Param(), lineno=25, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=26, col_offset=8), 'data', Store(), lineno=26, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=26, col_offset=20), 'type2test', Load(), lineno=26, col_offset=20), [Attribute(Name('self', Load(), lineno=26, col_offset=35), 'rawdata', Load(), lineno=26, col_offset=35)], [], None, None, lineno=26, col_offset=20), lineno=26, col_offset=8)], [], lineno=25, col_offset=4), FunctionDef('test_exceptions', arguments([Name('self', Param(), lineno=28, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=30, col_offset=8), 'assertTrue', Load(), lineno=30, col_offset=8), [Call(Name('issubclass', Load(), lineno=30, col_offset=24), [Attribute(Name('binascii', Load(), lineno=30, col_offset=35), 'Error', Load(), lineno=30, col_offset=35), Name('Exception', Load(), lineno=30, col_offset=51)], [], None, None, lineno=30, col_offset=24)], [], None, None, lineno=30, col_offset=8), lineno=30, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=31, col_offset=8), 'assertTrue', Load(), lineno=31, col_offset=8), [Call(Name('issubclass', Load(), lineno=31, col_offset=24), [Attribute(Name('binascii', Load(), lineno=31, col_offset=35), 'Incomplete', Load(), lineno=31, col_offset=35), Name('Exception', Load(), lineno=31, col_offset=56)], [], None, None, lineno=31, col_offset=24)], [], None, None, lineno=31, col_offset=8), lineno=31, col_offset=8)], [], lineno=28, col_offset=4), FunctionDef('test_functions', arguments([Name('self', Param(), lineno=33, col_offset=23)], None, None, []), [For(Name('name', Store(), lineno=35, col_offset=12), Name('all_functions', Load(), lineno=35, col_offset=20), [Expr(Call(Attribute(Name('self', Load(), lineno=36, col_offset=12), 'assertTrue', Load(), lineno=36, col_offset=12), [Call(Name('hasattr', Load(), lineno=36, col_offset=28), [Call(Name('getattr', Load(), lineno=36, col_offset=36), [Name('binascii', Load(), lineno=36, col_offset=44), Name('name', Load(), lineno=36, col_offset=54)], [], None, None, lineno=36, col_offset=36), Str('__call__', lineno=36, col_offset=61)], [], None, None, lineno=36, col_offset=28)], [], None, None, lineno=36, col_offset=12), lineno=36, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=37, col_offset=12), 'assertRaises', Load(), lineno=37, col_offset=12), [Name('TypeError', Load(), lineno=37, col_offset=30), Call(Name('getattr', Load(), lineno=37, col_offset=41), [Name('binascii', Load(), lineno=37, col_offset=49), Name('name', Load(), lineno=37, col_offset=59)], [], None, None, lineno=37, col_offset=41)], [], None, None, lineno=37, col_offset=12), lineno=37, col_offset=12)], [], lineno=35, col_offset=8)], [], lineno=33, col_offset=4), FunctionDef('test_returned_value', arguments([Name('self', Param(), lineno=39, col_offset=28)], None, None, []), [Assign([Name('MAX_ALL', Store(), lineno=41, col_offset=8)], Num(45, lineno=41, col_offset=18), lineno=41, col_offset=8), Assign([Name('raw', Store(), lineno=42, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=42, col_offset=14), 'rawdata', Load(), lineno=42, col_offset=14), Slice(None, Name('MAX_ALL', Load(), lineno=42, col_offset=28), None), Load(), lineno=42, col_offset=14), lineno=42, col_offset=8), For(Tuple([Name('fa', Store(), lineno=43, col_offset=12), Name('fb', Store(), lineno=43, col_offset=16)], Store(), lineno=43, col_offset=12), Call(Name('zip', Load(), lineno=43, col_offset=22), [Name('a2b_functions', Load(), lineno=43, col_offset=26), Name('b2a_functions', Load(), lineno=43, col_offset=41)], [], None, None, lineno=43, col_offset=22), [Assign([Name('a2b', Store(), lineno=44, col_offset=12)], Call(Name('getattr', Load(), lineno=44, col_offset=18), [Name('binascii', Load(), lineno=44, col_offset=26), Name('fa', Load(), lineno=44, col_offset=36)], [], None, None, lineno=44, col_offset=18), lineno=44, col_offset=12), Assign([Name('b2a', Store(), lineno=45, col_offset=12)], Call(Name('getattr', Load(), lineno=45, col_offset=18), [Name('binascii', Load(), lineno=45, col_offset=26), Name('fb', Load(), lineno=45, col_offset=36)], [], None, None, lineno=45, col_offset=18), lineno=45, col_offset=12), TryExcept([Assign([Name('a', Store(), lineno=47, col_offset=16)], Call(Name('b2a', Load(), lineno=47, col_offset=20), [Call(Attribute(Name('self', Load(), lineno=47, col_offset=24), 'type2test', Load(), lineno=47, col_offset=24), [Name('raw', Load(), lineno=47, col_offset=39)], [], None, None, lineno=47, col_offset=24)], [], None, None, lineno=47, col_offset=20), lineno=47, col_offset=16), Assign([Name('res', Store(), lineno=48, col_offset=16)], Call(Name('a2b', Load(), lineno=48, col_offset=22), [Call(Attribute(Name('self', Load(), lineno=48, col_offset=26), 'type2test', Load(), lineno=48, col_offset=26), [Name('a', Load(), lineno=48, col_offset=41)], [], None, None, lineno=48, col_offset=26)], [], None, None, lineno=48, col_offset=22), lineno=48, col_offset=16)], [ExceptHandler(Name('Exception', Load(), lineno=49, col_offset=19), Name('err', Store(), lineno=49, col_offset=30), [Expr(Call(Attribute(Name('self', Load(), lineno=50, col_offset=16), 'fail', Load(), lineno=50, col_offset=16), [Call(Attribute(Str('{}/{} conversion raises {!r}', lineno=50, col_offset=26), 'format', Load(), lineno=50, col_offset=26), [Name('fb', Load(), lineno=50, col_offset=64), Name('fa', Load(), lineno=50, col_offset=68), Name('err', Load(), lineno=50, col_offset=72)], [], None, None, lineno=50, col_offset=26)], [], None, None, lineno=50, col_offset=16), lineno=50, col_offset=16)], lineno=49, col_offset=12)], [], lineno=46, col_offset=12), If(Compare(Name('fb', Load(), lineno=51, col_offset=15), [Eq()], [Str('b2a_hqx', lineno=51, col_offset=21)], lineno=51, col_offset=15), [Assign([Tuple([Name('res', Store(), lineno=53, col_offset=16), Name('_', Store(), lineno=53, col_offset=21)], Store(), lineno=53, col_offset=16)], Name('res', Load(), lineno=53, col_offset=25), lineno=53, col_offset=16)], [], lineno=51, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=54, col_offset=12), 'assertEqual', Load(), lineno=54, col_offset=12), [Name('res', Load(), lineno=54, col_offset=29), Name('raw', Load(), lineno=54, col_offset=34), Call(Attribute(Str('{}/{} conversion: {!r} != {!r}', lineno=54, col_offset=39), 'format', Load(), lineno=54, col_offset=39), [Name('fb', Load(), lineno=55, col_offset=51), Name('fa', Load(), lineno=55, col_offset=55), Name('res', Load(), lineno=55, col_offset=59), Name('raw', Load(), lineno=55, col_offset=64)], [], None, None, lineno=54, col_offset=39)], [], None, None, lineno=54, col_offset=12), lineno=54, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=56, col_offset=12), 'assertIsInstance', Load(), lineno=56, col_offset=12), [Name('res', Load(), lineno=56, col_offset=34), Name('str', Load(), lineno=56, col_offset=39)], [], None, None, lineno=56, col_offset=12), lineno=56, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=57, col_offset=12), 'assertIsInstance', Load(), lineno=57, col_offset=12), [Name('a', Load(), lineno=57, col_offset=34), Name('str', Load(), lineno=57, col_offset=37)], [], None, None, lineno=57, col_offset=12), lineno=57, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=58, col_offset=12), 'assertLess', Load(), lineno=58, col_offset=12), [Call(Name('max', Load(), lineno=58, col_offset=28), [GeneratorExp(Call(Name('ord', Load(), lineno=58, col_offset=32), [Name('c', Load(), lineno=58, col_offset=36)], [], None, None, lineno=58, col_offset=32), [comprehension(Name('c', Store(), lineno=58, col_offset=43), Name('a', Load(), lineno=58, col_offset=48), [])], lineno=58, col_offset=32)], [], None, None, lineno=58, col_offset=28), Num(128, lineno=58, col_offset=52)], [], None, None, lineno=58, col_offset=12), lineno=58, col_offset=12)], [], lineno=43, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=59, col_offset=8), 'assertIsInstance', Load(), lineno=59, col_offset=8), [Call(Attribute(Name('binascii', Load(), lineno=59, col_offset=30), 'crc_hqx', Load(), lineno=59, col_offset=30), [Name('raw', Load(), lineno=59, col_offset=47), Num(0, lineno=59, col_offset=52)], [], None, None, lineno=59, col_offset=30), Name('int', Load(), lineno=59, col_offset=56)], [], None, None, lineno=59, col_offset=8), lineno=59, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=60, col_offset=8), 'assertIsInstance', Load(), lineno=60, col_offset=8), [Call(Attribute(Name('binascii', Load(), lineno=60, col_offset=30), 'crc32', Load(), lineno=60, col_offset=30), [Name('raw', Load(), lineno=60, col_offset=45)], [], None, None, lineno=60, col_offset=30), Name('int', Load(), lineno=60, col_offset=51)], [], None, None, lineno=60, col_offset=8), lineno=60, col_offset=8)], [], lineno=39, col_offset=4), FunctionDef('test_base64valid', arguments([Name('self', Param(), lineno=62, col_offset=25)], None, None, []), [Assign([Name('MAX_BASE64', Store(), lineno=64, col_offset=8)], Num(57, lineno=64, col_offset=21), lineno=64, col_offset=8), Assign([Name('lines', Store(), lineno=65, col_offset=8)], List([], Load(), lineno=65, col_offset=16), lineno=65, col_offset=8), For(Name('i', Store(), lineno=66, col_offset=12), Call(Name('range', Load(), lineno=66, col_offset=17), [Num(0, lineno=66, col_offset=23), Call(Name('len', Load(), lineno=66, col_offset=26), [Attribute(Name('self', Load(), lineno=66, col_offset=30), 'rawdata', Load(), lineno=66, col_offset=30)], [], None, None, lineno=66, col_offset=26), Name('MAX_BASE64', Load(), lineno=66, col_offset=45)], [], None, None, lineno=66, col_offset=17), [Assign([Name('b', Store(), lineno=67, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=67, col_offset=16), 'type2test', Load(), lineno=67, col_offset=16), [Subscript(Attribute(Name('self', Load(), lineno=67, col_offset=31), 'rawdata', Load(), lineno=67, col_offset=31), Slice(Name('i', Load(), lineno=67, col_offset=44), BinOp(Name('i', Load(), lineno=67, col_offset=46), Add(), Name('MAX_BASE64', Load(), lineno=67, col_offset=48), lineno=67, col_offset=46), None), Load(), lineno=67, col_offset=31)], [], None, None, lineno=67, col_offset=16), lineno=67, col_offset=12), Assign([Name('a', Store(), lineno=68, col_offset=12)], Call(Attribute(Name('binascii', Load(), lineno=68, col_offset=16), 'b2a_base64', Load(), lineno=68, col_offset=16), [Name('b', Load(), lineno=68, col_offset=36)], [], None, None, lineno=68, col_offset=16), lineno=68, col_offset=12), Expr(Call(Attribute(Name('lines', Load(), lineno=69, col_offset=12), 'append', Load(), lineno=69, col_offset=12), [Name('a', Load(), lineno=69, col_offset=25)], [], None, None, lineno=69, col_offset=12), lineno=69, col_offset=12)], [], lineno=66, col_offset=8), Assign([Name('res', Store(), lineno=70, col_offset=8)], Str('', lineno=70, col_offset=14), lineno=70, col_offset=8), For(Name('line', Store(), lineno=71, col_offset=12), Name('lines', Load(), lineno=71, col_offset=20), [Assign([Name('a', Store(), lineno=72, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=72, col_offset=16), 'type2test', Load(), lineno=72, col_offset=16), [Name('line', Load(), lineno=72, col_offset=31)], [], None, None, lineno=72, col_offset=16), lineno=72, col_offset=12), Assign([Name('b', Store(), lineno=73, col_offset=12)], Call(Attribute(Name('binascii', Load(), lineno=73, col_offset=16), 'a2b_base64', Load(), lineno=73, col_offset=16), [Name('a', Load(), lineno=73, col_offset=36)], [], None, None, lineno=73, col_offset=16), lineno=73, col_offset=12), Assign([Name('res', Store(), lineno=74, col_offset=12)], BinOp(Name('res', Load(), lineno=74, col_offset=18), Add(), Name('b', Load(), lineno=74, col_offset=24), lineno=74, col_offset=18), lineno=74, col_offset=12)], [], lineno=71, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=75, col_offset=8), 'assertEqual', Load(), lineno=75, col_offset=8), [Name('res', Load(), lineno=75, col_offset=25), Attribute(Name('self', Load(), lineno=75, col_offset=30), 'rawdata', Load(), lineno=75, col_offset=30)], [], None, None, lineno=75, col_offset=8), lineno=75, col_offset=8)], [], lineno=62, col_offset=4), FunctionDef('test_base64invalid', arguments([Name('self', Param(), lineno=77, col_offset=27)], None, None, []), [Assign([Name('MAX_BASE64', Store(), lineno=80, col_offset=8)], Num(57, lineno=80, col_offset=21), lineno=80, col_offset=8), Assign([Name('lines', Store(), lineno=81, col_offset=8)], List([], Load(), lineno=81, col_offset=16), lineno=81, col_offset=8), For(Name('i', Store(), lineno=82, col_offset=12), Call(Name('range', Load(), lineno=82, col_offset=17), [Num(0, lineno=82, col_offset=23), Call(Name('len', Load(), lineno=82, col_offset=26), [Attribute(Name('self', Load(), lineno=82, col_offset=30), 'data', Load(), lineno=82, col_offset=30)], [], None, None, lineno=82, col_offset=26), Name('MAX_BASE64', Load(), lineno=82, col_offset=42)], [], None, None, lineno=82, col_offset=17), [Assign([Name('b', Store(), lineno=83, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=83, col_offset=16), 'type2test', Load(), lineno=83, col_offset=16), [Subscript(Attribute(Name('self', Load(), lineno=83, col_offset=31), 'rawdata', Load(), lineno=83, col_offset=31), Slice(Name('i', Load(), lineno=83, col_offset=44), BinOp(Name('i', Load(), lineno=83, col_offset=46), Add(), Name('MAX_BASE64', Load(), lineno=83, col_offset=48), lineno=83, col_offset=46), None), Load(), lineno=83, col_offset=31)], [], None, None, lineno=83, col_offset=16), lineno=83, col_offset=12), Assign([Name('a', Store(), lineno=84, col_offset=12)], Call(Attribute(Name('binascii', Load(), lineno=84, col_offset=16), 'b2a_base64', Load(), lineno=84, col_offset=16), [Name('b', Load(), lineno=84, col_offset=36)], [], None, None, lineno=84, col_offset=16), lineno=84, col_offset=12), Expr(Call(Attribute(Name('lines', Load(), lineno=85, col_offset=12), 'append', Load(), lineno=85, col_offset=12), [Name('a', Load(), lineno=85, col_offset=25)], [], None, None, lineno=85, col_offset=12), lineno=85, col_offset=12)], [], lineno=82, col_offset=8), Assign([Name('fillers', Store(), lineno=87, col_offset=8)], Str('', lineno=87, col_offset=18), lineno=87, col_offset=8), Assign([Name('valid', Store(), lineno=88, col_offset=8)], Str('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+/', lineno=88, col_offset=16), lineno=88, col_offset=8), For(Name('i', Store(), lineno=89, col_offset=12), Call(Name('xrange', Load(), lineno=89, col_offset=17), [Num(256, lineno=89, col_offset=24)], [], None, None, lineno=89, col_offset=17), [Assign([Name('c', Store(), lineno=90, col_offset=12)], Call(Name('chr', Load(), lineno=90, col_offset=16), [Name('i', Load(), lineno=90, col_offset=20)], [], None, None, lineno=90, col_offset=16), lineno=90, col_offset=12), If(Compare(Name('c', Load(), lineno=91, col_offset=15), [NotIn()], [Name('valid', Load(), lineno=91, col_offset=24)], lineno=91, col_offset=15), [AugAssign(Name('fillers', Store(), lineno=92, col_offset=16), Add(), Name('c', Load(), lineno=92, col_offset=27), lineno=92, col_offset=16)], [], lineno=91, col_offset=12)], [], lineno=89, col_offset=8), FunctionDef('addnoise', arguments([Name('line', Param(), lineno=93, col_offset=21)], None, None, []), [Assign([Name('noise', Store(), lineno=94, col_offset=12)], Name('fillers', Load(), lineno=94, col_offset=20), lineno=94, col_offset=12), Assign([Name('ratio', Store(), lineno=95, col_offset=12)], BinOp(Call(Name('len', Load(), lineno=95, col_offset=20), [Name('line', Load(), lineno=95, col_offset=24)], [], None, None, lineno=95, col_offset=20), FloorDiv(), Call(Name('len', Load(), lineno=95, col_offset=33), [Name('noise', Load(), lineno=95, col_offset=37)], [], None, None, lineno=95, col_offset=33), lineno=95, col_offset=20), lineno=95, col_offset=12), Assign([Name('res', Store(), lineno=96, col_offset=12)], Str('', lineno=96, col_offset=18), lineno=96, col_offset=12), While(BoolOp(And(), [Name('line', Load(), lineno=97, col_offset=18), Name('noise', Load(), lineno=97, col_offset=27)], lineno=97, col_offset=18), [If(Compare(BinOp(Call(Name('len', Load(), lineno=98, col_offset=19), [Name('line', Load(), lineno=98, col_offset=23)], [], None, None, lineno=98, col_offset=19), FloorDiv(), Call(Name('len', Load(), lineno=98, col_offset=32), [Name('noise', Load(), lineno=98, col_offset=36)], [], None, None, lineno=98, col_offset=32), lineno=98, col_offset=19), [Gt()], [Name('ratio', Load(), lineno=98, col_offset=45)], lineno=98, col_offset=19), [Assign([Tuple([Name('c', Store(), lineno=99, col_offset=20), Name('line', Store(), lineno=99, col_offset=23)], Store(), lineno=99, col_offset=20)], Tuple([Subscript(Name('line', Load(), lineno=99, col_offset=30), Index(Num(0, lineno=99, col_offset=35)), Load(), lineno=99, col_offset=30), Subscript(Name('line', Load(), lineno=99, col_offset=39), Slice(Num(1, lineno=99, col_offset=44), None, None), Load(), lineno=99, col_offset=39)], Load(), lineno=99, col_offset=30), lineno=99, col_offset=20)], [Assign([Tuple([Name('c', Store(), lineno=101, col_offset=20), Name('noise', Store(), lineno=101, col_offset=23)], Store(), lineno=101, col_offset=20)], Tuple([Subscript(Name('noise', Load(), lineno=101, col_offset=31), Index(Num(0, lineno=101, col_offset=37)), Load(), lineno=101, col_offset=31), Subscript(Name('noise', Load(), lineno=101, col_offset=41), Slice(Num(1, lineno=101, col_offset=47), None, None), Load(), lineno=101, col_offset=41)], Load(), lineno=101, col_offset=31), lineno=101, col_offset=20)], lineno=98, col_offset=16), AugAssign(Name('res', Store(), lineno=102, col_offset=16), Add(), Name('c', Load(), lineno=102, col_offset=23), lineno=102, col_offset=16)], [], lineno=97, col_offset=12), Return(BinOp(BinOp(Name('res', Load(), lineno=103, col_offset=19), Add(), Name('noise', Load(), lineno=103, col_offset=25), lineno=103, col_offset=19), Add(), Name('line', Load(), lineno=103, col_offset=33), lineno=103, col_offset=31), lineno=103, col_offset=12)], [], lineno=93, col_offset=8), Assign([Name('res', Store(), lineno=104, col_offset=8)], Str('', lineno=104, col_offset=14), lineno=104, col_offset=8), For(Name('line', Store(), lineno=105, col_offset=12), Call(Name('map', Load(), lineno=105, col_offset=20), [Name('addnoise', Load(), lineno=105, col_offset=24), Name('lines', Load(), lineno=105, col_offset=34)], [], None, None, lineno=105, col_offset=20), [Assign([Name('a', Store(), lineno=106, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=106, col_offset=16), 'type2test', Load(), lineno=106, col_offset=16), [Name('line', Load(), lineno=106, col_offset=31)], [], None, None, lineno=106, col_offset=16), lineno=106, col_offset=12), Assign([Name('b', Store(), lineno=107, col_offset=12)], Call(Attribute(Name('binascii', Load(), lineno=107, col_offset=16), 'a2b_base64', Load(), lineno=107, col_offset=16), [Name('a', Load(), lineno=107, col_offset=36)], [], None, None, lineno=107, col_offset=16), lineno=107, col_offset=12), AugAssign(Name('res', Store(), lineno=108, col_offset=12), Add(), Name('b', Load(), lineno=108, col_offset=19), lineno=108, col_offset=12)], [], lineno=105, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=109, col_offset=8), 'assertEqual', Load(), lineno=109, col_offset=8), [Name('res', Load(), lineno=109, col_offset=25), Attribute(Name('self', Load(), lineno=109, col_offset=30), 'rawdata', Load(), lineno=109, col_offset=30)], [], None, None, lineno=109, col_offset=8), lineno=109, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=113, col_offset=8), 'assertEqual', Load(), lineno=113, col_offset=8), [Call(Attribute(Name('binascii', Load(), lineno=113, col_offset=25), 'a2b_base64', Load(), lineno=113, col_offset=25), [Call(Attribute(Name('self', Load(), lineno=113, col_offset=45), 'type2test', Load(), lineno=113, col_offset=45), [Name('fillers', Load(), lineno=113, col_offset=60)], [], None, None, lineno=113, col_offset=45)], [], None, None, lineno=113, col_offset=25), Str('', lineno=113, col_offset=71)], [], None, None, lineno=113, col_offset=8), lineno=113, col_offset=8)], [], lineno=77, col_offset=4), FunctionDef('test_uu', arguments([Name('self', Param(), lineno=115, col_offset=16)], None, None, []), [Assign([Name('MAX_UU', Store(), lineno=116, col_offset=8)], Num(45, lineno=116, col_offset=17), lineno=116, col_offset=8), Assign([Name('lines', Store(), lineno=117, col_offset=8)], List([], Load(), lineno=117, col_offset=16), lineno=117, col_offset=8), For(Name('i', Store(), lineno=118, col_offset=12), Call(Name('range', Load(), lineno=118, col_offset=17), [Num(0, lineno=118, col_offset=23), Call(Name('len', Load(), lineno=118, col_offset=26), [Attribute(Name('self', Load(), lineno=118, col_offset=30), 'data', Load(), lineno=118, col_offset=30)], [], None, None, lineno=118, col_offset=26), Name('MAX_UU', Load(), lineno=118, col_offset=42)], [], None, None, lineno=118, col_offset=17), [Assign([Name('b', Store(), lineno=119, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=119, col_offset=16), 'type2test', Load(), lineno=119, col_offset=16), [Subscript(Attribute(Name('self', Load(), lineno=119, col_offset=31), 'rawdata', Load(), lineno=119, col_offset=31), Slice(Name('i', Load(), lineno=119, col_offset=44), BinOp(Name('i', Load(), lineno=119, col_offset=46), Add(), Name('MAX_UU', Load(), lineno=119, col_offset=48), lineno=119, col_offset=46), None), Load(), lineno=119, col_offset=31)], [], None, None, lineno=119, col_offset=16), lineno=119, col_offset=12), Assign([Name('a', Store(), lineno=120, col_offset=12)], Call(Attribute(Name('binascii', Load(), lineno=120, col_offset=16), 'b2a_uu', Load(), lineno=120, col_offset=16), [Name('b', Load(), lineno=120, col_offset=32)], [], None, None, lineno=120, col_offset=16), lineno=120, col_offset=12), Expr(Call(Attribute(Name('lines', Load(), lineno=121, col_offset=12), 'append', Load(), lineno=121, col_offset=12), [Name('a', Load(), lineno=121, col_offset=25)], [], None, None, lineno=121, col_offset=12), lineno=121, col_offset=12)], [], lineno=118, col_offset=8), Assign([Name('res', Store(), lineno=122, col_offset=8)], Str('', lineno=122, col_offset=14), lineno=122, col_offset=8), For(Name('line', Store(), lineno=123, col_offset=12), Name('lines', Load(), lineno=123, col_offset=20), [Assign([Name('a', Store(), lineno=124, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=124, col_offset=16), 'type2test', Load(), lineno=124, col_offset=16), [Name('line', Load(), lineno=124, col_offset=31)], [], None, None, lineno=124, col_offset=16), lineno=124, col_offset=12), Assign([Name('b', Store(), lineno=125, col_offset=12)], Call(Attribute(Name('binascii', Load(), lineno=125, col_offset=16), 'a2b_uu', Load(), lineno=125, col_offset=16), [Name('a', Load(), lineno=125, col_offset=32)], [], None, None, lineno=125, col_offset=16), lineno=125, col_offset=12), AugAssign(Name('res', Store(), lineno=126, col_offset=12), Add(), Name('b', Load(), lineno=126, col_offset=19), lineno=126, col_offset=12)], [], lineno=123, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=127, col_offset=8), 'assertEqual', Load(), lineno=127, col_offset=8), [Name('res', Load(), lineno=127, col_offset=25), Attribute(Name('self', Load(), lineno=127, col_offset=30), 'rawdata', Load(), lineno=127, col_offset=30)], [], None, None, lineno=127, col_offset=8), lineno=127, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=129, col_offset=8), 'assertEqual', Load(), lineno=129, col_offset=8), [Call(Attribute(Name('binascii', Load(), lineno=129, col_offset=25), 'a2b_uu', Load(), lineno=129, col_offset=25), [Str('\x7f', lineno=129, col_offset=41)], [], None, None, lineno=129, col_offset=25), BinOp(Str('\x00', lineno=129, col_offset=50), Mult(), Num(31, lineno=129, col_offset=57), lineno=129, col_offset=50)], [], None, None, lineno=129, col_offset=8), lineno=129, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=130, col_offset=8), 'assertEqual', Load(), lineno=130, col_offset=8), [Call(Attribute(Name('binascii', Load(), lineno=130, col_offset=25), 'a2b_uu', Load(), lineno=130, col_offset=25), [Str('\x80', lineno=130, col_offset=41)], [], None, None, lineno=130, col_offset=25), BinOp(Str('\x00', lineno=130, col_offset=50), Mult(), Num(32, lineno=130, col_offset=57), lineno=130, col_offset=50)], [], None, None, lineno=130, col_offset=8), lineno=130, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=131, col_offset=8), 'assertEqual', Load(), lineno=131, col_offset=8), [Call(Attribute(Name('binascii', Load(), lineno=131, col_offset=25), 'a2b_uu', Load(), lineno=131, col_offset=25), [Str('\xff', lineno=131, col_offset=41)], [], None, None, lineno=131, col_offset=25), BinOp(Str('\x00', lineno=131, col_offset=50), Mult(), Num(31, lineno=131, col_offset=57), lineno=131, col_offset=50)], [], None, None, lineno=131, col_offset=8), lineno=131, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=132, col_offset=8), 'assertRaises', Load(), lineno=132, col_offset=8), [Attribute(Name('binascii', Load(), lineno=132, col_offset=26), 'Error', Load(), lineno=132, col_offset=26), Attribute(Name('binascii', Load(), lineno=132, col_offset=42), 'a2b_uu', Load(), lineno=132, col_offset=42), Str('\xff\x00', lineno=132, col_offset=59)], [], None, None, lineno=132, col_offset=8), lineno=132, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=133, col_offset=8), 'assertRaises', Load(), lineno=133, col_offset=8), [Attribute(Name('binascii', Load(), lineno=133, col_offset=26), 'Error', Load(), lineno=133, col_offset=26), Attribute(Name('binascii', Load(), lineno=133, col_offset=42), 'a2b_uu', Load(), lineno=133, col_offset=42), Str('!!!!', lineno=133, col_offset=59)], [], None, None, lineno=133, col_offset=8), lineno=133, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=135, col_offset=8), 'assertRaises', Load(), lineno=135, col_offset=8), [Attribute(Name('binascii', Load(), lineno=135, col_offset=26), 'Error', Load(), lineno=135, col_offset=26), Attribute(Name('binascii', Load(), lineno=135, col_offset=42), 'b2a_uu', Load(), lineno=135, col_offset=42), BinOp(Num(46, lineno=135, col_offset=59), Mult(), Str('!', lineno=135, col_offset=62), lineno=135, col_offset=59)], [], None, None, lineno=135, col_offset=8), lineno=135, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=138, col_offset=8), 'assertEqual', Load(), lineno=138, col_offset=8), [Call(Attribute(Name('binascii', Load(), lineno=138, col_offset=25), 'b2a_uu', Load(), lineno=138, col_offset=25), [Str('x', lineno=138, col_offset=41)], [], None, None, lineno=138, col_offset=25), Str('!>   \n', lineno=138, col_offset=47)], [], None, None, lineno=138, col_offset=8), lineno=138, col_offset=8)], [], lineno=115, col_offset=4), FunctionDef('test_crc32', arguments([Name('self', Param(), lineno=140, col_offset=19)], None, None, []), [Assign([Name('crc', Store(), lineno=141, col_offset=8)], Call(Attribute(Name('binascii', Load(), lineno=141, col_offset=14), 'crc32', Load(), lineno=141, col_offset=14), [Call(Attribute(Name('self', Load(), lineno=141, col_offset=29), 'type2test', Load(), lineno=141, col_offset=29), [Str('Test the CRC-32 of', lineno=141, col_offset=44)], [], None, None, lineno=141, col_offset=29)], [], None, None, lineno=141, col_offset=14), lineno=141, col_offset=8), Assign([Name('crc', Store(), lineno=142, col_offset=8)], Call(Attribute(Name('binascii', Load(), lineno=142, col_offset=14), 'crc32', Load(), lineno=142, col_offset=14), [Call(Attribute(Name('self', Load(), lineno=142, col_offset=29), 'type2test', Load(), lineno=142, col_offset=29), [Str(' this string.', lineno=142, col_offset=44)], [], None, None, lineno=142, col_offset=29), Name('crc', Load(), lineno=142, col_offset=62)], [], None, None, lineno=142, col_offset=14), lineno=142, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=143, col_offset=8), 'assertEqual', Load(), lineno=143, col_offset=8), [Name('crc', Load(), lineno=143, col_offset=25), Num(1571220330, lineno=143, col_offset=30)], [], None, None, lineno=143, col_offset=8), lineno=143, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=145, col_offset=8), 'assertRaises', Load(), lineno=145, col_offset=8), [Name('TypeError', Load(), lineno=145, col_offset=26), Attribute(Name('binascii', Load(), lineno=145, col_offset=37), 'crc32', Load(), lineno=145, col_offset=37)], [], None, None, lineno=145, col_offset=8), lineno=145, col_offset=8)], [], lineno=140, col_offset=4), FunctionDef('test_hqx', arguments([Name('self', Param(), lineno=147, col_offset=17)], None, None, []), [Assign([Name('rle', Store(), lineno=150, col_offset=8)], Call(Attribute(Name('binascii', Load(), lineno=150, col_offset=14), 'rlecode_hqx', Load(), lineno=150, col_offset=14), [Attribute(Name('self', Load(), lineno=150, col_offset=35), 'data', Load(), lineno=150, col_offset=35)], [], None, None, lineno=150, col_offset=14), lineno=150, col_offset=8), Assign([Name('a', Store(), lineno=151, col_offset=8)], Call(Attribute(Name('binascii', Load(), lineno=151, col_offset=12), 'b2a_hqx', Load(), lineno=151, col_offset=12), [Call(Attribute(Name('self', Load(), lineno=151, col_offset=29), 'type2test', Load(), lineno=151, col_offset=29), [Name('rle', Load(), lineno=151, col_offset=44)], [], None, None, lineno=151, col_offset=29)], [], None, None, lineno=151, col_offset=12), lineno=151, col_offset=8), Assign([Tuple([Name('b', Store(), lineno=152, col_offset=8), Name('_', Store(), lineno=152, col_offset=11)], Store(), lineno=152, col_offset=8)], Call(Attribute(Name('binascii', Load(), lineno=152, col_offset=15), 'a2b_hqx', Load(), lineno=152, col_offset=15), [Call(Attribute(Name('self', Load(), lineno=152, col_offset=32), 'type2test', Load(), lineno=152, col_offset=32), [Name('a', Load(), lineno=152, col_offset=47)], [], None, None, lineno=152, col_offset=32)], [], None, None, lineno=152, col_offset=15), lineno=152, col_offset=8), Assign([Name('res', Store(), lineno=153, col_offset=8)], Call(Attribute(Name('binascii', Load(), lineno=153, col_offset=14), 'rledecode_hqx', Load(), lineno=153, col_offset=14), [Name('b', Load(), lineno=153, col_offset=37)], [], None, None, lineno=153, col_offset=14), lineno=153, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=155, col_offset=8), 'assertEqual', Load(), lineno=155, col_offset=8), [Name('res', Load(), lineno=155, col_offset=25), Attribute(Name('self', Load(), lineno=155, col_offset=30), 'rawdata', Load(), lineno=155, col_offset=30)], [], None, None, lineno=155, col_offset=8), lineno=155, col_offset=8)], [], lineno=147, col_offset=4), FunctionDef('test_hex', arguments([Name('self', Param(), lineno=157, col_offset=17)], None, None, []), [Assign([Name('s', Store(), lineno=159, col_offset=8)], Str('{s\x05\x00\x00\x00worldi\x02\x00\x00\x00s\x05\x00\x00\x00helloi\x01\x00\x00\x000', lineno=159, col_offset=12), lineno=159, col_offset=8), Assign([Name('t', Store(), lineno=160, col_offset=8)], Call(Attribute(Name('binascii', Load(), lineno=160, col_offset=12), 'b2a_hex', Load(), lineno=160, col_offset=12), [Call(Attribute(Name('self', Load(), lineno=160, col_offset=29), 'type2test', Load(), lineno=160, col_offset=29), [Name('s', Load(), lineno=160, col_offset=44)], [], None, None, lineno=160, col_offset=29)], [], None, None, lineno=160, col_offset=12), lineno=160, col_offset=8), Assign([Name('u', Store(), lineno=161, col_offset=8)], Call(Attribute(Name('binascii', Load(), lineno=161, col_offset=12), 'a2b_hex', Load(), lineno=161, col_offset=12), [Call(Attribute(Name('self', Load(), lineno=161, col_offset=29), 'type2test', Load(), lineno=161, col_offset=29), [Name('t', Load(), lineno=161, col_offset=44)], [], None, None, lineno=161, col_offset=29)], [], None, None, lineno=161, col_offset=12), lineno=161, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=162, col_offset=8), 'assertEqual', Load(), lineno=162, col_offset=8), [Name('s', Load(), lineno=162, col_offset=25), Name('u', Load(), lineno=162, col_offset=28)], [], None, None, lineno=162, col_offset=8), lineno=162, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=163, col_offset=8), 'assertRaises', Load(), lineno=163, col_offset=8), [Name('TypeError', Load(), lineno=163, col_offset=26), Attribute(Name('binascii', Load(), lineno=163, col_offset=37), 'a2b_hex', Load(), lineno=163, col_offset=37), Subscript(Name('t', Load(), lineno=163, col_offset=55), Slice(None, Num(-1, lineno=163, col_offset=59), None), Load(), lineno=163, col_offset=55)], [], None, None, lineno=163, col_offset=8), lineno=163, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=164, col_offset=8), 'assertRaises', Load(), lineno=164, col_offset=8), [Name('TypeError', Load(), lineno=164, col_offset=26), Attribute(Name('binascii', Load(), lineno=164, col_offset=37), 'a2b_hex', Load(), lineno=164, col_offset=37), BinOp(Subscript(Name('t', Load(), lineno=164, col_offset=55), Slice(None, Num(-1, lineno=164, col_offset=59), None), Load(), lineno=164, col_offset=55), Add(), Str('q', lineno=164, col_offset=64), lineno=164, col_offset=55)], [], None, None, lineno=164, col_offset=8), lineno=164, col_offset=8), If(Attribute(Name('test_support', Load(), lineno=167, col_offset=11), 'have_unicode', Load(), lineno=167, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=168, col_offset=12), 'assertEqual', Load(), lineno=168, col_offset=12), [Call(Attribute(Name('binascii', Load(), lineno=168, col_offset=29), 'hexlify', Load(), lineno=168, col_offset=29), [Call(Name('unicode', Load(), lineno=168, col_offset=46), [Str('a', lineno=168, col_offset=54), Str('ascii', lineno=168, col_offset=59)], [], None, None, lineno=168, col_offset=46)], [], None, None, lineno=168, col_offset=29), Str('61', lineno=168, col_offset=70)], [], None, None, lineno=168, col_offset=12), lineno=168, col_offset=12)], [], lineno=167, col_offset=8)], [], lineno=157, col_offset=4), FunctionDef('test_qp', arguments([Name('self', Param(), lineno=170, col_offset=16)], None, None, []), [TryExcept([Expr(Call(Attribute(Name('binascii', Load(), lineno=173, col_offset=12), 'a2b_qp', Load(), lineno=173, col_offset=12), [Str('', lineno=173, col_offset=28)], [], None, Dict([Num(1, lineno=173, col_offset=35)], [Num(1, lineno=173, col_offset=37)], lineno=173, col_offset=34), lineno=173, col_offset=12), lineno=173, col_offset=12)], [ExceptHandler(Name('TypeError', Load(), lineno=174, col_offset=15), None, [Pass( lineno=175, col_offset=12)], lineno=174, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=177, col_offset=12), 'fail', Load(), lineno=177, col_offset=12), [Str("binascii.a2b_qp(**{1:1}) didn't raise TypeError", lineno=177, col_offset=22)], [], None, None, lineno=177, col_offset=12), lineno=177, col_offset=12)], lineno=172, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=178, col_offset=8), 'assertEqual', Load(), lineno=178, col_offset=8), [Call(Attribute(Name('binascii', Load(), lineno=178, col_offset=25), 'a2b_qp', Load(), lineno=178, col_offset=25), [Str('= ', lineno=178, col_offset=41)], [], None, None, lineno=178, col_offset=25), Str('= ', lineno=178, col_offset=48)], [], None, None, lineno=178, col_offset=8), lineno=178, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=179, col_offset=8), 'assertEqual', Load(), lineno=179, col_offset=8), [Call(Attribute(Name('binascii', Load(), lineno=179, col_offset=25), 'a2b_qp', Load(), lineno=179, col_offset=25), [Str('==', lineno=179, col_offset=41)], [], None, None, lineno=179, col_offset=25), Str('=', lineno=179, col_offset=48)], [], None, None, lineno=179, col_offset=8), lineno=179, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=180, col_offset=8), 'assertEqual', Load(), lineno=180, col_offset=8), [Call(Attribute(Name('binascii', Load(), lineno=180, col_offset=25), 'a2b_qp', Load(), lineno=180, col_offset=25), [Str('=AX', lineno=180, col_offset=41)], [], None, None, lineno=180, col_offset=25), Str('=AX', lineno=180, col_offset=49)], [], None, None, lineno=180, col_offset=8), lineno=180, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=181, col_offset=8), 'assertRaises', Load(), lineno=181, col_offset=8), [Name('TypeError', Load(), lineno=181, col_offset=26), Attribute(Name('binascii', Load(), lineno=181, col_offset=37), 'b2a_qp', Load(), lineno=181, col_offset=37)], [keyword('foo', Str('bar', lineno=181, col_offset=58))], None, None, lineno=181, col_offset=8), lineno=181, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=182, col_offset=8), 'assertEqual', Load(), lineno=182, col_offset=8), [Call(Attribute(Name('binascii', Load(), lineno=182, col_offset=25), 'a2b_qp', Load(), lineno=182, col_offset=25), [Str('=00\r\n=00', lineno=182, col_offset=41)], [], None, None, lineno=182, col_offset=25), Str('\x00\r\n\x00', lineno=182, col_offset=56)], [], None, None, lineno=182, col_offset=8), lineno=182, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=183, col_offset=8), 'assertEqual', Load(), lineno=183, col_offset=8), [Call(Attribute(Name('binascii', Load(), lineno=184, col_offset=12), 'b2a_qp', Load(), lineno=184, col_offset=12), [Str('\xff\r\n\xff\n\xff', lineno=184, col_offset=28)], [], None, None, lineno=184, col_offset=12), Str('=FF\r\n=FF\r\n=FF', lineno=185, col_offset=12)], [], None, None, lineno=183, col_offset=8), lineno=183, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=187, col_offset=8), 'assertEqual', Load(), lineno=187, col_offset=8), [Call(Attribute(Name('binascii', Load(), lineno=188, col_offset=12), 'b2a_qp', Load(), lineno=188, col_offset=12), [BinOp(BinOp(Str('0', lineno=188, col_offset=28), Mult(), Num(75, lineno=188, col_offset=32), lineno=188, col_offset=28), Add(), Str('\xff\r\n\xff\r\n\xff', lineno=188, col_offset=35), lineno=188, col_offset=28)], [], None, None, lineno=188, col_offset=12), BinOp(BinOp(Str('0', lineno=189, col_offset=12), Mult(), Num(75, lineno=189, col_offset=16), lineno=189, col_offset=12), Add(), Str('=\r\n=FF\r\n=FF\r\n=FF', lineno=189, col_offset=19), lineno=189, col_offset=12)], [], None, None, lineno=187, col_offset=8), lineno=187, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=192, col_offset=8), 'assertEqual', Load(), lineno=192, col_offset=8), [Call(Attribute(Name('binascii', Load(), lineno=192, col_offset=25), 'b2a_qp', Load(), lineno=192, col_offset=25), [Str('\x00\n', lineno=192, col_offset=41)], [], None, None, lineno=192, col_offset=25), Str('=00\n', lineno=192, col_offset=50)], [], None, None, lineno=192, col_offset=8), lineno=192, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=193, col_offset=8), 'assertEqual', Load(), lineno=193, col_offset=8), [Call(Attribute(Name('binascii', Load(), lineno=193, col_offset=25), 'b2a_qp', Load(), lineno=193, col_offset=25), [Str('\x00\n', lineno=193, col_offset=41)], [keyword('quotetabs', Name('True', Load(), lineno=193, col_offset=59))], None, None, lineno=193, col_offset=25), Str('=00\n', lineno=193, col_offset=66)], [], None, None, lineno=193, col_offset=8), lineno=193, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=194, col_offset=8), 'assertEqual', Load(), lineno=194, col_offset=8), [Call(Attribute(Name('binascii', Load(), lineno=194, col_offset=25), 'b2a_qp', Load(), lineno=194, col_offset=25), [Str('foo\tbar\t\n', lineno=194, col_offset=41)], [], None, None, lineno=194, col_offset=25), Str('foo\tbar=09\n', lineno=194, col_offset=58)], [], None, None, lineno=194, col_offset=8), lineno=194, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=195, col_offset=8), 'assertEqual', Load(), lineno=195, col_offset=8), [Call(Attribute(Name('binascii', Load(), lineno=195, col_offset=25), 'b2a_qp', Load(), lineno=195, col_offset=25), [Str('foo\tbar\t\n', lineno=195, col_offset=41)], [keyword('quotetabs', Name('True', Load(), lineno=195, col_offset=67))], None, None, lineno=195, col_offset=25), Str('foo=09bar=09\n', lineno=195, col_offset=74)], [], None, None, lineno=195, col_offset=8), lineno=195, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=197, col_offset=8), 'assertEqual', Load(), lineno=197, col_offset=8), [Call(Attribute(Name('binascii', Load(), lineno=197, col_offset=25), 'b2a_qp', Load(), lineno=197, col_offset=25), [Str('.', lineno=197, col_offset=41)], [], None, None, lineno=197, col_offset=25), Str('=2E', lineno=197, col_offset=47)], [], None, None, lineno=197, col_offset=8), lineno=197, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=198, col_offset=8), 'assertEqual', Load(), lineno=198, col_offset=8), [Call(Attribute(Name('binascii', Load(), lineno=198, col_offset=25), 'b2a_qp', Load(), lineno=198, col_offset=25), [Str('.\n', lineno=198, col_offset=41)], [], None, None, lineno=198, col_offset=25), Str('=2E\n', lineno=198, col_offset=49)], [], None, None, lineno=198, col_offset=8), lineno=198, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=199, col_offset=8), 'assertEqual', Load(), lineno=199, col_offset=8), [Call(Attribute(Name('binascii', Load(), lineno=199, col_offset=25), 'b2a_qp', Load(), lineno=199, col_offset=25), [Str('a.\n', lineno=199, col_offset=41)], [], None, None, lineno=199, col_offset=25), Str('a.\n', lineno=199, col_offset=50)], [], None, None, lineno=199, col_offset=8), lineno=199, col_offset=8)], [], lineno=170, col_offset=4), FunctionDef('test_empty_string', arguments([Name('self', Param(), lineno=201, col_offset=26)], None, None, []), [Assign([Name('empty', Store(), lineno=203, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=203, col_offset=16), 'type2test', Load(), lineno=203, col_offset=16), [Str('', lineno=203, col_offset=31)], [], None, None, lineno=203, col_offset=16), lineno=203, col_offset=8), For(Name('func', Store(), lineno=204, col_offset=12), Name('all_functions', Load(), lineno=204, col_offset=20), [If(Compare(Name('func', Load(), lineno=205, col_offset=15), [Eq()], [Str('crc_hqx', lineno=205, col_offset=23)], lineno=205, col_offset=15), [Expr(Call(Attribute(Name('binascii', Load(), lineno=207, col_offset=16), 'crc_hqx', Load(), lineno=207, col_offset=16), [Name('empty', Load(), lineno=207, col_offset=33), Num(0, lineno=207, col_offset=40)], [], None, None, lineno=207, col_offset=16), lineno=207, col_offset=16), Continue( lineno=208, col_offset=16)], [], lineno=205, col_offset=12), Assign([Name('f', Store(), lineno=209, col_offset=12)], Call(Name('getattr', Load(), lineno=209, col_offset=16), [Name('binascii', Load(), lineno=209, col_offset=24), Name('func', Load(), lineno=209, col_offset=34)], [], None, None, lineno=209, col_offset=16), lineno=209, col_offset=12), TryExcept([Expr(Call(Name('f', Load(), lineno=211, col_offset=16), [Name('empty', Load(), lineno=211, col_offset=18)], [], None, None, lineno=211, col_offset=16), lineno=211, col_offset=16)], [ExceptHandler(Name('Exception', Load(), lineno=212, col_offset=19), Name('err', Store(), lineno=212, col_offset=30), [Expr(Call(Attribute(Name('self', Load(), lineno=213, col_offset=16), 'fail', Load(), lineno=213, col_offset=16), [Call(Attribute(Str('{}({!r}) raises {!r}', lineno=213, col_offset=26), 'format', Load(), lineno=213, col_offset=26), [Name('func', Load(), lineno=213, col_offset=56), Name('empty', Load(), lineno=213, col_offset=62), Name('err', Load(), lineno=213, col_offset=69)], [], None, None, lineno=213, col_offset=26)], [], None, None, lineno=213, col_offset=16), lineno=213, col_offset=16)], lineno=212, col_offset=12)], [], lineno=210, col_offset=12)], [], lineno=204, col_offset=8)], [], lineno=201, col_offset=4)], [], lineno=16, col_offset=0), ClassDef('ArrayBinASCIITest', [Name('BinASCIITest', Load(), lineno=216, col_offset=24)], [FunctionDef('type2test', arguments([Name('self', Param(), lineno=217, col_offset=18), Name('s', Param(), lineno=217, col_offset=24)], None, None, []), [Return(Call(Attribute(Name('array', Load(), lineno=218, col_offset=15), 'array', Load(), lineno=218, col_offset=15), [Str('c', lineno=218, col_offset=27), Name('s', Load(), lineno=218, col_offset=32)], [], None, None, lineno=218, col_offset=15), lineno=218, col_offset=8)], [], lineno=217, col_offset=4)], [], lineno=216, col_offset=0), ClassDef('BytearrayBinASCIITest', [Name('BinASCIITest', Load(), lineno=221, col_offset=28)], [Assign([Name('type2test', Store(), lineno=222, col_offset=4)], Name('bytearray', Load(), lineno=222, col_offset=16), lineno=222, col_offset=4)], [], lineno=221, col_offset=0), ClassDef('MemoryviewBinASCIITest', [Name('BinASCIITest', Load(), lineno=225, col_offset=29)], [Assign([Name('type2test', Store(), lineno=226, col_offset=4)], Name('memoryview', Load(), lineno=226, col_offset=16), lineno=226, col_offset=4)], [], lineno=225, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=230, col_offset=4), 'run_unittest', Load(), lineno=230, col_offset=4), [Name('BinASCIITest', Load(), lineno=230, col_offset=30), Name('ArrayBinASCIITest', Load(), lineno=231, col_offset=30), Name('BytearrayBinASCIITest', Load(), lineno=232, col_offset=30), Name('MemoryviewBinASCIITest', Load(), lineno=233, col_offset=30)], [], None, None, lineno=230, col_offset=4), lineno=230, col_offset=4)], [], lineno=229, col_offset=0), If(Compare(Name('__name__', Load(), lineno=235, col_offset=3), [Eq()], [Str('__main__', lineno=235, col_offset=15)], lineno=235, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=236, col_offset=4), [], [], None, None, lineno=236, col_offset=4), lineno=236, col_offset=4)], [], lineno=235, col_offset=0)])
