Module([Expr(Str('Non-terminal symbols of Python grammar (from "graminit.h").', lineno=3, col_offset=0), lineno=3, col_offset=0), Assign([Name('single_input', Store(), lineno=13, col_offset=0)], Num(256, lineno=13, col_offset=15), lineno=13, col_offset=0), Assign([Name('file_input', Store(), lineno=14, col_offset=0)], Num(257, lineno=14, col_offset=13), lineno=14, col_offset=0), Assign([Name('eval_input', Store(), lineno=15, col_offset=0)], Num(258, lineno=15, col_offset=13), lineno=15, col_offset=0), Assign([Name('decorator', Store(), lineno=16, col_offset=0)], Num(259, lineno=16, col_offset=12), lineno=16, col_offset=0), Assign([Name('decorators', Store(), lineno=17, col_offset=0)], Num(260, lineno=17, col_offset=13), lineno=17, col_offset=0), Assign([Name('decorated', Store(), lineno=18, col_offset=0)], Num(261, lineno=18, col_offset=12), lineno=18, col_offset=0), Assign([Name('funcdef', Store(), lineno=19, col_offset=0)], Num(262, lineno=19, col_offset=10), lineno=19, col_offset=0), Assign([Name('parameters', Store(), lineno=20, col_offset=0)], Num(263, lineno=20, col_offset=13), lineno=20, col_offset=0), Assign([Name('varargslist', Store(), lineno=21, col_offset=0)], Num(264, lineno=21, col_offset=14), lineno=21, col_offset=0), Assign([Name('fpdef', Store(), lineno=22, col_offset=0)], Num(265, lineno=22, col_offset=8), lineno=22, col_offset=0), Assign([Name('fplist', Store(), lineno=23, col_offset=0)], Num(266, lineno=23, col_offset=9), lineno=23, col_offset=0), Assign([Name('stmt', Store(), lineno=24, col_offset=0)], Num(267, lineno=24, col_offset=7), lineno=24, col_offset=0), Assign([Name('simple_stmt', Store(), lineno=25, col_offset=0)], Num(268, lineno=25, col_offset=14), lineno=25, col_offset=0), Assign([Name('small_stmt', Store(), lineno=26, col_offset=0)], Num(269, lineno=26, col_offset=13), lineno=26, col_offset=0), Assign([Name('expr_stmt', Store(), lineno=27, col_offset=0)], Num(270, lineno=27, col_offset=12), lineno=27, col_offset=0), Assign([Name('augassign', Store(), lineno=28, col_offset=0)], Num(271, lineno=28, col_offset=12), lineno=28, col_offset=0), Assign([Name('print_stmt', Store(), lineno=29, col_offset=0)], Num(272, lineno=29, col_offset=13), lineno=29, col_offset=0), Assign([Name('del_stmt', Store(), lineno=30, col_offset=0)], Num(273, lineno=30, col_offset=11), lineno=30, col_offset=0), Assign([Name('pass_stmt', Store(), lineno=31, col_offset=0)], Num(274, lineno=31, col_offset=12), lineno=31, col_offset=0), Assign([Name('flow_stmt', Store(), lineno=32, col_offset=0)], Num(275, lineno=32, col_offset=12), lineno=32, col_offset=0), Assign([Name('break_stmt', Store(), lineno=33, col_offset=0)], Num(276, lineno=33, col_offset=13), lineno=33, col_offset=0), Assign([Name('continue_stmt', Store(), lineno=34, col_offset=0)], Num(277, lineno=34, col_offset=16), lineno=34, col_offset=0), Assign([Name('return_stmt', Store(), lineno=35, col_offset=0)], Num(278, lineno=35, col_offset=14), lineno=35, col_offset=0), Assign([Name('yield_stmt', Store(), lineno=36, col_offset=0)], Num(279, lineno=36, col_offset=13), lineno=36, col_offset=0), Assign([Name('raise_stmt', Store(), lineno=37, col_offset=0)], Num(280, lineno=37, col_offset=13), lineno=37, col_offset=0), Assign([Name('import_stmt', Store(), lineno=38, col_offset=0)], Num(281, lineno=38, col_offset=14), lineno=38, col_offset=0), Assign([Name('import_name', Store(), lineno=39, col_offset=0)], Num(282, lineno=39, col_offset=14), lineno=39, col_offset=0), Assign([Name('import_from', Store(), lineno=40, col_offset=0)], Num(283, lineno=40, col_offset=14), lineno=40, col_offset=0), Assign([Name('import_as_name', Store(), lineno=41, col_offset=0)], Num(284, lineno=41, col_offset=17), lineno=41, col_offset=0), Assign([Name('dotted_as_name', Store(), lineno=42, col_offset=0)], Num(285, lineno=42, col_offset=17), lineno=42, col_offset=0), Assign([Name('import_as_names', Store(), lineno=43, col_offset=0)], Num(286, lineno=43, col_offset=18), lineno=43, col_offset=0), Assign([Name('dotted_as_names', Store(), lineno=44, col_offset=0)], Num(287, lineno=44, col_offset=18), lineno=44, col_offset=0), Assign([Name('dotted_name', Store(), lineno=45, col_offset=0)], Num(288, lineno=45, col_offset=14), lineno=45, col_offset=0), Assign([Name('global_stmt', Store(), lineno=46, col_offset=0)], Num(289, lineno=46, col_offset=14), lineno=46, col_offset=0), Assign([Name('exec_stmt', Store(), lineno=47, col_offset=0)], Num(290, lineno=47, col_offset=12), lineno=47, col_offset=0), Assign([Name('assert_stmt', Store(), lineno=48, col_offset=0)], Num(291, lineno=48, col_offset=14), lineno=48, col_offset=0), Assign([Name('compound_stmt', Store(), lineno=49, col_offset=0)], Num(292, lineno=49, col_offset=16), lineno=49, col_offset=0), Assign([Name('if_stmt', Store(), lineno=50, col_offset=0)], Num(293, lineno=50, col_offset=10), lineno=50, col_offset=0), Assign([Name('while_stmt', Store(), lineno=51, col_offset=0)], Num(294, lineno=51, col_offset=13), lineno=51, col_offset=0), Assign([Name('for_stmt', Store(), lineno=52, col_offset=0)], Num(295, lineno=52, col_offset=11), lineno=52, col_offset=0), Assign([Name('try_stmt', Store(), lineno=53, col_offset=0)], Num(296, lineno=53, col_offset=11), lineno=53, col_offset=0), Assign([Name('with_stmt', Store(), lineno=54, col_offset=0)], Num(297, lineno=54, col_offset=12), lineno=54, col_offset=0), Assign([Name('with_item', Store(), lineno=55, col_offset=0)], Num(298, lineno=55, col_offset=12), lineno=55, col_offset=0), Assign([Name('except_clause', Store(), lineno=56, col_offset=0)], Num(299, lineno=56, col_offset=16), lineno=56, col_offset=0), Assign([Name('suite', Store(), lineno=57, col_offset=0)], Num(300, lineno=57, col_offset=8), lineno=57, col_offset=0), Assign([Name('testlist_safe', Store(), lineno=58, col_offset=0)], Num(301, lineno=58, col_offset=16), lineno=58, col_offset=0), Assign([Name('old_test', Store(), lineno=59, col_offset=0)], Num(302, lineno=59, col_offset=11), lineno=59, col_offset=0), Assign([Name('old_lambdef', Store(), lineno=60, col_offset=0)], Num(303, lineno=60, col_offset=14), lineno=60, col_offset=0), Assign([Name('test', Store(), lineno=61, col_offset=0)], Num(304, lineno=61, col_offset=7), lineno=61, col_offset=0), Assign([Name('or_test', Store(), lineno=62, col_offset=0)], Num(305, lineno=62, col_offset=10), lineno=62, col_offset=0), Assign([Name('and_test', Store(), lineno=63, col_offset=0)], Num(306, lineno=63, col_offset=11), lineno=63, col_offset=0), Assign([Name('not_test', Store(), lineno=64, col_offset=0)], Num(307, lineno=64, col_offset=11), lineno=64, col_offset=0), Assign([Name('comparison', Store(), lineno=65, col_offset=0)], Num(308, lineno=65, col_offset=13), lineno=65, col_offset=0), Assign([Name('comp_op', Store(), lineno=66, col_offset=0)], Num(309, lineno=66, col_offset=10), lineno=66, col_offset=0), Assign([Name('expr', Store(), lineno=67, col_offset=0)], Num(310, lineno=67, col_offset=7), lineno=67, col_offset=0), Assign([Name('xor_expr', Store(), lineno=68, col_offset=0)], Num(311, lineno=68, col_offset=11), lineno=68, col_offset=0), Assign([Name('and_expr', Store(), lineno=69, col_offset=0)], Num(312, lineno=69, col_offset=11), lineno=69, col_offset=0), Assign([Name('shift_expr', Store(), lineno=70, col_offset=0)], Num(313, lineno=70, col_offset=13), lineno=70, col_offset=0), Assign([Name('arith_expr', Store(), lineno=71, col_offset=0)], Num(314, lineno=71, col_offset=13), lineno=71, col_offset=0), Assign([Name('term', Store(), lineno=72, col_offset=0)], Num(315, lineno=72, col_offset=7), lineno=72, col_offset=0), Assign([Name('factor', Store(), lineno=73, col_offset=0)], Num(316, lineno=73, col_offset=9), lineno=73, col_offset=0), Assign([Name('power', Store(), lineno=74, col_offset=0)], Num(317, lineno=74, col_offset=8), lineno=74, col_offset=0), Assign([Name('atom', Store(), lineno=75, col_offset=0)], Num(318, lineno=75, col_offset=7), lineno=75, col_offset=0), Assign([Name('listmaker', Store(), lineno=76, col_offset=0)], Num(319, lineno=76, col_offset=12), lineno=76, col_offset=0), Assign([Name('testlist_comp', Store(), lineno=77, col_offset=0)], Num(320, lineno=77, col_offset=16), lineno=77, col_offset=0), Assign([Name('lambdef', Store(), lineno=78, col_offset=0)], Num(321, lineno=78, col_offset=10), lineno=78, col_offset=0), Assign([Name('trailer', Store(), lineno=79, col_offset=0)], Num(322, lineno=79, col_offset=10), lineno=79, col_offset=0), Assign([Name('subscriptlist', Store(), lineno=80, col_offset=0)], Num(323, lineno=80, col_offset=16), lineno=80, col_offset=0), Assign([Name('subscript', Store(), lineno=81, col_offset=0)], Num(324, lineno=81, col_offset=12), lineno=81, col_offset=0), Assign([Name('sliceop', Store(), lineno=82, col_offset=0)], Num(325, lineno=82, col_offset=10), lineno=82, col_offset=0), Assign([Name('exprlist', Store(), lineno=83, col_offset=0)], Num(326, lineno=83, col_offset=11), lineno=83, col_offset=0), Assign([Name('testlist', Store(), lineno=84, col_offset=0)], Num(327, lineno=84, col_offset=11), lineno=84, col_offset=0), Assign([Name('dictmaker', Store(), lineno=85, col_offset=0)], Num(328, lineno=85, col_offset=12), lineno=85, col_offset=0), Assign([Name('dictorsetmaker', Store(), lineno=86, col_offset=0)], Num(329, lineno=86, col_offset=17), lineno=86, col_offset=0), Assign([Name('classdef', Store(), lineno=87, col_offset=0)], Num(330, lineno=87, col_offset=11), lineno=87, col_offset=0), Assign([Name('arglist', Store(), lineno=88, col_offset=0)], Num(331, lineno=88, col_offset=10), lineno=88, col_offset=0), Assign([Name('argument', Store(), lineno=89, col_offset=0)], Num(332, lineno=89, col_offset=11), lineno=89, col_offset=0), Assign([Name('list_iter', Store(), lineno=90, col_offset=0)], Num(333, lineno=90, col_offset=12), lineno=90, col_offset=0), Assign([Name('list_for', Store(), lineno=91, col_offset=0)], Num(334, lineno=91, col_offset=11), lineno=91, col_offset=0), Assign([Name('list_if', Store(), lineno=92, col_offset=0)], Num(335, lineno=92, col_offset=10), lineno=92, col_offset=0), Assign([Name('comp_iter', Store(), lineno=93, col_offset=0)], Num(336, lineno=93, col_offset=12), lineno=93, col_offset=0), Assign([Name('comp_for', Store(), lineno=94, col_offset=0)], Num(337, lineno=94, col_offset=11), lineno=94, col_offset=0), Assign([Name('comp_if', Store(), lineno=95, col_offset=0)], Num(338, lineno=95, col_offset=10), lineno=95, col_offset=0), Assign([Name('testlist1', Store(), lineno=96, col_offset=0)], Num(339, lineno=96, col_offset=12), lineno=96, col_offset=0), Assign([Name('encoding_decl', Store(), lineno=97, col_offset=0)], Num(340, lineno=97, col_offset=16), lineno=97, col_offset=0), Assign([Name('yield_expr', Store(), lineno=98, col_offset=0)], Num(341, lineno=98, col_offset=13), lineno=98, col_offset=0), Assign([Name('sym_name', Store(), lineno=101, col_offset=0)], Dict([], [], lineno=101, col_offset=11), lineno=101, col_offset=0), For(Tuple([Name('_name', Store(), lineno=102, col_offset=4), Name('_value', Store(), lineno=102, col_offset=11)], Store(), lineno=102, col_offset=4), Call(Attribute(Call(Name('globals', Load(), lineno=102, col_offset=21), [], [], None, None, lineno=102, col_offset=21), 'items', Load(), lineno=102, col_offset=21), [], [], None, None, lineno=102, col_offset=21), [If(Compare(Call(Name('type', Load(), lineno=103, col_offset=7), [Name('_value', Load(), lineno=103, col_offset=12)], [], None, None, lineno=103, col_offset=7), [Is()], [Call(Name('type', Load(), lineno=103, col_offset=23), [Num(0, lineno=103, col_offset=28)], [], None, None, lineno=103, col_offset=23)], lineno=103, col_offset=7), [Assign([Subscript(Name('sym_name', Load(), lineno=104, col_offset=8), Index(Name('_value', Load(), lineno=104, col_offset=17)), Store(), lineno=104, col_offset=8)], Name('_name', Load(), lineno=104, col_offset=27), lineno=104, col_offset=8)], [], lineno=103, col_offset=4)], [], lineno=102, col_offset=0), FunctionDef('main', arguments([], None, None, []), [Import([alias('sys', None)], lineno=108, col_offset=4), Import([alias('token', None)], lineno=109, col_offset=4), If(Compare(Call(Name('len', Load(), lineno=110, col_offset=7), [Attribute(Name('sys', Load(), lineno=110, col_offset=11), 'argv', Load(), lineno=110, col_offset=11)], [], None, None, lineno=110, col_offset=7), [Eq()], [Num(1, lineno=110, col_offset=24)], lineno=110, col_offset=7), [Assign([Attribute(Name('sys', Load(), lineno=111, col_offset=8), 'argv', Store(), lineno=111, col_offset=8)], BinOp(Attribute(Name('sys', Load(), lineno=111, col_offset=19), 'argv', Load(), lineno=111, col_offset=19), Add(), List([Str('Include/graminit.h', lineno=111, col_offset=31), Str('Lib/symbol.py', lineno=111, col_offset=53)], Load(), lineno=111, col_offset=30), lineno=111, col_offset=19), lineno=111, col_offset=8)], [], lineno=110, col_offset=4), Expr(Call(Attribute(Name('token', Load(), lineno=112, col_offset=4), 'main', Load(), lineno=112, col_offset=4), [], [], None, None, lineno=112, col_offset=4), lineno=112, col_offset=4)], [], lineno=107, col_offset=0), If(Compare(Name('__name__', Load(), lineno=114, col_offset=3), [Eq()], [Str('__main__', lineno=114, col_offset=15)], lineno=114, col_offset=3), [Expr(Call(Name('main', Load(), lineno=115, col_offset=4), [], [], None, None, lineno=115, col_offset=4), lineno=115, col_offset=4)], [], lineno=114, col_offset=0)])
