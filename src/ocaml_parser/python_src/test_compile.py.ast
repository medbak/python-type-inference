Module([Import([alias('unittest', None)], lineno=1, col_offset=0), Import([alias('sys', None)], lineno=2, col_offset=0), Import([alias('_ast', None)], lineno=3, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=4, col_offset=0), Import([alias('textwrap', None)], lineno=5, col_offset=0), ClassDef('TestSpecifics', [Attribute(Name('unittest', Load(), lineno=7, col_offset=20), 'TestCase', Load(), lineno=7, col_offset=20)], [FunctionDef('test_no_ending_newline', arguments([Name('self', Param(), lineno=9, col_offset=31)], None, None, []), [Expr(Call(Name('compile', Load(), lineno=10, col_offset=8), [Str('hi', lineno=10, col_offset=16), Str('<test>', lineno=10, col_offset=22), Str('exec', lineno=10, col_offset=32)], [], None, None, lineno=10, col_offset=8), lineno=10, col_offset=8), Expr(Call(Name('compile', Load(), lineno=11, col_offset=8), [Str('hi\r', lineno=11, col_offset=16), Str('<test>', lineno=11, col_offset=24), Str('exec', lineno=11, col_offset=34)], [], None, None, lineno=11, col_offset=8), lineno=11, col_offset=8)], [], lineno=9, col_offset=4), FunctionDef('test_empty', arguments([Name('self', Param(), lineno=13, col_offset=19)], None, None, []), [Expr(Call(Name('compile', Load(), lineno=14, col_offset=8), [Str('', lineno=14, col_offset=16), Str('<test>', lineno=14, col_offset=20), Str('exec', lineno=14, col_offset=30)], [], None, None, lineno=14, col_offset=8), lineno=14, col_offset=8)], [], lineno=13, col_offset=4), FunctionDef('test_other_newlines', arguments([Name('self', Param(), lineno=16, col_offset=28)], None, None, []), [Expr(Call(Name('compile', Load(), lineno=17, col_offset=8), [Str('\r\n', lineno=17, col_offset=16), Str('<test>', lineno=17, col_offset=24), Str('exec', lineno=17, col_offset=34)], [], None, None, lineno=17, col_offset=8), lineno=17, col_offset=8), Expr(Call(Name('compile', Load(), lineno=18, col_offset=8), [Str('\r', lineno=18, col_offset=16), Str('<test>', lineno=18, col_offset=22), Str('exec', lineno=18, col_offset=32)], [], None, None, lineno=18, col_offset=8), lineno=18, col_offset=8), Expr(Call(Name('compile', Load(), lineno=19, col_offset=8), [Str('hi\r\nstuff\r\ndef f():\n    pass\r', lineno=19, col_offset=16), Str('<test>', lineno=19, col_offset=55), Str('exec', lineno=19, col_offset=65)], [], None, None, lineno=19, col_offset=8), lineno=19, col_offset=8), Expr(Call(Name('compile', Load(), lineno=20, col_offset=8), [Str('this_is\rreally_old_mac\rdef f():\n    pass', lineno=20, col_offset=16), Str('<test>', lineno=20, col_offset=63), Str('exec', lineno=20, col_offset=73)], [], None, None, lineno=20, col_offset=8), lineno=20, col_offset=8)], [], lineno=16, col_offset=4), FunctionDef('test_debug_assignment', arguments([Name('self', Param(), lineno=22, col_offset=30)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=24, col_offset=8), 'assertRaises', Load(), lineno=24, col_offset=8), [Name('SyntaxError', Load(), lineno=24, col_offset=26), Name('compile', Load(), lineno=24, col_offset=39), Str('__debug__ = 1', lineno=24, col_offset=48), Str('?', lineno=24, col_offset=65), Str('single', lineno=24, col_offset=70)], [], None, None, lineno=24, col_offset=8), lineno=24, col_offset=8), Import([alias('__builtin__', None)], lineno=25, col_offset=8), Assign([Name('prev', Store(), lineno=26, col_offset=8)], Attribute(Name('__builtin__', Load(), lineno=26, col_offset=15), '__debug__', Load(), lineno=26, col_offset=15), lineno=26, col_offset=8), Expr(Call(Name('setattr', Load(), lineno=27, col_offset=8), [Name('__builtin__', Load(), lineno=27, col_offset=16), Str('__debug__', lineno=27, col_offset=29), Str('sure', lineno=27, col_offset=42)], [], None, None, lineno=27, col_offset=8), lineno=27, col_offset=8), Expr(Call(Name('setattr', Load(), lineno=28, col_offset=8), [Name('__builtin__', Load(), lineno=28, col_offset=16), Str('__debug__', lineno=28, col_offset=29), Name('prev', Load(), lineno=28, col_offset=42)], [], None, None, lineno=28, col_offset=8), lineno=28, col_offset=8)], [], lineno=22, col_offset=4), FunctionDef('test_argument_handling', arguments([Name('self', Param(), lineno=30, col_offset=31)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=32, col_offset=8), 'assertRaises', Load(), lineno=32, col_offset=8), [Name('SyntaxError', Load(), lineno=32, col_offset=26), Name('eval', Load(), lineno=32, col_offset=39), Str('lambda a,a:0', lineno=32, col_offset=45)], [], None, None, lineno=32, col_offset=8), lineno=32, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=33, col_offset=8), 'assertRaises', Load(), lineno=33, col_offset=8), [Name('SyntaxError', Load(), lineno=33, col_offset=26), Name('eval', Load(), lineno=33, col_offset=39), Str('lambda a,a=1:0', lineno=33, col_offset=45)], [], None, None, lineno=33, col_offset=8), lineno=33, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=34, col_offset=8), 'assertRaises', Load(), lineno=34, col_offset=8), [Name('SyntaxError', Load(), lineno=34, col_offset=26), Name('eval', Load(), lineno=34, col_offset=39), Str('lambda a=1,a=1:0', lineno=34, col_offset=45)], [], None, None, lineno=34, col_offset=8), lineno=34, col_offset=8), TryExcept([Exec(Str('def f(a, a): pass', lineno=36, col_offset=17), None, None, lineno=36, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=37, col_offset=12), 'fail', Load(), lineno=37, col_offset=12), [Str('duplicate arguments', lineno=37, col_offset=22)], [], None, None, lineno=37, col_offset=12), lineno=37, col_offset=12)], [ExceptHandler(Name('SyntaxError', Load(), lineno=38, col_offset=15), None, [Pass( lineno=39, col_offset=12)], lineno=38, col_offset=8)], [], lineno=35, col_offset=8), TryExcept([Exec(Str('def f(a = 0, a = 1): pass', lineno=41, col_offset=17), None, None, lineno=41, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=42, col_offset=12), 'fail', Load(), lineno=42, col_offset=12), [Str('duplicate keyword arguments', lineno=42, col_offset=22)], [], None, None, lineno=42, col_offset=12), lineno=42, col_offset=12)], [ExceptHandler(Name('SyntaxError', Load(), lineno=43, col_offset=15), None, [Pass( lineno=44, col_offset=12)], lineno=43, col_offset=8)], [], lineno=40, col_offset=8), TryExcept([Exec(Str('def f(a): global a; a = 1', lineno=46, col_offset=17), None, None, lineno=46, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=47, col_offset=12), 'fail', Load(), lineno=47, col_offset=12), [Str('variable is global and local', lineno=47, col_offset=22)], [], None, None, lineno=47, col_offset=12), lineno=47, col_offset=12)], [ExceptHandler(Name('SyntaxError', Load(), lineno=48, col_offset=15), None, [Pass( lineno=49, col_offset=12)], lineno=48, col_offset=8)], [], lineno=45, col_offset=8)], [], lineno=30, col_offset=4), FunctionDef('test_syntax_error', arguments([Name('self', Param(), lineno=51, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=52, col_offset=8), 'assertRaises', Load(), lineno=52, col_offset=8), [Name('SyntaxError', Load(), lineno=52, col_offset=26), Name('compile', Load(), lineno=52, col_offset=39), Str('1+*3', lineno=52, col_offset=48), Str('filename', lineno=52, col_offset=56), Str('exec', lineno=52, col_offset=68)], [], None, None, lineno=52, col_offset=8), lineno=52, col_offset=8)], [], lineno=51, col_offset=4), FunctionDef('test_none_keyword_arg', arguments([Name('self', Param(), lineno=54, col_offset=30)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=55, col_offset=8), 'assertRaises', Load(), lineno=55, col_offset=8), [Name('SyntaxError', Load(), lineno=55, col_offset=26), Name('compile', Load(), lineno=55, col_offset=39), Str('f(None=1)', lineno=55, col_offset=48), Str('<string>', lineno=55, col_offset=61), Str('exec', lineno=55, col_offset=73)], [], None, None, lineno=55, col_offset=8), lineno=55, col_offset=8)], [], lineno=54, col_offset=4), FunctionDef('test_duplicate_global_local', arguments([Name('self', Param(), lineno=57, col_offset=36)], None, None, []), [TryExcept([Exec(Str('def f(a): global a; a = 1', lineno=59, col_offset=17), None, None, lineno=59, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=60, col_offset=12), 'fail', Load(), lineno=60, col_offset=12), [Str('variable is global and local', lineno=60, col_offset=22)], [], None, None, lineno=60, col_offset=12), lineno=60, col_offset=12)], [ExceptHandler(Name('SyntaxError', Load(), lineno=61, col_offset=15), None, [Pass( lineno=62, col_offset=12)], lineno=61, col_offset=8)], [], lineno=58, col_offset=8)], [], lineno=57, col_offset=4), FunctionDef('test_exec_with_general_mapping_for_locals', arguments([Name('self', Param(), lineno=64, col_offset=50)], None, None, []), [ClassDef('M', [], [Expr(Str('Test mapping interface versus possible calls from eval().', lineno=67, col_offset=12), lineno=67, col_offset=12), FunctionDef('__getitem__', arguments([Name('self', Param(), lineno=68, col_offset=28), Name('key', Param(), lineno=68, col_offset=34)], None, None, []), [If(Compare(Name('key', Load(), lineno=69, col_offset=19), [Eq()], [Str('a', lineno=69, col_offset=26)], lineno=69, col_offset=19), [Return(Num(12, lineno=70, col_offset=27), lineno=70, col_offset=20)], [], lineno=69, col_offset=16), Raise(Name('KeyError', Load(), lineno=71, col_offset=22), None, None, lineno=71, col_offset=16)], [], lineno=68, col_offset=12), FunctionDef('__setitem__', arguments([Name('self', Param(), lineno=72, col_offset=28), Name('key', Param(), lineno=72, col_offset=34), Name('value', Param(), lineno=72, col_offset=39)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=73, col_offset=16), 'results', Store(), lineno=73, col_offset=16)], Tuple([Name('key', Load(), lineno=73, col_offset=32), Name('value', Load(), lineno=73, col_offset=37)], Load(), lineno=73, col_offset=32), lineno=73, col_offset=16)], [], lineno=72, col_offset=12), FunctionDef('keys', arguments([Name('self', Param(), lineno=74, col_offset=21)], None, None, []), [Return(Call(Name('list', Load(), lineno=75, col_offset=23), [Str('xyz', lineno=75, col_offset=28)], [], None, None, lineno=75, col_offset=23), lineno=75, col_offset=16)], [], lineno=74, col_offset=12)], [], lineno=66, col_offset=8), Assign([Name('m', Store(), lineno=77, col_offset=8)], Call(Name('M', Load(), lineno=77, col_offset=12), [], [], None, None, lineno=77, col_offset=12), lineno=77, col_offset=8), Assign([Name('g', Store(), lineno=78, col_offset=8)], Call(Name('globals', Load(), lineno=78, col_offset=12), [], [], None, None, lineno=78, col_offset=12), lineno=78, col_offset=8), Exec(Str('z = a', lineno=79, col_offset=13), Name('g', Load(), lineno=79, col_offset=24), Name('m', Load(), lineno=79, col_offset=27), lineno=79, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=80, col_offset=8), 'assertEqual', Load(), lineno=80, col_offset=8), [Attribute(Name('m', Load(), lineno=80, col_offset=25), 'results', Load(), lineno=80, col_offset=25), Tuple([Str('z', lineno=80, col_offset=37), Num(12, lineno=80, col_offset=42)], Load(), lineno=80, col_offset=37)], [], None, None, lineno=80, col_offset=8), lineno=80, col_offset=8), TryExcept([Exec(Str('z = b', lineno=82, col_offset=17), Name('g', Load(), lineno=82, col_offset=28), Name('m', Load(), lineno=82, col_offset=31), lineno=82, col_offset=12)], [ExceptHandler(Name('NameError', Load(), lineno=83, col_offset=15), None, [Pass( lineno=84, col_offset=12)], lineno=83, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=86, col_offset=12), 'fail', Load(), lineno=86, col_offset=12), [Str('Did not detect a KeyError', lineno=86, col_offset=22)], [], None, None, lineno=86, col_offset=12), lineno=86, col_offset=12)], lineno=81, col_offset=8), Exec(Str('z = dir()', lineno=87, col_offset=13), Name('g', Load(), lineno=87, col_offset=28), Name('m', Load(), lineno=87, col_offset=31), lineno=87, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=88, col_offset=8), 'assertEqual', Load(), lineno=88, col_offset=8), [Attribute(Name('m', Load(), lineno=88, col_offset=25), 'results', Load(), lineno=88, col_offset=25), Tuple([Str('z', lineno=88, col_offset=37), Call(Name('list', Load(), lineno=88, col_offset=42), [Str('xyz', lineno=88, col_offset=47)], [], None, None, lineno=88, col_offset=42)], Load(), lineno=88, col_offset=37)], [], None, None, lineno=88, col_offset=8), lineno=88, col_offset=8), Exec(Str('z = globals()', lineno=89, col_offset=13), Name('g', Load(), lineno=89, col_offset=32), Name('m', Load(), lineno=89, col_offset=35), lineno=89, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=90, col_offset=8), 'assertEqual', Load(), lineno=90, col_offset=8), [Attribute(Name('m', Load(), lineno=90, col_offset=25), 'results', Load(), lineno=90, col_offset=25), Tuple([Str('z', lineno=90, col_offset=37), Name('g', Load(), lineno=90, col_offset=42)], Load(), lineno=90, col_offset=37)], [], None, None, lineno=90, col_offset=8), lineno=90, col_offset=8), Exec(Str('z = locals()', lineno=91, col_offset=13), Name('g', Load(), lineno=91, col_offset=31), Name('m', Load(), lineno=91, col_offset=34), lineno=91, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=92, col_offset=8), 'assertEqual', Load(), lineno=92, col_offset=8), [Attribute(Name('m', Load(), lineno=92, col_offset=25), 'results', Load(), lineno=92, col_offset=25), Tuple([Str('z', lineno=92, col_offset=37), Name('m', Load(), lineno=92, col_offset=42)], Load(), lineno=92, col_offset=37)], [], None, None, lineno=92, col_offset=8), lineno=92, col_offset=8), TryExcept([Exec(Str('z = b', lineno=94, col_offset=17), Name('m', Load(), lineno=94, col_offset=28), None, lineno=94, col_offset=12)], [ExceptHandler(Name('TypeError', Load(), lineno=95, col_offset=15), None, [Pass( lineno=96, col_offset=12)], lineno=95, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=98, col_offset=12), 'fail', Load(), lineno=98, col_offset=12), [Str('Did not validate globals as a real dict', lineno=98, col_offset=22)], [], None, None, lineno=98, col_offset=12), lineno=98, col_offset=12)], lineno=93, col_offset=8), ClassDef('A', [], [Expr(Str('Non-mapping', lineno=101, col_offset=12), lineno=101, col_offset=12), Pass( lineno=102, col_offset=12)], [], lineno=100, col_offset=8), Assign([Name('m', Store(), lineno=103, col_offset=8)], Call(Name('A', Load(), lineno=103, col_offset=12), [], [], None, None, lineno=103, col_offset=12), lineno=103, col_offset=8), TryExcept([Exec(Str('z = a', lineno=105, col_offset=17), Name('g', Load(), lineno=105, col_offset=28), Name('m', Load(), lineno=105, col_offset=31), lineno=105, col_offset=12)], [ExceptHandler(Name('TypeError', Load(), lineno=106, col_offset=15), None, [Pass( lineno=107, col_offset=12)], lineno=106, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=109, col_offset=12), 'fail', Load(), lineno=109, col_offset=12), [Str('Did not validate locals as a mapping', lineno=109, col_offset=22)], [], None, None, lineno=109, col_offset=12), lineno=109, col_offset=12)], lineno=104, col_offset=8), ClassDef('D', [Name('dict', Load(), lineno=112, col_offset=16)], [FunctionDef('__getitem__', arguments([Name('self', Param(), lineno=113, col_offset=28), Name('key', Param(), lineno=113, col_offset=34)], None, None, []), [If(Compare(Name('key', Load(), lineno=114, col_offset=19), [Eq()], [Str('a', lineno=114, col_offset=26)], lineno=114, col_offset=19), [Return(Num(12, lineno=115, col_offset=27), lineno=115, col_offset=20)], [], lineno=114, col_offset=16), Return(Call(Attribute(Name('dict', Load(), lineno=116, col_offset=23), '__getitem__', Load(), lineno=116, col_offset=23), [Name('self', Load(), lineno=116, col_offset=40), Name('key', Load(), lineno=116, col_offset=46)], [], None, None, lineno=116, col_offset=23), lineno=116, col_offset=16)], [], lineno=113, col_offset=12)], [], lineno=112, col_offset=8), Assign([Name('d', Store(), lineno=117, col_offset=8)], Call(Name('D', Load(), lineno=117, col_offset=12), [], [], None, None, lineno=117, col_offset=12), lineno=117, col_offset=8), Exec(Str('z = a', lineno=118, col_offset=13), Name('g', Load(), lineno=118, col_offset=24), Name('d', Load(), lineno=118, col_offset=27), lineno=118, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=119, col_offset=8), 'assertEqual', Load(), lineno=119, col_offset=8), [Subscript(Name('d', Load(), lineno=119, col_offset=25), Index(Str('z', lineno=119, col_offset=27)), Load(), lineno=119, col_offset=25), Num(12, lineno=119, col_offset=33)], [], None, None, lineno=119, col_offset=8), lineno=119, col_offset=8)], [], lineno=64, col_offset=4), FunctionDef('test_extended_arg', arguments([Name('self', Param(), lineno=121, col_offset=26)], None, None, []), [Assign([Name('longexpr', Store(), lineno=122, col_offset=8)], BinOp(Str('x = x or ', lineno=122, col_offset=19), Add(), BinOp(Str('-x', lineno=122, col_offset=33), Mult(), Num(2500, lineno=122, col_offset=40), lineno=122, col_offset=33), lineno=122, col_offset=19), lineno=122, col_offset=8), Assign([Name('code', Store(), lineno=123, col_offset=8)], BinOp(Str('\ndef f(x):\n    %s\n    %s\n    %s\n    %s\n    %s\n    %s\n    %s\n    %s\n    %s\n    %s\n    # the expressions above have no effect, x == argument\n    while x:\n        x -= 1\n        # EXTENDED_ARG/JUMP_ABSOLUTE here\n    return x\n', lineno=140, col_offset=-1), Mod(), BinOp(Tuple([Name('longexpr', Load(), lineno=140, col_offset=8)], Load(), lineno=140, col_offset=8), Mult(), Num(10, lineno=140, col_offset=19), lineno=140, col_offset=7), lineno=140, col_offset=-1), lineno=123, col_offset=8), Exec(Name('code', Load(), lineno=141, col_offset=13), None, None, lineno=141, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=142, col_offset=8), 'assertEqual', Load(), lineno=142, col_offset=8), [Call(Name('f', Load(), lineno=142, col_offset=25), [Num(5, lineno=142, col_offset=27)], [], None, None, lineno=142, col_offset=25), Num(0, lineno=142, col_offset=31)], [], None, None, lineno=142, col_offset=8), lineno=142, col_offset=8)], [], lineno=121, col_offset=4), FunctionDef('test_complex_args', arguments([Name('self', Param(), lineno=144, col_offset=26)], None, None, []), [With(Call(Attribute(Name('test_support', Load(), lineno=146, col_offset=13), 'check_py3k_warnings', Load(), lineno=146, col_offset=13), [Tuple([Str('tuple parameter unpacking has been removed', lineno=147, col_offset=17), Name('SyntaxWarning', Load(), lineno=147, col_offset=63)], Load(), lineno=147, col_offset=17)], [], None, None, lineno=146, col_offset=13), None, [Exec(Call(Attribute(Name('textwrap', Load(), lineno=148, col_offset=17), 'dedent', Load(), lineno=148, col_offset=17), [Str('\n        def comp_args((a, b)):\n            return a,b\n        self.assertEqual(comp_args((1, 2)), (1, 2))\n\n        def comp_args((a, b)=(3, 4)):\n            return a, b\n        self.assertEqual(comp_args((1, 2)), (1, 2))\n        self.assertEqual(comp_args(), (3, 4))\n\n        def comp_args(a, (b, c)):\n            return a, b, c\n        self.assertEqual(comp_args(1, (2, 3)), (1, 2, 3))\n\n        def comp_args(a=2, (b, c)=(3, 4)):\n            return a, b, c\n        self.assertEqual(comp_args(1, (2, 3)), (1, 2, 3))\n        self.assertEqual(comp_args(), (2, 3, 4))\n        ', lineno=166, col_offset=-1)], [], None, None, lineno=148, col_offset=17), None, None, lineno=148, col_offset=12)], lineno=146, col_offset=13)], [], lineno=144, col_offset=4), FunctionDef('test_argument_order', arguments([Name('self', Param(), lineno=168, col_offset=28)], None, None, []), [TryExcept([Exec(Str('def f(a=1, (b, c)): pass', lineno=170, col_offset=17), None, None, lineno=170, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=171, col_offset=12), 'fail', Load(), lineno=171, col_offset=12), [Str('non-default args after default', lineno=171, col_offset=22)], [], None, None, lineno=171, col_offset=12), lineno=171, col_offset=12)], [ExceptHandler(Name('SyntaxError', Load(), lineno=172, col_offset=15), None, [Pass( lineno=173, col_offset=12)], lineno=172, col_offset=8)], [], lineno=169, col_offset=8)], [], lineno=168, col_offset=4), FunctionDef('test_float_literals', arguments([Name('self', Param(), lineno=175, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=177, col_offset=8), 'assertRaises', Load(), lineno=177, col_offset=8), [Name('SyntaxError', Load(), lineno=177, col_offset=26), Name('eval', Load(), lineno=177, col_offset=39), Str('2e', lineno=177, col_offset=45)], [], None, None, lineno=177, col_offset=8), lineno=177, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=178, col_offset=8), 'assertRaises', Load(), lineno=178, col_offset=8), [Name('SyntaxError', Load(), lineno=178, col_offset=26), Name('eval', Load(), lineno=178, col_offset=39), Str('2.0e+', lineno=178, col_offset=45)], [], None, None, lineno=178, col_offset=8), lineno=178, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=179, col_offset=8), 'assertRaises', Load(), lineno=179, col_offset=8), [Name('SyntaxError', Load(), lineno=179, col_offset=26), Name('eval', Load(), lineno=179, col_offset=39), Str('1e-', lineno=179, col_offset=45)], [], None, None, lineno=179, col_offset=8), lineno=179, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=180, col_offset=8), 'assertRaises', Load(), lineno=180, col_offset=8), [Name('SyntaxError', Load(), lineno=180, col_offset=26), Name('eval', Load(), lineno=180, col_offset=39), Str('3-4e/21', lineno=180, col_offset=45)], [], None, None, lineno=180, col_offset=8), lineno=180, col_offset=8)], [], lineno=175, col_offset=4), FunctionDef('test_indentation', arguments([Name('self', Param(), lineno=182, col_offset=25)], None, None, []), [Assign([Name('s', Store(), lineno=184, col_offset=8)], Str('\nif 1:\n    if 2:\n        pass', lineno=187, col_offset=-1), lineno=184, col_offset=8), Expr(Call(Name('compile', Load(), lineno=188, col_offset=8), [Name('s', Load(), lineno=188, col_offset=16), Str('<string>', lineno=188, col_offset=19), Str('exec', lineno=188, col_offset=31)], [], None, None, lineno=188, col_offset=8), lineno=188, col_offset=8)], [], lineno=182, col_offset=4), FunctionDef('test_leading_newlines', arguments([Name('self', Param(), lineno=194, col_offset=30)], None, None, []), [Assign([Name('s256', Store(), lineno=195, col_offset=8)], Call(Attribute(Str('', lineno=195, col_offset=15), 'join', Load(), lineno=195, col_offset=15), [BinOp(BinOp(List([Str('\n', lineno=195, col_offset=24)], Load(), lineno=195, col_offset=23), Mult(), Num(256, lineno=195, col_offset=32), lineno=195, col_offset=23), Add(), List([Str('spam', lineno=195, col_offset=39)], Load(), lineno=195, col_offset=38), lineno=195, col_offset=23)], [], None, None, lineno=195, col_offset=15), lineno=195, col_offset=8), Assign([Name('co', Store(), lineno=196, col_offset=8)], Call(Name('compile', Load(), lineno=196, col_offset=13), [Name('s256', Load(), lineno=196, col_offset=21), Str('fn', lineno=196, col_offset=27), Str('exec', lineno=196, col_offset=33)], [], None, None, lineno=196, col_offset=13), lineno=196, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=197, col_offset=8), 'assertEqual', Load(), lineno=197, col_offset=8), [Attribute(Name('co', Load(), lineno=197, col_offset=25), 'co_firstlineno', Load(), lineno=197, col_offset=25), Num(257, lineno=197, col_offset=44)], [], None, None, lineno=197, col_offset=8), lineno=197, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=198, col_offset=8), 'assertEqual', Load(), lineno=198, col_offset=8), [Attribute(Name('co', Load(), lineno=198, col_offset=25), 'co_lnotab', Load(), lineno=198, col_offset=25), Str('', lineno=198, col_offset=39)], [], None, None, lineno=198, col_offset=8), lineno=198, col_offset=8)], [], lineno=194, col_offset=4), FunctionDef('test_literals_with_leading_zeroes', arguments([Name('self', Param(), lineno=200, col_offset=42)], None, None, []), [For(Name('arg', Store(), lineno=201, col_offset=12), List([Str('077787', lineno=201, col_offset=20), Str('0xj', lineno=201, col_offset=30), Str('0x.', lineno=201, col_offset=37), Str('0e', lineno=201, col_offset=44), Str('090000000000000', lineno=201, col_offset=51), Str('080000000000000', lineno=202, col_offset=20), Str('000000000000009', lineno=202, col_offset=39), Str('000000000000008', lineno=202, col_offset=58), Str('0b42', lineno=203, col_offset=20), Str('0BADCAFE', lineno=203, col_offset=28), Str('0o123456789', lineno=203, col_offset=40), Str('0b1.1', lineno=203, col_offset=55), Str('0o4.2', lineno=203, col_offset=64), Str('0b101j2', lineno=204, col_offset=20), Str('0o153j2', lineno=204, col_offset=31), Str('0b100e1', lineno=204, col_offset=42), Str('0o777e1', lineno=204, col_offset=53), Str('0o8', lineno=204, col_offset=64), Str('0o78', lineno=204, col_offset=71)], Load(), lineno=201, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=205, col_offset=12), 'assertRaises', Load(), lineno=205, col_offset=12), [Name('SyntaxError', Load(), lineno=205, col_offset=30), Name('eval', Load(), lineno=205, col_offset=43), Name('arg', Load(), lineno=205, col_offset=49)], [], None, None, lineno=205, col_offset=12), lineno=205, col_offset=12)], [], lineno=201, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=207, col_offset=8), 'assertEqual', Load(), lineno=207, col_offset=8), [Call(Name('eval', Load(), lineno=207, col_offset=25), [Str('0777', lineno=207, col_offset=30)], [], None, None, lineno=207, col_offset=25), Num(511, lineno=207, col_offset=39)], [], None, None, lineno=207, col_offset=8), lineno=207, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=208, col_offset=8), 'assertEqual', Load(), lineno=208, col_offset=8), [Call(Name('eval', Load(), lineno=208, col_offset=25), [Str('0777L', lineno=208, col_offset=30)], [], None, None, lineno=208, col_offset=25), Num(511, lineno=208, col_offset=40)], [], None, None, lineno=208, col_offset=8), lineno=208, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=209, col_offset=8), 'assertEqual', Load(), lineno=209, col_offset=8), [Call(Name('eval', Load(), lineno=209, col_offset=25), [Str('000777', lineno=209, col_offset=30)], [], None, None, lineno=209, col_offset=25), Num(511, lineno=209, col_offset=41)], [], None, None, lineno=209, col_offset=8), lineno=209, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=210, col_offset=8), 'assertEqual', Load(), lineno=210, col_offset=8), [Call(Name('eval', Load(), lineno=210, col_offset=25), [Str('0xff', lineno=210, col_offset=30)], [], None, None, lineno=210, col_offset=25), Num(255, lineno=210, col_offset=39)], [], None, None, lineno=210, col_offset=8), lineno=210, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=211, col_offset=8), 'assertEqual', Load(), lineno=211, col_offset=8), [Call(Name('eval', Load(), lineno=211, col_offset=25), [Str('0xffL', lineno=211, col_offset=30)], [], None, None, lineno=211, col_offset=25), Num(255, lineno=211, col_offset=40)], [], None, None, lineno=211, col_offset=8), lineno=211, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=212, col_offset=8), 'assertEqual', Load(), lineno=212, col_offset=8), [Call(Name('eval', Load(), lineno=212, col_offset=25), [Str('0XfF', lineno=212, col_offset=30)], [], None, None, lineno=212, col_offset=25), Num(255, lineno=212, col_offset=39)], [], None, None, lineno=212, col_offset=8), lineno=212, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=213, col_offset=8), 'assertEqual', Load(), lineno=213, col_offset=8), [Call(Name('eval', Load(), lineno=213, col_offset=25), [Str('0777.', lineno=213, col_offset=30)], [], None, None, lineno=213, col_offset=25), Num(777, lineno=213, col_offset=40)], [], None, None, lineno=213, col_offset=8), lineno=213, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=214, col_offset=8), 'assertEqual', Load(), lineno=214, col_offset=8), [Call(Name('eval', Load(), lineno=214, col_offset=25), [Str('0777.0', lineno=214, col_offset=30)], [], None, None, lineno=214, col_offset=25), Num(777, lineno=214, col_offset=41)], [], None, None, lineno=214, col_offset=8), lineno=214, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=215, col_offset=8), 'assertEqual', Load(), lineno=215, col_offset=8), [Call(Name('eval', Load(), lineno=215, col_offset=25), [Str('000000000000000000000000000000000000000000000000000777e0', lineno=215, col_offset=30)], [], None, None, lineno=215, col_offset=25), Num(777, lineno=215, col_offset=91)], [], None, None, lineno=215, col_offset=8), lineno=215, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=216, col_offset=8), 'assertEqual', Load(), lineno=216, col_offset=8), [Call(Name('eval', Load(), lineno=216, col_offset=25), [Str('0777e1', lineno=216, col_offset=30)], [], None, None, lineno=216, col_offset=25), Num(7770, lineno=216, col_offset=41)], [], None, None, lineno=216, col_offset=8), lineno=216, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=217, col_offset=8), 'assertEqual', Load(), lineno=217, col_offset=8), [Call(Name('eval', Load(), lineno=217, col_offset=25), [Str('0e0', lineno=217, col_offset=30)], [], None, None, lineno=217, col_offset=25), Num(0, lineno=217, col_offset=38)], [], None, None, lineno=217, col_offset=8), lineno=217, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=218, col_offset=8), 'assertEqual', Load(), lineno=218, col_offset=8), [Call(Name('eval', Load(), lineno=218, col_offset=25), [Str('0000E-012', lineno=218, col_offset=30)], [], None, None, lineno=218, col_offset=25), Num(0, lineno=218, col_offset=44)], [], None, None, lineno=218, col_offset=8), lineno=218, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=219, col_offset=8), 'assertEqual', Load(), lineno=219, col_offset=8), [Call(Name('eval', Load(), lineno=219, col_offset=25), [Str('09.5', lineno=219, col_offset=30)], [], None, None, lineno=219, col_offset=25), Num(9.5, lineno=219, col_offset=39)], [], None, None, lineno=219, col_offset=8), lineno=219, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=220, col_offset=8), 'assertEqual', Load(), lineno=220, col_offset=8), [Call(Name('eval', Load(), lineno=220, col_offset=25), [Str('0777j', lineno=220, col_offset=30)], [], None, None, lineno=220, col_offset=25), Num(777j, lineno=220, col_offset=40)], [], None, None, lineno=220, col_offset=8), lineno=220, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=221, col_offset=8), 'assertEqual', Load(), lineno=221, col_offset=8), [Call(Name('eval', Load(), lineno=221, col_offset=25), [Str('00j', lineno=221, col_offset=30)], [], None, None, lineno=221, col_offset=25), Num(0j, lineno=221, col_offset=38)], [], None, None, lineno=221, col_offset=8), lineno=221, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=222, col_offset=8), 'assertEqual', Load(), lineno=222, col_offset=8), [Call(Name('eval', Load(), lineno=222, col_offset=25), [Str('00.0', lineno=222, col_offset=30)], [], None, None, lineno=222, col_offset=25), Num(0, lineno=222, col_offset=39)], [], None, None, lineno=222, col_offset=8), lineno=222, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=223, col_offset=8), 'assertEqual', Load(), lineno=223, col_offset=8), [Call(Name('eval', Load(), lineno=223, col_offset=25), [Str('0e3', lineno=223, col_offset=30)], [], None, None, lineno=223, col_offset=25), Num(0, lineno=223, col_offset=38)], [], None, None, lineno=223, col_offset=8), lineno=223, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=224, col_offset=8), 'assertEqual', Load(), lineno=224, col_offset=8), [Call(Name('eval', Load(), lineno=224, col_offset=25), [Str('090000000000000.', lineno=224, col_offset=30)], [], None, None, lineno=224, col_offset=25), Num(90000000000000.0, lineno=224, col_offset=51)], [], None, None, lineno=224, col_offset=8), lineno=224, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=225, col_offset=8), 'assertEqual', Load(), lineno=225, col_offset=8), [Call(Name('eval', Load(), lineno=225, col_offset=25), [Str('090000000000000.0000000000000000000000', lineno=225, col_offset=30)], [], None, None, lineno=225, col_offset=25), Num(90000000000000.0, lineno=225, col_offset=73)], [], None, None, lineno=225, col_offset=8), lineno=225, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=226, col_offset=8), 'assertEqual', Load(), lineno=226, col_offset=8), [Call(Name('eval', Load(), lineno=226, col_offset=25), [Str('090000000000000e0', lineno=226, col_offset=30)], [], None, None, lineno=226, col_offset=25), Num(90000000000000.0, lineno=226, col_offset=52)], [], None, None, lineno=226, col_offset=8), lineno=226, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=227, col_offset=8), 'assertEqual', Load(), lineno=227, col_offset=8), [Call(Name('eval', Load(), lineno=227, col_offset=25), [Str('090000000000000e-0', lineno=227, col_offset=30)], [], None, None, lineno=227, col_offset=25), Num(90000000000000.0, lineno=227, col_offset=53)], [], None, None, lineno=227, col_offset=8), lineno=227, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=228, col_offset=8), 'assertEqual', Load(), lineno=228, col_offset=8), [Call(Name('eval', Load(), lineno=228, col_offset=25), [Str('090000000000000j', lineno=228, col_offset=30)], [], None, None, lineno=228, col_offset=25), Num(90000000000000j, lineno=228, col_offset=51)], [], None, None, lineno=228, col_offset=8), lineno=228, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=229, col_offset=8), 'assertEqual', Load(), lineno=229, col_offset=8), [Call(Name('eval', Load(), lineno=229, col_offset=25), [Str('000000000000007', lineno=229, col_offset=30)], [], None, None, lineno=229, col_offset=25), Num(7, lineno=229, col_offset=50)], [], None, None, lineno=229, col_offset=8), lineno=229, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=230, col_offset=8), 'assertEqual', Load(), lineno=230, col_offset=8), [Call(Name('eval', Load(), lineno=230, col_offset=25), [Str('000000000000008.', lineno=230, col_offset=30)], [], None, None, lineno=230, col_offset=25), Num(8.0, lineno=230, col_offset=51)], [], None, None, lineno=230, col_offset=8), lineno=230, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=231, col_offset=8), 'assertEqual', Load(), lineno=231, col_offset=8), [Call(Name('eval', Load(), lineno=231, col_offset=25), [Str('000000000000009.', lineno=231, col_offset=30)], [], None, None, lineno=231, col_offset=25), Num(9.0, lineno=231, col_offset=51)], [], None, None, lineno=231, col_offset=8), lineno=231, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=232, col_offset=8), 'assertEqual', Load(), lineno=232, col_offset=8), [Call(Name('eval', Load(), lineno=232, col_offset=25), [Str('0b101010', lineno=232, col_offset=30)], [], None, None, lineno=232, col_offset=25), Num(42, lineno=232, col_offset=43)], [], None, None, lineno=232, col_offset=8), lineno=232, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=233, col_offset=8), 'assertEqual', Load(), lineno=233, col_offset=8), [Call(Name('eval', Load(), lineno=233, col_offset=25), [Str('-0b000000000010', lineno=233, col_offset=30)], [], None, None, lineno=233, col_offset=25), Num(-2, lineno=233, col_offset=51)], [], None, None, lineno=233, col_offset=8), lineno=233, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=234, col_offset=8), 'assertEqual', Load(), lineno=234, col_offset=8), [Call(Name('eval', Load(), lineno=234, col_offset=25), [Str('0o777', lineno=234, col_offset=30)], [], None, None, lineno=234, col_offset=25), Num(511, lineno=234, col_offset=40)], [], None, None, lineno=234, col_offset=8), lineno=234, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=235, col_offset=8), 'assertEqual', Load(), lineno=235, col_offset=8), [Call(Name('eval', Load(), lineno=235, col_offset=25), [Str('-0o0000010', lineno=235, col_offset=30)], [], None, None, lineno=235, col_offset=25), Num(-8, lineno=235, col_offset=46)], [], None, None, lineno=235, col_offset=8), lineno=235, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=236, col_offset=8), 'assertEqual', Load(), lineno=236, col_offset=8), [Call(Name('eval', Load(), lineno=236, col_offset=25), [Str('020000000000.0', lineno=236, col_offset=30)], [], None, None, lineno=236, col_offset=25), Num(20000000000.0, lineno=236, col_offset=49)], [], None, None, lineno=236, col_offset=8), lineno=236, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=237, col_offset=8), 'assertEqual', Load(), lineno=237, col_offset=8), [Call(Name('eval', Load(), lineno=237, col_offset=25), [Str('037777777777e0', lineno=237, col_offset=30)], [], None, None, lineno=237, col_offset=25), Num(37777777777.0, lineno=237, col_offset=49)], [], None, None, lineno=237, col_offset=8), lineno=237, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=238, col_offset=8), 'assertEqual', Load(), lineno=238, col_offset=8), [Call(Name('eval', Load(), lineno=238, col_offset=25), [Str('01000000000000000000000.0', lineno=238, col_offset=30)], [], None, None, lineno=238, col_offset=25), Num(1e+21, lineno=239, col_offset=25)], [], None, None, lineno=238, col_offset=8), lineno=238, col_offset=8)], [], lineno=200, col_offset=4), FunctionDef('test_unary_minus', arguments([Name('self', Param(), lineno=241, col_offset=25)], None, None, []), [If(Compare(Attribute(Name('sys', Load(), lineno=243, col_offset=11), 'maxint', Load(), lineno=243, col_offset=11), [Eq()], [Num(2147483647, lineno=243, col_offset=25)], lineno=243, col_offset=11), [Assign([Name('all_one_bits', Store(), lineno=245, col_offset=12)], Str('0xffffffff', lineno=245, col_offset=27), lineno=245, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=246, col_offset=12), 'assertEqual', Load(), lineno=246, col_offset=12), [Call(Name('eval', Load(), lineno=246, col_offset=29), [Name('all_one_bits', Load(), lineno=246, col_offset=34)], [], None, None, lineno=246, col_offset=29), Num(4294967295L, lineno=246, col_offset=49)], [], None, None, lineno=246, col_offset=12), lineno=246, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=247, col_offset=12), 'assertEqual', Load(), lineno=247, col_offset=12), [Call(Name('eval', Load(), lineno=247, col_offset=29), [BinOp(Str('-', lineno=247, col_offset=34), Add(), Name('all_one_bits', Load(), lineno=247, col_offset=40), lineno=247, col_offset=34)], [], None, None, lineno=247, col_offset=29), Num(-4294967295L, lineno=247, col_offset=56)], [], None, None, lineno=247, col_offset=12), lineno=247, col_offset=12)], [If(Compare(Attribute(Name('sys', Load(), lineno=248, col_offset=13), 'maxint', Load(), lineno=248, col_offset=13), [Eq()], [Num(9223372036854775807, lineno=248, col_offset=27)], lineno=248, col_offset=13), [Assign([Name('all_one_bits', Store(), lineno=250, col_offset=12)], Str('0xffffffffffffffff', lineno=250, col_offset=27), lineno=250, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=251, col_offset=12), 'assertEqual', Load(), lineno=251, col_offset=12), [Call(Name('eval', Load(), lineno=251, col_offset=29), [Name('all_one_bits', Load(), lineno=251, col_offset=34)], [], None, None, lineno=251, col_offset=29), Num(18446744073709551615L, lineno=251, col_offset=49)], [], None, None, lineno=251, col_offset=12), lineno=251, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=252, col_offset=12), 'assertEqual', Load(), lineno=252, col_offset=12), [Call(Name('eval', Load(), lineno=252, col_offset=29), [BinOp(Str('-', lineno=252, col_offset=34), Add(), Name('all_one_bits', Load(), lineno=252, col_offset=40), lineno=252, col_offset=34)], [], None, None, lineno=252, col_offset=29), Num(-18446744073709551615L, lineno=252, col_offset=56)], [], None, None, lineno=252, col_offset=12), lineno=252, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=254, col_offset=12), 'fail', Load(), lineno=254, col_offset=12), [Str('How many bits *does* this machine have???', lineno=254, col_offset=22)], [], None, None, lineno=254, col_offset=12), lineno=254, col_offset=12)], lineno=248, col_offset=13)], lineno=243, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=257, col_offset=8), 'assertIsInstance', Load(), lineno=257, col_offset=8), [Call(Name('eval', Load(), lineno=257, col_offset=30), [BinOp(Str('%s', lineno=257, col_offset=35), Mod(), BinOp(UnaryOp(USub(), Attribute(Name('sys', Load(), lineno=257, col_offset=44), 'maxint', Load(), lineno=257, col_offset=44), lineno=257, col_offset=43), Sub(), Num(1, lineno=257, col_offset=57), lineno=257, col_offset=43), lineno=257, col_offset=35)], [], None, None, lineno=257, col_offset=30), Name('int', Load(), lineno=257, col_offset=62)], [], None, None, lineno=257, col_offset=8), lineno=257, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=258, col_offset=8), 'assertIsInstance', Load(), lineno=258, col_offset=8), [Call(Name('eval', Load(), lineno=258, col_offset=30), [BinOp(Str('%s', lineno=258, col_offset=35), Mod(), BinOp(UnaryOp(USub(), Attribute(Name('sys', Load(), lineno=258, col_offset=44), 'maxint', Load(), lineno=258, col_offset=44), lineno=258, col_offset=43), Sub(), Num(2, lineno=258, col_offset=57), lineno=258, col_offset=43), lineno=258, col_offset=35)], [], None, None, lineno=258, col_offset=30), Name('long', Load(), lineno=258, col_offset=62)], [], None, None, lineno=258, col_offset=8), lineno=258, col_offset=8)], [], lineno=241, col_offset=4), If(Compare(Attribute(Name('sys', Load(), lineno=260, col_offset=7), 'maxint', Load(), lineno=260, col_offset=7), [Eq()], [Num(9223372036854775807, lineno=260, col_offset=21)], lineno=260, col_offset=7), [FunctionDef('test_32_63_bit_values', arguments([Name('self', Param(), lineno=261, col_offset=34)], None, None, []), [Assign([Name('a', Store(), lineno=262, col_offset=12)], UnaryOp(UAdd(), Num(4294967296, lineno=262, col_offset=17), lineno=262, col_offset=16), lineno=262, col_offset=12), Assign([Name('b', Store(), lineno=263, col_offset=12)], Num(-4294967296, lineno=263, col_offset=17), lineno=263, col_offset=12), Assign([Name('c', Store(), lineno=264, col_offset=12)], UnaryOp(UAdd(), Num(281474976710656, lineno=264, col_offset=17), lineno=264, col_offset=16), lineno=264, col_offset=12), Assign([Name('d', Store(), lineno=265, col_offset=12)], Num(-281474976710656, lineno=265, col_offset=17), lineno=265, col_offset=12), Assign([Name('e', Store(), lineno=266, col_offset=12)], UnaryOp(UAdd(), Num(4611686018427387904, lineno=266, col_offset=17), lineno=266, col_offset=16), lineno=266, col_offset=12), Assign([Name('f', Store(), lineno=267, col_offset=12)], Num(-4611686018427387904, lineno=267, col_offset=17), lineno=267, col_offset=12), Assign([Name('g', Store(), lineno=268, col_offset=12)], UnaryOp(UAdd(), Num(9223372036854775807, lineno=268, col_offset=17), lineno=268, col_offset=16), lineno=268, col_offset=12), Assign([Name('h', Store(), lineno=269, col_offset=12)], Num(-9223372036854775807, lineno=269, col_offset=17), lineno=269, col_offset=12), For(Name('variable', Store(), lineno=271, col_offset=16), Attribute(Attribute(Attribute(Name('self', Load(), lineno=271, col_offset=28), 'test_32_63_bit_values', Load(), lineno=271, col_offset=28), 'func_code', Load(), lineno=271, col_offset=28), 'co_consts', Load(), lineno=271, col_offset=28), [If(Compare(Name('variable', Load(), lineno=272, col_offset=19), [IsNot()], [Name('None', Load(), lineno=272, col_offset=35)], lineno=272, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=273, col_offset=20), 'assertIsInstance', Load(), lineno=273, col_offset=20), [Name('variable', Load(), lineno=273, col_offset=42), Name('int', Load(), lineno=273, col_offset=52)], [], None, None, lineno=273, col_offset=20), lineno=273, col_offset=20)], [], lineno=272, col_offset=16)], [], lineno=271, col_offset=12)], [], lineno=261, col_offset=8)], [], lineno=260, col_offset=4), FunctionDef('test_sequence_unpacking_error', arguments([Name('self', Param(), lineno=275, col_offset=38)], None, None, []), [Assign([Tuple([Name('i', Store(), lineno=277, col_offset=8), Name('j', Store(), lineno=277, col_offset=10)], Store(), lineno=277, col_offset=8)], BoolOp(Or(), [Tuple([Num(1, lineno=277, col_offset=15), Num(-1, lineno=277, col_offset=19)], Load(), lineno=277, col_offset=15), Tuple([Num(-1, lineno=277, col_offset=27), Num(1, lineno=277, col_offset=30)], Load(), lineno=277, col_offset=26)], lineno=277, col_offset=14), lineno=277, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=278, col_offset=8), 'assertEqual', Load(), lineno=278, col_offset=8), [Name('i', Load(), lineno=278, col_offset=25), Num(1, lineno=278, col_offset=28)], [], None, None, lineno=278, col_offset=8), lineno=278, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=279, col_offset=8), 'assertEqual', Load(), lineno=279, col_offset=8), [Name('j', Load(), lineno=279, col_offset=25), Num(-1, lineno=279, col_offset=29)], [], None, None, lineno=279, col_offset=8), lineno=279, col_offset=8)], [], lineno=275, col_offset=4), FunctionDef('test_none_assignment', arguments([Name('self', Param(), lineno=281, col_offset=29)], None, None, []), [Assign([Name('stmts', Store(), lineno=282, col_offset=8)], List([Str('None = 0', lineno=283, col_offset=12), Str('None += 0', lineno=284, col_offset=12), Str('__builtins__.None = 0', lineno=285, col_offset=12), Str('def None(): pass', lineno=286, col_offset=12), Str('class None: pass', lineno=287, col_offset=12), Str('(a, None) = 0, 0', lineno=288, col_offset=12), Str('for None in range(10): pass', lineno=289, col_offset=12), Str('def f(None): pass', lineno=290, col_offset=12), Str('import None', lineno=291, col_offset=12), Str('import x as None', lineno=292, col_offset=12), Str('from x import None', lineno=293, col_offset=12), Str('from x import y as None', lineno=294, col_offset=12)], Load(), lineno=282, col_offset=16), lineno=282, col_offset=8), For(Name('stmt', Store(), lineno=296, col_offset=12), Name('stmts', Load(), lineno=296, col_offset=20), [AugAssign(Name('stmt', Store(), lineno=297, col_offset=12), Add(), Str('\n', lineno=297, col_offset=20), lineno=297, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=298, col_offset=12), 'assertRaises', Load(), lineno=298, col_offset=12), [Name('SyntaxError', Load(), lineno=298, col_offset=30), Name('compile', Load(), lineno=298, col_offset=43), Name('stmt', Load(), lineno=298, col_offset=52), Str('tmp', lineno=298, col_offset=58), Str('single', lineno=298, col_offset=65)], [], None, None, lineno=298, col_offset=12), lineno=298, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=299, col_offset=12), 'assertRaises', Load(), lineno=299, col_offset=12), [Name('SyntaxError', Load(), lineno=299, col_offset=30), Name('compile', Load(), lineno=299, col_offset=43), Name('stmt', Load(), lineno=299, col_offset=52), Str('tmp', lineno=299, col_offset=58), Str('exec', lineno=299, col_offset=65)], [], None, None, lineno=299, col_offset=12), lineno=299, col_offset=12)], [], lineno=296, col_offset=8), Expr(Call(Name('compile', Load(), lineno=301, col_offset=8), [Str('from None import x', lineno=301, col_offset=16), Str('tmp', lineno=301, col_offset=38), Str('exec', lineno=301, col_offset=45)], [], None, None, lineno=301, col_offset=8), lineno=301, col_offset=8), Expr(Call(Name('compile', Load(), lineno=302, col_offset=8), [Str('from x import None as y', lineno=302, col_offset=16), Str('tmp', lineno=302, col_offset=43), Str('exec', lineno=302, col_offset=50)], [], None, None, lineno=302, col_offset=8), lineno=302, col_offset=8), Expr(Call(Name('compile', Load(), lineno=303, col_offset=8), [Str('import None as x', lineno=303, col_offset=16), Str('tmp', lineno=303, col_offset=36), Str('exec', lineno=303, col_offset=43)], [], None, None, lineno=303, col_offset=8), lineno=303, col_offset=8)], [], lineno=281, col_offset=4), FunctionDef('test_import', arguments([Name('self', Param(), lineno=305, col_offset=20)], None, None, []), [Assign([Name('succeed', Store(), lineno=306, col_offset=8)], List([Str('import sys', lineno=307, col_offset=12), Str('import os, sys', lineno=308, col_offset=12), Str('import os as bar', lineno=309, col_offset=12), Str('import os.path as bar', lineno=310, col_offset=12), Str('from __future__ import nested_scopes, generators', lineno=311, col_offset=12), Str('from __future__ import (nested_scopes,\ngenerators)', lineno=312, col_offset=12), Str('from __future__ import (nested_scopes,\ngenerators,)', lineno=313, col_offset=12), Str('from sys import stdin, stderr, stdout', lineno=314, col_offset=12), Str('from sys import (stdin, stderr,\nstdout)', lineno=315, col_offset=12), Str('from sys import (stdin, stderr,\nstdout,)', lineno=316, col_offset=12), Str('from sys import (stdin\n, stderr, stdout)', lineno=317, col_offset=12), Str('from sys import (stdin\n, stderr, stdout,)', lineno=318, col_offset=12), Str('from sys import stdin as si, stdout as so, stderr as se', lineno=319, col_offset=12), Str('from sys import (stdin as si, stdout as so, stderr as se)', lineno=320, col_offset=12), Str('from sys import (stdin as si, stdout as so, stderr as se,)', lineno=321, col_offset=12)], Load(), lineno=306, col_offset=18), lineno=306, col_offset=8), Assign([Name('fail', Store(), lineno=323, col_offset=8)], List([Str('import (os, sys)', lineno=324, col_offset=12), Str('import (os), (sys)', lineno=325, col_offset=12), Str('import ((os), (sys))', lineno=326, col_offset=12), Str('import (sys', lineno=327, col_offset=12), Str('import sys)', lineno=328, col_offset=12), Str('import (os,)', lineno=329, col_offset=12), Str('import os As bar', lineno=330, col_offset=12), Str('import os.path a bar', lineno=331, col_offset=12), Str('from sys import stdin As stdout', lineno=332, col_offset=12), Str('from sys import stdin a stdout', lineno=333, col_offset=12), Str('from (sys) import stdin', lineno=334, col_offset=12), Str('from __future__ import (nested_scopes', lineno=335, col_offset=12), Str('from __future__ import nested_scopes)', lineno=336, col_offset=12), Str('from __future__ import nested_scopes,\ngenerators', lineno=337, col_offset=12), Str('from sys import (stdin', lineno=338, col_offset=12), Str('from sys import stdin)', lineno=339, col_offset=12), Str('from sys import stdin, stdout,\nstderr', lineno=340, col_offset=12), Str('from sys import stdin si', lineno=341, col_offset=12), Str('from sys import stdin,from sys import (*)', lineno=342, col_offset=12), Str('from sys import (stdin,, stdout, stderr)', lineno=344, col_offset=12), Str('from sys import (stdin, stdout),', lineno=345, col_offset=12)], Load(), lineno=323, col_offset=15), lineno=323, col_offset=8), For(Name('stmt', Store(), lineno=347, col_offset=12), Name('succeed', Load(), lineno=347, col_offset=20), [Expr(Call(Name('compile', Load(), lineno=348, col_offset=12), [Name('stmt', Load(), lineno=348, col_offset=20), Str('tmp', lineno=348, col_offset=26), Str('exec', lineno=348, col_offset=33)], [], None, None, lineno=348, col_offset=12), lineno=348, col_offset=12)], [], lineno=347, col_offset=8), For(Name('stmt', Store(), lineno=349, col_offset=12), Name('fail', Load(), lineno=349, col_offset=20), [Expr(Call(Attribute(Name('self', Load(), lineno=350, col_offset=12), 'assertRaises', Load(), lineno=350, col_offset=12), [Name('SyntaxError', Load(), lineno=350, col_offset=30), Name('compile', Load(), lineno=350, col_offset=43), Name('stmt', Load(), lineno=350, col_offset=52), Str('tmp', lineno=350, col_offset=58), Str('exec', lineno=350, col_offset=65)], [], None, None, lineno=350, col_offset=12), lineno=350, col_offset=12)], [], lineno=349, col_offset=8)], [], lineno=305, col_offset=4), FunctionDef('test_for_distinct_code_objects', arguments([Name('self', Param(), lineno=352, col_offset=39)], None, None, []), [FunctionDef('f', arguments([], None, None, []), [Assign([Name('f1', Store(), lineno=355, col_offset=12)], Lambda(arguments([Name('x', Param(), lineno=355, col_offset=24)], None, None, [Num(1, lineno=355, col_offset=26)]), Name('x', Load(), lineno=355, col_offset=29), lineno=355, col_offset=17), lineno=355, col_offset=12), Assign([Name('f2', Store(), lineno=356, col_offset=12)], Lambda(arguments([Name('x', Param(), lineno=356, col_offset=24)], None, None, [Num(2, lineno=356, col_offset=26)]), Name('x', Load(), lineno=356, col_offset=29), lineno=356, col_offset=17), lineno=356, col_offset=12), Return(Tuple([Name('f1', Load(), lineno=357, col_offset=19), Name('f2', Load(), lineno=357, col_offset=23)], Load(), lineno=357, col_offset=19), lineno=357, col_offset=12)], [], lineno=354, col_offset=8), Assign([Tuple([Name('f1', Store(), lineno=358, col_offset=8), Name('f2', Store(), lineno=358, col_offset=12)], Store(), lineno=358, col_offset=8)], Call(Name('f', Load(), lineno=358, col_offset=17), [], [], None, None, lineno=358, col_offset=17), lineno=358, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=359, col_offset=8), 'assertNotEqual', Load(), lineno=359, col_offset=8), [Call(Name('id', Load(), lineno=359, col_offset=28), [Attribute(Name('f1', Load(), lineno=359, col_offset=31), 'func_code', Load(), lineno=359, col_offset=31)], [], None, None, lineno=359, col_offset=28), Call(Name('id', Load(), lineno=359, col_offset=46), [Attribute(Name('f2', Load(), lineno=359, col_offset=49), 'func_code', Load(), lineno=359, col_offset=49)], [], None, None, lineno=359, col_offset=46)], [], None, None, lineno=359, col_offset=8), lineno=359, col_offset=8)], [], lineno=352, col_offset=4), FunctionDef('test_lambda_doc', arguments([Name('self', Param(), lineno=361, col_offset=24)], None, None, []), [Assign([Name('l', Store(), lineno=362, col_offset=8)], Lambda(arguments([], None, None, []), Str('foo', lineno=362, col_offset=20), lineno=362, col_offset=12), lineno=362, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=363, col_offset=8), 'assertIsNone', Load(), lineno=363, col_offset=8), [Attribute(Name('l', Load(), lineno=363, col_offset=26), '__doc__', Load(), lineno=363, col_offset=26)], [], None, None, lineno=363, col_offset=8), lineno=363, col_offset=8)], [], lineno=361, col_offset=4), FunctionDef('test_unicode_encoding', arguments([Name('self', Param(), lineno=365, col_offset=30)], None, None, []), [Assign([Name('code', Store(), lineno=366, col_offset=8)], Str(u'# -*- coding: utf-8 -*-\npass\n', lineno=366, col_offset=15), lineno=366, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=367, col_offset=8), 'assertRaises', Load(), lineno=367, col_offset=8), [Name('SyntaxError', Load(), lineno=367, col_offset=26), Name('compile', Load(), lineno=367, col_offset=39), Name('code', Load(), lineno=367, col_offset=48), Str('tmp', lineno=367, col_offset=54), Str('exec', lineno=367, col_offset=61)], [], None, None, lineno=367, col_offset=8), lineno=367, col_offset=8)], [], lineno=365, col_offset=4), FunctionDef('test_subscripts', arguments([Name('self', Param(), lineno=369, col_offset=24)], None, None, []), [ClassDef('str_map', [Name('object', Load(), lineno=372, col_offset=22)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=373, col_offset=25)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=374, col_offset=16), 'data', Store(), lineno=374, col_offset=16)], Dict([], [], lineno=374, col_offset=28), lineno=374, col_offset=16)], [], lineno=373, col_offset=12), FunctionDef('__getitem__', arguments([Name('self', Param(), lineno=375, col_offset=28), Name('key', Param(), lineno=375, col_offset=34)], None, None, []), [Return(Subscript(Attribute(Name('self', Load(), lineno=376, col_offset=23), 'data', Load(), lineno=376, col_offset=23), Index(Call(Name('str', Load(), lineno=376, col_offset=33), [Name('key', Load(), lineno=376, col_offset=37)], [], None, None, lineno=376, col_offset=33)), Load(), lineno=376, col_offset=23), lineno=376, col_offset=16)], [], lineno=375, col_offset=12), FunctionDef('__setitem__', arguments([Name('self', Param(), lineno=377, col_offset=28), Name('key', Param(), lineno=377, col_offset=34), Name('value', Param(), lineno=377, col_offset=39)], None, None, []), [Assign([Subscript(Attribute(Name('self', Load(), lineno=378, col_offset=16), 'data', Load(), lineno=378, col_offset=16), Index(Call(Name('str', Load(), lineno=378, col_offset=26), [Name('key', Load(), lineno=378, col_offset=30)], [], None, None, lineno=378, col_offset=26)), Store(), lineno=378, col_offset=16)], Name('value', Load(), lineno=378, col_offset=38), lineno=378, col_offset=16)], [], lineno=377, col_offset=12), FunctionDef('__delitem__', arguments([Name('self', Param(), lineno=379, col_offset=28), Name('key', Param(), lineno=379, col_offset=34)], None, None, []), [Delete([Subscript(Attribute(Name('self', Load(), lineno=380, col_offset=20), 'data', Load(), lineno=380, col_offset=20), Index(Call(Name('str', Load(), lineno=380, col_offset=30), [Name('key', Load(), lineno=380, col_offset=34)], [], None, None, lineno=380, col_offset=30)), Del(), lineno=380, col_offset=20)], lineno=380, col_offset=16)], [], lineno=379, col_offset=12), FunctionDef('__contains__', arguments([Name('self', Param(), lineno=381, col_offset=29), Name('key', Param(), lineno=381, col_offset=35)], None, None, []), [Return(Compare(Call(Name('str', Load(), lineno=382, col_offset=23), [Name('key', Load(), lineno=382, col_offset=27)], [], None, None, lineno=382, col_offset=23), [In()], [Attribute(Name('self', Load(), lineno=382, col_offset=35), 'data', Load(), lineno=382, col_offset=35)], lineno=382, col_offset=23), lineno=382, col_offset=16)], [], lineno=381, col_offset=12)], [], lineno=372, col_offset=8), Assign([Name('d', Store(), lineno=383, col_offset=8)], Call(Name('str_map', Load(), lineno=383, col_offset=12), [], [], None, None, lineno=383, col_offset=12), lineno=383, col_offset=8), Assign([Subscript(Name('d', Load(), lineno=385, col_offset=8), Index(Num(1, lineno=385, col_offset=10)), Store(), lineno=385, col_offset=8)], Num(1, lineno=385, col_offset=15), lineno=385, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=386, col_offset=8), 'assertEqual', Load(), lineno=386, col_offset=8), [Subscript(Name('d', Load(), lineno=386, col_offset=25), Index(Num(1, lineno=386, col_offset=27)), Load(), lineno=386, col_offset=25), Num(1, lineno=386, col_offset=31)], [], None, None, lineno=386, col_offset=8), lineno=386, col_offset=8), AugAssign(Subscript(Name('d', Load(), lineno=387, col_offset=8), Index(Num(1, lineno=387, col_offset=10)), Store(), lineno=387, col_offset=8), Add(), Num(1, lineno=387, col_offset=16), lineno=387, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=388, col_offset=8), 'assertEqual', Load(), lineno=388, col_offset=8), [Subscript(Name('d', Load(), lineno=388, col_offset=25), Index(Num(1, lineno=388, col_offset=27)), Load(), lineno=388, col_offset=25), Num(2, lineno=388, col_offset=31)], [], None, None, lineno=388, col_offset=8), lineno=388, col_offset=8), Delete([Subscript(Name('d', Load(), lineno=389, col_offset=12), Index(Num(1, lineno=389, col_offset=14)), Del(), lineno=389, col_offset=12)], lineno=389, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=390, col_offset=8), 'assertNotIn', Load(), lineno=390, col_offset=8), [Num(1, lineno=390, col_offset=25), Name('d', Load(), lineno=390, col_offset=28)], [], None, None, lineno=390, col_offset=8), lineno=390, col_offset=8), Assign([Subscript(Name('d', Load(), lineno=392, col_offset=8), Index(Tuple([Num(1, lineno=392, col_offset=10), Num(1, lineno=392, col_offset=13)], Load(), lineno=392, col_offset=10)), Store(), lineno=392, col_offset=8)], Num(1, lineno=392, col_offset=18), lineno=392, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=393, col_offset=8), 'assertEqual', Load(), lineno=393, col_offset=8), [Subscript(Name('d', Load(), lineno=393, col_offset=25), Index(Tuple([Num(1, lineno=393, col_offset=27), Num(1, lineno=393, col_offset=30)], Load(), lineno=393, col_offset=27)), Load(), lineno=393, col_offset=25), Num(1, lineno=393, col_offset=34)], [], None, None, lineno=393, col_offset=8), lineno=393, col_offset=8), AugAssign(Subscript(Name('d', Load(), lineno=394, col_offset=8), Index(Tuple([Num(1, lineno=394, col_offset=10), Num(1, lineno=394, col_offset=13)], Load(), lineno=394, col_offset=10)), Store(), lineno=394, col_offset=8), Add(), Num(1, lineno=394, col_offset=19), lineno=394, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=395, col_offset=8), 'assertEqual', Load(), lineno=395, col_offset=8), [Subscript(Name('d', Load(), lineno=395, col_offset=25), Index(Tuple([Num(1, lineno=395, col_offset=27), Num(1, lineno=395, col_offset=30)], Load(), lineno=395, col_offset=27)), Load(), lineno=395, col_offset=25), Num(2, lineno=395, col_offset=34)], [], None, None, lineno=395, col_offset=8), lineno=395, col_offset=8), Delete([Subscript(Name('d', Load(), lineno=396, col_offset=12), Index(Tuple([Num(1, lineno=396, col_offset=14), Num(1, lineno=396, col_offset=17)], Load(), lineno=396, col_offset=14)), Del(), lineno=396, col_offset=12)], lineno=396, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=397, col_offset=8), 'assertNotIn', Load(), lineno=397, col_offset=8), [Tuple([Num(1, lineno=397, col_offset=26), Num(1, lineno=397, col_offset=29)], Load(), lineno=397, col_offset=26), Name('d', Load(), lineno=397, col_offset=33)], [], None, None, lineno=397, col_offset=8), lineno=397, col_offset=8), Assign([Subscript(Name('d', Load(), lineno=399, col_offset=8), Slice(Num(1, lineno=399, col_offset=10), Num(2, lineno=399, col_offset=12), None), Store(), lineno=399, col_offset=8)], Num(1, lineno=399, col_offset=17), lineno=399, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=400, col_offset=8), 'assertEqual', Load(), lineno=400, col_offset=8), [Subscript(Name('d', Load(), lineno=400, col_offset=25), Slice(Num(1, lineno=400, col_offset=27), Num(2, lineno=400, col_offset=29), None), Load(), lineno=400, col_offset=25), Num(1, lineno=400, col_offset=33)], [], None, None, lineno=400, col_offset=8), lineno=400, col_offset=8), AugAssign(Subscript(Name('d', Load(), lineno=401, col_offset=8), Slice(Num(1, lineno=401, col_offset=10), Num(2, lineno=401, col_offset=12), None), Store(), lineno=401, col_offset=8), Add(), Num(1, lineno=401, col_offset=18), lineno=401, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=402, col_offset=8), 'assertEqual', Load(), lineno=402, col_offset=8), [Subscript(Name('d', Load(), lineno=402, col_offset=25), Slice(Num(1, lineno=402, col_offset=27), Num(2, lineno=402, col_offset=29), None), Load(), lineno=402, col_offset=25), Num(2, lineno=402, col_offset=33)], [], None, None, lineno=402, col_offset=8), lineno=402, col_offset=8), Delete([Subscript(Name('d', Load(), lineno=403, col_offset=12), Slice(Num(1, lineno=403, col_offset=14), Num(2, lineno=403, col_offset=16), None), Del(), lineno=403, col_offset=12)], lineno=403, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=404, col_offset=8), 'assertNotIn', Load(), lineno=404, col_offset=8), [Call(Name('slice', Load(), lineno=404, col_offset=25), [Num(1, lineno=404, col_offset=31), Num(2, lineno=404, col_offset=34)], [], None, None, lineno=404, col_offset=25), Name('d', Load(), lineno=404, col_offset=38)], [], None, None, lineno=404, col_offset=8), lineno=404, col_offset=8), Assign([Subscript(Name('d', Load(), lineno=406, col_offset=8), ExtSlice([Slice(Num(1, lineno=406, col_offset=10), Num(2, lineno=406, col_offset=12), None), Slice(Num(1, lineno=406, col_offset=15), Num(2, lineno=406, col_offset=17), None)]), Store(), lineno=406, col_offset=8)], Num(1, lineno=406, col_offset=22), lineno=406, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=407, col_offset=8), 'assertEqual', Load(), lineno=407, col_offset=8), [Subscript(Name('d', Load(), lineno=407, col_offset=25), ExtSlice([Slice(Num(1, lineno=407, col_offset=27), Num(2, lineno=407, col_offset=29), None), Slice(Num(1, lineno=407, col_offset=32), Num(2, lineno=407, col_offset=34), None)]), Load(), lineno=407, col_offset=25), Num(1, lineno=407, col_offset=38)], [], None, None, lineno=407, col_offset=8), lineno=407, col_offset=8), AugAssign(Subscript(Name('d', Load(), lineno=408, col_offset=8), ExtSlice([Slice(Num(1, lineno=408, col_offset=10), Num(2, lineno=408, col_offset=12), None), Slice(Num(1, lineno=408, col_offset=15), Num(2, lineno=408, col_offset=17), None)]), Store(), lineno=408, col_offset=8), Add(), Num(1, lineno=408, col_offset=23), lineno=408, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=409, col_offset=8), 'assertEqual', Load(), lineno=409, col_offset=8), [Subscript(Name('d', Load(), lineno=409, col_offset=25), ExtSlice([Slice(Num(1, lineno=409, col_offset=27), Num(2, lineno=409, col_offset=29), None), Slice(Num(1, lineno=409, col_offset=32), Num(2, lineno=409, col_offset=34), None)]), Load(), lineno=409, col_offset=25), Num(2, lineno=409, col_offset=38)], [], None, None, lineno=409, col_offset=8), lineno=409, col_offset=8), Delete([Subscript(Name('d', Load(), lineno=410, col_offset=12), ExtSlice([Slice(Num(1, lineno=410, col_offset=14), Num(2, lineno=410, col_offset=16), None), Slice(Num(1, lineno=410, col_offset=19), Num(2, lineno=410, col_offset=21), None)]), Del(), lineno=410, col_offset=12)], lineno=410, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=411, col_offset=8), 'assertNotIn', Load(), lineno=411, col_offset=8), [Tuple([Call(Name('slice', Load(), lineno=411, col_offset=26), [Num(1, lineno=411, col_offset=32), Num(2, lineno=411, col_offset=35)], [], None, None, lineno=411, col_offset=26), Call(Name('slice', Load(), lineno=411, col_offset=39), [Num(1, lineno=411, col_offset=45), Num(2, lineno=411, col_offset=48)], [], None, None, lineno=411, col_offset=39)], Load(), lineno=411, col_offset=26), Name('d', Load(), lineno=411, col_offset=53)], [], None, None, lineno=411, col_offset=8), lineno=411, col_offset=8), Assign([Subscript(Name('d', Load(), lineno=413, col_offset=8), Slice(Num(1, lineno=413, col_offset=10), Num(2, lineno=413, col_offset=12), Num(3, lineno=413, col_offset=14)), Store(), lineno=413, col_offset=8)], Num(1, lineno=413, col_offset=19), lineno=413, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=414, col_offset=8), 'assertEqual', Load(), lineno=414, col_offset=8), [Subscript(Name('d', Load(), lineno=414, col_offset=25), Slice(Num(1, lineno=414, col_offset=27), Num(2, lineno=414, col_offset=29), Num(3, lineno=414, col_offset=31)), Load(), lineno=414, col_offset=25), Num(1, lineno=414, col_offset=35)], [], None, None, lineno=414, col_offset=8), lineno=414, col_offset=8), AugAssign(Subscript(Name('d', Load(), lineno=415, col_offset=8), Slice(Num(1, lineno=415, col_offset=10), Num(2, lineno=415, col_offset=12), Num(3, lineno=415, col_offset=14)), Store(), lineno=415, col_offset=8), Add(), Num(1, lineno=415, col_offset=20), lineno=415, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=416, col_offset=8), 'assertEqual', Load(), lineno=416, col_offset=8), [Subscript(Name('d', Load(), lineno=416, col_offset=25), Slice(Num(1, lineno=416, col_offset=27), Num(2, lineno=416, col_offset=29), Num(3, lineno=416, col_offset=31)), Load(), lineno=416, col_offset=25), Num(2, lineno=416, col_offset=35)], [], None, None, lineno=416, col_offset=8), lineno=416, col_offset=8), Delete([Subscript(Name('d', Load(), lineno=417, col_offset=12), Slice(Num(1, lineno=417, col_offset=14), Num(2, lineno=417, col_offset=16), Num(3, lineno=417, col_offset=18)), Del(), lineno=417, col_offset=12)], lineno=417, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=418, col_offset=8), 'assertNotIn', Load(), lineno=418, col_offset=8), [Call(Name('slice', Load(), lineno=418, col_offset=25), [Num(1, lineno=418, col_offset=31), Num(2, lineno=418, col_offset=34), Num(3, lineno=418, col_offset=37)], [], None, None, lineno=418, col_offset=25), Name('d', Load(), lineno=418, col_offset=41)], [], None, None, lineno=418, col_offset=8), lineno=418, col_offset=8), Assign([Subscript(Name('d', Load(), lineno=420, col_offset=8), ExtSlice([Slice(Num(1, lineno=420, col_offset=10), Num(2, lineno=420, col_offset=12), Num(3, lineno=420, col_offset=14)), Slice(Num(1, lineno=420, col_offset=17), Num(2, lineno=420, col_offset=19), Num(3, lineno=420, col_offset=21))]), Store(), lineno=420, col_offset=8)], Num(1, lineno=420, col_offset=26), lineno=420, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=421, col_offset=8), 'assertEqual', Load(), lineno=421, col_offset=8), [Subscript(Name('d', Load(), lineno=421, col_offset=25), ExtSlice([Slice(Num(1, lineno=421, col_offset=27), Num(2, lineno=421, col_offset=29), Num(3, lineno=421, col_offset=31)), Slice(Num(1, lineno=421, col_offset=34), Num(2, lineno=421, col_offset=36), Num(3, lineno=421, col_offset=38))]), Load(), lineno=421, col_offset=25), Num(1, lineno=421, col_offset=42)], [], None, None, lineno=421, col_offset=8), lineno=421, col_offset=8), AugAssign(Subscript(Name('d', Load(), lineno=422, col_offset=8), ExtSlice([Slice(Num(1, lineno=422, col_offset=10), Num(2, lineno=422, col_offset=12), Num(3, lineno=422, col_offset=14)), Slice(Num(1, lineno=422, col_offset=17), Num(2, lineno=422, col_offset=19), Num(3, lineno=422, col_offset=21))]), Store(), lineno=422, col_offset=8), Add(), Num(1, lineno=422, col_offset=27), lineno=422, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=423, col_offset=8), 'assertEqual', Load(), lineno=423, col_offset=8), [Subscript(Name('d', Load(), lineno=423, col_offset=25), ExtSlice([Slice(Num(1, lineno=423, col_offset=27), Num(2, lineno=423, col_offset=29), Num(3, lineno=423, col_offset=31)), Slice(Num(1, lineno=423, col_offset=34), Num(2, lineno=423, col_offset=36), Num(3, lineno=423, col_offset=38))]), Load(), lineno=423, col_offset=25), Num(2, lineno=423, col_offset=42)], [], None, None, lineno=423, col_offset=8), lineno=423, col_offset=8), Delete([Subscript(Name('d', Load(), lineno=424, col_offset=12), ExtSlice([Slice(Num(1, lineno=424, col_offset=14), Num(2, lineno=424, col_offset=16), Num(3, lineno=424, col_offset=18)), Slice(Num(1, lineno=424, col_offset=21), Num(2, lineno=424, col_offset=23), Num(3, lineno=424, col_offset=25))]), Del(), lineno=424, col_offset=12)], lineno=424, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=425, col_offset=8), 'assertNotIn', Load(), lineno=425, col_offset=8), [Tuple([Call(Name('slice', Load(), lineno=425, col_offset=26), [Num(1, lineno=425, col_offset=32), Num(2, lineno=425, col_offset=35), Num(3, lineno=425, col_offset=38)], [], None, None, lineno=425, col_offset=26), Call(Name('slice', Load(), lineno=425, col_offset=42), [Num(1, lineno=425, col_offset=48), Num(2, lineno=425, col_offset=51), Num(3, lineno=425, col_offset=54)], [], None, None, lineno=425, col_offset=42)], Load(), lineno=425, col_offset=26), Name('d', Load(), lineno=425, col_offset=59)], [], None, None, lineno=425, col_offset=8), lineno=425, col_offset=8), Assign([Subscript(Name('d', Load(), lineno=427, col_offset=8), Ellipsis(), Store(), lineno=427, col_offset=8)], Num(1, lineno=427, col_offset=17), lineno=427, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=428, col_offset=8), 'assertEqual', Load(), lineno=428, col_offset=8), [Subscript(Name('d', Load(), lineno=428, col_offset=25), Ellipsis(), Load(), lineno=428, col_offset=25), Num(1, lineno=428, col_offset=33)], [], None, None, lineno=428, col_offset=8), lineno=428, col_offset=8), AugAssign(Subscript(Name('d', Load(), lineno=429, col_offset=8), Ellipsis(), Store(), lineno=429, col_offset=8), Add(), Num(1, lineno=429, col_offset=18), lineno=429, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=430, col_offset=8), 'assertEqual', Load(), lineno=430, col_offset=8), [Subscript(Name('d', Load(), lineno=430, col_offset=25), Ellipsis(), Load(), lineno=430, col_offset=25), Num(2, lineno=430, col_offset=33)], [], None, None, lineno=430, col_offset=8), lineno=430, col_offset=8), Delete([Subscript(Name('d', Load(), lineno=431, col_offset=12), Ellipsis(), Del(), lineno=431, col_offset=12)], lineno=431, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=432, col_offset=8), 'assertNotIn', Load(), lineno=432, col_offset=8), [Name('Ellipsis', Load(), lineno=432, col_offset=25), Name('d', Load(), lineno=432, col_offset=35)], [], None, None, lineno=432, col_offset=8), lineno=432, col_offset=8), Assign([Subscript(Name('d', Load(), lineno=434, col_offset=8), ExtSlice([Ellipsis(), Ellipsis()]), Store(), lineno=434, col_offset=8)], Num(1, lineno=434, col_offset=22), lineno=434, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=435, col_offset=8), 'assertEqual', Load(), lineno=435, col_offset=8), [Subscript(Name('d', Load(), lineno=435, col_offset=25), ExtSlice([Ellipsis(), Ellipsis()]), Load(), lineno=435, col_offset=25), Num(1, lineno=435, col_offset=38)], [], None, None, lineno=435, col_offset=8), lineno=435, col_offset=8), AugAssign(Subscript(Name('d', Load(), lineno=436, col_offset=8), ExtSlice([Ellipsis(), Ellipsis()]), Store(), lineno=436, col_offset=8), Add(), Num(1, lineno=436, col_offset=23), lineno=436, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=437, col_offset=8), 'assertEqual', Load(), lineno=437, col_offset=8), [Subscript(Name('d', Load(), lineno=437, col_offset=25), ExtSlice([Ellipsis(), Ellipsis()]), Load(), lineno=437, col_offset=25), Num(2, lineno=437, col_offset=38)], [], None, None, lineno=437, col_offset=8), lineno=437, col_offset=8), Delete([Subscript(Name('d', Load(), lineno=438, col_offset=12), ExtSlice([Ellipsis(), Ellipsis()]), Del(), lineno=438, col_offset=12)], lineno=438, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=439, col_offset=8), 'assertNotIn', Load(), lineno=439, col_offset=8), [Tuple([Name('Ellipsis', Load(), lineno=439, col_offset=26), Name('Ellipsis', Load(), lineno=439, col_offset=36)], Load(), lineno=439, col_offset=26), Name('d', Load(), lineno=439, col_offset=47)], [], None, None, lineno=439, col_offset=8), lineno=439, col_offset=8)], [], lineno=369, col_offset=4), FunctionDef('test_mangling', arguments([Name('self', Param(), lineno=441, col_offset=22)], None, None, []), [ClassDef('A', [], [FunctionDef('f', arguments([], None, None, []), [Assign([Name('__mangled', Store(), lineno=444, col_offset=16)], Num(1, lineno=444, col_offset=28), lineno=444, col_offset=16), Assign([Name('__not_mangled__', Store(), lineno=445, col_offset=16)], Num(2, lineno=445, col_offset=34), lineno=445, col_offset=16), Import([alias('__mangled_mod', None)], lineno=446, col_offset=16), Import([alias('__package__.module', None)], lineno=447, col_offset=16)], [], lineno=443, col_offset=12)], [], lineno=442, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=449, col_offset=8), 'assertIn', Load(), lineno=449, col_offset=8), [Str('_A__mangled', lineno=449, col_offset=22), Attribute(Attribute(Attribute(Name('A', Load(), lineno=449, col_offset=37), 'f', Load(), lineno=449, col_offset=37), 'func_code', Load(), lineno=449, col_offset=37), 'co_varnames', Load(), lineno=449, col_offset=37)], [], None, None, lineno=449, col_offset=8), lineno=449, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=450, col_offset=8), 'assertIn', Load(), lineno=450, col_offset=8), [Str('__not_mangled__', lineno=450, col_offset=22), Attribute(Attribute(Attribute(Name('A', Load(), lineno=450, col_offset=41), 'f', Load(), lineno=450, col_offset=41), 'func_code', Load(), lineno=450, col_offset=41), 'co_varnames', Load(), lineno=450, col_offset=41)], [], None, None, lineno=450, col_offset=8), lineno=450, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=451, col_offset=8), 'assertIn', Load(), lineno=451, col_offset=8), [Str('_A__mangled_mod', lineno=451, col_offset=22), Attribute(Attribute(Attribute(Name('A', Load(), lineno=451, col_offset=41), 'f', Load(), lineno=451, col_offset=41), 'func_code', Load(), lineno=451, col_offset=41), 'co_varnames', Load(), lineno=451, col_offset=41)], [], None, None, lineno=451, col_offset=8), lineno=451, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=452, col_offset=8), 'assertIn', Load(), lineno=452, col_offset=8), [Str('__package__', lineno=452, col_offset=22), Attribute(Attribute(Attribute(Name('A', Load(), lineno=452, col_offset=37), 'f', Load(), lineno=452, col_offset=37), 'func_code', Load(), lineno=452, col_offset=37), 'co_varnames', Load(), lineno=452, col_offset=37)], [], None, None, lineno=452, col_offset=8), lineno=452, col_offset=8)], [], lineno=441, col_offset=4), FunctionDef('test_compile_ast', arguments([Name('self', Param(), lineno=454, col_offset=25)], None, None, []), [Assign([Name('fname', Store(), lineno=455, col_offset=8)], Name('__file__', Load(), lineno=455, col_offset=16), lineno=455, col_offset=8), If(Call(Attribute(Call(Attribute(Name('fname', Load(), lineno=456, col_offset=11), 'lower', Load(), lineno=456, col_offset=11), [], [], None, None, lineno=456, col_offset=11), 'endswith', Load(), lineno=456, col_offset=11), [Tuple([Str('pyc', lineno=456, col_offset=35), Str('pyo', lineno=456, col_offset=42)], Load(), lineno=456, col_offset=35)], [], None, None, lineno=456, col_offset=11), [Assign([Name('fname', Store(), lineno=457, col_offset=12)], Subscript(Name('fname', Load(), lineno=457, col_offset=20), Slice(None, Num(-1, lineno=457, col_offset=28), None), Load(), lineno=457, col_offset=20), lineno=457, col_offset=12)], [], lineno=456, col_offset=8), With(Call(Name('open', Load(), lineno=458, col_offset=13), [Name('fname', Load(), lineno=458, col_offset=18), Str('r', lineno=458, col_offset=25)], [], None, None, lineno=458, col_offset=13), Name('f', Store(), lineno=458, col_offset=33), [Assign([Name('fcontents', Store(), lineno=459, col_offset=12)], Call(Attribute(Name('f', Load(), lineno=459, col_offset=24), 'read', Load(), lineno=459, col_offset=24), [], [], None, None, lineno=459, col_offset=24), lineno=459, col_offset=12)], lineno=458, col_offset=13), Assign([Name('sample_code', Store(), lineno=460, col_offset=8)], List([List([Str('<assign>', lineno=461, col_offset=13), Str('x = 5', lineno=461, col_offset=25)], Load(), lineno=461, col_offset=12), List([Str('<print1>', lineno=462, col_offset=13), Str('print 1', lineno=462, col_offset=25)], Load(), lineno=462, col_offset=12), List([Str('<printv>', lineno=463, col_offset=13), Str('print v', lineno=463, col_offset=25)], Load(), lineno=463, col_offset=12), List([Str('<printTrue>', lineno=464, col_offset=13), Str('print True', lineno=464, col_offset=28)], Load(), lineno=464, col_offset=12), List([Str('<printList>', lineno=465, col_offset=13), Str('print []', lineno=465, col_offset=28)], Load(), lineno=465, col_offset=12), List([Str('<ifblock>', lineno=466, col_offset=13), Str('if True:\n    pass\n', lineno=466, col_offset=26)], Load(), lineno=466, col_offset=12), List([Str('<forblock>', lineno=467, col_offset=13), Str('for n in [1, 2, 3]:\n    print n\n', lineno=467, col_offset=27)], Load(), lineno=467, col_offset=12), List([Str('<deffunc>', lineno=468, col_offset=13), Str('def foo():\n    pass\nfoo()\n', lineno=468, col_offset=26)], Load(), lineno=468, col_offset=12), List([Name('fname', Load(), lineno=469, col_offset=13), Name('fcontents', Load(), lineno=469, col_offset=20)], Load(), lineno=469, col_offset=12)], Load(), lineno=460, col_offset=22), lineno=460, col_offset=8), For(Tuple([Name('fname', Store(), lineno=472, col_offset=12), Name('code', Store(), lineno=472, col_offset=19)], Store(), lineno=472, col_offset=12), Name('sample_code', Load(), lineno=472, col_offset=27), [Assign([Name('co1', Store(), lineno=473, col_offset=12)], Call(Name('compile', Load(), lineno=473, col_offset=18), [Name('code', Load(), lineno=473, col_offset=26), BinOp(Str('%s1', lineno=473, col_offset=32), Mod(), Name('fname', Load(), lineno=473, col_offset=40), lineno=473, col_offset=32), Str('exec', lineno=473, col_offset=47)], [], None, None, lineno=473, col_offset=18), lineno=473, col_offset=12), Assign([Name('ast', Store(), lineno=474, col_offset=12)], Call(Name('compile', Load(), lineno=474, col_offset=18), [Name('code', Load(), lineno=474, col_offset=26), BinOp(Str('%s2', lineno=474, col_offset=32), Mod(), Name('fname', Load(), lineno=474, col_offset=40), lineno=474, col_offset=32), Str('exec', lineno=474, col_offset=47), Attribute(Name('_ast', Load(), lineno=474, col_offset=55), 'PyCF_ONLY_AST', Load(), lineno=474, col_offset=55)], [], None, None, lineno=474, col_offset=18), lineno=474, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=475, col_offset=12), 'assertTrue', Load(), lineno=475, col_offset=12), [Compare(Call(Name('type', Load(), lineno=475, col_offset=28), [Name('ast', Load(), lineno=475, col_offset=33)], [], None, None, lineno=475, col_offset=28), [Eq()], [Attribute(Name('_ast', Load(), lineno=475, col_offset=41), 'Module', Load(), lineno=475, col_offset=41)], lineno=475, col_offset=28)], [], None, None, lineno=475, col_offset=12), lineno=475, col_offset=12), Assign([Name('co2', Store(), lineno=476, col_offset=12)], Call(Name('compile', Load(), lineno=476, col_offset=18), [Name('ast', Load(), lineno=476, col_offset=26), BinOp(Str('%s3', lineno=476, col_offset=31), Mod(), Name('fname', Load(), lineno=476, col_offset=39), lineno=476, col_offset=31), Str('exec', lineno=476, col_offset=46)], [], None, None, lineno=476, col_offset=18), lineno=476, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=477, col_offset=12), 'assertEqual', Load(), lineno=477, col_offset=12), [Name('co1', Load(), lineno=477, col_offset=29), Name('co2', Load(), lineno=477, col_offset=34)], [], None, None, lineno=477, col_offset=12), lineno=477, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=479, col_offset=12), 'assertEqual', Load(), lineno=479, col_offset=12), [Attribute(Name('co2', Load(), lineno=479, col_offset=29), 'co_filename', Load(), lineno=479, col_offset=29), BinOp(Str('%s3', lineno=479, col_offset=46), Mod(), Name('fname', Load(), lineno=479, col_offset=54), lineno=479, col_offset=46)], [], None, None, lineno=479, col_offset=12), lineno=479, col_offset=12)], [], lineno=472, col_offset=8), Assign([Name('co1', Store(), lineno=482, col_offset=8)], Call(Name('compile', Load(), lineno=482, col_offset=14), [Str('print 1', lineno=482, col_offset=22), Str('<string>', lineno=482, col_offset=33), Str('exec', lineno=482, col_offset=45), Attribute(Name('_ast', Load(), lineno=482, col_offset=53), 'PyCF_ONLY_AST', Load(), lineno=482, col_offset=53)], [], None, None, lineno=482, col_offset=14), lineno=482, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=483, col_offset=8), 'assertRaises', Load(), lineno=483, col_offset=8), [Name('TypeError', Load(), lineno=483, col_offset=26), Name('compile', Load(), lineno=483, col_offset=37), Name('co1', Load(), lineno=483, col_offset=46), Str('<ast>', lineno=483, col_offset=51), Str('eval', lineno=483, col_offset=60)], [], None, None, lineno=483, col_offset=8), lineno=483, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=486, col_offset=8), 'assertRaises', Load(), lineno=486, col_offset=8), [Name('TypeError', Load(), lineno=486, col_offset=26), Name('compile', Load(), lineno=486, col_offset=37), Call(Attribute(Name('_ast', Load(), lineno=486, col_offset=46), 'If', Load(), lineno=486, col_offset=46), [], [], None, None, lineno=486, col_offset=46), Str('<ast>', lineno=486, col_offset=57), Str('exec', lineno=486, col_offset=66)], [], None, None, lineno=486, col_offset=8), lineno=486, col_offset=8), Assign([Name('ast', Store(), lineno=489, col_offset=8)], Call(Attribute(Name('_ast', Load(), lineno=489, col_offset=14), 'Module', Load(), lineno=489, col_offset=14), [], [], None, None, lineno=489, col_offset=14), lineno=489, col_offset=8), Assign([Attribute(Name('ast', Load(), lineno=490, col_offset=8), 'body', Store(), lineno=490, col_offset=8)], List([Call(Attribute(Name('_ast', Load(), lineno=490, col_offset=20), 'BoolOp', Load(), lineno=490, col_offset=20), [], [], None, None, lineno=490, col_offset=20)], Load(), lineno=490, col_offset=19), lineno=490, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=491, col_offset=8), 'assertRaises', Load(), lineno=491, col_offset=8), [Name('TypeError', Load(), lineno=491, col_offset=26), Name('compile', Load(), lineno=491, col_offset=37), Name('ast', Load(), lineno=491, col_offset=46), Str('<ast>', lineno=491, col_offset=51), Str('exec', lineno=491, col_offset=60)], [], None, None, lineno=491, col_offset=8), lineno=491, col_offset=8)], [], lineno=454, col_offset=4)], [], lineno=7, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=495, col_offset=4), 'run_unittest', Load(), lineno=495, col_offset=4), [Name('TestSpecifics', Load(), lineno=495, col_offset=30)], [], None, None, lineno=495, col_offset=4), lineno=495, col_offset=4)], [], lineno=494, col_offset=0), If(Compare(Name('__name__', Load(), lineno=497, col_offset=3), [Eq()], [Str('__main__', lineno=497, col_offset=15)], lineno=497, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=498, col_offset=4), [], [], None, None, lineno=498, col_offset=4), lineno=498, col_offset=4)], [], lineno=497, col_offset=0)])
