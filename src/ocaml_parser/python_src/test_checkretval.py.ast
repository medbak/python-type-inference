Module([Import([alias('unittest', None)], lineno=1, col_offset=0), ImportFrom('ctypes', [alias('*', None)], 0, lineno=3, col_offset=0), ClassDef('CHECKED', [Name('c_int', Load(), lineno=5, col_offset=14)], [FunctionDef('_check_retval_', arguments([Name('value', Param(), lineno=6, col_offset=23)], None, None, []), [Return(Call(Name('str', Load(), lineno=8, col_offset=15), [Attribute(Name('value', Load(), lineno=8, col_offset=19), 'value', Load(), lineno=8, col_offset=19)], [], None, None, lineno=8, col_offset=15), lineno=8, col_offset=8)], [], lineno=6, col_offset=4), Assign([Name('_check_retval_', Store(), lineno=9, col_offset=4)], Call(Name('staticmethod', Load(), lineno=9, col_offset=21), [Name('_check_retval_', Load(), lineno=9, col_offset=34)], [], None, None, lineno=9, col_offset=21), lineno=9, col_offset=4)], [], lineno=5, col_offset=0), ClassDef('Test', [Attribute(Name('unittest', Load(), lineno=11, col_offset=11), 'TestCase', Load(), lineno=11, col_offset=11)], [FunctionDef('test_checkretval', arguments([Name('self', Param(), lineno=13, col_offset=25)], None, None, []), [Import([alias('_ctypes_test', None)], lineno=15, col_offset=8), Assign([Name('dll', Store(), lineno=16, col_offset=8)], Call(Name('CDLL', Load(), lineno=16, col_offset=14), [Attribute(Name('_ctypes_test', Load(), lineno=16, col_offset=19), '__file__', Load(), lineno=16, col_offset=19)], [], None, None, lineno=16, col_offset=14), lineno=16, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=17, col_offset=8), 'assertEqual', Load(), lineno=17, col_offset=8), [Num(42, lineno=17, col_offset=25), Call(Attribute(Name('dll', Load(), lineno=17, col_offset=29), '_testfunc_p_p', Load(), lineno=17, col_offset=29), [Num(42, lineno=17, col_offset=47)], [], None, None, lineno=17, col_offset=29)], [], None, None, lineno=17, col_offset=8), lineno=17, col_offset=8), Assign([Attribute(Attribute(Name('dll', Load(), lineno=19, col_offset=8), '_testfunc_p_p', Load(), lineno=19, col_offset=8), 'restype', Store(), lineno=19, col_offset=8)], Name('CHECKED', Load(), lineno=19, col_offset=36), lineno=19, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=20, col_offset=8), 'assertEqual', Load(), lineno=20, col_offset=8), [Str('42', lineno=20, col_offset=25), Call(Attribute(Name('dll', Load(), lineno=20, col_offset=31), '_testfunc_p_p', Load(), lineno=20, col_offset=31), [Num(42, lineno=20, col_offset=49)], [], None, None, lineno=20, col_offset=31)], [], None, None, lineno=20, col_offset=8), lineno=20, col_offset=8), Assign([Attribute(Attribute(Name('dll', Load(), lineno=22, col_offset=8), '_testfunc_p_p', Load(), lineno=22, col_offset=8), 'restype', Store(), lineno=22, col_offset=8)], Name('None', Load(), lineno=22, col_offset=36), lineno=22, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=23, col_offset=8), 'assertEqual', Load(), lineno=23, col_offset=8), [Name('None', Load(), lineno=23, col_offset=25), Call(Attribute(Name('dll', Load(), lineno=23, col_offset=31), '_testfunc_p_p', Load(), lineno=23, col_offset=31), [Num(42, lineno=23, col_offset=49)], [], None, None, lineno=23, col_offset=31)], [], None, None, lineno=23, col_offset=8), lineno=23, col_offset=8), Delete([Attribute(Attribute(Name('dll', Load(), lineno=25, col_offset=12), '_testfunc_p_p', Load(), lineno=25, col_offset=12), 'restype', Del(), lineno=25, col_offset=12)], lineno=25, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=26, col_offset=8), 'assertEqual', Load(), lineno=26, col_offset=8), [Num(42, lineno=26, col_offset=25), Call(Attribute(Name('dll', Load(), lineno=26, col_offset=29), '_testfunc_p_p', Load(), lineno=26, col_offset=29), [Num(42, lineno=26, col_offset=47)], [], None, None, lineno=26, col_offset=29)], [], None, None, lineno=26, col_offset=8), lineno=26, col_offset=8)], [], lineno=13, col_offset=4), TryExcept([Expr(Name('oledll', Load(), lineno=29, col_offset=8), lineno=29, col_offset=8)], [ExceptHandler(Name('NameError', Load(), lineno=30, col_offset=11), None, [Pass( lineno=31, col_offset=8)], lineno=30, col_offset=4)], [FunctionDef('test_oledll', arguments([Name('self', Param(), lineno=33, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=34, col_offset=12), 'assertRaises', Load(), lineno=34, col_offset=12), [Name('WindowsError', Load(), lineno=34, col_offset=30), Attribute(Attribute(Name('oledll', Load(), lineno=35, col_offset=34), 'oleaut32', Load(), lineno=35, col_offset=34), 'CreateTypeLib2', Load(), lineno=35, col_offset=34), Num(0, lineno=36, col_offset=34), Name('None', Load(), lineno=36, col_offset=37), Name('None', Load(), lineno=36, col_offset=43)], [], None, None, lineno=34, col_offset=12), lineno=34, col_offset=12)], [], lineno=33, col_offset=8)], lineno=28, col_offset=4)], [], lineno=11, col_offset=0), If(Compare(Name('__name__', Load(), lineno=38, col_offset=3), [Eq()], [Str('__main__', lineno=38, col_offset=15)], lineno=38, col_offset=3), [Expr(Call(Attribute(Name('unittest', Load(), lineno=39, col_offset=4), 'main', Load(), lineno=39, col_offset=4), [], [], None, None, lineno=39, col_offset=4), lineno=39, col_offset=4)], [], lineno=38, col_offset=0)])
