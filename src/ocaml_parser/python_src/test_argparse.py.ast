Module([Import([alias('codecs', None)], lineno=3, col_offset=0), Import([alias('inspect', None)], lineno=4, col_offset=0), Import([alias('os', None)], lineno=5, col_offset=0), Import([alias('shutil', None)], lineno=6, col_offset=0), Import([alias('sys', None)], lineno=7, col_offset=0), Import([alias('textwrap', None)], lineno=8, col_offset=0), Import([alias('tempfile', None)], lineno=9, col_offset=0), Import([alias('unittest', None)], lineno=10, col_offset=0), Import([alias('argparse', None)], lineno=11, col_offset=0), ImportFrom('StringIO', [alias('StringIO', None)], 0, lineno=13, col_offset=0), ClassDef('StdIOBuffer', [Name('StringIO', Load(), lineno=15, col_offset=18)], [Pass( lineno=16, col_offset=4)], [], lineno=15, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=18, col_offset=0), ClassDef('TestCase', [Attribute(Name('unittest', Load(), lineno=20, col_offset=15), 'TestCase', Load(), lineno=20, col_offset=15)], [FunctionDef('assertEqual', arguments([Name('self', Param(), lineno=22, col_offset=20), Name('obj1', Param(), lineno=22, col_offset=26), Name('obj2', Param(), lineno=22, col_offset=32)], None, None, []), [If(Compare(Name('obj1', Load(), lineno=23, col_offset=11), [NotEq()], [Name('obj2', Load(), lineno=23, col_offset=19)], lineno=23, col_offset=11), [Print(None, [Str('', lineno=24, col_offset=18)], True, lineno=24, col_offset=12), Print(None, [Call(Name('repr', Load(), lineno=25, col_offset=18), [Name('obj1', Load(), lineno=25, col_offset=23)], [], None, None, lineno=25, col_offset=18)], True, lineno=25, col_offset=12), Print(None, [Call(Name('repr', Load(), lineno=26, col_offset=18), [Name('obj2', Load(), lineno=26, col_offset=23)], [], None, None, lineno=26, col_offset=18)], True, lineno=26, col_offset=12), Print(None, [Name('obj1', Load(), lineno=27, col_offset=18)], True, lineno=27, col_offset=12), Print(None, [Name('obj2', Load(), lineno=28, col_offset=18)], True, lineno=28, col_offset=12)], [], lineno=23, col_offset=8), Expr(Call(Attribute(Call(Name('super', Load(), lineno=29, col_offset=8), [Name('TestCase', Load(), lineno=29, col_offset=14), Name('self', Load(), lineno=29, col_offset=24)], [], None, None, lineno=29, col_offset=8), 'assertEqual', Load(), lineno=29, col_offset=8), [Name('obj1', Load(), lineno=29, col_offset=42), Name('obj2', Load(), lineno=29, col_offset=48)], [], None, None, lineno=29, col_offset=8), lineno=29, col_offset=8)], [], lineno=22, col_offset=4), FunctionDef('setUp', arguments([Name('self', Param(), lineno=31, col_offset=14)], None, None, []), [Assign([Name('env', Store(), lineno=35, col_offset=8)], Call(Attribute(Name('test_support', Load(), lineno=35, col_offset=14), 'EnvironmentVarGuard', Load(), lineno=35, col_offset=14), [], [], None, None, lineno=35, col_offset=14), lineno=35, col_offset=8), Expr(Call(Attribute(Name('env', Load(), lineno=36, col_offset=8), 'unset', Load(), lineno=36, col_offset=8), [Str('COLUMNS', lineno=36, col_offset=18)], [], None, None, lineno=36, col_offset=8), lineno=36, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=37, col_offset=8), 'addCleanup', Load(), lineno=37, col_offset=8), [Attribute(Name('env', Load(), lineno=37, col_offset=24), '__exit__', Load(), lineno=37, col_offset=24)], [], None, None, lineno=37, col_offset=8), lineno=37, col_offset=8)], [], lineno=31, col_offset=4)], [], lineno=20, col_offset=0), ClassDef('TempDirMixin', [Name('object', Load(), lineno=40, col_offset=19)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=42, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=43, col_offset=8), 'temp_dir', Store(), lineno=43, col_offset=8)], Call(Attribute(Name('tempfile', Load(), lineno=43, col_offset=24), 'mkdtemp', Load(), lineno=43, col_offset=24), [], [], None, None, lineno=43, col_offset=24), lineno=43, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=44, col_offset=8), 'old_dir', Store(), lineno=44, col_offset=8)], Call(Attribute(Name('os', Load(), lineno=44, col_offset=23), 'getcwd', Load(), lineno=44, col_offset=23), [], [], None, None, lineno=44, col_offset=23), lineno=44, col_offset=8), Expr(Call(Attribute(Name('os', Load(), lineno=45, col_offset=8), 'chdir', Load(), lineno=45, col_offset=8), [Attribute(Name('self', Load(), lineno=45, col_offset=17), 'temp_dir', Load(), lineno=45, col_offset=17)], [], None, None, lineno=45, col_offset=8), lineno=45, col_offset=8)], [], lineno=42, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=47, col_offset=17)], None, None, []), [Expr(Call(Attribute(Name('os', Load(), lineno=48, col_offset=8), 'chdir', Load(), lineno=48, col_offset=8), [Attribute(Name('self', Load(), lineno=48, col_offset=17), 'old_dir', Load(), lineno=48, col_offset=17)], [], None, None, lineno=48, col_offset=8), lineno=48, col_offset=8), While(Name('True', Load(), lineno=49, col_offset=14), [TryExcept([Expr(Call(Attribute(Name('shutil', Load(), lineno=51, col_offset=16), 'rmtree', Load(), lineno=51, col_offset=16), [Attribute(Name('self', Load(), lineno=51, col_offset=30), 'temp_dir', Load(), lineno=51, col_offset=30)], [], None, None, lineno=51, col_offset=16), lineno=51, col_offset=16)], [ExceptHandler(Name('WindowsError', Load(), lineno=52, col_offset=19), None, [Continue( lineno=53, col_offset=16)], lineno=52, col_offset=12)], [Break( lineno=55, col_offset=16)], lineno=50, col_offset=12)], [], lineno=49, col_offset=8)], [], lineno=47, col_offset=4)], [], lineno=40, col_offset=0), ClassDef('Sig', [Name('object', Load(), lineno=58, col_offset=10)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=60, col_offset=17)], 'args', 'kwargs', []), [Assign([Attribute(Name('self', Load(), lineno=61, col_offset=8), 'args', Store(), lineno=61, col_offset=8)], Name('args', Load(), lineno=61, col_offset=20), lineno=61, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=62, col_offset=8), 'kwargs', Store(), lineno=62, col_offset=8)], Name('kwargs', Load(), lineno=62, col_offset=22), lineno=62, col_offset=8)], [], lineno=60, col_offset=4)], [], lineno=58, col_offset=0), ClassDef('NS', [Name('object', Load(), lineno=65, col_offset=9)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=67, col_offset=17)], None, 'kwargs', []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=68, col_offset=8), '__dict__', Load(), lineno=68, col_offset=8), 'update', Load(), lineno=68, col_offset=8), [Name('kwargs', Load(), lineno=68, col_offset=29)], [], None, None, lineno=68, col_offset=8), lineno=68, col_offset=8)], [], lineno=67, col_offset=4), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=70, col_offset=17)], None, None, []), [Assign([Name('sorted_items', Store(), lineno=71, col_offset=8)], Call(Name('sorted', Load(), lineno=71, col_offset=23), [Call(Attribute(Attribute(Name('self', Load(), lineno=71, col_offset=30), '__dict__', Load(), lineno=71, col_offset=30), 'items', Load(), lineno=71, col_offset=30), [], [], None, None, lineno=71, col_offset=30)], [], None, None, lineno=71, col_offset=23), lineno=71, col_offset=8), Assign([Name('kwarg_str', Store(), lineno=72, col_offset=8)], Call(Attribute(Str(', ', lineno=72, col_offset=20), 'join', Load(), lineno=72, col_offset=20), [ListComp(BinOp(Str('%s=%r', lineno=72, col_offset=31), Mod(), Name('tup', Load(), lineno=72, col_offset=41), lineno=72, col_offset=31), [comprehension(Name('tup', Store(), lineno=72, col_offset=49), Name('sorted_items', Load(), lineno=72, col_offset=56), [])], lineno=72, col_offset=31)], [], None, None, lineno=72, col_offset=20), lineno=72, col_offset=8), Return(BinOp(Str('%s(%s)', lineno=73, col_offset=15), Mod(), Tuple([Attribute(Call(Name('type', Load(), lineno=73, col_offset=27), [Name('self', Load(), lineno=73, col_offset=32)], [], None, None, lineno=73, col_offset=27), '__name__', Load(), lineno=73, col_offset=27), Name('kwarg_str', Load(), lineno=73, col_offset=48)], Load(), lineno=73, col_offset=27), lineno=73, col_offset=15), lineno=73, col_offset=8)], [], lineno=70, col_offset=4), Assign([Name('__hash__', Store(), lineno=75, col_offset=4)], Name('None', Load(), lineno=75, col_offset=15), lineno=75, col_offset=4), FunctionDef('__eq__', arguments([Name('self', Param(), lineno=77, col_offset=15), Name('other', Param(), lineno=77, col_offset=21)], None, None, []), [Return(Compare(Call(Name('vars', Load(), lineno=78, col_offset=15), [Name('self', Load(), lineno=78, col_offset=20)], [], None, None, lineno=78, col_offset=15), [Eq()], [Call(Name('vars', Load(), lineno=78, col_offset=29), [Name('other', Load(), lineno=78, col_offset=34)], [], None, None, lineno=78, col_offset=29)], lineno=78, col_offset=15), lineno=78, col_offset=8)], [], lineno=77, col_offset=4), FunctionDef('__ne__', arguments([Name('self', Param(), lineno=80, col_offset=15), Name('other', Param(), lineno=80, col_offset=21)], None, None, []), [Return(UnaryOp(Not(), Compare(Name('self', Load(), lineno=81, col_offset=20), [Eq()], [Name('other', Load(), lineno=81, col_offset=28)], lineno=81, col_offset=20), lineno=81, col_offset=15), lineno=81, col_offset=8)], [], lineno=80, col_offset=4)], [], lineno=65, col_offset=0), ClassDef('ArgumentParserError', [Name('Exception', Load(), lineno=84, col_offset=26)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=86, col_offset=17), Name('message', Param(), lineno=86, col_offset=23), Name('stdout', Param(), lineno=86, col_offset=32), Name('stderr', Param(), lineno=86, col_offset=45), Name('error_code', Param(), lineno=86, col_offset=58)], None, None, [Name('None', Load(), lineno=86, col_offset=39), Name('None', Load(), lineno=86, col_offset=52), Name('None', Load(), lineno=86, col_offset=69)]), [Expr(Call(Attribute(Name('Exception', Load(), lineno=87, col_offset=8), '__init__', Load(), lineno=87, col_offset=8), [Name('self', Load(), lineno=87, col_offset=27), Name('message', Load(), lineno=87, col_offset=33), Name('stdout', Load(), lineno=87, col_offset=42), Name('stderr', Load(), lineno=87, col_offset=50)], [], None, None, lineno=87, col_offset=8), lineno=87, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=88, col_offset=8), 'message', Store(), lineno=88, col_offset=8)], Name('message', Load(), lineno=88, col_offset=23), lineno=88, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=89, col_offset=8), 'stdout', Store(), lineno=89, col_offset=8)], Name('stdout', Load(), lineno=89, col_offset=22), lineno=89, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=90, col_offset=8), 'stderr', Store(), lineno=90, col_offset=8)], Name('stderr', Load(), lineno=90, col_offset=22), lineno=90, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=91, col_offset=8), 'error_code', Store(), lineno=91, col_offset=8)], Name('error_code', Load(), lineno=91, col_offset=26), lineno=91, col_offset=8)], [], lineno=86, col_offset=4)], [], lineno=84, col_offset=0), FunctionDef('stderr_to_parser_error', arguments([Name('parse_args', Param(), lineno=94, col_offset=27)], 'args', 'kwargs', []), [If(BoolOp(Or(), [Call(Name('isinstance', Load(), lineno=98, col_offset=7), [Attribute(Name('sys', Load(), lineno=98, col_offset=18), 'stderr', Load(), lineno=98, col_offset=18), Name('StdIOBuffer', Load(), lineno=98, col_offset=30)], [], None, None, lineno=98, col_offset=7), Call(Name('isinstance', Load(), lineno=98, col_offset=46), [Attribute(Name('sys', Load(), lineno=98, col_offset=57), 'stdout', Load(), lineno=98, col_offset=57), Name('StdIOBuffer', Load(), lineno=98, col_offset=69)], [], None, None, lineno=98, col_offset=46)], lineno=98, col_offset=7), [Return(Call(Name('parse_args', Load(), lineno=99, col_offset=15), [], [], Name('args', Load(), lineno=99, col_offset=27), Name('kwargs', Load(), lineno=99, col_offset=35), lineno=99, col_offset=15), lineno=99, col_offset=8)], [], lineno=98, col_offset=4), Assign([Name('old_stdout', Store(), lineno=103, col_offset=4)], Attribute(Name('sys', Load(), lineno=103, col_offset=17), 'stdout', Load(), lineno=103, col_offset=17), lineno=103, col_offset=4), Assign([Name('old_stderr', Store(), lineno=104, col_offset=4)], Attribute(Name('sys', Load(), lineno=104, col_offset=17), 'stderr', Load(), lineno=104, col_offset=17), lineno=104, col_offset=4), Assign([Attribute(Name('sys', Load(), lineno=105, col_offset=4), 'stdout', Store(), lineno=105, col_offset=4)], Call(Name('StdIOBuffer', Load(), lineno=105, col_offset=17), [], [], None, None, lineno=105, col_offset=17), lineno=105, col_offset=4), Assign([Attribute(Name('sys', Load(), lineno=106, col_offset=4), 'stderr', Store(), lineno=106, col_offset=4)], Call(Name('StdIOBuffer', Load(), lineno=106, col_offset=17), [], [], None, None, lineno=106, col_offset=17), lineno=106, col_offset=4), TryFinally([TryExcept([Assign([Name('result', Store(), lineno=109, col_offset=12)], Call(Name('parse_args', Load(), lineno=109, col_offset=21), [], [], Name('args', Load(), lineno=109, col_offset=33), Name('kwargs', Load(), lineno=109, col_offset=41), lineno=109, col_offset=21), lineno=109, col_offset=12), For(Name('key', Store(), lineno=110, col_offset=16), Call(Name('list', Load(), lineno=110, col_offset=23), [Call(Name('vars', Load(), lineno=110, col_offset=28), [Name('result', Load(), lineno=110, col_offset=33)], [], None, None, lineno=110, col_offset=28)], [], None, None, lineno=110, col_offset=23), [If(Compare(Call(Name('getattr', Load(), lineno=111, col_offset=19), [Name('result', Load(), lineno=111, col_offset=27), Name('key', Load(), lineno=111, col_offset=35)], [], None, None, lineno=111, col_offset=19), [Is()], [Attribute(Name('sys', Load(), lineno=111, col_offset=43), 'stdout', Load(), lineno=111, col_offset=43)], lineno=111, col_offset=19), [Expr(Call(Name('setattr', Load(), lineno=112, col_offset=20), [Name('result', Load(), lineno=112, col_offset=28), Name('key', Load(), lineno=112, col_offset=36), Name('old_stdout', Load(), lineno=112, col_offset=41)], [], None, None, lineno=112, col_offset=20), lineno=112, col_offset=20)], [], lineno=111, col_offset=16), If(Compare(Call(Name('getattr', Load(), lineno=113, col_offset=19), [Name('result', Load(), lineno=113, col_offset=27), Name('key', Load(), lineno=113, col_offset=35)], [], None, None, lineno=113, col_offset=19), [Is()], [Attribute(Name('sys', Load(), lineno=113, col_offset=43), 'stderr', Load(), lineno=113, col_offset=43)], lineno=113, col_offset=19), [Expr(Call(Name('setattr', Load(), lineno=114, col_offset=20), [Name('result', Load(), lineno=114, col_offset=28), Name('key', Load(), lineno=114, col_offset=36), Name('old_stderr', Load(), lineno=114, col_offset=41)], [], None, None, lineno=114, col_offset=20), lineno=114, col_offset=20)], [], lineno=113, col_offset=16)], [], lineno=110, col_offset=12), Return(Name('result', Load(), lineno=115, col_offset=19), lineno=115, col_offset=12)], [ExceptHandler(Name('SystemExit', Load(), lineno=116, col_offset=15), None, [Assign([Name('code', Store(), lineno=117, col_offset=12)], Attribute(Subscript(Call(Attribute(Name('sys', Load(), lineno=117, col_offset=19), 'exc_info', Load(), lineno=117, col_offset=19), [], [], None, None, lineno=117, col_offset=19), Index(Num(1, lineno=117, col_offset=34)), Load(), lineno=117, col_offset=19), 'code', Load(), lineno=117, col_offset=19), lineno=117, col_offset=12), Assign([Name('stdout', Store(), lineno=118, col_offset=12)], Call(Attribute(Attribute(Name('sys', Load(), lineno=118, col_offset=21), 'stdout', Load(), lineno=118, col_offset=21), 'getvalue', Load(), lineno=118, col_offset=21), [], [], None, None, lineno=118, col_offset=21), lineno=118, col_offset=12), Assign([Name('stderr', Store(), lineno=119, col_offset=12)], Call(Attribute(Attribute(Name('sys', Load(), lineno=119, col_offset=21), 'stderr', Load(), lineno=119, col_offset=21), 'getvalue', Load(), lineno=119, col_offset=21), [], [], None, None, lineno=119, col_offset=21), lineno=119, col_offset=12), Raise(Call(Name('ArgumentParserError', Load(), lineno=120, col_offset=18), [Str('SystemExit', lineno=120, col_offset=38), Name('stdout', Load(), lineno=120, col_offset=52), Name('stderr', Load(), lineno=120, col_offset=60), Name('code', Load(), lineno=120, col_offset=68)], [], None, None, lineno=120, col_offset=18), None, None, lineno=120, col_offset=12)], lineno=116, col_offset=8)], [], lineno=108, col_offset=8)], [Assign([Attribute(Name('sys', Load(), lineno=122, col_offset=8), 'stdout', Store(), lineno=122, col_offset=8)], Name('old_stdout', Load(), lineno=122, col_offset=21), lineno=122, col_offset=8), Assign([Attribute(Name('sys', Load(), lineno=123, col_offset=8), 'stderr', Store(), lineno=123, col_offset=8)], Name('old_stderr', Load(), lineno=123, col_offset=21), lineno=123, col_offset=8)], lineno=107, col_offset=4)], [], lineno=94, col_offset=0), ClassDef('ErrorRaisingArgumentParser', [Attribute(Name('argparse', Load(), lineno=126, col_offset=33), 'ArgumentParser', Load(), lineno=126, col_offset=33)], [FunctionDef('parse_args', arguments([Name('self', Param(), lineno=128, col_offset=19)], 'args', 'kwargs', []), [Assign([Name('parse_args', Store(), lineno=129, col_offset=8)], Attribute(Call(Name('super', Load(), lineno=129, col_offset=21), [Name('ErrorRaisingArgumentParser', Load(), lineno=129, col_offset=27), Name('self', Load(), lineno=129, col_offset=55)], [], None, None, lineno=129, col_offset=21), 'parse_args', Load(), lineno=129, col_offset=21), lineno=129, col_offset=8), Return(Call(Name('stderr_to_parser_error', Load(), lineno=130, col_offset=15), [Name('parse_args', Load(), lineno=130, col_offset=38)], [], Name('args', Load(), lineno=130, col_offset=51), Name('kwargs', Load(), lineno=130, col_offset=59), lineno=130, col_offset=15), lineno=130, col_offset=8)], [], lineno=128, col_offset=4), FunctionDef('exit', arguments([Name('self', Param(), lineno=132, col_offset=13)], 'args', 'kwargs', []), [Assign([Name('exit', Store(), lineno=133, col_offset=8)], Attribute(Call(Name('super', Load(), lineno=133, col_offset=15), [Name('ErrorRaisingArgumentParser', Load(), lineno=133, col_offset=21), Name('self', Load(), lineno=133, col_offset=49)], [], None, None, lineno=133, col_offset=15), 'exit', Load(), lineno=133, col_offset=15), lineno=133, col_offset=8), Return(Call(Name('stderr_to_parser_error', Load(), lineno=134, col_offset=15), [Name('exit', Load(), lineno=134, col_offset=38)], [], Name('args', Load(), lineno=134, col_offset=45), Name('kwargs', Load(), lineno=134, col_offset=53), lineno=134, col_offset=15), lineno=134, col_offset=8)], [], lineno=132, col_offset=4), FunctionDef('error', arguments([Name('self', Param(), lineno=136, col_offset=14)], 'args', 'kwargs', []), [Assign([Name('error', Store(), lineno=137, col_offset=8)], Attribute(Call(Name('super', Load(), lineno=137, col_offset=16), [Name('ErrorRaisingArgumentParser', Load(), lineno=137, col_offset=22), Name('self', Load(), lineno=137, col_offset=50)], [], None, None, lineno=137, col_offset=16), 'error', Load(), lineno=137, col_offset=16), lineno=137, col_offset=8), Return(Call(Name('stderr_to_parser_error', Load(), lineno=138, col_offset=15), [Name('error', Load(), lineno=138, col_offset=38)], [], Name('args', Load(), lineno=138, col_offset=46), Name('kwargs', Load(), lineno=138, col_offset=54), lineno=138, col_offset=15), lineno=138, col_offset=8)], [], lineno=136, col_offset=4)], [], lineno=126, col_offset=0), ClassDef('ParserTesterMetaclass', [Name('type', Load(), lineno=141, col_offset=28)], [Expr(Str('Adds parser tests using the class attributes.\n\n    Classes of this type should specify the following attributes:\n\n    argument_signatures -- a list of Sig objects which specify\n        the signatures of Argument objects to be created\n    failures -- a list of args lists that should cause the parser\n        to fail\n    successes -- a list of (initial_args, options, remaining_args) tuples\n        where initial_args specifies the string args to be parsed,\n        options is a dict that should match the vars() of the options\n        parsed out of initial_args, and remaining_args should be any\n        remaining unparsed arguments\n    ', lineno=155, col_offset=-1), lineno=155, col_offset=-1), FunctionDef('__init__', arguments([Name('cls', Param(), lineno=157, col_offset=17), Name('name', Param(), lineno=157, col_offset=22), Name('bases', Param(), lineno=157, col_offset=28), Name('bodydict', Param(), lineno=157, col_offset=35)], None, None, []), [If(Compare(Name('name', Load(), lineno=158, col_offset=11), [Eq()], [Str('ParserTestCase', lineno=158, col_offset=19)], lineno=158, col_offset=11), [Return(None, lineno=159, col_offset=12)], [], lineno=158, col_offset=8), If(UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=162, col_offset=15), [Name('cls', Load(), lineno=162, col_offset=23), Str('parser_signature', lineno=162, col_offset=28)], [], None, None, lineno=162, col_offset=15), lineno=162, col_offset=11), [Assign([Attribute(Name('cls', Load(), lineno=163, col_offset=12), 'parser_signature', Store(), lineno=163, col_offset=12)], Call(Name('Sig', Load(), lineno=163, col_offset=35), [], [], None, None, lineno=163, col_offset=35), lineno=163, col_offset=12)], [], lineno=162, col_offset=8), If(UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=164, col_offset=15), [Name('cls', Load(), lineno=164, col_offset=23), Str('parser_class', lineno=164, col_offset=28)], [], None, None, lineno=164, col_offset=15), lineno=164, col_offset=11), [Assign([Attribute(Name('cls', Load(), lineno=165, col_offset=12), 'parser_class', Store(), lineno=165, col_offset=12)], Name('ErrorRaisingArgumentParser', Load(), lineno=165, col_offset=31), lineno=165, col_offset=12)], [], lineno=164, col_offset=8), FunctionDef('no_groups', arguments([Name('parser', Param(), lineno=170, col_offset=22), Name('argument_signatures', Param(), lineno=170, col_offset=30)], None, None, []), [Expr(Str('Add all arguments directly to the parser', lineno=171, col_offset=12), lineno=171, col_offset=12), For(Name('sig', Store(), lineno=172, col_offset=16), Name('argument_signatures', Load(), lineno=172, col_offset=23), [Expr(Call(Attribute(Name('parser', Load(), lineno=173, col_offset=16), 'add_argument', Load(), lineno=173, col_offset=16), [], [], Attribute(Name('sig', Load(), lineno=173, col_offset=37), 'args', Load(), lineno=173, col_offset=37), Attribute(Name('sig', Load(), lineno=173, col_offset=49), 'kwargs', Load(), lineno=173, col_offset=49), lineno=173, col_offset=16), lineno=173, col_offset=16)], [], lineno=172, col_offset=12)], [], lineno=170, col_offset=8), FunctionDef('one_group', arguments([Name('parser', Param(), lineno=175, col_offset=22), Name('argument_signatures', Param(), lineno=175, col_offset=30)], None, None, []), [Expr(Str('Add all arguments under a single group in the parser', lineno=176, col_offset=12), lineno=176, col_offset=12), Assign([Name('group', Store(), lineno=177, col_offset=12)], Call(Attribute(Name('parser', Load(), lineno=177, col_offset=20), 'add_argument_group', Load(), lineno=177, col_offset=20), [Str('foo', lineno=177, col_offset=46)], [], None, None, lineno=177, col_offset=20), lineno=177, col_offset=12), For(Name('sig', Store(), lineno=178, col_offset=16), Name('argument_signatures', Load(), lineno=178, col_offset=23), [Expr(Call(Attribute(Name('group', Load(), lineno=179, col_offset=16), 'add_argument', Load(), lineno=179, col_offset=16), [], [], Attribute(Name('sig', Load(), lineno=179, col_offset=36), 'args', Load(), lineno=179, col_offset=36), Attribute(Name('sig', Load(), lineno=179, col_offset=48), 'kwargs', Load(), lineno=179, col_offset=48), lineno=179, col_offset=16), lineno=179, col_offset=16)], [], lineno=178, col_offset=12)], [], lineno=175, col_offset=8), FunctionDef('many_groups', arguments([Name('parser', Param(), lineno=181, col_offset=24), Name('argument_signatures', Param(), lineno=181, col_offset=32)], None, None, []), [Expr(Str('Add each argument in its own group to the parser', lineno=182, col_offset=12), lineno=182, col_offset=12), For(Tuple([Name('i', Store(), lineno=183, col_offset=16), Name('sig', Store(), lineno=183, col_offset=19)], Store(), lineno=183, col_offset=16), Call(Name('enumerate', Load(), lineno=183, col_offset=26), [Name('argument_signatures', Load(), lineno=183, col_offset=36)], [], None, None, lineno=183, col_offset=26), [Assign([Name('group', Store(), lineno=184, col_offset=16)], Call(Attribute(Name('parser', Load(), lineno=184, col_offset=24), 'add_argument_group', Load(), lineno=184, col_offset=24), [BinOp(Str('foo:%i', lineno=184, col_offset=50), Mod(), Name('i', Load(), lineno=184, col_offset=61), lineno=184, col_offset=50)], [], None, None, lineno=184, col_offset=24), lineno=184, col_offset=16), Expr(Call(Attribute(Name('group', Load(), lineno=185, col_offset=16), 'add_argument', Load(), lineno=185, col_offset=16), [], [], Attribute(Name('sig', Load(), lineno=185, col_offset=36), 'args', Load(), lineno=185, col_offset=36), Attribute(Name('sig', Load(), lineno=185, col_offset=48), 'kwargs', Load(), lineno=185, col_offset=48), lineno=185, col_offset=16), lineno=185, col_offset=16)], [], lineno=183, col_offset=12)], [], lineno=181, col_offset=8), FunctionDef('listargs', arguments([Name('parser', Param(), lineno=190, col_offset=21), Name('args', Param(), lineno=190, col_offset=29)], None, None, []), [Expr(Str('Parse the args by passing in a list', lineno=191, col_offset=12), lineno=191, col_offset=12), Return(Call(Attribute(Name('parser', Load(), lineno=192, col_offset=19), 'parse_args', Load(), lineno=192, col_offset=19), [Name('args', Load(), lineno=192, col_offset=37)], [], None, None, lineno=192, col_offset=19), lineno=192, col_offset=12)], [], lineno=190, col_offset=8), FunctionDef('sysargs', arguments([Name('parser', Param(), lineno=194, col_offset=20), Name('args', Param(), lineno=194, col_offset=28)], None, None, []), [Expr(Str('Parse the args by defaulting to sys.argv', lineno=195, col_offset=12), lineno=195, col_offset=12), Assign([Name('old_sys_argv', Store(), lineno=196, col_offset=12)], Attribute(Name('sys', Load(), lineno=196, col_offset=27), 'argv', Load(), lineno=196, col_offset=27), lineno=196, col_offset=12), Assign([Attribute(Name('sys', Load(), lineno=197, col_offset=12), 'argv', Store(), lineno=197, col_offset=12)], BinOp(List([Subscript(Name('old_sys_argv', Load(), lineno=197, col_offset=24), Index(Num(0, lineno=197, col_offset=37)), Load(), lineno=197, col_offset=24)], Load(), lineno=197, col_offset=23), Add(), Name('args', Load(), lineno=197, col_offset=43), lineno=197, col_offset=23), lineno=197, col_offset=12), TryFinally([Return(Call(Attribute(Name('parser', Load(), lineno=199, col_offset=23), 'parse_args', Load(), lineno=199, col_offset=23), [], [], None, None, lineno=199, col_offset=23), lineno=199, col_offset=16)], [Assign([Attribute(Name('sys', Load(), lineno=201, col_offset=16), 'argv', Store(), lineno=201, col_offset=16)], Name('old_sys_argv', Load(), lineno=201, col_offset=27), lineno=201, col_offset=16)], lineno=198, col_offset=12)], [], lineno=194, col_offset=8), ClassDef('AddTests', [Name('object', Load(), lineno=205, col_offset=23)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=207, col_offset=25), Name('tester_cls', Param(), lineno=207, col_offset=31), Name('add_arguments', Param(), lineno=207, col_offset=43), Name('parse_args', Param(), lineno=207, col_offset=58)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=208, col_offset=16), '_add_arguments', Store(), lineno=208, col_offset=16)], Name('add_arguments', Load(), lineno=208, col_offset=38), lineno=208, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=209, col_offset=16), '_parse_args', Store(), lineno=209, col_offset=16)], Name('parse_args', Load(), lineno=209, col_offset=35), lineno=209, col_offset=16), Assign([Name('add_arguments_name', Store(), lineno=211, col_offset=16)], Attribute(Attribute(Name('self', Load(), lineno=211, col_offset=37), '_add_arguments', Load(), lineno=211, col_offset=37), '__name__', Load(), lineno=211, col_offset=37), lineno=211, col_offset=16), Assign([Name('parse_args_name', Store(), lineno=212, col_offset=16)], Attribute(Attribute(Name('self', Load(), lineno=212, col_offset=34), '_parse_args', Load(), lineno=212, col_offset=34), '__name__', Load(), lineno=212, col_offset=34), lineno=212, col_offset=16), For(Name('test_func', Store(), lineno=213, col_offset=20), List([Attribute(Name('self', Load(), lineno=213, col_offset=34), 'test_failures', Load(), lineno=213, col_offset=34), Attribute(Name('self', Load(), lineno=213, col_offset=54), 'test_successes', Load(), lineno=213, col_offset=54)], Load(), lineno=213, col_offset=33), [Assign([Name('func_name', Store(), lineno=214, col_offset=20)], Attribute(Name('test_func', Load(), lineno=214, col_offset=32), '__name__', Load(), lineno=214, col_offset=32), lineno=214, col_offset=20), Assign([Name('names', Store(), lineno=215, col_offset=20)], Tuple([Name('func_name', Load(), lineno=215, col_offset=28), Name('add_arguments_name', Load(), lineno=215, col_offset=39), Name('parse_args_name', Load(), lineno=215, col_offset=59)], Load(), lineno=215, col_offset=28), lineno=215, col_offset=20), Assign([Name('test_name', Store(), lineno=216, col_offset=20)], Call(Attribute(Str('_', lineno=216, col_offset=32), 'join', Load(), lineno=216, col_offset=32), [Name('names', Load(), lineno=216, col_offset=41)], [], None, None, lineno=216, col_offset=32), lineno=216, col_offset=20), FunctionDef('wrapper', arguments([Name('self', Param(), lineno=218, col_offset=32), Name('test_func', Param(), lineno=218, col_offset=38)], None, None, [Name('test_func', Load(), lineno=218, col_offset=48)]), [Expr(Call(Name('test_func', Load(), lineno=219, col_offset=24), [Name('self', Load(), lineno=219, col_offset=34)], [], None, None, lineno=219, col_offset=24), lineno=219, col_offset=24)], [], lineno=218, col_offset=20), TryExcept([Assign([Attribute(Name('wrapper', Load(), lineno=221, col_offset=24), '__name__', Store(), lineno=221, col_offset=24)], Name('test_name', Load(), lineno=221, col_offset=43), lineno=221, col_offset=24)], [ExceptHandler(Name('TypeError', Load(), lineno=222, col_offset=27), None, [Pass( lineno=223, col_offset=24)], lineno=222, col_offset=20)], [], lineno=220, col_offset=20), Expr(Call(Name('setattr', Load(), lineno=224, col_offset=20), [Name('tester_cls', Load(), lineno=224, col_offset=28), Name('test_name', Load(), lineno=224, col_offset=40), Name('wrapper', Load(), lineno=224, col_offset=51)], [], None, None, lineno=224, col_offset=20), lineno=224, col_offset=20)], [], lineno=213, col_offset=16)], [], lineno=207, col_offset=12), FunctionDef('_get_parser', arguments([Name('self', Param(), lineno=226, col_offset=28), Name('tester', Param(), lineno=226, col_offset=34)], None, None, []), [Assign([Name('args', Store(), lineno=227, col_offset=16)], Attribute(Attribute(Name('tester', Load(), lineno=227, col_offset=23), 'parser_signature', Load(), lineno=227, col_offset=23), 'args', Load(), lineno=227, col_offset=23), lineno=227, col_offset=16), Assign([Name('kwargs', Store(), lineno=228, col_offset=16)], Attribute(Attribute(Name('tester', Load(), lineno=228, col_offset=25), 'parser_signature', Load(), lineno=228, col_offset=25), 'kwargs', Load(), lineno=228, col_offset=25), lineno=228, col_offset=16), Assign([Name('parser', Store(), lineno=229, col_offset=16)], Call(Attribute(Name('tester', Load(), lineno=229, col_offset=25), 'parser_class', Load(), lineno=229, col_offset=25), [], [], Name('args', Load(), lineno=229, col_offset=46), Name('kwargs', Load(), lineno=229, col_offset=54), lineno=229, col_offset=25), lineno=229, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=230, col_offset=16), '_add_arguments', Load(), lineno=230, col_offset=16), [Name('parser', Load(), lineno=230, col_offset=36), Attribute(Name('tester', Load(), lineno=230, col_offset=44), 'argument_signatures', Load(), lineno=230, col_offset=44)], [], None, None, lineno=230, col_offset=16), lineno=230, col_offset=16), Return(Name('parser', Load(), lineno=231, col_offset=23), lineno=231, col_offset=16)], [], lineno=226, col_offset=12), FunctionDef('test_failures', arguments([Name('self', Param(), lineno=233, col_offset=30), Name('tester', Param(), lineno=233, col_offset=36)], None, None, []), [Assign([Name('parser', Store(), lineno=234, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=234, col_offset=25), '_get_parser', Load(), lineno=234, col_offset=25), [Name('tester', Load(), lineno=234, col_offset=42)], [], None, None, lineno=234, col_offset=25), lineno=234, col_offset=16), For(Name('args_str', Store(), lineno=235, col_offset=20), Attribute(Name('tester', Load(), lineno=235, col_offset=32), 'failures', Load(), lineno=235, col_offset=32), [Assign([Name('args', Store(), lineno=236, col_offset=20)], Call(Attribute(Name('args_str', Load(), lineno=236, col_offset=27), 'split', Load(), lineno=236, col_offset=27), [], [], None, None, lineno=236, col_offset=27), lineno=236, col_offset=20), Assign([Name('raises', Store(), lineno=237, col_offset=20)], Attribute(Name('tester', Load(), lineno=237, col_offset=29), 'assertRaises', Load(), lineno=237, col_offset=29), lineno=237, col_offset=20), Expr(Call(Name('raises', Load(), lineno=238, col_offset=20), [Name('ArgumentParserError', Load(), lineno=238, col_offset=27), Attribute(Name('parser', Load(), lineno=238, col_offset=48), 'parse_args', Load(), lineno=238, col_offset=48), Name('args', Load(), lineno=238, col_offset=67)], [], None, None, lineno=238, col_offset=20), lineno=238, col_offset=20)], [], lineno=235, col_offset=16)], [], lineno=233, col_offset=12), FunctionDef('test_successes', arguments([Name('self', Param(), lineno=240, col_offset=31), Name('tester', Param(), lineno=240, col_offset=37)], None, None, []), [Assign([Name('parser', Store(), lineno=241, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=241, col_offset=25), '_get_parser', Load(), lineno=241, col_offset=25), [Name('tester', Load(), lineno=241, col_offset=42)], [], None, None, lineno=241, col_offset=25), lineno=241, col_offset=16), For(Tuple([Name('args', Store(), lineno=242, col_offset=20), Name('expected_ns', Store(), lineno=242, col_offset=26)], Store(), lineno=242, col_offset=20), Attribute(Name('tester', Load(), lineno=242, col_offset=41), 'successes', Load(), lineno=242, col_offset=41), [If(Call(Name('isinstance', Load(), lineno=243, col_offset=23), [Name('args', Load(), lineno=243, col_offset=34), Name('str', Load(), lineno=243, col_offset=40)], [], None, None, lineno=243, col_offset=23), [Assign([Name('args', Store(), lineno=244, col_offset=24)], Call(Attribute(Name('args', Load(), lineno=244, col_offset=31), 'split', Load(), lineno=244, col_offset=31), [], [], None, None, lineno=244, col_offset=31), lineno=244, col_offset=24)], [], lineno=243, col_offset=20), Assign([Name('result_ns', Store(), lineno=245, col_offset=20)], Call(Attribute(Name('self', Load(), lineno=245, col_offset=32), '_parse_args', Load(), lineno=245, col_offset=32), [Name('parser', Load(), lineno=245, col_offset=49), Name('args', Load(), lineno=245, col_offset=57)], [], None, None, lineno=245, col_offset=32), lineno=245, col_offset=20), Expr(Call(Attribute(Name('tester', Load(), lineno=246, col_offset=20), 'assertEqual', Load(), lineno=246, col_offset=20), [Name('expected_ns', Load(), lineno=246, col_offset=39), Name('result_ns', Load(), lineno=246, col_offset=52)], [], None, None, lineno=246, col_offset=20), lineno=246, col_offset=20)], [], lineno=242, col_offset=16)], [], lineno=240, col_offset=12)], [], lineno=205, col_offset=8), For(Name('add_arguments', Store(), lineno=250, col_offset=12), List([Name('no_groups', Load(), lineno=250, col_offset=30), Name('one_group', Load(), lineno=250, col_offset=41), Name('many_groups', Load(), lineno=250, col_offset=52)], Load(), lineno=250, col_offset=29), [For(Name('parse_args', Store(), lineno=251, col_offset=16), List([Name('listargs', Load(), lineno=251, col_offset=31), Name('sysargs', Load(), lineno=251, col_offset=41)], Load(), lineno=251, col_offset=30), [Expr(Call(Name('AddTests', Load(), lineno=252, col_offset=16), [Name('cls', Load(), lineno=252, col_offset=25), Name('add_arguments', Load(), lineno=252, col_offset=30), Name('parse_args', Load(), lineno=252, col_offset=45)], [], None, None, lineno=252, col_offset=16), lineno=252, col_offset=16)], [], lineno=251, col_offset=12)], [], lineno=250, col_offset=8)], [], lineno=157, col_offset=4)], [], lineno=141, col_offset=0), Assign([Name('bases', Store(), lineno=254, col_offset=0)], Tuple([Name('TestCase', Load(), lineno=254, col_offset=8)], Load(), lineno=254, col_offset=8), lineno=254, col_offset=0), Assign([Name('ParserTestCase', Store(), lineno=255, col_offset=0)], Call(Name('ParserTesterMetaclass', Load(), lineno=255, col_offset=17), [Str('ParserTestCase', lineno=255, col_offset=39), Name('bases', Load(), lineno=255, col_offset=57), Dict([], [], lineno=255, col_offset=64)], [], None, None, lineno=255, col_offset=17), lineno=255, col_offset=0), ClassDef('TestOptionalsSingleDash', [Name('ParserTestCase', Load(), lineno=261, col_offset=30)], [Expr(Str('Test an Optional with a single-dash option string', lineno=262, col_offset=4), lineno=262, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=264, col_offset=4)], List([Call(Name('Sig', Load(), lineno=264, col_offset=27), [Str('-x', lineno=264, col_offset=31)], [], None, None, lineno=264, col_offset=27)], Load(), lineno=264, col_offset=26), lineno=264, col_offset=4), Assign([Name('failures', Store(), lineno=265, col_offset=4)], List([Str('-x', lineno=265, col_offset=16), Str('a', lineno=265, col_offset=22), Str('--foo', lineno=265, col_offset=27), Str('-x --foo', lineno=265, col_offset=36), Str('-x -y', lineno=265, col_offset=48)], Load(), lineno=265, col_offset=15), lineno=265, col_offset=4), Assign([Name('successes', Store(), lineno=266, col_offset=4)], List([Tuple([Str('', lineno=267, col_offset=9), Call(Name('NS', Load(), lineno=267, col_offset=13), [], [keyword('x', Name('None', Load(), lineno=267, col_offset=18))], None, None, lineno=267, col_offset=13)], Load(), lineno=267, col_offset=9), Tuple([Str('-x a', lineno=268, col_offset=9), Call(Name('NS', Load(), lineno=268, col_offset=17), [], [keyword('x', Str('a', lineno=268, col_offset=22))], None, None, lineno=268, col_offset=17)], Load(), lineno=268, col_offset=9), Tuple([Str('-xa', lineno=269, col_offset=9), Call(Name('NS', Load(), lineno=269, col_offset=16), [], [keyword('x', Str('a', lineno=269, col_offset=21))], None, None, lineno=269, col_offset=16)], Load(), lineno=269, col_offset=9), Tuple([Str('-x -1', lineno=270, col_offset=9), Call(Name('NS', Load(), lineno=270, col_offset=18), [], [keyword('x', Str('-1', lineno=270, col_offset=23))], None, None, lineno=270, col_offset=18)], Load(), lineno=270, col_offset=9), Tuple([Str('-x-1', lineno=271, col_offset=9), Call(Name('NS', Load(), lineno=271, col_offset=17), [], [keyword('x', Str('-1', lineno=271, col_offset=22))], None, None, lineno=271, col_offset=17)], Load(), lineno=271, col_offset=9)], Load(), lineno=266, col_offset=16), lineno=266, col_offset=4)], [], lineno=261, col_offset=0), ClassDef('TestOptionalsSingleDashCombined', [Name('ParserTestCase', Load(), lineno=275, col_offset=38)], [Expr(Str('Test an Optional with a single-dash option string', lineno=276, col_offset=4), lineno=276, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=278, col_offset=4)], List([Call(Name('Sig', Load(), lineno=279, col_offset=8), [Str('-x', lineno=279, col_offset=12)], [keyword('action', Str('store_true', lineno=279, col_offset=25))], None, None, lineno=279, col_offset=8), Call(Name('Sig', Load(), lineno=280, col_offset=8), [Str('-yyy', lineno=280, col_offset=12)], [keyword('action', Str('store_const', lineno=280, col_offset=27)), keyword('const', Num(42, lineno=280, col_offset=48))], None, None, lineno=280, col_offset=8), Call(Name('Sig', Load(), lineno=281, col_offset=8), [Str('-z', lineno=281, col_offset=12)], [], None, None, lineno=281, col_offset=8)], Load(), lineno=278, col_offset=26), lineno=278, col_offset=4), Assign([Name('failures', Store(), lineno=283, col_offset=4)], List([Str('a', lineno=283, col_offset=16), Str('--foo', lineno=283, col_offset=21), Str('-xa', lineno=283, col_offset=30), Str('-x --foo', lineno=283, col_offset=37), Str('-x -z', lineno=283, col_offset=49), Str('-z -x', lineno=283, col_offset=58), Str('-yx', lineno=284, col_offset=16), Str('-yz a', lineno=284, col_offset=23), Str('-yyyx', lineno=284, col_offset=32), Str('-yyyza', lineno=284, col_offset=41), Str('-xyza', lineno=284, col_offset=51)], Load(), lineno=283, col_offset=15), lineno=283, col_offset=4), Assign([Name('successes', Store(), lineno=285, col_offset=4)], List([Tuple([Str('', lineno=286, col_offset=9), Call(Name('NS', Load(), lineno=286, col_offset=13), [], [keyword('x', Name('False', Load(), lineno=286, col_offset=18)), keyword('yyy', Name('None', Load(), lineno=286, col_offset=29)), keyword('z', Name('None', Load(), lineno=286, col_offset=37))], None, None, lineno=286, col_offset=13)], Load(), lineno=286, col_offset=9), Tuple([Str('-x', lineno=287, col_offset=9), Call(Name('NS', Load(), lineno=287, col_offset=15), [], [keyword('x', Name('True', Load(), lineno=287, col_offset=20)), keyword('yyy', Name('None', Load(), lineno=287, col_offset=30)), keyword('z', Name('None', Load(), lineno=287, col_offset=38))], None, None, lineno=287, col_offset=15)], Load(), lineno=287, col_offset=9), Tuple([Str('-za', lineno=288, col_offset=9), Call(Name('NS', Load(), lineno=288, col_offset=16), [], [keyword('x', Name('False', Load(), lineno=288, col_offset=21)), keyword('yyy', Name('None', Load(), lineno=288, col_offset=32)), keyword('z', Str('a', lineno=288, col_offset=40))], None, None, lineno=288, col_offset=16)], Load(), lineno=288, col_offset=9), Tuple([Str('-z a', lineno=289, col_offset=9), Call(Name('NS', Load(), lineno=289, col_offset=17), [], [keyword('x', Name('False', Load(), lineno=289, col_offset=22)), keyword('yyy', Name('None', Load(), lineno=289, col_offset=33)), keyword('z', Str('a', lineno=289, col_offset=41))], None, None, lineno=289, col_offset=17)], Load(), lineno=289, col_offset=9), Tuple([Str('-xza', lineno=290, col_offset=9), Call(Name('NS', Load(), lineno=290, col_offset=17), [], [keyword('x', Name('True', Load(), lineno=290, col_offset=22)), keyword('yyy', Name('None', Load(), lineno=290, col_offset=32)), keyword('z', Str('a', lineno=290, col_offset=40))], None, None, lineno=290, col_offset=17)], Load(), lineno=290, col_offset=9), Tuple([Str('-xz a', lineno=291, col_offset=9), Call(Name('NS', Load(), lineno=291, col_offset=18), [], [keyword('x', Name('True', Load(), lineno=291, col_offset=23)), keyword('yyy', Name('None', Load(), lineno=291, col_offset=33)), keyword('z', Str('a', lineno=291, col_offset=41))], None, None, lineno=291, col_offset=18)], Load(), lineno=291, col_offset=9), Tuple([Str('-x -za', lineno=292, col_offset=9), Call(Name('NS', Load(), lineno=292, col_offset=19), [], [keyword('x', Name('True', Load(), lineno=292, col_offset=24)), keyword('yyy', Name('None', Load(), lineno=292, col_offset=34)), keyword('z', Str('a', lineno=292, col_offset=42))], None, None, lineno=292, col_offset=19)], Load(), lineno=292, col_offset=9), Tuple([Str('-x -z a', lineno=293, col_offset=9), Call(Name('NS', Load(), lineno=293, col_offset=20), [], [keyword('x', Name('True', Load(), lineno=293, col_offset=25)), keyword('yyy', Name('None', Load(), lineno=293, col_offset=35)), keyword('z', Str('a', lineno=293, col_offset=43))], None, None, lineno=293, col_offset=20)], Load(), lineno=293, col_offset=9), Tuple([Str('-y', lineno=294, col_offset=9), Call(Name('NS', Load(), lineno=294, col_offset=15), [], [keyword('x', Name('False', Load(), lineno=294, col_offset=20)), keyword('yyy', Num(42, lineno=294, col_offset=31)), keyword('z', Name('None', Load(), lineno=294, col_offset=37))], None, None, lineno=294, col_offset=15)], Load(), lineno=294, col_offset=9), Tuple([Str('-yyy', lineno=295, col_offset=9), Call(Name('NS', Load(), lineno=295, col_offset=17), [], [keyword('x', Name('False', Load(), lineno=295, col_offset=22)), keyword('yyy', Num(42, lineno=295, col_offset=33)), keyword('z', Name('None', Load(), lineno=295, col_offset=39))], None, None, lineno=295, col_offset=17)], Load(), lineno=295, col_offset=9), Tuple([Str('-x -yyy -za', lineno=296, col_offset=9), Call(Name('NS', Load(), lineno=296, col_offset=24), [], [keyword('x', Name('True', Load(), lineno=296, col_offset=29)), keyword('yyy', Num(42, lineno=296, col_offset=39)), keyword('z', Str('a', lineno=296, col_offset=45))], None, None, lineno=296, col_offset=24)], Load(), lineno=296, col_offset=9), Tuple([Str('-x -yyy -z a', lineno=297, col_offset=9), Call(Name('NS', Load(), lineno=297, col_offset=25), [], [keyword('x', Name('True', Load(), lineno=297, col_offset=30)), keyword('yyy', Num(42, lineno=297, col_offset=40)), keyword('z', Str('a', lineno=297, col_offset=46))], None, None, lineno=297, col_offset=25)], Load(), lineno=297, col_offset=9)], Load(), lineno=285, col_offset=16), lineno=285, col_offset=4)], [], lineno=275, col_offset=0), ClassDef('TestOptionalsSingleDashLong', [Name('ParserTestCase', Load(), lineno=301, col_offset=34)], [Expr(Str('Test an Optional with a multi-character single-dash option string', lineno=302, col_offset=4), lineno=302, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=304, col_offset=4)], List([Call(Name('Sig', Load(), lineno=304, col_offset=27), [Str('-foo', lineno=304, col_offset=31)], [], None, None, lineno=304, col_offset=27)], Load(), lineno=304, col_offset=26), lineno=304, col_offset=4), Assign([Name('failures', Store(), lineno=305, col_offset=4)], List([Str('-foo', lineno=305, col_offset=16), Str('a', lineno=305, col_offset=24), Str('--foo', lineno=305, col_offset=29), Str('-foo --foo', lineno=305, col_offset=38), Str('-foo -y', lineno=305, col_offset=52), Str('-fooa', lineno=305, col_offset=63)], Load(), lineno=305, col_offset=15), lineno=305, col_offset=4), Assign([Name('successes', Store(), lineno=306, col_offset=4)], List([Tuple([Str('', lineno=307, col_offset=9), Call(Name('NS', Load(), lineno=307, col_offset=13), [], [keyword('foo', Name('None', Load(), lineno=307, col_offset=20))], None, None, lineno=307, col_offset=13)], Load(), lineno=307, col_offset=9), Tuple([Str('-foo a', lineno=308, col_offset=9), Call(Name('NS', Load(), lineno=308, col_offset=19), [], [keyword('foo', Str('a', lineno=308, col_offset=26))], None, None, lineno=308, col_offset=19)], Load(), lineno=308, col_offset=9), Tuple([Str('-foo -1', lineno=309, col_offset=9), Call(Name('NS', Load(), lineno=309, col_offset=20), [], [keyword('foo', Str('-1', lineno=309, col_offset=27))], None, None, lineno=309, col_offset=20)], Load(), lineno=309, col_offset=9), Tuple([Str('-fo a', lineno=310, col_offset=9), Call(Name('NS', Load(), lineno=310, col_offset=18), [], [keyword('foo', Str('a', lineno=310, col_offset=25))], None, None, lineno=310, col_offset=18)], Load(), lineno=310, col_offset=9), Tuple([Str('-f a', lineno=311, col_offset=9), Call(Name('NS', Load(), lineno=311, col_offset=17), [], [keyword('foo', Str('a', lineno=311, col_offset=24))], None, None, lineno=311, col_offset=17)], Load(), lineno=311, col_offset=9)], Load(), lineno=306, col_offset=16), lineno=306, col_offset=4)], [], lineno=301, col_offset=0), ClassDef('TestOptionalsSingleDashSubsetAmbiguous', [Name('ParserTestCase', Load(), lineno=315, col_offset=45)], [Expr(Str('Test Optionals where option strings are subsets of each other', lineno=316, col_offset=4), lineno=316, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=318, col_offset=4)], List([Call(Name('Sig', Load(), lineno=318, col_offset=27), [Str('-f', lineno=318, col_offset=31)], [], None, None, lineno=318, col_offset=27), Call(Name('Sig', Load(), lineno=318, col_offset=38), [Str('-foobar', lineno=318, col_offset=42)], [], None, None, lineno=318, col_offset=38), Call(Name('Sig', Load(), lineno=318, col_offset=54), [Str('-foorab', lineno=318, col_offset=58)], [], None, None, lineno=318, col_offset=54)], Load(), lineno=318, col_offset=26), lineno=318, col_offset=4), Assign([Name('failures', Store(), lineno=319, col_offset=4)], List([Str('-f', lineno=319, col_offset=16), Str('-foo', lineno=319, col_offset=22), Str('-fo', lineno=319, col_offset=30), Str('-foo b', lineno=319, col_offset=37), Str('-foob', lineno=319, col_offset=47), Str('-fooba', lineno=319, col_offset=56), Str('-foora', lineno=319, col_offset=66)], Load(), lineno=319, col_offset=15), lineno=319, col_offset=4), Assign([Name('successes', Store(), lineno=320, col_offset=4)], List([Tuple([Str('', lineno=321, col_offset=9), Call(Name('NS', Load(), lineno=321, col_offset=13), [], [keyword('f', Name('None', Load(), lineno=321, col_offset=18)), keyword('foobar', Name('None', Load(), lineno=321, col_offset=31)), keyword('foorab', Name('None', Load(), lineno=321, col_offset=44))], None, None, lineno=321, col_offset=13)], Load(), lineno=321, col_offset=9), Tuple([Str('-f a', lineno=322, col_offset=9), Call(Name('NS', Load(), lineno=322, col_offset=17), [], [keyword('f', Str('a', lineno=322, col_offset=22)), keyword('foobar', Name('None', Load(), lineno=322, col_offset=34)), keyword('foorab', Name('None', Load(), lineno=322, col_offset=47))], None, None, lineno=322, col_offset=17)], Load(), lineno=322, col_offset=9), Tuple([Str('-fa', lineno=323, col_offset=9), Call(Name('NS', Load(), lineno=323, col_offset=16), [], [keyword('f', Str('a', lineno=323, col_offset=21)), keyword('foobar', Name('None', Load(), lineno=323, col_offset=33)), keyword('foorab', Name('None', Load(), lineno=323, col_offset=46))], None, None, lineno=323, col_offset=16)], Load(), lineno=323, col_offset=9), Tuple([Str('-foa', lineno=324, col_offset=9), Call(Name('NS', Load(), lineno=324, col_offset=17), [], [keyword('f', Str('oa', lineno=324, col_offset=22)), keyword('foobar', Name('None', Load(), lineno=324, col_offset=35)), keyword('foorab', Name('None', Load(), lineno=324, col_offset=48))], None, None, lineno=324, col_offset=17)], Load(), lineno=324, col_offset=9), Tuple([Str('-fooa', lineno=325, col_offset=9), Call(Name('NS', Load(), lineno=325, col_offset=18), [], [keyword('f', Str('ooa', lineno=325, col_offset=23)), keyword('foobar', Name('None', Load(), lineno=325, col_offset=37)), keyword('foorab', Name('None', Load(), lineno=325, col_offset=50))], None, None, lineno=325, col_offset=18)], Load(), lineno=325, col_offset=9), Tuple([Str('-foobar a', lineno=326, col_offset=9), Call(Name('NS', Load(), lineno=326, col_offset=22), [], [keyword('f', Name('None', Load(), lineno=326, col_offset=27)), keyword('foobar', Str('a', lineno=326, col_offset=40)), keyword('foorab', Name('None', Load(), lineno=326, col_offset=52))], None, None, lineno=326, col_offset=22)], Load(), lineno=326, col_offset=9), Tuple([Str('-foorab a', lineno=327, col_offset=9), Call(Name('NS', Load(), lineno=327, col_offset=22), [], [keyword('f', Name('None', Load(), lineno=327, col_offset=27)), keyword('foobar', Name('None', Load(), lineno=327, col_offset=40)), keyword('foorab', Str('a', lineno=327, col_offset=53))], None, None, lineno=327, col_offset=22)], Load(), lineno=327, col_offset=9)], Load(), lineno=320, col_offset=16), lineno=320, col_offset=4)], [], lineno=315, col_offset=0), ClassDef('TestOptionalsSingleDashAmbiguous', [Name('ParserTestCase', Load(), lineno=331, col_offset=39)], [Expr(Str('Test Optionals that partially match but are not subsets', lineno=332, col_offset=4), lineno=332, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=334, col_offset=4)], List([Call(Name('Sig', Load(), lineno=334, col_offset=27), [Str('-foobar', lineno=334, col_offset=31)], [], None, None, lineno=334, col_offset=27), Call(Name('Sig', Load(), lineno=334, col_offset=43), [Str('-foorab', lineno=334, col_offset=47)], [], None, None, lineno=334, col_offset=43)], Load(), lineno=334, col_offset=26), lineno=334, col_offset=4), Assign([Name('failures', Store(), lineno=335, col_offset=4)], List([Str('-f', lineno=335, col_offset=16), Str('-f a', lineno=335, col_offset=22), Str('-fa', lineno=335, col_offset=30), Str('-foa', lineno=335, col_offset=37), Str('-foo', lineno=335, col_offset=45), Str('-fo', lineno=335, col_offset=53), Str('-foo b', lineno=335, col_offset=60)], Load(), lineno=335, col_offset=15), lineno=335, col_offset=4), Assign([Name('successes', Store(), lineno=336, col_offset=4)], List([Tuple([Str('', lineno=337, col_offset=9), Call(Name('NS', Load(), lineno=337, col_offset=13), [], [keyword('foobar', Name('None', Load(), lineno=337, col_offset=23)), keyword('foorab', Name('None', Load(), lineno=337, col_offset=36))], None, None, lineno=337, col_offset=13)], Load(), lineno=337, col_offset=9), Tuple([Str('-foob a', lineno=338, col_offset=9), Call(Name('NS', Load(), lineno=338, col_offset=20), [], [keyword('foobar', Str('a', lineno=338, col_offset=30)), keyword('foorab', Name('None', Load(), lineno=338, col_offset=42))], None, None, lineno=338, col_offset=20)], Load(), lineno=338, col_offset=9), Tuple([Str('-foor a', lineno=339, col_offset=9), Call(Name('NS', Load(), lineno=339, col_offset=20), [], [keyword('foobar', Name('None', Load(), lineno=339, col_offset=30)), keyword('foorab', Str('a', lineno=339, col_offset=43))], None, None, lineno=339, col_offset=20)], Load(), lineno=339, col_offset=9), Tuple([Str('-fooba a', lineno=340, col_offset=9), Call(Name('NS', Load(), lineno=340, col_offset=21), [], [keyword('foobar', Str('a', lineno=340, col_offset=31)), keyword('foorab', Name('None', Load(), lineno=340, col_offset=43))], None, None, lineno=340, col_offset=21)], Load(), lineno=340, col_offset=9), Tuple([Str('-foora a', lineno=341, col_offset=9), Call(Name('NS', Load(), lineno=341, col_offset=21), [], [keyword('foobar', Name('None', Load(), lineno=341, col_offset=31)), keyword('foorab', Str('a', lineno=341, col_offset=44))], None, None, lineno=341, col_offset=21)], Load(), lineno=341, col_offset=9), Tuple([Str('-foobar a', lineno=342, col_offset=9), Call(Name('NS', Load(), lineno=342, col_offset=22), [], [keyword('foobar', Str('a', lineno=342, col_offset=32)), keyword('foorab', Name('None', Load(), lineno=342, col_offset=44))], None, None, lineno=342, col_offset=22)], Load(), lineno=342, col_offset=9), Tuple([Str('-foorab a', lineno=343, col_offset=9), Call(Name('NS', Load(), lineno=343, col_offset=22), [], [keyword('foobar', Name('None', Load(), lineno=343, col_offset=32)), keyword('foorab', Str('a', lineno=343, col_offset=45))], None, None, lineno=343, col_offset=22)], Load(), lineno=343, col_offset=9)], Load(), lineno=336, col_offset=16), lineno=336, col_offset=4)], [], lineno=331, col_offset=0), ClassDef('TestOptionalsNumeric', [Name('ParserTestCase', Load(), lineno=347, col_offset=27)], [Expr(Str('Test an Optional with a short opt string', lineno=348, col_offset=4), lineno=348, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=350, col_offset=4)], List([Call(Name('Sig', Load(), lineno=350, col_offset=27), [Str('-1', lineno=350, col_offset=31)], [keyword('dest', Str('one', lineno=350, col_offset=42))], None, None, lineno=350, col_offset=27)], Load(), lineno=350, col_offset=26), lineno=350, col_offset=4), Assign([Name('failures', Store(), lineno=351, col_offset=4)], List([Str('-1', lineno=351, col_offset=16), Str('a', lineno=351, col_offset=22), Str('-1 --foo', lineno=351, col_offset=27), Str('-1 -y', lineno=351, col_offset=39), Str('-1 -1', lineno=351, col_offset=48), Str('-1 -2', lineno=351, col_offset=57)], Load(), lineno=351, col_offset=15), lineno=351, col_offset=4), Assign([Name('successes', Store(), lineno=352, col_offset=4)], List([Tuple([Str('', lineno=353, col_offset=9), Call(Name('NS', Load(), lineno=353, col_offset=13), [], [keyword('one', Name('None', Load(), lineno=353, col_offset=20))], None, None, lineno=353, col_offset=13)], Load(), lineno=353, col_offset=9), Tuple([Str('-1 a', lineno=354, col_offset=9), Call(Name('NS', Load(), lineno=354, col_offset=17), [], [keyword('one', Str('a', lineno=354, col_offset=24))], None, None, lineno=354, col_offset=17)], Load(), lineno=354, col_offset=9), Tuple([Str('-1a', lineno=355, col_offset=9), Call(Name('NS', Load(), lineno=355, col_offset=16), [], [keyword('one', Str('a', lineno=355, col_offset=23))], None, None, lineno=355, col_offset=16)], Load(), lineno=355, col_offset=9), Tuple([Str('-1-2', lineno=356, col_offset=9), Call(Name('NS', Load(), lineno=356, col_offset=17), [], [keyword('one', Str('-2', lineno=356, col_offset=24))], None, None, lineno=356, col_offset=17)], Load(), lineno=356, col_offset=9)], Load(), lineno=352, col_offset=16), lineno=352, col_offset=4)], [], lineno=347, col_offset=0), ClassDef('TestOptionalsDoubleDash', [Name('ParserTestCase', Load(), lineno=360, col_offset=30)], [Expr(Str('Test an Optional with a double-dash option string', lineno=361, col_offset=4), lineno=361, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=363, col_offset=4)], List([Call(Name('Sig', Load(), lineno=363, col_offset=27), [Str('--foo', lineno=363, col_offset=31)], [], None, None, lineno=363, col_offset=27)], Load(), lineno=363, col_offset=26), lineno=363, col_offset=4), Assign([Name('failures', Store(), lineno=364, col_offset=4)], List([Str('--foo', lineno=364, col_offset=16), Str('-f', lineno=364, col_offset=25), Str('-f a', lineno=364, col_offset=31), Str('a', lineno=364, col_offset=39), Str('--foo -x', lineno=364, col_offset=44), Str('--foo --bar', lineno=364, col_offset=56)], Load(), lineno=364, col_offset=15), lineno=364, col_offset=4), Assign([Name('successes', Store(), lineno=365, col_offset=4)], List([Tuple([Str('', lineno=366, col_offset=9), Call(Name('NS', Load(), lineno=366, col_offset=13), [], [keyword('foo', Name('None', Load(), lineno=366, col_offset=20))], None, None, lineno=366, col_offset=13)], Load(), lineno=366, col_offset=9), Tuple([Str('--foo a', lineno=367, col_offset=9), Call(Name('NS', Load(), lineno=367, col_offset=20), [], [keyword('foo', Str('a', lineno=367, col_offset=27))], None, None, lineno=367, col_offset=20)], Load(), lineno=367, col_offset=9), Tuple([Str('--foo=a', lineno=368, col_offset=9), Call(Name('NS', Load(), lineno=368, col_offset=20), [], [keyword('foo', Str('a', lineno=368, col_offset=27))], None, None, lineno=368, col_offset=20)], Load(), lineno=368, col_offset=9), Tuple([Str('--foo -2.5', lineno=369, col_offset=9), Call(Name('NS', Load(), lineno=369, col_offset=23), [], [keyword('foo', Str('-2.5', lineno=369, col_offset=30))], None, None, lineno=369, col_offset=23)], Load(), lineno=369, col_offset=9), Tuple([Str('--foo=-2.5', lineno=370, col_offset=9), Call(Name('NS', Load(), lineno=370, col_offset=23), [], [keyword('foo', Str('-2.5', lineno=370, col_offset=30))], None, None, lineno=370, col_offset=23)], Load(), lineno=370, col_offset=9)], Load(), lineno=365, col_offset=16), lineno=365, col_offset=4)], [], lineno=360, col_offset=0), ClassDef('TestOptionalsDoubleDashPartialMatch', [Name('ParserTestCase', Load(), lineno=374, col_offset=42)], [Expr(Str('Tests partial matching with a double-dash option string', lineno=375, col_offset=4), lineno=375, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=377, col_offset=4)], List([Call(Name('Sig', Load(), lineno=378, col_offset=8), [Str('--badger', lineno=378, col_offset=12)], [keyword('action', Str('store_true', lineno=378, col_offset=31))], None, None, lineno=378, col_offset=8), Call(Name('Sig', Load(), lineno=379, col_offset=8), [Str('--bat', lineno=379, col_offset=12)], [], None, None, lineno=379, col_offset=8)], Load(), lineno=377, col_offset=26), lineno=377, col_offset=4), Assign([Name('failures', Store(), lineno=381, col_offset=4)], List([Str('--bar', lineno=381, col_offset=16), Str('--b', lineno=381, col_offset=25), Str('--ba', lineno=381, col_offset=32), Str('--b=2', lineno=381, col_offset=40), Str('--ba=4', lineno=381, col_offset=49), Str('--badge 5', lineno=381, col_offset=59)], Load(), lineno=381, col_offset=15), lineno=381, col_offset=4), Assign([Name('successes', Store(), lineno=382, col_offset=4)], List([Tuple([Str('', lineno=383, col_offset=9), Call(Name('NS', Load(), lineno=383, col_offset=13), [], [keyword('badger', Name('False', Load(), lineno=383, col_offset=23)), keyword('bat', Name('None', Load(), lineno=383, col_offset=34))], None, None, lineno=383, col_offset=13)], Load(), lineno=383, col_offset=9), Tuple([Str('--bat X', lineno=384, col_offset=9), Call(Name('NS', Load(), lineno=384, col_offset=20), [], [keyword('badger', Name('False', Load(), lineno=384, col_offset=30)), keyword('bat', Str('X', lineno=384, col_offset=41))], None, None, lineno=384, col_offset=20)], Load(), lineno=384, col_offset=9), Tuple([Str('--bad', lineno=385, col_offset=9), Call(Name('NS', Load(), lineno=385, col_offset=18), [], [keyword('badger', Name('True', Load(), lineno=385, col_offset=28)), keyword('bat', Name('None', Load(), lineno=385, col_offset=38))], None, None, lineno=385, col_offset=18)], Load(), lineno=385, col_offset=9), Tuple([Str('--badg', lineno=386, col_offset=9), Call(Name('NS', Load(), lineno=386, col_offset=19), [], [keyword('badger', Name('True', Load(), lineno=386, col_offset=29)), keyword('bat', Name('None', Load(), lineno=386, col_offset=39))], None, None, lineno=386, col_offset=19)], Load(), lineno=386, col_offset=9), Tuple([Str('--badge', lineno=387, col_offset=9), Call(Name('NS', Load(), lineno=387, col_offset=20), [], [keyword('badger', Name('True', Load(), lineno=387, col_offset=30)), keyword('bat', Name('None', Load(), lineno=387, col_offset=40))], None, None, lineno=387, col_offset=20)], Load(), lineno=387, col_offset=9), Tuple([Str('--badger', lineno=388, col_offset=9), Call(Name('NS', Load(), lineno=388, col_offset=21), [], [keyword('badger', Name('True', Load(), lineno=388, col_offset=31)), keyword('bat', Name('None', Load(), lineno=388, col_offset=41))], None, None, lineno=388, col_offset=21)], Load(), lineno=388, col_offset=9)], Load(), lineno=382, col_offset=16), lineno=382, col_offset=4)], [], lineno=374, col_offset=0), ClassDef('TestOptionalsDoubleDashPrefixMatch', [Name('ParserTestCase', Load(), lineno=392, col_offset=41)], [Expr(Str('Tests when one double-dash option string is a prefix of another', lineno=393, col_offset=4), lineno=393, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=395, col_offset=4)], List([Call(Name('Sig', Load(), lineno=396, col_offset=8), [Str('--badger', lineno=396, col_offset=12)], [keyword('action', Str('store_true', lineno=396, col_offset=31))], None, None, lineno=396, col_offset=8), Call(Name('Sig', Load(), lineno=397, col_offset=8), [Str('--ba', lineno=397, col_offset=12)], [], None, None, lineno=397, col_offset=8)], Load(), lineno=395, col_offset=26), lineno=395, col_offset=4), Assign([Name('failures', Store(), lineno=399, col_offset=4)], List([Str('--bar', lineno=399, col_offset=16), Str('--b', lineno=399, col_offset=25), Str('--ba', lineno=399, col_offset=32), Str('--b=2', lineno=399, col_offset=40), Str('--badge 5', lineno=399, col_offset=49)], Load(), lineno=399, col_offset=15), lineno=399, col_offset=4), Assign([Name('successes', Store(), lineno=400, col_offset=4)], List([Tuple([Str('', lineno=401, col_offset=9), Call(Name('NS', Load(), lineno=401, col_offset=13), [], [keyword('badger', Name('False', Load(), lineno=401, col_offset=23)), keyword('ba', Name('None', Load(), lineno=401, col_offset=33))], None, None, lineno=401, col_offset=13)], Load(), lineno=401, col_offset=9), Tuple([Str('--ba X', lineno=402, col_offset=9), Call(Name('NS', Load(), lineno=402, col_offset=19), [], [keyword('badger', Name('False', Load(), lineno=402, col_offset=29)), keyword('ba', Str('X', lineno=402, col_offset=39))], None, None, lineno=402, col_offset=19)], Load(), lineno=402, col_offset=9), Tuple([Str('--ba=X', lineno=403, col_offset=9), Call(Name('NS', Load(), lineno=403, col_offset=19), [], [keyword('badger', Name('False', Load(), lineno=403, col_offset=29)), keyword('ba', Str('X', lineno=403, col_offset=39))], None, None, lineno=403, col_offset=19)], Load(), lineno=403, col_offset=9), Tuple([Str('--bad', lineno=404, col_offset=9), Call(Name('NS', Load(), lineno=404, col_offset=18), [], [keyword('badger', Name('True', Load(), lineno=404, col_offset=28)), keyword('ba', Name('None', Load(), lineno=404, col_offset=37))], None, None, lineno=404, col_offset=18)], Load(), lineno=404, col_offset=9), Tuple([Str('--badg', lineno=405, col_offset=9), Call(Name('NS', Load(), lineno=405, col_offset=19), [], [keyword('badger', Name('True', Load(), lineno=405, col_offset=29)), keyword('ba', Name('None', Load(), lineno=405, col_offset=38))], None, None, lineno=405, col_offset=19)], Load(), lineno=405, col_offset=9), Tuple([Str('--badge', lineno=406, col_offset=9), Call(Name('NS', Load(), lineno=406, col_offset=20), [], [keyword('badger', Name('True', Load(), lineno=406, col_offset=30)), keyword('ba', Name('None', Load(), lineno=406, col_offset=39))], None, None, lineno=406, col_offset=20)], Load(), lineno=406, col_offset=9), Tuple([Str('--badger', lineno=407, col_offset=9), Call(Name('NS', Load(), lineno=407, col_offset=21), [], [keyword('badger', Name('True', Load(), lineno=407, col_offset=31)), keyword('ba', Name('None', Load(), lineno=407, col_offset=40))], None, None, lineno=407, col_offset=21)], Load(), lineno=407, col_offset=9)], Load(), lineno=400, col_offset=16), lineno=400, col_offset=4)], [], lineno=392, col_offset=0), ClassDef('TestOptionalsSingleDoubleDash', [Name('ParserTestCase', Load(), lineno=411, col_offset=36)], [Expr(Str('Test an Optional with single- and double-dash option strings', lineno=412, col_offset=4), lineno=412, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=414, col_offset=4)], List([Call(Name('Sig', Load(), lineno=415, col_offset=8), [Str('-f', lineno=415, col_offset=12)], [keyword('action', Str('store_true', lineno=415, col_offset=25))], None, None, lineno=415, col_offset=8), Call(Name('Sig', Load(), lineno=416, col_offset=8), [Str('--bar', lineno=416, col_offset=12)], [], None, None, lineno=416, col_offset=8), Call(Name('Sig', Load(), lineno=417, col_offset=8), [Str('-baz', lineno=417, col_offset=12)], [keyword('action', Str('store_const', lineno=417, col_offset=27)), keyword('const', Num(42, lineno=417, col_offset=48))], None, None, lineno=417, col_offset=8)], Load(), lineno=414, col_offset=26), lineno=414, col_offset=4), Assign([Name('failures', Store(), lineno=419, col_offset=4)], List([Str('--bar', lineno=419, col_offset=16), Str('-fbar', lineno=419, col_offset=25), Str('-fbaz', lineno=419, col_offset=34), Str('-bazf', lineno=419, col_offset=43), Str('-b B', lineno=419, col_offset=52), Str('B', lineno=419, col_offset=60)], Load(), lineno=419, col_offset=15), lineno=419, col_offset=4), Assign([Name('successes', Store(), lineno=420, col_offset=4)], List([Tuple([Str('', lineno=421, col_offset=9), Call(Name('NS', Load(), lineno=421, col_offset=13), [], [keyword('f', Name('False', Load(), lineno=421, col_offset=18)), keyword('bar', Name('None', Load(), lineno=421, col_offset=29)), keyword('baz', Name('None', Load(), lineno=421, col_offset=39))], None, None, lineno=421, col_offset=13)], Load(), lineno=421, col_offset=9), Tuple([Str('-f', lineno=422, col_offset=9), Call(Name('NS', Load(), lineno=422, col_offset=15), [], [keyword('f', Name('True', Load(), lineno=422, col_offset=20)), keyword('bar', Name('None', Load(), lineno=422, col_offset=30)), keyword('baz', Name('None', Load(), lineno=422, col_offset=40))], None, None, lineno=422, col_offset=15)], Load(), lineno=422, col_offset=9), Tuple([Str('--ba B', lineno=423, col_offset=9), Call(Name('NS', Load(), lineno=423, col_offset=19), [], [keyword('f', Name('False', Load(), lineno=423, col_offset=24)), keyword('bar', Str('B', lineno=423, col_offset=35)), keyword('baz', Name('None', Load(), lineno=423, col_offset=44))], None, None, lineno=423, col_offset=19)], Load(), lineno=423, col_offset=9), Tuple([Str('-f --bar B', lineno=424, col_offset=9), Call(Name('NS', Load(), lineno=424, col_offset=23), [], [keyword('f', Name('True', Load(), lineno=424, col_offset=28)), keyword('bar', Str('B', lineno=424, col_offset=38)), keyword('baz', Name('None', Load(), lineno=424, col_offset=47))], None, None, lineno=424, col_offset=23)], Load(), lineno=424, col_offset=9), Tuple([Str('-f -b', lineno=425, col_offset=9), Call(Name('NS', Load(), lineno=425, col_offset=18), [], [keyword('f', Name('True', Load(), lineno=425, col_offset=23)), keyword('bar', Name('None', Load(), lineno=425, col_offset=33)), keyword('baz', Num(42, lineno=425, col_offset=43))], None, None, lineno=425, col_offset=18)], Load(), lineno=425, col_offset=9), Tuple([Str('-ba -f', lineno=426, col_offset=9), Call(Name('NS', Load(), lineno=426, col_offset=19), [], [keyword('f', Name('True', Load(), lineno=426, col_offset=24)), keyword('bar', Name('None', Load(), lineno=426, col_offset=34)), keyword('baz', Num(42, lineno=426, col_offset=44))], None, None, lineno=426, col_offset=19)], Load(), lineno=426, col_offset=9)], Load(), lineno=420, col_offset=16), lineno=420, col_offset=4)], [], lineno=411, col_offset=0), ClassDef('TestOptionalsAlternatePrefixChars', [Name('ParserTestCase', Load(), lineno=430, col_offset=40)], [Expr(Str('Test an Optional with option strings with custom prefixes', lineno=431, col_offset=4), lineno=431, col_offset=4), Assign([Name('parser_signature', Store(), lineno=433, col_offset=4)], Call(Name('Sig', Load(), lineno=433, col_offset=23), [], [keyword('prefix_chars', Str('+:/', lineno=433, col_offset=40)), keyword('add_help', Name('False', Load(), lineno=433, col_offset=56))], None, None, lineno=433, col_offset=23), lineno=433, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=434, col_offset=4)], List([Call(Name('Sig', Load(), lineno=435, col_offset=8), [Str('+f', lineno=435, col_offset=12)], [keyword('action', Str('store_true', lineno=435, col_offset=25))], None, None, lineno=435, col_offset=8), Call(Name('Sig', Load(), lineno=436, col_offset=8), [Str('::bar', lineno=436, col_offset=12)], [], None, None, lineno=436, col_offset=8), Call(Name('Sig', Load(), lineno=437, col_offset=8), [Str('/baz', lineno=437, col_offset=12)], [keyword('action', Str('store_const', lineno=437, col_offset=27)), keyword('const', Num(42, lineno=437, col_offset=48))], None, None, lineno=437, col_offset=8)], Load(), lineno=434, col_offset=26), lineno=434, col_offset=4), Assign([Name('failures', Store(), lineno=439, col_offset=4)], List([Str('--bar', lineno=439, col_offset=16), Str('-fbar', lineno=439, col_offset=25), Str('-b B', lineno=439, col_offset=34), Str('B', lineno=439, col_offset=42), Str('-f', lineno=439, col_offset=47), Str('--bar B', lineno=439, col_offset=53), Str('-baz', lineno=439, col_offset=64), Str('-h', lineno=439, col_offset=72), Str('--help', lineno=439, col_offset=78), Str('+h', lineno=439, col_offset=88), Str('::help', lineno=439, col_offset=94), Str('/help', lineno=439, col_offset=104)], Load(), lineno=439, col_offset=15), lineno=439, col_offset=4), Assign([Name('successes', Store(), lineno=440, col_offset=4)], List([Tuple([Str('', lineno=441, col_offset=9), Call(Name('NS', Load(), lineno=441, col_offset=13), [], [keyword('f', Name('False', Load(), lineno=441, col_offset=18)), keyword('bar', Name('None', Load(), lineno=441, col_offset=29)), keyword('baz', Name('None', Load(), lineno=441, col_offset=39))], None, None, lineno=441, col_offset=13)], Load(), lineno=441, col_offset=9), Tuple([Str('+f', lineno=442, col_offset=9), Call(Name('NS', Load(), lineno=442, col_offset=15), [], [keyword('f', Name('True', Load(), lineno=442, col_offset=20)), keyword('bar', Name('None', Load(), lineno=442, col_offset=30)), keyword('baz', Name('None', Load(), lineno=442, col_offset=40))], None, None, lineno=442, col_offset=15)], Load(), lineno=442, col_offset=9), Tuple([Str('::ba B', lineno=443, col_offset=9), Call(Name('NS', Load(), lineno=443, col_offset=19), [], [keyword('f', Name('False', Load(), lineno=443, col_offset=24)), keyword('bar', Str('B', lineno=443, col_offset=35)), keyword('baz', Name('None', Load(), lineno=443, col_offset=44))], None, None, lineno=443, col_offset=19)], Load(), lineno=443, col_offset=9), Tuple([Str('+f ::bar B', lineno=444, col_offset=9), Call(Name('NS', Load(), lineno=444, col_offset=23), [], [keyword('f', Name('True', Load(), lineno=444, col_offset=28)), keyword('bar', Str('B', lineno=444, col_offset=38)), keyword('baz', Name('None', Load(), lineno=444, col_offset=47))], None, None, lineno=444, col_offset=23)], Load(), lineno=444, col_offset=9), Tuple([Str('+f /b', lineno=445, col_offset=9), Call(Name('NS', Load(), lineno=445, col_offset=18), [], [keyword('f', Name('True', Load(), lineno=445, col_offset=23)), keyword('bar', Name('None', Load(), lineno=445, col_offset=33)), keyword('baz', Num(42, lineno=445, col_offset=43))], None, None, lineno=445, col_offset=18)], Load(), lineno=445, col_offset=9), Tuple([Str('/ba +f', lineno=446, col_offset=9), Call(Name('NS', Load(), lineno=446, col_offset=19), [], [keyword('f', Name('True', Load(), lineno=446, col_offset=24)), keyword('bar', Name('None', Load(), lineno=446, col_offset=34)), keyword('baz', Num(42, lineno=446, col_offset=44))], None, None, lineno=446, col_offset=19)], Load(), lineno=446, col_offset=9)], Load(), lineno=440, col_offset=16), lineno=440, col_offset=4)], [], lineno=430, col_offset=0), ClassDef('TestOptionalsAlternatePrefixCharsAddedHelp', [Name('ParserTestCase', Load(), lineno=450, col_offset=49)], [Expr(Str('When ``-`` not in prefix_chars, default operators created for help\n       should use the prefix_chars in use rather than - or --\n       http://bugs.python.org/issue9444', lineno=453, col_offset=-1), lineno=453, col_offset=-1), Assign([Name('parser_signature', Store(), lineno=455, col_offset=4)], Call(Name('Sig', Load(), lineno=455, col_offset=23), [], [keyword('prefix_chars', Str('+:/', lineno=455, col_offset=40)), keyword('add_help', Name('True', Load(), lineno=455, col_offset=56))], None, None, lineno=455, col_offset=23), lineno=455, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=456, col_offset=4)], List([Call(Name('Sig', Load(), lineno=457, col_offset=8), [Str('+f', lineno=457, col_offset=12)], [keyword('action', Str('store_true', lineno=457, col_offset=25))], None, None, lineno=457, col_offset=8), Call(Name('Sig', Load(), lineno=458, col_offset=8), [Str('::bar', lineno=458, col_offset=12)], [], None, None, lineno=458, col_offset=8), Call(Name('Sig', Load(), lineno=459, col_offset=8), [Str('/baz', lineno=459, col_offset=12)], [keyword('action', Str('store_const', lineno=459, col_offset=27)), keyword('const', Num(42, lineno=459, col_offset=48))], None, None, lineno=459, col_offset=8)], Load(), lineno=456, col_offset=26), lineno=456, col_offset=4), Assign([Name('failures', Store(), lineno=461, col_offset=4)], List([Str('--bar', lineno=461, col_offset=16), Str('-fbar', lineno=461, col_offset=25), Str('-b B', lineno=461, col_offset=34), Str('B', lineno=461, col_offset=42), Str('-f', lineno=461, col_offset=47), Str('--bar B', lineno=461, col_offset=53), Str('-baz', lineno=461, col_offset=64)], Load(), lineno=461, col_offset=15), lineno=461, col_offset=4), Assign([Name('successes', Store(), lineno=462, col_offset=4)], List([Tuple([Str('', lineno=463, col_offset=9), Call(Name('NS', Load(), lineno=463, col_offset=13), [], [keyword('f', Name('False', Load(), lineno=463, col_offset=18)), keyword('bar', Name('None', Load(), lineno=463, col_offset=29)), keyword('baz', Name('None', Load(), lineno=463, col_offset=39))], None, None, lineno=463, col_offset=13)], Load(), lineno=463, col_offset=9), Tuple([Str('+f', lineno=464, col_offset=9), Call(Name('NS', Load(), lineno=464, col_offset=15), [], [keyword('f', Name('True', Load(), lineno=464, col_offset=20)), keyword('bar', Name('None', Load(), lineno=464, col_offset=30)), keyword('baz', Name('None', Load(), lineno=464, col_offset=40))], None, None, lineno=464, col_offset=15)], Load(), lineno=464, col_offset=9), Tuple([Str('::ba B', lineno=465, col_offset=9), Call(Name('NS', Load(), lineno=465, col_offset=19), [], [keyword('f', Name('False', Load(), lineno=465, col_offset=24)), keyword('bar', Str('B', lineno=465, col_offset=35)), keyword('baz', Name('None', Load(), lineno=465, col_offset=44))], None, None, lineno=465, col_offset=19)], Load(), lineno=465, col_offset=9), Tuple([Str('+f ::bar B', lineno=466, col_offset=9), Call(Name('NS', Load(), lineno=466, col_offset=23), [], [keyword('f', Name('True', Load(), lineno=466, col_offset=28)), keyword('bar', Str('B', lineno=466, col_offset=38)), keyword('baz', Name('None', Load(), lineno=466, col_offset=47))], None, None, lineno=466, col_offset=23)], Load(), lineno=466, col_offset=9), Tuple([Str('+f /b', lineno=467, col_offset=9), Call(Name('NS', Load(), lineno=467, col_offset=18), [], [keyword('f', Name('True', Load(), lineno=467, col_offset=23)), keyword('bar', Name('None', Load(), lineno=467, col_offset=33)), keyword('baz', Num(42, lineno=467, col_offset=43))], None, None, lineno=467, col_offset=18)], Load(), lineno=467, col_offset=9), Tuple([Str('/ba +f', lineno=468, col_offset=9), Call(Name('NS', Load(), lineno=468, col_offset=19), [], [keyword('f', Name('True', Load(), lineno=468, col_offset=24)), keyword('bar', Name('None', Load(), lineno=468, col_offset=34)), keyword('baz', Num(42, lineno=468, col_offset=44))], None, None, lineno=468, col_offset=19)], Load(), lineno=468, col_offset=9)], Load(), lineno=462, col_offset=16), lineno=462, col_offset=4)], [], lineno=450, col_offset=0), ClassDef('TestOptionalsAlternatePrefixCharsMultipleShortArgs', [Name('ParserTestCase', Load(), lineno=472, col_offset=57)], [Expr(Str('Verify that Optionals must be called with their defined prefixes', lineno=473, col_offset=4), lineno=473, col_offset=4), Assign([Name('parser_signature', Store(), lineno=475, col_offset=4)], Call(Name('Sig', Load(), lineno=475, col_offset=23), [], [keyword('prefix_chars', Str('+-', lineno=475, col_offset=40)), keyword('add_help', Name('False', Load(), lineno=475, col_offset=55))], None, None, lineno=475, col_offset=23), lineno=475, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=476, col_offset=4)], List([Call(Name('Sig', Load(), lineno=477, col_offset=8), [Str('-x', lineno=477, col_offset=12)], [keyword('action', Str('store_true', lineno=477, col_offset=25))], None, None, lineno=477, col_offset=8), Call(Name('Sig', Load(), lineno=478, col_offset=8), [Str('+y', lineno=478, col_offset=12)], [keyword('action', Str('store_true', lineno=478, col_offset=25))], None, None, lineno=478, col_offset=8), Call(Name('Sig', Load(), lineno=479, col_offset=8), [Str('+z', lineno=479, col_offset=12)], [keyword('action', Str('store_true', lineno=479, col_offset=25))], None, None, lineno=479, col_offset=8)], Load(), lineno=476, col_offset=26), lineno=476, col_offset=4), Assign([Name('failures', Store(), lineno=481, col_offset=4)], List([Str('-w', lineno=481, col_offset=16), Str('-xyz', lineno=482, col_offset=16), Str('+x', lineno=483, col_offset=16), Str('-y', lineno=484, col_offset=16), Str('+xyz', lineno=485, col_offset=16)], Load(), lineno=481, col_offset=15), lineno=481, col_offset=4), Assign([Name('successes', Store(), lineno=487, col_offset=4)], List([Tuple([Str('', lineno=488, col_offset=9), Call(Name('NS', Load(), lineno=488, col_offset=13), [], [keyword('x', Name('False', Load(), lineno=488, col_offset=18)), keyword('y', Name('False', Load(), lineno=488, col_offset=27)), keyword('z', Name('False', Load(), lineno=488, col_offset=36))], None, None, lineno=488, col_offset=13)], Load(), lineno=488, col_offset=9), Tuple([Str('-x', lineno=489, col_offset=9), Call(Name('NS', Load(), lineno=489, col_offset=15), [], [keyword('x', Name('True', Load(), lineno=489, col_offset=20)), keyword('y', Name('False', Load(), lineno=489, col_offset=28)), keyword('z', Name('False', Load(), lineno=489, col_offset=37))], None, None, lineno=489, col_offset=15)], Load(), lineno=489, col_offset=9), Tuple([Str('+y -x', lineno=490, col_offset=9), Call(Name('NS', Load(), lineno=490, col_offset=18), [], [keyword('x', Name('True', Load(), lineno=490, col_offset=23)), keyword('y', Name('True', Load(), lineno=490, col_offset=31)), keyword('z', Name('False', Load(), lineno=490, col_offset=39))], None, None, lineno=490, col_offset=18)], Load(), lineno=490, col_offset=9), Tuple([Str('+yz -x', lineno=491, col_offset=9), Call(Name('NS', Load(), lineno=491, col_offset=19), [], [keyword('x', Name('True', Load(), lineno=491, col_offset=24)), keyword('y', Name('True', Load(), lineno=491, col_offset=32)), keyword('z', Name('True', Load(), lineno=491, col_offset=40))], None, None, lineno=491, col_offset=19)], Load(), lineno=491, col_offset=9)], Load(), lineno=487, col_offset=16), lineno=487, col_offset=4)], [], lineno=472, col_offset=0), ClassDef('TestOptionalsShortLong', [Name('ParserTestCase', Load(), lineno=495, col_offset=29)], [Expr(Str('Test a combination of single- and double-dash option strings', lineno=496, col_offset=4), lineno=496, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=498, col_offset=4)], List([Call(Name('Sig', Load(), lineno=499, col_offset=8), [Str('-v', lineno=499, col_offset=12), Str('--verbose', lineno=499, col_offset=18), Str('-n', lineno=499, col_offset=31), Str('--noisy', lineno=499, col_offset=37)], [keyword('action', Str('store_true', lineno=499, col_offset=55))], None, None, lineno=499, col_offset=8)], Load(), lineno=498, col_offset=26), lineno=498, col_offset=4), Assign([Name('failures', Store(), lineno=501, col_offset=4)], List([Str('--x --verbose', lineno=501, col_offset=16), Str('-N', lineno=501, col_offset=33), Str('a', lineno=501, col_offset=39), Str('-v x', lineno=501, col_offset=44)], Load(), lineno=501, col_offset=15), lineno=501, col_offset=4), Assign([Name('successes', Store(), lineno=502, col_offset=4)], List([Tuple([Str('', lineno=503, col_offset=9), Call(Name('NS', Load(), lineno=503, col_offset=13), [], [keyword('verbose', Name('False', Load(), lineno=503, col_offset=24))], None, None, lineno=503, col_offset=13)], Load(), lineno=503, col_offset=9), Tuple([Str('-v', lineno=504, col_offset=9), Call(Name('NS', Load(), lineno=504, col_offset=15), [], [keyword('verbose', Name('True', Load(), lineno=504, col_offset=26))], None, None, lineno=504, col_offset=15)], Load(), lineno=504, col_offset=9), Tuple([Str('--verbose', lineno=505, col_offset=9), Call(Name('NS', Load(), lineno=505, col_offset=22), [], [keyword('verbose', Name('True', Load(), lineno=505, col_offset=33))], None, None, lineno=505, col_offset=22)], Load(), lineno=505, col_offset=9), Tuple([Str('-n', lineno=506, col_offset=9), Call(Name('NS', Load(), lineno=506, col_offset=15), [], [keyword('verbose', Name('True', Load(), lineno=506, col_offset=26))], None, None, lineno=506, col_offset=15)], Load(), lineno=506, col_offset=9), Tuple([Str('--noisy', lineno=507, col_offset=9), Call(Name('NS', Load(), lineno=507, col_offset=20), [], [keyword('verbose', Name('True', Load(), lineno=507, col_offset=31))], None, None, lineno=507, col_offset=20)], Load(), lineno=507, col_offset=9)], Load(), lineno=502, col_offset=16), lineno=502, col_offset=4)], [], lineno=495, col_offset=0), ClassDef('TestOptionalsDest', [Name('ParserTestCase', Load(), lineno=511, col_offset=24)], [Expr(Str('Tests various means of setting destination', lineno=512, col_offset=4), lineno=512, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=514, col_offset=4)], List([Call(Name('Sig', Load(), lineno=514, col_offset=27), [Str('--foo-bar', lineno=514, col_offset=31)], [], None, None, lineno=514, col_offset=27), Call(Name('Sig', Load(), lineno=514, col_offset=45), [Str('--baz', lineno=514, col_offset=49)], [keyword('dest', Str('zabbaz', lineno=514, col_offset=63))], None, None, lineno=514, col_offset=45)], Load(), lineno=514, col_offset=26), lineno=514, col_offset=4), Assign([Name('failures', Store(), lineno=515, col_offset=4)], List([Str('a', lineno=515, col_offset=16)], Load(), lineno=515, col_offset=15), lineno=515, col_offset=4), Assign([Name('successes', Store(), lineno=516, col_offset=4)], List([Tuple([Str('--foo-bar f', lineno=517, col_offset=9), Call(Name('NS', Load(), lineno=517, col_offset=24), [], [keyword('foo_bar', Str('f', lineno=517, col_offset=35)), keyword('zabbaz', Name('None', Load(), lineno=517, col_offset=47))], None, None, lineno=517, col_offset=24)], Load(), lineno=517, col_offset=9), Tuple([Str('--baz g', lineno=518, col_offset=9), Call(Name('NS', Load(), lineno=518, col_offset=20), [], [keyword('foo_bar', Name('None', Load(), lineno=518, col_offset=31)), keyword('zabbaz', Str('g', lineno=518, col_offset=44))], None, None, lineno=518, col_offset=20)], Load(), lineno=518, col_offset=9), Tuple([Str('--foo-bar h --baz i', lineno=519, col_offset=9), Call(Name('NS', Load(), lineno=519, col_offset=32), [], [keyword('foo_bar', Str('h', lineno=519, col_offset=43)), keyword('zabbaz', Str('i', lineno=519, col_offset=55))], None, None, lineno=519, col_offset=32)], Load(), lineno=519, col_offset=9), Tuple([Str('--baz j --foo-bar k', lineno=520, col_offset=9), Call(Name('NS', Load(), lineno=520, col_offset=32), [], [keyword('foo_bar', Str('k', lineno=520, col_offset=43)), keyword('zabbaz', Str('j', lineno=520, col_offset=55))], None, None, lineno=520, col_offset=32)], Load(), lineno=520, col_offset=9)], Load(), lineno=516, col_offset=16), lineno=516, col_offset=4)], [], lineno=511, col_offset=0), ClassDef('TestOptionalsDefault', [Name('ParserTestCase', Load(), lineno=524, col_offset=27)], [Expr(Str('Tests specifying a default for an Optional', lineno=525, col_offset=4), lineno=525, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=527, col_offset=4)], List([Call(Name('Sig', Load(), lineno=527, col_offset=27), [Str('-x', lineno=527, col_offset=31)], [], None, None, lineno=527, col_offset=27), Call(Name('Sig', Load(), lineno=527, col_offset=38), [Str('-y', lineno=527, col_offset=42)], [keyword('default', Num(42, lineno=527, col_offset=56))], None, None, lineno=527, col_offset=38)], Load(), lineno=527, col_offset=26), lineno=527, col_offset=4), Assign([Name('failures', Store(), lineno=528, col_offset=4)], List([Str('a', lineno=528, col_offset=16)], Load(), lineno=528, col_offset=15), lineno=528, col_offset=4), Assign([Name('successes', Store(), lineno=529, col_offset=4)], List([Tuple([Str('', lineno=530, col_offset=9), Call(Name('NS', Load(), lineno=530, col_offset=13), [], [keyword('x', Name('None', Load(), lineno=530, col_offset=18)), keyword('y', Num(42, lineno=530, col_offset=26))], None, None, lineno=530, col_offset=13)], Load(), lineno=530, col_offset=9), Tuple([Str('-xx', lineno=531, col_offset=9), Call(Name('NS', Load(), lineno=531, col_offset=16), [], [keyword('x', Str('x', lineno=531, col_offset=21)), keyword('y', Num(42, lineno=531, col_offset=28))], None, None, lineno=531, col_offset=16)], Load(), lineno=531, col_offset=9), Tuple([Str('-yy', lineno=532, col_offset=9), Call(Name('NS', Load(), lineno=532, col_offset=16), [], [keyword('x', Name('None', Load(), lineno=532, col_offset=21)), keyword('y', Str('y', lineno=532, col_offset=29))], None, None, lineno=532, col_offset=16)], Load(), lineno=532, col_offset=9)], Load(), lineno=529, col_offset=16), lineno=529, col_offset=4)], [], lineno=524, col_offset=0), ClassDef('TestOptionalsNargsDefault', [Name('ParserTestCase', Load(), lineno=536, col_offset=32)], [Expr(Str('Tests not specifying the number of args for an Optional', lineno=537, col_offset=4), lineno=537, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=539, col_offset=4)], List([Call(Name('Sig', Load(), lineno=539, col_offset=27), [Str('-x', lineno=539, col_offset=31)], [], None, None, lineno=539, col_offset=27)], Load(), lineno=539, col_offset=26), lineno=539, col_offset=4), Assign([Name('failures', Store(), lineno=540, col_offset=4)], List([Str('a', lineno=540, col_offset=16), Str('-x', lineno=540, col_offset=21)], Load(), lineno=540, col_offset=15), lineno=540, col_offset=4), Assign([Name('successes', Store(), lineno=541, col_offset=4)], List([Tuple([Str('', lineno=542, col_offset=9), Call(Name('NS', Load(), lineno=542, col_offset=13), [], [keyword('x', Name('None', Load(), lineno=542, col_offset=18))], None, None, lineno=542, col_offset=13)], Load(), lineno=542, col_offset=9), Tuple([Str('-x a', lineno=543, col_offset=9), Call(Name('NS', Load(), lineno=543, col_offset=17), [], [keyword('x', Str('a', lineno=543, col_offset=22))], None, None, lineno=543, col_offset=17)], Load(), lineno=543, col_offset=9)], Load(), lineno=541, col_offset=16), lineno=541, col_offset=4)], [], lineno=536, col_offset=0), ClassDef('TestOptionalsNargs1', [Name('ParserTestCase', Load(), lineno=547, col_offset=26)], [Expr(Str('Tests specifying the 1 arg for an Optional', lineno=548, col_offset=4), lineno=548, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=550, col_offset=4)], List([Call(Name('Sig', Load(), lineno=550, col_offset=27), [Str('-x', lineno=550, col_offset=31)], [keyword('nargs', Num(1, lineno=550, col_offset=43))], None, None, lineno=550, col_offset=27)], Load(), lineno=550, col_offset=26), lineno=550, col_offset=4), Assign([Name('failures', Store(), lineno=551, col_offset=4)], List([Str('a', lineno=551, col_offset=16), Str('-x', lineno=551, col_offset=21)], Load(), lineno=551, col_offset=15), lineno=551, col_offset=4), Assign([Name('successes', Store(), lineno=552, col_offset=4)], List([Tuple([Str('', lineno=553, col_offset=9), Call(Name('NS', Load(), lineno=553, col_offset=13), [], [keyword('x', Name('None', Load(), lineno=553, col_offset=18))], None, None, lineno=553, col_offset=13)], Load(), lineno=553, col_offset=9), Tuple([Str('-x a', lineno=554, col_offset=9), Call(Name('NS', Load(), lineno=554, col_offset=17), [], [keyword('x', List([Str('a', lineno=554, col_offset=23)], Load(), lineno=554, col_offset=22))], None, None, lineno=554, col_offset=17)], Load(), lineno=554, col_offset=9)], Load(), lineno=552, col_offset=16), lineno=552, col_offset=4)], [], lineno=547, col_offset=0), ClassDef('TestOptionalsNargs3', [Name('ParserTestCase', Load(), lineno=558, col_offset=26)], [Expr(Str('Tests specifying the 3 args for an Optional', lineno=559, col_offset=4), lineno=559, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=561, col_offset=4)], List([Call(Name('Sig', Load(), lineno=561, col_offset=27), [Str('-x', lineno=561, col_offset=31)], [keyword('nargs', Num(3, lineno=561, col_offset=43))], None, None, lineno=561, col_offset=27)], Load(), lineno=561, col_offset=26), lineno=561, col_offset=4), Assign([Name('failures', Store(), lineno=562, col_offset=4)], List([Str('a', lineno=562, col_offset=16), Str('-x', lineno=562, col_offset=21), Str('-x a', lineno=562, col_offset=27), Str('-x a b', lineno=562, col_offset=35), Str('a -x', lineno=562, col_offset=45), Str('a -x b', lineno=562, col_offset=53)], Load(), lineno=562, col_offset=15), lineno=562, col_offset=4), Assign([Name('successes', Store(), lineno=563, col_offset=4)], List([Tuple([Str('', lineno=564, col_offset=9), Call(Name('NS', Load(), lineno=564, col_offset=13), [], [keyword('x', Name('None', Load(), lineno=564, col_offset=18))], None, None, lineno=564, col_offset=13)], Load(), lineno=564, col_offset=9), Tuple([Str('-x a b c', lineno=565, col_offset=9), Call(Name('NS', Load(), lineno=565, col_offset=21), [], [keyword('x', List([Str('a', lineno=565, col_offset=27), Str('b', lineno=565, col_offset=32), Str('c', lineno=565, col_offset=37)], Load(), lineno=565, col_offset=26))], None, None, lineno=565, col_offset=21)], Load(), lineno=565, col_offset=9)], Load(), lineno=563, col_offset=16), lineno=563, col_offset=4)], [], lineno=558, col_offset=0), ClassDef('TestOptionalsNargsOptional', [Name('ParserTestCase', Load(), lineno=569, col_offset=33)], [Expr(Str('Tests specifying an Optional arg for an Optional', lineno=570, col_offset=4), lineno=570, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=572, col_offset=4)], List([Call(Name('Sig', Load(), lineno=573, col_offset=8), [Str('-w', lineno=573, col_offset=12)], [keyword('nargs', Str('?', lineno=573, col_offset=24))], None, None, lineno=573, col_offset=8), Call(Name('Sig', Load(), lineno=574, col_offset=8), [Str('-x', lineno=574, col_offset=12)], [keyword('nargs', Str('?', lineno=574, col_offset=24)), keyword('const', Num(42, lineno=574, col_offset=35))], None, None, lineno=574, col_offset=8), Call(Name('Sig', Load(), lineno=575, col_offset=8), [Str('-y', lineno=575, col_offset=12)], [keyword('nargs', Str('?', lineno=575, col_offset=24)), keyword('default', Str('spam', lineno=575, col_offset=37))], None, None, lineno=575, col_offset=8), Call(Name('Sig', Load(), lineno=576, col_offset=8), [Str('-z', lineno=576, col_offset=12)], [keyword('nargs', Str('?', lineno=576, col_offset=24)), keyword('type', Name('int', Load(), lineno=576, col_offset=34)), keyword('const', Str('42', lineno=576, col_offset=45)), keyword('default', Str('84', lineno=576, col_offset=59))], None, None, lineno=576, col_offset=8)], Load(), lineno=572, col_offset=26), lineno=572, col_offset=4), Assign([Name('failures', Store(), lineno=578, col_offset=4)], List([Str('2', lineno=578, col_offset=16)], Load(), lineno=578, col_offset=15), lineno=578, col_offset=4), Assign([Name('successes', Store(), lineno=579, col_offset=4)], List([Tuple([Str('', lineno=580, col_offset=9), Call(Name('NS', Load(), lineno=580, col_offset=13), [], [keyword('w', Name('None', Load(), lineno=580, col_offset=18)), keyword('x', Name('None', Load(), lineno=580, col_offset=26)), keyword('y', Str('spam', lineno=580, col_offset=34)), keyword('z', Num(84, lineno=580, col_offset=44))], None, None, lineno=580, col_offset=13)], Load(), lineno=580, col_offset=9), Tuple([Str('-w', lineno=581, col_offset=9), Call(Name('NS', Load(), lineno=581, col_offset=15), [], [keyword('w', Name('None', Load(), lineno=581, col_offset=20)), keyword('x', Name('None', Load(), lineno=581, col_offset=28)), keyword('y', Str('spam', lineno=581, col_offset=36)), keyword('z', Num(84, lineno=581, col_offset=46))], None, None, lineno=581, col_offset=15)], Load(), lineno=581, col_offset=9), Tuple([Str('-w 2', lineno=582, col_offset=9), Call(Name('NS', Load(), lineno=582, col_offset=17), [], [keyword('w', Str('2', lineno=582, col_offset=22)), keyword('x', Name('None', Load(), lineno=582, col_offset=29)), keyword('y', Str('spam', lineno=582, col_offset=37)), keyword('z', Num(84, lineno=582, col_offset=47))], None, None, lineno=582, col_offset=17)], Load(), lineno=582, col_offset=9), Tuple([Str('-x', lineno=583, col_offset=9), Call(Name('NS', Load(), lineno=583, col_offset=15), [], [keyword('w', Name('None', Load(), lineno=583, col_offset=20)), keyword('x', Num(42, lineno=583, col_offset=28)), keyword('y', Str('spam', lineno=583, col_offset=34)), keyword('z', Num(84, lineno=583, col_offset=44))], None, None, lineno=583, col_offset=15)], Load(), lineno=583, col_offset=9), Tuple([Str('-x 2', lineno=584, col_offset=9), Call(Name('NS', Load(), lineno=584, col_offset=17), [], [keyword('w', Name('None', Load(), lineno=584, col_offset=22)), keyword('x', Str('2', lineno=584, col_offset=30)), keyword('y', Str('spam', lineno=584, col_offset=37)), keyword('z', Num(84, lineno=584, col_offset=47))], None, None, lineno=584, col_offset=17)], Load(), lineno=584, col_offset=9), Tuple([Str('-y', lineno=585, col_offset=9), Call(Name('NS', Load(), lineno=585, col_offset=15), [], [keyword('w', Name('None', Load(), lineno=585, col_offset=20)), keyword('x', Name('None', Load(), lineno=585, col_offset=28)), keyword('y', Name('None', Load(), lineno=585, col_offset=36)), keyword('z', Num(84, lineno=585, col_offset=44))], None, None, lineno=585, col_offset=15)], Load(), lineno=585, col_offset=9), Tuple([Str('-y 2', lineno=586, col_offset=9), Call(Name('NS', Load(), lineno=586, col_offset=17), [], [keyword('w', Name('None', Load(), lineno=586, col_offset=22)), keyword('x', Name('None', Load(), lineno=586, col_offset=30)), keyword('y', Str('2', lineno=586, col_offset=38)), keyword('z', Num(84, lineno=586, col_offset=45))], None, None, lineno=586, col_offset=17)], Load(), lineno=586, col_offset=9), Tuple([Str('-z', lineno=587, col_offset=9), Call(Name('NS', Load(), lineno=587, col_offset=15), [], [keyword('w', Name('None', Load(), lineno=587, col_offset=20)), keyword('x', Name('None', Load(), lineno=587, col_offset=28)), keyword('y', Str('spam', lineno=587, col_offset=36)), keyword('z', Num(42, lineno=587, col_offset=46))], None, None, lineno=587, col_offset=15)], Load(), lineno=587, col_offset=9), Tuple([Str('-z 2', lineno=588, col_offset=9), Call(Name('NS', Load(), lineno=588, col_offset=17), [], [keyword('w', Name('None', Load(), lineno=588, col_offset=22)), keyword('x', Name('None', Load(), lineno=588, col_offset=30)), keyword('y', Str('spam', lineno=588, col_offset=38)), keyword('z', Num(2, lineno=588, col_offset=48))], None, None, lineno=588, col_offset=17)], Load(), lineno=588, col_offset=9)], Load(), lineno=579, col_offset=16), lineno=579, col_offset=4)], [], lineno=569, col_offset=0), ClassDef('TestOptionalsNargsZeroOrMore', [Name('ParserTestCase', Load(), lineno=592, col_offset=35)], [Expr(Str('Tests specifying an args for an Optional that accepts zero or more', lineno=593, col_offset=4), lineno=593, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=595, col_offset=4)], List([Call(Name('Sig', Load(), lineno=596, col_offset=8), [Str('-x', lineno=596, col_offset=12)], [keyword('nargs', Str('*', lineno=596, col_offset=24))], None, None, lineno=596, col_offset=8), Call(Name('Sig', Load(), lineno=597, col_offset=8), [Str('-y', lineno=597, col_offset=12)], [keyword('nargs', Str('*', lineno=597, col_offset=24)), keyword('default', Str('spam', lineno=597, col_offset=37))], None, None, lineno=597, col_offset=8)], Load(), lineno=595, col_offset=26), lineno=595, col_offset=4), Assign([Name('failures', Store(), lineno=599, col_offset=4)], List([Str('a', lineno=599, col_offset=16)], Load(), lineno=599, col_offset=15), lineno=599, col_offset=4), Assign([Name('successes', Store(), lineno=600, col_offset=4)], List([Tuple([Str('', lineno=601, col_offset=9), Call(Name('NS', Load(), lineno=601, col_offset=13), [], [keyword('x', Name('None', Load(), lineno=601, col_offset=18)), keyword('y', Str('spam', lineno=601, col_offset=26))], None, None, lineno=601, col_offset=13)], Load(), lineno=601, col_offset=9), Tuple([Str('-x', lineno=602, col_offset=9), Call(Name('NS', Load(), lineno=602, col_offset=15), [], [keyword('x', List([], Load(), lineno=602, col_offset=20)), keyword('y', Str('spam', lineno=602, col_offset=26))], None, None, lineno=602, col_offset=15)], Load(), lineno=602, col_offset=9), Tuple([Str('-x a', lineno=603, col_offset=9), Call(Name('NS', Load(), lineno=603, col_offset=17), [], [keyword('x', List([Str('a', lineno=603, col_offset=23)], Load(), lineno=603, col_offset=22)), keyword('y', Str('spam', lineno=603, col_offset=31))], None, None, lineno=603, col_offset=17)], Load(), lineno=603, col_offset=9), Tuple([Str('-x a b', lineno=604, col_offset=9), Call(Name('NS', Load(), lineno=604, col_offset=19), [], [keyword('x', List([Str('a', lineno=604, col_offset=25), Str('b', lineno=604, col_offset=30)], Load(), lineno=604, col_offset=24)), keyword('y', Str('spam', lineno=604, col_offset=38))], None, None, lineno=604, col_offset=19)], Load(), lineno=604, col_offset=9), Tuple([Str('-y', lineno=605, col_offset=9), Call(Name('NS', Load(), lineno=605, col_offset=15), [], [keyword('x', Name('None', Load(), lineno=605, col_offset=20)), keyword('y', List([], Load(), lineno=605, col_offset=28))], None, None, lineno=605, col_offset=15)], Load(), lineno=605, col_offset=9), Tuple([Str('-y a', lineno=606, col_offset=9), Call(Name('NS', Load(), lineno=606, col_offset=17), [], [keyword('x', Name('None', Load(), lineno=606, col_offset=22)), keyword('y', List([Str('a', lineno=606, col_offset=31)], Load(), lineno=606, col_offset=30))], None, None, lineno=606, col_offset=17)], Load(), lineno=606, col_offset=9), Tuple([Str('-y a b', lineno=607, col_offset=9), Call(Name('NS', Load(), lineno=607, col_offset=19), [], [keyword('x', Name('None', Load(), lineno=607, col_offset=24)), keyword('y', List([Str('a', lineno=607, col_offset=33), Str('b', lineno=607, col_offset=38)], Load(), lineno=607, col_offset=32))], None, None, lineno=607, col_offset=19)], Load(), lineno=607, col_offset=9)], Load(), lineno=600, col_offset=16), lineno=600, col_offset=4)], [], lineno=592, col_offset=0), ClassDef('TestOptionalsNargsOneOrMore', [Name('ParserTestCase', Load(), lineno=611, col_offset=34)], [Expr(Str('Tests specifying an args for an Optional that accepts one or more', lineno=612, col_offset=4), lineno=612, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=614, col_offset=4)], List([Call(Name('Sig', Load(), lineno=615, col_offset=8), [Str('-x', lineno=615, col_offset=12)], [keyword('nargs', Str('+', lineno=615, col_offset=24))], None, None, lineno=615, col_offset=8), Call(Name('Sig', Load(), lineno=616, col_offset=8), [Str('-y', lineno=616, col_offset=12)], [keyword('nargs', Str('+', lineno=616, col_offset=24)), keyword('default', Str('spam', lineno=616, col_offset=37))], None, None, lineno=616, col_offset=8)], Load(), lineno=614, col_offset=26), lineno=614, col_offset=4), Assign([Name('failures', Store(), lineno=618, col_offset=4)], List([Str('a', lineno=618, col_offset=16), Str('-x', lineno=618, col_offset=21), Str('-y', lineno=618, col_offset=27), Str('a -x', lineno=618, col_offset=33), Str('a -y b', lineno=618, col_offset=41)], Load(), lineno=618, col_offset=15), lineno=618, col_offset=4), Assign([Name('successes', Store(), lineno=619, col_offset=4)], List([Tuple([Str('', lineno=620, col_offset=9), Call(Name('NS', Load(), lineno=620, col_offset=13), [], [keyword('x', Name('None', Load(), lineno=620, col_offset=18)), keyword('y', Str('spam', lineno=620, col_offset=26))], None, None, lineno=620, col_offset=13)], Load(), lineno=620, col_offset=9), Tuple([Str('-x a', lineno=621, col_offset=9), Call(Name('NS', Load(), lineno=621, col_offset=17), [], [keyword('x', List([Str('a', lineno=621, col_offset=23)], Load(), lineno=621, col_offset=22)), keyword('y', Str('spam', lineno=621, col_offset=31))], None, None, lineno=621, col_offset=17)], Load(), lineno=621, col_offset=9), Tuple([Str('-x a b', lineno=622, col_offset=9), Call(Name('NS', Load(), lineno=622, col_offset=19), [], [keyword('x', List([Str('a', lineno=622, col_offset=25), Str('b', lineno=622, col_offset=30)], Load(), lineno=622, col_offset=24)), keyword('y', Str('spam', lineno=622, col_offset=38))], None, None, lineno=622, col_offset=19)], Load(), lineno=622, col_offset=9), Tuple([Str('-y a', lineno=623, col_offset=9), Call(Name('NS', Load(), lineno=623, col_offset=17), [], [keyword('x', Name('None', Load(), lineno=623, col_offset=22)), keyword('y', List([Str('a', lineno=623, col_offset=31)], Load(), lineno=623, col_offset=30))], None, None, lineno=623, col_offset=17)], Load(), lineno=623, col_offset=9), Tuple([Str('-y a b', lineno=624, col_offset=9), Call(Name('NS', Load(), lineno=624, col_offset=19), [], [keyword('x', Name('None', Load(), lineno=624, col_offset=24)), keyword('y', List([Str('a', lineno=624, col_offset=33), Str('b', lineno=624, col_offset=38)], Load(), lineno=624, col_offset=32))], None, None, lineno=624, col_offset=19)], Load(), lineno=624, col_offset=9)], Load(), lineno=619, col_offset=16), lineno=619, col_offset=4)], [], lineno=611, col_offset=0), ClassDef('TestOptionalsChoices', [Name('ParserTestCase', Load(), lineno=628, col_offset=27)], [Expr(Str('Tests specifying the choices for an Optional', lineno=629, col_offset=4), lineno=629, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=631, col_offset=4)], List([Call(Name('Sig', Load(), lineno=632, col_offset=8), [Str('-f', lineno=632, col_offset=12)], [keyword('choices', Str('abc', lineno=632, col_offset=26))], None, None, lineno=632, col_offset=8), Call(Name('Sig', Load(), lineno=633, col_offset=8), [Str('-g', lineno=633, col_offset=12)], [keyword('type', Name('int', Load(), lineno=633, col_offset=23)), keyword('choices', Call(Name('range', Load(), lineno=633, col_offset=36), [Num(5, lineno=633, col_offset=42)], [], None, None, lineno=633, col_offset=36))], None, None, lineno=633, col_offset=8)], Load(), lineno=631, col_offset=26), lineno=631, col_offset=4), Assign([Name('failures', Store(), lineno=634, col_offset=4)], List([Str('a', lineno=634, col_offset=16), Str('-f d', lineno=634, col_offset=21), Str('-fad', lineno=634, col_offset=29), Str('-ga', lineno=634, col_offset=37), Str('-g 6', lineno=634, col_offset=44)], Load(), lineno=634, col_offset=15), lineno=634, col_offset=4), Assign([Name('successes', Store(), lineno=635, col_offset=4)], List([Tuple([Str('', lineno=636, col_offset=9), Call(Name('NS', Load(), lineno=636, col_offset=13), [], [keyword('f', Name('None', Load(), lineno=636, col_offset=18)), keyword('g', Name('None', Load(), lineno=636, col_offset=26))], None, None, lineno=636, col_offset=13)], Load(), lineno=636, col_offset=9), Tuple([Str('-f a', lineno=637, col_offset=9), Call(Name('NS', Load(), lineno=637, col_offset=17), [], [keyword('f', Str('a', lineno=637, col_offset=22)), keyword('g', Name('None', Load(), lineno=637, col_offset=29))], None, None, lineno=637, col_offset=17)], Load(), lineno=637, col_offset=9), Tuple([Str('-f c', lineno=638, col_offset=9), Call(Name('NS', Load(), lineno=638, col_offset=17), [], [keyword('f', Str('c', lineno=638, col_offset=22)), keyword('g', Name('None', Load(), lineno=638, col_offset=29))], None, None, lineno=638, col_offset=17)], Load(), lineno=638, col_offset=9), Tuple([Str('-g 0', lineno=639, col_offset=9), Call(Name('NS', Load(), lineno=639, col_offset=17), [], [keyword('f', Name('None', Load(), lineno=639, col_offset=22)), keyword('g', Num(0, lineno=639, col_offset=30))], None, None, lineno=639, col_offset=17)], Load(), lineno=639, col_offset=9), Tuple([Str('-g 03', lineno=640, col_offset=9), Call(Name('NS', Load(), lineno=640, col_offset=18), [], [keyword('f', Name('None', Load(), lineno=640, col_offset=23)), keyword('g', Num(3, lineno=640, col_offset=31))], None, None, lineno=640, col_offset=18)], Load(), lineno=640, col_offset=9), Tuple([Str('-fb -g4', lineno=641, col_offset=9), Call(Name('NS', Load(), lineno=641, col_offset=20), [], [keyword('f', Str('b', lineno=641, col_offset=25)), keyword('g', Num(4, lineno=641, col_offset=32))], None, None, lineno=641, col_offset=20)], Load(), lineno=641, col_offset=9)], Load(), lineno=635, col_offset=16), lineno=635, col_offset=4)], [], lineno=628, col_offset=0), ClassDef('TestOptionalsRequired', [Name('ParserTestCase', Load(), lineno=645, col_offset=28)], [Expr(Str('Tests the an optional action that is required', lineno=646, col_offset=4), lineno=646, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=648, col_offset=4)], List([Call(Name('Sig', Load(), lineno=649, col_offset=8), [Str('-x', lineno=649, col_offset=12)], [keyword('type', Name('int', Load(), lineno=649, col_offset=23)), keyword('required', Name('True', Load(), lineno=649, col_offset=37))], None, None, lineno=649, col_offset=8)], Load(), lineno=648, col_offset=26), lineno=648, col_offset=4), Assign([Name('failures', Store(), lineno=651, col_offset=4)], List([Str('a', lineno=651, col_offset=16), Str('', lineno=651, col_offset=21)], Load(), lineno=651, col_offset=15), lineno=651, col_offset=4), Assign([Name('successes', Store(), lineno=652, col_offset=4)], List([Tuple([Str('-x 1', lineno=653, col_offset=9), Call(Name('NS', Load(), lineno=653, col_offset=17), [], [keyword('x', Num(1, lineno=653, col_offset=22))], None, None, lineno=653, col_offset=17)], Load(), lineno=653, col_offset=9), Tuple([Str('-x42', lineno=654, col_offset=9), Call(Name('NS', Load(), lineno=654, col_offset=17), [], [keyword('x', Num(42, lineno=654, col_offset=22))], None, None, lineno=654, col_offset=17)], Load(), lineno=654, col_offset=9)], Load(), lineno=652, col_offset=16), lineno=652, col_offset=4)], [], lineno=645, col_offset=0), ClassDef('TestOptionalsActionStore', [Name('ParserTestCase', Load(), lineno=658, col_offset=31)], [Expr(Str('Tests the store action for an Optional', lineno=659, col_offset=4), lineno=659, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=661, col_offset=4)], List([Call(Name('Sig', Load(), lineno=661, col_offset=27), [Str('-x', lineno=661, col_offset=31)], [keyword('action', Str('store', lineno=661, col_offset=44))], None, None, lineno=661, col_offset=27)], Load(), lineno=661, col_offset=26), lineno=661, col_offset=4), Assign([Name('failures', Store(), lineno=662, col_offset=4)], List([Str('a', lineno=662, col_offset=16), Str('a -x', lineno=662, col_offset=21)], Load(), lineno=662, col_offset=15), lineno=662, col_offset=4), Assign([Name('successes', Store(), lineno=663, col_offset=4)], List([Tuple([Str('', lineno=664, col_offset=9), Call(Name('NS', Load(), lineno=664, col_offset=13), [], [keyword('x', Name('None', Load(), lineno=664, col_offset=18))], None, None, lineno=664, col_offset=13)], Load(), lineno=664, col_offset=9), Tuple([Str('-xfoo', lineno=665, col_offset=9), Call(Name('NS', Load(), lineno=665, col_offset=18), [], [keyword('x', Str('foo', lineno=665, col_offset=23))], None, None, lineno=665, col_offset=18)], Load(), lineno=665, col_offset=9)], Load(), lineno=663, col_offset=16), lineno=663, col_offset=4)], [], lineno=658, col_offset=0), ClassDef('TestOptionalsActionStoreConst', [Name('ParserTestCase', Load(), lineno=669, col_offset=36)], [Expr(Str('Tests the store_const action for an Optional', lineno=670, col_offset=4), lineno=670, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=672, col_offset=4)], List([Call(Name('Sig', Load(), lineno=672, col_offset=27), [Str('-y', lineno=672, col_offset=31)], [keyword('action', Str('store_const', lineno=672, col_offset=44)), keyword('const', Name('object', Load(), lineno=672, col_offset=65))], None, None, lineno=672, col_offset=27)], Load(), lineno=672, col_offset=26), lineno=672, col_offset=4), Assign([Name('failures', Store(), lineno=673, col_offset=4)], List([Str('a', lineno=673, col_offset=16)], Load(), lineno=673, col_offset=15), lineno=673, col_offset=4), Assign([Name('successes', Store(), lineno=674, col_offset=4)], List([Tuple([Str('', lineno=675, col_offset=9), Call(Name('NS', Load(), lineno=675, col_offset=13), [], [keyword('y', Name('None', Load(), lineno=675, col_offset=18))], None, None, lineno=675, col_offset=13)], Load(), lineno=675, col_offset=9), Tuple([Str('-y', lineno=676, col_offset=9), Call(Name('NS', Load(), lineno=676, col_offset=15), [], [keyword('y', Name('object', Load(), lineno=676, col_offset=20))], None, None, lineno=676, col_offset=15)], Load(), lineno=676, col_offset=9)], Load(), lineno=674, col_offset=16), lineno=674, col_offset=4)], [], lineno=669, col_offset=0), ClassDef('TestOptionalsActionStoreFalse', [Name('ParserTestCase', Load(), lineno=680, col_offset=36)], [Expr(Str('Tests the store_false action for an Optional', lineno=681, col_offset=4), lineno=681, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=683, col_offset=4)], List([Call(Name('Sig', Load(), lineno=683, col_offset=27), [Str('-z', lineno=683, col_offset=31)], [keyword('action', Str('store_false', lineno=683, col_offset=44))], None, None, lineno=683, col_offset=27)], Load(), lineno=683, col_offset=26), lineno=683, col_offset=4), Assign([Name('failures', Store(), lineno=684, col_offset=4)], List([Str('a', lineno=684, col_offset=16), Str('-za', lineno=684, col_offset=21), Str('-z a', lineno=684, col_offset=28)], Load(), lineno=684, col_offset=15), lineno=684, col_offset=4), Assign([Name('successes', Store(), lineno=685, col_offset=4)], List([Tuple([Str('', lineno=686, col_offset=9), Call(Name('NS', Load(), lineno=686, col_offset=13), [], [keyword('z', Name('True', Load(), lineno=686, col_offset=18))], None, None, lineno=686, col_offset=13)], Load(), lineno=686, col_offset=9), Tuple([Str('-z', lineno=687, col_offset=9), Call(Name('NS', Load(), lineno=687, col_offset=15), [], [keyword('z', Name('False', Load(), lineno=687, col_offset=20))], None, None, lineno=687, col_offset=15)], Load(), lineno=687, col_offset=9)], Load(), lineno=685, col_offset=16), lineno=685, col_offset=4)], [], lineno=680, col_offset=0), ClassDef('TestOptionalsActionStoreTrue', [Name('ParserTestCase', Load(), lineno=691, col_offset=35)], [Expr(Str('Tests the store_true action for an Optional', lineno=692, col_offset=4), lineno=692, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=694, col_offset=4)], List([Call(Name('Sig', Load(), lineno=694, col_offset=27), [Str('--apple', lineno=694, col_offset=31)], [keyword('action', Str('store_true', lineno=694, col_offset=49))], None, None, lineno=694, col_offset=27)], Load(), lineno=694, col_offset=26), lineno=694, col_offset=4), Assign([Name('failures', Store(), lineno=695, col_offset=4)], List([Str('a', lineno=695, col_offset=16), Str('--apple=b', lineno=695, col_offset=21), Str('--apple b', lineno=695, col_offset=34)], Load(), lineno=695, col_offset=15), lineno=695, col_offset=4), Assign([Name('successes', Store(), lineno=696, col_offset=4)], List([Tuple([Str('', lineno=697, col_offset=9), Call(Name('NS', Load(), lineno=697, col_offset=13), [], [keyword('apple', Name('False', Load(), lineno=697, col_offset=22))], None, None, lineno=697, col_offset=13)], Load(), lineno=697, col_offset=9), Tuple([Str('--apple', lineno=698, col_offset=9), Call(Name('NS', Load(), lineno=698, col_offset=20), [], [keyword('apple', Name('True', Load(), lineno=698, col_offset=29))], None, None, lineno=698, col_offset=20)], Load(), lineno=698, col_offset=9)], Load(), lineno=696, col_offset=16), lineno=696, col_offset=4)], [], lineno=691, col_offset=0), ClassDef('TestOptionalsActionAppend', [Name('ParserTestCase', Load(), lineno=702, col_offset=32)], [Expr(Str('Tests the append action for an Optional', lineno=703, col_offset=4), lineno=703, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=705, col_offset=4)], List([Call(Name('Sig', Load(), lineno=705, col_offset=27), [Str('--baz', lineno=705, col_offset=31)], [keyword('action', Str('append', lineno=705, col_offset=47))], None, None, lineno=705, col_offset=27)], Load(), lineno=705, col_offset=26), lineno=705, col_offset=4), Assign([Name('failures', Store(), lineno=706, col_offset=4)], List([Str('a', lineno=706, col_offset=16), Str('--baz', lineno=706, col_offset=21), Str('a --baz', lineno=706, col_offset=30), Str('--baz a b', lineno=706, col_offset=41)], Load(), lineno=706, col_offset=15), lineno=706, col_offset=4), Assign([Name('successes', Store(), lineno=707, col_offset=4)], List([Tuple([Str('', lineno=708, col_offset=9), Call(Name('NS', Load(), lineno=708, col_offset=13), [], [keyword('baz', Name('None', Load(), lineno=708, col_offset=20))], None, None, lineno=708, col_offset=13)], Load(), lineno=708, col_offset=9), Tuple([Str('--baz a', lineno=709, col_offset=9), Call(Name('NS', Load(), lineno=709, col_offset=20), [], [keyword('baz', List([Str('a', lineno=709, col_offset=28)], Load(), lineno=709, col_offset=27))], None, None, lineno=709, col_offset=20)], Load(), lineno=709, col_offset=9), Tuple([Str('--baz a --baz b', lineno=710, col_offset=9), Call(Name('NS', Load(), lineno=710, col_offset=28), [], [keyword('baz', List([Str('a', lineno=710, col_offset=36), Str('b', lineno=710, col_offset=41)], Load(), lineno=710, col_offset=35))], None, None, lineno=710, col_offset=28)], Load(), lineno=710, col_offset=9)], Load(), lineno=707, col_offset=16), lineno=707, col_offset=4)], [], lineno=702, col_offset=0), ClassDef('TestOptionalsActionAppendWithDefault', [Name('ParserTestCase', Load(), lineno=714, col_offset=43)], [Expr(Str('Tests the append action for an Optional', lineno=715, col_offset=4), lineno=715, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=717, col_offset=4)], List([Call(Name('Sig', Load(), lineno=717, col_offset=27), [Str('--baz', lineno=717, col_offset=31)], [keyword('action', Str('append', lineno=717, col_offset=47)), keyword('default', List([Str('X', lineno=717, col_offset=66)], Load(), lineno=717, col_offset=65))], None, None, lineno=717, col_offset=27)], Load(), lineno=717, col_offset=26), lineno=717, col_offset=4), Assign([Name('failures', Store(), lineno=718, col_offset=4)], List([Str('a', lineno=718, col_offset=16), Str('--baz', lineno=718, col_offset=21), Str('a --baz', lineno=718, col_offset=30), Str('--baz a b', lineno=718, col_offset=41)], Load(), lineno=718, col_offset=15), lineno=718, col_offset=4), Assign([Name('successes', Store(), lineno=719, col_offset=4)], List([Tuple([Str('', lineno=720, col_offset=9), Call(Name('NS', Load(), lineno=720, col_offset=13), [], [keyword('baz', List([Str('X', lineno=720, col_offset=21)], Load(), lineno=720, col_offset=20))], None, None, lineno=720, col_offset=13)], Load(), lineno=720, col_offset=9), Tuple([Str('--baz a', lineno=721, col_offset=9), Call(Name('NS', Load(), lineno=721, col_offset=20), [], [keyword('baz', List([Str('X', lineno=721, col_offset=28), Str('a', lineno=721, col_offset=33)], Load(), lineno=721, col_offset=27))], None, None, lineno=721, col_offset=20)], Load(), lineno=721, col_offset=9), Tuple([Str('--baz a --baz b', lineno=722, col_offset=9), Call(Name('NS', Load(), lineno=722, col_offset=28), [], [keyword('baz', List([Str('X', lineno=722, col_offset=36), Str('a', lineno=722, col_offset=41), Str('b', lineno=722, col_offset=46)], Load(), lineno=722, col_offset=35))], None, None, lineno=722, col_offset=28)], Load(), lineno=722, col_offset=9)], Load(), lineno=719, col_offset=16), lineno=719, col_offset=4)], [], lineno=714, col_offset=0), ClassDef('TestOptionalsActionAppendConst', [Name('ParserTestCase', Load(), lineno=726, col_offset=37)], [Expr(Str('Tests the append_const action for an Optional', lineno=727, col_offset=4), lineno=727, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=729, col_offset=4)], List([Call(Name('Sig', Load(), lineno=730, col_offset=8), [Str('-b', lineno=730, col_offset=12)], [keyword('action', Str('append_const', lineno=730, col_offset=25)), keyword('const', Name('Exception', Load(), lineno=730, col_offset=47))], None, None, lineno=730, col_offset=8), Call(Name('Sig', Load(), lineno=731, col_offset=8), [Str('-c', lineno=731, col_offset=12)], [keyword('action', Str('append', lineno=731, col_offset=25)), keyword('dest', Str('b', lineno=731, col_offset=40))], None, None, lineno=731, col_offset=8)], Load(), lineno=729, col_offset=26), lineno=729, col_offset=4), Assign([Name('failures', Store(), lineno=733, col_offset=4)], List([Str('a', lineno=733, col_offset=16), Str('-c', lineno=733, col_offset=21), Str('a -c', lineno=733, col_offset=27), Str('-bx', lineno=733, col_offset=35), Str('-b x', lineno=733, col_offset=42)], Load(), lineno=733, col_offset=15), lineno=733, col_offset=4), Assign([Name('successes', Store(), lineno=734, col_offset=4)], List([Tuple([Str('', lineno=735, col_offset=9), Call(Name('NS', Load(), lineno=735, col_offset=13), [], [keyword('b', Name('None', Load(), lineno=735, col_offset=18))], None, None, lineno=735, col_offset=13)], Load(), lineno=735, col_offset=9), Tuple([Str('-b', lineno=736, col_offset=9), Call(Name('NS', Load(), lineno=736, col_offset=15), [], [keyword('b', List([Name('Exception', Load(), lineno=736, col_offset=21)], Load(), lineno=736, col_offset=20))], None, None, lineno=736, col_offset=15)], Load(), lineno=736, col_offset=9), Tuple([Str('-b -cx -b -cyz', lineno=737, col_offset=9), Call(Name('NS', Load(), lineno=737, col_offset=27), [], [keyword('b', List([Name('Exception', Load(), lineno=737, col_offset=33), Str('x', lineno=737, col_offset=44), Name('Exception', Load(), lineno=737, col_offset=49), Str('yz', lineno=737, col_offset=60)], Load(), lineno=737, col_offset=32))], None, None, lineno=737, col_offset=27)], Load(), lineno=737, col_offset=9)], Load(), lineno=734, col_offset=16), lineno=734, col_offset=4)], [], lineno=726, col_offset=0), ClassDef('TestOptionalsActionAppendConstWithDefault', [Name('ParserTestCase', Load(), lineno=741, col_offset=48)], [Expr(Str('Tests the append_const action for an Optional', lineno=742, col_offset=4), lineno=742, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=744, col_offset=4)], List([Call(Name('Sig', Load(), lineno=745, col_offset=8), [Str('-b', lineno=745, col_offset=12)], [keyword('action', Str('append_const', lineno=745, col_offset=25)), keyword('const', Name('Exception', Load(), lineno=745, col_offset=47)), keyword('default', List([Str('X', lineno=745, col_offset=67)], Load(), lineno=745, col_offset=66))], None, None, lineno=745, col_offset=8), Call(Name('Sig', Load(), lineno=746, col_offset=8), [Str('-c', lineno=746, col_offset=12)], [keyword('action', Str('append', lineno=746, col_offset=25)), keyword('dest', Str('b', lineno=746, col_offset=40))], None, None, lineno=746, col_offset=8)], Load(), lineno=744, col_offset=26), lineno=744, col_offset=4), Assign([Name('failures', Store(), lineno=748, col_offset=4)], List([Str('a', lineno=748, col_offset=16), Str('-c', lineno=748, col_offset=21), Str('a -c', lineno=748, col_offset=27), Str('-bx', lineno=748, col_offset=35), Str('-b x', lineno=748, col_offset=42)], Load(), lineno=748, col_offset=15), lineno=748, col_offset=4), Assign([Name('successes', Store(), lineno=749, col_offset=4)], List([Tuple([Str('', lineno=750, col_offset=9), Call(Name('NS', Load(), lineno=750, col_offset=13), [], [keyword('b', List([Str('X', lineno=750, col_offset=19)], Load(), lineno=750, col_offset=18))], None, None, lineno=750, col_offset=13)], Load(), lineno=750, col_offset=9), Tuple([Str('-b', lineno=751, col_offset=9), Call(Name('NS', Load(), lineno=751, col_offset=15), [], [keyword('b', List([Str('X', lineno=751, col_offset=21), Name('Exception', Load(), lineno=751, col_offset=26)], Load(), lineno=751, col_offset=20))], None, None, lineno=751, col_offset=15)], Load(), lineno=751, col_offset=9), Tuple([Str('-b -cx -b -cyz', lineno=752, col_offset=9), Call(Name('NS', Load(), lineno=752, col_offset=27), [], [keyword('b', List([Str('X', lineno=752, col_offset=33), Name('Exception', Load(), lineno=752, col_offset=38), Str('x', lineno=752, col_offset=49), Name('Exception', Load(), lineno=752, col_offset=54), Str('yz', lineno=752, col_offset=65)], Load(), lineno=752, col_offset=32))], None, None, lineno=752, col_offset=27)], Load(), lineno=752, col_offset=9)], Load(), lineno=749, col_offset=16), lineno=749, col_offset=4)], [], lineno=741, col_offset=0), ClassDef('TestOptionalsActionCount', [Name('ParserTestCase', Load(), lineno=756, col_offset=31)], [Expr(Str('Tests the count action for an Optional', lineno=757, col_offset=4), lineno=757, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=759, col_offset=4)], List([Call(Name('Sig', Load(), lineno=759, col_offset=27), [Str('-x', lineno=759, col_offset=31)], [keyword('action', Str('count', lineno=759, col_offset=44))], None, None, lineno=759, col_offset=27)], Load(), lineno=759, col_offset=26), lineno=759, col_offset=4), Assign([Name('failures', Store(), lineno=760, col_offset=4)], List([Str('a', lineno=760, col_offset=16), Str('-x a', lineno=760, col_offset=21), Str('-x b', lineno=760, col_offset=29), Str('-x a -x b', lineno=760, col_offset=37)], Load(), lineno=760, col_offset=15), lineno=760, col_offset=4), Assign([Name('successes', Store(), lineno=761, col_offset=4)], List([Tuple([Str('', lineno=762, col_offset=9), Call(Name('NS', Load(), lineno=762, col_offset=13), [], [keyword('x', Name('None', Load(), lineno=762, col_offset=18))], None, None, lineno=762, col_offset=13)], Load(), lineno=762, col_offset=9), Tuple([Str('-x', lineno=763, col_offset=9), Call(Name('NS', Load(), lineno=763, col_offset=15), [], [keyword('x', Num(1, lineno=763, col_offset=20))], None, None, lineno=763, col_offset=15)], Load(), lineno=763, col_offset=9)], Load(), lineno=761, col_offset=16), lineno=761, col_offset=4)], [], lineno=756, col_offset=0), ClassDef('TestPositionalsNargsNone', [Name('ParserTestCase', Load(), lineno=771, col_offset=31)], [Expr(Str("Test a Positional that doesn't specify nargs", lineno=772, col_offset=4), lineno=772, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=774, col_offset=4)], List([Call(Name('Sig', Load(), lineno=774, col_offset=27), [Str('foo', lineno=774, col_offset=31)], [], None, None, lineno=774, col_offset=27)], Load(), lineno=774, col_offset=26), lineno=774, col_offset=4), Assign([Name('failures', Store(), lineno=775, col_offset=4)], List([Str('', lineno=775, col_offset=16), Str('-x', lineno=775, col_offset=20), Str('a b', lineno=775, col_offset=26)], Load(), lineno=775, col_offset=15), lineno=775, col_offset=4), Assign([Name('successes', Store(), lineno=776, col_offset=4)], List([Tuple([Str('a', lineno=777, col_offset=9), Call(Name('NS', Load(), lineno=777, col_offset=14), [], [keyword('foo', Str('a', lineno=777, col_offset=21))], None, None, lineno=777, col_offset=14)], Load(), lineno=777, col_offset=9)], Load(), lineno=776, col_offset=16), lineno=776, col_offset=4)], [], lineno=771, col_offset=0), ClassDef('TestPositionalsNargs1', [Name('ParserTestCase', Load(), lineno=781, col_offset=28)], [Expr(Str('Test a Positional that specifies an nargs of 1', lineno=782, col_offset=4), lineno=782, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=784, col_offset=4)], List([Call(Name('Sig', Load(), lineno=784, col_offset=27), [Str('foo', lineno=784, col_offset=31)], [keyword('nargs', Num(1, lineno=784, col_offset=44))], None, None, lineno=784, col_offset=27)], Load(), lineno=784, col_offset=26), lineno=784, col_offset=4), Assign([Name('failures', Store(), lineno=785, col_offset=4)], List([Str('', lineno=785, col_offset=16), Str('-x', lineno=785, col_offset=20), Str('a b', lineno=785, col_offset=26)], Load(), lineno=785, col_offset=15), lineno=785, col_offset=4), Assign([Name('successes', Store(), lineno=786, col_offset=4)], List([Tuple([Str('a', lineno=787, col_offset=9), Call(Name('NS', Load(), lineno=787, col_offset=14), [], [keyword('foo', List([Str('a', lineno=787, col_offset=22)], Load(), lineno=787, col_offset=21))], None, None, lineno=787, col_offset=14)], Load(), lineno=787, col_offset=9)], Load(), lineno=786, col_offset=16), lineno=786, col_offset=4)], [], lineno=781, col_offset=0), ClassDef('TestPositionalsNargs2', [Name('ParserTestCase', Load(), lineno=791, col_offset=28)], [Expr(Str('Test a Positional that specifies an nargs of 2', lineno=792, col_offset=4), lineno=792, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=794, col_offset=4)], List([Call(Name('Sig', Load(), lineno=794, col_offset=27), [Str('foo', lineno=794, col_offset=31)], [keyword('nargs', Num(2, lineno=794, col_offset=44))], None, None, lineno=794, col_offset=27)], Load(), lineno=794, col_offset=26), lineno=794, col_offset=4), Assign([Name('failures', Store(), lineno=795, col_offset=4)], List([Str('', lineno=795, col_offset=16), Str('a', lineno=795, col_offset=20), Str('-x', lineno=795, col_offset=25), Str('a b c', lineno=795, col_offset=31)], Load(), lineno=795, col_offset=15), lineno=795, col_offset=4), Assign([Name('successes', Store(), lineno=796, col_offset=4)], List([Tuple([Str('a b', lineno=797, col_offset=9), Call(Name('NS', Load(), lineno=797, col_offset=16), [], [keyword('foo', List([Str('a', lineno=797, col_offset=24), Str('b', lineno=797, col_offset=29)], Load(), lineno=797, col_offset=23))], None, None, lineno=797, col_offset=16)], Load(), lineno=797, col_offset=9)], Load(), lineno=796, col_offset=16), lineno=796, col_offset=4)], [], lineno=791, col_offset=0), ClassDef('TestPositionalsNargsZeroOrMore', [Name('ParserTestCase', Load(), lineno=801, col_offset=37)], [Expr(Str('Test a Positional that specifies unlimited nargs', lineno=802, col_offset=4), lineno=802, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=804, col_offset=4)], List([Call(Name('Sig', Load(), lineno=804, col_offset=27), [Str('foo', lineno=804, col_offset=31)], [keyword('nargs', Str('*', lineno=804, col_offset=44))], None, None, lineno=804, col_offset=27)], Load(), lineno=804, col_offset=26), lineno=804, col_offset=4), Assign([Name('failures', Store(), lineno=805, col_offset=4)], List([Str('-x', lineno=805, col_offset=16)], Load(), lineno=805, col_offset=15), lineno=805, col_offset=4), Assign([Name('successes', Store(), lineno=806, col_offset=4)], List([Tuple([Str('', lineno=807, col_offset=9), Call(Name('NS', Load(), lineno=807, col_offset=13), [], [keyword('foo', List([], Load(), lineno=807, col_offset=20))], None, None, lineno=807, col_offset=13)], Load(), lineno=807, col_offset=9), Tuple([Str('a', lineno=808, col_offset=9), Call(Name('NS', Load(), lineno=808, col_offset=14), [], [keyword('foo', List([Str('a', lineno=808, col_offset=22)], Load(), lineno=808, col_offset=21))], None, None, lineno=808, col_offset=14)], Load(), lineno=808, col_offset=9), Tuple([Str('a b', lineno=809, col_offset=9), Call(Name('NS', Load(), lineno=809, col_offset=16), [], [keyword('foo', List([Str('a', lineno=809, col_offset=24), Str('b', lineno=809, col_offset=29)], Load(), lineno=809, col_offset=23))], None, None, lineno=809, col_offset=16)], Load(), lineno=809, col_offset=9)], Load(), lineno=806, col_offset=16), lineno=806, col_offset=4)], [], lineno=801, col_offset=0), ClassDef('TestPositionalsNargsZeroOrMoreDefault', [Name('ParserTestCase', Load(), lineno=813, col_offset=44)], [Expr(Str('Test a Positional that specifies unlimited nargs and a default', lineno=814, col_offset=4), lineno=814, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=816, col_offset=4)], List([Call(Name('Sig', Load(), lineno=816, col_offset=27), [Str('foo', lineno=816, col_offset=31)], [keyword('nargs', Str('*', lineno=816, col_offset=44)), keyword('default', Str('bar', lineno=816, col_offset=57))], None, None, lineno=816, col_offset=27)], Load(), lineno=816, col_offset=26), lineno=816, col_offset=4), Assign([Name('failures', Store(), lineno=817, col_offset=4)], List([Str('-x', lineno=817, col_offset=16)], Load(), lineno=817, col_offset=15), lineno=817, col_offset=4), Assign([Name('successes', Store(), lineno=818, col_offset=4)], List([Tuple([Str('', lineno=819, col_offset=9), Call(Name('NS', Load(), lineno=819, col_offset=13), [], [keyword('foo', Str('bar', lineno=819, col_offset=20))], None, None, lineno=819, col_offset=13)], Load(), lineno=819, col_offset=9), Tuple([Str('a', lineno=820, col_offset=9), Call(Name('NS', Load(), lineno=820, col_offset=14), [], [keyword('foo', List([Str('a', lineno=820, col_offset=22)], Load(), lineno=820, col_offset=21))], None, None, lineno=820, col_offset=14)], Load(), lineno=820, col_offset=9), Tuple([Str('a b', lineno=821, col_offset=9), Call(Name('NS', Load(), lineno=821, col_offset=16), [], [keyword('foo', List([Str('a', lineno=821, col_offset=24), Str('b', lineno=821, col_offset=29)], Load(), lineno=821, col_offset=23))], None, None, lineno=821, col_offset=16)], Load(), lineno=821, col_offset=9)], Load(), lineno=818, col_offset=16), lineno=818, col_offset=4)], [], lineno=813, col_offset=0), ClassDef('TestPositionalsNargsOneOrMore', [Name('ParserTestCase', Load(), lineno=825, col_offset=36)], [Expr(Str('Test a Positional that specifies one or more nargs', lineno=826, col_offset=4), lineno=826, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=828, col_offset=4)], List([Call(Name('Sig', Load(), lineno=828, col_offset=27), [Str('foo', lineno=828, col_offset=31)], [keyword('nargs', Str('+', lineno=828, col_offset=44))], None, None, lineno=828, col_offset=27)], Load(), lineno=828, col_offset=26), lineno=828, col_offset=4), Assign([Name('failures', Store(), lineno=829, col_offset=4)], List([Str('', lineno=829, col_offset=16), Str('-x', lineno=829, col_offset=20)], Load(), lineno=829, col_offset=15), lineno=829, col_offset=4), Assign([Name('successes', Store(), lineno=830, col_offset=4)], List([Tuple([Str('a', lineno=831, col_offset=9), Call(Name('NS', Load(), lineno=831, col_offset=14), [], [keyword('foo', List([Str('a', lineno=831, col_offset=22)], Load(), lineno=831, col_offset=21))], None, None, lineno=831, col_offset=14)], Load(), lineno=831, col_offset=9), Tuple([Str('a b', lineno=832, col_offset=9), Call(Name('NS', Load(), lineno=832, col_offset=16), [], [keyword('foo', List([Str('a', lineno=832, col_offset=24), Str('b', lineno=832, col_offset=29)], Load(), lineno=832, col_offset=23))], None, None, lineno=832, col_offset=16)], Load(), lineno=832, col_offset=9)], Load(), lineno=830, col_offset=16), lineno=830, col_offset=4)], [], lineno=825, col_offset=0), ClassDef('TestPositionalsNargsOptional', [Name('ParserTestCase', Load(), lineno=836, col_offset=35)], [Expr(Str('Tests an Optional Positional', lineno=837, col_offset=4), lineno=837, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=839, col_offset=4)], List([Call(Name('Sig', Load(), lineno=839, col_offset=27), [Str('foo', lineno=839, col_offset=31)], [keyword('nargs', Str('?', lineno=839, col_offset=44))], None, None, lineno=839, col_offset=27)], Load(), lineno=839, col_offset=26), lineno=839, col_offset=4), Assign([Name('failures', Store(), lineno=840, col_offset=4)], List([Str('-x', lineno=840, col_offset=16), Str('a b', lineno=840, col_offset=22)], Load(), lineno=840, col_offset=15), lineno=840, col_offset=4), Assign([Name('successes', Store(), lineno=841, col_offset=4)], List([Tuple([Str('', lineno=842, col_offset=9), Call(Name('NS', Load(), lineno=842, col_offset=13), [], [keyword('foo', Name('None', Load(), lineno=842, col_offset=20))], None, None, lineno=842, col_offset=13)], Load(), lineno=842, col_offset=9), Tuple([Str('a', lineno=843, col_offset=9), Call(Name('NS', Load(), lineno=843, col_offset=14), [], [keyword('foo', Str('a', lineno=843, col_offset=21))], None, None, lineno=843, col_offset=14)], Load(), lineno=843, col_offset=9)], Load(), lineno=841, col_offset=16), lineno=841, col_offset=4)], [], lineno=836, col_offset=0), ClassDef('TestPositionalsNargsOptionalDefault', [Name('ParserTestCase', Load(), lineno=847, col_offset=42)], [Expr(Str('Tests an Optional Positional with a default value', lineno=848, col_offset=4), lineno=848, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=850, col_offset=4)], List([Call(Name('Sig', Load(), lineno=850, col_offset=27), [Str('foo', lineno=850, col_offset=31)], [keyword('nargs', Str('?', lineno=850, col_offset=44)), keyword('default', Num(42, lineno=850, col_offset=57))], None, None, lineno=850, col_offset=27)], Load(), lineno=850, col_offset=26), lineno=850, col_offset=4), Assign([Name('failures', Store(), lineno=851, col_offset=4)], List([Str('-x', lineno=851, col_offset=16), Str('a b', lineno=851, col_offset=22)], Load(), lineno=851, col_offset=15), lineno=851, col_offset=4), Assign([Name('successes', Store(), lineno=852, col_offset=4)], List([Tuple([Str('', lineno=853, col_offset=9), Call(Name('NS', Load(), lineno=853, col_offset=13), [], [keyword('foo', Num(42, lineno=853, col_offset=20))], None, None, lineno=853, col_offset=13)], Load(), lineno=853, col_offset=9), Tuple([Str('a', lineno=854, col_offset=9), Call(Name('NS', Load(), lineno=854, col_offset=14), [], [keyword('foo', Str('a', lineno=854, col_offset=21))], None, None, lineno=854, col_offset=14)], Load(), lineno=854, col_offset=9)], Load(), lineno=852, col_offset=16), lineno=852, col_offset=4)], [], lineno=847, col_offset=0), ClassDef('TestPositionalsNargsOptionalConvertedDefault', [Name('ParserTestCase', Load(), lineno=858, col_offset=51)], [Expr(Str('Tests an Optional Positional with a default value\n    that needs to be converted to the appropriate type.\n    ', lineno=861, col_offset=-1), lineno=861, col_offset=-1), Assign([Name('argument_signatures', Store(), lineno=863, col_offset=4)], List([Call(Name('Sig', Load(), lineno=864, col_offset=8), [Str('foo', lineno=864, col_offset=12)], [keyword('nargs', Str('?', lineno=864, col_offset=25)), keyword('type', Name('int', Load(), lineno=864, col_offset=35)), keyword('default', Str('42', lineno=864, col_offset=48))], None, None, lineno=864, col_offset=8)], Load(), lineno=863, col_offset=26), lineno=863, col_offset=4), Assign([Name('failures', Store(), lineno=866, col_offset=4)], List([Str('-x', lineno=866, col_offset=16), Str('a b', lineno=866, col_offset=22), Str('1 2', lineno=866, col_offset=29)], Load(), lineno=866, col_offset=15), lineno=866, col_offset=4), Assign([Name('successes', Store(), lineno=867, col_offset=4)], List([Tuple([Str('', lineno=868, col_offset=9), Call(Name('NS', Load(), lineno=868, col_offset=13), [], [keyword('foo', Num(42, lineno=868, col_offset=20))], None, None, lineno=868, col_offset=13)], Load(), lineno=868, col_offset=9), Tuple([Str('1', lineno=869, col_offset=9), Call(Name('NS', Load(), lineno=869, col_offset=14), [], [keyword('foo', Num(1, lineno=869, col_offset=21))], None, None, lineno=869, col_offset=14)], Load(), lineno=869, col_offset=9)], Load(), lineno=867, col_offset=16), lineno=867, col_offset=4)], [], lineno=858, col_offset=0), ClassDef('TestPositionalsNargsNoneNone', [Name('ParserTestCase', Load(), lineno=873, col_offset=35)], [Expr(Str("Test two Positionals that don't specify nargs", lineno=874, col_offset=4), lineno=874, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=876, col_offset=4)], List([Call(Name('Sig', Load(), lineno=876, col_offset=27), [Str('foo', lineno=876, col_offset=31)], [], None, None, lineno=876, col_offset=27), Call(Name('Sig', Load(), lineno=876, col_offset=39), [Str('bar', lineno=876, col_offset=43)], [], None, None, lineno=876, col_offset=39)], Load(), lineno=876, col_offset=26), lineno=876, col_offset=4), Assign([Name('failures', Store(), lineno=877, col_offset=4)], List([Str('', lineno=877, col_offset=16), Str('-x', lineno=877, col_offset=20), Str('a', lineno=877, col_offset=26), Str('a b c', lineno=877, col_offset=31)], Load(), lineno=877, col_offset=15), lineno=877, col_offset=4), Assign([Name('successes', Store(), lineno=878, col_offset=4)], List([Tuple([Str('a b', lineno=879, col_offset=9), Call(Name('NS', Load(), lineno=879, col_offset=16), [], [keyword('foo', Str('a', lineno=879, col_offset=23)), keyword('bar', Str('b', lineno=879, col_offset=32))], None, None, lineno=879, col_offset=16)], Load(), lineno=879, col_offset=9)], Load(), lineno=878, col_offset=16), lineno=878, col_offset=4)], [], lineno=873, col_offset=0), ClassDef('TestPositionalsNargsNone1', [Name('ParserTestCase', Load(), lineno=883, col_offset=32)], [Expr(Str('Test a Positional with no nargs followed by one with 1', lineno=884, col_offset=4), lineno=884, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=886, col_offset=4)], List([Call(Name('Sig', Load(), lineno=886, col_offset=27), [Str('foo', lineno=886, col_offset=31)], [], None, None, lineno=886, col_offset=27), Call(Name('Sig', Load(), lineno=886, col_offset=39), [Str('bar', lineno=886, col_offset=43)], [keyword('nargs', Num(1, lineno=886, col_offset=56))], None, None, lineno=886, col_offset=39)], Load(), lineno=886, col_offset=26), lineno=886, col_offset=4), Assign([Name('failures', Store(), lineno=887, col_offset=4)], List([Str('', lineno=887, col_offset=16), Str('--foo', lineno=887, col_offset=20), Str('a', lineno=887, col_offset=29), Str('a b c', lineno=887, col_offset=34)], Load(), lineno=887, col_offset=15), lineno=887, col_offset=4), Assign([Name('successes', Store(), lineno=888, col_offset=4)], List([Tuple([Str('a b', lineno=889, col_offset=9), Call(Name('NS', Load(), lineno=889, col_offset=16), [], [keyword('foo', Str('a', lineno=889, col_offset=23)), keyword('bar', List([Str('b', lineno=889, col_offset=33)], Load(), lineno=889, col_offset=32))], None, None, lineno=889, col_offset=16)], Load(), lineno=889, col_offset=9)], Load(), lineno=888, col_offset=16), lineno=888, col_offset=4)], [], lineno=883, col_offset=0), ClassDef('TestPositionalsNargs2None', [Name('ParserTestCase', Load(), lineno=893, col_offset=32)], [Expr(Str('Test a Positional with 2 nargs followed by one with none', lineno=894, col_offset=4), lineno=894, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=896, col_offset=4)], List([Call(Name('Sig', Load(), lineno=896, col_offset=27), [Str('foo', lineno=896, col_offset=31)], [keyword('nargs', Num(2, lineno=896, col_offset=44))], None, None, lineno=896, col_offset=27), Call(Name('Sig', Load(), lineno=896, col_offset=48), [Str('bar', lineno=896, col_offset=52)], [], None, None, lineno=896, col_offset=48)], Load(), lineno=896, col_offset=26), lineno=896, col_offset=4), Assign([Name('failures', Store(), lineno=897, col_offset=4)], List([Str('', lineno=897, col_offset=16), Str('--foo', lineno=897, col_offset=20), Str('a', lineno=897, col_offset=29), Str('a b', lineno=897, col_offset=34), Str('a b c d', lineno=897, col_offset=41)], Load(), lineno=897, col_offset=15), lineno=897, col_offset=4), Assign([Name('successes', Store(), lineno=898, col_offset=4)], List([Tuple([Str('a b c', lineno=899, col_offset=9), Call(Name('NS', Load(), lineno=899, col_offset=18), [], [keyword('foo', List([Str('a', lineno=899, col_offset=26), Str('b', lineno=899, col_offset=31)], Load(), lineno=899, col_offset=25)), keyword('bar', Str('c', lineno=899, col_offset=41))], None, None, lineno=899, col_offset=18)], Load(), lineno=899, col_offset=9)], Load(), lineno=898, col_offset=16), lineno=898, col_offset=4)], [], lineno=893, col_offset=0), ClassDef('TestPositionalsNargsNoneZeroOrMore', [Name('ParserTestCase', Load(), lineno=903, col_offset=41)], [Expr(Str('Test a Positional with no nargs followed by one with unlimited', lineno=904, col_offset=4), lineno=904, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=906, col_offset=4)], List([Call(Name('Sig', Load(), lineno=906, col_offset=27), [Str('foo', lineno=906, col_offset=31)], [], None, None, lineno=906, col_offset=27), Call(Name('Sig', Load(), lineno=906, col_offset=39), [Str('bar', lineno=906, col_offset=43)], [keyword('nargs', Str('*', lineno=906, col_offset=56))], None, None, lineno=906, col_offset=39)], Load(), lineno=906, col_offset=26), lineno=906, col_offset=4), Assign([Name('failures', Store(), lineno=907, col_offset=4)], List([Str('', lineno=907, col_offset=16), Str('--foo', lineno=907, col_offset=20)], Load(), lineno=907, col_offset=15), lineno=907, col_offset=4), Assign([Name('successes', Store(), lineno=908, col_offset=4)], List([Tuple([Str('a', lineno=909, col_offset=9), Call(Name('NS', Load(), lineno=909, col_offset=14), [], [keyword('foo', Str('a', lineno=909, col_offset=21)), keyword('bar', List([], Load(), lineno=909, col_offset=30))], None, None, lineno=909, col_offset=14)], Load(), lineno=909, col_offset=9), Tuple([Str('a b', lineno=910, col_offset=9), Call(Name('NS', Load(), lineno=910, col_offset=16), [], [keyword('foo', Str('a', lineno=910, col_offset=23)), keyword('bar', List([Str('b', lineno=910, col_offset=33)], Load(), lineno=910, col_offset=32))], None, None, lineno=910, col_offset=16)], Load(), lineno=910, col_offset=9), Tuple([Str('a b c', lineno=911, col_offset=9), Call(Name('NS', Load(), lineno=911, col_offset=18), [], [keyword('foo', Str('a', lineno=911, col_offset=25)), keyword('bar', List([Str('b', lineno=911, col_offset=35), Str('c', lineno=911, col_offset=40)], Load(), lineno=911, col_offset=34))], None, None, lineno=911, col_offset=18)], Load(), lineno=911, col_offset=9)], Load(), lineno=908, col_offset=16), lineno=908, col_offset=4)], [], lineno=903, col_offset=0), ClassDef('TestPositionalsNargsNoneOneOrMore', [Name('ParserTestCase', Load(), lineno=915, col_offset=40)], [Expr(Str('Test a Positional with no nargs followed by one with one or more', lineno=916, col_offset=4), lineno=916, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=918, col_offset=4)], List([Call(Name('Sig', Load(), lineno=918, col_offset=27), [Str('foo', lineno=918, col_offset=31)], [], None, None, lineno=918, col_offset=27), Call(Name('Sig', Load(), lineno=918, col_offset=39), [Str('bar', lineno=918, col_offset=43)], [keyword('nargs', Str('+', lineno=918, col_offset=56))], None, None, lineno=918, col_offset=39)], Load(), lineno=918, col_offset=26), lineno=918, col_offset=4), Assign([Name('failures', Store(), lineno=919, col_offset=4)], List([Str('', lineno=919, col_offset=16), Str('--foo', lineno=919, col_offset=20), Str('a', lineno=919, col_offset=29)], Load(), lineno=919, col_offset=15), lineno=919, col_offset=4), Assign([Name('successes', Store(), lineno=920, col_offset=4)], List([Tuple([Str('a b', lineno=921, col_offset=9), Call(Name('NS', Load(), lineno=921, col_offset=16), [], [keyword('foo', Str('a', lineno=921, col_offset=23)), keyword('bar', List([Str('b', lineno=921, col_offset=33)], Load(), lineno=921, col_offset=32))], None, None, lineno=921, col_offset=16)], Load(), lineno=921, col_offset=9), Tuple([Str('a b c', lineno=922, col_offset=9), Call(Name('NS', Load(), lineno=922, col_offset=18), [], [keyword('foo', Str('a', lineno=922, col_offset=25)), keyword('bar', List([Str('b', lineno=922, col_offset=35), Str('c', lineno=922, col_offset=40)], Load(), lineno=922, col_offset=34))], None, None, lineno=922, col_offset=18)], Load(), lineno=922, col_offset=9)], Load(), lineno=920, col_offset=16), lineno=920, col_offset=4)], [], lineno=915, col_offset=0), ClassDef('TestPositionalsNargsNoneOptional', [Name('ParserTestCase', Load(), lineno=926, col_offset=39)], [Expr(Str('Test a Positional with no nargs followed by one with an Optional', lineno=927, col_offset=4), lineno=927, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=929, col_offset=4)], List([Call(Name('Sig', Load(), lineno=929, col_offset=27), [Str('foo', lineno=929, col_offset=31)], [], None, None, lineno=929, col_offset=27), Call(Name('Sig', Load(), lineno=929, col_offset=39), [Str('bar', lineno=929, col_offset=43)], [keyword('nargs', Str('?', lineno=929, col_offset=56))], None, None, lineno=929, col_offset=39)], Load(), lineno=929, col_offset=26), lineno=929, col_offset=4), Assign([Name('failures', Store(), lineno=930, col_offset=4)], List([Str('', lineno=930, col_offset=16), Str('--foo', lineno=930, col_offset=20), Str('a b c', lineno=930, col_offset=29)], Load(), lineno=930, col_offset=15), lineno=930, col_offset=4), Assign([Name('successes', Store(), lineno=931, col_offset=4)], List([Tuple([Str('a', lineno=932, col_offset=9), Call(Name('NS', Load(), lineno=932, col_offset=14), [], [keyword('foo', Str('a', lineno=932, col_offset=21)), keyword('bar', Name('None', Load(), lineno=932, col_offset=30))], None, None, lineno=932, col_offset=14)], Load(), lineno=932, col_offset=9), Tuple([Str('a b', lineno=933, col_offset=9), Call(Name('NS', Load(), lineno=933, col_offset=16), [], [keyword('foo', Str('a', lineno=933, col_offset=23)), keyword('bar', Str('b', lineno=933, col_offset=32))], None, None, lineno=933, col_offset=16)], Load(), lineno=933, col_offset=9)], Load(), lineno=931, col_offset=16), lineno=931, col_offset=4)], [], lineno=926, col_offset=0), ClassDef('TestPositionalsNargsZeroOrMoreNone', [Name('ParserTestCase', Load(), lineno=937, col_offset=41)], [Expr(Str('Test a Positional with unlimited nargs followed by one with none', lineno=938, col_offset=4), lineno=938, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=940, col_offset=4)], List([Call(Name('Sig', Load(), lineno=940, col_offset=27), [Str('foo', lineno=940, col_offset=31)], [keyword('nargs', Str('*', lineno=940, col_offset=44))], None, None, lineno=940, col_offset=27), Call(Name('Sig', Load(), lineno=940, col_offset=50), [Str('bar', lineno=940, col_offset=54)], [], None, None, lineno=940, col_offset=50)], Load(), lineno=940, col_offset=26), lineno=940, col_offset=4), Assign([Name('failures', Store(), lineno=941, col_offset=4)], List([Str('', lineno=941, col_offset=16), Str('--foo', lineno=941, col_offset=20)], Load(), lineno=941, col_offset=15), lineno=941, col_offset=4), Assign([Name('successes', Store(), lineno=942, col_offset=4)], List([Tuple([Str('a', lineno=943, col_offset=9), Call(Name('NS', Load(), lineno=943, col_offset=14), [], [keyword('foo', List([], Load(), lineno=943, col_offset=21)), keyword('bar', Str('a', lineno=943, col_offset=29))], None, None, lineno=943, col_offset=14)], Load(), lineno=943, col_offset=9), Tuple([Str('a b', lineno=944, col_offset=9), Call(Name('NS', Load(), lineno=944, col_offset=16), [], [keyword('foo', List([Str('a', lineno=944, col_offset=24)], Load(), lineno=944, col_offset=23)), keyword('bar', Str('b', lineno=944, col_offset=34))], None, None, lineno=944, col_offset=16)], Load(), lineno=944, col_offset=9), Tuple([Str('a b c', lineno=945, col_offset=9), Call(Name('NS', Load(), lineno=945, col_offset=18), [], [keyword('foo', List([Str('a', lineno=945, col_offset=26), Str('b', lineno=945, col_offset=31)], Load(), lineno=945, col_offset=25)), keyword('bar', Str('c', lineno=945, col_offset=41))], None, None, lineno=945, col_offset=18)], Load(), lineno=945, col_offset=9)], Load(), lineno=942, col_offset=16), lineno=942, col_offset=4)], [], lineno=937, col_offset=0), ClassDef('TestPositionalsNargsOneOrMoreNone', [Name('ParserTestCase', Load(), lineno=949, col_offset=40)], [Expr(Str('Test a Positional with one or more nargs followed by one with none', lineno=950, col_offset=4), lineno=950, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=952, col_offset=4)], List([Call(Name('Sig', Load(), lineno=952, col_offset=27), [Str('foo', lineno=952, col_offset=31)], [keyword('nargs', Str('+', lineno=952, col_offset=44))], None, None, lineno=952, col_offset=27), Call(Name('Sig', Load(), lineno=952, col_offset=50), [Str('bar', lineno=952, col_offset=54)], [], None, None, lineno=952, col_offset=50)], Load(), lineno=952, col_offset=26), lineno=952, col_offset=4), Assign([Name('failures', Store(), lineno=953, col_offset=4)], List([Str('', lineno=953, col_offset=16), Str('--foo', lineno=953, col_offset=20), Str('a', lineno=953, col_offset=29)], Load(), lineno=953, col_offset=15), lineno=953, col_offset=4), Assign([Name('successes', Store(), lineno=954, col_offset=4)], List([Tuple([Str('a b', lineno=955, col_offset=9), Call(Name('NS', Load(), lineno=955, col_offset=16), [], [keyword('foo', List([Str('a', lineno=955, col_offset=24)], Load(), lineno=955, col_offset=23)), keyword('bar', Str('b', lineno=955, col_offset=34))], None, None, lineno=955, col_offset=16)], Load(), lineno=955, col_offset=9), Tuple([Str('a b c', lineno=956, col_offset=9), Call(Name('NS', Load(), lineno=956, col_offset=18), [], [keyword('foo', List([Str('a', lineno=956, col_offset=26), Str('b', lineno=956, col_offset=31)], Load(), lineno=956, col_offset=25)), keyword('bar', Str('c', lineno=956, col_offset=41))], None, None, lineno=956, col_offset=18)], Load(), lineno=956, col_offset=9)], Load(), lineno=954, col_offset=16), lineno=954, col_offset=4)], [], lineno=949, col_offset=0), ClassDef('TestPositionalsNargsOptionalNone', [Name('ParserTestCase', Load(), lineno=960, col_offset=39)], [Expr(Str('Test a Positional with an Optional nargs followed by one with none', lineno=961, col_offset=4), lineno=961, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=963, col_offset=4)], List([Call(Name('Sig', Load(), lineno=963, col_offset=27), [Str('foo', lineno=963, col_offset=31)], [keyword('nargs', Str('?', lineno=963, col_offset=44)), keyword('default', Num(42, lineno=963, col_offset=57))], None, None, lineno=963, col_offset=27), Call(Name('Sig', Load(), lineno=963, col_offset=62), [Str('bar', lineno=963, col_offset=66)], [], None, None, lineno=963, col_offset=62)], Load(), lineno=963, col_offset=26), lineno=963, col_offset=4), Assign([Name('failures', Store(), lineno=964, col_offset=4)], List([Str('', lineno=964, col_offset=16), Str('--foo', lineno=964, col_offset=20), Str('a b c', lineno=964, col_offset=29)], Load(), lineno=964, col_offset=15), lineno=964, col_offset=4), Assign([Name('successes', Store(), lineno=965, col_offset=4)], List([Tuple([Str('a', lineno=966, col_offset=9), Call(Name('NS', Load(), lineno=966, col_offset=14), [], [keyword('foo', Num(42, lineno=966, col_offset=21)), keyword('bar', Str('a', lineno=966, col_offset=29))], None, None, lineno=966, col_offset=14)], Load(), lineno=966, col_offset=9), Tuple([Str('a b', lineno=967, col_offset=9), Call(Name('NS', Load(), lineno=967, col_offset=16), [], [keyword('foo', Str('a', lineno=967, col_offset=23)), keyword('bar', Str('b', lineno=967, col_offset=32))], None, None, lineno=967, col_offset=16)], Load(), lineno=967, col_offset=9)], Load(), lineno=965, col_offset=16), lineno=965, col_offset=4)], [], lineno=960, col_offset=0), ClassDef('TestPositionalsNargs2ZeroOrMore', [Name('ParserTestCase', Load(), lineno=971, col_offset=38)], [Expr(Str('Test a Positional with 2 nargs followed by one with unlimited', lineno=972, col_offset=4), lineno=972, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=974, col_offset=4)], List([Call(Name('Sig', Load(), lineno=974, col_offset=27), [Str('foo', lineno=974, col_offset=31)], [keyword('nargs', Num(2, lineno=974, col_offset=44))], None, None, lineno=974, col_offset=27), Call(Name('Sig', Load(), lineno=974, col_offset=48), [Str('bar', lineno=974, col_offset=52)], [keyword('nargs', Str('*', lineno=974, col_offset=65))], None, None, lineno=974, col_offset=48)], Load(), lineno=974, col_offset=26), lineno=974, col_offset=4), Assign([Name('failures', Store(), lineno=975, col_offset=4)], List([Str('', lineno=975, col_offset=16), Str('--foo', lineno=975, col_offset=20), Str('a', lineno=975, col_offset=29)], Load(), lineno=975, col_offset=15), lineno=975, col_offset=4), Assign([Name('successes', Store(), lineno=976, col_offset=4)], List([Tuple([Str('a b', lineno=977, col_offset=9), Call(Name('NS', Load(), lineno=977, col_offset=16), [], [keyword('foo', List([Str('a', lineno=977, col_offset=24), Str('b', lineno=977, col_offset=29)], Load(), lineno=977, col_offset=23)), keyword('bar', List([], Load(), lineno=977, col_offset=39))], None, None, lineno=977, col_offset=16)], Load(), lineno=977, col_offset=9), Tuple([Str('a b c', lineno=978, col_offset=9), Call(Name('NS', Load(), lineno=978, col_offset=18), [], [keyword('foo', List([Str('a', lineno=978, col_offset=26), Str('b', lineno=978, col_offset=31)], Load(), lineno=978, col_offset=25)), keyword('bar', List([Str('c', lineno=978, col_offset=42)], Load(), lineno=978, col_offset=41))], None, None, lineno=978, col_offset=18)], Load(), lineno=978, col_offset=9)], Load(), lineno=976, col_offset=16), lineno=976, col_offset=4)], [], lineno=971, col_offset=0), ClassDef('TestPositionalsNargs2OneOrMore', [Name('ParserTestCase', Load(), lineno=982, col_offset=37)], [Expr(Str('Test a Positional with 2 nargs followed by one with one or more', lineno=983, col_offset=4), lineno=983, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=985, col_offset=4)], List([Call(Name('Sig', Load(), lineno=985, col_offset=27), [Str('foo', lineno=985, col_offset=31)], [keyword('nargs', Num(2, lineno=985, col_offset=44))], None, None, lineno=985, col_offset=27), Call(Name('Sig', Load(), lineno=985, col_offset=48), [Str('bar', lineno=985, col_offset=52)], [keyword('nargs', Str('+', lineno=985, col_offset=65))], None, None, lineno=985, col_offset=48)], Load(), lineno=985, col_offset=26), lineno=985, col_offset=4), Assign([Name('failures', Store(), lineno=986, col_offset=4)], List([Str('', lineno=986, col_offset=16), Str('--foo', lineno=986, col_offset=20), Str('a', lineno=986, col_offset=29), Str('a b', lineno=986, col_offset=34)], Load(), lineno=986, col_offset=15), lineno=986, col_offset=4), Assign([Name('successes', Store(), lineno=987, col_offset=4)], List([Tuple([Str('a b c', lineno=988, col_offset=9), Call(Name('NS', Load(), lineno=988, col_offset=18), [], [keyword('foo', List([Str('a', lineno=988, col_offset=26), Str('b', lineno=988, col_offset=31)], Load(), lineno=988, col_offset=25)), keyword('bar', List([Str('c', lineno=988, col_offset=42)], Load(), lineno=988, col_offset=41))], None, None, lineno=988, col_offset=18)], Load(), lineno=988, col_offset=9)], Load(), lineno=987, col_offset=16), lineno=987, col_offset=4)], [], lineno=982, col_offset=0), ClassDef('TestPositionalsNargs2Optional', [Name('ParserTestCase', Load(), lineno=992, col_offset=36)], [Expr(Str('Test a Positional with 2 nargs followed by one optional', lineno=993, col_offset=4), lineno=993, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=995, col_offset=4)], List([Call(Name('Sig', Load(), lineno=995, col_offset=27), [Str('foo', lineno=995, col_offset=31)], [keyword('nargs', Num(2, lineno=995, col_offset=44))], None, None, lineno=995, col_offset=27), Call(Name('Sig', Load(), lineno=995, col_offset=48), [Str('bar', lineno=995, col_offset=52)], [keyword('nargs', Str('?', lineno=995, col_offset=65))], None, None, lineno=995, col_offset=48)], Load(), lineno=995, col_offset=26), lineno=995, col_offset=4), Assign([Name('failures', Store(), lineno=996, col_offset=4)], List([Str('', lineno=996, col_offset=16), Str('--foo', lineno=996, col_offset=20), Str('a', lineno=996, col_offset=29), Str('a b c d', lineno=996, col_offset=34)], Load(), lineno=996, col_offset=15), lineno=996, col_offset=4), Assign([Name('successes', Store(), lineno=997, col_offset=4)], List([Tuple([Str('a b', lineno=998, col_offset=9), Call(Name('NS', Load(), lineno=998, col_offset=16), [], [keyword('foo', List([Str('a', lineno=998, col_offset=24), Str('b', lineno=998, col_offset=29)], Load(), lineno=998, col_offset=23)), keyword('bar', Name('None', Load(), lineno=998, col_offset=39))], None, None, lineno=998, col_offset=16)], Load(), lineno=998, col_offset=9), Tuple([Str('a b c', lineno=999, col_offset=9), Call(Name('NS', Load(), lineno=999, col_offset=18), [], [keyword('foo', List([Str('a', lineno=999, col_offset=26), Str('b', lineno=999, col_offset=31)], Load(), lineno=999, col_offset=25)), keyword('bar', Str('c', lineno=999, col_offset=41))], None, None, lineno=999, col_offset=18)], Load(), lineno=999, col_offset=9)], Load(), lineno=997, col_offset=16), lineno=997, col_offset=4)], [], lineno=992, col_offset=0), ClassDef('TestPositionalsNargsZeroOrMore1', [Name('ParserTestCase', Load(), lineno=1003, col_offset=38)], [Expr(Str('Test a Positional with unlimited nargs followed by one with 1', lineno=1004, col_offset=4), lineno=1004, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=1006, col_offset=4)], List([Call(Name('Sig', Load(), lineno=1006, col_offset=27), [Str('foo', lineno=1006, col_offset=31)], [keyword('nargs', Str('*', lineno=1006, col_offset=44))], None, None, lineno=1006, col_offset=27), Call(Name('Sig', Load(), lineno=1006, col_offset=50), [Str('bar', lineno=1006, col_offset=54)], [keyword('nargs', Num(1, lineno=1006, col_offset=67))], None, None, lineno=1006, col_offset=50)], Load(), lineno=1006, col_offset=26), lineno=1006, col_offset=4), Assign([Name('failures', Store(), lineno=1007, col_offset=4)], List([Str('', lineno=1007, col_offset=16), Str('--foo', lineno=1007, col_offset=20)], Load(), lineno=1007, col_offset=15), lineno=1007, col_offset=4), Assign([Name('successes', Store(), lineno=1008, col_offset=4)], List([Tuple([Str('a', lineno=1009, col_offset=9), Call(Name('NS', Load(), lineno=1009, col_offset=14), [], [keyword('foo', List([], Load(), lineno=1009, col_offset=21)), keyword('bar', List([Str('a', lineno=1009, col_offset=30)], Load(), lineno=1009, col_offset=29))], None, None, lineno=1009, col_offset=14)], Load(), lineno=1009, col_offset=9), Tuple([Str('a b', lineno=1010, col_offset=9), Call(Name('NS', Load(), lineno=1010, col_offset=16), [], [keyword('foo', List([Str('a', lineno=1010, col_offset=24)], Load(), lineno=1010, col_offset=23)), keyword('bar', List([Str('b', lineno=1010, col_offset=35)], Load(), lineno=1010, col_offset=34))], None, None, lineno=1010, col_offset=16)], Load(), lineno=1010, col_offset=9), Tuple([Str('a b c', lineno=1011, col_offset=9), Call(Name('NS', Load(), lineno=1011, col_offset=18), [], [keyword('foo', List([Str('a', lineno=1011, col_offset=26), Str('b', lineno=1011, col_offset=31)], Load(), lineno=1011, col_offset=25)), keyword('bar', List([Str('c', lineno=1011, col_offset=42)], Load(), lineno=1011, col_offset=41))], None, None, lineno=1011, col_offset=18)], Load(), lineno=1011, col_offset=9)], Load(), lineno=1008, col_offset=16), lineno=1008, col_offset=4)], [], lineno=1003, col_offset=0), ClassDef('TestPositionalsNargsOneOrMore1', [Name('ParserTestCase', Load(), lineno=1015, col_offset=37)], [Expr(Str('Test a Positional with one or more nargs followed by one with 1', lineno=1016, col_offset=4), lineno=1016, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=1018, col_offset=4)], List([Call(Name('Sig', Load(), lineno=1018, col_offset=27), [Str('foo', lineno=1018, col_offset=31)], [keyword('nargs', Str('+', lineno=1018, col_offset=44))], None, None, lineno=1018, col_offset=27), Call(Name('Sig', Load(), lineno=1018, col_offset=50), [Str('bar', lineno=1018, col_offset=54)], [keyword('nargs', Num(1, lineno=1018, col_offset=67))], None, None, lineno=1018, col_offset=50)], Load(), lineno=1018, col_offset=26), lineno=1018, col_offset=4), Assign([Name('failures', Store(), lineno=1019, col_offset=4)], List([Str('', lineno=1019, col_offset=16), Str('--foo', lineno=1019, col_offset=20), Str('a', lineno=1019, col_offset=29)], Load(), lineno=1019, col_offset=15), lineno=1019, col_offset=4), Assign([Name('successes', Store(), lineno=1020, col_offset=4)], List([Tuple([Str('a b', lineno=1021, col_offset=9), Call(Name('NS', Load(), lineno=1021, col_offset=16), [], [keyword('foo', List([Str('a', lineno=1021, col_offset=24)], Load(), lineno=1021, col_offset=23)), keyword('bar', List([Str('b', lineno=1021, col_offset=35)], Load(), lineno=1021, col_offset=34))], None, None, lineno=1021, col_offset=16)], Load(), lineno=1021, col_offset=9), Tuple([Str('a b c', lineno=1022, col_offset=9), Call(Name('NS', Load(), lineno=1022, col_offset=18), [], [keyword('foo', List([Str('a', lineno=1022, col_offset=26), Str('b', lineno=1022, col_offset=31)], Load(), lineno=1022, col_offset=25)), keyword('bar', List([Str('c', lineno=1022, col_offset=42)], Load(), lineno=1022, col_offset=41))], None, None, lineno=1022, col_offset=18)], Load(), lineno=1022, col_offset=9)], Load(), lineno=1020, col_offset=16), lineno=1020, col_offset=4)], [], lineno=1015, col_offset=0), ClassDef('TestPositionalsNargsOptional1', [Name('ParserTestCase', Load(), lineno=1026, col_offset=36)], [Expr(Str('Test a Positional with an Optional nargs followed by one with 1', lineno=1027, col_offset=4), lineno=1027, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=1029, col_offset=4)], List([Call(Name('Sig', Load(), lineno=1029, col_offset=27), [Str('foo', lineno=1029, col_offset=31)], [keyword('nargs', Str('?', lineno=1029, col_offset=44))], None, None, lineno=1029, col_offset=27), Call(Name('Sig', Load(), lineno=1029, col_offset=50), [Str('bar', lineno=1029, col_offset=54)], [keyword('nargs', Num(1, lineno=1029, col_offset=67))], None, None, lineno=1029, col_offset=50)], Load(), lineno=1029, col_offset=26), lineno=1029, col_offset=4), Assign([Name('failures', Store(), lineno=1030, col_offset=4)], List([Str('', lineno=1030, col_offset=16), Str('--foo', lineno=1030, col_offset=20), Str('a b c', lineno=1030, col_offset=29)], Load(), lineno=1030, col_offset=15), lineno=1030, col_offset=4), Assign([Name('successes', Store(), lineno=1031, col_offset=4)], List([Tuple([Str('a', lineno=1032, col_offset=9), Call(Name('NS', Load(), lineno=1032, col_offset=14), [], [keyword('foo', Name('None', Load(), lineno=1032, col_offset=21)), keyword('bar', List([Str('a', lineno=1032, col_offset=32)], Load(), lineno=1032, col_offset=31))], None, None, lineno=1032, col_offset=14)], Load(), lineno=1032, col_offset=9), Tuple([Str('a b', lineno=1033, col_offset=9), Call(Name('NS', Load(), lineno=1033, col_offset=16), [], [keyword('foo', Str('a', lineno=1033, col_offset=23)), keyword('bar', List([Str('b', lineno=1033, col_offset=33)], Load(), lineno=1033, col_offset=32))], None, None, lineno=1033, col_offset=16)], Load(), lineno=1033, col_offset=9)], Load(), lineno=1031, col_offset=16), lineno=1031, col_offset=4)], [], lineno=1026, col_offset=0), ClassDef('TestPositionalsNargsNoneZeroOrMore1', [Name('ParserTestCase', Load(), lineno=1037, col_offset=42)], [Expr(Str('Test three Positionals: no nargs, unlimited nargs and 1 nargs', lineno=1038, col_offset=4), lineno=1038, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=1040, col_offset=4)], List([Call(Name('Sig', Load(), lineno=1041, col_offset=8), [Str('foo', lineno=1041, col_offset=12)], [], None, None, lineno=1041, col_offset=8), Call(Name('Sig', Load(), lineno=1042, col_offset=8), [Str('bar', lineno=1042, col_offset=12)], [keyword('nargs', Str('*', lineno=1042, col_offset=25))], None, None, lineno=1042, col_offset=8), Call(Name('Sig', Load(), lineno=1043, col_offset=8), [Str('baz', lineno=1043, col_offset=12)], [keyword('nargs', Num(1, lineno=1043, col_offset=25))], None, None, lineno=1043, col_offset=8)], Load(), lineno=1040, col_offset=26), lineno=1040, col_offset=4), Assign([Name('failures', Store(), lineno=1045, col_offset=4)], List([Str('', lineno=1045, col_offset=16), Str('--foo', lineno=1045, col_offset=20), Str('a', lineno=1045, col_offset=29)], Load(), lineno=1045, col_offset=15), lineno=1045, col_offset=4), Assign([Name('successes', Store(), lineno=1046, col_offset=4)], List([Tuple([Str('a b', lineno=1047, col_offset=9), Call(Name('NS', Load(), lineno=1047, col_offset=16), [], [keyword('foo', Str('a', lineno=1047, col_offset=23)), keyword('bar', List([], Load(), lineno=1047, col_offset=32)), keyword('baz', List([Str('b', lineno=1047, col_offset=41)], Load(), lineno=1047, col_offset=40))], None, None, lineno=1047, col_offset=16)], Load(), lineno=1047, col_offset=9), Tuple([Str('a b c', lineno=1048, col_offset=9), Call(Name('NS', Load(), lineno=1048, col_offset=18), [], [keyword('foo', Str('a', lineno=1048, col_offset=25)), keyword('bar', List([Str('b', lineno=1048, col_offset=35)], Load(), lineno=1048, col_offset=34)), keyword('baz', List([Str('c', lineno=1048, col_offset=46)], Load(), lineno=1048, col_offset=45))], None, None, lineno=1048, col_offset=18)], Load(), lineno=1048, col_offset=9)], Load(), lineno=1046, col_offset=16), lineno=1046, col_offset=4)], [], lineno=1037, col_offset=0), ClassDef('TestPositionalsNargsNoneOneOrMore1', [Name('ParserTestCase', Load(), lineno=1052, col_offset=41)], [Expr(Str('Test three Positionals: no nargs, one or more nargs and 1 nargs', lineno=1053, col_offset=4), lineno=1053, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=1055, col_offset=4)], List([Call(Name('Sig', Load(), lineno=1056, col_offset=8), [Str('foo', lineno=1056, col_offset=12)], [], None, None, lineno=1056, col_offset=8), Call(Name('Sig', Load(), lineno=1057, col_offset=8), [Str('bar', lineno=1057, col_offset=12)], [keyword('nargs', Str('+', lineno=1057, col_offset=25))], None, None, lineno=1057, col_offset=8), Call(Name('Sig', Load(), lineno=1058, col_offset=8), [Str('baz', lineno=1058, col_offset=12)], [keyword('nargs', Num(1, lineno=1058, col_offset=25))], None, None, lineno=1058, col_offset=8)], Load(), lineno=1055, col_offset=26), lineno=1055, col_offset=4), Assign([Name('failures', Store(), lineno=1060, col_offset=4)], List([Str('', lineno=1060, col_offset=16), Str('--foo', lineno=1060, col_offset=20), Str('a', lineno=1060, col_offset=29), Str('b', lineno=1060, col_offset=34)], Load(), lineno=1060, col_offset=15), lineno=1060, col_offset=4), Assign([Name('successes', Store(), lineno=1061, col_offset=4)], List([Tuple([Str('a b c', lineno=1062, col_offset=9), Call(Name('NS', Load(), lineno=1062, col_offset=18), [], [keyword('foo', Str('a', lineno=1062, col_offset=25)), keyword('bar', List([Str('b', lineno=1062, col_offset=35)], Load(), lineno=1062, col_offset=34)), keyword('baz', List([Str('c', lineno=1062, col_offset=46)], Load(), lineno=1062, col_offset=45))], None, None, lineno=1062, col_offset=18)], Load(), lineno=1062, col_offset=9), Tuple([Str('a b c d', lineno=1063, col_offset=9), Call(Name('NS', Load(), lineno=1063, col_offset=20), [], [keyword('foo', Str('a', lineno=1063, col_offset=27)), keyword('bar', List([Str('b', lineno=1063, col_offset=37), Str('c', lineno=1063, col_offset=42)], Load(), lineno=1063, col_offset=36)), keyword('baz', List([Str('d', lineno=1063, col_offset=53)], Load(), lineno=1063, col_offset=52))], None, None, lineno=1063, col_offset=20)], Load(), lineno=1063, col_offset=9)], Load(), lineno=1061, col_offset=16), lineno=1061, col_offset=4)], [], lineno=1052, col_offset=0), ClassDef('TestPositionalsNargsNoneOptional1', [Name('ParserTestCase', Load(), lineno=1067, col_offset=40)], [Expr(Str('Test three Positionals: no nargs, optional narg and 1 nargs', lineno=1068, col_offset=4), lineno=1068, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=1070, col_offset=4)], List([Call(Name('Sig', Load(), lineno=1071, col_offset=8), [Str('foo', lineno=1071, col_offset=12)], [], None, None, lineno=1071, col_offset=8), Call(Name('Sig', Load(), lineno=1072, col_offset=8), [Str('bar', lineno=1072, col_offset=12)], [keyword('nargs', Str('?', lineno=1072, col_offset=25)), keyword('default', Num(0.625, lineno=1072, col_offset=38))], None, None, lineno=1072, col_offset=8), Call(Name('Sig', Load(), lineno=1073, col_offset=8), [Str('baz', lineno=1073, col_offset=12)], [keyword('nargs', Num(1, lineno=1073, col_offset=25))], None, None, lineno=1073, col_offset=8)], Load(), lineno=1070, col_offset=26), lineno=1070, col_offset=4), Assign([Name('failures', Store(), lineno=1075, col_offset=4)], List([Str('', lineno=1075, col_offset=16), Str('--foo', lineno=1075, col_offset=20), Str('a', lineno=1075, col_offset=29)], Load(), lineno=1075, col_offset=15), lineno=1075, col_offset=4), Assign([Name('successes', Store(), lineno=1076, col_offset=4)], List([Tuple([Str('a b', lineno=1077, col_offset=9), Call(Name('NS', Load(), lineno=1077, col_offset=16), [], [keyword('foo', Str('a', lineno=1077, col_offset=23)), keyword('bar', Num(0.625, lineno=1077, col_offset=32)), keyword('baz', List([Str('b', lineno=1077, col_offset=44)], Load(), lineno=1077, col_offset=43))], None, None, lineno=1077, col_offset=16)], Load(), lineno=1077, col_offset=9), Tuple([Str('a b c', lineno=1078, col_offset=9), Call(Name('NS', Load(), lineno=1078, col_offset=18), [], [keyword('foo', Str('a', lineno=1078, col_offset=25)), keyword('bar', Str('b', lineno=1078, col_offset=34)), keyword('baz', List([Str('c', lineno=1078, col_offset=44)], Load(), lineno=1078, col_offset=43))], None, None, lineno=1078, col_offset=18)], Load(), lineno=1078, col_offset=9)], Load(), lineno=1076, col_offset=16), lineno=1076, col_offset=4)], [], lineno=1067, col_offset=0), ClassDef('TestPositionalsNargsOptionalOptional', [Name('ParserTestCase', Load(), lineno=1082, col_offset=43)], [Expr(Str('Test two optional nargs', lineno=1083, col_offset=4), lineno=1083, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=1085, col_offset=4)], List([Call(Name('Sig', Load(), lineno=1086, col_offset=8), [Str('foo', lineno=1086, col_offset=12)], [keyword('nargs', Str('?', lineno=1086, col_offset=25))], None, None, lineno=1086, col_offset=8), Call(Name('Sig', Load(), lineno=1087, col_offset=8), [Str('bar', lineno=1087, col_offset=12)], [keyword('nargs', Str('?', lineno=1087, col_offset=25)), keyword('default', Num(42, lineno=1087, col_offset=38))], None, None, lineno=1087, col_offset=8)], Load(), lineno=1085, col_offset=26), lineno=1085, col_offset=4), Assign([Name('failures', Store(), lineno=1089, col_offset=4)], List([Str('--foo', lineno=1089, col_offset=16), Str('a b c', lineno=1089, col_offset=25)], Load(), lineno=1089, col_offset=15), lineno=1089, col_offset=4), Assign([Name('successes', Store(), lineno=1090, col_offset=4)], List([Tuple([Str('', lineno=1091, col_offset=9), Call(Name('NS', Load(), lineno=1091, col_offset=13), [], [keyword('foo', Name('None', Load(), lineno=1091, col_offset=20)), keyword('bar', Num(42, lineno=1091, col_offset=30))], None, None, lineno=1091, col_offset=13)], Load(), lineno=1091, col_offset=9), Tuple([Str('a', lineno=1092, col_offset=9), Call(Name('NS', Load(), lineno=1092, col_offset=14), [], [keyword('foo', Str('a', lineno=1092, col_offset=21)), keyword('bar', Num(42, lineno=1092, col_offset=30))], None, None, lineno=1092, col_offset=14)], Load(), lineno=1092, col_offset=9), Tuple([Str('a b', lineno=1093, col_offset=9), Call(Name('NS', Load(), lineno=1093, col_offset=16), [], [keyword('foo', Str('a', lineno=1093, col_offset=23)), keyword('bar', Str('b', lineno=1093, col_offset=32))], None, None, lineno=1093, col_offset=16)], Load(), lineno=1093, col_offset=9)], Load(), lineno=1090, col_offset=16), lineno=1090, col_offset=4)], [], lineno=1082, col_offset=0), ClassDef('TestPositionalsNargsOptionalZeroOrMore', [Name('ParserTestCase', Load(), lineno=1097, col_offset=45)], [Expr(Str('Test an Optional narg followed by unlimited nargs', lineno=1098, col_offset=4), lineno=1098, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=1100, col_offset=4)], List([Call(Name('Sig', Load(), lineno=1100, col_offset=27), [Str('foo', lineno=1100, col_offset=31)], [keyword('nargs', Str('?', lineno=1100, col_offset=44))], None, None, lineno=1100, col_offset=27), Call(Name('Sig', Load(), lineno=1100, col_offset=50), [Str('bar', lineno=1100, col_offset=54)], [keyword('nargs', Str('*', lineno=1100, col_offset=67))], None, None, lineno=1100, col_offset=50)], Load(), lineno=1100, col_offset=26), lineno=1100, col_offset=4), Assign([Name('failures', Store(), lineno=1101, col_offset=4)], List([Str('--foo', lineno=1101, col_offset=16)], Load(), lineno=1101, col_offset=15), lineno=1101, col_offset=4), Assign([Name('successes', Store(), lineno=1102, col_offset=4)], List([Tuple([Str('', lineno=1103, col_offset=9), Call(Name('NS', Load(), lineno=1103, col_offset=13), [], [keyword('foo', Name('None', Load(), lineno=1103, col_offset=20)), keyword('bar', List([], Load(), lineno=1103, col_offset=30))], None, None, lineno=1103, col_offset=13)], Load(), lineno=1103, col_offset=9), Tuple([Str('a', lineno=1104, col_offset=9), Call(Name('NS', Load(), lineno=1104, col_offset=14), [], [keyword('foo', Str('a', lineno=1104, col_offset=21)), keyword('bar', List([], Load(), lineno=1104, col_offset=30))], None, None, lineno=1104, col_offset=14)], Load(), lineno=1104, col_offset=9), Tuple([Str('a b', lineno=1105, col_offset=9), Call(Name('NS', Load(), lineno=1105, col_offset=16), [], [keyword('foo', Str('a', lineno=1105, col_offset=23)), keyword('bar', List([Str('b', lineno=1105, col_offset=33)], Load(), lineno=1105, col_offset=32))], None, None, lineno=1105, col_offset=16)], Load(), lineno=1105, col_offset=9), Tuple([Str('a b c', lineno=1106, col_offset=9), Call(Name('NS', Load(), lineno=1106, col_offset=18), [], [keyword('foo', Str('a', lineno=1106, col_offset=25)), keyword('bar', List([Str('b', lineno=1106, col_offset=35), Str('c', lineno=1106, col_offset=40)], Load(), lineno=1106, col_offset=34))], None, None, lineno=1106, col_offset=18)], Load(), lineno=1106, col_offset=9)], Load(), lineno=1102, col_offset=16), lineno=1102, col_offset=4)], [], lineno=1097, col_offset=0), ClassDef('TestPositionalsNargsOptionalOneOrMore', [Name('ParserTestCase', Load(), lineno=1110, col_offset=44)], [Expr(Str('Test an Optional narg followed by one or more nargs', lineno=1111, col_offset=4), lineno=1111, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=1113, col_offset=4)], List([Call(Name('Sig', Load(), lineno=1113, col_offset=27), [Str('foo', lineno=1113, col_offset=31)], [keyword('nargs', Str('?', lineno=1113, col_offset=44))], None, None, lineno=1113, col_offset=27), Call(Name('Sig', Load(), lineno=1113, col_offset=50), [Str('bar', lineno=1113, col_offset=54)], [keyword('nargs', Str('+', lineno=1113, col_offset=67))], None, None, lineno=1113, col_offset=50)], Load(), lineno=1113, col_offset=26), lineno=1113, col_offset=4), Assign([Name('failures', Store(), lineno=1114, col_offset=4)], List([Str('', lineno=1114, col_offset=16), Str('--foo', lineno=1114, col_offset=20)], Load(), lineno=1114, col_offset=15), lineno=1114, col_offset=4), Assign([Name('successes', Store(), lineno=1115, col_offset=4)], List([Tuple([Str('a', lineno=1116, col_offset=9), Call(Name('NS', Load(), lineno=1116, col_offset=14), [], [keyword('foo', Name('None', Load(), lineno=1116, col_offset=21)), keyword('bar', List([Str('a', lineno=1116, col_offset=32)], Load(), lineno=1116, col_offset=31))], None, None, lineno=1116, col_offset=14)], Load(), lineno=1116, col_offset=9), Tuple([Str('a b', lineno=1117, col_offset=9), Call(Name('NS', Load(), lineno=1117, col_offset=16), [], [keyword('foo', Str('a', lineno=1117, col_offset=23)), keyword('bar', List([Str('b', lineno=1117, col_offset=33)], Load(), lineno=1117, col_offset=32))], None, None, lineno=1117, col_offset=16)], Load(), lineno=1117, col_offset=9), Tuple([Str('a b c', lineno=1118, col_offset=9), Call(Name('NS', Load(), lineno=1118, col_offset=18), [], [keyword('foo', Str('a', lineno=1118, col_offset=25)), keyword('bar', List([Str('b', lineno=1118, col_offset=35), Str('c', lineno=1118, col_offset=40)], Load(), lineno=1118, col_offset=34))], None, None, lineno=1118, col_offset=18)], Load(), lineno=1118, col_offset=9)], Load(), lineno=1115, col_offset=16), lineno=1115, col_offset=4)], [], lineno=1110, col_offset=0), ClassDef('TestPositionalsChoicesString', [Name('ParserTestCase', Load(), lineno=1122, col_offset=35)], [Expr(Str('Test a set of single-character choices', lineno=1123, col_offset=4), lineno=1123, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=1125, col_offset=4)], List([Call(Name('Sig', Load(), lineno=1125, col_offset=27), [Str('spam', lineno=1125, col_offset=31)], [keyword('choices', Call(Name('set', Load(), lineno=1125, col_offset=47), [Str('abcdefg', lineno=1125, col_offset=51)], [], None, None, lineno=1125, col_offset=47))], None, None, lineno=1125, col_offset=27)], Load(), lineno=1125, col_offset=26), lineno=1125, col_offset=4), Assign([Name('failures', Store(), lineno=1126, col_offset=4)], List([Str('', lineno=1126, col_offset=16), Str('--foo', lineno=1126, col_offset=20), Str('h', lineno=1126, col_offset=29), Str('42', lineno=1126, col_offset=34), Str('ef', lineno=1126, col_offset=40)], Load(), lineno=1126, col_offset=15), lineno=1126, col_offset=4), Assign([Name('successes', Store(), lineno=1127, col_offset=4)], List([Tuple([Str('a', lineno=1128, col_offset=9), Call(Name('NS', Load(), lineno=1128, col_offset=14), [], [keyword('spam', Str('a', lineno=1128, col_offset=22))], None, None, lineno=1128, col_offset=14)], Load(), lineno=1128, col_offset=9), Tuple([Str('g', lineno=1129, col_offset=9), Call(Name('NS', Load(), lineno=1129, col_offset=14), [], [keyword('spam', Str('g', lineno=1129, col_offset=22))], None, None, lineno=1129, col_offset=14)], Load(), lineno=1129, col_offset=9)], Load(), lineno=1127, col_offset=16), lineno=1127, col_offset=4)], [], lineno=1122, col_offset=0), ClassDef('TestPositionalsChoicesInt', [Name('ParserTestCase', Load(), lineno=1133, col_offset=32)], [Expr(Str('Test a set of integer choices', lineno=1134, col_offset=4), lineno=1134, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=1136, col_offset=4)], List([Call(Name('Sig', Load(), lineno=1136, col_offset=27), [Str('spam', lineno=1136, col_offset=31)], [keyword('type', Name('int', Load(), lineno=1136, col_offset=44)), keyword('choices', Call(Name('range', Load(), lineno=1136, col_offset=57), [Num(20, lineno=1136, col_offset=63)], [], None, None, lineno=1136, col_offset=57))], None, None, lineno=1136, col_offset=27)], Load(), lineno=1136, col_offset=26), lineno=1136, col_offset=4), Assign([Name('failures', Store(), lineno=1137, col_offset=4)], List([Str('', lineno=1137, col_offset=16), Str('--foo', lineno=1137, col_offset=20), Str('h', lineno=1137, col_offset=29), Str('42', lineno=1137, col_offset=34), Str('ef', lineno=1137, col_offset=40)], Load(), lineno=1137, col_offset=15), lineno=1137, col_offset=4), Assign([Name('successes', Store(), lineno=1138, col_offset=4)], List([Tuple([Str('4', lineno=1139, col_offset=9), Call(Name('NS', Load(), lineno=1139, col_offset=14), [], [keyword('spam', Num(4, lineno=1139, col_offset=22))], None, None, lineno=1139, col_offset=14)], Load(), lineno=1139, col_offset=9), Tuple([Str('15', lineno=1140, col_offset=9), Call(Name('NS', Load(), lineno=1140, col_offset=15), [], [keyword('spam', Num(15, lineno=1140, col_offset=23))], None, None, lineno=1140, col_offset=15)], Load(), lineno=1140, col_offset=9)], Load(), lineno=1138, col_offset=16), lineno=1138, col_offset=4)], [], lineno=1133, col_offset=0), ClassDef('TestPositionalsActionAppend', [Name('ParserTestCase', Load(), lineno=1144, col_offset=34)], [Expr(Str("Test the 'append' action", lineno=1145, col_offset=4), lineno=1145, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=1147, col_offset=4)], List([Call(Name('Sig', Load(), lineno=1148, col_offset=8), [Str('spam', lineno=1148, col_offset=12)], [keyword('action', Str('append', lineno=1148, col_offset=27))], None, None, lineno=1148, col_offset=8), Call(Name('Sig', Load(), lineno=1149, col_offset=8), [Str('spam', lineno=1149, col_offset=12)], [keyword('action', Str('append', lineno=1149, col_offset=27)), keyword('nargs', Num(2, lineno=1149, col_offset=43))], None, None, lineno=1149, col_offset=8)], Load(), lineno=1147, col_offset=26), lineno=1147, col_offset=4), Assign([Name('failures', Store(), lineno=1151, col_offset=4)], List([Str('', lineno=1151, col_offset=16), Str('--foo', lineno=1151, col_offset=20), Str('a', lineno=1151, col_offset=29), Str('a b', lineno=1151, col_offset=34), Str('a b c d', lineno=1151, col_offset=41)], Load(), lineno=1151, col_offset=15), lineno=1151, col_offset=4), Assign([Name('successes', Store(), lineno=1152, col_offset=4)], List([Tuple([Str('a b c', lineno=1153, col_offset=9), Call(Name('NS', Load(), lineno=1153, col_offset=18), [], [keyword('spam', List([Str('a', lineno=1153, col_offset=27), List([Str('b', lineno=1153, col_offset=33), Str('c', lineno=1153, col_offset=38)], Load(), lineno=1153, col_offset=32)], Load(), lineno=1153, col_offset=26))], None, None, lineno=1153, col_offset=18)], Load(), lineno=1153, col_offset=9)], Load(), lineno=1152, col_offset=16), lineno=1152, col_offset=4)], [], lineno=1144, col_offset=0), ClassDef('TestOptionalsNumericAndPositionals', [Name('ParserTestCase', Load(), lineno=1160, col_offset=41)], [Expr(Str('Tests negative number args when numeric options are present', lineno=1161, col_offset=4), lineno=1161, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=1163, col_offset=4)], List([Call(Name('Sig', Load(), lineno=1164, col_offset=8), [Str('x', lineno=1164, col_offset=12)], [keyword('nargs', Str('?', lineno=1164, col_offset=23))], None, None, lineno=1164, col_offset=8), Call(Name('Sig', Load(), lineno=1165, col_offset=8), [Str('-4', lineno=1165, col_offset=12)], [keyword('dest', Str('y', lineno=1165, col_offset=23)), keyword('action', Str('store_true', lineno=1165, col_offset=35))], None, None, lineno=1165, col_offset=8)], Load(), lineno=1163, col_offset=26), lineno=1163, col_offset=4), Assign([Name('failures', Store(), lineno=1167, col_offset=4)], List([Str('-2', lineno=1167, col_offset=16), Str('-315', lineno=1167, col_offset=22)], Load(), lineno=1167, col_offset=15), lineno=1167, col_offset=4), Assign([Name('successes', Store(), lineno=1168, col_offset=4)], List([Tuple([Str('', lineno=1169, col_offset=9), Call(Name('NS', Load(), lineno=1169, col_offset=13), [], [keyword('x', Name('None', Load(), lineno=1169, col_offset=18)), keyword('y', Name('False', Load(), lineno=1169, col_offset=26))], None, None, lineno=1169, col_offset=13)], Load(), lineno=1169, col_offset=9), Tuple([Str('a', lineno=1170, col_offset=9), Call(Name('NS', Load(), lineno=1170, col_offset=14), [], [keyword('x', Str('a', lineno=1170, col_offset=19)), keyword('y', Name('False', Load(), lineno=1170, col_offset=26))], None, None, lineno=1170, col_offset=14)], Load(), lineno=1170, col_offset=9), Tuple([Str('-4', lineno=1171, col_offset=9), Call(Name('NS', Load(), lineno=1171, col_offset=15), [], [keyword('x', Name('None', Load(), lineno=1171, col_offset=20)), keyword('y', Name('True', Load(), lineno=1171, col_offset=28))], None, None, lineno=1171, col_offset=15)], Load(), lineno=1171, col_offset=9), Tuple([Str('-4 a', lineno=1172, col_offset=9), Call(Name('NS', Load(), lineno=1172, col_offset=17), [], [keyword('x', Str('a', lineno=1172, col_offset=22)), keyword('y', Name('True', Load(), lineno=1172, col_offset=29))], None, None, lineno=1172, col_offset=17)], Load(), lineno=1172, col_offset=9)], Load(), lineno=1168, col_offset=16), lineno=1168, col_offset=4)], [], lineno=1160, col_offset=0), ClassDef('TestOptionalsAlmostNumericAndPositionals', [Name('ParserTestCase', Load(), lineno=1176, col_offset=47)], [Expr(Str('Tests negative number args when almost numeric options are present', lineno=1177, col_offset=4), lineno=1177, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=1179, col_offset=4)], List([Call(Name('Sig', Load(), lineno=1180, col_offset=8), [Str('x', lineno=1180, col_offset=12)], [keyword('nargs', Str('?', lineno=1180, col_offset=23))], None, None, lineno=1180, col_offset=8), Call(Name('Sig', Load(), lineno=1181, col_offset=8), [Str('-k4', lineno=1181, col_offset=12)], [keyword('dest', Str('y', lineno=1181, col_offset=24)), keyword('action', Str('store_true', lineno=1181, col_offset=36))], None, None, lineno=1181, col_offset=8)], Load(), lineno=1179, col_offset=26), lineno=1179, col_offset=4), Assign([Name('failures', Store(), lineno=1183, col_offset=4)], List([Str('-k3', lineno=1183, col_offset=16)], Load(), lineno=1183, col_offset=15), lineno=1183, col_offset=4), Assign([Name('successes', Store(), lineno=1184, col_offset=4)], List([Tuple([Str('', lineno=1185, col_offset=9), Call(Name('NS', Load(), lineno=1185, col_offset=13), [], [keyword('x', Name('None', Load(), lineno=1185, col_offset=18)), keyword('y', Name('False', Load(), lineno=1185, col_offset=26))], None, None, lineno=1185, col_offset=13)], Load(), lineno=1185, col_offset=9), Tuple([Str('-2', lineno=1186, col_offset=9), Call(Name('NS', Load(), lineno=1186, col_offset=15), [], [keyword('x', Str('-2', lineno=1186, col_offset=20)), keyword('y', Name('False', Load(), lineno=1186, col_offset=28))], None, None, lineno=1186, col_offset=15)], Load(), lineno=1186, col_offset=9), Tuple([Str('a', lineno=1187, col_offset=9), Call(Name('NS', Load(), lineno=1187, col_offset=14), [], [keyword('x', Str('a', lineno=1187, col_offset=19)), keyword('y', Name('False', Load(), lineno=1187, col_offset=26))], None, None, lineno=1187, col_offset=14)], Load(), lineno=1187, col_offset=9), Tuple([Str('-k4', lineno=1188, col_offset=9), Call(Name('NS', Load(), lineno=1188, col_offset=16), [], [keyword('x', Name('None', Load(), lineno=1188, col_offset=21)), keyword('y', Name('True', Load(), lineno=1188, col_offset=29))], None, None, lineno=1188, col_offset=16)], Load(), lineno=1188, col_offset=9), Tuple([Str('-k4 a', lineno=1189, col_offset=9), Call(Name('NS', Load(), lineno=1189, col_offset=18), [], [keyword('x', Str('a', lineno=1189, col_offset=23)), keyword('y', Name('True', Load(), lineno=1189, col_offset=30))], None, None, lineno=1189, col_offset=18)], Load(), lineno=1189, col_offset=9)], Load(), lineno=1184, col_offset=16), lineno=1184, col_offset=4)], [], lineno=1176, col_offset=0), ClassDef('TestEmptyAndSpaceContainingArguments', [Name('ParserTestCase', Load(), lineno=1193, col_offset=43)], [Assign([Name('argument_signatures', Store(), lineno=1195, col_offset=4)], List([Call(Name('Sig', Load(), lineno=1196, col_offset=8), [Str('x', lineno=1196, col_offset=12)], [keyword('nargs', Str('?', lineno=1196, col_offset=23))], None, None, lineno=1196, col_offset=8), Call(Name('Sig', Load(), lineno=1197, col_offset=8), [Str('-y', lineno=1197, col_offset=12), Str('--yyy', lineno=1197, col_offset=18)], [keyword('dest', Str('y', lineno=1197, col_offset=32))], None, None, lineno=1197, col_offset=8)], Load(), lineno=1195, col_offset=26), lineno=1195, col_offset=4), Assign([Name('failures', Store(), lineno=1199, col_offset=4)], List([Str('-y', lineno=1199, col_offset=16)], Load(), lineno=1199, col_offset=15), lineno=1199, col_offset=4), Assign([Name('successes', Store(), lineno=1200, col_offset=4)], List([Tuple([List([Str('', lineno=1201, col_offset=10)], Load(), lineno=1201, col_offset=9), Call(Name('NS', Load(), lineno=1201, col_offset=15), [], [keyword('x', Str('', lineno=1201, col_offset=20)), keyword('y', Name('None', Load(), lineno=1201, col_offset=26))], None, None, lineno=1201, col_offset=15)], Load(), lineno=1201, col_offset=9), Tuple([List([Str('a badger', lineno=1202, col_offset=10)], Load(), lineno=1202, col_offset=9), Call(Name('NS', Load(), lineno=1202, col_offset=23), [], [keyword('x', Str('a badger', lineno=1202, col_offset=28)), keyword('y', Name('None', Load(), lineno=1202, col_offset=42))], None, None, lineno=1202, col_offset=23)], Load(), lineno=1202, col_offset=9), Tuple([List([Str('-a badger', lineno=1203, col_offset=10)], Load(), lineno=1203, col_offset=9), Call(Name('NS', Load(), lineno=1203, col_offset=24), [], [keyword('x', Str('-a badger', lineno=1203, col_offset=29)), keyword('y', Name('None', Load(), lineno=1203, col_offset=44))], None, None, lineno=1203, col_offset=24)], Load(), lineno=1203, col_offset=9), Tuple([List([Str('-y', lineno=1204, col_offset=10), Str('', lineno=1204, col_offset=16)], Load(), lineno=1204, col_offset=9), Call(Name('NS', Load(), lineno=1204, col_offset=21), [], [keyword('x', Name('None', Load(), lineno=1204, col_offset=26)), keyword('y', Str('', lineno=1204, col_offset=34))], None, None, lineno=1204, col_offset=21)], Load(), lineno=1204, col_offset=9), Tuple([List([Str('-y', lineno=1205, col_offset=10), Str('a badger', lineno=1205, col_offset=16)], Load(), lineno=1205, col_offset=9), Call(Name('NS', Load(), lineno=1205, col_offset=29), [], [keyword('x', Name('None', Load(), lineno=1205, col_offset=34)), keyword('y', Str('a badger', lineno=1205, col_offset=42))], None, None, lineno=1205, col_offset=29)], Load(), lineno=1205, col_offset=9), Tuple([List([Str('-y', lineno=1206, col_offset=10), Str('-a badger', lineno=1206, col_offset=16)], Load(), lineno=1206, col_offset=9), Call(Name('NS', Load(), lineno=1206, col_offset=30), [], [keyword('x', Name('None', Load(), lineno=1206, col_offset=35)), keyword('y', Str('-a badger', lineno=1206, col_offset=43))], None, None, lineno=1206, col_offset=30)], Load(), lineno=1206, col_offset=9), Tuple([List([Str('--yyy=a badger', lineno=1207, col_offset=10)], Load(), lineno=1207, col_offset=9), Call(Name('NS', Load(), lineno=1207, col_offset=29), [], [keyword('x', Name('None', Load(), lineno=1207, col_offset=34)), keyword('y', Str('a badger', lineno=1207, col_offset=42))], None, None, lineno=1207, col_offset=29)], Load(), lineno=1207, col_offset=9), Tuple([List([Str('--yyy=-a badger', lineno=1208, col_offset=10)], Load(), lineno=1208, col_offset=9), Call(Name('NS', Load(), lineno=1208, col_offset=30), [], [keyword('x', Name('None', Load(), lineno=1208, col_offset=35)), keyword('y', Str('-a badger', lineno=1208, col_offset=43))], None, None, lineno=1208, col_offset=30)], Load(), lineno=1208, col_offset=9)], Load(), lineno=1200, col_offset=16), lineno=1200, col_offset=4)], [], lineno=1193, col_offset=0), ClassDef('TestPrefixCharacterOnlyArguments', [Name('ParserTestCase', Load(), lineno=1212, col_offset=39)], [Assign([Name('parser_signature', Store(), lineno=1214, col_offset=4)], Call(Name('Sig', Load(), lineno=1214, col_offset=23), [], [keyword('prefix_chars', Str('-+', lineno=1214, col_offset=40))], None, None, lineno=1214, col_offset=23), lineno=1214, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=1215, col_offset=4)], List([Call(Name('Sig', Load(), lineno=1216, col_offset=8), [Str('-', lineno=1216, col_offset=12)], [keyword('dest', Str('x', lineno=1216, col_offset=22)), keyword('nargs', Str('?', lineno=1216, col_offset=33)), keyword('const', Str('badger', lineno=1216, col_offset=44))], None, None, lineno=1216, col_offset=8), Call(Name('Sig', Load(), lineno=1217, col_offset=8), [Str('+', lineno=1217, col_offset=12)], [keyword('dest', Str('y', lineno=1217, col_offset=22)), keyword('type', Name('int', Load(), lineno=1217, col_offset=32)), keyword('default', Num(42, lineno=1217, col_offset=45))], None, None, lineno=1217, col_offset=8), Call(Name('Sig', Load(), lineno=1218, col_offset=8), [Str('-+-', lineno=1218, col_offset=12)], [keyword('dest', Str('z', lineno=1218, col_offset=24)), keyword('action', Str('store_true', lineno=1218, col_offset=36))], None, None, lineno=1218, col_offset=8)], Load(), lineno=1215, col_offset=26), lineno=1215, col_offset=4), Assign([Name('failures', Store(), lineno=1220, col_offset=4)], List([Str('-y', lineno=1220, col_offset=16), Str('+ -', lineno=1220, col_offset=22)], Load(), lineno=1220, col_offset=15), lineno=1220, col_offset=4), Assign([Name('successes', Store(), lineno=1221, col_offset=4)], List([Tuple([Str('', lineno=1222, col_offset=9), Call(Name('NS', Load(), lineno=1222, col_offset=13), [], [keyword('x', Name('None', Load(), lineno=1222, col_offset=18)), keyword('y', Num(42, lineno=1222, col_offset=26)), keyword('z', Name('False', Load(), lineno=1222, col_offset=32))], None, None, lineno=1222, col_offset=13)], Load(), lineno=1222, col_offset=9), Tuple([Str('-', lineno=1223, col_offset=9), Call(Name('NS', Load(), lineno=1223, col_offset=14), [], [keyword('x', Str('badger', lineno=1223, col_offset=19)), keyword('y', Num(42, lineno=1223, col_offset=31)), keyword('z', Name('False', Load(), lineno=1223, col_offset=37))], None, None, lineno=1223, col_offset=14)], Load(), lineno=1223, col_offset=9), Tuple([Str('- X', lineno=1224, col_offset=9), Call(Name('NS', Load(), lineno=1224, col_offset=16), [], [keyword('x', Str('X', lineno=1224, col_offset=21)), keyword('y', Num(42, lineno=1224, col_offset=28)), keyword('z', Name('False', Load(), lineno=1224, col_offset=34))], None, None, lineno=1224, col_offset=16)], Load(), lineno=1224, col_offset=9), Tuple([Str('+ -3', lineno=1225, col_offset=9), Call(Name('NS', Load(), lineno=1225, col_offset=17), [], [keyword('x', Name('None', Load(), lineno=1225, col_offset=22)), keyword('y', Num(-3, lineno=1225, col_offset=31)), keyword('z', Name('False', Load(), lineno=1225, col_offset=36))], None, None, lineno=1225, col_offset=17)], Load(), lineno=1225, col_offset=9), Tuple([Str('-+-', lineno=1226, col_offset=9), Call(Name('NS', Load(), lineno=1226, col_offset=16), [], [keyword('x', Name('None', Load(), lineno=1226, col_offset=21)), keyword('y', Num(42, lineno=1226, col_offset=29)), keyword('z', Name('True', Load(), lineno=1226, col_offset=35))], None, None, lineno=1226, col_offset=16)], Load(), lineno=1226, col_offset=9), Tuple([Str('- ===', lineno=1227, col_offset=9), Call(Name('NS', Load(), lineno=1227, col_offset=18), [], [keyword('x', Str('===', lineno=1227, col_offset=23)), keyword('y', Num(42, lineno=1227, col_offset=32)), keyword('z', Name('False', Load(), lineno=1227, col_offset=38))], None, None, lineno=1227, col_offset=18)], Load(), lineno=1227, col_offset=9)], Load(), lineno=1221, col_offset=16), lineno=1221, col_offset=4)], [], lineno=1212, col_offset=0), ClassDef('TestNargsZeroOrMore', [Name('ParserTestCase', Load(), lineno=1231, col_offset=26)], [Expr(Str('Tests specifying an args for an Optional that accepts zero or more', lineno=1232, col_offset=4), lineno=1232, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=1234, col_offset=4)], List([Call(Name('Sig', Load(), lineno=1234, col_offset=27), [Str('-x', lineno=1234, col_offset=31)], [keyword('nargs', Str('*', lineno=1234, col_offset=43))], None, None, lineno=1234, col_offset=27), Call(Name('Sig', Load(), lineno=1234, col_offset=49), [Str('y', lineno=1234, col_offset=53)], [keyword('nargs', Str('*', lineno=1234, col_offset=64))], None, None, lineno=1234, col_offset=49)], Load(), lineno=1234, col_offset=26), lineno=1234, col_offset=4), Assign([Name('failures', Store(), lineno=1235, col_offset=4)], List([], Load(), lineno=1235, col_offset=15), lineno=1235, col_offset=4), Assign([Name('successes', Store(), lineno=1236, col_offset=4)], List([Tuple([Str('', lineno=1237, col_offset=9), Call(Name('NS', Load(), lineno=1237, col_offset=13), [], [keyword('x', Name('None', Load(), lineno=1237, col_offset=18)), keyword('y', List([], Load(), lineno=1237, col_offset=26))], None, None, lineno=1237, col_offset=13)], Load(), lineno=1237, col_offset=9), Tuple([Str('-x', lineno=1238, col_offset=9), Call(Name('NS', Load(), lineno=1238, col_offset=15), [], [keyword('x', List([], Load(), lineno=1238, col_offset=20)), keyword('y', List([], Load(), lineno=1238, col_offset=26))], None, None, lineno=1238, col_offset=15)], Load(), lineno=1238, col_offset=9), Tuple([Str('-x a', lineno=1239, col_offset=9), Call(Name('NS', Load(), lineno=1239, col_offset=17), [], [keyword('x', List([Str('a', lineno=1239, col_offset=23)], Load(), lineno=1239, col_offset=22)), keyword('y', List([], Load(), lineno=1239, col_offset=31))], None, None, lineno=1239, col_offset=17)], Load(), lineno=1239, col_offset=9), Tuple([Str('-x a -- b', lineno=1240, col_offset=9), Call(Name('NS', Load(), lineno=1240, col_offset=22), [], [keyword('x', List([Str('a', lineno=1240, col_offset=28)], Load(), lineno=1240, col_offset=27)), keyword('y', List([Str('b', lineno=1240, col_offset=37)], Load(), lineno=1240, col_offset=36))], None, None, lineno=1240, col_offset=22)], Load(), lineno=1240, col_offset=9), Tuple([Str('a', lineno=1241, col_offset=9), Call(Name('NS', Load(), lineno=1241, col_offset=14), [], [keyword('x', Name('None', Load(), lineno=1241, col_offset=19)), keyword('y', List([Str('a', lineno=1241, col_offset=28)], Load(), lineno=1241, col_offset=27))], None, None, lineno=1241, col_offset=14)], Load(), lineno=1241, col_offset=9), Tuple([Str('a -x', lineno=1242, col_offset=9), Call(Name('NS', Load(), lineno=1242, col_offset=17), [], [keyword('x', List([], Load(), lineno=1242, col_offset=22)), keyword('y', List([Str('a', lineno=1242, col_offset=29)], Load(), lineno=1242, col_offset=28))], None, None, lineno=1242, col_offset=17)], Load(), lineno=1242, col_offset=9), Tuple([Str('a -x b', lineno=1243, col_offset=9), Call(Name('NS', Load(), lineno=1243, col_offset=19), [], [keyword('x', List([Str('b', lineno=1243, col_offset=25)], Load(), lineno=1243, col_offset=24)), keyword('y', List([Str('a', lineno=1243, col_offset=34)], Load(), lineno=1243, col_offset=33))], None, None, lineno=1243, col_offset=19)], Load(), lineno=1243, col_offset=9)], Load(), lineno=1236, col_offset=16), lineno=1236, col_offset=4)], [], lineno=1231, col_offset=0), ClassDef('TestNargsRemainder', [Name('ParserTestCase', Load(), lineno=1247, col_offset=25)], [Expr(Str('Tests specifying a positional with nargs=REMAINDER', lineno=1248, col_offset=4), lineno=1248, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=1250, col_offset=4)], List([Call(Name('Sig', Load(), lineno=1250, col_offset=27), [Str('x', lineno=1250, col_offset=31)], [], None, None, lineno=1250, col_offset=27), Call(Name('Sig', Load(), lineno=1250, col_offset=37), [Str('y', lineno=1250, col_offset=41)], [keyword('nargs', Str('...', lineno=1250, col_offset=52))], None, None, lineno=1250, col_offset=37), Call(Name('Sig', Load(), lineno=1250, col_offset=60), [Str('-z', lineno=1250, col_offset=64)], [], None, None, lineno=1250, col_offset=60)], Load(), lineno=1250, col_offset=26), lineno=1250, col_offset=4), Assign([Name('failures', Store(), lineno=1251, col_offset=4)], List([Str('', lineno=1251, col_offset=16), Str('-z', lineno=1251, col_offset=20), Str('-z Z', lineno=1251, col_offset=26)], Load(), lineno=1251, col_offset=15), lineno=1251, col_offset=4), Assign([Name('successes', Store(), lineno=1252, col_offset=4)], List([Tuple([Str('X', lineno=1253, col_offset=9), Call(Name('NS', Load(), lineno=1253, col_offset=14), [], [keyword('x', Str('X', lineno=1253, col_offset=19)), keyword('y', List([], Load(), lineno=1253, col_offset=26)), keyword('z', Name('None', Load(), lineno=1253, col_offset=32))], None, None, lineno=1253, col_offset=14)], Load(), lineno=1253, col_offset=9), Tuple([Str('-z Z X', lineno=1254, col_offset=9), Call(Name('NS', Load(), lineno=1254, col_offset=19), [], [keyword('x', Str('X', lineno=1254, col_offset=24)), keyword('y', List([], Load(), lineno=1254, col_offset=31)), keyword('z', Str('Z', lineno=1254, col_offset=37))], None, None, lineno=1254, col_offset=19)], Load(), lineno=1254, col_offset=9), Tuple([Str('X A B -z Z', lineno=1255, col_offset=9), Call(Name('NS', Load(), lineno=1255, col_offset=23), [], [keyword('x', Str('X', lineno=1255, col_offset=28)), keyword('y', List([Str('A', lineno=1255, col_offset=36), Str('B', lineno=1255, col_offset=41), Str('-z', lineno=1255, col_offset=46), Str('Z', lineno=1255, col_offset=52)], Load(), lineno=1255, col_offset=35)), keyword('z', Name('None', Load(), lineno=1255, col_offset=60))], None, None, lineno=1255, col_offset=23)], Load(), lineno=1255, col_offset=9), Tuple([Str('X Y --foo', lineno=1256, col_offset=9), Call(Name('NS', Load(), lineno=1256, col_offset=22), [], [keyword('x', Str('X', lineno=1256, col_offset=27)), keyword('y', List([Str('Y', lineno=1256, col_offset=35), Str('--foo', lineno=1256, col_offset=40)], Load(), lineno=1256, col_offset=34)), keyword('z', Name('None', Load(), lineno=1256, col_offset=52))], None, None, lineno=1256, col_offset=22)], Load(), lineno=1256, col_offset=9)], Load(), lineno=1252, col_offset=16), lineno=1252, col_offset=4)], [], lineno=1247, col_offset=0), ClassDef('TestOptionLike', [Name('ParserTestCase', Load(), lineno=1260, col_offset=21)], [Expr(Str('Tests options that may or may not be arguments', lineno=1261, col_offset=4), lineno=1261, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=1263, col_offset=4)], List([Call(Name('Sig', Load(), lineno=1264, col_offset=8), [Str('-x', lineno=1264, col_offset=12)], [keyword('type', Name('float', Load(), lineno=1264, col_offset=23))], None, None, lineno=1264, col_offset=8), Call(Name('Sig', Load(), lineno=1265, col_offset=8), [Str('-3', lineno=1265, col_offset=12)], [keyword('type', Name('float', Load(), lineno=1265, col_offset=23)), keyword('dest', Str('y', lineno=1265, col_offset=35))], None, None, lineno=1265, col_offset=8), Call(Name('Sig', Load(), lineno=1266, col_offset=8), [Str('z', lineno=1266, col_offset=12)], [keyword('nargs', Str('*', lineno=1266, col_offset=23))], None, None, lineno=1266, col_offset=8)], Load(), lineno=1263, col_offset=26), lineno=1263, col_offset=4), Assign([Name('failures', Store(), lineno=1268, col_offset=4)], List([Str('-x', lineno=1268, col_offset=16), Str('-y2.5', lineno=1268, col_offset=22), Str('-xa', lineno=1268, col_offset=31), Str('-x -a', lineno=1268, col_offset=38), Str('-x -3', lineno=1269, col_offset=16), Str('-x -3.5', lineno=1269, col_offset=25), Str('-3 -3.5', lineno=1269, col_offset=36), Str('-x -2.5', lineno=1270, col_offset=16), Str('-x -2.5 a', lineno=1270, col_offset=27), Str('-3 -.5', lineno=1270, col_offset=40), Str('a x -1', lineno=1271, col_offset=16), Str('-x -1 a', lineno=1271, col_offset=26), Str('-3 -1 a', lineno=1271, col_offset=37)], Load(), lineno=1268, col_offset=15), lineno=1268, col_offset=4), Assign([Name('successes', Store(), lineno=1272, col_offset=4)], List([Tuple([Str('', lineno=1273, col_offset=9), Call(Name('NS', Load(), lineno=1273, col_offset=13), [], [keyword('x', Name('None', Load(), lineno=1273, col_offset=18)), keyword('y', Name('None', Load(), lineno=1273, col_offset=26)), keyword('z', List([], Load(), lineno=1273, col_offset=34))], None, None, lineno=1273, col_offset=13)], Load(), lineno=1273, col_offset=9), Tuple([Str('-x 2.5', lineno=1274, col_offset=9), Call(Name('NS', Load(), lineno=1274, col_offset=19), [], [keyword('x', Num(2.5, lineno=1274, col_offset=24)), keyword('y', Name('None', Load(), lineno=1274, col_offset=31)), keyword('z', List([], Load(), lineno=1274, col_offset=39))], None, None, lineno=1274, col_offset=19)], Load(), lineno=1274, col_offset=9), Tuple([Str('-x 2.5 a', lineno=1275, col_offset=9), Call(Name('NS', Load(), lineno=1275, col_offset=21), [], [keyword('x', Num(2.5, lineno=1275, col_offset=26)), keyword('y', Name('None', Load(), lineno=1275, col_offset=33)), keyword('z', List([Str('a', lineno=1275, col_offset=42)], Load(), lineno=1275, col_offset=41))], None, None, lineno=1275, col_offset=21)], Load(), lineno=1275, col_offset=9), Tuple([Str('-3.5', lineno=1276, col_offset=9), Call(Name('NS', Load(), lineno=1276, col_offset=17), [], [keyword('x', Name('None', Load(), lineno=1276, col_offset=22)), keyword('y', Num(0.5, lineno=1276, col_offset=30)), keyword('z', List([], Load(), lineno=1276, col_offset=37))], None, None, lineno=1276, col_offset=17)], Load(), lineno=1276, col_offset=9), Tuple([Str('-3-.5', lineno=1277, col_offset=9), Call(Name('NS', Load(), lineno=1277, col_offset=18), [], [keyword('x', Name('None', Load(), lineno=1277, col_offset=23)), keyword('y', Num(-0.5, lineno=1277, col_offset=32)), keyword('z', List([], Load(), lineno=1277, col_offset=39))], None, None, lineno=1277, col_offset=18)], Load(), lineno=1277, col_offset=9), Tuple([Str('-3 .5', lineno=1278, col_offset=9), Call(Name('NS', Load(), lineno=1278, col_offset=18), [], [keyword('x', Name('None', Load(), lineno=1278, col_offset=23)), keyword('y', Num(0.5, lineno=1278, col_offset=31)), keyword('z', List([], Load(), lineno=1278, col_offset=38))], None, None, lineno=1278, col_offset=18)], Load(), lineno=1278, col_offset=9), Tuple([Str('a -3.5', lineno=1279, col_offset=9), Call(Name('NS', Load(), lineno=1279, col_offset=19), [], [keyword('x', Name('None', Load(), lineno=1279, col_offset=24)), keyword('y', Num(0.5, lineno=1279, col_offset=32)), keyword('z', List([Str('a', lineno=1279, col_offset=40)], Load(), lineno=1279, col_offset=39))], None, None, lineno=1279, col_offset=19)], Load(), lineno=1279, col_offset=9), Tuple([Str('a', lineno=1280, col_offset=9), Call(Name('NS', Load(), lineno=1280, col_offset=14), [], [keyword('x', Name('None', Load(), lineno=1280, col_offset=19)), keyword('y', Name('None', Load(), lineno=1280, col_offset=27)), keyword('z', List([Str('a', lineno=1280, col_offset=36)], Load(), lineno=1280, col_offset=35))], None, None, lineno=1280, col_offset=14)], Load(), lineno=1280, col_offset=9), Tuple([Str('a -x 1', lineno=1281, col_offset=9), Call(Name('NS', Load(), lineno=1281, col_offset=19), [], [keyword('x', Num(1.0, lineno=1281, col_offset=24)), keyword('y', Name('None', Load(), lineno=1281, col_offset=31)), keyword('z', List([Str('a', lineno=1281, col_offset=40)], Load(), lineno=1281, col_offset=39))], None, None, lineno=1281, col_offset=19)], Load(), lineno=1281, col_offset=9), Tuple([Str('-x 1 a', lineno=1282, col_offset=9), Call(Name('NS', Load(), lineno=1282, col_offset=19), [], [keyword('x', Num(1.0, lineno=1282, col_offset=24)), keyword('y', Name('None', Load(), lineno=1282, col_offset=31)), keyword('z', List([Str('a', lineno=1282, col_offset=40)], Load(), lineno=1282, col_offset=39))], None, None, lineno=1282, col_offset=19)], Load(), lineno=1282, col_offset=9), Tuple([Str('-3 1 a', lineno=1283, col_offset=9), Call(Name('NS', Load(), lineno=1283, col_offset=19), [], [keyword('x', Name('None', Load(), lineno=1283, col_offset=24)), keyword('y', Num(1.0, lineno=1283, col_offset=32)), keyword('z', List([Str('a', lineno=1283, col_offset=40)], Load(), lineno=1283, col_offset=39))], None, None, lineno=1283, col_offset=19)], Load(), lineno=1283, col_offset=9)], Load(), lineno=1272, col_offset=16), lineno=1272, col_offset=4)], [], lineno=1260, col_offset=0), ClassDef('TestDefaultSuppress', [Name('ParserTestCase', Load(), lineno=1287, col_offset=26)], [Expr(Str('Test actions with suppressed defaults', lineno=1288, col_offset=4), lineno=1288, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=1290, col_offset=4)], List([Call(Name('Sig', Load(), lineno=1291, col_offset=8), [Str('foo', lineno=1291, col_offset=12)], [keyword('nargs', Str('?', lineno=1291, col_offset=25)), keyword('default', Attribute(Name('argparse', Load(), lineno=1291, col_offset=38), 'SUPPRESS', Load(), lineno=1291, col_offset=38))], None, None, lineno=1291, col_offset=8), Call(Name('Sig', Load(), lineno=1292, col_offset=8), [Str('bar', lineno=1292, col_offset=12)], [keyword('nargs', Str('*', lineno=1292, col_offset=25)), keyword('default', Attribute(Name('argparse', Load(), lineno=1292, col_offset=38), 'SUPPRESS', Load(), lineno=1292, col_offset=38))], None, None, lineno=1292, col_offset=8), Call(Name('Sig', Load(), lineno=1293, col_offset=8), [Str('--baz', lineno=1293, col_offset=12)], [keyword('action', Str('store_true', lineno=1293, col_offset=28)), keyword('default', Attribute(Name('argparse', Load(), lineno=1293, col_offset=50), 'SUPPRESS', Load(), lineno=1293, col_offset=50))], None, None, lineno=1293, col_offset=8)], Load(), lineno=1290, col_offset=26), lineno=1290, col_offset=4), Assign([Name('failures', Store(), lineno=1295, col_offset=4)], List([Str('-x', lineno=1295, col_offset=16)], Load(), lineno=1295, col_offset=15), lineno=1295, col_offset=4), Assign([Name('successes', Store(), lineno=1296, col_offset=4)], List([Tuple([Str('', lineno=1297, col_offset=9), Call(Name('NS', Load(), lineno=1297, col_offset=13), [], [], None, None, lineno=1297, col_offset=13)], Load(), lineno=1297, col_offset=9), Tuple([Str('a', lineno=1298, col_offset=9), Call(Name('NS', Load(), lineno=1298, col_offset=14), [], [keyword('foo', Str('a', lineno=1298, col_offset=21))], None, None, lineno=1298, col_offset=14)], Load(), lineno=1298, col_offset=9), Tuple([Str('a b', lineno=1299, col_offset=9), Call(Name('NS', Load(), lineno=1299, col_offset=16), [], [keyword('foo', Str('a', lineno=1299, col_offset=23)), keyword('bar', List([Str('b', lineno=1299, col_offset=33)], Load(), lineno=1299, col_offset=32))], None, None, lineno=1299, col_offset=16)], Load(), lineno=1299, col_offset=9), Tuple([Str('--baz', lineno=1300, col_offset=9), Call(Name('NS', Load(), lineno=1300, col_offset=18), [], [keyword('baz', Name('True', Load(), lineno=1300, col_offset=25))], None, None, lineno=1300, col_offset=18)], Load(), lineno=1300, col_offset=9), Tuple([Str('a --baz', lineno=1301, col_offset=9), Call(Name('NS', Load(), lineno=1301, col_offset=20), [], [keyword('foo', Str('a', lineno=1301, col_offset=27)), keyword('baz', Name('True', Load(), lineno=1301, col_offset=36))], None, None, lineno=1301, col_offset=20)], Load(), lineno=1301, col_offset=9), Tuple([Str('--baz a b', lineno=1302, col_offset=9), Call(Name('NS', Load(), lineno=1302, col_offset=22), [], [keyword('foo', Str('a', lineno=1302, col_offset=29)), keyword('bar', List([Str('b', lineno=1302, col_offset=39)], Load(), lineno=1302, col_offset=38)), keyword('baz', Name('True', Load(), lineno=1302, col_offset=49))], None, None, lineno=1302, col_offset=22)], Load(), lineno=1302, col_offset=9)], Load(), lineno=1296, col_offset=16), lineno=1296, col_offset=4)], [], lineno=1287, col_offset=0), ClassDef('TestParserDefaultSuppress', [Name('ParserTestCase', Load(), lineno=1306, col_offset=32)], [Expr(Str('Test actions with a parser-level default of SUPPRESS', lineno=1307, col_offset=4), lineno=1307, col_offset=4), Assign([Name('parser_signature', Store(), lineno=1309, col_offset=4)], Call(Name('Sig', Load(), lineno=1309, col_offset=23), [], [keyword('argument_default', Attribute(Name('argparse', Load(), lineno=1309, col_offset=44), 'SUPPRESS', Load(), lineno=1309, col_offset=44))], None, None, lineno=1309, col_offset=23), lineno=1309, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=1310, col_offset=4)], List([Call(Name('Sig', Load(), lineno=1311, col_offset=8), [Str('foo', lineno=1311, col_offset=12)], [keyword('nargs', Str('?', lineno=1311, col_offset=25))], None, None, lineno=1311, col_offset=8), Call(Name('Sig', Load(), lineno=1312, col_offset=8), [Str('bar', lineno=1312, col_offset=12)], [keyword('nargs', Str('*', lineno=1312, col_offset=25))], None, None, lineno=1312, col_offset=8), Call(Name('Sig', Load(), lineno=1313, col_offset=8), [Str('--baz', lineno=1313, col_offset=12)], [keyword('action', Str('store_true', lineno=1313, col_offset=28))], None, None, lineno=1313, col_offset=8)], Load(), lineno=1310, col_offset=26), lineno=1310, col_offset=4), Assign([Name('failures', Store(), lineno=1315, col_offset=4)], List([Str('-x', lineno=1315, col_offset=16)], Load(), lineno=1315, col_offset=15), lineno=1315, col_offset=4), Assign([Name('successes', Store(), lineno=1316, col_offset=4)], List([Tuple([Str('', lineno=1317, col_offset=9), Call(Name('NS', Load(), lineno=1317, col_offset=13), [], [], None, None, lineno=1317, col_offset=13)], Load(), lineno=1317, col_offset=9), Tuple([Str('a', lineno=1318, col_offset=9), Call(Name('NS', Load(), lineno=1318, col_offset=14), [], [keyword('foo', Str('a', lineno=1318, col_offset=21))], None, None, lineno=1318, col_offset=14)], Load(), lineno=1318, col_offset=9), Tuple([Str('a b', lineno=1319, col_offset=9), Call(Name('NS', Load(), lineno=1319, col_offset=16), [], [keyword('foo', Str('a', lineno=1319, col_offset=23)), keyword('bar', List([Str('b', lineno=1319, col_offset=33)], Load(), lineno=1319, col_offset=32))], None, None, lineno=1319, col_offset=16)], Load(), lineno=1319, col_offset=9), Tuple([Str('--baz', lineno=1320, col_offset=9), Call(Name('NS', Load(), lineno=1320, col_offset=18), [], [keyword('baz', Name('True', Load(), lineno=1320, col_offset=25))], None, None, lineno=1320, col_offset=18)], Load(), lineno=1320, col_offset=9), Tuple([Str('a --baz', lineno=1321, col_offset=9), Call(Name('NS', Load(), lineno=1321, col_offset=20), [], [keyword('foo', Str('a', lineno=1321, col_offset=27)), keyword('baz', Name('True', Load(), lineno=1321, col_offset=36))], None, None, lineno=1321, col_offset=20)], Load(), lineno=1321, col_offset=9), Tuple([Str('--baz a b', lineno=1322, col_offset=9), Call(Name('NS', Load(), lineno=1322, col_offset=22), [], [keyword('foo', Str('a', lineno=1322, col_offset=29)), keyword('bar', List([Str('b', lineno=1322, col_offset=39)], Load(), lineno=1322, col_offset=38)), keyword('baz', Name('True', Load(), lineno=1322, col_offset=49))], None, None, lineno=1322, col_offset=22)], Load(), lineno=1322, col_offset=9)], Load(), lineno=1316, col_offset=16), lineno=1316, col_offset=4)], [], lineno=1306, col_offset=0), ClassDef('TestParserDefault42', [Name('ParserTestCase', Load(), lineno=1326, col_offset=26)], [Expr(Str('Test actions with a parser-level default of 42', lineno=1327, col_offset=4), lineno=1327, col_offset=4), Assign([Name('parser_signature', Store(), lineno=1329, col_offset=4)], Call(Name('Sig', Load(), lineno=1329, col_offset=23), [], [keyword('argument_default', Num(42, lineno=1329, col_offset=44)), keyword('version', Str('1.0', lineno=1329, col_offset=56))], None, None, lineno=1329, col_offset=23), lineno=1329, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=1330, col_offset=4)], List([Call(Name('Sig', Load(), lineno=1331, col_offset=8), [Str('foo', lineno=1331, col_offset=12)], [keyword('nargs', Str('?', lineno=1331, col_offset=25))], None, None, lineno=1331, col_offset=8), Call(Name('Sig', Load(), lineno=1332, col_offset=8), [Str('bar', lineno=1332, col_offset=12)], [keyword('nargs', Str('*', lineno=1332, col_offset=25))], None, None, lineno=1332, col_offset=8), Call(Name('Sig', Load(), lineno=1333, col_offset=8), [Str('--baz', lineno=1333, col_offset=12)], [keyword('action', Str('store_true', lineno=1333, col_offset=28))], None, None, lineno=1333, col_offset=8)], Load(), lineno=1330, col_offset=26), lineno=1330, col_offset=4), Assign([Name('failures', Store(), lineno=1335, col_offset=4)], List([Str('-x', lineno=1335, col_offset=16)], Load(), lineno=1335, col_offset=15), lineno=1335, col_offset=4), Assign([Name('successes', Store(), lineno=1336, col_offset=4)], List([Tuple([Str('', lineno=1337, col_offset=9), Call(Name('NS', Load(), lineno=1337, col_offset=13), [], [keyword('foo', Num(42, lineno=1337, col_offset=20)), keyword('bar', Num(42, lineno=1337, col_offset=28)), keyword('baz', Num(42, lineno=1337, col_offset=36))], None, None, lineno=1337, col_offset=13)], Load(), lineno=1337, col_offset=9), Tuple([Str('a', lineno=1338, col_offset=9), Call(Name('NS', Load(), lineno=1338, col_offset=14), [], [keyword('foo', Str('a', lineno=1338, col_offset=21)), keyword('bar', Num(42, lineno=1338, col_offset=30)), keyword('baz', Num(42, lineno=1338, col_offset=38))], None, None, lineno=1338, col_offset=14)], Load(), lineno=1338, col_offset=9), Tuple([Str('a b', lineno=1339, col_offset=9), Call(Name('NS', Load(), lineno=1339, col_offset=16), [], [keyword('foo', Str('a', lineno=1339, col_offset=23)), keyword('bar', List([Str('b', lineno=1339, col_offset=33)], Load(), lineno=1339, col_offset=32)), keyword('baz', Num(42, lineno=1339, col_offset=43))], None, None, lineno=1339, col_offset=16)], Load(), lineno=1339, col_offset=9), Tuple([Str('--baz', lineno=1340, col_offset=9), Call(Name('NS', Load(), lineno=1340, col_offset=18), [], [keyword('foo', Num(42, lineno=1340, col_offset=25)), keyword('bar', Num(42, lineno=1340, col_offset=33)), keyword('baz', Name('True', Load(), lineno=1340, col_offset=41))], None, None, lineno=1340, col_offset=18)], Load(), lineno=1340, col_offset=9), Tuple([Str('a --baz', lineno=1341, col_offset=9), Call(Name('NS', Load(), lineno=1341, col_offset=20), [], [keyword('foo', Str('a', lineno=1341, col_offset=27)), keyword('bar', Num(42, lineno=1341, col_offset=36)), keyword('baz', Name('True', Load(), lineno=1341, col_offset=44))], None, None, lineno=1341, col_offset=20)], Load(), lineno=1341, col_offset=9), Tuple([Str('--baz a b', lineno=1342, col_offset=9), Call(Name('NS', Load(), lineno=1342, col_offset=22), [], [keyword('foo', Str('a', lineno=1342, col_offset=29)), keyword('bar', List([Str('b', lineno=1342, col_offset=39)], Load(), lineno=1342, col_offset=38)), keyword('baz', Name('True', Load(), lineno=1342, col_offset=49))], None, None, lineno=1342, col_offset=22)], Load(), lineno=1342, col_offset=9)], Load(), lineno=1336, col_offset=16), lineno=1336, col_offset=4)], [], lineno=1326, col_offset=0), ClassDef('TestArgumentsFromFile', [Name('TempDirMixin', Load(), lineno=1346, col_offset=28), Name('ParserTestCase', Load(), lineno=1346, col_offset=42)], [Expr(Str('Test reading arguments from a file', lineno=1347, col_offset=4), lineno=1347, col_offset=4), FunctionDef('setUp', arguments([Name('self', Param(), lineno=1349, col_offset=14)], None, None, []), [Expr(Call(Attribute(Call(Name('super', Load(), lineno=1350, col_offset=8), [Name('TestArgumentsFromFile', Load(), lineno=1350, col_offset=14), Name('self', Load(), lineno=1350, col_offset=37)], [], None, None, lineno=1350, col_offset=8), 'setUp', Load(), lineno=1350, col_offset=8), [], [], None, None, lineno=1350, col_offset=8), lineno=1350, col_offset=8), Assign([Name('file_texts', Store(), lineno=1351, col_offset=8)], List([Tuple([Str('hello', lineno=1352, col_offset=13), Str('hello world!\n', lineno=1352, col_offset=22)], Load(), lineno=1352, col_offset=13), Tuple([Str('recursive', lineno=1353, col_offset=13), Str('-a\nA\n@hello', lineno=1353, col_offset=26)], Load(), lineno=1353, col_offset=13), Tuple([Str('invalid', lineno=1356, col_offset=13), Str('@no-such-path\n', lineno=1356, col_offset=24)], Load(), lineno=1356, col_offset=13)], Load(), lineno=1351, col_offset=21), lineno=1351, col_offset=8), For(Tuple([Name('path', Store(), lineno=1358, col_offset=12), Name('text', Store(), lineno=1358, col_offset=18)], Store(), lineno=1358, col_offset=12), Name('file_texts', Load(), lineno=1358, col_offset=26), [Assign([Name('file', Store(), lineno=1359, col_offset=12)], Call(Name('open', Load(), lineno=1359, col_offset=19), [Name('path', Load(), lineno=1359, col_offset=24), Str('w', lineno=1359, col_offset=30)], [], None, None, lineno=1359, col_offset=19), lineno=1359, col_offset=12), Expr(Call(Attribute(Name('file', Load(), lineno=1360, col_offset=12), 'write', Load(), lineno=1360, col_offset=12), [Name('text', Load(), lineno=1360, col_offset=23)], [], None, None, lineno=1360, col_offset=12), lineno=1360, col_offset=12), Expr(Call(Attribute(Name('file', Load(), lineno=1361, col_offset=12), 'close', Load(), lineno=1361, col_offset=12), [], [], None, None, lineno=1361, col_offset=12), lineno=1361, col_offset=12)], [], lineno=1358, col_offset=8)], [], lineno=1349, col_offset=4), Assign([Name('parser_signature', Store(), lineno=1363, col_offset=4)], Call(Name('Sig', Load(), lineno=1363, col_offset=23), [], [keyword('fromfile_prefix_chars', Str('@', lineno=1363, col_offset=49))], None, None, lineno=1363, col_offset=23), lineno=1363, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=1364, col_offset=4)], List([Call(Name('Sig', Load(), lineno=1365, col_offset=8), [Str('-a', lineno=1365, col_offset=12)], [], None, None, lineno=1365, col_offset=8), Call(Name('Sig', Load(), lineno=1366, col_offset=8), [Str('x', lineno=1366, col_offset=12)], [], None, None, lineno=1366, col_offset=8), Call(Name('Sig', Load(), lineno=1367, col_offset=8), [Str('y', lineno=1367, col_offset=12)], [keyword('nargs', Str('+', lineno=1367, col_offset=23))], None, None, lineno=1367, col_offset=8)], Load(), lineno=1364, col_offset=26), lineno=1364, col_offset=4), Assign([Name('failures', Store(), lineno=1369, col_offset=4)], List([Str('', lineno=1369, col_offset=16), Str('-b', lineno=1369, col_offset=20), Str('X', lineno=1369, col_offset=26), Str('@invalid', lineno=1369, col_offset=31), Str('@missing', lineno=1369, col_offset=43)], Load(), lineno=1369, col_offset=15), lineno=1369, col_offset=4), Assign([Name('successes', Store(), lineno=1370, col_offset=4)], List([Tuple([Str('X Y', lineno=1371, col_offset=9), Call(Name('NS', Load(), lineno=1371, col_offset=16), [], [keyword('a', Name('None', Load(), lineno=1371, col_offset=21)), keyword('x', Str('X', lineno=1371, col_offset=29)), keyword('y', List([Str('Y', lineno=1371, col_offset=37)], Load(), lineno=1371, col_offset=36))], None, None, lineno=1371, col_offset=16)], Load(), lineno=1371, col_offset=9), Tuple([Str('X -a A Y Z', lineno=1372, col_offset=9), Call(Name('NS', Load(), lineno=1372, col_offset=23), [], [keyword('a', Str('A', lineno=1372, col_offset=28)), keyword('x', Str('X', lineno=1372, col_offset=35)), keyword('y', List([Str('Y', lineno=1372, col_offset=43), Str('Z', lineno=1372, col_offset=48)], Load(), lineno=1372, col_offset=42))], None, None, lineno=1372, col_offset=23)], Load(), lineno=1372, col_offset=9), Tuple([Str('@hello X', lineno=1373, col_offset=9), Call(Name('NS', Load(), lineno=1373, col_offset=21), [], [keyword('a', Name('None', Load(), lineno=1373, col_offset=26)), keyword('x', Str('hello world!', lineno=1373, col_offset=34)), keyword('y', List([Str('X', lineno=1373, col_offset=53)], Load(), lineno=1373, col_offset=52))], None, None, lineno=1373, col_offset=21)], Load(), lineno=1373, col_offset=9), Tuple([Str('X @hello', lineno=1374, col_offset=9), Call(Name('NS', Load(), lineno=1374, col_offset=21), [], [keyword('a', Name('None', Load(), lineno=1374, col_offset=26)), keyword('x', Str('X', lineno=1374, col_offset=34)), keyword('y', List([Str('hello world!', lineno=1374, col_offset=42)], Load(), lineno=1374, col_offset=41))], None, None, lineno=1374, col_offset=21)], Load(), lineno=1374, col_offset=9), Tuple([Str('-a B @recursive Y Z', lineno=1375, col_offset=9), Call(Name('NS', Load(), lineno=1375, col_offset=32), [], [keyword('a', Str('A', lineno=1375, col_offset=37)), keyword('x', Str('hello world!', lineno=1375, col_offset=44)), keyword('y', List([Str('Y', lineno=1375, col_offset=63), Str('Z', lineno=1375, col_offset=68)], Load(), lineno=1375, col_offset=62))], None, None, lineno=1375, col_offset=32)], Load(), lineno=1375, col_offset=9), Tuple([Str('X @recursive Z -a B', lineno=1376, col_offset=9), Call(Name('NS', Load(), lineno=1376, col_offset=32), [], [keyword('a', Str('B', lineno=1376, col_offset=37)), keyword('x', Str('X', lineno=1376, col_offset=44)), keyword('y', List([Str('hello world!', lineno=1376, col_offset=52), Str('Z', lineno=1376, col_offset=68)], Load(), lineno=1376, col_offset=51))], None, None, lineno=1376, col_offset=32)], Load(), lineno=1376, col_offset=9)], Load(), lineno=1370, col_offset=16), lineno=1370, col_offset=4)], [], lineno=1346, col_offset=0), ClassDef('TestArgumentsFromFileConverter', [Name('TempDirMixin', Load(), lineno=1380, col_offset=37), Name('ParserTestCase', Load(), lineno=1380, col_offset=51)], [Expr(Str('Test reading arguments from a file', lineno=1381, col_offset=4), lineno=1381, col_offset=4), FunctionDef('setUp', arguments([Name('self', Param(), lineno=1383, col_offset=14)], None, None, []), [Expr(Call(Attribute(Call(Name('super', Load(), lineno=1384, col_offset=8), [Name('TestArgumentsFromFileConverter', Load(), lineno=1384, col_offset=14), Name('self', Load(), lineno=1384, col_offset=46)], [], None, None, lineno=1384, col_offset=8), 'setUp', Load(), lineno=1384, col_offset=8), [], [], None, None, lineno=1384, col_offset=8), lineno=1384, col_offset=8), Assign([Name('file_texts', Store(), lineno=1385, col_offset=8)], List([Tuple([Str('hello', lineno=1386, col_offset=13), Str('hello world!\n', lineno=1386, col_offset=22)], Load(), lineno=1386, col_offset=13)], Load(), lineno=1385, col_offset=21), lineno=1385, col_offset=8), For(Tuple([Name('path', Store(), lineno=1388, col_offset=12), Name('text', Store(), lineno=1388, col_offset=18)], Store(), lineno=1388, col_offset=12), Name('file_texts', Load(), lineno=1388, col_offset=26), [Assign([Name('file', Store(), lineno=1389, col_offset=12)], Call(Name('open', Load(), lineno=1389, col_offset=19), [Name('path', Load(), lineno=1389, col_offset=24), Str('w', lineno=1389, col_offset=30)], [], None, None, lineno=1389, col_offset=19), lineno=1389, col_offset=12), Expr(Call(Attribute(Name('file', Load(), lineno=1390, col_offset=12), 'write', Load(), lineno=1390, col_offset=12), [Name('text', Load(), lineno=1390, col_offset=23)], [], None, None, lineno=1390, col_offset=12), lineno=1390, col_offset=12), Expr(Call(Attribute(Name('file', Load(), lineno=1391, col_offset=12), 'close', Load(), lineno=1391, col_offset=12), [], [], None, None, lineno=1391, col_offset=12), lineno=1391, col_offset=12)], [], lineno=1388, col_offset=8)], [], lineno=1383, col_offset=4), ClassDef('FromFileConverterArgumentParser', [Name('ErrorRaisingArgumentParser', Load(), lineno=1393, col_offset=42)], [FunctionDef('convert_arg_line_to_args', arguments([Name('self', Param(), lineno=1395, col_offset=37), Name('arg_line', Param(), lineno=1395, col_offset=43)], None, None, []), [For(Name('arg', Store(), lineno=1396, col_offset=16), Call(Attribute(Name('arg_line', Load(), lineno=1396, col_offset=23), 'split', Load(), lineno=1396, col_offset=23), [], [], None, None, lineno=1396, col_offset=23), [If(UnaryOp(Not(), Call(Attribute(Name('arg', Load(), lineno=1397, col_offset=23), 'strip', Load(), lineno=1397, col_offset=23), [], [], None, None, lineno=1397, col_offset=23), lineno=1397, col_offset=19), [Continue( lineno=1398, col_offset=20)], [], lineno=1397, col_offset=16), Expr(Yield(Name('arg', Load(), lineno=1399, col_offset=22), lineno=1399, col_offset=16), lineno=1399, col_offset=16)], [], lineno=1396, col_offset=12)], [], lineno=1395, col_offset=8)], [], lineno=1393, col_offset=4), Assign([Name('parser_class', Store(), lineno=1400, col_offset=4)], Name('FromFileConverterArgumentParser', Load(), lineno=1400, col_offset=19), lineno=1400, col_offset=4), Assign([Name('parser_signature', Store(), lineno=1401, col_offset=4)], Call(Name('Sig', Load(), lineno=1401, col_offset=23), [], [keyword('fromfile_prefix_chars', Str('@', lineno=1401, col_offset=49))], None, None, lineno=1401, col_offset=23), lineno=1401, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=1402, col_offset=4)], List([Call(Name('Sig', Load(), lineno=1403, col_offset=8), [Str('y', lineno=1403, col_offset=12)], [keyword('nargs', Str('+', lineno=1403, col_offset=23))], None, None, lineno=1403, col_offset=8)], Load(), lineno=1402, col_offset=26), lineno=1402, col_offset=4), Assign([Name('failures', Store(), lineno=1405, col_offset=4)], List([], Load(), lineno=1405, col_offset=15), lineno=1405, col_offset=4), Assign([Name('successes', Store(), lineno=1406, col_offset=4)], List([Tuple([Str('@hello X', lineno=1407, col_offset=9), Call(Name('NS', Load(), lineno=1407, col_offset=21), [], [keyword('y', List([Str('hello', lineno=1407, col_offset=27), Str('world!', lineno=1407, col_offset=36), Str('X', lineno=1407, col_offset=46)], Load(), lineno=1407, col_offset=26))], None, None, lineno=1407, col_offset=21)], Load(), lineno=1407, col_offset=9)], Load(), lineno=1406, col_offset=16), lineno=1406, col_offset=4)], [], lineno=1380, col_offset=0), ClassDef('TestFileTypeRepr', [Name('TestCase', Load(), lineno=1415, col_offset=23)], [FunctionDef('test_r', arguments([Name('self', Param(), lineno=1417, col_offset=15)], None, None, []), [Assign([Name('type', Store(), lineno=1418, col_offset=8)], Call(Attribute(Name('argparse', Load(), lineno=1418, col_offset=15), 'FileType', Load(), lineno=1418, col_offset=15), [Str('r', lineno=1418, col_offset=33)], [], None, None, lineno=1418, col_offset=15), lineno=1418, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1419, col_offset=8), 'assertEqual', Load(), lineno=1419, col_offset=8), [Str("FileType('r')", lineno=1419, col_offset=25), Call(Name('repr', Load(), lineno=1419, col_offset=42), [Name('type', Load(), lineno=1419, col_offset=47)], [], None, None, lineno=1419, col_offset=42)], [], None, None, lineno=1419, col_offset=8), lineno=1419, col_offset=8)], [], lineno=1417, col_offset=4), FunctionDef('test_wb_1', arguments([Name('self', Param(), lineno=1421, col_offset=18)], None, None, []), [Assign([Name('type', Store(), lineno=1422, col_offset=8)], Call(Attribute(Name('argparse', Load(), lineno=1422, col_offset=15), 'FileType', Load(), lineno=1422, col_offset=15), [Str('wb', lineno=1422, col_offset=33), Num(1, lineno=1422, col_offset=39)], [], None, None, lineno=1422, col_offset=15), lineno=1422, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1423, col_offset=8), 'assertEqual', Load(), lineno=1423, col_offset=8), [Str("FileType('wb', 1)", lineno=1423, col_offset=25), Call(Name('repr', Load(), lineno=1423, col_offset=46), [Name('type', Load(), lineno=1423, col_offset=51)], [], None, None, lineno=1423, col_offset=46)], [], None, None, lineno=1423, col_offset=8), lineno=1423, col_offset=8)], [], lineno=1421, col_offset=4)], [], lineno=1415, col_offset=0), ClassDef('RFile', [Name('object', Load(), lineno=1426, col_offset=12)], [Assign([Name('seen', Store(), lineno=1427, col_offset=4)], Dict([], [], lineno=1427, col_offset=11), lineno=1427, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=1429, col_offset=17), Name('name', Param(), lineno=1429, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1430, col_offset=8), 'name', Store(), lineno=1430, col_offset=8)], Name('name', Load(), lineno=1430, col_offset=20), lineno=1430, col_offset=8)], [], lineno=1429, col_offset=4), Assign([Name('__hash__', Store(), lineno=1432, col_offset=4)], Name('None', Load(), lineno=1432, col_offset=15), lineno=1432, col_offset=4), FunctionDef('__eq__', arguments([Name('self', Param(), lineno=1434, col_offset=15), Name('other', Param(), lineno=1434, col_offset=21)], None, None, []), [If(Compare(Name('other', Load(), lineno=1435, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=1435, col_offset=20), 'seen', Load(), lineno=1435, col_offset=20)], lineno=1435, col_offset=11), [Assign([Name('text', Store(), lineno=1436, col_offset=12)], Subscript(Attribute(Name('self', Load(), lineno=1436, col_offset=19), 'seen', Load(), lineno=1436, col_offset=19), Index(Name('other', Load(), lineno=1436, col_offset=29)), Load(), lineno=1436, col_offset=19), lineno=1436, col_offset=12)], [Assign([Name('text', Store(), lineno=1438, col_offset=12), Subscript(Attribute(Name('self', Load(), lineno=1438, col_offset=19), 'seen', Load(), lineno=1438, col_offset=19), Index(Name('other', Load(), lineno=1438, col_offset=29)), Store(), lineno=1438, col_offset=19)], Call(Attribute(Name('other', Load(), lineno=1438, col_offset=38), 'read', Load(), lineno=1438, col_offset=38), [], [], None, None, lineno=1438, col_offset=38), lineno=1438, col_offset=12), Expr(Call(Attribute(Name('other', Load(), lineno=1439, col_offset=12), 'close', Load(), lineno=1439, col_offset=12), [], [], None, None, lineno=1439, col_offset=12), lineno=1439, col_offset=12)], lineno=1435, col_offset=8), If(UnaryOp(Not(), Call(Name('isinstance', Load(), lineno=1440, col_offset=15), [Name('text', Load(), lineno=1440, col_offset=26), Name('str', Load(), lineno=1440, col_offset=32)], [], None, None, lineno=1440, col_offset=15), lineno=1440, col_offset=11), [Assign([Name('text', Store(), lineno=1441, col_offset=12)], Call(Attribute(Name('text', Load(), lineno=1441, col_offset=19), 'decode', Load(), lineno=1441, col_offset=19), [Str('ascii', lineno=1441, col_offset=31)], [], None, None, lineno=1441, col_offset=19), lineno=1441, col_offset=12)], [], lineno=1440, col_offset=8), Return(Compare(Attribute(Name('self', Load(), lineno=1442, col_offset=15), 'name', Load(), lineno=1442, col_offset=15), [Eq(), Eq()], [Attribute(Name('other', Load(), lineno=1442, col_offset=28), 'name', Load(), lineno=1442, col_offset=28), Name('text', Load(), lineno=1442, col_offset=42)], lineno=1442, col_offset=15), lineno=1442, col_offset=8)], [], lineno=1434, col_offset=4)], [], lineno=1426, col_offset=0), ClassDef('TestFileTypeR', [Name('TempDirMixin', Load(), lineno=1445, col_offset=20), Name('ParserTestCase', Load(), lineno=1445, col_offset=34)], [Expr(Str('Test the FileType option/argument type for reading files', lineno=1446, col_offset=4), lineno=1446, col_offset=4), FunctionDef('setUp', arguments([Name('self', Param(), lineno=1448, col_offset=14)], None, None, []), [Expr(Call(Attribute(Call(Name('super', Load(), lineno=1449, col_offset=8), [Name('TestFileTypeR', Load(), lineno=1449, col_offset=14), Name('self', Load(), lineno=1449, col_offset=29)], [], None, None, lineno=1449, col_offset=8), 'setUp', Load(), lineno=1449, col_offset=8), [], [], None, None, lineno=1449, col_offset=8), lineno=1449, col_offset=8), For(Name('file_name', Store(), lineno=1450, col_offset=12), List([Str('foo', lineno=1450, col_offset=26), Str('bar', lineno=1450, col_offset=33)], Load(), lineno=1450, col_offset=25), [Assign([Name('file', Store(), lineno=1451, col_offset=12)], Call(Name('open', Load(), lineno=1451, col_offset=19), [Call(Attribute(Attribute(Name('os', Load(), lineno=1451, col_offset=24), 'path', Load(), lineno=1451, col_offset=24), 'join', Load(), lineno=1451, col_offset=24), [Attribute(Name('self', Load(), lineno=1451, col_offset=37), 'temp_dir', Load(), lineno=1451, col_offset=37), Name('file_name', Load(), lineno=1451, col_offset=52)], [], None, None, lineno=1451, col_offset=24), Str('w', lineno=1451, col_offset=64)], [], None, None, lineno=1451, col_offset=19), lineno=1451, col_offset=12), Expr(Call(Attribute(Name('file', Load(), lineno=1452, col_offset=12), 'write', Load(), lineno=1452, col_offset=12), [Name('file_name', Load(), lineno=1452, col_offset=23)], [], None, None, lineno=1452, col_offset=12), lineno=1452, col_offset=12), Expr(Call(Attribute(Name('file', Load(), lineno=1453, col_offset=12), 'close', Load(), lineno=1453, col_offset=12), [], [], None, None, lineno=1453, col_offset=12), lineno=1453, col_offset=12)], [], lineno=1450, col_offset=8)], [], lineno=1448, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=1455, col_offset=4)], List([Call(Name('Sig', Load(), lineno=1456, col_offset=8), [Str('-x', lineno=1456, col_offset=12)], [keyword('type', Call(Attribute(Name('argparse', Load(), lineno=1456, col_offset=23), 'FileType', Load(), lineno=1456, col_offset=23), [], [], None, None, lineno=1456, col_offset=23))], None, None, lineno=1456, col_offset=8), Call(Name('Sig', Load(), lineno=1457, col_offset=8), [Str('spam', lineno=1457, col_offset=12)], [keyword('type', Call(Attribute(Name('argparse', Load(), lineno=1457, col_offset=25), 'FileType', Load(), lineno=1457, col_offset=25), [Str('r', lineno=1457, col_offset=43)], [], None, None, lineno=1457, col_offset=25))], None, None, lineno=1457, col_offset=8)], Load(), lineno=1455, col_offset=26), lineno=1455, col_offset=4), Assign([Name('failures', Store(), lineno=1459, col_offset=4)], List([Str('-x', lineno=1459, col_offset=16), Str('-x bar', lineno=1459, col_offset=22)], Load(), lineno=1459, col_offset=15), lineno=1459, col_offset=4), Assign([Name('successes', Store(), lineno=1460, col_offset=4)], List([Tuple([Str('foo', lineno=1461, col_offset=9), Call(Name('NS', Load(), lineno=1461, col_offset=16), [], [keyword('x', Name('None', Load(), lineno=1461, col_offset=21)), keyword('spam', Call(Name('RFile', Load(), lineno=1461, col_offset=32), [Str('foo', lineno=1461, col_offset=38)], [], None, None, lineno=1461, col_offset=32))], None, None, lineno=1461, col_offset=16)], Load(), lineno=1461, col_offset=9), Tuple([Str('-x foo bar', lineno=1462, col_offset=9), Call(Name('NS', Load(), lineno=1462, col_offset=23), [], [keyword('x', Call(Name('RFile', Load(), lineno=1462, col_offset=28), [Str('foo', lineno=1462, col_offset=34)], [], None, None, lineno=1462, col_offset=28)), keyword('spam', Call(Name('RFile', Load(), lineno=1462, col_offset=47), [Str('bar', lineno=1462, col_offset=53)], [], None, None, lineno=1462, col_offset=47))], None, None, lineno=1462, col_offset=23)], Load(), lineno=1462, col_offset=9), Tuple([Str('bar -x foo', lineno=1463, col_offset=9), Call(Name('NS', Load(), lineno=1463, col_offset=23), [], [keyword('x', Call(Name('RFile', Load(), lineno=1463, col_offset=28), [Str('foo', lineno=1463, col_offset=34)], [], None, None, lineno=1463, col_offset=28)), keyword('spam', Call(Name('RFile', Load(), lineno=1463, col_offset=47), [Str('bar', lineno=1463, col_offset=53)], [], None, None, lineno=1463, col_offset=47))], None, None, lineno=1463, col_offset=23)], Load(), lineno=1463, col_offset=9), Tuple([Str('-x - -', lineno=1464, col_offset=9), Call(Name('NS', Load(), lineno=1464, col_offset=19), [], [keyword('x', Attribute(Name('sys', Load(), lineno=1464, col_offset=24), 'stdin', Load(), lineno=1464, col_offset=24)), keyword('spam', Attribute(Name('sys', Load(), lineno=1464, col_offset=40), 'stdin', Load(), lineno=1464, col_offset=40))], None, None, lineno=1464, col_offset=19)], Load(), lineno=1464, col_offset=9)], Load(), lineno=1460, col_offset=16), lineno=1460, col_offset=4)], [], lineno=1445, col_offset=0), ClassDef('TestFileTypeRB', [Name('TempDirMixin', Load(), lineno=1468, col_offset=21), Name('ParserTestCase', Load(), lineno=1468, col_offset=35)], [Expr(Str('Test the FileType option/argument type for reading files', lineno=1469, col_offset=4), lineno=1469, col_offset=4), FunctionDef('setUp', arguments([Name('self', Param(), lineno=1471, col_offset=14)], None, None, []), [Expr(Call(Attribute(Call(Name('super', Load(), lineno=1472, col_offset=8), [Name('TestFileTypeRB', Load(), lineno=1472, col_offset=14), Name('self', Load(), lineno=1472, col_offset=30)], [], None, None, lineno=1472, col_offset=8), 'setUp', Load(), lineno=1472, col_offset=8), [], [], None, None, lineno=1472, col_offset=8), lineno=1472, col_offset=8), For(Name('file_name', Store(), lineno=1473, col_offset=12), List([Str('foo', lineno=1473, col_offset=26), Str('bar', lineno=1473, col_offset=33)], Load(), lineno=1473, col_offset=25), [Assign([Name('file', Store(), lineno=1474, col_offset=12)], Call(Name('open', Load(), lineno=1474, col_offset=19), [Call(Attribute(Attribute(Name('os', Load(), lineno=1474, col_offset=24), 'path', Load(), lineno=1474, col_offset=24), 'join', Load(), lineno=1474, col_offset=24), [Attribute(Name('self', Load(), lineno=1474, col_offset=37), 'temp_dir', Load(), lineno=1474, col_offset=37), Name('file_name', Load(), lineno=1474, col_offset=52)], [], None, None, lineno=1474, col_offset=24), Str('w', lineno=1474, col_offset=64)], [], None, None, lineno=1474, col_offset=19), lineno=1474, col_offset=12), Expr(Call(Attribute(Name('file', Load(), lineno=1475, col_offset=12), 'write', Load(), lineno=1475, col_offset=12), [Name('file_name', Load(), lineno=1475, col_offset=23)], [], None, None, lineno=1475, col_offset=12), lineno=1475, col_offset=12), Expr(Call(Attribute(Name('file', Load(), lineno=1476, col_offset=12), 'close', Load(), lineno=1476, col_offset=12), [], [], None, None, lineno=1476, col_offset=12), lineno=1476, col_offset=12)], [], lineno=1473, col_offset=8)], [], lineno=1471, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=1478, col_offset=4)], List([Call(Name('Sig', Load(), lineno=1479, col_offset=8), [Str('-x', lineno=1479, col_offset=12)], [keyword('type', Call(Attribute(Name('argparse', Load(), lineno=1479, col_offset=23), 'FileType', Load(), lineno=1479, col_offset=23), [Str('rb', lineno=1479, col_offset=41)], [], None, None, lineno=1479, col_offset=23))], None, None, lineno=1479, col_offset=8), Call(Name('Sig', Load(), lineno=1480, col_offset=8), [Str('spam', lineno=1480, col_offset=12)], [keyword('type', Call(Attribute(Name('argparse', Load(), lineno=1480, col_offset=25), 'FileType', Load(), lineno=1480, col_offset=25), [Str('rb', lineno=1480, col_offset=43)], [], None, None, lineno=1480, col_offset=25))], None, None, lineno=1480, col_offset=8)], Load(), lineno=1478, col_offset=26), lineno=1478, col_offset=4), Assign([Name('failures', Store(), lineno=1482, col_offset=4)], List([Str('-x', lineno=1482, col_offset=16), Str('-x bar', lineno=1482, col_offset=22)], Load(), lineno=1482, col_offset=15), lineno=1482, col_offset=4), Assign([Name('successes', Store(), lineno=1483, col_offset=4)], List([Tuple([Str('foo', lineno=1484, col_offset=9), Call(Name('NS', Load(), lineno=1484, col_offset=16), [], [keyword('x', Name('None', Load(), lineno=1484, col_offset=21)), keyword('spam', Call(Name('RFile', Load(), lineno=1484, col_offset=32), [Str('foo', lineno=1484, col_offset=38)], [], None, None, lineno=1484, col_offset=32))], None, None, lineno=1484, col_offset=16)], Load(), lineno=1484, col_offset=9), Tuple([Str('-x foo bar', lineno=1485, col_offset=9), Call(Name('NS', Load(), lineno=1485, col_offset=23), [], [keyword('x', Call(Name('RFile', Load(), lineno=1485, col_offset=28), [Str('foo', lineno=1485, col_offset=34)], [], None, None, lineno=1485, col_offset=28)), keyword('spam', Call(Name('RFile', Load(), lineno=1485, col_offset=47), [Str('bar', lineno=1485, col_offset=53)], [], None, None, lineno=1485, col_offset=47))], None, None, lineno=1485, col_offset=23)], Load(), lineno=1485, col_offset=9), Tuple([Str('bar -x foo', lineno=1486, col_offset=9), Call(Name('NS', Load(), lineno=1486, col_offset=23), [], [keyword('x', Call(Name('RFile', Load(), lineno=1486, col_offset=28), [Str('foo', lineno=1486, col_offset=34)], [], None, None, lineno=1486, col_offset=28)), keyword('spam', Call(Name('RFile', Load(), lineno=1486, col_offset=47), [Str('bar', lineno=1486, col_offset=53)], [], None, None, lineno=1486, col_offset=47))], None, None, lineno=1486, col_offset=23)], Load(), lineno=1486, col_offset=9), Tuple([Str('-x - -', lineno=1487, col_offset=9), Call(Name('NS', Load(), lineno=1487, col_offset=19), [], [keyword('x', Attribute(Name('sys', Load(), lineno=1487, col_offset=24), 'stdin', Load(), lineno=1487, col_offset=24)), keyword('spam', Attribute(Name('sys', Load(), lineno=1487, col_offset=40), 'stdin', Load(), lineno=1487, col_offset=40))], None, None, lineno=1487, col_offset=19)], Load(), lineno=1487, col_offset=9)], Load(), lineno=1483, col_offset=16), lineno=1483, col_offset=4)], [], lineno=1468, col_offset=0), ClassDef('WFile', [Name('object', Load(), lineno=1491, col_offset=12)], [Assign([Name('seen', Store(), lineno=1492, col_offset=4)], Call(Name('set', Load(), lineno=1492, col_offset=11), [], [], None, None, lineno=1492, col_offset=11), lineno=1492, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=1494, col_offset=17), Name('name', Param(), lineno=1494, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1495, col_offset=8), 'name', Store(), lineno=1495, col_offset=8)], Name('name', Load(), lineno=1495, col_offset=20), lineno=1495, col_offset=8)], [], lineno=1494, col_offset=4), Assign([Name('__hash__', Store(), lineno=1497, col_offset=4)], Name('None', Load(), lineno=1497, col_offset=15), lineno=1497, col_offset=4), FunctionDef('__eq__', arguments([Name('self', Param(), lineno=1499, col_offset=15), Name('other', Param(), lineno=1499, col_offset=21)], None, None, []), [If(Compare(Name('other', Load(), lineno=1500, col_offset=11), [NotIn()], [Attribute(Name('self', Load(), lineno=1500, col_offset=24), 'seen', Load(), lineno=1500, col_offset=24)], lineno=1500, col_offset=11), [Assign([Name('text', Store(), lineno=1501, col_offset=12)], Str('Check that file is writable.', lineno=1501, col_offset=19), lineno=1501, col_offset=12), If(Compare(Str('b', lineno=1502, col_offset=15), [In()], [Attribute(Name('other', Load(), lineno=1502, col_offset=22), 'mode', Load(), lineno=1502, col_offset=22)], lineno=1502, col_offset=15), [Assign([Name('text', Store(), lineno=1503, col_offset=16)], Call(Attribute(Name('text', Load(), lineno=1503, col_offset=23), 'encode', Load(), lineno=1503, col_offset=23), [Str('ascii', lineno=1503, col_offset=35)], [], None, None, lineno=1503, col_offset=23), lineno=1503, col_offset=16)], [], lineno=1502, col_offset=12), Expr(Call(Attribute(Name('other', Load(), lineno=1504, col_offset=12), 'write', Load(), lineno=1504, col_offset=12), [Name('text', Load(), lineno=1504, col_offset=24)], [], None, None, lineno=1504, col_offset=12), lineno=1504, col_offset=12), Expr(Call(Attribute(Name('other', Load(), lineno=1505, col_offset=12), 'close', Load(), lineno=1505, col_offset=12), [], [], None, None, lineno=1505, col_offset=12), lineno=1505, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1506, col_offset=12), 'seen', Load(), lineno=1506, col_offset=12), 'add', Load(), lineno=1506, col_offset=12), [Name('other', Load(), lineno=1506, col_offset=26)], [], None, None, lineno=1506, col_offset=12), lineno=1506, col_offset=12)], [], lineno=1500, col_offset=8), Return(Compare(Attribute(Name('self', Load(), lineno=1507, col_offset=15), 'name', Load(), lineno=1507, col_offset=15), [Eq()], [Attribute(Name('other', Load(), lineno=1507, col_offset=28), 'name', Load(), lineno=1507, col_offset=28)], lineno=1507, col_offset=15), lineno=1507, col_offset=8)], [], lineno=1499, col_offset=4)], [], lineno=1491, col_offset=0), ClassDef('TestFileTypeW', [Name('TempDirMixin', Load(), lineno=1510, col_offset=20), Name('ParserTestCase', Load(), lineno=1510, col_offset=34)], [Expr(Str('Test the FileType option/argument type for writing files', lineno=1511, col_offset=4), lineno=1511, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=1513, col_offset=4)], List([Call(Name('Sig', Load(), lineno=1514, col_offset=8), [Str('-x', lineno=1514, col_offset=12)], [keyword('type', Call(Attribute(Name('argparse', Load(), lineno=1514, col_offset=23), 'FileType', Load(), lineno=1514, col_offset=23), [Str('w', lineno=1514, col_offset=41)], [], None, None, lineno=1514, col_offset=23))], None, None, lineno=1514, col_offset=8), Call(Name('Sig', Load(), lineno=1515, col_offset=8), [Str('spam', lineno=1515, col_offset=12)], [keyword('type', Call(Attribute(Name('argparse', Load(), lineno=1515, col_offset=25), 'FileType', Load(), lineno=1515, col_offset=25), [Str('w', lineno=1515, col_offset=43)], [], None, None, lineno=1515, col_offset=25))], None, None, lineno=1515, col_offset=8)], Load(), lineno=1513, col_offset=26), lineno=1513, col_offset=4), Assign([Name('failures', Store(), lineno=1517, col_offset=4)], List([Str('-x', lineno=1517, col_offset=16), Str('-x bar', lineno=1517, col_offset=22)], Load(), lineno=1517, col_offset=15), lineno=1517, col_offset=4), Assign([Name('successes', Store(), lineno=1518, col_offset=4)], List([Tuple([Str('foo', lineno=1519, col_offset=9), Call(Name('NS', Load(), lineno=1519, col_offset=16), [], [keyword('x', Name('None', Load(), lineno=1519, col_offset=21)), keyword('spam', Call(Name('WFile', Load(), lineno=1519, col_offset=32), [Str('foo', lineno=1519, col_offset=38)], [], None, None, lineno=1519, col_offset=32))], None, None, lineno=1519, col_offset=16)], Load(), lineno=1519, col_offset=9), Tuple([Str('-x foo bar', lineno=1520, col_offset=9), Call(Name('NS', Load(), lineno=1520, col_offset=23), [], [keyword('x', Call(Name('WFile', Load(), lineno=1520, col_offset=28), [Str('foo', lineno=1520, col_offset=34)], [], None, None, lineno=1520, col_offset=28)), keyword('spam', Call(Name('WFile', Load(), lineno=1520, col_offset=47), [Str('bar', lineno=1520, col_offset=53)], [], None, None, lineno=1520, col_offset=47))], None, None, lineno=1520, col_offset=23)], Load(), lineno=1520, col_offset=9), Tuple([Str('bar -x foo', lineno=1521, col_offset=9), Call(Name('NS', Load(), lineno=1521, col_offset=23), [], [keyword('x', Call(Name('WFile', Load(), lineno=1521, col_offset=28), [Str('foo', lineno=1521, col_offset=34)], [], None, None, lineno=1521, col_offset=28)), keyword('spam', Call(Name('WFile', Load(), lineno=1521, col_offset=47), [Str('bar', lineno=1521, col_offset=53)], [], None, None, lineno=1521, col_offset=47))], None, None, lineno=1521, col_offset=23)], Load(), lineno=1521, col_offset=9), Tuple([Str('-x - -', lineno=1522, col_offset=9), Call(Name('NS', Load(), lineno=1522, col_offset=19), [], [keyword('x', Attribute(Name('sys', Load(), lineno=1522, col_offset=24), 'stdout', Load(), lineno=1522, col_offset=24)), keyword('spam', Attribute(Name('sys', Load(), lineno=1522, col_offset=41), 'stdout', Load(), lineno=1522, col_offset=41))], None, None, lineno=1522, col_offset=19)], Load(), lineno=1522, col_offset=9)], Load(), lineno=1518, col_offset=16), lineno=1518, col_offset=4)], [], lineno=1510, col_offset=0), ClassDef('TestFileTypeWB', [Name('TempDirMixin', Load(), lineno=1526, col_offset=21), Name('ParserTestCase', Load(), lineno=1526, col_offset=35)], [Assign([Name('argument_signatures', Store(), lineno=1528, col_offset=4)], List([Call(Name('Sig', Load(), lineno=1529, col_offset=8), [Str('-x', lineno=1529, col_offset=12)], [keyword('type', Call(Attribute(Name('argparse', Load(), lineno=1529, col_offset=23), 'FileType', Load(), lineno=1529, col_offset=23), [Str('wb', lineno=1529, col_offset=41)], [], None, None, lineno=1529, col_offset=23))], None, None, lineno=1529, col_offset=8), Call(Name('Sig', Load(), lineno=1530, col_offset=8), [Str('spam', lineno=1530, col_offset=12)], [keyword('type', Call(Attribute(Name('argparse', Load(), lineno=1530, col_offset=25), 'FileType', Load(), lineno=1530, col_offset=25), [Str('wb', lineno=1530, col_offset=43)], [], None, None, lineno=1530, col_offset=25))], None, None, lineno=1530, col_offset=8)], Load(), lineno=1528, col_offset=26), lineno=1528, col_offset=4), Assign([Name('failures', Store(), lineno=1532, col_offset=4)], List([Str('-x', lineno=1532, col_offset=16), Str('-x bar', lineno=1532, col_offset=22)], Load(), lineno=1532, col_offset=15), lineno=1532, col_offset=4), Assign([Name('successes', Store(), lineno=1533, col_offset=4)], List([Tuple([Str('foo', lineno=1534, col_offset=9), Call(Name('NS', Load(), lineno=1534, col_offset=16), [], [keyword('x', Name('None', Load(), lineno=1534, col_offset=21)), keyword('spam', Call(Name('WFile', Load(), lineno=1534, col_offset=32), [Str('foo', lineno=1534, col_offset=38)], [], None, None, lineno=1534, col_offset=32))], None, None, lineno=1534, col_offset=16)], Load(), lineno=1534, col_offset=9), Tuple([Str('-x foo bar', lineno=1535, col_offset=9), Call(Name('NS', Load(), lineno=1535, col_offset=23), [], [keyword('x', Call(Name('WFile', Load(), lineno=1535, col_offset=28), [Str('foo', lineno=1535, col_offset=34)], [], None, None, lineno=1535, col_offset=28)), keyword('spam', Call(Name('WFile', Load(), lineno=1535, col_offset=47), [Str('bar', lineno=1535, col_offset=53)], [], None, None, lineno=1535, col_offset=47))], None, None, lineno=1535, col_offset=23)], Load(), lineno=1535, col_offset=9), Tuple([Str('bar -x foo', lineno=1536, col_offset=9), Call(Name('NS', Load(), lineno=1536, col_offset=23), [], [keyword('x', Call(Name('WFile', Load(), lineno=1536, col_offset=28), [Str('foo', lineno=1536, col_offset=34)], [], None, None, lineno=1536, col_offset=28)), keyword('spam', Call(Name('WFile', Load(), lineno=1536, col_offset=47), [Str('bar', lineno=1536, col_offset=53)], [], None, None, lineno=1536, col_offset=47))], None, None, lineno=1536, col_offset=23)], Load(), lineno=1536, col_offset=9), Tuple([Str('-x - -', lineno=1537, col_offset=9), Call(Name('NS', Load(), lineno=1537, col_offset=19), [], [keyword('x', Attribute(Name('sys', Load(), lineno=1537, col_offset=24), 'stdout', Load(), lineno=1537, col_offset=24)), keyword('spam', Attribute(Name('sys', Load(), lineno=1537, col_offset=41), 'stdout', Load(), lineno=1537, col_offset=41))], None, None, lineno=1537, col_offset=19)], Load(), lineno=1537, col_offset=9)], Load(), lineno=1533, col_offset=16), lineno=1533, col_offset=4)], [], lineno=1526, col_offset=0), ClassDef('TestTypeCallable', [Name('ParserTestCase', Load(), lineno=1541, col_offset=23)], [Expr(Str('Test some callables as option/argument types', lineno=1542, col_offset=4), lineno=1542, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=1544, col_offset=4)], List([Call(Name('Sig', Load(), lineno=1545, col_offset=8), [Str('--eggs', lineno=1545, col_offset=12)], [keyword('type', Name('complex', Load(), lineno=1545, col_offset=27))], None, None, lineno=1545, col_offset=8), Call(Name('Sig', Load(), lineno=1546, col_offset=8), [Str('spam', lineno=1546, col_offset=12)], [keyword('type', Name('float', Load(), lineno=1546, col_offset=25))], None, None, lineno=1546, col_offset=8)], Load(), lineno=1544, col_offset=26), lineno=1544, col_offset=4), Assign([Name('failures', Store(), lineno=1548, col_offset=4)], List([Str('a', lineno=1548, col_offset=16), Str('42j', lineno=1548, col_offset=21), Str('--eggs a', lineno=1548, col_offset=28), Str('--eggs 2i', lineno=1548, col_offset=40)], Load(), lineno=1548, col_offset=15), lineno=1548, col_offset=4), Assign([Name('successes', Store(), lineno=1549, col_offset=4)], List([Tuple([Str('--eggs=42 42', lineno=1550, col_offset=9), Call(Name('NS', Load(), lineno=1550, col_offset=25), [], [keyword('eggs', Num(42, lineno=1550, col_offset=33)), keyword('spam', Num(42.0, lineno=1550, col_offset=42))], None, None, lineno=1550, col_offset=25)], Load(), lineno=1550, col_offset=9), Tuple([Str('--eggs 2j -- -1.5', lineno=1551, col_offset=9), Call(Name('NS', Load(), lineno=1551, col_offset=30), [], [keyword('eggs', Num(2j, lineno=1551, col_offset=38)), keyword('spam', Num(-1.5, lineno=1551, col_offset=48))], None, None, lineno=1551, col_offset=30)], Load(), lineno=1551, col_offset=9), Tuple([Str('1024.675', lineno=1552, col_offset=9), Call(Name('NS', Load(), lineno=1552, col_offset=21), [], [keyword('eggs', Name('None', Load(), lineno=1552, col_offset=29)), keyword('spam', Num(1024.675, lineno=1552, col_offset=40))], None, None, lineno=1552, col_offset=21)], Load(), lineno=1552, col_offset=9)], Load(), lineno=1549, col_offset=16), lineno=1549, col_offset=4)], [], lineno=1541, col_offset=0), ClassDef('TestTypeUserDefined', [Name('ParserTestCase', Load(), lineno=1556, col_offset=26)], [Expr(Str('Test a user-defined option/argument type', lineno=1557, col_offset=4), lineno=1557, col_offset=4), ClassDef('MyType', [Name('TestCase', Load(), lineno=1559, col_offset=17)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=1561, col_offset=21), Name('value', Param(), lineno=1561, col_offset=27)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1562, col_offset=12), 'value', Store(), lineno=1562, col_offset=12)], Name('value', Load(), lineno=1562, col_offset=25), lineno=1562, col_offset=12)], [], lineno=1561, col_offset=8), Assign([Name('__hash__', Store(), lineno=1564, col_offset=8)], Name('None', Load(), lineno=1564, col_offset=19), lineno=1564, col_offset=8), FunctionDef('__eq__', arguments([Name('self', Param(), lineno=1566, col_offset=19), Name('other', Param(), lineno=1566, col_offset=25)], None, None, []), [Return(Compare(Tuple([Call(Name('type', Load(), lineno=1567, col_offset=20), [Name('self', Load(), lineno=1567, col_offset=25)], [], None, None, lineno=1567, col_offset=20), Attribute(Name('self', Load(), lineno=1567, col_offset=32), 'value', Load(), lineno=1567, col_offset=32)], Load(), lineno=1567, col_offset=20), [Eq()], [Tuple([Call(Name('type', Load(), lineno=1567, col_offset=48), [Name('other', Load(), lineno=1567, col_offset=53)], [], None, None, lineno=1567, col_offset=48), Attribute(Name('other', Load(), lineno=1567, col_offset=61), 'value', Load(), lineno=1567, col_offset=61)], Load(), lineno=1567, col_offset=48)], lineno=1567, col_offset=19), lineno=1567, col_offset=12)], [], lineno=1566, col_offset=8)], [], lineno=1559, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=1569, col_offset=4)], List([Call(Name('Sig', Load(), lineno=1570, col_offset=8), [Str('-x', lineno=1570, col_offset=12)], [keyword('type', Name('MyType', Load(), lineno=1570, col_offset=23))], None, None, lineno=1570, col_offset=8), Call(Name('Sig', Load(), lineno=1571, col_offset=8), [Str('spam', lineno=1571, col_offset=12)], [keyword('type', Name('MyType', Load(), lineno=1571, col_offset=25))], None, None, lineno=1571, col_offset=8)], Load(), lineno=1569, col_offset=26), lineno=1569, col_offset=4), Assign([Name('failures', Store(), lineno=1573, col_offset=4)], List([], Load(), lineno=1573, col_offset=15), lineno=1573, col_offset=4), Assign([Name('successes', Store(), lineno=1574, col_offset=4)], List([Tuple([Str('a -x b', lineno=1575, col_offset=9), Call(Name('NS', Load(), lineno=1575, col_offset=19), [], [keyword('x', Call(Name('MyType', Load(), lineno=1575, col_offset=24), [Str('b', lineno=1575, col_offset=31)], [], None, None, lineno=1575, col_offset=24)), keyword('spam', Call(Name('MyType', Load(), lineno=1575, col_offset=42), [Str('a', lineno=1575, col_offset=49)], [], None, None, lineno=1575, col_offset=42))], None, None, lineno=1575, col_offset=19)], Load(), lineno=1575, col_offset=9), Tuple([Str('-xf g', lineno=1576, col_offset=9), Call(Name('NS', Load(), lineno=1576, col_offset=18), [], [keyword('x', Call(Name('MyType', Load(), lineno=1576, col_offset=23), [Str('f', lineno=1576, col_offset=30)], [], None, None, lineno=1576, col_offset=23)), keyword('spam', Call(Name('MyType', Load(), lineno=1576, col_offset=41), [Str('g', lineno=1576, col_offset=48)], [], None, None, lineno=1576, col_offset=41))], None, None, lineno=1576, col_offset=18)], Load(), lineno=1576, col_offset=9)], Load(), lineno=1574, col_offset=16), lineno=1574, col_offset=4)], [], lineno=1556, col_offset=0), ClassDef('TestTypeClassicClass', [Name('ParserTestCase', Load(), lineno=1580, col_offset=27)], [Expr(Str('Test a classic class type', lineno=1581, col_offset=4), lineno=1581, col_offset=4), ClassDef('C', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=1585, col_offset=21), Name('value', Param(), lineno=1585, col_offset=27)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1586, col_offset=12), 'value', Store(), lineno=1586, col_offset=12)], Name('value', Load(), lineno=1586, col_offset=25), lineno=1586, col_offset=12)], [], lineno=1585, col_offset=8), Assign([Name('__hash__', Store(), lineno=1588, col_offset=8)], Name('None', Load(), lineno=1588, col_offset=19), lineno=1588, col_offset=8), FunctionDef('__eq__', arguments([Name('self', Param(), lineno=1590, col_offset=19), Name('other', Param(), lineno=1590, col_offset=25)], None, None, []), [Return(Compare(Tuple([Call(Name('type', Load(), lineno=1591, col_offset=20), [Name('self', Load(), lineno=1591, col_offset=25)], [], None, None, lineno=1591, col_offset=20), Attribute(Name('self', Load(), lineno=1591, col_offset=32), 'value', Load(), lineno=1591, col_offset=32)], Load(), lineno=1591, col_offset=20), [Eq()], [Tuple([Call(Name('type', Load(), lineno=1591, col_offset=48), [Name('other', Load(), lineno=1591, col_offset=53)], [], None, None, lineno=1591, col_offset=48), Attribute(Name('other', Load(), lineno=1591, col_offset=61), 'value', Load(), lineno=1591, col_offset=61)], Load(), lineno=1591, col_offset=48)], lineno=1591, col_offset=19), lineno=1591, col_offset=12)], [], lineno=1590, col_offset=8)], [], lineno=1583, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=1593, col_offset=4)], List([Call(Name('Sig', Load(), lineno=1594, col_offset=8), [Str('-x', lineno=1594, col_offset=12)], [keyword('type', Name('C', Load(), lineno=1594, col_offset=23))], None, None, lineno=1594, col_offset=8), Call(Name('Sig', Load(), lineno=1595, col_offset=8), [Str('spam', lineno=1595, col_offset=12)], [keyword('type', Name('C', Load(), lineno=1595, col_offset=25))], None, None, lineno=1595, col_offset=8)], Load(), lineno=1593, col_offset=26), lineno=1593, col_offset=4), Assign([Name('failures', Store(), lineno=1597, col_offset=4)], List([], Load(), lineno=1597, col_offset=15), lineno=1597, col_offset=4), Assign([Name('successes', Store(), lineno=1598, col_offset=4)], List([Tuple([Str('a -x b', lineno=1599, col_offset=9), Call(Name('NS', Load(), lineno=1599, col_offset=19), [], [keyword('x', Call(Name('C', Load(), lineno=1599, col_offset=24), [Str('b', lineno=1599, col_offset=26)], [], None, None, lineno=1599, col_offset=24)), keyword('spam', Call(Name('C', Load(), lineno=1599, col_offset=37), [Str('a', lineno=1599, col_offset=39)], [], None, None, lineno=1599, col_offset=37))], None, None, lineno=1599, col_offset=19)], Load(), lineno=1599, col_offset=9), Tuple([Str('-xf g', lineno=1600, col_offset=9), Call(Name('NS', Load(), lineno=1600, col_offset=18), [], [keyword('x', Call(Name('C', Load(), lineno=1600, col_offset=23), [Str('f', lineno=1600, col_offset=25)], [], None, None, lineno=1600, col_offset=23)), keyword('spam', Call(Name('C', Load(), lineno=1600, col_offset=36), [Str('g', lineno=1600, col_offset=38)], [], None, None, lineno=1600, col_offset=36))], None, None, lineno=1600, col_offset=18)], Load(), lineno=1600, col_offset=9)], Load(), lineno=1598, col_offset=16), lineno=1598, col_offset=4)], [], lineno=1580, col_offset=0), ClassDef('TestTypeRegistration', [Name('TestCase', Load(), lineno=1604, col_offset=27)], [Expr(Str('Test a user-defined type by registering it', lineno=1605, col_offset=4), lineno=1605, col_offset=4), FunctionDef('test', arguments([Name('self', Param(), lineno=1607, col_offset=13)], None, None, []), [FunctionDef('get_my_type', arguments([Name('string', Param(), lineno=1609, col_offset=24)], None, None, []), [Return(BinOp(Str('my_type{%s}', lineno=1610, col_offset=19), Mod(), Name('string', Load(), lineno=1610, col_offset=35), lineno=1610, col_offset=19), lineno=1610, col_offset=12)], [], lineno=1609, col_offset=8), Assign([Name('parser', Store(), lineno=1612, col_offset=8)], Call(Attribute(Name('argparse', Load(), lineno=1612, col_offset=17), 'ArgumentParser', Load(), lineno=1612, col_offset=17), [], [], None, None, lineno=1612, col_offset=17), lineno=1612, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=1613, col_offset=8), 'register', Load(), lineno=1613, col_offset=8), [Str('type', lineno=1613, col_offset=24), Str('my_type', lineno=1613, col_offset=32), Name('get_my_type', Load(), lineno=1613, col_offset=43)], [], None, None, lineno=1613, col_offset=8), lineno=1613, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=1614, col_offset=8), 'add_argument', Load(), lineno=1614, col_offset=8), [Str('-x', lineno=1614, col_offset=28)], [keyword('type', Str('my_type', lineno=1614, col_offset=39))], None, None, lineno=1614, col_offset=8), lineno=1614, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=1615, col_offset=8), 'add_argument', Load(), lineno=1615, col_offset=8), [Str('y', lineno=1615, col_offset=28)], [keyword('type', Str('my_type', lineno=1615, col_offset=38))], None, None, lineno=1615, col_offset=8), lineno=1615, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1617, col_offset=8), 'assertEqual', Load(), lineno=1617, col_offset=8), [Call(Attribute(Name('parser', Load(), lineno=1617, col_offset=25), 'parse_args', Load(), lineno=1617, col_offset=25), [Call(Attribute(Str('1', lineno=1617, col_offset=43), 'split', Load(), lineno=1617, col_offset=43), [], [], None, None, lineno=1617, col_offset=43)], [], None, None, lineno=1617, col_offset=25), Call(Name('NS', Load(), lineno=1618, col_offset=25), [], [keyword('x', Name('None', Load(), lineno=1618, col_offset=30)), keyword('y', Str('my_type{1}', lineno=1618, col_offset=38))], None, None, lineno=1618, col_offset=25)], [], None, None, lineno=1617, col_offset=8), lineno=1617, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1619, col_offset=8), 'assertEqual', Load(), lineno=1619, col_offset=8), [Call(Attribute(Name('parser', Load(), lineno=1619, col_offset=25), 'parse_args', Load(), lineno=1619, col_offset=25), [Call(Attribute(Str('-x 1 42', lineno=1619, col_offset=43), 'split', Load(), lineno=1619, col_offset=43), [], [], None, None, lineno=1619, col_offset=43)], [], None, None, lineno=1619, col_offset=25), Call(Name('NS', Load(), lineno=1620, col_offset=25), [], [keyword('x', Str('my_type{1}', lineno=1620, col_offset=30)), keyword('y', Str('my_type{42}', lineno=1620, col_offset=46))], None, None, lineno=1620, col_offset=25)], [], None, None, lineno=1619, col_offset=8), lineno=1619, col_offset=8)], [], lineno=1607, col_offset=4)], [], lineno=1604, col_offset=0), ClassDef('TestActionUserDefined', [Name('ParserTestCase', Load(), lineno=1627, col_offset=28)], [Expr(Str('Test a user-defined option/argument action', lineno=1628, col_offset=4), lineno=1628, col_offset=4), ClassDef('OptionalAction', [Attribute(Name('argparse', Load(), lineno=1630, col_offset=25), 'Action', Load(), lineno=1630, col_offset=25)], [FunctionDef('__call__', arguments([Name('self', Param(), lineno=1632, col_offset=21), Name('parser', Param(), lineno=1632, col_offset=27), Name('namespace', Param(), lineno=1632, col_offset=35), Name('value', Param(), lineno=1632, col_offset=46), Name('option_string', Param(), lineno=1632, col_offset=53)], None, None, [Name('None', Load(), lineno=1632, col_offset=67)]), [TryExcept([Assert(Compare(Attribute(Name('self', Load(), lineno=1635, col_offset=23), 'dest', Load(), lineno=1635, col_offset=23), [Eq()], [Str('spam', lineno=1635, col_offset=36)], lineno=1635, col_offset=23), BinOp(Str('dest: %s', lineno=1635, col_offset=44), Mod(), Attribute(Name('self', Load(), lineno=1635, col_offset=57), 'dest', Load(), lineno=1635, col_offset=57), lineno=1635, col_offset=44), lineno=1635, col_offset=16), Assert(Compare(Name('option_string', Load(), lineno=1636, col_offset=23), [Eq()], [Str('-s', lineno=1636, col_offset=40)], lineno=1636, col_offset=23), BinOp(Str('flag: %s', lineno=1636, col_offset=46), Mod(), Name('option_string', Load(), lineno=1636, col_offset=59), lineno=1636, col_offset=46), lineno=1636, col_offset=16), Assign([Name('expected_ns', Store(), lineno=1639, col_offset=16)], Call(Name('NS', Load(), lineno=1639, col_offset=30), [], [keyword('spam', Num(0.25, lineno=1639, col_offset=38))], None, None, lineno=1639, col_offset=30), lineno=1639, col_offset=16), If(Compare(Name('value', Load(), lineno=1640, col_offset=19), [In()], [List([Num(0.125, lineno=1640, col_offset=29), Num(0.625, lineno=1640, col_offset=36)], Load(), lineno=1640, col_offset=28)], lineno=1640, col_offset=19), [Assign([Attribute(Name('expected_ns', Load(), lineno=1641, col_offset=20), 'badger', Store(), lineno=1641, col_offset=20)], Num(2, lineno=1641, col_offset=41), lineno=1641, col_offset=20)], [If(Compare(Name('value', Load(), lineno=1642, col_offset=21), [In()], [List([Num(2.0, lineno=1642, col_offset=31)], Load(), lineno=1642, col_offset=30)], lineno=1642, col_offset=21), [Assign([Attribute(Name('expected_ns', Load(), lineno=1643, col_offset=20), 'badger', Store(), lineno=1643, col_offset=20)], Num(84, lineno=1643, col_offset=41), lineno=1643, col_offset=20)], [Raise(Call(Name('AssertionError', Load(), lineno=1645, col_offset=26), [BinOp(Str('value: %s', lineno=1645, col_offset=41), Mod(), Name('value', Load(), lineno=1645, col_offset=55), lineno=1645, col_offset=41)], [], None, None, lineno=1645, col_offset=26), None, None, lineno=1645, col_offset=20)], lineno=1642, col_offset=21)], lineno=1640, col_offset=16), Assert(Compare(Name('expected_ns', Load(), lineno=1646, col_offset=23), [Eq()], [Name('namespace', Load(), lineno=1646, col_offset=38)], lineno=1646, col_offset=23), BinOp(Str('expected %s, got %s', lineno=1646, col_offset=50), Mod(), Tuple([Name('expected_ns', Load(), lineno=1647, col_offset=51), Name('namespace', Load(), lineno=1647, col_offset=64)], Load(), lineno=1647, col_offset=51), lineno=1646, col_offset=50), lineno=1646, col_offset=16)], [ExceptHandler(Name('AssertionError', Load(), lineno=1648, col_offset=19), None, [Assign([Name('e', Store(), lineno=1649, col_offset=16)], Subscript(Call(Attribute(Name('sys', Load(), lineno=1649, col_offset=20), 'exc_info', Load(), lineno=1649, col_offset=20), [], [], None, None, lineno=1649, col_offset=20), Index(Num(1, lineno=1649, col_offset=35)), Load(), lineno=1649, col_offset=20), lineno=1649, col_offset=16), Raise(Call(Name('ArgumentParserError', Load(), lineno=1650, col_offset=22), [BinOp(Str('opt_action failed: %s', lineno=1650, col_offset=42), Mod(), Name('e', Load(), lineno=1650, col_offset=68), lineno=1650, col_offset=42)], [], None, None, lineno=1650, col_offset=22), None, None, lineno=1650, col_offset=16)], lineno=1648, col_offset=12)], [], lineno=1633, col_offset=12), Expr(Call(Name('setattr', Load(), lineno=1651, col_offset=12), [Name('namespace', Load(), lineno=1651, col_offset=20), Str('spam', lineno=1651, col_offset=31), Name('value', Load(), lineno=1651, col_offset=39)], [], None, None, lineno=1651, col_offset=12), lineno=1651, col_offset=12)], [], lineno=1632, col_offset=8)], [], lineno=1630, col_offset=4), ClassDef('PositionalAction', [Attribute(Name('argparse', Load(), lineno=1653, col_offset=27), 'Action', Load(), lineno=1653, col_offset=27)], [FunctionDef('__call__', arguments([Name('self', Param(), lineno=1655, col_offset=21), Name('parser', Param(), lineno=1655, col_offset=27), Name('namespace', Param(), lineno=1655, col_offset=35), Name('value', Param(), lineno=1655, col_offset=46), Name('option_string', Param(), lineno=1655, col_offset=53)], None, None, [Name('None', Load(), lineno=1655, col_offset=67)]), [TryExcept([Assert(Compare(Name('option_string', Load(), lineno=1657, col_offset=23), [Is()], [Name('None', Load(), lineno=1657, col_offset=40)], lineno=1657, col_offset=23), BinOp(Str('option_string: %s', lineno=1657, col_offset=47), Mod(), Name('option_string', Load(), lineno=1658, col_offset=47), lineno=1657, col_offset=47), lineno=1657, col_offset=16), Assert(Compare(Attribute(Name('self', Load(), lineno=1660, col_offset=23), 'dest', Load(), lineno=1660, col_offset=23), [Eq()], [Str('badger', lineno=1660, col_offset=36)], lineno=1660, col_offset=23), BinOp(Str('dest: %s', lineno=1660, col_offset=46), Mod(), Attribute(Name('self', Load(), lineno=1660, col_offset=59), 'dest', Load(), lineno=1660, col_offset=59), lineno=1660, col_offset=46), lineno=1660, col_offset=16), Assign([Name('expected_ns', Store(), lineno=1663, col_offset=16)], Call(Name('NS', Load(), lineno=1663, col_offset=30), [], [keyword('badger', Num(2, lineno=1663, col_offset=40))], None, None, lineno=1663, col_offset=30), lineno=1663, col_offset=16), If(Compare(Name('value', Load(), lineno=1664, col_offset=19), [In()], [List([Num(42, lineno=1664, col_offset=29), Num(84, lineno=1664, col_offset=33)], Load(), lineno=1664, col_offset=28)], lineno=1664, col_offset=19), [Assign([Attribute(Name('expected_ns', Load(), lineno=1665, col_offset=20), 'spam', Store(), lineno=1665, col_offset=20)], Num(0.25, lineno=1665, col_offset=39), lineno=1665, col_offset=20)], [If(Compare(Name('value', Load(), lineno=1666, col_offset=21), [In()], [List([Num(1, lineno=1666, col_offset=31)], Load(), lineno=1666, col_offset=30)], lineno=1666, col_offset=21), [Assign([Attribute(Name('expected_ns', Load(), lineno=1667, col_offset=20), 'spam', Store(), lineno=1667, col_offset=20)], Num(0.625, lineno=1667, col_offset=39), lineno=1667, col_offset=20)], [If(Compare(Name('value', Load(), lineno=1668, col_offset=21), [In()], [List([Num(2, lineno=1668, col_offset=31)], Load(), lineno=1668, col_offset=30)], lineno=1668, col_offset=21), [Assign([Attribute(Name('expected_ns', Load(), lineno=1669, col_offset=20), 'spam', Store(), lineno=1669, col_offset=20)], Num(0.125, lineno=1669, col_offset=39), lineno=1669, col_offset=20)], [Raise(Call(Name('AssertionError', Load(), lineno=1671, col_offset=26), [BinOp(Str('value: %s', lineno=1671, col_offset=41), Mod(), Name('value', Load(), lineno=1671, col_offset=55), lineno=1671, col_offset=41)], [], None, None, lineno=1671, col_offset=26), None, None, lineno=1671, col_offset=20)], lineno=1668, col_offset=21)], lineno=1666, col_offset=21)], lineno=1664, col_offset=16), Assert(Compare(Name('expected_ns', Load(), lineno=1672, col_offset=23), [Eq()], [Name('namespace', Load(), lineno=1672, col_offset=38)], lineno=1672, col_offset=23), BinOp(Str('expected %s, got %s', lineno=1672, col_offset=50), Mod(), Tuple([Name('expected_ns', Load(), lineno=1673, col_offset=51), Name('namespace', Load(), lineno=1673, col_offset=64)], Load(), lineno=1673, col_offset=51), lineno=1672, col_offset=50), lineno=1672, col_offset=16)], [ExceptHandler(Name('AssertionError', Load(), lineno=1674, col_offset=19), None, [Assign([Name('e', Store(), lineno=1675, col_offset=16)], Subscript(Call(Attribute(Name('sys', Load(), lineno=1675, col_offset=20), 'exc_info', Load(), lineno=1675, col_offset=20), [], [], None, None, lineno=1675, col_offset=20), Index(Num(1, lineno=1675, col_offset=35)), Load(), lineno=1675, col_offset=20), lineno=1675, col_offset=16), Raise(Call(Name('ArgumentParserError', Load(), lineno=1676, col_offset=22), [BinOp(Str('arg_action failed: %s', lineno=1676, col_offset=42), Mod(), Name('e', Load(), lineno=1676, col_offset=68), lineno=1676, col_offset=42)], [], None, None, lineno=1676, col_offset=22), None, None, lineno=1676, col_offset=16)], lineno=1674, col_offset=12)], [], lineno=1656, col_offset=12), Expr(Call(Name('setattr', Load(), lineno=1677, col_offset=12), [Name('namespace', Load(), lineno=1677, col_offset=20), Str('badger', lineno=1677, col_offset=31), Name('value', Load(), lineno=1677, col_offset=41)], [], None, None, lineno=1677, col_offset=12), lineno=1677, col_offset=12)], [], lineno=1655, col_offset=8)], [], lineno=1653, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=1679, col_offset=4)], List([Call(Name('Sig', Load(), lineno=1680, col_offset=8), [Str('-s', lineno=1680, col_offset=12)], [keyword('dest', Str('spam', lineno=1680, col_offset=23)), keyword('action', Name('OptionalAction', Load(), lineno=1680, col_offset=38)), keyword('type', Name('float', Load(), lineno=1681, col_offset=17)), keyword('default', Num(0.25, lineno=1681, col_offset=32))], None, None, lineno=1680, col_offset=8), Call(Name('Sig', Load(), lineno=1682, col_offset=8), [Str('badger', lineno=1682, col_offset=12)], [keyword('action', Name('PositionalAction', Load(), lineno=1682, col_offset=29)), keyword('type', Name('int', Load(), lineno=1683, col_offset=17)), keyword('nargs', Str('?', lineno=1683, col_offset=28)), keyword('default', Num(2, lineno=1683, col_offset=41))], None, None, lineno=1682, col_offset=8)], Load(), lineno=1679, col_offset=26), lineno=1679, col_offset=4), Assign([Name('failures', Store(), lineno=1685, col_offset=4)], List([], Load(), lineno=1685, col_offset=15), lineno=1685, col_offset=4), Assign([Name('successes', Store(), lineno=1686, col_offset=4)], List([Tuple([Str('-s0.125', lineno=1687, col_offset=9), Call(Name('NS', Load(), lineno=1687, col_offset=20), [], [keyword('spam', Num(0.125, lineno=1687, col_offset=28)), keyword('badger', Num(2, lineno=1687, col_offset=42))], None, None, lineno=1687, col_offset=20)], Load(), lineno=1687, col_offset=9), Tuple([Str('42', lineno=1688, col_offset=9), Call(Name('NS', Load(), lineno=1688, col_offset=15), [], [keyword('spam', Num(0.25, lineno=1688, col_offset=23)), keyword('badger', Num(42, lineno=1688, col_offset=36))], None, None, lineno=1688, col_offset=15)], Load(), lineno=1688, col_offset=9), Tuple([Str('-s 0.625 1', lineno=1689, col_offset=9), Call(Name('NS', Load(), lineno=1689, col_offset=23), [], [keyword('spam', Num(0.625, lineno=1689, col_offset=31)), keyword('badger', Num(1, lineno=1689, col_offset=45))], None, None, lineno=1689, col_offset=23)], Load(), lineno=1689, col_offset=9), Tuple([Str('84 -s2', lineno=1690, col_offset=9), Call(Name('NS', Load(), lineno=1690, col_offset=19), [], [keyword('spam', Num(2.0, lineno=1690, col_offset=27)), keyword('badger', Num(84, lineno=1690, col_offset=39))], None, None, lineno=1690, col_offset=19)], Load(), lineno=1690, col_offset=9)], Load(), lineno=1686, col_offset=16), lineno=1686, col_offset=4)], [], lineno=1627, col_offset=0), ClassDef('TestActionRegistration', [Name('TestCase', Load(), lineno=1694, col_offset=29)], [Expr(Str('Test a user-defined action supplied by registering it', lineno=1695, col_offset=4), lineno=1695, col_offset=4), ClassDef('MyAction', [Attribute(Name('argparse', Load(), lineno=1697, col_offset=19), 'Action', Load(), lineno=1697, col_offset=19)], [FunctionDef('__call__', arguments([Name('self', Param(), lineno=1699, col_offset=21), Name('parser', Param(), lineno=1699, col_offset=27), Name('namespace', Param(), lineno=1699, col_offset=35), Name('values', Param(), lineno=1699, col_offset=46), Name('option_string', Param(), lineno=1699, col_offset=54)], None, None, [Name('None', Load(), lineno=1699, col_offset=68)]), [Expr(Call(Name('setattr', Load(), lineno=1700, col_offset=12), [Name('namespace', Load(), lineno=1700, col_offset=20), Attribute(Name('self', Load(), lineno=1700, col_offset=31), 'dest', Load(), lineno=1700, col_offset=31), BinOp(Str('foo[%s]', lineno=1700, col_offset=42), Mod(), Name('values', Load(), lineno=1700, col_offset=54), lineno=1700, col_offset=42)], [], None, None, lineno=1700, col_offset=12), lineno=1700, col_offset=12)], [], lineno=1699, col_offset=8)], [], lineno=1697, col_offset=4), FunctionDef('test', arguments([Name('self', Param(), lineno=1702, col_offset=13)], None, None, []), [Assign([Name('parser', Store(), lineno=1704, col_offset=8)], Call(Attribute(Name('argparse', Load(), lineno=1704, col_offset=17), 'ArgumentParser', Load(), lineno=1704, col_offset=17), [], [], None, None, lineno=1704, col_offset=17), lineno=1704, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=1705, col_offset=8), 'register', Load(), lineno=1705, col_offset=8), [Str('action', lineno=1705, col_offset=24), Str('my_action', lineno=1705, col_offset=34), Attribute(Name('self', Load(), lineno=1705, col_offset=47), 'MyAction', Load(), lineno=1705, col_offset=47)], [], None, None, lineno=1705, col_offset=8), lineno=1705, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=1706, col_offset=8), 'add_argument', Load(), lineno=1706, col_offset=8), [Str('badger', lineno=1706, col_offset=28)], [keyword('action', Str('my_action', lineno=1706, col_offset=45))], None, None, lineno=1706, col_offset=8), lineno=1706, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1708, col_offset=8), 'assertEqual', Load(), lineno=1708, col_offset=8), [Call(Attribute(Name('parser', Load(), lineno=1708, col_offset=25), 'parse_args', Load(), lineno=1708, col_offset=25), [List([Str('1', lineno=1708, col_offset=44)], Load(), lineno=1708, col_offset=43)], [], None, None, lineno=1708, col_offset=25), Call(Name('NS', Load(), lineno=1708, col_offset=51), [], [keyword('badger', Str('foo[1]', lineno=1708, col_offset=61))], None, None, lineno=1708, col_offset=51)], [], None, None, lineno=1708, col_offset=8), lineno=1708, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1709, col_offset=8), 'assertEqual', Load(), lineno=1709, col_offset=8), [Call(Attribute(Name('parser', Load(), lineno=1709, col_offset=25), 'parse_args', Load(), lineno=1709, col_offset=25), [List([Str('42', lineno=1709, col_offset=44)], Load(), lineno=1709, col_offset=43)], [], None, None, lineno=1709, col_offset=25), Call(Name('NS', Load(), lineno=1709, col_offset=52), [], [keyword('badger', Str('foo[42]', lineno=1709, col_offset=62))], None, None, lineno=1709, col_offset=52)], [], None, None, lineno=1709, col_offset=8), lineno=1709, col_offset=8)], [], lineno=1702, col_offset=4)], [], lineno=1694, col_offset=0), ClassDef('TestAddSubparsers', [Name('TestCase', Load(), lineno=1716, col_offset=24)], [Expr(Str('Test the add_subparsers method', lineno=1717, col_offset=4), lineno=1717, col_offset=4), FunctionDef('assertArgumentParserError', arguments([Name('self', Param(), lineno=1719, col_offset=34)], 'args', 'kwargs', []), [Expr(Call(Attribute(Name('self', Load(), lineno=1720, col_offset=8), 'assertRaises', Load(), lineno=1720, col_offset=8), [Name('ArgumentParserError', Load(), lineno=1720, col_offset=26)], [], Name('args', Load(), lineno=1720, col_offset=48), Name('kwargs', Load(), lineno=1720, col_offset=56), lineno=1720, col_offset=8), lineno=1720, col_offset=8)], [], lineno=1719, col_offset=4), FunctionDef('_get_parser', arguments([Name('self', Param(), lineno=1722, col_offset=20), Name('subparser_help', Param(), lineno=1722, col_offset=26), Name('prefix_chars', Param(), lineno=1722, col_offset=48)], None, None, [Name('False', Load(), lineno=1722, col_offset=41), Name('None', Load(), lineno=1722, col_offset=61)]), [If(Name('prefix_chars', Load(), lineno=1724, col_offset=11), [Assign([Name('parser', Store(), lineno=1725, col_offset=12)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=1725, col_offset=21), [], [keyword('prog', Str('PROG', lineno=1726, col_offset=21)), keyword('description', Str('main description', lineno=1726, col_offset=41)), keyword('prefix_chars', Name('prefix_chars', Load(), lineno=1726, col_offset=74))], None, None, lineno=1725, col_offset=21), lineno=1725, col_offset=12), Expr(Call(Attribute(Name('parser', Load(), lineno=1727, col_offset=12), 'add_argument', Load(), lineno=1727, col_offset=12), [BinOp(BinOp(Subscript(Name('prefix_chars', Load(), lineno=1728, col_offset=16), Index(Num(0, lineno=1728, col_offset=29)), Load(), lineno=1728, col_offset=16), Mult(), Num(2, lineno=1728, col_offset=34), lineno=1728, col_offset=16), Add(), Str('foo', lineno=1728, col_offset=38), lineno=1728, col_offset=16)], [keyword('action', Str('store_true', lineno=1728, col_offset=52)), keyword('help', Str('foo help', lineno=1728, col_offset=71))], None, None, lineno=1727, col_offset=12), lineno=1727, col_offset=12)], [Assign([Name('parser', Store(), lineno=1730, col_offset=12)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=1730, col_offset=21), [], [keyword('prog', Str('PROG', lineno=1731, col_offset=21)), keyword('description', Str('main description', lineno=1731, col_offset=41))], None, None, lineno=1730, col_offset=21), lineno=1730, col_offset=12), Expr(Call(Attribute(Name('parser', Load(), lineno=1732, col_offset=12), 'add_argument', Load(), lineno=1732, col_offset=12), [Str('--foo', lineno=1733, col_offset=16)], [keyword('action', Str('store_true', lineno=1733, col_offset=32)), keyword('help', Str('foo help', lineno=1733, col_offset=51))], None, None, lineno=1732, col_offset=12), lineno=1732, col_offset=12)], lineno=1724, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=1734, col_offset=8), 'add_argument', Load(), lineno=1734, col_offset=8), [Str('bar', lineno=1735, col_offset=12)], [keyword('type', Name('float', Load(), lineno=1735, col_offset=24)), keyword('help', Str('bar help', lineno=1735, col_offset=36))], None, None, lineno=1734, col_offset=8), lineno=1734, col_offset=8), Assign([Name('subparsers', Store(), lineno=1738, col_offset=8)], Call(Attribute(Name('parser', Load(), lineno=1738, col_offset=21), 'add_subparsers', Load(), lineno=1738, col_offset=21), [], [keyword('help', Str('command help', lineno=1738, col_offset=48))], None, None, lineno=1738, col_offset=21), lineno=1738, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1739, col_offset=8), 'assertArgumentParserError', Load(), lineno=1739, col_offset=8), [Attribute(Name('parser', Load(), lineno=1739, col_offset=39), 'add_subparsers', Load(), lineno=1739, col_offset=39)], [], None, None, lineno=1739, col_offset=8), lineno=1739, col_offset=8), Assign([Name('parser1_kwargs', Store(), lineno=1742, col_offset=8)], Call(Name('dict', Load(), lineno=1742, col_offset=25), [], [keyword('description', Str('1 description', lineno=1742, col_offset=42))], None, None, lineno=1742, col_offset=25), lineno=1742, col_offset=8), If(Name('subparser_help', Load(), lineno=1743, col_offset=11), [Assign([Subscript(Name('parser1_kwargs', Load(), lineno=1744, col_offset=12), Index(Str('help', lineno=1744, col_offset=27)), Store(), lineno=1744, col_offset=12)], Str('1 help', lineno=1744, col_offset=37), lineno=1744, col_offset=12)], [], lineno=1743, col_offset=8), Assign([Name('parser1', Store(), lineno=1745, col_offset=8)], Call(Attribute(Name('subparsers', Load(), lineno=1745, col_offset=18), 'add_parser', Load(), lineno=1745, col_offset=18), [Str('1', lineno=1745, col_offset=40)], [], None, Name('parser1_kwargs', Load(), lineno=1745, col_offset=47), lineno=1745, col_offset=18), lineno=1745, col_offset=8), Expr(Call(Attribute(Name('parser1', Load(), lineno=1746, col_offset=8), 'add_argument', Load(), lineno=1746, col_offset=8), [Str('-w', lineno=1746, col_offset=29)], [keyword('type', Name('int', Load(), lineno=1746, col_offset=40)), keyword('help', Str('w help', lineno=1746, col_offset=50))], None, None, lineno=1746, col_offset=8), lineno=1746, col_offset=8), Expr(Call(Attribute(Name('parser1', Load(), lineno=1747, col_offset=8), 'add_argument', Load(), lineno=1747, col_offset=8), [Str('x', lineno=1747, col_offset=29)], [keyword('choices', Str('abc', lineno=1747, col_offset=42)), keyword('help', Str('x help', lineno=1747, col_offset=54))], None, None, lineno=1747, col_offset=8), lineno=1747, col_offset=8), Assign([Name('parser2_kwargs', Store(), lineno=1750, col_offset=8)], Call(Name('dict', Load(), lineno=1750, col_offset=25), [], [keyword('description', Str('2 description', lineno=1750, col_offset=42))], None, None, lineno=1750, col_offset=25), lineno=1750, col_offset=8), If(Name('subparser_help', Load(), lineno=1751, col_offset=11), [Assign([Subscript(Name('parser2_kwargs', Load(), lineno=1752, col_offset=12), Index(Str('help', lineno=1752, col_offset=27)), Store(), lineno=1752, col_offset=12)], Str('2 help', lineno=1752, col_offset=37), lineno=1752, col_offset=12)], [], lineno=1751, col_offset=8), Assign([Name('parser2', Store(), lineno=1753, col_offset=8)], Call(Attribute(Name('subparsers', Load(), lineno=1753, col_offset=18), 'add_parser', Load(), lineno=1753, col_offset=18), [Str('2', lineno=1753, col_offset=40)], [], None, Name('parser2_kwargs', Load(), lineno=1753, col_offset=47), lineno=1753, col_offset=18), lineno=1753, col_offset=8), Expr(Call(Attribute(Name('parser2', Load(), lineno=1754, col_offset=8), 'add_argument', Load(), lineno=1754, col_offset=8), [Str('-y', lineno=1754, col_offset=29)], [keyword('choices', Str('123', lineno=1754, col_offset=43)), keyword('help', Str('y help', lineno=1754, col_offset=55))], None, None, lineno=1754, col_offset=8), lineno=1754, col_offset=8), Expr(Call(Attribute(Name('parser2', Load(), lineno=1755, col_offset=8), 'add_argument', Load(), lineno=1755, col_offset=8), [Str('z', lineno=1755, col_offset=29)], [keyword('type', Name('complex', Load(), lineno=1755, col_offset=39)), keyword('nargs', Str('*', lineno=1755, col_offset=54)), keyword('help', Str('z help', lineno=1755, col_offset=64))], None, None, lineno=1755, col_offset=8), lineno=1755, col_offset=8), Return(Name('parser', Load(), lineno=1758, col_offset=15), lineno=1758, col_offset=8)], [], lineno=1722, col_offset=4), FunctionDef('setUp', arguments([Name('self', Param(), lineno=1760, col_offset=14)], None, None, []), [Expr(Call(Attribute(Call(Name('super', Load(), lineno=1761, col_offset=8), [Name('TestAddSubparsers', Load(), lineno=1761, col_offset=14), Name('self', Load(), lineno=1761, col_offset=33)], [], None, None, lineno=1761, col_offset=8), 'setUp', Load(), lineno=1761, col_offset=8), [], [], None, None, lineno=1761, col_offset=8), lineno=1761, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1762, col_offset=8), 'parser', Store(), lineno=1762, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1762, col_offset=22), '_get_parser', Load(), lineno=1762, col_offset=22), [], [], None, None, lineno=1762, col_offset=22), lineno=1762, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1763, col_offset=8), 'command_help_parser', Store(), lineno=1763, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1763, col_offset=35), '_get_parser', Load(), lineno=1763, col_offset=35), [], [keyword('subparser_help', Name('True', Load(), lineno=1763, col_offset=67))], None, None, lineno=1763, col_offset=35), lineno=1763, col_offset=8)], [], lineno=1760, col_offset=4), FunctionDef('test_parse_args_failures', arguments([Name('self', Param(), lineno=1765, col_offset=33)], None, None, []), [For(Name('args_str', Store(), lineno=1767, col_offset=12), List([Str('', lineno=1767, col_offset=25), Str('a', lineno=1767, col_offset=29), Str('a a', lineno=1767, col_offset=34), Str('0.5 a', lineno=1767, col_offset=41), Str('0.5 1', lineno=1767, col_offset=50), Str('0.5 1 -y', lineno=1768, col_offset=25), Str('0.5 2 -w', lineno=1768, col_offset=37)], Load(), lineno=1767, col_offset=24), [Assign([Name('args', Store(), lineno=1769, col_offset=12)], Call(Attribute(Name('args_str', Load(), lineno=1769, col_offset=19), 'split', Load(), lineno=1769, col_offset=19), [], [], None, None, lineno=1769, col_offset=19), lineno=1769, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1770, col_offset=12), 'assertArgumentParserError', Load(), lineno=1770, col_offset=12), [Attribute(Attribute(Name('self', Load(), lineno=1770, col_offset=43), 'parser', Load(), lineno=1770, col_offset=43), 'parse_args', Load(), lineno=1770, col_offset=43), Name('args', Load(), lineno=1770, col_offset=67)], [], None, None, lineno=1770, col_offset=12), lineno=1770, col_offset=12)], [], lineno=1767, col_offset=8)], [], lineno=1765, col_offset=4), FunctionDef('test_parse_args', arguments([Name('self', Param(), lineno=1772, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1774, col_offset=8), 'assertEqual', Load(), lineno=1774, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=1775, col_offset=12), 'parser', Load(), lineno=1775, col_offset=12), 'parse_args', Load(), lineno=1775, col_offset=12), [Call(Attribute(Str('0.5 1 b -w 7', lineno=1775, col_offset=35), 'split', Load(), lineno=1775, col_offset=35), [], [], None, None, lineno=1775, col_offset=35)], [], None, None, lineno=1775, col_offset=12), Call(Name('NS', Load(), lineno=1776, col_offset=12), [], [keyword('foo', Name('False', Load(), lineno=1776, col_offset=19)), keyword('bar', Num(0.5, lineno=1776, col_offset=30)), keyword('w', Num(7, lineno=1776, col_offset=37)), keyword('x', Str('b', lineno=1776, col_offset=42))], None, None, lineno=1776, col_offset=12)], [], None, None, lineno=1774, col_offset=8), lineno=1774, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1778, col_offset=8), 'assertEqual', Load(), lineno=1778, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=1779, col_offset=12), 'parser', Load(), lineno=1779, col_offset=12), 'parse_args', Load(), lineno=1779, col_offset=12), [Call(Attribute(Str('0.25 --foo 2 -y 2 3j -- -1j', lineno=1779, col_offset=35), 'split', Load(), lineno=1779, col_offset=35), [], [], None, None, lineno=1779, col_offset=35)], [], None, None, lineno=1779, col_offset=12), Call(Name('NS', Load(), lineno=1780, col_offset=12), [], [keyword('foo', Name('True', Load(), lineno=1780, col_offset=19)), keyword('bar', Num(0.25, lineno=1780, col_offset=29)), keyword('y', Str('2', lineno=1780, col_offset=37)), keyword('z', List([Num(3j, lineno=1780, col_offset=45), Num(-1j, lineno=1780, col_offset=50)], Load(), lineno=1780, col_offset=44))], None, None, lineno=1780, col_offset=12)], [], None, None, lineno=1778, col_offset=8), lineno=1778, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1782, col_offset=8), 'assertEqual', Load(), lineno=1782, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=1783, col_offset=12), 'parser', Load(), lineno=1783, col_offset=12), 'parse_args', Load(), lineno=1783, col_offset=12), [Call(Attribute(Str('--foo 0.125 1 c', lineno=1783, col_offset=35), 'split', Load(), lineno=1783, col_offset=35), [], [], None, None, lineno=1783, col_offset=35)], [], None, None, lineno=1783, col_offset=12), Call(Name('NS', Load(), lineno=1784, col_offset=12), [], [keyword('foo', Name('True', Load(), lineno=1784, col_offset=19)), keyword('bar', Num(0.125, lineno=1784, col_offset=29)), keyword('w', Name('None', Load(), lineno=1784, col_offset=38)), keyword('x', Str('c', lineno=1784, col_offset=46))], None, None, lineno=1784, col_offset=12)], [], None, None, lineno=1782, col_offset=8), lineno=1782, col_offset=8)], [], lineno=1772, col_offset=4), FunctionDef('test_parse_known_args', arguments([Name('self', Param(), lineno=1787, col_offset=30)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1788, col_offset=8), 'assertEqual', Load(), lineno=1788, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=1789, col_offset=12), 'parser', Load(), lineno=1789, col_offset=12), 'parse_known_args', Load(), lineno=1789, col_offset=12), [Call(Attribute(Str('0.5 1 b -w 7', lineno=1789, col_offset=41), 'split', Load(), lineno=1789, col_offset=41), [], [], None, None, lineno=1789, col_offset=41)], [], None, None, lineno=1789, col_offset=12), Tuple([Call(Name('NS', Load(), lineno=1790, col_offset=13), [], [keyword('foo', Name('False', Load(), lineno=1790, col_offset=20)), keyword('bar', Num(0.5, lineno=1790, col_offset=31)), keyword('w', Num(7, lineno=1790, col_offset=38)), keyword('x', Str('b', lineno=1790, col_offset=43))], None, None, lineno=1790, col_offset=13), List([], Load(), lineno=1790, col_offset=49)], Load(), lineno=1790, col_offset=13)], [], None, None, lineno=1788, col_offset=8), lineno=1788, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1792, col_offset=8), 'assertEqual', Load(), lineno=1792, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=1793, col_offset=12), 'parser', Load(), lineno=1793, col_offset=12), 'parse_known_args', Load(), lineno=1793, col_offset=12), [Call(Attribute(Str('0.5 -p 1 b -w 7', lineno=1793, col_offset=41), 'split', Load(), lineno=1793, col_offset=41), [], [], None, None, lineno=1793, col_offset=41)], [], None, None, lineno=1793, col_offset=12), Tuple([Call(Name('NS', Load(), lineno=1794, col_offset=13), [], [keyword('foo', Name('False', Load(), lineno=1794, col_offset=20)), keyword('bar', Num(0.5, lineno=1794, col_offset=31)), keyword('w', Num(7, lineno=1794, col_offset=38)), keyword('x', Str('b', lineno=1794, col_offset=43))], None, None, lineno=1794, col_offset=13), List([Str('-p', lineno=1794, col_offset=50)], Load(), lineno=1794, col_offset=49)], Load(), lineno=1794, col_offset=13)], [], None, None, lineno=1792, col_offset=8), lineno=1792, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1796, col_offset=8), 'assertEqual', Load(), lineno=1796, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=1797, col_offset=12), 'parser', Load(), lineno=1797, col_offset=12), 'parse_known_args', Load(), lineno=1797, col_offset=12), [Call(Attribute(Str('0.5 1 b -w 7 -p', lineno=1797, col_offset=41), 'split', Load(), lineno=1797, col_offset=41), [], [], None, None, lineno=1797, col_offset=41)], [], None, None, lineno=1797, col_offset=12), Tuple([Call(Name('NS', Load(), lineno=1798, col_offset=13), [], [keyword('foo', Name('False', Load(), lineno=1798, col_offset=20)), keyword('bar', Num(0.5, lineno=1798, col_offset=31)), keyword('w', Num(7, lineno=1798, col_offset=38)), keyword('x', Str('b', lineno=1798, col_offset=43))], None, None, lineno=1798, col_offset=13), List([Str('-p', lineno=1798, col_offset=50)], Load(), lineno=1798, col_offset=49)], Load(), lineno=1798, col_offset=13)], [], None, None, lineno=1796, col_offset=8), lineno=1796, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1800, col_offset=8), 'assertEqual', Load(), lineno=1800, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=1801, col_offset=12), 'parser', Load(), lineno=1801, col_offset=12), 'parse_known_args', Load(), lineno=1801, col_offset=12), [Call(Attribute(Str('0.5 1 b -q -rs -w 7', lineno=1801, col_offset=41), 'split', Load(), lineno=1801, col_offset=41), [], [], None, None, lineno=1801, col_offset=41)], [], None, None, lineno=1801, col_offset=12), Tuple([Call(Name('NS', Load(), lineno=1802, col_offset=13), [], [keyword('foo', Name('False', Load(), lineno=1802, col_offset=20)), keyword('bar', Num(0.5, lineno=1802, col_offset=31)), keyword('w', Num(7, lineno=1802, col_offset=38)), keyword('x', Str('b', lineno=1802, col_offset=43))], None, None, lineno=1802, col_offset=13), List([Str('-q', lineno=1802, col_offset=50), Str('-rs', lineno=1802, col_offset=56)], Load(), lineno=1802, col_offset=49)], Load(), lineno=1802, col_offset=13)], [], None, None, lineno=1800, col_offset=8), lineno=1800, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1804, col_offset=8), 'assertEqual', Load(), lineno=1804, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=1805, col_offset=12), 'parser', Load(), lineno=1805, col_offset=12), 'parse_known_args', Load(), lineno=1805, col_offset=12), [Call(Attribute(Str('0.5 -W 1 b -X Y -w 7 Z', lineno=1805, col_offset=41), 'split', Load(), lineno=1805, col_offset=41), [], [], None, None, lineno=1805, col_offset=41)], [], None, None, lineno=1805, col_offset=12), Tuple([Call(Name('NS', Load(), lineno=1806, col_offset=13), [], [keyword('foo', Name('False', Load(), lineno=1806, col_offset=20)), keyword('bar', Num(0.5, lineno=1806, col_offset=31)), keyword('w', Num(7, lineno=1806, col_offset=38)), keyword('x', Str('b', lineno=1806, col_offset=43))], None, None, lineno=1806, col_offset=13), List([Str('-W', lineno=1806, col_offset=50), Str('-X', lineno=1806, col_offset=56), Str('Y', lineno=1806, col_offset=62), Str('Z', lineno=1806, col_offset=67)], Load(), lineno=1806, col_offset=49)], Load(), lineno=1806, col_offset=13)], [], None, None, lineno=1804, col_offset=8), lineno=1804, col_offset=8)], [], lineno=1787, col_offset=4), FunctionDef('test_dest', arguments([Name('self', Param(), lineno=1809, col_offset=18)], None, None, []), [Assign([Name('parser', Store(), lineno=1810, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=1810, col_offset=17), [], [], None, None, lineno=1810, col_offset=17), lineno=1810, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=1811, col_offset=8), 'add_argument', Load(), lineno=1811, col_offset=8), [Str('--foo', lineno=1811, col_offset=28)], [keyword('action', Str('store_true', lineno=1811, col_offset=44))], None, None, lineno=1811, col_offset=8), lineno=1811, col_offset=8), Assign([Name('subparsers', Store(), lineno=1812, col_offset=8)], Call(Attribute(Name('parser', Load(), lineno=1812, col_offset=21), 'add_subparsers', Load(), lineno=1812, col_offset=21), [], [keyword('dest', Str('bar', lineno=1812, col_offset=48))], None, None, lineno=1812, col_offset=21), lineno=1812, col_offset=8), Assign([Name('parser1', Store(), lineno=1813, col_offset=8)], Call(Attribute(Name('subparsers', Load(), lineno=1813, col_offset=18), 'add_parser', Load(), lineno=1813, col_offset=18), [Str('1', lineno=1813, col_offset=40)], [], None, None, lineno=1813, col_offset=18), lineno=1813, col_offset=8), Expr(Call(Attribute(Name('parser1', Load(), lineno=1814, col_offset=8), 'add_argument', Load(), lineno=1814, col_offset=8), [Str('baz', lineno=1814, col_offset=29)], [], None, None, lineno=1814, col_offset=8), lineno=1814, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1815, col_offset=8), 'assertEqual', Load(), lineno=1815, col_offset=8), [Call(Name('NS', Load(), lineno=1815, col_offset=25), [], [keyword('foo', Name('False', Load(), lineno=1815, col_offset=32)), keyword('bar', Str('1', lineno=1815, col_offset=43)), keyword('baz', Str('2', lineno=1815, col_offset=52))], None, None, lineno=1815, col_offset=25), Call(Attribute(Name('parser', Load(), lineno=1816, col_offset=25), 'parse_args', Load(), lineno=1816, col_offset=25), [Call(Attribute(Str('1 2', lineno=1816, col_offset=43), 'split', Load(), lineno=1816, col_offset=43), [], [], None, None, lineno=1816, col_offset=43)], [], None, None, lineno=1816, col_offset=25)], [], None, None, lineno=1815, col_offset=8), lineno=1815, col_offset=8)], [], lineno=1809, col_offset=4), FunctionDef('test_help', arguments([Name('self', Param(), lineno=1818, col_offset=18)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1819, col_offset=8), 'assertEqual', Load(), lineno=1819, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=1819, col_offset=25), 'parser', Load(), lineno=1819, col_offset=25), 'format_usage', Load(), lineno=1819, col_offset=25), [], [], None, None, lineno=1819, col_offset=25), Str('usage: PROG [-h] [--foo] bar {1,2} ...\n', lineno=1820, col_offset=25)], [], None, None, lineno=1819, col_offset=8), lineno=1819, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1821, col_offset=8), 'assertEqual', Load(), lineno=1821, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=1821, col_offset=25), 'parser', Load(), lineno=1821, col_offset=25), 'format_help', Load(), lineno=1821, col_offset=25), [], [], None, None, lineno=1821, col_offset=25), Call(Attribute(Name('textwrap', Load(), lineno=1821, col_offset=52), 'dedent', Load(), lineno=1821, col_offset=52), [Str('            usage: PROG [-h] [--foo] bar {1,2} ...\n\n            main description\n\n            positional arguments:\n              bar         bar help\n              {1,2}       command help\n\n            optional arguments:\n              -h, --help  show this help message and exit\n              --foo       foo help\n            ', lineno=1833, col_offset=-1)], [], None, None, lineno=1821, col_offset=52)], [], None, None, lineno=1821, col_offset=8), lineno=1821, col_offset=8)], [], lineno=1818, col_offset=4), FunctionDef('test_help_extra_prefix_chars', arguments([Name('self', Param(), lineno=1835, col_offset=37)], None, None, []), [Assign([Name('parser', Store(), lineno=1837, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1837, col_offset=17), '_get_parser', Load(), lineno=1837, col_offset=17), [], [keyword('prefix_chars', Str('+:-', lineno=1837, col_offset=47))], None, None, lineno=1837, col_offset=17), lineno=1837, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1838, col_offset=8), 'assertEqual', Load(), lineno=1838, col_offset=8), [Call(Attribute(Name('parser', Load(), lineno=1838, col_offset=25), 'format_usage', Load(), lineno=1838, col_offset=25), [], [], None, None, lineno=1838, col_offset=25), Str('usage: PROG [-h] [++foo] bar {1,2} ...\n', lineno=1839, col_offset=25)], [], None, None, lineno=1838, col_offset=8), lineno=1838, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1840, col_offset=8), 'assertEqual', Load(), lineno=1840, col_offset=8), [Call(Attribute(Name('parser', Load(), lineno=1840, col_offset=25), 'format_help', Load(), lineno=1840, col_offset=25), [], [], None, None, lineno=1840, col_offset=25), Call(Attribute(Name('textwrap', Load(), lineno=1840, col_offset=47), 'dedent', Load(), lineno=1840, col_offset=47), [Str('            usage: PROG [-h] [++foo] bar {1,2} ...\n\n            main description\n\n            positional arguments:\n              bar         bar help\n              {1,2}       command help\n\n            optional arguments:\n              -h, --help  show this help message and exit\n              ++foo       foo help\n            ', lineno=1852, col_offset=-1)], [], None, None, lineno=1840, col_offset=47)], [], None, None, lineno=1840, col_offset=8), lineno=1840, col_offset=8)], [], lineno=1835, col_offset=4), FunctionDef('test_help_alternate_prefix_chars', arguments([Name('self', Param(), lineno=1855, col_offset=41)], None, None, []), [Assign([Name('parser', Store(), lineno=1856, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1856, col_offset=17), '_get_parser', Load(), lineno=1856, col_offset=17), [], [keyword('prefix_chars', Str('+:/', lineno=1856, col_offset=47))], None, None, lineno=1856, col_offset=17), lineno=1856, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1857, col_offset=8), 'assertEqual', Load(), lineno=1857, col_offset=8), [Call(Attribute(Name('parser', Load(), lineno=1857, col_offset=25), 'format_usage', Load(), lineno=1857, col_offset=25), [], [], None, None, lineno=1857, col_offset=25), Str('usage: PROG [+h] [++foo] bar {1,2} ...\n', lineno=1858, col_offset=25)], [], None, None, lineno=1857, col_offset=8), lineno=1857, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1859, col_offset=8), 'assertEqual', Load(), lineno=1859, col_offset=8), [Call(Attribute(Name('parser', Load(), lineno=1859, col_offset=25), 'format_help', Load(), lineno=1859, col_offset=25), [], [], None, None, lineno=1859, col_offset=25), Call(Attribute(Name('textwrap', Load(), lineno=1859, col_offset=47), 'dedent', Load(), lineno=1859, col_offset=47), [Str('            usage: PROG [+h] [++foo] bar {1,2} ...\n\n            main description\n\n            positional arguments:\n              bar         bar help\n              {1,2}       command help\n\n            optional arguments:\n              +h, ++help  show this help message and exit\n              ++foo       foo help\n            ', lineno=1871, col_offset=-1)], [], None, None, lineno=1859, col_offset=47)], [], None, None, lineno=1859, col_offset=8), lineno=1859, col_offset=8)], [], lineno=1855, col_offset=4), FunctionDef('test_parser_command_help', arguments([Name('self', Param(), lineno=1873, col_offset=33)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1874, col_offset=8), 'assertEqual', Load(), lineno=1874, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=1874, col_offset=25), 'command_help_parser', Load(), lineno=1874, col_offset=25), 'format_usage', Load(), lineno=1874, col_offset=25), [], [], None, None, lineno=1874, col_offset=25), Str('usage: PROG [-h] [--foo] bar {1,2} ...\n', lineno=1875, col_offset=25)], [], None, None, lineno=1874, col_offset=8), lineno=1874, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1876, col_offset=8), 'assertEqual', Load(), lineno=1876, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=1876, col_offset=25), 'command_help_parser', Load(), lineno=1876, col_offset=25), 'format_help', Load(), lineno=1876, col_offset=25), [], [], None, None, lineno=1876, col_offset=25), Call(Attribute(Name('textwrap', Load(), lineno=1877, col_offset=25), 'dedent', Load(), lineno=1877, col_offset=25), [Str('            usage: PROG [-h] [--foo] bar {1,2} ...\n\n            main description\n\n            positional arguments:\n              bar         bar help\n              {1,2}       command help\n                1         1 help\n                2         2 help\n\n            optional arguments:\n              -h, --help  show this help message and exit\n              --foo       foo help\n            ', lineno=1891, col_offset=-1)], [], None, None, lineno=1877, col_offset=25)], [], None, None, lineno=1876, col_offset=8), lineno=1876, col_offset=8)], [], lineno=1873, col_offset=4), FunctionDef('test_subparser_title_help', arguments([Name('self', Param(), lineno=1893, col_offset=34)], None, None, []), [Assign([Name('parser', Store(), lineno=1894, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=1894, col_offset=17), [], [keyword('prog', Str('PROG', lineno=1894, col_offset=49)), keyword('description', Str('main description', lineno=1895, col_offset=56))], None, None, lineno=1894, col_offset=17), lineno=1894, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=1896, col_offset=8), 'add_argument', Load(), lineno=1896, col_offset=8), [Str('--foo', lineno=1896, col_offset=28)], [keyword('action', Str('store_true', lineno=1896, col_offset=44)), keyword('help', Str('foo help', lineno=1896, col_offset=63))], None, None, lineno=1896, col_offset=8), lineno=1896, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=1897, col_offset=8), 'add_argument', Load(), lineno=1897, col_offset=8), [Str('bar', lineno=1897, col_offset=28)], [keyword('help', Str('bar help', lineno=1897, col_offset=40))], None, None, lineno=1897, col_offset=8), lineno=1897, col_offset=8), Assign([Name('subparsers', Store(), lineno=1898, col_offset=8)], Call(Attribute(Name('parser', Load(), lineno=1898, col_offset=21), 'add_subparsers', Load(), lineno=1898, col_offset=21), [], [keyword('title', Str('subcommands', lineno=1898, col_offset=49)), keyword('description', Str('command help', lineno=1899, col_offset=55)), keyword('help', Str('additional text', lineno=1900, col_offset=48))], None, None, lineno=1898, col_offset=21), lineno=1898, col_offset=8), Assign([Name('parser1', Store(), lineno=1901, col_offset=8)], Call(Attribute(Name('subparsers', Load(), lineno=1901, col_offset=18), 'add_parser', Load(), lineno=1901, col_offset=18), [Str('1', lineno=1901, col_offset=40)], [], None, None, lineno=1901, col_offset=18), lineno=1901, col_offset=8), Assign([Name('parser2', Store(), lineno=1902, col_offset=8)], Call(Attribute(Name('subparsers', Load(), lineno=1902, col_offset=18), 'add_parser', Load(), lineno=1902, col_offset=18), [Str('2', lineno=1902, col_offset=40)], [], None, None, lineno=1902, col_offset=18), lineno=1902, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1903, col_offset=8), 'assertEqual', Load(), lineno=1903, col_offset=8), [Call(Attribute(Name('parser', Load(), lineno=1903, col_offset=25), 'format_usage', Load(), lineno=1903, col_offset=25), [], [], None, None, lineno=1903, col_offset=25), Str('usage: PROG [-h] [--foo] bar {1,2} ...\n', lineno=1904, col_offset=25)], [], None, None, lineno=1903, col_offset=8), lineno=1903, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1905, col_offset=8), 'assertEqual', Load(), lineno=1905, col_offset=8), [Call(Attribute(Name('parser', Load(), lineno=1905, col_offset=25), 'format_help', Load(), lineno=1905, col_offset=25), [], [], None, None, lineno=1905, col_offset=25), Call(Attribute(Name('textwrap', Load(), lineno=1905, col_offset=47), 'dedent', Load(), lineno=1905, col_offset=47), [Str('            usage: PROG [-h] [--foo] bar {1,2} ...\n\n            main description\n\n            positional arguments:\n              bar         bar help\n\n            optional arguments:\n              -h, --help  show this help message and exit\n              --foo       foo help\n\n            subcommands:\n              command help\n\n              {1,2}       additional text\n            ', lineno=1921, col_offset=-1)], [], None, None, lineno=1905, col_offset=47)], [], None, None, lineno=1905, col_offset=8), lineno=1905, col_offset=8)], [], lineno=1893, col_offset=4), FunctionDef('_test_subparser_help', arguments([Name('self', Param(), lineno=1923, col_offset=29), Name('args_str', Param(), lineno=1923, col_offset=35), Name('expected_help', Param(), lineno=1923, col_offset=45)], None, None, []), [TryExcept([Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1925, col_offset=12), 'parser', Load(), lineno=1925, col_offset=12), 'parse_args', Load(), lineno=1925, col_offset=12), [Call(Attribute(Name('args_str', Load(), lineno=1925, col_offset=35), 'split', Load(), lineno=1925, col_offset=35), [], [], None, None, lineno=1925, col_offset=35)], [], None, None, lineno=1925, col_offset=12), lineno=1925, col_offset=12)], [ExceptHandler(Name('ArgumentParserError', Load(), lineno=1926, col_offset=15), None, [Assign([Name('err', Store(), lineno=1927, col_offset=12)], Subscript(Call(Attribute(Name('sys', Load(), lineno=1927, col_offset=18), 'exc_info', Load(), lineno=1927, col_offset=18), [], [], None, None, lineno=1927, col_offset=18), Index(Num(1, lineno=1927, col_offset=33)), Load(), lineno=1927, col_offset=18), lineno=1927, col_offset=12), If(Compare(Attribute(Name('err', Load(), lineno=1928, col_offset=15), 'stdout', Load(), lineno=1928, col_offset=15), [NotEq()], [Name('expected_help', Load(), lineno=1928, col_offset=29)], lineno=1928, col_offset=15), [Print(None, [Call(Name('repr', Load(), lineno=1929, col_offset=22), [Name('expected_help', Load(), lineno=1929, col_offset=27)], [], None, None, lineno=1929, col_offset=22)], True, lineno=1929, col_offset=16), Print(None, [Call(Name('repr', Load(), lineno=1930, col_offset=22), [Attribute(Name('err', Load(), lineno=1930, col_offset=27), 'stdout', Load(), lineno=1930, col_offset=27)], [], None, None, lineno=1930, col_offset=22)], True, lineno=1930, col_offset=16)], [], lineno=1928, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1931, col_offset=12), 'assertEqual', Load(), lineno=1931, col_offset=12), [Attribute(Name('err', Load(), lineno=1931, col_offset=29), 'stdout', Load(), lineno=1931, col_offset=29), Name('expected_help', Load(), lineno=1931, col_offset=41)], [], None, None, lineno=1931, col_offset=12), lineno=1931, col_offset=12)], lineno=1926, col_offset=8)], [], lineno=1924, col_offset=8)], [], lineno=1923, col_offset=4), FunctionDef('test_subparser1_help', arguments([Name('self', Param(), lineno=1933, col_offset=29)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1934, col_offset=8), '_test_subparser_help', Load(), lineno=1934, col_offset=8), [Str('5.0 1 -h', lineno=1934, col_offset=34), Call(Attribute(Name('textwrap', Load(), lineno=1934, col_offset=46), 'dedent', Load(), lineno=1934, col_offset=46), [Str('            usage: PROG bar 1 [-h] [-w W] {a,b,c}\n\n            1 description\n\n            positional arguments:\n              {a,b,c}     x help\n\n            optional arguments:\n              -h, --help  show this help message and exit\n              -w W        w help\n            ', lineno=1945, col_offset=-1)], [], None, None, lineno=1934, col_offset=46)], [], None, None, lineno=1934, col_offset=8), lineno=1934, col_offset=8)], [], lineno=1933, col_offset=4), FunctionDef('test_subparser2_help', arguments([Name('self', Param(), lineno=1947, col_offset=29)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1948, col_offset=8), '_test_subparser_help', Load(), lineno=1948, col_offset=8), [Str('5.0 2 -h', lineno=1948, col_offset=34), Call(Attribute(Name('textwrap', Load(), lineno=1948, col_offset=46), 'dedent', Load(), lineno=1948, col_offset=46), [Str('            usage: PROG bar 2 [-h] [-y {1,2,3}] [z [z ...]]\n\n            2 description\n\n            positional arguments:\n              z           z help\n\n            optional arguments:\n              -h, --help  show this help message and exit\n              -y {1,2,3}  y help\n            ', lineno=1959, col_offset=-1)], [], None, None, lineno=1948, col_offset=46)], [], None, None, lineno=1948, col_offset=8), lineno=1948, col_offset=8)], [], lineno=1947, col_offset=4)], [], lineno=1716, col_offset=0), ClassDef('TestPositionalsGroups', [Name('TestCase', Load(), lineno=1965, col_offset=28)], [Expr(Str('Tests that order of group positionals matches construction order', lineno=1966, col_offset=4), lineno=1966, col_offset=4), FunctionDef('test_nongroup_first', arguments([Name('self', Param(), lineno=1968, col_offset=28)], None, None, []), [Assign([Name('parser', Store(), lineno=1969, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=1969, col_offset=17), [], [], None, None, lineno=1969, col_offset=17), lineno=1969, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=1970, col_offset=8), 'add_argument', Load(), lineno=1970, col_offset=8), [Str('foo', lineno=1970, col_offset=28)], [], None, None, lineno=1970, col_offset=8), lineno=1970, col_offset=8), Assign([Name('group', Store(), lineno=1971, col_offset=8)], Call(Attribute(Name('parser', Load(), lineno=1971, col_offset=16), 'add_argument_group', Load(), lineno=1971, col_offset=16), [Str('g', lineno=1971, col_offset=42)], [], None, None, lineno=1971, col_offset=16), lineno=1971, col_offset=8), Expr(Call(Attribute(Name('group', Load(), lineno=1972, col_offset=8), 'add_argument', Load(), lineno=1972, col_offset=8), [Str('bar', lineno=1972, col_offset=27)], [], None, None, lineno=1972, col_offset=8), lineno=1972, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=1973, col_offset=8), 'add_argument', Load(), lineno=1973, col_offset=8), [Str('baz', lineno=1973, col_offset=28)], [], None, None, lineno=1973, col_offset=8), lineno=1973, col_offset=8), Assign([Name('expected', Store(), lineno=1974, col_offset=8)], Call(Name('NS', Load(), lineno=1974, col_offset=19), [], [keyword('foo', Str('1', lineno=1974, col_offset=26)), keyword('bar', Str('2', lineno=1974, col_offset=35)), keyword('baz', Str('3', lineno=1974, col_offset=44))], None, None, lineno=1974, col_offset=19), lineno=1974, col_offset=8), Assign([Name('result', Store(), lineno=1975, col_offset=8)], Call(Attribute(Name('parser', Load(), lineno=1975, col_offset=17), 'parse_args', Load(), lineno=1975, col_offset=17), [Call(Attribute(Str('1 2 3', lineno=1975, col_offset=35), 'split', Load(), lineno=1975, col_offset=35), [], [], None, None, lineno=1975, col_offset=35)], [], None, None, lineno=1975, col_offset=17), lineno=1975, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1976, col_offset=8), 'assertEqual', Load(), lineno=1976, col_offset=8), [Name('expected', Load(), lineno=1976, col_offset=25), Name('result', Load(), lineno=1976, col_offset=35)], [], None, None, lineno=1976, col_offset=8), lineno=1976, col_offset=8)], [], lineno=1968, col_offset=4), FunctionDef('test_group_first', arguments([Name('self', Param(), lineno=1978, col_offset=25)], None, None, []), [Assign([Name('parser', Store(), lineno=1979, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=1979, col_offset=17), [], [], None, None, lineno=1979, col_offset=17), lineno=1979, col_offset=8), Assign([Name('group', Store(), lineno=1980, col_offset=8)], Call(Attribute(Name('parser', Load(), lineno=1980, col_offset=16), 'add_argument_group', Load(), lineno=1980, col_offset=16), [Str('xxx', lineno=1980, col_offset=42)], [], None, None, lineno=1980, col_offset=16), lineno=1980, col_offset=8), Expr(Call(Attribute(Name('group', Load(), lineno=1981, col_offset=8), 'add_argument', Load(), lineno=1981, col_offset=8), [Str('foo', lineno=1981, col_offset=27)], [], None, None, lineno=1981, col_offset=8), lineno=1981, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=1982, col_offset=8), 'add_argument', Load(), lineno=1982, col_offset=8), [Str('bar', lineno=1982, col_offset=28)], [], None, None, lineno=1982, col_offset=8), lineno=1982, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=1983, col_offset=8), 'add_argument', Load(), lineno=1983, col_offset=8), [Str('baz', lineno=1983, col_offset=28)], [], None, None, lineno=1983, col_offset=8), lineno=1983, col_offset=8), Assign([Name('expected', Store(), lineno=1984, col_offset=8)], Call(Name('NS', Load(), lineno=1984, col_offset=19), [], [keyword('foo', Str('1', lineno=1984, col_offset=26)), keyword('bar', Str('2', lineno=1984, col_offset=35)), keyword('baz', Str('3', lineno=1984, col_offset=44))], None, None, lineno=1984, col_offset=19), lineno=1984, col_offset=8), Assign([Name('result', Store(), lineno=1985, col_offset=8)], Call(Attribute(Name('parser', Load(), lineno=1985, col_offset=17), 'parse_args', Load(), lineno=1985, col_offset=17), [Call(Attribute(Str('1 2 3', lineno=1985, col_offset=35), 'split', Load(), lineno=1985, col_offset=35), [], [], None, None, lineno=1985, col_offset=35)], [], None, None, lineno=1985, col_offset=17), lineno=1985, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1986, col_offset=8), 'assertEqual', Load(), lineno=1986, col_offset=8), [Name('expected', Load(), lineno=1986, col_offset=25), Name('result', Load(), lineno=1986, col_offset=35)], [], None, None, lineno=1986, col_offset=8), lineno=1986, col_offset=8)], [], lineno=1978, col_offset=4), FunctionDef('test_interleaved_groups', arguments([Name('self', Param(), lineno=1988, col_offset=32)], None, None, []), [Assign([Name('parser', Store(), lineno=1989, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=1989, col_offset=17), [], [], None, None, lineno=1989, col_offset=17), lineno=1989, col_offset=8), Assign([Name('group', Store(), lineno=1990, col_offset=8)], Call(Attribute(Name('parser', Load(), lineno=1990, col_offset=16), 'add_argument_group', Load(), lineno=1990, col_offset=16), [Str('xxx', lineno=1990, col_offset=42)], [], None, None, lineno=1990, col_offset=16), lineno=1990, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=1991, col_offset=8), 'add_argument', Load(), lineno=1991, col_offset=8), [Str('foo', lineno=1991, col_offset=28)], [], None, None, lineno=1991, col_offset=8), lineno=1991, col_offset=8), Expr(Call(Attribute(Name('group', Load(), lineno=1992, col_offset=8), 'add_argument', Load(), lineno=1992, col_offset=8), [Str('bar', lineno=1992, col_offset=27)], [], None, None, lineno=1992, col_offset=8), lineno=1992, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=1993, col_offset=8), 'add_argument', Load(), lineno=1993, col_offset=8), [Str('baz', lineno=1993, col_offset=28)], [], None, None, lineno=1993, col_offset=8), lineno=1993, col_offset=8), Assign([Name('group', Store(), lineno=1994, col_offset=8)], Call(Attribute(Name('parser', Load(), lineno=1994, col_offset=16), 'add_argument_group', Load(), lineno=1994, col_offset=16), [Str('yyy', lineno=1994, col_offset=42)], [], None, None, lineno=1994, col_offset=16), lineno=1994, col_offset=8), Expr(Call(Attribute(Name('group', Load(), lineno=1995, col_offset=8), 'add_argument', Load(), lineno=1995, col_offset=8), [Str('frell', lineno=1995, col_offset=27)], [], None, None, lineno=1995, col_offset=8), lineno=1995, col_offset=8), Assign([Name('expected', Store(), lineno=1996, col_offset=8)], Call(Name('NS', Load(), lineno=1996, col_offset=19), [], [keyword('foo', Str('1', lineno=1996, col_offset=26)), keyword('bar', Str('2', lineno=1996, col_offset=35)), keyword('baz', Str('3', lineno=1996, col_offset=44)), keyword('frell', Str('4', lineno=1996, col_offset=55))], None, None, lineno=1996, col_offset=19), lineno=1996, col_offset=8), Assign([Name('result', Store(), lineno=1997, col_offset=8)], Call(Attribute(Name('parser', Load(), lineno=1997, col_offset=17), 'parse_args', Load(), lineno=1997, col_offset=17), [Call(Attribute(Str('1 2 3 4', lineno=1997, col_offset=35), 'split', Load(), lineno=1997, col_offset=35), [], [], None, None, lineno=1997, col_offset=35)], [], None, None, lineno=1997, col_offset=17), lineno=1997, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1998, col_offset=8), 'assertEqual', Load(), lineno=1998, col_offset=8), [Name('expected', Load(), lineno=1998, col_offset=25), Name('result', Load(), lineno=1998, col_offset=35)], [], None, None, lineno=1998, col_offset=8), lineno=1998, col_offset=8)], [], lineno=1988, col_offset=4)], [], lineno=1965, col_offset=0), ClassDef('TestParentParsers', [Name('TestCase', Load(), lineno=2004, col_offset=24)], [Expr(Str('Tests that parsers can be created with parent parsers', lineno=2005, col_offset=4), lineno=2005, col_offset=4), FunctionDef('assertArgumentParserError', arguments([Name('self', Param(), lineno=2007, col_offset=34)], 'args', 'kwargs', []), [Expr(Call(Attribute(Name('self', Load(), lineno=2008, col_offset=8), 'assertRaises', Load(), lineno=2008, col_offset=8), [Name('ArgumentParserError', Load(), lineno=2008, col_offset=26)], [], Name('args', Load(), lineno=2008, col_offset=48), Name('kwargs', Load(), lineno=2008, col_offset=56), lineno=2008, col_offset=8), lineno=2008, col_offset=8)], [], lineno=2007, col_offset=4), FunctionDef('setUp', arguments([Name('self', Param(), lineno=2010, col_offset=14)], None, None, []), [Expr(Call(Attribute(Call(Name('super', Load(), lineno=2011, col_offset=8), [Name('TestParentParsers', Load(), lineno=2011, col_offset=14), Name('self', Load(), lineno=2011, col_offset=33)], [], None, None, lineno=2011, col_offset=8), 'setUp', Load(), lineno=2011, col_offset=8), [], [], None, None, lineno=2011, col_offset=8), lineno=2011, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=2012, col_offset=8), 'wxyz_parent', Store(), lineno=2012, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=2012, col_offset=27), [], [keyword('add_help', Name('False', Load(), lineno=2012, col_offset=63))], None, None, lineno=2012, col_offset=27), lineno=2012, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2013, col_offset=8), 'wxyz_parent', Load(), lineno=2013, col_offset=8), 'add_argument', Load(), lineno=2013, col_offset=8), [Str('--w', lineno=2013, col_offset=38)], [], None, None, lineno=2013, col_offset=8), lineno=2013, col_offset=8), Assign([Name('x_group', Store(), lineno=2014, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=2014, col_offset=18), 'wxyz_parent', Load(), lineno=2014, col_offset=18), 'add_argument_group', Load(), lineno=2014, col_offset=18), [Str('x', lineno=2014, col_offset=54)], [], None, None, lineno=2014, col_offset=18), lineno=2014, col_offset=8), Expr(Call(Attribute(Name('x_group', Load(), lineno=2015, col_offset=8), 'add_argument', Load(), lineno=2015, col_offset=8), [Str('-y', lineno=2015, col_offset=29)], [], None, None, lineno=2015, col_offset=8), lineno=2015, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2016, col_offset=8), 'wxyz_parent', Load(), lineno=2016, col_offset=8), 'add_argument', Load(), lineno=2016, col_offset=8), [Str('z', lineno=2016, col_offset=38)], [], None, None, lineno=2016, col_offset=8), lineno=2016, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=2018, col_offset=8), 'abcd_parent', Store(), lineno=2018, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=2018, col_offset=27), [], [keyword('add_help', Name('False', Load(), lineno=2018, col_offset=63))], None, None, lineno=2018, col_offset=27), lineno=2018, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2019, col_offset=8), 'abcd_parent', Load(), lineno=2019, col_offset=8), 'add_argument', Load(), lineno=2019, col_offset=8), [Str('a', lineno=2019, col_offset=38)], [], None, None, lineno=2019, col_offset=8), lineno=2019, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2020, col_offset=8), 'abcd_parent', Load(), lineno=2020, col_offset=8), 'add_argument', Load(), lineno=2020, col_offset=8), [Str('-b', lineno=2020, col_offset=38)], [], None, None, lineno=2020, col_offset=8), lineno=2020, col_offset=8), Assign([Name('c_group', Store(), lineno=2021, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=2021, col_offset=18), 'abcd_parent', Load(), lineno=2021, col_offset=18), 'add_argument_group', Load(), lineno=2021, col_offset=18), [Str('c', lineno=2021, col_offset=54)], [], None, None, lineno=2021, col_offset=18), lineno=2021, col_offset=8), Expr(Call(Attribute(Name('c_group', Load(), lineno=2022, col_offset=8), 'add_argument', Load(), lineno=2022, col_offset=8), [Str('--d', lineno=2022, col_offset=29)], [], None, None, lineno=2022, col_offset=8), lineno=2022, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=2024, col_offset=8), 'w_parent', Store(), lineno=2024, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=2024, col_offset=24), [], [keyword('add_help', Name('False', Load(), lineno=2024, col_offset=60))], None, None, lineno=2024, col_offset=24), lineno=2024, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2025, col_offset=8), 'w_parent', Load(), lineno=2025, col_offset=8), 'add_argument', Load(), lineno=2025, col_offset=8), [Str('--w', lineno=2025, col_offset=35)], [], None, None, lineno=2025, col_offset=8), lineno=2025, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=2027, col_offset=8), 'z_parent', Store(), lineno=2027, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=2027, col_offset=24), [], [keyword('add_help', Name('False', Load(), lineno=2027, col_offset=60))], None, None, lineno=2027, col_offset=24), lineno=2027, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2028, col_offset=8), 'z_parent', Load(), lineno=2028, col_offset=8), 'add_argument', Load(), lineno=2028, col_offset=8), [Str('z', lineno=2028, col_offset=35)], [], None, None, lineno=2028, col_offset=8), lineno=2028, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=2031, col_offset=8), 'ab_mutex_parent', Store(), lineno=2031, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=2031, col_offset=31), [], [keyword('add_help', Name('False', Load(), lineno=2031, col_offset=67))], None, None, lineno=2031, col_offset=31), lineno=2031, col_offset=8), Assign([Name('group', Store(), lineno=2032, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=2032, col_offset=16), 'ab_mutex_parent', Load(), lineno=2032, col_offset=16), 'add_mutually_exclusive_group', Load(), lineno=2032, col_offset=16), [], [], None, None, lineno=2032, col_offset=16), lineno=2032, col_offset=8), Expr(Call(Attribute(Name('group', Load(), lineno=2033, col_offset=8), 'add_argument', Load(), lineno=2033, col_offset=8), [Str('-a', lineno=2033, col_offset=27)], [keyword('action', Str('store_true', lineno=2033, col_offset=40))], None, None, lineno=2033, col_offset=8), lineno=2033, col_offset=8), Expr(Call(Attribute(Name('group', Load(), lineno=2034, col_offset=8), 'add_argument', Load(), lineno=2034, col_offset=8), [Str('-b', lineno=2034, col_offset=27)], [keyword('action', Str('store_true', lineno=2034, col_offset=40))], None, None, lineno=2034, col_offset=8), lineno=2034, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=2036, col_offset=8), 'main_program', Store(), lineno=2036, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=2036, col_offset=28), 'path', Load(), lineno=2036, col_offset=28), 'basename', Load(), lineno=2036, col_offset=28), [Subscript(Attribute(Name('sys', Load(), lineno=2036, col_offset=45), 'argv', Load(), lineno=2036, col_offset=45), Index(Num(0, lineno=2036, col_offset=54)), Load(), lineno=2036, col_offset=45)], [], None, None, lineno=2036, col_offset=28), lineno=2036, col_offset=8)], [], lineno=2010, col_offset=4), FunctionDef('test_single_parent', arguments([Name('self', Param(), lineno=2038, col_offset=27)], None, None, []), [Assign([Name('parser', Store(), lineno=2039, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=2039, col_offset=17), [], [keyword('parents', List([Attribute(Name('self', Load(), lineno=2039, col_offset=53), 'wxyz_parent', Load(), lineno=2039, col_offset=53)], Load(), lineno=2039, col_offset=52))], None, None, lineno=2039, col_offset=17), lineno=2039, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2040, col_offset=8), 'assertEqual', Load(), lineno=2040, col_offset=8), [Call(Attribute(Name('parser', Load(), lineno=2040, col_offset=25), 'parse_args', Load(), lineno=2040, col_offset=25), [Call(Attribute(Str('-y 1 2 --w 3', lineno=2040, col_offset=43), 'split', Load(), lineno=2040, col_offset=43), [], [], None, None, lineno=2040, col_offset=43)], [], None, None, lineno=2040, col_offset=25), Call(Name('NS', Load(), lineno=2041, col_offset=25), [], [keyword('w', Str('3', lineno=2041, col_offset=30)), keyword('y', Str('1', lineno=2041, col_offset=37)), keyword('z', Str('2', lineno=2041, col_offset=44))], None, None, lineno=2041, col_offset=25)], [], None, None, lineno=2040, col_offset=8), lineno=2040, col_offset=8)], [], lineno=2038, col_offset=4), FunctionDef('test_single_parent_mutex', arguments([Name('self', Param(), lineno=2043, col_offset=33)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=2044, col_offset=8), '_test_mutex_ab', Load(), lineno=2044, col_offset=8), [Attribute(Attribute(Name('self', Load(), lineno=2044, col_offset=28), 'ab_mutex_parent', Load(), lineno=2044, col_offset=28), 'parse_args', Load(), lineno=2044, col_offset=28)], [], None, None, lineno=2044, col_offset=8), lineno=2044, col_offset=8), Assign([Name('parser', Store(), lineno=2045, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=2045, col_offset=17), [], [keyword('parents', List([Attribute(Name('self', Load(), lineno=2045, col_offset=53), 'ab_mutex_parent', Load(), lineno=2045, col_offset=53)], Load(), lineno=2045, col_offset=52))], None, None, lineno=2045, col_offset=17), lineno=2045, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2046, col_offset=8), '_test_mutex_ab', Load(), lineno=2046, col_offset=8), [Attribute(Name('parser', Load(), lineno=2046, col_offset=28), 'parse_args', Load(), lineno=2046, col_offset=28)], [], None, None, lineno=2046, col_offset=8), lineno=2046, col_offset=8)], [], lineno=2043, col_offset=4), FunctionDef('test_single_granparent_mutex', arguments([Name('self', Param(), lineno=2048, col_offset=37)], None, None, []), [Assign([Name('parents', Store(), lineno=2049, col_offset=8)], List([Attribute(Name('self', Load(), lineno=2049, col_offset=19), 'ab_mutex_parent', Load(), lineno=2049, col_offset=19)], Load(), lineno=2049, col_offset=18), lineno=2049, col_offset=8), Assign([Name('parser', Store(), lineno=2050, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=2050, col_offset=17), [], [keyword('add_help', Name('False', Load(), lineno=2050, col_offset=53)), keyword('parents', Name('parents', Load(), lineno=2050, col_offset=68))], None, None, lineno=2050, col_offset=17), lineno=2050, col_offset=8), Assign([Name('parser', Store(), lineno=2051, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=2051, col_offset=17), [], [keyword('parents', List([Name('parser', Load(), lineno=2051, col_offset=53)], Load(), lineno=2051, col_offset=52))], None, None, lineno=2051, col_offset=17), lineno=2051, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2052, col_offset=8), '_test_mutex_ab', Load(), lineno=2052, col_offset=8), [Attribute(Name('parser', Load(), lineno=2052, col_offset=28), 'parse_args', Load(), lineno=2052, col_offset=28)], [], None, None, lineno=2052, col_offset=8), lineno=2052, col_offset=8)], [], lineno=2048, col_offset=4), FunctionDef('_test_mutex_ab', arguments([Name('self', Param(), lineno=2054, col_offset=23), Name('parse_args', Param(), lineno=2054, col_offset=29)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=2055, col_offset=8), 'assertEqual', Load(), lineno=2055, col_offset=8), [Call(Name('parse_args', Load(), lineno=2055, col_offset=25), [List([], Load(), lineno=2055, col_offset=36)], [], None, None, lineno=2055, col_offset=25), Call(Name('NS', Load(), lineno=2055, col_offset=41), [], [keyword('a', Name('False', Load(), lineno=2055, col_offset=46)), keyword('b', Name('False', Load(), lineno=2055, col_offset=55))], None, None, lineno=2055, col_offset=41)], [], None, None, lineno=2055, col_offset=8), lineno=2055, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2056, col_offset=8), 'assertEqual', Load(), lineno=2056, col_offset=8), [Call(Name('parse_args', Load(), lineno=2056, col_offset=25), [List([Str('-a', lineno=2056, col_offset=37)], Load(), lineno=2056, col_offset=36)], [], None, None, lineno=2056, col_offset=25), Call(Name('NS', Load(), lineno=2056, col_offset=45), [], [keyword('a', Name('True', Load(), lineno=2056, col_offset=50)), keyword('b', Name('False', Load(), lineno=2056, col_offset=58))], None, None, lineno=2056, col_offset=45)], [], None, None, lineno=2056, col_offset=8), lineno=2056, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2057, col_offset=8), 'assertEqual', Load(), lineno=2057, col_offset=8), [Call(Name('parse_args', Load(), lineno=2057, col_offset=25), [List([Str('-b', lineno=2057, col_offset=37)], Load(), lineno=2057, col_offset=36)], [], None, None, lineno=2057, col_offset=25), Call(Name('NS', Load(), lineno=2057, col_offset=45), [], [keyword('a', Name('False', Load(), lineno=2057, col_offset=50)), keyword('b', Name('True', Load(), lineno=2057, col_offset=59))], None, None, lineno=2057, col_offset=45)], [], None, None, lineno=2057, col_offset=8), lineno=2057, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2058, col_offset=8), 'assertArgumentParserError', Load(), lineno=2058, col_offset=8), [Name('parse_args', Load(), lineno=2058, col_offset=39), List([Str('-a', lineno=2058, col_offset=52), Str('-b', lineno=2058, col_offset=58)], Load(), lineno=2058, col_offset=51)], [], None, None, lineno=2058, col_offset=8), lineno=2058, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2059, col_offset=8), 'assertArgumentParserError', Load(), lineno=2059, col_offset=8), [Name('parse_args', Load(), lineno=2059, col_offset=39), List([Str('-b', lineno=2059, col_offset=52), Str('-a', lineno=2059, col_offset=58)], Load(), lineno=2059, col_offset=51)], [], None, None, lineno=2059, col_offset=8), lineno=2059, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2060, col_offset=8), 'assertArgumentParserError', Load(), lineno=2060, col_offset=8), [Name('parse_args', Load(), lineno=2060, col_offset=39), List([Str('-c', lineno=2060, col_offset=52)], Load(), lineno=2060, col_offset=51)], [], None, None, lineno=2060, col_offset=8), lineno=2060, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2061, col_offset=8), 'assertArgumentParserError', Load(), lineno=2061, col_offset=8), [Name('parse_args', Load(), lineno=2061, col_offset=39), List([Str('-a', lineno=2061, col_offset=52), Str('-c', lineno=2061, col_offset=58)], Load(), lineno=2061, col_offset=51)], [], None, None, lineno=2061, col_offset=8), lineno=2061, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2062, col_offset=8), 'assertArgumentParserError', Load(), lineno=2062, col_offset=8), [Name('parse_args', Load(), lineno=2062, col_offset=39), List([Str('-b', lineno=2062, col_offset=52), Str('-c', lineno=2062, col_offset=58)], Load(), lineno=2062, col_offset=51)], [], None, None, lineno=2062, col_offset=8), lineno=2062, col_offset=8)], [], lineno=2054, col_offset=4), FunctionDef('test_multiple_parents', arguments([Name('self', Param(), lineno=2064, col_offset=30)], None, None, []), [Assign([Name('parents', Store(), lineno=2065, col_offset=8)], List([Attribute(Name('self', Load(), lineno=2065, col_offset=19), 'abcd_parent', Load(), lineno=2065, col_offset=19), Attribute(Name('self', Load(), lineno=2065, col_offset=37), 'wxyz_parent', Load(), lineno=2065, col_offset=37)], Load(), lineno=2065, col_offset=18), lineno=2065, col_offset=8), Assign([Name('parser', Store(), lineno=2066, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=2066, col_offset=17), [], [keyword('parents', Name('parents', Load(), lineno=2066, col_offset=52))], None, None, lineno=2066, col_offset=17), lineno=2066, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2067, col_offset=8), 'assertEqual', Load(), lineno=2067, col_offset=8), [Call(Attribute(Name('parser', Load(), lineno=2067, col_offset=25), 'parse_args', Load(), lineno=2067, col_offset=25), [Call(Attribute(Str('--d 1 --w 2 3 4', lineno=2067, col_offset=43), 'split', Load(), lineno=2067, col_offset=43), [], [], None, None, lineno=2067, col_offset=43)], [], None, None, lineno=2067, col_offset=25), Call(Name('NS', Load(), lineno=2068, col_offset=25), [], [keyword('a', Str('3', lineno=2068, col_offset=30)), keyword('b', Name('None', Load(), lineno=2068, col_offset=37)), keyword('d', Str('1', lineno=2068, col_offset=45)), keyword('w', Str('2', lineno=2068, col_offset=52)), keyword('y', Name('None', Load(), lineno=2068, col_offset=59)), keyword('z', Str('4', lineno=2068, col_offset=67))], None, None, lineno=2068, col_offset=25)], [], None, None, lineno=2067, col_offset=8), lineno=2067, col_offset=8)], [], lineno=2064, col_offset=4), FunctionDef('test_multiple_parents_mutex', arguments([Name('self', Param(), lineno=2070, col_offset=36)], None, None, []), [Assign([Name('parents', Store(), lineno=2071, col_offset=8)], List([Attribute(Name('self', Load(), lineno=2071, col_offset=19), 'ab_mutex_parent', Load(), lineno=2071, col_offset=19), Attribute(Name('self', Load(), lineno=2071, col_offset=41), 'wxyz_parent', Load(), lineno=2071, col_offset=41)], Load(), lineno=2071, col_offset=18), lineno=2071, col_offset=8), Assign([Name('parser', Store(), lineno=2072, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=2072, col_offset=17), [], [keyword('parents', Name('parents', Load(), lineno=2072, col_offset=52))], None, None, lineno=2072, col_offset=17), lineno=2072, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2073, col_offset=8), 'assertEqual', Load(), lineno=2073, col_offset=8), [Call(Attribute(Name('parser', Load(), lineno=2073, col_offset=25), 'parse_args', Load(), lineno=2073, col_offset=25), [Call(Attribute(Str('-a --w 2 3', lineno=2073, col_offset=43), 'split', Load(), lineno=2073, col_offset=43), [], [], None, None, lineno=2073, col_offset=43)], [], None, None, lineno=2073, col_offset=25), Call(Name('NS', Load(), lineno=2074, col_offset=25), [], [keyword('a', Name('True', Load(), lineno=2074, col_offset=30)), keyword('b', Name('False', Load(), lineno=2074, col_offset=38)), keyword('w', Str('2', lineno=2074, col_offset=47)), keyword('y', Name('None', Load(), lineno=2074, col_offset=54)), keyword('z', Str('3', lineno=2074, col_offset=62))], None, None, lineno=2074, col_offset=25)], [], None, None, lineno=2073, col_offset=8), lineno=2073, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2075, col_offset=8), 'assertArgumentParserError', Load(), lineno=2075, col_offset=8), [Attribute(Name('parser', Load(), lineno=2076, col_offset=12), 'parse_args', Load(), lineno=2076, col_offset=12), Call(Attribute(Str('-a --w 2 3 -b', lineno=2076, col_offset=31), 'split', Load(), lineno=2076, col_offset=31), [], [], None, None, lineno=2076, col_offset=31)], [], None, None, lineno=2075, col_offset=8), lineno=2075, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2077, col_offset=8), 'assertArgumentParserError', Load(), lineno=2077, col_offset=8), [Attribute(Name('parser', Load(), lineno=2078, col_offset=12), 'parse_args', Load(), lineno=2078, col_offset=12), Call(Attribute(Str('-a -b --w 2 3', lineno=2078, col_offset=31), 'split', Load(), lineno=2078, col_offset=31), [], [], None, None, lineno=2078, col_offset=31)], [], None, None, lineno=2077, col_offset=8), lineno=2077, col_offset=8)], [], lineno=2070, col_offset=4), FunctionDef('test_conflicting_parents', arguments([Name('self', Param(), lineno=2080, col_offset=33)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=2081, col_offset=8), 'assertRaises', Load(), lineno=2081, col_offset=8), [Attribute(Name('argparse', Load(), lineno=2082, col_offset=12), 'ArgumentError', Load(), lineno=2082, col_offset=12), Attribute(Name('argparse', Load(), lineno=2083, col_offset=12), 'ArgumentParser', Load(), lineno=2083, col_offset=12)], [keyword('parents', List([Attribute(Name('self', Load(), lineno=2084, col_offset=21), 'w_parent', Load(), lineno=2084, col_offset=21), Attribute(Name('self', Load(), lineno=2084, col_offset=36), 'wxyz_parent', Load(), lineno=2084, col_offset=36)], Load(), lineno=2084, col_offset=20))], None, None, lineno=2081, col_offset=8), lineno=2081, col_offset=8)], [], lineno=2080, col_offset=4), FunctionDef('test_conflicting_parents_mutex', arguments([Name('self', Param(), lineno=2086, col_offset=39)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=2087, col_offset=8), 'assertRaises', Load(), lineno=2087, col_offset=8), [Attribute(Name('argparse', Load(), lineno=2088, col_offset=12), 'ArgumentError', Load(), lineno=2088, col_offset=12), Attribute(Name('argparse', Load(), lineno=2089, col_offset=12), 'ArgumentParser', Load(), lineno=2089, col_offset=12)], [keyword('parents', List([Attribute(Name('self', Load(), lineno=2090, col_offset=21), 'abcd_parent', Load(), lineno=2090, col_offset=21), Attribute(Name('self', Load(), lineno=2090, col_offset=39), 'ab_mutex_parent', Load(), lineno=2090, col_offset=39)], Load(), lineno=2090, col_offset=20))], None, None, lineno=2087, col_offset=8), lineno=2087, col_offset=8)], [], lineno=2086, col_offset=4), FunctionDef('test_same_argument_name_parents', arguments([Name('self', Param(), lineno=2092, col_offset=40)], None, None, []), [Assign([Name('parents', Store(), lineno=2093, col_offset=8)], List([Attribute(Name('self', Load(), lineno=2093, col_offset=19), 'wxyz_parent', Load(), lineno=2093, col_offset=19), Attribute(Name('self', Load(), lineno=2093, col_offset=37), 'z_parent', Load(), lineno=2093, col_offset=37)], Load(), lineno=2093, col_offset=18), lineno=2093, col_offset=8), Assign([Name('parser', Store(), lineno=2094, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=2094, col_offset=17), [], [keyword('parents', Name('parents', Load(), lineno=2094, col_offset=52))], None, None, lineno=2094, col_offset=17), lineno=2094, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2095, col_offset=8), 'assertEqual', Load(), lineno=2095, col_offset=8), [Call(Attribute(Name('parser', Load(), lineno=2095, col_offset=25), 'parse_args', Load(), lineno=2095, col_offset=25), [Call(Attribute(Str('1 2', lineno=2095, col_offset=43), 'split', Load(), lineno=2095, col_offset=43), [], [], None, None, lineno=2095, col_offset=43)], [], None, None, lineno=2095, col_offset=25), Call(Name('NS', Load(), lineno=2096, col_offset=25), [], [keyword('w', Name('None', Load(), lineno=2096, col_offset=30)), keyword('y', Name('None', Load(), lineno=2096, col_offset=38)), keyword('z', Str('2', lineno=2096, col_offset=46))], None, None, lineno=2096, col_offset=25)], [], None, None, lineno=2095, col_offset=8), lineno=2095, col_offset=8)], [], lineno=2092, col_offset=4), FunctionDef('test_subparser_parents', arguments([Name('self', Param(), lineno=2098, col_offset=31)], None, None, []), [Assign([Name('parser', Store(), lineno=2099, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=2099, col_offset=17), [], [], None, None, lineno=2099, col_offset=17), lineno=2099, col_offset=8), Assign([Name('subparsers', Store(), lineno=2100, col_offset=8)], Call(Attribute(Name('parser', Load(), lineno=2100, col_offset=21), 'add_subparsers', Load(), lineno=2100, col_offset=21), [], [], None, None, lineno=2100, col_offset=21), lineno=2100, col_offset=8), Assign([Name('abcde_parser', Store(), lineno=2101, col_offset=8)], Call(Attribute(Name('subparsers', Load(), lineno=2101, col_offset=23), 'add_parser', Load(), lineno=2101, col_offset=23), [Str('bar', lineno=2101, col_offset=45)], [keyword('parents', List([Attribute(Name('self', Load(), lineno=2101, col_offset=61), 'abcd_parent', Load(), lineno=2101, col_offset=61)], Load(), lineno=2101, col_offset=60))], None, None, lineno=2101, col_offset=23), lineno=2101, col_offset=8), Expr(Call(Attribute(Name('abcde_parser', Load(), lineno=2102, col_offset=8), 'add_argument', Load(), lineno=2102, col_offset=8), [Str('e', lineno=2102, col_offset=34)], [], None, None, lineno=2102, col_offset=8), lineno=2102, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2103, col_offset=8), 'assertEqual', Load(), lineno=2103, col_offset=8), [Call(Attribute(Name('parser', Load(), lineno=2103, col_offset=25), 'parse_args', Load(), lineno=2103, col_offset=25), [Call(Attribute(Str('bar -b 1 --d 2 3 4', lineno=2103, col_offset=43), 'split', Load(), lineno=2103, col_offset=43), [], [], None, None, lineno=2103, col_offset=43)], [], None, None, lineno=2103, col_offset=25), Call(Name('NS', Load(), lineno=2104, col_offset=25), [], [keyword('a', Str('3', lineno=2104, col_offset=30)), keyword('b', Str('1', lineno=2104, col_offset=37)), keyword('d', Str('2', lineno=2104, col_offset=44)), keyword('e', Str('4', lineno=2104, col_offset=51))], None, None, lineno=2104, col_offset=25)], [], None, None, lineno=2103, col_offset=8), lineno=2103, col_offset=8)], [], lineno=2098, col_offset=4), FunctionDef('test_subparser_parents_mutex', arguments([Name('self', Param(), lineno=2106, col_offset=37)], None, None, []), [Assign([Name('parser', Store(), lineno=2107, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=2107, col_offset=17), [], [], None, None, lineno=2107, col_offset=17), lineno=2107, col_offset=8), Assign([Name('subparsers', Store(), lineno=2108, col_offset=8)], Call(Attribute(Name('parser', Load(), lineno=2108, col_offset=21), 'add_subparsers', Load(), lineno=2108, col_offset=21), [], [], None, None, lineno=2108, col_offset=21), lineno=2108, col_offset=8), Assign([Name('parents', Store(), lineno=2109, col_offset=8)], List([Attribute(Name('self', Load(), lineno=2109, col_offset=19), 'ab_mutex_parent', Load(), lineno=2109, col_offset=19)], Load(), lineno=2109, col_offset=18), lineno=2109, col_offset=8), Assign([Name('abc_parser', Store(), lineno=2110, col_offset=8)], Call(Attribute(Name('subparsers', Load(), lineno=2110, col_offset=21), 'add_parser', Load(), lineno=2110, col_offset=21), [Str('foo', lineno=2110, col_offset=43)], [keyword('parents', Name('parents', Load(), lineno=2110, col_offset=58))], None, None, lineno=2110, col_offset=21), lineno=2110, col_offset=8), Assign([Name('c_group', Store(), lineno=2111, col_offset=8)], Call(Attribute(Name('abc_parser', Load(), lineno=2111, col_offset=18), 'add_argument_group', Load(), lineno=2111, col_offset=18), [Str('c_group', lineno=2111, col_offset=48)], [], None, None, lineno=2111, col_offset=18), lineno=2111, col_offset=8), Expr(Call(Attribute(Name('c_group', Load(), lineno=2112, col_offset=8), 'add_argument', Load(), lineno=2112, col_offset=8), [Str('c', lineno=2112, col_offset=29)], [], None, None, lineno=2112, col_offset=8), lineno=2112, col_offset=8), Assign([Name('parents', Store(), lineno=2113, col_offset=8)], List([Attribute(Name('self', Load(), lineno=2113, col_offset=19), 'wxyz_parent', Load(), lineno=2113, col_offset=19), Attribute(Name('self', Load(), lineno=2113, col_offset=37), 'ab_mutex_parent', Load(), lineno=2113, col_offset=37)], Load(), lineno=2113, col_offset=18), lineno=2113, col_offset=8), Assign([Name('wxyzabe_parser', Store(), lineno=2114, col_offset=8)], Call(Attribute(Name('subparsers', Load(), lineno=2114, col_offset=25), 'add_parser', Load(), lineno=2114, col_offset=25), [Str('bar', lineno=2114, col_offset=47)], [keyword('parents', Name('parents', Load(), lineno=2114, col_offset=62))], None, None, lineno=2114, col_offset=25), lineno=2114, col_offset=8), Expr(Call(Attribute(Name('wxyzabe_parser', Load(), lineno=2115, col_offset=8), 'add_argument', Load(), lineno=2115, col_offset=8), [Str('e', lineno=2115, col_offset=36)], [], None, None, lineno=2115, col_offset=8), lineno=2115, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2116, col_offset=8), 'assertEqual', Load(), lineno=2116, col_offset=8), [Call(Attribute(Name('parser', Load(), lineno=2116, col_offset=25), 'parse_args', Load(), lineno=2116, col_offset=25), [Call(Attribute(Str('foo -a 4', lineno=2116, col_offset=43), 'split', Load(), lineno=2116, col_offset=43), [], [], None, None, lineno=2116, col_offset=43)], [], None, None, lineno=2116, col_offset=25), Call(Name('NS', Load(), lineno=2117, col_offset=25), [], [keyword('a', Name('True', Load(), lineno=2117, col_offset=30)), keyword('b', Name('False', Load(), lineno=2117, col_offset=38)), keyword('c', Str('4', lineno=2117, col_offset=47))], None, None, lineno=2117, col_offset=25)], [], None, None, lineno=2116, col_offset=8), lineno=2116, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2118, col_offset=8), 'assertEqual', Load(), lineno=2118, col_offset=8), [Call(Attribute(Name('parser', Load(), lineno=2118, col_offset=25), 'parse_args', Load(), lineno=2118, col_offset=25), [Call(Attribute(Str('bar -b  --w 2 3 4', lineno=2118, col_offset=43), 'split', Load(), lineno=2118, col_offset=43), [], [], None, None, lineno=2118, col_offset=43)], [], None, None, lineno=2118, col_offset=25), Call(Name('NS', Load(), lineno=2119, col_offset=25), [], [keyword('a', Name('False', Load(), lineno=2119, col_offset=30)), keyword('b', Name('True', Load(), lineno=2119, col_offset=39)), keyword('w', Str('2', lineno=2119, col_offset=47)), keyword('y', Name('None', Load(), lineno=2119, col_offset=54)), keyword('z', Str('3', lineno=2119, col_offset=62)), keyword('e', Str('4', lineno=2119, col_offset=69))], None, None, lineno=2119, col_offset=25)], [], None, None, lineno=2118, col_offset=8), lineno=2118, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2120, col_offset=8), 'assertArgumentParserError', Load(), lineno=2120, col_offset=8), [Attribute(Name('parser', Load(), lineno=2121, col_offset=12), 'parse_args', Load(), lineno=2121, col_offset=12), Call(Attribute(Str('foo -a -b 4', lineno=2121, col_offset=31), 'split', Load(), lineno=2121, col_offset=31), [], [], None, None, lineno=2121, col_offset=31)], [], None, None, lineno=2120, col_offset=8), lineno=2120, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2122, col_offset=8), 'assertArgumentParserError', Load(), lineno=2122, col_offset=8), [Attribute(Name('parser', Load(), lineno=2123, col_offset=12), 'parse_args', Load(), lineno=2123, col_offset=12), Call(Attribute(Str('bar -b -a 4', lineno=2123, col_offset=31), 'split', Load(), lineno=2123, col_offset=31), [], [], None, None, lineno=2123, col_offset=31)], [], None, None, lineno=2122, col_offset=8), lineno=2122, col_offset=8)], [], lineno=2106, col_offset=4), FunctionDef('test_parent_help', arguments([Name('self', Param(), lineno=2125, col_offset=25)], None, None, []), [Assign([Name('parents', Store(), lineno=2126, col_offset=8)], List([Attribute(Name('self', Load(), lineno=2126, col_offset=19), 'abcd_parent', Load(), lineno=2126, col_offset=19), Attribute(Name('self', Load(), lineno=2126, col_offset=37), 'wxyz_parent', Load(), lineno=2126, col_offset=37)], Load(), lineno=2126, col_offset=18), lineno=2126, col_offset=8), Assign([Name('parser', Store(), lineno=2127, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=2127, col_offset=17), [], [keyword('parents', Name('parents', Load(), lineno=2127, col_offset=52))], None, None, lineno=2127, col_offset=17), lineno=2127, col_offset=8), Assign([Name('parser_help', Store(), lineno=2128, col_offset=8)], Call(Attribute(Name('parser', Load(), lineno=2128, col_offset=22), 'format_help', Load(), lineno=2128, col_offset=22), [], [], None, None, lineno=2128, col_offset=22), lineno=2128, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2129, col_offset=8), 'assertEqual', Load(), lineno=2129, col_offset=8), [Name('parser_help', Load(), lineno=2129, col_offset=25), Call(Attribute(Name('textwrap', Load(), lineno=2129, col_offset=38), 'dedent', Load(), lineno=2129, col_offset=38), [Call(Attribute(Str('            usage: {} [-h] [-b B] [--d D] [--w W] [-y Y] a z\n\n            positional arguments:\n              a\n              z\n\n            optional arguments:\n              -h, --help  show this help message and exit\n              -b B\n              --w W\n\n            c:\n              --d D\n\n            x:\n              -y Y\n        ', lineno=2146, col_offset=-1), 'format', Load(), lineno=2146, col_offset=-1), [Attribute(Name('self', Load(), lineno=2146, col_offset=19), 'main_program', Load(), lineno=2146, col_offset=19)], [], None, None, lineno=2146, col_offset=-1)], [], None, None, lineno=2129, col_offset=38)], [], None, None, lineno=2129, col_offset=8), lineno=2129, col_offset=8)], [], lineno=2125, col_offset=4), FunctionDef('test_groups_parents', arguments([Name('self', Param(), lineno=2148, col_offset=28)], None, None, []), [Assign([Name('parent', Store(), lineno=2149, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=2149, col_offset=17), [], [keyword('add_help', Name('False', Load(), lineno=2149, col_offset=53))], None, None, lineno=2149, col_offset=17), lineno=2149, col_offset=8), Assign([Name('g', Store(), lineno=2150, col_offset=8)], Call(Attribute(Name('parent', Load(), lineno=2150, col_offset=12), 'add_argument_group', Load(), lineno=2150, col_offset=12), [], [keyword('title', Str('g', lineno=2150, col_offset=44)), keyword('description', Str('gd', lineno=2150, col_offset=61))], None, None, lineno=2150, col_offset=12), lineno=2150, col_offset=8), Expr(Call(Attribute(Name('g', Load(), lineno=2151, col_offset=8), 'add_argument', Load(), lineno=2151, col_offset=8), [Str('-w', lineno=2151, col_offset=23)], [], None, None, lineno=2151, col_offset=8), lineno=2151, col_offset=8), Expr(Call(Attribute(Name('g', Load(), lineno=2152, col_offset=8), 'add_argument', Load(), lineno=2152, col_offset=8), [Str('-x', lineno=2152, col_offset=23)], [], None, None, lineno=2152, col_offset=8), lineno=2152, col_offset=8), Assign([Name('m', Store(), lineno=2153, col_offset=8)], Call(Attribute(Name('parent', Load(), lineno=2153, col_offset=12), 'add_mutually_exclusive_group', Load(), lineno=2153, col_offset=12), [], [], None, None, lineno=2153, col_offset=12), lineno=2153, col_offset=8), Expr(Call(Attribute(Name('m', Load(), lineno=2154, col_offset=8), 'add_argument', Load(), lineno=2154, col_offset=8), [Str('-y', lineno=2154, col_offset=23)], [], None, None, lineno=2154, col_offset=8), lineno=2154, col_offset=8), Expr(Call(Attribute(Name('m', Load(), lineno=2155, col_offset=8), 'add_argument', Load(), lineno=2155, col_offset=8), [Str('-z', lineno=2155, col_offset=23)], [], None, None, lineno=2155, col_offset=8), lineno=2155, col_offset=8), Assign([Name('parser', Store(), lineno=2156, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=2156, col_offset=17), [], [keyword('parents', List([Name('parent', Load(), lineno=2156, col_offset=53)], Load(), lineno=2156, col_offset=52))], None, None, lineno=2156, col_offset=17), lineno=2156, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2158, col_offset=8), 'assertRaises', Load(), lineno=2158, col_offset=8), [Name('ArgumentParserError', Load(), lineno=2158, col_offset=26), Attribute(Name('parser', Load(), lineno=2158, col_offset=47), 'parse_args', Load(), lineno=2158, col_offset=47), List([Str('-y', lineno=2159, col_offset=13), Str('Y', lineno=2159, col_offset=19), Str('-z', lineno=2159, col_offset=24), Str('Z', lineno=2159, col_offset=30)], Load(), lineno=2159, col_offset=12)], [], None, None, lineno=2158, col_offset=8), lineno=2158, col_offset=8), Assign([Name('parser_help', Store(), lineno=2161, col_offset=8)], Call(Attribute(Name('parser', Load(), lineno=2161, col_offset=22), 'format_help', Load(), lineno=2161, col_offset=22), [], [], None, None, lineno=2161, col_offset=22), lineno=2161, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2162, col_offset=8), 'assertEqual', Load(), lineno=2162, col_offset=8), [Name('parser_help', Load(), lineno=2162, col_offset=25), Call(Attribute(Name('textwrap', Load(), lineno=2162, col_offset=38), 'dedent', Load(), lineno=2162, col_offset=38), [Call(Attribute(Str('            usage: {} [-h] [-w W] [-x X] [-y Y | -z Z]\n\n            optional arguments:\n              -h, --help  show this help message and exit\n              -y Y\n              -z Z\n\n            g:\n              gd\n\n              -w W\n              -x X\n        ', lineno=2175, col_offset=-1), 'format', Load(), lineno=2175, col_offset=-1), [Attribute(Name('self', Load(), lineno=2175, col_offset=19), 'main_program', Load(), lineno=2175, col_offset=19)], [], None, None, lineno=2175, col_offset=-1)], [], None, None, lineno=2162, col_offset=38)], [], None, None, lineno=2162, col_offset=8), lineno=2162, col_offset=8)], [], lineno=2148, col_offset=4)], [], lineno=2004, col_offset=0), ClassDef('TestMutuallyExclusiveGroupErrors', [Name('TestCase', Load(), lineno=2181, col_offset=39)], [FunctionDef('test_invalid_add_argument_group', arguments([Name('self', Param(), lineno=2183, col_offset=40)], None, None, []), [Assign([Name('parser', Store(), lineno=2184, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=2184, col_offset=17), [], [], None, None, lineno=2184, col_offset=17), lineno=2184, col_offset=8), Assign([Name('raises', Store(), lineno=2185, col_offset=8)], Attribute(Name('self', Load(), lineno=2185, col_offset=17), 'assertRaises', Load(), lineno=2185, col_offset=17), lineno=2185, col_offset=8), Expr(Call(Name('raises', Load(), lineno=2186, col_offset=8), [Name('TypeError', Load(), lineno=2186, col_offset=15), Attribute(Name('parser', Load(), lineno=2186, col_offset=26), 'add_mutually_exclusive_group', Load(), lineno=2186, col_offset=26)], [keyword('title', Str('foo', lineno=2186, col_offset=69))], None, None, lineno=2186, col_offset=8), lineno=2186, col_offset=8)], [], lineno=2183, col_offset=4), FunctionDef('test_invalid_add_argument', arguments([Name('self', Param(), lineno=2188, col_offset=34)], None, None, []), [Assign([Name('parser', Store(), lineno=2189, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=2189, col_offset=17), [], [], None, None, lineno=2189, col_offset=17), lineno=2189, col_offset=8), Assign([Name('group', Store(), lineno=2190, col_offset=8)], Call(Attribute(Name('parser', Load(), lineno=2190, col_offset=16), 'add_mutually_exclusive_group', Load(), lineno=2190, col_offset=16), [], [], None, None, lineno=2190, col_offset=16), lineno=2190, col_offset=8), Assign([Name('add_argument', Store(), lineno=2191, col_offset=8)], Attribute(Name('group', Load(), lineno=2191, col_offset=23), 'add_argument', Load(), lineno=2191, col_offset=23), lineno=2191, col_offset=8), Assign([Name('raises', Store(), lineno=2192, col_offset=8)], Attribute(Name('self', Load(), lineno=2192, col_offset=17), 'assertRaises', Load(), lineno=2192, col_offset=17), lineno=2192, col_offset=8), Expr(Call(Name('raises', Load(), lineno=2193, col_offset=8), [Name('ValueError', Load(), lineno=2193, col_offset=15), Name('add_argument', Load(), lineno=2193, col_offset=27), Str('--foo', lineno=2193, col_offset=41)], [keyword('required', Name('True', Load(), lineno=2193, col_offset=59))], None, None, lineno=2193, col_offset=8), lineno=2193, col_offset=8), Expr(Call(Name('raises', Load(), lineno=2194, col_offset=8), [Name('ValueError', Load(), lineno=2194, col_offset=15), Name('add_argument', Load(), lineno=2194, col_offset=27), Str('bar', lineno=2194, col_offset=41)], [], None, None, lineno=2194, col_offset=8), lineno=2194, col_offset=8), Expr(Call(Name('raises', Load(), lineno=2195, col_offset=8), [Name('ValueError', Load(), lineno=2195, col_offset=15), Name('add_argument', Load(), lineno=2195, col_offset=27), Str('bar', lineno=2195, col_offset=41)], [keyword('nargs', Str('+', lineno=2195, col_offset=54))], None, None, lineno=2195, col_offset=8), lineno=2195, col_offset=8), Expr(Call(Name('raises', Load(), lineno=2196, col_offset=8), [Name('ValueError', Load(), lineno=2196, col_offset=15), Name('add_argument', Load(), lineno=2196, col_offset=27), Str('bar', lineno=2196, col_offset=41)], [keyword('nargs', Num(1, lineno=2196, col_offset=54))], None, None, lineno=2196, col_offset=8), lineno=2196, col_offset=8), Expr(Call(Name('raises', Load(), lineno=2197, col_offset=8), [Name('ValueError', Load(), lineno=2197, col_offset=15), Name('add_argument', Load(), lineno=2197, col_offset=27), Str('bar', lineno=2197, col_offset=41)], [keyword('nargs', Attribute(Name('argparse', Load(), lineno=2197, col_offset=54), 'PARSER', Load(), lineno=2197, col_offset=54))], None, None, lineno=2197, col_offset=8), lineno=2197, col_offset=8)], [], lineno=2188, col_offset=4), FunctionDef('test_help', arguments([Name('self', Param(), lineno=2199, col_offset=18)], None, None, []), [Assign([Name('parser', Store(), lineno=2200, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=2200, col_offset=17), [], [keyword('prog', Str('PROG', lineno=2200, col_offset=49))], None, None, lineno=2200, col_offset=17), lineno=2200, col_offset=8), Assign([Name('group1', Store(), lineno=2201, col_offset=8)], Call(Attribute(Name('parser', Load(), lineno=2201, col_offset=17), 'add_mutually_exclusive_group', Load(), lineno=2201, col_offset=17), [], [], None, None, lineno=2201, col_offset=17), lineno=2201, col_offset=8), Expr(Call(Attribute(Name('group1', Load(), lineno=2202, col_offset=8), 'add_argument', Load(), lineno=2202, col_offset=8), [Str('--foo', lineno=2202, col_offset=28)], [keyword('action', Str('store_true', lineno=2202, col_offset=44))], None, None, lineno=2202, col_offset=8), lineno=2202, col_offset=8), Expr(Call(Attribute(Name('group1', Load(), lineno=2203, col_offset=8), 'add_argument', Load(), lineno=2203, col_offset=8), [Str('--bar', lineno=2203, col_offset=28)], [keyword('action', Str('store_false', lineno=2203, col_offset=44))], None, None, lineno=2203, col_offset=8), lineno=2203, col_offset=8), Assign([Name('group2', Store(), lineno=2204, col_offset=8)], Call(Attribute(Name('parser', Load(), lineno=2204, col_offset=17), 'add_mutually_exclusive_group', Load(), lineno=2204, col_offset=17), [], [], None, None, lineno=2204, col_offset=17), lineno=2204, col_offset=8), Expr(Call(Attribute(Name('group2', Load(), lineno=2205, col_offset=8), 'add_argument', Load(), lineno=2205, col_offset=8), [Str('--soup', lineno=2205, col_offset=28)], [keyword('action', Str('store_true', lineno=2205, col_offset=45))], None, None, lineno=2205, col_offset=8), lineno=2205, col_offset=8), Expr(Call(Attribute(Name('group2', Load(), lineno=2206, col_offset=8), 'add_argument', Load(), lineno=2206, col_offset=8), [Str('--nuts', lineno=2206, col_offset=28)], [keyword('action', Str('store_false', lineno=2206, col_offset=45))], None, None, lineno=2206, col_offset=8), lineno=2206, col_offset=8), Assign([Name('expected', Store(), lineno=2207, col_offset=8)], Str('            usage: PROG [-h] [--foo | --bar] [--soup | --nuts]\n\n            optional arguments:\n              -h, --help  show this help message and exit\n              --foo\n              --bar\n              --soup\n              --nuts\n              ', lineno=2216, col_offset=-1), lineno=2207, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2217, col_offset=8), 'assertEqual', Load(), lineno=2217, col_offset=8), [Call(Attribute(Name('parser', Load(), lineno=2217, col_offset=25), 'format_help', Load(), lineno=2217, col_offset=25), [], [], None, None, lineno=2217, col_offset=25), Call(Attribute(Name('textwrap', Load(), lineno=2217, col_offset=47), 'dedent', Load(), lineno=2217, col_offset=47), [Name('expected', Load(), lineno=2217, col_offset=63)], [], None, None, lineno=2217, col_offset=47)], [], None, None, lineno=2217, col_offset=8), lineno=2217, col_offset=8)], [], lineno=2199, col_offset=4)], [], lineno=2181, col_offset=0), ClassDef('MEMixin', [Name('object', Load(), lineno=2219, col_offset=14)], [FunctionDef('test_failures_when_not_required', arguments([Name('self', Param(), lineno=2221, col_offset=40)], None, None, []), [Assign([Name('parse_args', Store(), lineno=2222, col_offset=8)], Attribute(Call(Attribute(Name('self', Load(), lineno=2222, col_offset=21), 'get_parser', Load(), lineno=2222, col_offset=21), [], [keyword('required', Name('False', Load(), lineno=2222, col_offset=46))], None, None, lineno=2222, col_offset=21), 'parse_args', Load(), lineno=2222, col_offset=21), lineno=2222, col_offset=8), Assign([Name('error', Store(), lineno=2223, col_offset=8)], Name('ArgumentParserError', Load(), lineno=2223, col_offset=16), lineno=2223, col_offset=8), For(Name('args_string', Store(), lineno=2224, col_offset=12), Attribute(Name('self', Load(), lineno=2224, col_offset=27), 'failures', Load(), lineno=2224, col_offset=27), [Expr(Call(Attribute(Name('self', Load(), lineno=2225, col_offset=12), 'assertRaises', Load(), lineno=2225, col_offset=12), [Name('error', Load(), lineno=2225, col_offset=30), Name('parse_args', Load(), lineno=2225, col_offset=37), Call(Attribute(Name('args_string', Load(), lineno=2225, col_offset=49), 'split', Load(), lineno=2225, col_offset=49), [], [], None, None, lineno=2225, col_offset=49)], [], None, None, lineno=2225, col_offset=12), lineno=2225, col_offset=12)], [], lineno=2224, col_offset=8)], [], lineno=2221, col_offset=4), FunctionDef('test_failures_when_required', arguments([Name('self', Param(), lineno=2227, col_offset=36)], None, None, []), [Assign([Name('parse_args', Store(), lineno=2228, col_offset=8)], Attribute(Call(Attribute(Name('self', Load(), lineno=2228, col_offset=21), 'get_parser', Load(), lineno=2228, col_offset=21), [], [keyword('required', Name('True', Load(), lineno=2228, col_offset=46))], None, None, lineno=2228, col_offset=21), 'parse_args', Load(), lineno=2228, col_offset=21), lineno=2228, col_offset=8), Assign([Name('error', Store(), lineno=2229, col_offset=8)], Name('ArgumentParserError', Load(), lineno=2229, col_offset=16), lineno=2229, col_offset=8), For(Name('args_string', Store(), lineno=2230, col_offset=12), BinOp(Attribute(Name('self', Load(), lineno=2230, col_offset=27), 'failures', Load(), lineno=2230, col_offset=27), Add(), List([Str('', lineno=2230, col_offset=44)], Load(), lineno=2230, col_offset=43), lineno=2230, col_offset=27), [Expr(Call(Attribute(Name('self', Load(), lineno=2231, col_offset=12), 'assertRaises', Load(), lineno=2231, col_offset=12), [Name('error', Load(), lineno=2231, col_offset=30), Name('parse_args', Load(), lineno=2231, col_offset=37), Call(Attribute(Name('args_string', Load(), lineno=2231, col_offset=49), 'split', Load(), lineno=2231, col_offset=49), [], [], None, None, lineno=2231, col_offset=49)], [], None, None, lineno=2231, col_offset=12), lineno=2231, col_offset=12)], [], lineno=2230, col_offset=8)], [], lineno=2227, col_offset=4), FunctionDef('test_successes_when_not_required', arguments([Name('self', Param(), lineno=2233, col_offset=41)], None, None, []), [Assign([Name('parse_args', Store(), lineno=2234, col_offset=8)], Attribute(Call(Attribute(Name('self', Load(), lineno=2234, col_offset=21), 'get_parser', Load(), lineno=2234, col_offset=21), [], [keyword('required', Name('False', Load(), lineno=2234, col_offset=46))], None, None, lineno=2234, col_offset=21), 'parse_args', Load(), lineno=2234, col_offset=21), lineno=2234, col_offset=8), Assign([Name('successes', Store(), lineno=2235, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=2235, col_offset=20), 'successes', Load(), lineno=2235, col_offset=20), Add(), Attribute(Name('self', Load(), lineno=2235, col_offset=37), 'successes_when_not_required', Load(), lineno=2235, col_offset=37), lineno=2235, col_offset=20), lineno=2235, col_offset=8), For(Tuple([Name('args_string', Store(), lineno=2236, col_offset=12), Name('expected_ns', Store(), lineno=2236, col_offset=25)], Store(), lineno=2236, col_offset=12), Name('successes', Load(), lineno=2236, col_offset=40), [Assign([Name('actual_ns', Store(), lineno=2237, col_offset=12)], Call(Name('parse_args', Load(), lineno=2237, col_offset=24), [Call(Attribute(Name('args_string', Load(), lineno=2237, col_offset=35), 'split', Load(), lineno=2237, col_offset=35), [], [], None, None, lineno=2237, col_offset=35)], [], None, None, lineno=2237, col_offset=24), lineno=2237, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=2238, col_offset=12), 'assertEqual', Load(), lineno=2238, col_offset=12), [Name('actual_ns', Load(), lineno=2238, col_offset=29), Name('expected_ns', Load(), lineno=2238, col_offset=40)], [], None, None, lineno=2238, col_offset=12), lineno=2238, col_offset=12)], [], lineno=2236, col_offset=8)], [], lineno=2233, col_offset=4), FunctionDef('test_successes_when_required', arguments([Name('self', Param(), lineno=2240, col_offset=37)], None, None, []), [Assign([Name('parse_args', Store(), lineno=2241, col_offset=8)], Attribute(Call(Attribute(Name('self', Load(), lineno=2241, col_offset=21), 'get_parser', Load(), lineno=2241, col_offset=21), [], [keyword('required', Name('True', Load(), lineno=2241, col_offset=46))], None, None, lineno=2241, col_offset=21), 'parse_args', Load(), lineno=2241, col_offset=21), lineno=2241, col_offset=8), For(Tuple([Name('args_string', Store(), lineno=2242, col_offset=12), Name('expected_ns', Store(), lineno=2242, col_offset=25)], Store(), lineno=2242, col_offset=12), Attribute(Name('self', Load(), lineno=2242, col_offset=40), 'successes', Load(), lineno=2242, col_offset=40), [Assign([Name('actual_ns', Store(), lineno=2243, col_offset=12)], Call(Name('parse_args', Load(), lineno=2243, col_offset=24), [Call(Attribute(Name('args_string', Load(), lineno=2243, col_offset=35), 'split', Load(), lineno=2243, col_offset=35), [], [], None, None, lineno=2243, col_offset=35)], [], None, None, lineno=2243, col_offset=24), lineno=2243, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=2244, col_offset=12), 'assertEqual', Load(), lineno=2244, col_offset=12), [Name('actual_ns', Load(), lineno=2244, col_offset=29), Name('expected_ns', Load(), lineno=2244, col_offset=40)], [], None, None, lineno=2244, col_offset=12), lineno=2244, col_offset=12)], [], lineno=2242, col_offset=8)], [], lineno=2240, col_offset=4), FunctionDef('test_usage_when_not_required', arguments([Name('self', Param(), lineno=2246, col_offset=37)], None, None, []), [Assign([Name('format_usage', Store(), lineno=2247, col_offset=8)], Attribute(Call(Attribute(Name('self', Load(), lineno=2247, col_offset=23), 'get_parser', Load(), lineno=2247, col_offset=23), [], [keyword('required', Name('False', Load(), lineno=2247, col_offset=48))], None, None, lineno=2247, col_offset=23), 'format_usage', Load(), lineno=2247, col_offset=23), lineno=2247, col_offset=8), Assign([Name('expected_usage', Store(), lineno=2248, col_offset=8)], Attribute(Name('self', Load(), lineno=2248, col_offset=25), 'usage_when_not_required', Load(), lineno=2248, col_offset=25), lineno=2248, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2249, col_offset=8), 'assertEqual', Load(), lineno=2249, col_offset=8), [Call(Name('format_usage', Load(), lineno=2249, col_offset=25), [], [], None, None, lineno=2249, col_offset=25), Call(Attribute(Name('textwrap', Load(), lineno=2249, col_offset=41), 'dedent', Load(), lineno=2249, col_offset=41), [Name('expected_usage', Load(), lineno=2249, col_offset=57)], [], None, None, lineno=2249, col_offset=41)], [], None, None, lineno=2249, col_offset=8), lineno=2249, col_offset=8)], [], lineno=2246, col_offset=4), FunctionDef('test_usage_when_required', arguments([Name('self', Param(), lineno=2251, col_offset=33)], None, None, []), [Assign([Name('format_usage', Store(), lineno=2252, col_offset=8)], Attribute(Call(Attribute(Name('self', Load(), lineno=2252, col_offset=23), 'get_parser', Load(), lineno=2252, col_offset=23), [], [keyword('required', Name('True', Load(), lineno=2252, col_offset=48))], None, None, lineno=2252, col_offset=23), 'format_usage', Load(), lineno=2252, col_offset=23), lineno=2252, col_offset=8), Assign([Name('expected_usage', Store(), lineno=2253, col_offset=8)], Attribute(Name('self', Load(), lineno=2253, col_offset=25), 'usage_when_required', Load(), lineno=2253, col_offset=25), lineno=2253, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2254, col_offset=8), 'assertEqual', Load(), lineno=2254, col_offset=8), [Call(Name('format_usage', Load(), lineno=2254, col_offset=25), [], [], None, None, lineno=2254, col_offset=25), Call(Attribute(Name('textwrap', Load(), lineno=2254, col_offset=41), 'dedent', Load(), lineno=2254, col_offset=41), [Name('expected_usage', Load(), lineno=2254, col_offset=57)], [], None, None, lineno=2254, col_offset=41)], [], None, None, lineno=2254, col_offset=8), lineno=2254, col_offset=8)], [], lineno=2251, col_offset=4), FunctionDef('test_help_when_not_required', arguments([Name('self', Param(), lineno=2256, col_offset=36)], None, None, []), [Assign([Name('format_help', Store(), lineno=2257, col_offset=8)], Attribute(Call(Attribute(Name('self', Load(), lineno=2257, col_offset=22), 'get_parser', Load(), lineno=2257, col_offset=22), [], [keyword('required', Name('False', Load(), lineno=2257, col_offset=47))], None, None, lineno=2257, col_offset=22), 'format_help', Load(), lineno=2257, col_offset=22), lineno=2257, col_offset=8), Assign([Name('help', Store(), lineno=2258, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=2258, col_offset=15), 'usage_when_not_required', Load(), lineno=2258, col_offset=15), Add(), Attribute(Name('self', Load(), lineno=2258, col_offset=46), 'help', Load(), lineno=2258, col_offset=46), lineno=2258, col_offset=15), lineno=2258, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2259, col_offset=8), 'assertEqual', Load(), lineno=2259, col_offset=8), [Call(Name('format_help', Load(), lineno=2259, col_offset=25), [], [], None, None, lineno=2259, col_offset=25), Call(Attribute(Name('textwrap', Load(), lineno=2259, col_offset=40), 'dedent', Load(), lineno=2259, col_offset=40), [Name('help', Load(), lineno=2259, col_offset=56)], [], None, None, lineno=2259, col_offset=40)], [], None, None, lineno=2259, col_offset=8), lineno=2259, col_offset=8)], [], lineno=2256, col_offset=4), FunctionDef('test_help_when_required', arguments([Name('self', Param(), lineno=2261, col_offset=32)], None, None, []), [Assign([Name('format_help', Store(), lineno=2262, col_offset=8)], Attribute(Call(Attribute(Name('self', Load(), lineno=2262, col_offset=22), 'get_parser', Load(), lineno=2262, col_offset=22), [], [keyword('required', Name('True', Load(), lineno=2262, col_offset=47))], None, None, lineno=2262, col_offset=22), 'format_help', Load(), lineno=2262, col_offset=22), lineno=2262, col_offset=8), Assign([Name('help', Store(), lineno=2263, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=2263, col_offset=15), 'usage_when_required', Load(), lineno=2263, col_offset=15), Add(), Attribute(Name('self', Load(), lineno=2263, col_offset=42), 'help', Load(), lineno=2263, col_offset=42), lineno=2263, col_offset=15), lineno=2263, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2264, col_offset=8), 'assertEqual', Load(), lineno=2264, col_offset=8), [Call(Name('format_help', Load(), lineno=2264, col_offset=25), [], [], None, None, lineno=2264, col_offset=25), Call(Attribute(Name('textwrap', Load(), lineno=2264, col_offset=40), 'dedent', Load(), lineno=2264, col_offset=40), [Name('help', Load(), lineno=2264, col_offset=56)], [], None, None, lineno=2264, col_offset=40)], [], None, None, lineno=2264, col_offset=8), lineno=2264, col_offset=8)], [], lineno=2261, col_offset=4)], [], lineno=2219, col_offset=0), ClassDef('TestMutuallyExclusiveSimple', [Name('MEMixin', Load(), lineno=2267, col_offset=34), Name('TestCase', Load(), lineno=2267, col_offset=43)], [FunctionDef('get_parser', arguments([Name('self', Param(), lineno=2269, col_offset=19), Name('required', Param(), lineno=2269, col_offset=25)], None, None, [Name('None', Load(), lineno=2269, col_offset=34)]), [Assign([Name('parser', Store(), lineno=2270, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=2270, col_offset=17), [], [keyword('prog', Str('PROG', lineno=2270, col_offset=49))], None, None, lineno=2270, col_offset=17), lineno=2270, col_offset=8), Assign([Name('group', Store(), lineno=2271, col_offset=8)], Call(Attribute(Name('parser', Load(), lineno=2271, col_offset=16), 'add_mutually_exclusive_group', Load(), lineno=2271, col_offset=16), [], [keyword('required', Name('required', Load(), lineno=2271, col_offset=61))], None, None, lineno=2271, col_offset=16), lineno=2271, col_offset=8), Expr(Call(Attribute(Name('group', Load(), lineno=2272, col_offset=8), 'add_argument', Load(), lineno=2272, col_offset=8), [Str('--bar', lineno=2272, col_offset=27)], [keyword('help', Str('bar help', lineno=2272, col_offset=41))], None, None, lineno=2272, col_offset=8), lineno=2272, col_offset=8), Expr(Call(Attribute(Name('group', Load(), lineno=2273, col_offset=8), 'add_argument', Load(), lineno=2273, col_offset=8), [Str('--baz', lineno=2273, col_offset=27)], [keyword('nargs', Str('?', lineno=2273, col_offset=42)), keyword('const', Str('Z', lineno=2273, col_offset=53)), keyword('help', Str('baz help', lineno=2273, col_offset=63))], None, None, lineno=2273, col_offset=8), lineno=2273, col_offset=8), Return(Name('parser', Load(), lineno=2274, col_offset=15), lineno=2274, col_offset=8)], [], lineno=2269, col_offset=4), Assign([Name('failures', Store(), lineno=2276, col_offset=4)], List([Str('--bar X --baz Y', lineno=2276, col_offset=16), Str('--bar X --baz', lineno=2276, col_offset=35)], Load(), lineno=2276, col_offset=15), lineno=2276, col_offset=4), Assign([Name('successes', Store(), lineno=2277, col_offset=4)], List([Tuple([Str('--bar X', lineno=2278, col_offset=9), Call(Name('NS', Load(), lineno=2278, col_offset=20), [], [keyword('bar', Str('X', lineno=2278, col_offset=27)), keyword('baz', Name('None', Load(), lineno=2278, col_offset=36))], None, None, lineno=2278, col_offset=20)], Load(), lineno=2278, col_offset=9), Tuple([Str('--bar X --bar Z', lineno=2279, col_offset=9), Call(Name('NS', Load(), lineno=2279, col_offset=28), [], [keyword('bar', Str('Z', lineno=2279, col_offset=35)), keyword('baz', Name('None', Load(), lineno=2279, col_offset=44))], None, None, lineno=2279, col_offset=28)], Load(), lineno=2279, col_offset=9), Tuple([Str('--baz Y', lineno=2280, col_offset=9), Call(Name('NS', Load(), lineno=2280, col_offset=20), [], [keyword('bar', Name('None', Load(), lineno=2280, col_offset=27)), keyword('baz', Str('Y', lineno=2280, col_offset=37))], None, None, lineno=2280, col_offset=20)], Load(), lineno=2280, col_offset=9), Tuple([Str('--baz', lineno=2281, col_offset=9), Call(Name('NS', Load(), lineno=2281, col_offset=18), [], [keyword('bar', Name('None', Load(), lineno=2281, col_offset=25)), keyword('baz', Str('Z', lineno=2281, col_offset=35))], None, None, lineno=2281, col_offset=18)], Load(), lineno=2281, col_offset=9)], Load(), lineno=2277, col_offset=16), lineno=2277, col_offset=4), Assign([Name('successes_when_not_required', Store(), lineno=2283, col_offset=4)], List([Tuple([Str('', lineno=2284, col_offset=9), Call(Name('NS', Load(), lineno=2284, col_offset=13), [], [keyword('bar', Name('None', Load(), lineno=2284, col_offset=20)), keyword('baz', Name('None', Load(), lineno=2284, col_offset=30))], None, None, lineno=2284, col_offset=13)], Load(), lineno=2284, col_offset=9)], Load(), lineno=2283, col_offset=34), lineno=2283, col_offset=4), Assign([Name('usage_when_not_required', Store(), lineno=2287, col_offset=4)], Str('        usage: PROG [-h] [--bar BAR | --baz [BAZ]]\n        ', lineno=2289, col_offset=-1), lineno=2287, col_offset=4), Assign([Name('usage_when_required', Store(), lineno=2290, col_offset=4)], Str('        usage: PROG [-h] (--bar BAR | --baz [BAZ])\n        ', lineno=2292, col_offset=-1), lineno=2290, col_offset=4), Assign([Name('help', Store(), lineno=2293, col_offset=4)], Str('\n        optional arguments:\n          -h, --help   show this help message and exit\n          --bar BAR    bar help\n          --baz [BAZ]  baz help\n        ', lineno=2299, col_offset=-1), lineno=2293, col_offset=4)], [], lineno=2267, col_offset=0), ClassDef('TestMutuallyExclusiveLong', [Name('MEMixin', Load(), lineno=2302, col_offset=32), Name('TestCase', Load(), lineno=2302, col_offset=41)], [FunctionDef('get_parser', arguments([Name('self', Param(), lineno=2304, col_offset=19), Name('required', Param(), lineno=2304, col_offset=25)], None, None, [Name('None', Load(), lineno=2304, col_offset=34)]), [Assign([Name('parser', Store(), lineno=2305, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=2305, col_offset=17), [], [keyword('prog', Str('PROG', lineno=2305, col_offset=49))], None, None, lineno=2305, col_offset=17), lineno=2305, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=2306, col_offset=8), 'add_argument', Load(), lineno=2306, col_offset=8), [Str('--abcde', lineno=2306, col_offset=28)], [keyword('help', Str('abcde help', lineno=2306, col_offset=44))], None, None, lineno=2306, col_offset=8), lineno=2306, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=2307, col_offset=8), 'add_argument', Load(), lineno=2307, col_offset=8), [Str('--fghij', lineno=2307, col_offset=28)], [keyword('help', Str('fghij help', lineno=2307, col_offset=44))], None, None, lineno=2307, col_offset=8), lineno=2307, col_offset=8), Assign([Name('group', Store(), lineno=2308, col_offset=8)], Call(Attribute(Name('parser', Load(), lineno=2308, col_offset=16), 'add_mutually_exclusive_group', Load(), lineno=2308, col_offset=16), [], [keyword('required', Name('required', Load(), lineno=2308, col_offset=61))], None, None, lineno=2308, col_offset=16), lineno=2308, col_offset=8), Expr(Call(Attribute(Name('group', Load(), lineno=2309, col_offset=8), 'add_argument', Load(), lineno=2309, col_offset=8), [Str('--klmno', lineno=2309, col_offset=27)], [keyword('help', Str('klmno help', lineno=2309, col_offset=43))], None, None, lineno=2309, col_offset=8), lineno=2309, col_offset=8), Expr(Call(Attribute(Name('group', Load(), lineno=2310, col_offset=8), 'add_argument', Load(), lineno=2310, col_offset=8), [Str('--pqrst', lineno=2310, col_offset=27)], [keyword('help', Str('pqrst help', lineno=2310, col_offset=43))], None, None, lineno=2310, col_offset=8), lineno=2310, col_offset=8), Return(Name('parser', Load(), lineno=2311, col_offset=15), lineno=2311, col_offset=8)], [], lineno=2304, col_offset=4), Assign([Name('failures', Store(), lineno=2313, col_offset=4)], List([Str('--klmno X --pqrst Y', lineno=2313, col_offset=16)], Load(), lineno=2313, col_offset=15), lineno=2313, col_offset=4), Assign([Name('successes', Store(), lineno=2314, col_offset=4)], List([Tuple([Str('--klmno X', lineno=2315, col_offset=9), Call(Name('NS', Load(), lineno=2315, col_offset=22), [], [keyword('abcde', Name('None', Load(), lineno=2315, col_offset=31)), keyword('fghij', Name('None', Load(), lineno=2315, col_offset=43)), keyword('klmno', Str('X', lineno=2315, col_offset=55)), keyword('pqrst', Name('None', Load(), lineno=2315, col_offset=66))], None, None, lineno=2315, col_offset=22)], Load(), lineno=2315, col_offset=9), Tuple([Str('--abcde Y --klmno X', lineno=2316, col_offset=9), Call(Name('NS', Load(), lineno=2317, col_offset=12), [], [keyword('abcde', Str('Y', lineno=2317, col_offset=21)), keyword('fghij', Name('None', Load(), lineno=2317, col_offset=32)), keyword('klmno', Str('X', lineno=2317, col_offset=44)), keyword('pqrst', Name('None', Load(), lineno=2317, col_offset=55))], None, None, lineno=2317, col_offset=12)], Load(), lineno=2316, col_offset=9), Tuple([Str('--pqrst X', lineno=2318, col_offset=9), Call(Name('NS', Load(), lineno=2318, col_offset=22), [], [keyword('abcde', Name('None', Load(), lineno=2318, col_offset=31)), keyword('fghij', Name('None', Load(), lineno=2318, col_offset=43)), keyword('klmno', Name('None', Load(), lineno=2318, col_offset=55)), keyword('pqrst', Str('X', lineno=2318, col_offset=67))], None, None, lineno=2318, col_offset=22)], Load(), lineno=2318, col_offset=9), Tuple([Str('--pqrst X --fghij Y', lineno=2319, col_offset=9), Call(Name('NS', Load(), lineno=2320, col_offset=12), [], [keyword('abcde', Name('None', Load(), lineno=2320, col_offset=21)), keyword('fghij', Str('Y', lineno=2320, col_offset=33)), keyword('klmno', Name('None', Load(), lineno=2320, col_offset=44)), keyword('pqrst', Str('X', lineno=2320, col_offset=56))], None, None, lineno=2320, col_offset=12)], Load(), lineno=2319, col_offset=9)], Load(), lineno=2314, col_offset=16), lineno=2314, col_offset=4), Assign([Name('successes_when_not_required', Store(), lineno=2322, col_offset=4)], List([Tuple([Str('', lineno=2323, col_offset=9), Call(Name('NS', Load(), lineno=2323, col_offset=13), [], [keyword('abcde', Name('None', Load(), lineno=2323, col_offset=22)), keyword('fghij', Name('None', Load(), lineno=2323, col_offset=34)), keyword('klmno', Name('None', Load(), lineno=2323, col_offset=46)), keyword('pqrst', Name('None', Load(), lineno=2323, col_offset=58))], None, None, lineno=2323, col_offset=13)], Load(), lineno=2323, col_offset=9)], Load(), lineno=2322, col_offset=34), lineno=2322, col_offset=4), Assign([Name('usage_when_not_required', Store(), lineno=2326, col_offset=4)], Str('    usage: PROG [-h] [--abcde ABCDE] [--fghij FGHIJ]\n                [--klmno KLMNO | --pqrst PQRST]\n    ', lineno=2329, col_offset=-1), lineno=2326, col_offset=4), Assign([Name('usage_when_required', Store(), lineno=2330, col_offset=4)], Str('    usage: PROG [-h] [--abcde ABCDE] [--fghij FGHIJ]\n                (--klmno KLMNO | --pqrst PQRST)\n    ', lineno=2333, col_offset=-1), lineno=2330, col_offset=4), Assign([Name('help', Store(), lineno=2334, col_offset=4)], Str('\n    optional arguments:\n      -h, --help     show this help message and exit\n      --abcde ABCDE  abcde help\n      --fghij FGHIJ  fghij help\n      --klmno KLMNO  klmno help\n      --pqrst PQRST  pqrst help\n    ', lineno=2342, col_offset=-1), lineno=2334, col_offset=4)], [], lineno=2302, col_offset=0), ClassDef('TestMutuallyExclusiveFirstSuppressed', [Name('MEMixin', Load(), lineno=2345, col_offset=43), Name('TestCase', Load(), lineno=2345, col_offset=52)], [FunctionDef('get_parser', arguments([Name('self', Param(), lineno=2347, col_offset=19), Name('required', Param(), lineno=2347, col_offset=25)], None, None, []), [Assign([Name('parser', Store(), lineno=2348, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=2348, col_offset=17), [], [keyword('prog', Str('PROG', lineno=2348, col_offset=49))], None, None, lineno=2348, col_offset=17), lineno=2348, col_offset=8), Assign([Name('group', Store(), lineno=2349, col_offset=8)], Call(Attribute(Name('parser', Load(), lineno=2349, col_offset=16), 'add_mutually_exclusive_group', Load(), lineno=2349, col_offset=16), [], [keyword('required', Name('required', Load(), lineno=2349, col_offset=61))], None, None, lineno=2349, col_offset=16), lineno=2349, col_offset=8), Expr(Call(Attribute(Name('group', Load(), lineno=2350, col_offset=8), 'add_argument', Load(), lineno=2350, col_offset=8), [Str('-x', lineno=2350, col_offset=27)], [keyword('help', Attribute(Name('argparse', Load(), lineno=2350, col_offset=38), 'SUPPRESS', Load(), lineno=2350, col_offset=38))], None, None, lineno=2350, col_offset=8), lineno=2350, col_offset=8), Expr(Call(Attribute(Name('group', Load(), lineno=2351, col_offset=8), 'add_argument', Load(), lineno=2351, col_offset=8), [Str('-y', lineno=2351, col_offset=27)], [keyword('action', Str('store_false', lineno=2351, col_offset=40)), keyword('help', Str('y help', lineno=2351, col_offset=60))], None, None, lineno=2351, col_offset=8), lineno=2351, col_offset=8), Return(Name('parser', Load(), lineno=2352, col_offset=15), lineno=2352, col_offset=8)], [], lineno=2347, col_offset=4), Assign([Name('failures', Store(), lineno=2354, col_offset=4)], List([Str('-x X -y', lineno=2354, col_offset=16)], Load(), lineno=2354, col_offset=15), lineno=2354, col_offset=4), Assign([Name('successes', Store(), lineno=2355, col_offset=4)], List([Tuple([Str('-x X', lineno=2356, col_offset=9), Call(Name('NS', Load(), lineno=2356, col_offset=17), [], [keyword('x', Str('X', lineno=2356, col_offset=22)), keyword('y', Name('True', Load(), lineno=2356, col_offset=29))], None, None, lineno=2356, col_offset=17)], Load(), lineno=2356, col_offset=9), Tuple([Str('-x X -x Y', lineno=2357, col_offset=9), Call(Name('NS', Load(), lineno=2357, col_offset=22), [], [keyword('x', Str('Y', lineno=2357, col_offset=27)), keyword('y', Name('True', Load(), lineno=2357, col_offset=34))], None, None, lineno=2357, col_offset=22)], Load(), lineno=2357, col_offset=9), Tuple([Str('-y', lineno=2358, col_offset=9), Call(Name('NS', Load(), lineno=2358, col_offset=15), [], [keyword('x', Name('None', Load(), lineno=2358, col_offset=20)), keyword('y', Name('False', Load(), lineno=2358, col_offset=28))], None, None, lineno=2358, col_offset=15)], Load(), lineno=2358, col_offset=9)], Load(), lineno=2355, col_offset=16), lineno=2355, col_offset=4), Assign([Name('successes_when_not_required', Store(), lineno=2360, col_offset=4)], List([Tuple([Str('', lineno=2361, col_offset=9), Call(Name('NS', Load(), lineno=2361, col_offset=13), [], [keyword('x', Name('None', Load(), lineno=2361, col_offset=18)), keyword('y', Name('True', Load(), lineno=2361, col_offset=26))], None, None, lineno=2361, col_offset=13)], Load(), lineno=2361, col_offset=9)], Load(), lineno=2360, col_offset=34), lineno=2360, col_offset=4), Assign([Name('usage_when_not_required', Store(), lineno=2364, col_offset=4)], Str('        usage: PROG [-h] [-y]\n        ', lineno=2366, col_offset=-1), lineno=2364, col_offset=4), Assign([Name('usage_when_required', Store(), lineno=2367, col_offset=4)], Str('        usage: PROG [-h] -y\n        ', lineno=2369, col_offset=-1), lineno=2367, col_offset=4), Assign([Name('help', Store(), lineno=2370, col_offset=4)], Str('\n        optional arguments:\n          -h, --help  show this help message and exit\n          -y          y help\n        ', lineno=2375, col_offset=-1), lineno=2370, col_offset=4)], [], lineno=2345, col_offset=0), ClassDef('TestMutuallyExclusiveManySuppressed', [Name('MEMixin', Load(), lineno=2378, col_offset=42), Name('TestCase', Load(), lineno=2378, col_offset=51)], [FunctionDef('get_parser', arguments([Name('self', Param(), lineno=2380, col_offset=19), Name('required', Param(), lineno=2380, col_offset=25)], None, None, []), [Assign([Name('parser', Store(), lineno=2381, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=2381, col_offset=17), [], [keyword('prog', Str('PROG', lineno=2381, col_offset=49))], None, None, lineno=2381, col_offset=17), lineno=2381, col_offset=8), Assign([Name('group', Store(), lineno=2382, col_offset=8)], Call(Attribute(Name('parser', Load(), lineno=2382, col_offset=16), 'add_mutually_exclusive_group', Load(), lineno=2382, col_offset=16), [], [keyword('required', Name('required', Load(), lineno=2382, col_offset=61))], None, None, lineno=2382, col_offset=16), lineno=2382, col_offset=8), Assign([Name('add', Store(), lineno=2383, col_offset=8)], Attribute(Name('group', Load(), lineno=2383, col_offset=14), 'add_argument', Load(), lineno=2383, col_offset=14), lineno=2383, col_offset=8), Expr(Call(Name('add', Load(), lineno=2384, col_offset=8), [Str('--spam', lineno=2384, col_offset=12)], [keyword('action', Str('store_true', lineno=2384, col_offset=29)), keyword('help', Attribute(Name('argparse', Load(), lineno=2384, col_offset=48), 'SUPPRESS', Load(), lineno=2384, col_offset=48))], None, None, lineno=2384, col_offset=8), lineno=2384, col_offset=8), Expr(Call(Name('add', Load(), lineno=2385, col_offset=8), [Str('--badger', lineno=2385, col_offset=12)], [keyword('action', Str('store_false', lineno=2385, col_offset=31)), keyword('help', Attribute(Name('argparse', Load(), lineno=2385, col_offset=51), 'SUPPRESS', Load(), lineno=2385, col_offset=51))], None, None, lineno=2385, col_offset=8), lineno=2385, col_offset=8), Expr(Call(Name('add', Load(), lineno=2386, col_offset=8), [Str('--bladder', lineno=2386, col_offset=12)], [keyword('help', Attribute(Name('argparse', Load(), lineno=2386, col_offset=30), 'SUPPRESS', Load(), lineno=2386, col_offset=30))], None, None, lineno=2386, col_offset=8), lineno=2386, col_offset=8), Return(Name('parser', Load(), lineno=2387, col_offset=15), lineno=2387, col_offset=8)], [], lineno=2380, col_offset=4), Assign([Name('failures', Store(), lineno=2389, col_offset=4)], List([Str('--spam --badger', lineno=2390, col_offset=8), Str('--badger --bladder B', lineno=2391, col_offset=8), Str('--bladder B --spam', lineno=2392, col_offset=8)], Load(), lineno=2389, col_offset=15), lineno=2389, col_offset=4), Assign([Name('successes', Store(), lineno=2394, col_offset=4)], List([Tuple([Str('--spam', lineno=2395, col_offset=9), Call(Name('NS', Load(), lineno=2395, col_offset=19), [], [keyword('spam', Name('True', Load(), lineno=2395, col_offset=27)), keyword('badger', Name('True', Load(), lineno=2395, col_offset=40)), keyword('bladder', Name('None', Load(), lineno=2395, col_offset=54))], None, None, lineno=2395, col_offset=19)], Load(), lineno=2395, col_offset=9), Tuple([Str('--badger', lineno=2396, col_offset=9), Call(Name('NS', Load(), lineno=2396, col_offset=21), [], [keyword('spam', Name('False', Load(), lineno=2396, col_offset=29)), keyword('badger', Name('False', Load(), lineno=2396, col_offset=43)), keyword('bladder', Name('None', Load(), lineno=2396, col_offset=58))], None, None, lineno=2396, col_offset=21)], Load(), lineno=2396, col_offset=9), Tuple([Str('--bladder B', lineno=2397, col_offset=9), Call(Name('NS', Load(), lineno=2397, col_offset=24), [], [keyword('spam', Name('False', Load(), lineno=2397, col_offset=32)), keyword('badger', Name('True', Load(), lineno=2397, col_offset=46)), keyword('bladder', Str('B', lineno=2397, col_offset=60))], None, None, lineno=2397, col_offset=24)], Load(), lineno=2397, col_offset=9), Tuple([Str('--spam --spam', lineno=2398, col_offset=9), Call(Name('NS', Load(), lineno=2398, col_offset=26), [], [keyword('spam', Name('True', Load(), lineno=2398, col_offset=34)), keyword('badger', Name('True', Load(), lineno=2398, col_offset=47)), keyword('bladder', Name('None', Load(), lineno=2398, col_offset=61))], None, None, lineno=2398, col_offset=26)], Load(), lineno=2398, col_offset=9)], Load(), lineno=2394, col_offset=16), lineno=2394, col_offset=4), Assign([Name('successes_when_not_required', Store(), lineno=2400, col_offset=4)], List([Tuple([Str('', lineno=2401, col_offset=9), Call(Name('NS', Load(), lineno=2401, col_offset=13), [], [keyword('spam', Name('False', Load(), lineno=2401, col_offset=21)), keyword('badger', Name('True', Load(), lineno=2401, col_offset=35)), keyword('bladder', Name('None', Load(), lineno=2401, col_offset=49))], None, None, lineno=2401, col_offset=13)], Load(), lineno=2401, col_offset=9)], Load(), lineno=2400, col_offset=34), lineno=2400, col_offset=4), Assign([Name('usage_when_required', Store(), lineno=2404, col_offset=4), Name('usage_when_not_required', Store(), lineno=2404, col_offset=26)], Str('        usage: PROG [-h]\n        ', lineno=2406, col_offset=-1), lineno=2404, col_offset=4), Assign([Name('help', Store(), lineno=2407, col_offset=4)], Str('\n        optional arguments:\n          -h, --help  show this help message and exit\n        ', lineno=2411, col_offset=-1), lineno=2407, col_offset=4)], [], lineno=2378, col_offset=0), ClassDef('TestMutuallyExclusiveOptionalAndPositional', [Name('MEMixin', Load(), lineno=2414, col_offset=49), Name('TestCase', Load(), lineno=2414, col_offset=58)], [FunctionDef('get_parser', arguments([Name('self', Param(), lineno=2416, col_offset=19), Name('required', Param(), lineno=2416, col_offset=25)], None, None, []), [Assign([Name('parser', Store(), lineno=2417, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=2417, col_offset=17), [], [keyword('prog', Str('PROG', lineno=2417, col_offset=49))], None, None, lineno=2417, col_offset=17), lineno=2417, col_offset=8), Assign([Name('group', Store(), lineno=2418, col_offset=8)], Call(Attribute(Name('parser', Load(), lineno=2418, col_offset=16), 'add_mutually_exclusive_group', Load(), lineno=2418, col_offset=16), [], [keyword('required', Name('required', Load(), lineno=2418, col_offset=61))], None, None, lineno=2418, col_offset=16), lineno=2418, col_offset=8), Expr(Call(Attribute(Name('group', Load(), lineno=2419, col_offset=8), 'add_argument', Load(), lineno=2419, col_offset=8), [Str('--foo', lineno=2419, col_offset=27)], [keyword('action', Str('store_true', lineno=2419, col_offset=43)), keyword('help', Str('FOO', lineno=2419, col_offset=62))], None, None, lineno=2419, col_offset=8), lineno=2419, col_offset=8), Expr(Call(Attribute(Name('group', Load(), lineno=2420, col_offset=8), 'add_argument', Load(), lineno=2420, col_offset=8), [Str('--spam', lineno=2420, col_offset=27)], [keyword('help', Str('SPAM', lineno=2420, col_offset=42))], None, None, lineno=2420, col_offset=8), lineno=2420, col_offset=8), Expr(Call(Attribute(Name('group', Load(), lineno=2421, col_offset=8), 'add_argument', Load(), lineno=2421, col_offset=8), [Str('badger', lineno=2421, col_offset=27)], [keyword('nargs', Str('*', lineno=2421, col_offset=43)), keyword('default', Str('X', lineno=2421, col_offset=56)), keyword('help', Str('BADGER', lineno=2421, col_offset=66))], None, None, lineno=2421, col_offset=8), lineno=2421, col_offset=8), Return(Name('parser', Load(), lineno=2422, col_offset=15), lineno=2422, col_offset=8)], [], lineno=2416, col_offset=4), Assign([Name('failures', Store(), lineno=2424, col_offset=4)], List([Str('--foo --spam S', lineno=2425, col_offset=8), Str('--spam S X', lineno=2426, col_offset=8), Str('X --foo', lineno=2427, col_offset=8), Str('X Y Z --spam S', lineno=2428, col_offset=8), Str('--foo X Y', lineno=2429, col_offset=8)], Load(), lineno=2424, col_offset=15), lineno=2424, col_offset=4), Assign([Name('successes', Store(), lineno=2431, col_offset=4)], List([Tuple([Str('--foo', lineno=2432, col_offset=9), Call(Name('NS', Load(), lineno=2432, col_offset=18), [], [keyword('foo', Name('True', Load(), lineno=2432, col_offset=25)), keyword('spam', Name('None', Load(), lineno=2432, col_offset=36)), keyword('badger', Str('X', lineno=2432, col_offset=49))], None, None, lineno=2432, col_offset=18)], Load(), lineno=2432, col_offset=9), Tuple([Str('--spam S', lineno=2433, col_offset=9), Call(Name('NS', Load(), lineno=2433, col_offset=21), [], [keyword('foo', Name('False', Load(), lineno=2433, col_offset=28)), keyword('spam', Str('S', lineno=2433, col_offset=40)), keyword('badger', Str('X', lineno=2433, col_offset=52))], None, None, lineno=2433, col_offset=21)], Load(), lineno=2433, col_offset=9), Tuple([Str('X', lineno=2434, col_offset=9), Call(Name('NS', Load(), lineno=2434, col_offset=14), [], [keyword('foo', Name('False', Load(), lineno=2434, col_offset=21)), keyword('spam', Name('None', Load(), lineno=2434, col_offset=33)), keyword('badger', List([Str('X', lineno=2434, col_offset=47)], Load(), lineno=2434, col_offset=46))], None, None, lineno=2434, col_offset=14)], Load(), lineno=2434, col_offset=9), Tuple([Str('X Y Z', lineno=2435, col_offset=9), Call(Name('NS', Load(), lineno=2435, col_offset=18), [], [keyword('foo', Name('False', Load(), lineno=2435, col_offset=25)), keyword('spam', Name('None', Load(), lineno=2435, col_offset=37)), keyword('badger', List([Str('X', lineno=2435, col_offset=51), Str('Y', lineno=2435, col_offset=56), Str('Z', lineno=2435, col_offset=61)], Load(), lineno=2435, col_offset=50))], None, None, lineno=2435, col_offset=18)], Load(), lineno=2435, col_offset=9)], Load(), lineno=2431, col_offset=16), lineno=2431, col_offset=4), Assign([Name('successes_when_not_required', Store(), lineno=2437, col_offset=4)], List([Tuple([Str('', lineno=2438, col_offset=9), Call(Name('NS', Load(), lineno=2438, col_offset=13), [], [keyword('foo', Name('False', Load(), lineno=2438, col_offset=20)), keyword('spam', Name('None', Load(), lineno=2438, col_offset=32)), keyword('badger', Str('X', lineno=2438, col_offset=45))], None, None, lineno=2438, col_offset=13)], Load(), lineno=2438, col_offset=9)], Load(), lineno=2437, col_offset=34), lineno=2437, col_offset=4), Assign([Name('usage_when_not_required', Store(), lineno=2441, col_offset=4)], Str('        usage: PROG [-h] [--foo | --spam SPAM | badger [badger ...]]\n        ', lineno=2443, col_offset=-1), lineno=2441, col_offset=4), Assign([Name('usage_when_required', Store(), lineno=2444, col_offset=4)], Str('        usage: PROG [-h] (--foo | --spam SPAM | badger [badger ...])\n        ', lineno=2446, col_offset=-1), lineno=2444, col_offset=4), Assign([Name('help', Store(), lineno=2447, col_offset=4)], Str('\n        positional arguments:\n          badger       BADGER\n\n        optional arguments:\n          -h, --help   show this help message and exit\n          --foo        FOO\n          --spam SPAM  SPAM\n        ', lineno=2456, col_offset=-1), lineno=2447, col_offset=4)], [], lineno=2414, col_offset=0), ClassDef('TestMutuallyExclusiveOptionalsMixed', [Name('MEMixin', Load(), lineno=2459, col_offset=42), Name('TestCase', Load(), lineno=2459, col_offset=51)], [FunctionDef('get_parser', arguments([Name('self', Param(), lineno=2461, col_offset=19), Name('required', Param(), lineno=2461, col_offset=25)], None, None, []), [Assign([Name('parser', Store(), lineno=2462, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=2462, col_offset=17), [], [keyword('prog', Str('PROG', lineno=2462, col_offset=49))], None, None, lineno=2462, col_offset=17), lineno=2462, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=2463, col_offset=8), 'add_argument', Load(), lineno=2463, col_offset=8), [Str('-x', lineno=2463, col_offset=28)], [keyword('action', Str('store_true', lineno=2463, col_offset=41)), keyword('help', Str('x help', lineno=2463, col_offset=60))], None, None, lineno=2463, col_offset=8), lineno=2463, col_offset=8), Assign([Name('group', Store(), lineno=2464, col_offset=8)], Call(Attribute(Name('parser', Load(), lineno=2464, col_offset=16), 'add_mutually_exclusive_group', Load(), lineno=2464, col_offset=16), [], [keyword('required', Name('required', Load(), lineno=2464, col_offset=61))], None, None, lineno=2464, col_offset=16), lineno=2464, col_offset=8), Expr(Call(Attribute(Name('group', Load(), lineno=2465, col_offset=8), 'add_argument', Load(), lineno=2465, col_offset=8), [Str('-a', lineno=2465, col_offset=27)], [keyword('action', Str('store_true', lineno=2465, col_offset=40)), keyword('help', Str('a help', lineno=2465, col_offset=59))], None, None, lineno=2465, col_offset=8), lineno=2465, col_offset=8), Expr(Call(Attribute(Name('group', Load(), lineno=2466, col_offset=8), 'add_argument', Load(), lineno=2466, col_offset=8), [Str('-b', lineno=2466, col_offset=27)], [keyword('action', Str('store_true', lineno=2466, col_offset=40)), keyword('help', Str('b help', lineno=2466, col_offset=59))], None, None, lineno=2466, col_offset=8), lineno=2466, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=2467, col_offset=8), 'add_argument', Load(), lineno=2467, col_offset=8), [Str('-y', lineno=2467, col_offset=28)], [keyword('action', Str('store_true', lineno=2467, col_offset=41)), keyword('help', Str('y help', lineno=2467, col_offset=60))], None, None, lineno=2467, col_offset=8), lineno=2467, col_offset=8), Expr(Call(Attribute(Name('group', Load(), lineno=2468, col_offset=8), 'add_argument', Load(), lineno=2468, col_offset=8), [Str('-c', lineno=2468, col_offset=27)], [keyword('action', Str('store_true', lineno=2468, col_offset=40)), keyword('help', Str('c help', lineno=2468, col_offset=59))], None, None, lineno=2468, col_offset=8), lineno=2468, col_offset=8), Return(Name('parser', Load(), lineno=2469, col_offset=15), lineno=2469, col_offset=8)], [], lineno=2461, col_offset=4), Assign([Name('failures', Store(), lineno=2471, col_offset=4)], List([Str('-a -b', lineno=2471, col_offset=16), Str('-b -c', lineno=2471, col_offset=25), Str('-a -c', lineno=2471, col_offset=34), Str('-a -b -c', lineno=2471, col_offset=43)], Load(), lineno=2471, col_offset=15), lineno=2471, col_offset=4), Assign([Name('successes', Store(), lineno=2472, col_offset=4)], List([Tuple([Str('-a', lineno=2473, col_offset=9), Call(Name('NS', Load(), lineno=2473, col_offset=15), [], [keyword('a', Name('True', Load(), lineno=2473, col_offset=20)), keyword('b', Name('False', Load(), lineno=2473, col_offset=28)), keyword('c', Name('False', Load(), lineno=2473, col_offset=37)), keyword('x', Name('False', Load(), lineno=2473, col_offset=46)), keyword('y', Name('False', Load(), lineno=2473, col_offset=55))], None, None, lineno=2473, col_offset=15)], Load(), lineno=2473, col_offset=9), Tuple([Str('-b', lineno=2474, col_offset=9), Call(Name('NS', Load(), lineno=2474, col_offset=15), [], [keyword('a', Name('False', Load(), lineno=2474, col_offset=20)), keyword('b', Name('True', Load(), lineno=2474, col_offset=29)), keyword('c', Name('False', Load(), lineno=2474, col_offset=37)), keyword('x', Name('False', Load(), lineno=2474, col_offset=46)), keyword('y', Name('False', Load(), lineno=2474, col_offset=55))], None, None, lineno=2474, col_offset=15)], Load(), lineno=2474, col_offset=9), Tuple([Str('-c', lineno=2475, col_offset=9), Call(Name('NS', Load(), lineno=2475, col_offset=15), [], [keyword('a', Name('False', Load(), lineno=2475, col_offset=20)), keyword('b', Name('False', Load(), lineno=2475, col_offset=29)), keyword('c', Name('True', Load(), lineno=2475, col_offset=38)), keyword('x', Name('False', Load(), lineno=2475, col_offset=46)), keyword('y', Name('False', Load(), lineno=2475, col_offset=55))], None, None, lineno=2475, col_offset=15)], Load(), lineno=2475, col_offset=9), Tuple([Str('-a -x', lineno=2476, col_offset=9), Call(Name('NS', Load(), lineno=2476, col_offset=18), [], [keyword('a', Name('True', Load(), lineno=2476, col_offset=23)), keyword('b', Name('False', Load(), lineno=2476, col_offset=31)), keyword('c', Name('False', Load(), lineno=2476, col_offset=40)), keyword('x', Name('True', Load(), lineno=2476, col_offset=49)), keyword('y', Name('False', Load(), lineno=2476, col_offset=57))], None, None, lineno=2476, col_offset=18)], Load(), lineno=2476, col_offset=9), Tuple([Str('-y -b', lineno=2477, col_offset=9), Call(Name('NS', Load(), lineno=2477, col_offset=18), [], [keyword('a', Name('False', Load(), lineno=2477, col_offset=23)), keyword('b', Name('True', Load(), lineno=2477, col_offset=32)), keyword('c', Name('False', Load(), lineno=2477, col_offset=40)), keyword('x', Name('False', Load(), lineno=2477, col_offset=49)), keyword('y', Name('True', Load(), lineno=2477, col_offset=58))], None, None, lineno=2477, col_offset=18)], Load(), lineno=2477, col_offset=9), Tuple([Str('-x -y -c', lineno=2478, col_offset=9), Call(Name('NS', Load(), lineno=2478, col_offset=21), [], [keyword('a', Name('False', Load(), lineno=2478, col_offset=26)), keyword('b', Name('False', Load(), lineno=2478, col_offset=35)), keyword('c', Name('True', Load(), lineno=2478, col_offset=44)), keyword('x', Name('True', Load(), lineno=2478, col_offset=52)), keyword('y', Name('True', Load(), lineno=2478, col_offset=60))], None, None, lineno=2478, col_offset=21)], Load(), lineno=2478, col_offset=9)], Load(), lineno=2472, col_offset=16), lineno=2472, col_offset=4), Assign([Name('successes_when_not_required', Store(), lineno=2480, col_offset=4)], List([Tuple([Str('', lineno=2481, col_offset=9), Call(Name('NS', Load(), lineno=2481, col_offset=13), [], [keyword('a', Name('False', Load(), lineno=2481, col_offset=18)), keyword('b', Name('False', Load(), lineno=2481, col_offset=27)), keyword('c', Name('False', Load(), lineno=2481, col_offset=36)), keyword('x', Name('False', Load(), lineno=2481, col_offset=45)), keyword('y', Name('False', Load(), lineno=2481, col_offset=54))], None, None, lineno=2481, col_offset=13)], Load(), lineno=2481, col_offset=9), Tuple([Str('-x', lineno=2482, col_offset=9), Call(Name('NS', Load(), lineno=2482, col_offset=15), [], [keyword('a', Name('False', Load(), lineno=2482, col_offset=20)), keyword('b', Name('False', Load(), lineno=2482, col_offset=29)), keyword('c', Name('False', Load(), lineno=2482, col_offset=38)), keyword('x', Name('True', Load(), lineno=2482, col_offset=47)), keyword('y', Name('False', Load(), lineno=2482, col_offset=55))], None, None, lineno=2482, col_offset=15)], Load(), lineno=2482, col_offset=9), Tuple([Str('-y', lineno=2483, col_offset=9), Call(Name('NS', Load(), lineno=2483, col_offset=15), [], [keyword('a', Name('False', Load(), lineno=2483, col_offset=20)), keyword('b', Name('False', Load(), lineno=2483, col_offset=29)), keyword('c', Name('False', Load(), lineno=2483, col_offset=38)), keyword('x', Name('False', Load(), lineno=2483, col_offset=47)), keyword('y', Name('True', Load(), lineno=2483, col_offset=56))], None, None, lineno=2483, col_offset=15)], Load(), lineno=2483, col_offset=9)], Load(), lineno=2480, col_offset=34), lineno=2480, col_offset=4), Assign([Name('usage_when_required', Store(), lineno=2486, col_offset=4), Name('usage_when_not_required', Store(), lineno=2486, col_offset=26)], Str('        usage: PROG [-h] [-x] [-a] [-b] [-y] [-c]\n        ', lineno=2488, col_offset=-1), lineno=2486, col_offset=4), Assign([Name('help', Store(), lineno=2489, col_offset=4)], Str('\n        optional arguments:\n          -h, --help  show this help message and exit\n          -x          x help\n          -a          a help\n          -b          b help\n          -y          y help\n          -c          c help\n        ', lineno=2498, col_offset=-1), lineno=2489, col_offset=4)], [], lineno=2459, col_offset=0), ClassDef('TestMutuallyExclusiveOptionalsAndPositionalsMixed', [Name('MEMixin', Load(), lineno=2501, col_offset=56), Name('TestCase', Load(), lineno=2501, col_offset=65)], [FunctionDef('get_parser', arguments([Name('self', Param(), lineno=2503, col_offset=19), Name('required', Param(), lineno=2503, col_offset=25)], None, None, []), [Assign([Name('parser', Store(), lineno=2504, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=2504, col_offset=17), [], [keyword('prog', Str('PROG', lineno=2504, col_offset=49))], None, None, lineno=2504, col_offset=17), lineno=2504, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=2505, col_offset=8), 'add_argument', Load(), lineno=2505, col_offset=8), [Str('x', lineno=2505, col_offset=28)], [keyword('help', Str('x help', lineno=2505, col_offset=38))], None, None, lineno=2505, col_offset=8), lineno=2505, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=2506, col_offset=8), 'add_argument', Load(), lineno=2506, col_offset=8), [Str('-y', lineno=2506, col_offset=28)], [keyword('action', Str('store_true', lineno=2506, col_offset=41)), keyword('help', Str('y help', lineno=2506, col_offset=60))], None, None, lineno=2506, col_offset=8), lineno=2506, col_offset=8), Assign([Name('group', Store(), lineno=2507, col_offset=8)], Call(Attribute(Name('parser', Load(), lineno=2507, col_offset=16), 'add_mutually_exclusive_group', Load(), lineno=2507, col_offset=16), [], [keyword('required', Name('required', Load(), lineno=2507, col_offset=61))], None, None, lineno=2507, col_offset=16), lineno=2507, col_offset=8), Expr(Call(Attribute(Name('group', Load(), lineno=2508, col_offset=8), 'add_argument', Load(), lineno=2508, col_offset=8), [Str('a', lineno=2508, col_offset=27)], [keyword('nargs', Str('?', lineno=2508, col_offset=38)), keyword('help', Str('a help', lineno=2508, col_offset=48))], None, None, lineno=2508, col_offset=8), lineno=2508, col_offset=8), Expr(Call(Attribute(Name('group', Load(), lineno=2509, col_offset=8), 'add_argument', Load(), lineno=2509, col_offset=8), [Str('-b', lineno=2509, col_offset=27)], [keyword('action', Str('store_true', lineno=2509, col_offset=40)), keyword('help', Str('b help', lineno=2509, col_offset=59))], None, None, lineno=2509, col_offset=8), lineno=2509, col_offset=8), Expr(Call(Attribute(Name('group', Load(), lineno=2510, col_offset=8), 'add_argument', Load(), lineno=2510, col_offset=8), [Str('-c', lineno=2510, col_offset=27)], [keyword('action', Str('store_true', lineno=2510, col_offset=40)), keyword('help', Str('c help', lineno=2510, col_offset=59))], None, None, lineno=2510, col_offset=8), lineno=2510, col_offset=8), Return(Name('parser', Load(), lineno=2511, col_offset=15), lineno=2511, col_offset=8)], [], lineno=2503, col_offset=4), Assign([Name('failures', Store(), lineno=2513, col_offset=4)], List([Str('X A -b', lineno=2513, col_offset=16), Str('-b -c', lineno=2513, col_offset=26), Str('-c X A', lineno=2513, col_offset=35)], Load(), lineno=2513, col_offset=15), lineno=2513, col_offset=4), Assign([Name('successes', Store(), lineno=2514, col_offset=4)], List([Tuple([Str('X A', lineno=2515, col_offset=9), Call(Name('NS', Load(), lineno=2515, col_offset=16), [], [keyword('a', Str('A', lineno=2515, col_offset=21)), keyword('b', Name('False', Load(), lineno=2515, col_offset=28)), keyword('c', Name('False', Load(), lineno=2515, col_offset=37)), keyword('x', Str('X', lineno=2515, col_offset=46)), keyword('y', Name('False', Load(), lineno=2515, col_offset=53))], None, None, lineno=2515, col_offset=16)], Load(), lineno=2515, col_offset=9), Tuple([Str('X -b', lineno=2516, col_offset=9), Call(Name('NS', Load(), lineno=2516, col_offset=17), [], [keyword('a', Name('None', Load(), lineno=2516, col_offset=22)), keyword('b', Name('True', Load(), lineno=2516, col_offset=30)), keyword('c', Name('False', Load(), lineno=2516, col_offset=38)), keyword('x', Str('X', lineno=2516, col_offset=47)), keyword('y', Name('False', Load(), lineno=2516, col_offset=54))], None, None, lineno=2516, col_offset=17)], Load(), lineno=2516, col_offset=9), Tuple([Str('X -c', lineno=2517, col_offset=9), Call(Name('NS', Load(), lineno=2517, col_offset=17), [], [keyword('a', Name('None', Load(), lineno=2517, col_offset=22)), keyword('b', Name('False', Load(), lineno=2517, col_offset=30)), keyword('c', Name('True', Load(), lineno=2517, col_offset=39)), keyword('x', Str('X', lineno=2517, col_offset=47)), keyword('y', Name('False', Load(), lineno=2517, col_offset=54))], None, None, lineno=2517, col_offset=17)], Load(), lineno=2517, col_offset=9), Tuple([Str('X A -y', lineno=2518, col_offset=9), Call(Name('NS', Load(), lineno=2518, col_offset=19), [], [keyword('a', Str('A', lineno=2518, col_offset=24)), keyword('b', Name('False', Load(), lineno=2518, col_offset=31)), keyword('c', Name('False', Load(), lineno=2518, col_offset=40)), keyword('x', Str('X', lineno=2518, col_offset=49)), keyword('y', Name('True', Load(), lineno=2518, col_offset=56))], None, None, lineno=2518, col_offset=19)], Load(), lineno=2518, col_offset=9), Tuple([Str('X -y -b', lineno=2519, col_offset=9), Call(Name('NS', Load(), lineno=2519, col_offset=20), [], [keyword('a', Name('None', Load(), lineno=2519, col_offset=25)), keyword('b', Name('True', Load(), lineno=2519, col_offset=33)), keyword('c', Name('False', Load(), lineno=2519, col_offset=41)), keyword('x', Str('X', lineno=2519, col_offset=50)), keyword('y', Name('True', Load(), lineno=2519, col_offset=57))], None, None, lineno=2519, col_offset=20)], Load(), lineno=2519, col_offset=9)], Load(), lineno=2514, col_offset=16), lineno=2514, col_offset=4), Assign([Name('successes_when_not_required', Store(), lineno=2521, col_offset=4)], List([Tuple([Str('X', lineno=2522, col_offset=9), Call(Name('NS', Load(), lineno=2522, col_offset=14), [], [keyword('a', Name('None', Load(), lineno=2522, col_offset=19)), keyword('b', Name('False', Load(), lineno=2522, col_offset=27)), keyword('c', Name('False', Load(), lineno=2522, col_offset=36)), keyword('x', Str('X', lineno=2522, col_offset=45)), keyword('y', Name('False', Load(), lineno=2522, col_offset=52))], None, None, lineno=2522, col_offset=14)], Load(), lineno=2522, col_offset=9), Tuple([Str('X -y', lineno=2523, col_offset=9), Call(Name('NS', Load(), lineno=2523, col_offset=17), [], [keyword('a', Name('None', Load(), lineno=2523, col_offset=22)), keyword('b', Name('False', Load(), lineno=2523, col_offset=30)), keyword('c', Name('False', Load(), lineno=2523, col_offset=39)), keyword('x', Str('X', lineno=2523, col_offset=48)), keyword('y', Name('True', Load(), lineno=2523, col_offset=55))], None, None, lineno=2523, col_offset=17)], Load(), lineno=2523, col_offset=9)], Load(), lineno=2521, col_offset=34), lineno=2521, col_offset=4), Assign([Name('usage_when_required', Store(), lineno=2526, col_offset=4), Name('usage_when_not_required', Store(), lineno=2526, col_offset=26)], Str('        usage: PROG [-h] [-y] [-b] [-c] x [a]\n        ', lineno=2528, col_offset=-1), lineno=2526, col_offset=4), Assign([Name('help', Store(), lineno=2529, col_offset=4)], Str('\n        positional arguments:\n          x           x help\n          a           a help\n\n        optional arguments:\n          -h, --help  show this help message and exit\n          -y          y help\n          -b          b help\n          -c          c help\n        ', lineno=2540, col_offset=-1), lineno=2529, col_offset=4)], [], lineno=2501, col_offset=0), ClassDef('MEPBase', [Name('object', Load(), lineno=2546, col_offset=14)], [FunctionDef('get_parser', arguments([Name('self', Param(), lineno=2548, col_offset=19), Name('required', Param(), lineno=2548, col_offset=25)], None, None, [Name('None', Load(), lineno=2548, col_offset=34)]), [Assign([Name('parent', Store(), lineno=2549, col_offset=8)], Call(Attribute(Call(Name('super', Load(), lineno=2549, col_offset=17), [Name('MEPBase', Load(), lineno=2549, col_offset=23), Name('self', Load(), lineno=2549, col_offset=32)], [], None, None, lineno=2549, col_offset=17), 'get_parser', Load(), lineno=2549, col_offset=17), [], [keyword('required', Name('required', Load(), lineno=2549, col_offset=58))], None, None, lineno=2549, col_offset=17), lineno=2549, col_offset=8), Assign([Name('parser', Store(), lineno=2550, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=2550, col_offset=17), [], [keyword('prog', Attribute(Name('parent', Load(), lineno=2551, col_offset=17), 'prog', Load(), lineno=2551, col_offset=17)), keyword('add_help', Name('False', Load(), lineno=2551, col_offset=39)), keyword('parents', List([Name('parent', Load(), lineno=2551, col_offset=55)], Load(), lineno=2551, col_offset=54))], None, None, lineno=2550, col_offset=17), lineno=2550, col_offset=8), Return(Name('parser', Load(), lineno=2552, col_offset=15), lineno=2552, col_offset=8)], [], lineno=2548, col_offset=4)], [], lineno=2546, col_offset=0), ClassDef('TestMutuallyExclusiveGroupErrorsParent', [Name('MEPBase', Load(), lineno=2556, col_offset=4), Name('TestMutuallyExclusiveGroupErrors', Load(), lineno=2556, col_offset=13)], [Pass( lineno=2557, col_offset=4)], [], lineno=2555, col_offset=0), ClassDef('TestMutuallyExclusiveSimpleParent', [Name('MEPBase', Load(), lineno=2561, col_offset=4), Name('TestMutuallyExclusiveSimple', Load(), lineno=2561, col_offset=13)], [Pass( lineno=2562, col_offset=4)], [], lineno=2560, col_offset=0), ClassDef('TestMutuallyExclusiveLongParent', [Name('MEPBase', Load(), lineno=2566, col_offset=4), Name('TestMutuallyExclusiveLong', Load(), lineno=2566, col_offset=13)], [Pass( lineno=2567, col_offset=4)], [], lineno=2565, col_offset=0), ClassDef('TestMutuallyExclusiveFirstSuppressedParent', [Name('MEPBase', Load(), lineno=2571, col_offset=4), Name('TestMutuallyExclusiveFirstSuppressed', Load(), lineno=2571, col_offset=13)], [Pass( lineno=2572, col_offset=4)], [], lineno=2570, col_offset=0), ClassDef('TestMutuallyExclusiveManySuppressedParent', [Name('MEPBase', Load(), lineno=2576, col_offset=4), Name('TestMutuallyExclusiveManySuppressed', Load(), lineno=2576, col_offset=13)], [Pass( lineno=2577, col_offset=4)], [], lineno=2575, col_offset=0), ClassDef('TestMutuallyExclusiveOptionalAndPositionalParent', [Name('MEPBase', Load(), lineno=2581, col_offset=4), Name('TestMutuallyExclusiveOptionalAndPositional', Load(), lineno=2581, col_offset=13)], [Pass( lineno=2582, col_offset=4)], [], lineno=2580, col_offset=0), ClassDef('TestMutuallyExclusiveOptionalsMixedParent', [Name('MEPBase', Load(), lineno=2586, col_offset=4), Name('TestMutuallyExclusiveOptionalsMixed', Load(), lineno=2586, col_offset=13)], [Pass( lineno=2587, col_offset=4)], [], lineno=2585, col_offset=0), ClassDef('TestMutuallyExclusiveOptionalsAndPositionalsMixedParent', [Name('MEPBase', Load(), lineno=2591, col_offset=4), Name('TestMutuallyExclusiveOptionalsAndPositionalsMixed', Load(), lineno=2591, col_offset=13)], [Pass( lineno=2592, col_offset=4)], [], lineno=2590, col_offset=0), ClassDef('TestSetDefaults', [Name('TestCase', Load(), lineno=2598, col_offset=22)], [FunctionDef('test_set_defaults_no_args', arguments([Name('self', Param(), lineno=2600, col_offset=34)], None, None, []), [Assign([Name('parser', Store(), lineno=2601, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=2601, col_offset=17), [], [], None, None, lineno=2601, col_offset=17), lineno=2601, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=2602, col_offset=8), 'set_defaults', Load(), lineno=2602, col_offset=8), [], [keyword('x', Str('foo', lineno=2602, col_offset=30))], None, None, lineno=2602, col_offset=8), lineno=2602, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=2603, col_offset=8), 'set_defaults', Load(), lineno=2603, col_offset=8), [], [keyword('y', Str('bar', lineno=2603, col_offset=30)), keyword('z', Num(1, lineno=2603, col_offset=39))], None, None, lineno=2603, col_offset=8), lineno=2603, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2604, col_offset=8), 'assertEqual', Load(), lineno=2604, col_offset=8), [Call(Name('NS', Load(), lineno=2604, col_offset=25), [], [keyword('x', Str('foo', lineno=2604, col_offset=30)), keyword('y', Str('bar', lineno=2604, col_offset=39)), keyword('z', Num(1, lineno=2604, col_offset=48))], None, None, lineno=2604, col_offset=25), Call(Attribute(Name('parser', Load(), lineno=2605, col_offset=25), 'parse_args', Load(), lineno=2605, col_offset=25), [List([], Load(), lineno=2605, col_offset=43)], [], None, None, lineno=2605, col_offset=25)], [], None, None, lineno=2604, col_offset=8), lineno=2604, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2606, col_offset=8), 'assertEqual', Load(), lineno=2606, col_offset=8), [Call(Name('NS', Load(), lineno=2606, col_offset=25), [], [keyword('x', Str('foo', lineno=2606, col_offset=30)), keyword('y', Str('bar', lineno=2606, col_offset=39)), keyword('z', Num(1, lineno=2606, col_offset=48))], None, None, lineno=2606, col_offset=25), Call(Attribute(Name('parser', Load(), lineno=2607, col_offset=25), 'parse_args', Load(), lineno=2607, col_offset=25), [List([], Load(), lineno=2607, col_offset=43), Call(Name('NS', Load(), lineno=2607, col_offset=47), [], [], None, None, lineno=2607, col_offset=47)], [], None, None, lineno=2607, col_offset=25)], [], None, None, lineno=2606, col_offset=8), lineno=2606, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2608, col_offset=8), 'assertEqual', Load(), lineno=2608, col_offset=8), [Call(Name('NS', Load(), lineno=2608, col_offset=25), [], [keyword('x', Str('baz', lineno=2608, col_offset=30)), keyword('y', Str('bar', lineno=2608, col_offset=39)), keyword('z', Num(1, lineno=2608, col_offset=48))], None, None, lineno=2608, col_offset=25), Call(Attribute(Name('parser', Load(), lineno=2609, col_offset=25), 'parse_args', Load(), lineno=2609, col_offset=25), [List([], Load(), lineno=2609, col_offset=43), Call(Name('NS', Load(), lineno=2609, col_offset=47), [], [keyword('x', Str('baz', lineno=2609, col_offset=52))], None, None, lineno=2609, col_offset=47)], [], None, None, lineno=2609, col_offset=25)], [], None, None, lineno=2608, col_offset=8), lineno=2608, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2610, col_offset=8), 'assertEqual', Load(), lineno=2610, col_offset=8), [Call(Name('NS', Load(), lineno=2610, col_offset=25), [], [keyword('x', Str('baz', lineno=2610, col_offset=30)), keyword('y', Str('bar', lineno=2610, col_offset=39)), keyword('z', Num(2, lineno=2610, col_offset=48))], None, None, lineno=2610, col_offset=25), Call(Attribute(Name('parser', Load(), lineno=2611, col_offset=25), 'parse_args', Load(), lineno=2611, col_offset=25), [List([], Load(), lineno=2611, col_offset=43), Call(Name('NS', Load(), lineno=2611, col_offset=47), [], [keyword('x', Str('baz', lineno=2611, col_offset=52)), keyword('z', Num(2, lineno=2611, col_offset=61))], None, None, lineno=2611, col_offset=47)], [], None, None, lineno=2611, col_offset=25)], [], None, None, lineno=2610, col_offset=8), lineno=2610, col_offset=8)], [], lineno=2600, col_offset=4), FunctionDef('test_set_defaults_with_args', arguments([Name('self', Param(), lineno=2613, col_offset=36)], None, None, []), [Assign([Name('parser', Store(), lineno=2614, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=2614, col_offset=17), [], [], None, None, lineno=2614, col_offset=17), lineno=2614, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=2615, col_offset=8), 'set_defaults', Load(), lineno=2615, col_offset=8), [], [keyword('x', Str('foo', lineno=2615, col_offset=30)), keyword('y', Str('bar', lineno=2615, col_offset=39))], None, None, lineno=2615, col_offset=8), lineno=2615, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=2616, col_offset=8), 'add_argument', Load(), lineno=2616, col_offset=8), [Str('-x', lineno=2616, col_offset=28)], [keyword('default', Str('xfoox', lineno=2616, col_offset=42))], None, None, lineno=2616, col_offset=8), lineno=2616, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2617, col_offset=8), 'assertEqual', Load(), lineno=2617, col_offset=8), [Call(Name('NS', Load(), lineno=2617, col_offset=25), [], [keyword('x', Str('xfoox', lineno=2617, col_offset=30)), keyword('y', Str('bar', lineno=2617, col_offset=41))], None, None, lineno=2617, col_offset=25), Call(Attribute(Name('parser', Load(), lineno=2618, col_offset=25), 'parse_args', Load(), lineno=2618, col_offset=25), [List([], Load(), lineno=2618, col_offset=43)], [], None, None, lineno=2618, col_offset=25)], [], None, None, lineno=2617, col_offset=8), lineno=2617, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2619, col_offset=8), 'assertEqual', Load(), lineno=2619, col_offset=8), [Call(Name('NS', Load(), lineno=2619, col_offset=25), [], [keyword('x', Str('xfoox', lineno=2619, col_offset=30)), keyword('y', Str('bar', lineno=2619, col_offset=41))], None, None, lineno=2619, col_offset=25), Call(Attribute(Name('parser', Load(), lineno=2620, col_offset=25), 'parse_args', Load(), lineno=2620, col_offset=25), [List([], Load(), lineno=2620, col_offset=43), Call(Name('NS', Load(), lineno=2620, col_offset=47), [], [], None, None, lineno=2620, col_offset=47)], [], None, None, lineno=2620, col_offset=25)], [], None, None, lineno=2619, col_offset=8), lineno=2619, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2621, col_offset=8), 'assertEqual', Load(), lineno=2621, col_offset=8), [Call(Name('NS', Load(), lineno=2621, col_offset=25), [], [keyword('x', Str('baz', lineno=2621, col_offset=30)), keyword('y', Str('bar', lineno=2621, col_offset=39))], None, None, lineno=2621, col_offset=25), Call(Attribute(Name('parser', Load(), lineno=2622, col_offset=25), 'parse_args', Load(), lineno=2622, col_offset=25), [List([], Load(), lineno=2622, col_offset=43), Call(Name('NS', Load(), lineno=2622, col_offset=47), [], [keyword('x', Str('baz', lineno=2622, col_offset=52))], None, None, lineno=2622, col_offset=47)], [], None, None, lineno=2622, col_offset=25)], [], None, None, lineno=2621, col_offset=8), lineno=2621, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2623, col_offset=8), 'assertEqual', Load(), lineno=2623, col_offset=8), [Call(Name('NS', Load(), lineno=2623, col_offset=25), [], [keyword('x', Str('1', lineno=2623, col_offset=30)), keyword('y', Str('bar', lineno=2623, col_offset=37))], None, None, lineno=2623, col_offset=25), Call(Attribute(Name('parser', Load(), lineno=2624, col_offset=25), 'parse_args', Load(), lineno=2624, col_offset=25), [Call(Attribute(Str('-x 1', lineno=2624, col_offset=43), 'split', Load(), lineno=2624, col_offset=43), [], [], None, None, lineno=2624, col_offset=43)], [], None, None, lineno=2624, col_offset=25)], [], None, None, lineno=2623, col_offset=8), lineno=2623, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2625, col_offset=8), 'assertEqual', Load(), lineno=2625, col_offset=8), [Call(Name('NS', Load(), lineno=2625, col_offset=25), [], [keyword('x', Str('1', lineno=2625, col_offset=30)), keyword('y', Str('bar', lineno=2625, col_offset=37))], None, None, lineno=2625, col_offset=25), Call(Attribute(Name('parser', Load(), lineno=2626, col_offset=25), 'parse_args', Load(), lineno=2626, col_offset=25), [Call(Attribute(Str('-x 1', lineno=2626, col_offset=43), 'split', Load(), lineno=2626, col_offset=43), [], [], None, None, lineno=2626, col_offset=43), Call(Name('NS', Load(), lineno=2626, col_offset=59), [], [], None, None, lineno=2626, col_offset=59)], [], None, None, lineno=2626, col_offset=25)], [], None, None, lineno=2625, col_offset=8), lineno=2625, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2627, col_offset=8), 'assertEqual', Load(), lineno=2627, col_offset=8), [Call(Name('NS', Load(), lineno=2627, col_offset=25), [], [keyword('x', Str('1', lineno=2627, col_offset=30)), keyword('y', Str('bar', lineno=2627, col_offset=37))], None, None, lineno=2627, col_offset=25), Call(Attribute(Name('parser', Load(), lineno=2628, col_offset=25), 'parse_args', Load(), lineno=2628, col_offset=25), [Call(Attribute(Str('-x 1', lineno=2628, col_offset=43), 'split', Load(), lineno=2628, col_offset=43), [], [], None, None, lineno=2628, col_offset=43), Call(Name('NS', Load(), lineno=2628, col_offset=59), [], [keyword('x', Str('baz', lineno=2628, col_offset=64))], None, None, lineno=2628, col_offset=59)], [], None, None, lineno=2628, col_offset=25)], [], None, None, lineno=2627, col_offset=8), lineno=2627, col_offset=8)], [], lineno=2613, col_offset=4), FunctionDef('test_set_defaults_subparsers', arguments([Name('self', Param(), lineno=2630, col_offset=37)], None, None, []), [Assign([Name('parser', Store(), lineno=2631, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=2631, col_offset=17), [], [], None, None, lineno=2631, col_offset=17), lineno=2631, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=2632, col_offset=8), 'set_defaults', Load(), lineno=2632, col_offset=8), [], [keyword('x', Str('foo', lineno=2632, col_offset=30))], None, None, lineno=2632, col_offset=8), lineno=2632, col_offset=8), Assign([Name('subparsers', Store(), lineno=2633, col_offset=8)], Call(Attribute(Name('parser', Load(), lineno=2633, col_offset=21), 'add_subparsers', Load(), lineno=2633, col_offset=21), [], [], None, None, lineno=2633, col_offset=21), lineno=2633, col_offset=8), Assign([Name('parser_a', Store(), lineno=2634, col_offset=8)], Call(Attribute(Name('subparsers', Load(), lineno=2634, col_offset=19), 'add_parser', Load(), lineno=2634, col_offset=19), [Str('a', lineno=2634, col_offset=41)], [], None, None, lineno=2634, col_offset=19), lineno=2634, col_offset=8), Expr(Call(Attribute(Name('parser_a', Load(), lineno=2635, col_offset=8), 'set_defaults', Load(), lineno=2635, col_offset=8), [], [keyword('y', Str('bar', lineno=2635, col_offset=32))], None, None, lineno=2635, col_offset=8), lineno=2635, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2636, col_offset=8), 'assertEqual', Load(), lineno=2636, col_offset=8), [Call(Name('NS', Load(), lineno=2636, col_offset=25), [], [keyword('x', Str('foo', lineno=2636, col_offset=30)), keyword('y', Str('bar', lineno=2636, col_offset=39))], None, None, lineno=2636, col_offset=25), Call(Attribute(Name('parser', Load(), lineno=2637, col_offset=25), 'parse_args', Load(), lineno=2637, col_offset=25), [Call(Attribute(Str('a', lineno=2637, col_offset=43), 'split', Load(), lineno=2637, col_offset=43), [], [], None, None, lineno=2637, col_offset=43)], [], None, None, lineno=2637, col_offset=25)], [], None, None, lineno=2636, col_offset=8), lineno=2636, col_offset=8)], [], lineno=2630, col_offset=4), FunctionDef('test_set_defaults_parents', arguments([Name('self', Param(), lineno=2639, col_offset=34)], None, None, []), [Assign([Name('parent', Store(), lineno=2640, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=2640, col_offset=17), [], [keyword('add_help', Name('False', Load(), lineno=2640, col_offset=53))], None, None, lineno=2640, col_offset=17), lineno=2640, col_offset=8), Expr(Call(Attribute(Name('parent', Load(), lineno=2641, col_offset=8), 'set_defaults', Load(), lineno=2641, col_offset=8), [], [keyword('x', Str('foo', lineno=2641, col_offset=30))], None, None, lineno=2641, col_offset=8), lineno=2641, col_offset=8), Assign([Name('parser', Store(), lineno=2642, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=2642, col_offset=17), [], [keyword('parents', List([Name('parent', Load(), lineno=2642, col_offset=53)], Load(), lineno=2642, col_offset=52))], None, None, lineno=2642, col_offset=17), lineno=2642, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2643, col_offset=8), 'assertEqual', Load(), lineno=2643, col_offset=8), [Call(Name('NS', Load(), lineno=2643, col_offset=25), [], [keyword('x', Str('foo', lineno=2643, col_offset=30))], None, None, lineno=2643, col_offset=25), Call(Attribute(Name('parser', Load(), lineno=2643, col_offset=38), 'parse_args', Load(), lineno=2643, col_offset=38), [List([], Load(), lineno=2643, col_offset=56)], [], None, None, lineno=2643, col_offset=38)], [], None, None, lineno=2643, col_offset=8), lineno=2643, col_offset=8)], [], lineno=2639, col_offset=4), FunctionDef('test_set_defaults_same_as_add_argument', arguments([Name('self', Param(), lineno=2645, col_offset=47)], None, None, []), [Assign([Name('parser', Store(), lineno=2646, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=2646, col_offset=17), [], [], None, None, lineno=2646, col_offset=17), lineno=2646, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=2647, col_offset=8), 'set_defaults', Load(), lineno=2647, col_offset=8), [], [keyword('w', Str('W', lineno=2647, col_offset=30)), keyword('x', Str('X', lineno=2647, col_offset=37)), keyword('y', Str('Y', lineno=2647, col_offset=44)), keyword('z', Str('Z', lineno=2647, col_offset=51))], None, None, lineno=2647, col_offset=8), lineno=2647, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=2648, col_offset=8), 'add_argument', Load(), lineno=2648, col_offset=8), [Str('-w', lineno=2648, col_offset=28)], [], None, None, lineno=2648, col_offset=8), lineno=2648, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=2649, col_offset=8), 'add_argument', Load(), lineno=2649, col_offset=8), [Str('-x', lineno=2649, col_offset=28)], [keyword('default', Str('XX', lineno=2649, col_offset=42))], None, None, lineno=2649, col_offset=8), lineno=2649, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=2650, col_offset=8), 'add_argument', Load(), lineno=2650, col_offset=8), [Str('y', lineno=2650, col_offset=28)], [keyword('nargs', Str('?', lineno=2650, col_offset=39))], None, None, lineno=2650, col_offset=8), lineno=2650, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=2651, col_offset=8), 'add_argument', Load(), lineno=2651, col_offset=8), [Str('z', lineno=2651, col_offset=28)], [keyword('nargs', Str('?', lineno=2651, col_offset=39)), keyword('default', Str('ZZ', lineno=2651, col_offset=52))], None, None, lineno=2651, col_offset=8), lineno=2651, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2654, col_offset=8), 'assertEqual', Load(), lineno=2654, col_offset=8), [Call(Name('NS', Load(), lineno=2654, col_offset=25), [], [keyword('w', Str('W', lineno=2654, col_offset=30)), keyword('x', Str('XX', lineno=2654, col_offset=37)), keyword('y', Str('Y', lineno=2654, col_offset=45)), keyword('z', Str('ZZ', lineno=2654, col_offset=52))], None, None, lineno=2654, col_offset=25), Call(Attribute(Name('parser', Load(), lineno=2655, col_offset=25), 'parse_args', Load(), lineno=2655, col_offset=25), [List([], Load(), lineno=2655, col_offset=43)], [], None, None, lineno=2655, col_offset=25)], [], None, None, lineno=2654, col_offset=8), lineno=2654, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=2658, col_offset=8), 'set_defaults', Load(), lineno=2658, col_offset=8), [], [keyword('w', Str('WW', lineno=2658, col_offset=30)), keyword('x', Str('X', lineno=2658, col_offset=38)), keyword('y', Str('YY', lineno=2658, col_offset=45)), keyword('z', Str('Z', lineno=2658, col_offset=53))], None, None, lineno=2658, col_offset=8), lineno=2658, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2659, col_offset=8), 'assertEqual', Load(), lineno=2659, col_offset=8), [Call(Name('NS', Load(), lineno=2659, col_offset=25), [], [keyword('w', Str('WW', lineno=2659, col_offset=30)), keyword('x', Str('X', lineno=2659, col_offset=38)), keyword('y', Str('YY', lineno=2659, col_offset=45)), keyword('z', Str('Z', lineno=2659, col_offset=53))], None, None, lineno=2659, col_offset=25), Call(Attribute(Name('parser', Load(), lineno=2660, col_offset=25), 'parse_args', Load(), lineno=2660, col_offset=25), [List([], Load(), lineno=2660, col_offset=43)], [], None, None, lineno=2660, col_offset=25)], [], None, None, lineno=2659, col_offset=8), lineno=2659, col_offset=8)], [], lineno=2645, col_offset=4), FunctionDef('test_set_defaults_same_as_add_argument_group', arguments([Name('self', Param(), lineno=2662, col_offset=53)], None, None, []), [Assign([Name('parser', Store(), lineno=2663, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=2663, col_offset=17), [], [], None, None, lineno=2663, col_offset=17), lineno=2663, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=2664, col_offset=8), 'set_defaults', Load(), lineno=2664, col_offset=8), [], [keyword('w', Str('W', lineno=2664, col_offset=30)), keyword('x', Str('X', lineno=2664, col_offset=37)), keyword('y', Str('Y', lineno=2664, col_offset=44)), keyword('z', Str('Z', lineno=2664, col_offset=51))], None, None, lineno=2664, col_offset=8), lineno=2664, col_offset=8), Assign([Name('group', Store(), lineno=2665, col_offset=8)], Call(Attribute(Name('parser', Load(), lineno=2665, col_offset=16), 'add_argument_group', Load(), lineno=2665, col_offset=16), [Str('foo', lineno=2665, col_offset=42)], [], None, None, lineno=2665, col_offset=16), lineno=2665, col_offset=8), Expr(Call(Attribute(Name('group', Load(), lineno=2666, col_offset=8), 'add_argument', Load(), lineno=2666, col_offset=8), [Str('-w', lineno=2666, col_offset=27)], [], None, None, lineno=2666, col_offset=8), lineno=2666, col_offset=8), Expr(Call(Attribute(Name('group', Load(), lineno=2667, col_offset=8), 'add_argument', Load(), lineno=2667, col_offset=8), [Str('-x', lineno=2667, col_offset=27)], [keyword('default', Str('XX', lineno=2667, col_offset=41))], None, None, lineno=2667, col_offset=8), lineno=2667, col_offset=8), Expr(Call(Attribute(Name('group', Load(), lineno=2668, col_offset=8), 'add_argument', Load(), lineno=2668, col_offset=8), [Str('y', lineno=2668, col_offset=27)], [keyword('nargs', Str('?', lineno=2668, col_offset=38))], None, None, lineno=2668, col_offset=8), lineno=2668, col_offset=8), Expr(Call(Attribute(Name('group', Load(), lineno=2669, col_offset=8), 'add_argument', Load(), lineno=2669, col_offset=8), [Str('z', lineno=2669, col_offset=27)], [keyword('nargs', Str('?', lineno=2669, col_offset=38)), keyword('default', Str('ZZ', lineno=2669, col_offset=51))], None, None, lineno=2669, col_offset=8), lineno=2669, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2673, col_offset=8), 'assertEqual', Load(), lineno=2673, col_offset=8), [Call(Name('NS', Load(), lineno=2673, col_offset=25), [], [keyword('w', Str('W', lineno=2673, col_offset=30)), keyword('x', Str('XX', lineno=2673, col_offset=37)), keyword('y', Str('Y', lineno=2673, col_offset=45)), keyword('z', Str('ZZ', lineno=2673, col_offset=52))], None, None, lineno=2673, col_offset=25), Call(Attribute(Name('parser', Load(), lineno=2674, col_offset=25), 'parse_args', Load(), lineno=2674, col_offset=25), [List([], Load(), lineno=2674, col_offset=43)], [], None, None, lineno=2674, col_offset=25)], [], None, None, lineno=2673, col_offset=8), lineno=2673, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=2677, col_offset=8), 'set_defaults', Load(), lineno=2677, col_offset=8), [], [keyword('w', Str('WW', lineno=2677, col_offset=30)), keyword('x', Str('X', lineno=2677, col_offset=38)), keyword('y', Str('YY', lineno=2677, col_offset=45)), keyword('z', Str('Z', lineno=2677, col_offset=53))], None, None, lineno=2677, col_offset=8), lineno=2677, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2678, col_offset=8), 'assertEqual', Load(), lineno=2678, col_offset=8), [Call(Name('NS', Load(), lineno=2678, col_offset=25), [], [keyword('w', Str('WW', lineno=2678, col_offset=30)), keyword('x', Str('X', lineno=2678, col_offset=38)), keyword('y', Str('YY', lineno=2678, col_offset=45)), keyword('z', Str('Z', lineno=2678, col_offset=53))], None, None, lineno=2678, col_offset=25), Call(Attribute(Name('parser', Load(), lineno=2679, col_offset=25), 'parse_args', Load(), lineno=2679, col_offset=25), [List([], Load(), lineno=2679, col_offset=43)], [], None, None, lineno=2679, col_offset=25)], [], None, None, lineno=2678, col_offset=8), lineno=2678, col_offset=8)], [], lineno=2662, col_offset=4)], [], lineno=2598, col_offset=0), ClassDef('TestGetDefault', [Name('TestCase', Load(), lineno=2685, col_offset=21)], [FunctionDef('test_get_default', arguments([Name('self', Param(), lineno=2687, col_offset=25)], None, None, []), [Assign([Name('parser', Store(), lineno=2688, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=2688, col_offset=17), [], [], None, None, lineno=2688, col_offset=17), lineno=2688, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2689, col_offset=8), 'assertEqual', Load(), lineno=2689, col_offset=8), [Name('None', Load(), lineno=2689, col_offset=25), Call(Attribute(Name('parser', Load(), lineno=2689, col_offset=31), 'get_default', Load(), lineno=2689, col_offset=31), [Str('foo', lineno=2689, col_offset=50)], [], None, None, lineno=2689, col_offset=31)], [], None, None, lineno=2689, col_offset=8), lineno=2689, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2690, col_offset=8), 'assertEqual', Load(), lineno=2690, col_offset=8), [Name('None', Load(), lineno=2690, col_offset=25), Call(Attribute(Name('parser', Load(), lineno=2690, col_offset=31), 'get_default', Load(), lineno=2690, col_offset=31), [Str('bar', lineno=2690, col_offset=50)], [], None, None, lineno=2690, col_offset=31)], [], None, None, lineno=2690, col_offset=8), lineno=2690, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=2692, col_offset=8), 'add_argument', Load(), lineno=2692, col_offset=8), [Str('--foo', lineno=2692, col_offset=28)], [], None, None, lineno=2692, col_offset=8), lineno=2692, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2693, col_offset=8), 'assertEqual', Load(), lineno=2693, col_offset=8), [Name('None', Load(), lineno=2693, col_offset=25), Call(Attribute(Name('parser', Load(), lineno=2693, col_offset=31), 'get_default', Load(), lineno=2693, col_offset=31), [Str('foo', lineno=2693, col_offset=50)], [], None, None, lineno=2693, col_offset=31)], [], None, None, lineno=2693, col_offset=8), lineno=2693, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2694, col_offset=8), 'assertEqual', Load(), lineno=2694, col_offset=8), [Name('None', Load(), lineno=2694, col_offset=25), Call(Attribute(Name('parser', Load(), lineno=2694, col_offset=31), 'get_default', Load(), lineno=2694, col_offset=31), [Str('bar', lineno=2694, col_offset=50)], [], None, None, lineno=2694, col_offset=31)], [], None, None, lineno=2694, col_offset=8), lineno=2694, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=2696, col_offset=8), 'add_argument', Load(), lineno=2696, col_offset=8), [Str('--bar', lineno=2696, col_offset=28)], [keyword('type', Name('int', Load(), lineno=2696, col_offset=42)), keyword('default', Num(42, lineno=2696, col_offset=55))], None, None, lineno=2696, col_offset=8), lineno=2696, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2697, col_offset=8), 'assertEqual', Load(), lineno=2697, col_offset=8), [Name('None', Load(), lineno=2697, col_offset=25), Call(Attribute(Name('parser', Load(), lineno=2697, col_offset=31), 'get_default', Load(), lineno=2697, col_offset=31), [Str('foo', lineno=2697, col_offset=50)], [], None, None, lineno=2697, col_offset=31)], [], None, None, lineno=2697, col_offset=8), lineno=2697, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2698, col_offset=8), 'assertEqual', Load(), lineno=2698, col_offset=8), [Num(42, lineno=2698, col_offset=25), Call(Attribute(Name('parser', Load(), lineno=2698, col_offset=29), 'get_default', Load(), lineno=2698, col_offset=29), [Str('bar', lineno=2698, col_offset=48)], [], None, None, lineno=2698, col_offset=29)], [], None, None, lineno=2698, col_offset=8), lineno=2698, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=2700, col_offset=8), 'set_defaults', Load(), lineno=2700, col_offset=8), [], [keyword('foo', Str('badger', lineno=2700, col_offset=32))], None, None, lineno=2700, col_offset=8), lineno=2700, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2701, col_offset=8), 'assertEqual', Load(), lineno=2701, col_offset=8), [Str('badger', lineno=2701, col_offset=25), Call(Attribute(Name('parser', Load(), lineno=2701, col_offset=35), 'get_default', Load(), lineno=2701, col_offset=35), [Str('foo', lineno=2701, col_offset=54)], [], None, None, lineno=2701, col_offset=35)], [], None, None, lineno=2701, col_offset=8), lineno=2701, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2702, col_offset=8), 'assertEqual', Load(), lineno=2702, col_offset=8), [Num(42, lineno=2702, col_offset=25), Call(Attribute(Name('parser', Load(), lineno=2702, col_offset=29), 'get_default', Load(), lineno=2702, col_offset=29), [Str('bar', lineno=2702, col_offset=48)], [], None, None, lineno=2702, col_offset=29)], [], None, None, lineno=2702, col_offset=8), lineno=2702, col_offset=8)], [], lineno=2687, col_offset=4)], [], lineno=2685, col_offset=0), ClassDef('TestNamespaceContainsSimple', [Name('TestCase', Load(), lineno=2708, col_offset=34)], [FunctionDef('test_empty', arguments([Name('self', Param(), lineno=2710, col_offset=19)], None, None, []), [Assign([Name('ns', Store(), lineno=2711, col_offset=8)], Call(Attribute(Name('argparse', Load(), lineno=2711, col_offset=13), 'Namespace', Load(), lineno=2711, col_offset=13), [], [], None, None, lineno=2711, col_offset=13), lineno=2711, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2712, col_offset=8), 'assertEqual', Load(), lineno=2712, col_offset=8), [Compare(Str('', lineno=2712, col_offset=25), [In()], [Name('ns', Load(), lineno=2712, col_offset=31)], lineno=2712, col_offset=25), Name('False', Load(), lineno=2712, col_offset=35)], [], None, None, lineno=2712, col_offset=8), lineno=2712, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2713, col_offset=8), 'assertEqual', Load(), lineno=2713, col_offset=8), [Compare(Str('', lineno=2713, col_offset=25), [NotIn()], [Name('ns', Load(), lineno=2713, col_offset=35)], lineno=2713, col_offset=25), Name('True', Load(), lineno=2713, col_offset=39)], [], None, None, lineno=2713, col_offset=8), lineno=2713, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2714, col_offset=8), 'assertEqual', Load(), lineno=2714, col_offset=8), [Compare(Str('x', lineno=2714, col_offset=25), [In()], [Name('ns', Load(), lineno=2714, col_offset=32)], lineno=2714, col_offset=25), Name('False', Load(), lineno=2714, col_offset=36)], [], None, None, lineno=2714, col_offset=8), lineno=2714, col_offset=8)], [], lineno=2710, col_offset=4), FunctionDef('test_non_empty', arguments([Name('self', Param(), lineno=2716, col_offset=23)], None, None, []), [Assign([Name('ns', Store(), lineno=2717, col_offset=8)], Call(Attribute(Name('argparse', Load(), lineno=2717, col_offset=13), 'Namespace', Load(), lineno=2717, col_offset=13), [], [keyword('x', Num(1, lineno=2717, col_offset=34)), keyword('y', Num(2, lineno=2717, col_offset=39))], None, None, lineno=2717, col_offset=13), lineno=2717, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2718, col_offset=8), 'assertEqual', Load(), lineno=2718, col_offset=8), [Compare(Str('x', lineno=2718, col_offset=25), [In()], [Name('ns', Load(), lineno=2718, col_offset=32)], lineno=2718, col_offset=25), Name('True', Load(), lineno=2718, col_offset=36)], [], None, None, lineno=2718, col_offset=8), lineno=2718, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2719, col_offset=8), 'assertEqual', Load(), lineno=2719, col_offset=8), [Compare(Str('x', lineno=2719, col_offset=25), [NotIn()], [Name('ns', Load(), lineno=2719, col_offset=36)], lineno=2719, col_offset=25), Name('False', Load(), lineno=2719, col_offset=40)], [], None, None, lineno=2719, col_offset=8), lineno=2719, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2720, col_offset=8), 'assertEqual', Load(), lineno=2720, col_offset=8), [Compare(Str('y', lineno=2720, col_offset=25), [In()], [Name('ns', Load(), lineno=2720, col_offset=32)], lineno=2720, col_offset=25), Name('True', Load(), lineno=2720, col_offset=36)], [], None, None, lineno=2720, col_offset=8), lineno=2720, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2721, col_offset=8), 'assertEqual', Load(), lineno=2721, col_offset=8), [Compare(Str('', lineno=2721, col_offset=25), [In()], [Name('ns', Load(), lineno=2721, col_offset=31)], lineno=2721, col_offset=25), Name('False', Load(), lineno=2721, col_offset=35)], [], None, None, lineno=2721, col_offset=8), lineno=2721, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2722, col_offset=8), 'assertEqual', Load(), lineno=2722, col_offset=8), [Compare(Str('xx', lineno=2722, col_offset=25), [In()], [Name('ns', Load(), lineno=2722, col_offset=33)], lineno=2722, col_offset=25), Name('False', Load(), lineno=2722, col_offset=37)], [], None, None, lineno=2722, col_offset=8), lineno=2722, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=2723, col_offset=8), 'assertEqual', Load(), lineno=2723, col_offset=8), [Compare(Str('z', lineno=2723, col_offset=25), [In()], [Name('ns', Load(), lineno=2723, col_offset=32)], lineno=2723, col_offset=25), Name('False', Load(), lineno=2723, col_offset=36)], [], None, None, lineno=2723, col_offset=8), lineno=2723, col_offset=8)], [], lineno=2716, col_offset=4)], [], lineno=2708, col_offset=0), ClassDef('TestHelpFormattingMetaclass', [Name('type', Load(), lineno=2729, col_offset=34)], [FunctionDef('__init__', arguments([Name('cls', Param(), lineno=2731, col_offset=17), Name('name', Param(), lineno=2731, col_offset=22), Name('bases', Param(), lineno=2731, col_offset=28), Name('bodydict', Param(), lineno=2731, col_offset=35)], None, None, []), [If(Compare(Name('name', Load(), lineno=2732, col_offset=11), [Eq()], [Str('HelpTestCase', lineno=2732, col_offset=19)], lineno=2732, col_offset=11), [Return(None, lineno=2733, col_offset=12)], [], lineno=2732, col_offset=8), ClassDef('AddTests', [Name('object', Load(), lineno=2735, col_offset=23)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=2737, col_offset=25), Name('test_class', Param(), lineno=2737, col_offset=31), Name('func_suffix', Param(), lineno=2737, col_offset=43), Name('std_name', Param(), lineno=2737, col_offset=56)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=2738, col_offset=16), 'func_suffix', Store(), lineno=2738, col_offset=16)], Name('func_suffix', Load(), lineno=2738, col_offset=35), lineno=2738, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=2739, col_offset=16), 'std_name', Store(), lineno=2739, col_offset=16)], Name('std_name', Load(), lineno=2739, col_offset=32), lineno=2739, col_offset=16), For(Name('test_func', Store(), lineno=2741, col_offset=20), List([Attribute(Name('self', Load(), lineno=2741, col_offset=34), 'test_format', Load(), lineno=2741, col_offset=34), Attribute(Name('self', Load(), lineno=2742, col_offset=34), 'test_print', Load(), lineno=2742, col_offset=34), Attribute(Name('self', Load(), lineno=2743, col_offset=34), 'test_print_file', Load(), lineno=2743, col_offset=34)], Load(), lineno=2741, col_offset=33), [Assign([Name('test_name', Store(), lineno=2744, col_offset=20)], BinOp(Str('%s_%s', lineno=2744, col_offset=32), Mod(), Tuple([Attribute(Name('test_func', Load(), lineno=2744, col_offset=43), '__name__', Load(), lineno=2744, col_offset=43), Name('func_suffix', Load(), lineno=2744, col_offset=63)], Load(), lineno=2744, col_offset=43), lineno=2744, col_offset=32), lineno=2744, col_offset=20), FunctionDef('test_wrapper', arguments([Name('self', Param(), lineno=2746, col_offset=37), Name('test_func', Param(), lineno=2746, col_offset=43)], None, None, [Name('test_func', Load(), lineno=2746, col_offset=53)]), [Expr(Call(Name('test_func', Load(), lineno=2747, col_offset=24), [Name('self', Load(), lineno=2747, col_offset=34)], [], None, None, lineno=2747, col_offset=24), lineno=2747, col_offset=24)], [], lineno=2746, col_offset=20), TryExcept([Assign([Attribute(Name('test_wrapper', Load(), lineno=2749, col_offset=24), '__name__', Store(), lineno=2749, col_offset=24)], Name('test_name', Load(), lineno=2749, col_offset=48), lineno=2749, col_offset=24)], [ExceptHandler(Name('TypeError', Load(), lineno=2750, col_offset=27), None, [Pass( lineno=2751, col_offset=24)], lineno=2750, col_offset=20)], [], lineno=2748, col_offset=20), Expr(Call(Name('setattr', Load(), lineno=2752, col_offset=20), [Name('test_class', Load(), lineno=2752, col_offset=28), Name('test_name', Load(), lineno=2752, col_offset=40), Name('test_wrapper', Load(), lineno=2752, col_offset=51)], [], None, None, lineno=2752, col_offset=20), lineno=2752, col_offset=20)], [], lineno=2741, col_offset=16)], [], lineno=2737, col_offset=12), FunctionDef('_get_parser', arguments([Name('self', Param(), lineno=2754, col_offset=28), Name('tester', Param(), lineno=2754, col_offset=34)], None, None, []), [Assign([Name('parser', Store(), lineno=2755, col_offset=16)], Call(Attribute(Name('argparse', Load(), lineno=2755, col_offset=25), 'ArgumentParser', Load(), lineno=2755, col_offset=25), [], [], Attribute(Attribute(Name('tester', Load(), lineno=2756, col_offset=21), 'parser_signature', Load(), lineno=2756, col_offset=21), 'args', Load(), lineno=2756, col_offset=21), Attribute(Attribute(Name('tester', Load(), lineno=2757, col_offset=22), 'parser_signature', Load(), lineno=2757, col_offset=22), 'kwargs', Load(), lineno=2757, col_offset=22), lineno=2755, col_offset=25), lineno=2755, col_offset=16), For(Name('argument_sig', Store(), lineno=2758, col_offset=20), Attribute(Name('tester', Load(), lineno=2758, col_offset=36), 'argument_signatures', Load(), lineno=2758, col_offset=36), [Expr(Call(Attribute(Name('parser', Load(), lineno=2759, col_offset=20), 'add_argument', Load(), lineno=2759, col_offset=20), [], [], Attribute(Name('argument_sig', Load(), lineno=2759, col_offset=41), 'args', Load(), lineno=2759, col_offset=41), Attribute(Name('argument_sig', Load(), lineno=2760, col_offset=42), 'kwargs', Load(), lineno=2760, col_offset=42), lineno=2759, col_offset=20), lineno=2759, col_offset=20)], [], lineno=2758, col_offset=16), Assign([Name('group_signatures', Store(), lineno=2761, col_offset=16)], Attribute(Name('tester', Load(), lineno=2761, col_offset=35), 'argument_group_signatures', Load(), lineno=2761, col_offset=35), lineno=2761, col_offset=16), For(Tuple([Name('group_sig', Store(), lineno=2762, col_offset=20), Name('argument_sigs', Store(), lineno=2762, col_offset=31)], Store(), lineno=2762, col_offset=20), Name('group_signatures', Load(), lineno=2762, col_offset=48), [Assign([Name('group', Store(), lineno=2763, col_offset=20)], Call(Attribute(Name('parser', Load(), lineno=2763, col_offset=28), 'add_argument_group', Load(), lineno=2763, col_offset=28), [], [], Attribute(Name('group_sig', Load(), lineno=2763, col_offset=55), 'args', Load(), lineno=2763, col_offset=55), Attribute(Name('group_sig', Load(), lineno=2764, col_offset=56), 'kwargs', Load(), lineno=2764, col_offset=56), lineno=2763, col_offset=28), lineno=2763, col_offset=20), For(Name('argument_sig', Store(), lineno=2765, col_offset=24), Name('argument_sigs', Load(), lineno=2765, col_offset=40), [Expr(Call(Attribute(Name('group', Load(), lineno=2766, col_offset=24), 'add_argument', Load(), lineno=2766, col_offset=24), [], [], Attribute(Name('argument_sig', Load(), lineno=2766, col_offset=44), 'args', Load(), lineno=2766, col_offset=44), Attribute(Name('argument_sig', Load(), lineno=2767, col_offset=45), 'kwargs', Load(), lineno=2767, col_offset=45), lineno=2766, col_offset=24), lineno=2766, col_offset=24)], [], lineno=2765, col_offset=20)], [], lineno=2762, col_offset=16), Return(Name('parser', Load(), lineno=2768, col_offset=23), lineno=2768, col_offset=16)], [], lineno=2754, col_offset=12), FunctionDef('_test', arguments([Name('self', Param(), lineno=2770, col_offset=22), Name('tester', Param(), lineno=2770, col_offset=28), Name('parser_text', Param(), lineno=2770, col_offset=36)], None, None, []), [Assign([Name('expected_text', Store(), lineno=2771, col_offset=16)], Call(Name('getattr', Load(), lineno=2771, col_offset=32), [Name('tester', Load(), lineno=2771, col_offset=40), Attribute(Name('self', Load(), lineno=2771, col_offset=48), 'func_suffix', Load(), lineno=2771, col_offset=48)], [], None, None, lineno=2771, col_offset=32), lineno=2771, col_offset=16), Assign([Name('expected_text', Store(), lineno=2772, col_offset=16)], Call(Attribute(Name('textwrap', Load(), lineno=2772, col_offset=32), 'dedent', Load(), lineno=2772, col_offset=32), [Name('expected_text', Load(), lineno=2772, col_offset=48)], [], None, None, lineno=2772, col_offset=32), lineno=2772, col_offset=16), If(Compare(Name('expected_text', Load(), lineno=2773, col_offset=19), [NotEq()], [Name('parser_text', Load(), lineno=2773, col_offset=36)], lineno=2773, col_offset=19), [Print(None, [Call(Name('repr', Load(), lineno=2774, col_offset=26), [Name('expected_text', Load(), lineno=2774, col_offset=31)], [], None, None, lineno=2774, col_offset=26)], True, lineno=2774, col_offset=20), Print(None, [Call(Name('repr', Load(), lineno=2775, col_offset=26), [Name('parser_text', Load(), lineno=2775, col_offset=31)], [], None, None, lineno=2775, col_offset=26)], True, lineno=2775, col_offset=20), For(Tuple([Name('char1', Store(), lineno=2776, col_offset=24), Name('char2', Store(), lineno=2776, col_offset=31)], Store(), lineno=2776, col_offset=24), Call(Name('zip', Load(), lineno=2776, col_offset=40), [Name('expected_text', Load(), lineno=2776, col_offset=44), Name('parser_text', Load(), lineno=2776, col_offset=59)], [], None, None, lineno=2776, col_offset=40), [If(Compare(Name('char1', Load(), lineno=2777, col_offset=27), [NotEq()], [Name('char2', Load(), lineno=2777, col_offset=36)], lineno=2777, col_offset=27), [Print(None, [BinOp(Str('first diff: %r %r', lineno=2778, col_offset=34), Mod(), Tuple([Name('char1', Load(), lineno=2778, col_offset=57), Name('char2', Load(), lineno=2778, col_offset=64)], Load(), lineno=2778, col_offset=57), lineno=2778, col_offset=34)], True, lineno=2778, col_offset=28), Break( lineno=2779, col_offset=28)], [], lineno=2777, col_offset=24)], [], lineno=2776, col_offset=20)], [], lineno=2773, col_offset=16), Expr(Call(Attribute(Name('tester', Load(), lineno=2780, col_offset=16), 'assertEqual', Load(), lineno=2780, col_offset=16), [Name('expected_text', Load(), lineno=2780, col_offset=35), Name('parser_text', Load(), lineno=2780, col_offset=50)], [], None, None, lineno=2780, col_offset=16), lineno=2780, col_offset=16)], [], lineno=2770, col_offset=12), FunctionDef('test_format', arguments([Name('self', Param(), lineno=2782, col_offset=28), Name('tester', Param(), lineno=2782, col_offset=34)], None, None, []), [Assign([Name('parser', Store(), lineno=2783, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=2783, col_offset=25), '_get_parser', Load(), lineno=2783, col_offset=25), [Name('tester', Load(), lineno=2783, col_offset=42)], [], None, None, lineno=2783, col_offset=25), lineno=2783, col_offset=16), Assign([Name('format', Store(), lineno=2784, col_offset=16)], Call(Name('getattr', Load(), lineno=2784, col_offset=25), [Name('parser', Load(), lineno=2784, col_offset=33), BinOp(Str('format_%s', lineno=2784, col_offset=41), Mod(), Attribute(Name('self', Load(), lineno=2784, col_offset=55), 'func_suffix', Load(), lineno=2784, col_offset=55), lineno=2784, col_offset=41)], [], None, None, lineno=2784, col_offset=25), lineno=2784, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=2785, col_offset=16), '_test', Load(), lineno=2785, col_offset=16), [Name('tester', Load(), lineno=2785, col_offset=27), Call(Name('format', Load(), lineno=2785, col_offset=35), [], [], None, None, lineno=2785, col_offset=35)], [], None, None, lineno=2785, col_offset=16), lineno=2785, col_offset=16)], [], lineno=2782, col_offset=12), FunctionDef('test_print', arguments([Name('self', Param(), lineno=2787, col_offset=27), Name('tester', Param(), lineno=2787, col_offset=33)], None, None, []), [Assign([Name('parser', Store(), lineno=2788, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=2788, col_offset=25), '_get_parser', Load(), lineno=2788, col_offset=25), [Name('tester', Load(), lineno=2788, col_offset=42)], [], None, None, lineno=2788, col_offset=25), lineno=2788, col_offset=16), Assign([Name('print_', Store(), lineno=2789, col_offset=16)], Call(Name('getattr', Load(), lineno=2789, col_offset=25), [Name('parser', Load(), lineno=2789, col_offset=33), BinOp(Str('print_%s', lineno=2789, col_offset=41), Mod(), Attribute(Name('self', Load(), lineno=2789, col_offset=54), 'func_suffix', Load(), lineno=2789, col_offset=54), lineno=2789, col_offset=41)], [], None, None, lineno=2789, col_offset=25), lineno=2789, col_offset=16), Assign([Name('old_stream', Store(), lineno=2790, col_offset=16)], Call(Name('getattr', Load(), lineno=2790, col_offset=29), [Name('sys', Load(), lineno=2790, col_offset=37), Attribute(Name('self', Load(), lineno=2790, col_offset=42), 'std_name', Load(), lineno=2790, col_offset=42)], [], None, None, lineno=2790, col_offset=29), lineno=2790, col_offset=16), Expr(Call(Name('setattr', Load(), lineno=2791, col_offset=16), [Name('sys', Load(), lineno=2791, col_offset=24), Attribute(Name('self', Load(), lineno=2791, col_offset=29), 'std_name', Load(), lineno=2791, col_offset=29), Call(Name('StdIOBuffer', Load(), lineno=2791, col_offset=44), [], [], None, None, lineno=2791, col_offset=44)], [], None, None, lineno=2791, col_offset=16), lineno=2791, col_offset=16), TryFinally([Expr(Call(Name('print_', Load(), lineno=2793, col_offset=20), [], [], None, None, lineno=2793, col_offset=20), lineno=2793, col_offset=20), Assign([Name('parser_text', Store(), lineno=2794, col_offset=20)], Call(Attribute(Call(Name('getattr', Load(), lineno=2794, col_offset=34), [Name('sys', Load(), lineno=2794, col_offset=42), Attribute(Name('self', Load(), lineno=2794, col_offset=47), 'std_name', Load(), lineno=2794, col_offset=47)], [], None, None, lineno=2794, col_offset=34), 'getvalue', Load(), lineno=2794, col_offset=34), [], [], None, None, lineno=2794, col_offset=34), lineno=2794, col_offset=20)], [Expr(Call(Name('setattr', Load(), lineno=2796, col_offset=20), [Name('sys', Load(), lineno=2796, col_offset=28), Attribute(Name('self', Load(), lineno=2796, col_offset=33), 'std_name', Load(), lineno=2796, col_offset=33), Name('old_stream', Load(), lineno=2796, col_offset=48)], [], None, None, lineno=2796, col_offset=20), lineno=2796, col_offset=20)], lineno=2792, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=2797, col_offset=16), '_test', Load(), lineno=2797, col_offset=16), [Name('tester', Load(), lineno=2797, col_offset=27), Name('parser_text', Load(), lineno=2797, col_offset=35)], [], None, None, lineno=2797, col_offset=16), lineno=2797, col_offset=16)], [], lineno=2787, col_offset=12), FunctionDef('test_print_file', arguments([Name('self', Param(), lineno=2799, col_offset=32), Name('tester', Param(), lineno=2799, col_offset=38)], None, None, []), [Assign([Name('parser', Store(), lineno=2800, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=2800, col_offset=25), '_get_parser', Load(), lineno=2800, col_offset=25), [Name('tester', Load(), lineno=2800, col_offset=42)], [], None, None, lineno=2800, col_offset=25), lineno=2800, col_offset=16), Assign([Name('print_', Store(), lineno=2801, col_offset=16)], Call(Name('getattr', Load(), lineno=2801, col_offset=25), [Name('parser', Load(), lineno=2801, col_offset=33), BinOp(Str('print_%s', lineno=2801, col_offset=41), Mod(), Attribute(Name('self', Load(), lineno=2801, col_offset=54), 'func_suffix', Load(), lineno=2801, col_offset=54), lineno=2801, col_offset=41)], [], None, None, lineno=2801, col_offset=25), lineno=2801, col_offset=16), Assign([Name('sfile', Store(), lineno=2802, col_offset=16)], Call(Name('StdIOBuffer', Load(), lineno=2802, col_offset=24), [], [], None, None, lineno=2802, col_offset=24), lineno=2802, col_offset=16), Expr(Call(Name('print_', Load(), lineno=2803, col_offset=16), [Name('sfile', Load(), lineno=2803, col_offset=23)], [], None, None, lineno=2803, col_offset=16), lineno=2803, col_offset=16), Assign([Name('parser_text', Store(), lineno=2804, col_offset=16)], Call(Attribute(Name('sfile', Load(), lineno=2804, col_offset=30), 'getvalue', Load(), lineno=2804, col_offset=30), [], [], None, None, lineno=2804, col_offset=30), lineno=2804, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=2805, col_offset=16), '_test', Load(), lineno=2805, col_offset=16), [Name('tester', Load(), lineno=2805, col_offset=27), Name('parser_text', Load(), lineno=2805, col_offset=35)], [], None, None, lineno=2805, col_offset=16), lineno=2805, col_offset=16)], [], lineno=2799, col_offset=12)], [], lineno=2735, col_offset=8), For(Tuple([Name('func_suffix', Store(), lineno=2808, col_offset=12), Name('std_name', Store(), lineno=2808, col_offset=25)], Store(), lineno=2808, col_offset=12), List([Tuple([Str('usage', lineno=2808, col_offset=39), Str('stdout', lineno=2808, col_offset=48)], Load(), lineno=2808, col_offset=39), Tuple([Str('help', lineno=2809, col_offset=39), Str('stdout', lineno=2809, col_offset=47)], Load(), lineno=2809, col_offset=39), Tuple([Str('version', lineno=2810, col_offset=39), Str('stderr', lineno=2810, col_offset=50)], Load(), lineno=2810, col_offset=39)], Load(), lineno=2808, col_offset=37), [Expr(Call(Name('AddTests', Load(), lineno=2811, col_offset=12), [Name('cls', Load(), lineno=2811, col_offset=21), Name('func_suffix', Load(), lineno=2811, col_offset=26), Name('std_name', Load(), lineno=2811, col_offset=39)], [], None, None, lineno=2811, col_offset=12), lineno=2811, col_offset=12)], [], lineno=2808, col_offset=8)], [], lineno=2731, col_offset=4)], [], lineno=2729, col_offset=0), Assign([Name('bases', Store(), lineno=2813, col_offset=0)], Tuple([Name('TestCase', Load(), lineno=2813, col_offset=8)], Load(), lineno=2813, col_offset=8), lineno=2813, col_offset=0), Assign([Name('HelpTestCase', Store(), lineno=2814, col_offset=0)], Call(Name('TestHelpFormattingMetaclass', Load(), lineno=2814, col_offset=15), [Str('HelpTestCase', lineno=2814, col_offset=43), Name('bases', Load(), lineno=2814, col_offset=59), Dict([], [], lineno=2814, col_offset=66)], [], None, None, lineno=2814, col_offset=15), lineno=2814, col_offset=0), ClassDef('TestHelpBiggerOptionals', [Name('HelpTestCase', Load(), lineno=2817, col_offset=30)], [Expr(Str('Make sure that argument help aligns when options are longer', lineno=2818, col_offset=4), lineno=2818, col_offset=4), Assign([Name('parser_signature', Store(), lineno=2820, col_offset=4)], Call(Name('Sig', Load(), lineno=2820, col_offset=23), [], [keyword('prog', Str('PROG', lineno=2820, col_offset=32)), keyword('description', Str('DESCRIPTION', lineno=2820, col_offset=52)), keyword('epilog', Str('EPILOG', lineno=2821, col_offset=34)), keyword('version', Str('0.1', lineno=2821, col_offset=52))], None, None, lineno=2820, col_offset=23), lineno=2820, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=2822, col_offset=4)], List([Call(Name('Sig', Load(), lineno=2823, col_offset=8), [Str('-x', lineno=2823, col_offset=12)], [keyword('action', Str('store_true', lineno=2823, col_offset=25)), keyword('help', Str('X HELP', lineno=2823, col_offset=44))], None, None, lineno=2823, col_offset=8), Call(Name('Sig', Load(), lineno=2824, col_offset=8), [Str('--y', lineno=2824, col_offset=12)], [keyword('help', Str('Y HELP', lineno=2824, col_offset=24))], None, None, lineno=2824, col_offset=8), Call(Name('Sig', Load(), lineno=2825, col_offset=8), [Str('foo', lineno=2825, col_offset=12)], [keyword('help', Str('FOO HELP', lineno=2825, col_offset=24))], None, None, lineno=2825, col_offset=8), Call(Name('Sig', Load(), lineno=2826, col_offset=8), [Str('bar', lineno=2826, col_offset=12)], [keyword('help', Str('BAR HELP', lineno=2826, col_offset=24))], None, None, lineno=2826, col_offset=8)], Load(), lineno=2822, col_offset=26), lineno=2822, col_offset=4), Assign([Name('argument_group_signatures', Store(), lineno=2828, col_offset=4)], List([], Load(), lineno=2828, col_offset=32), lineno=2828, col_offset=4), Assign([Name('usage', Store(), lineno=2829, col_offset=4)], Str('        usage: PROG [-h] [-v] [-x] [--y Y] foo bar\n        ', lineno=2831, col_offset=-1), lineno=2829, col_offset=4), Assign([Name('help', Store(), lineno=2832, col_offset=4)], BinOp(Name('usage', Load(), lineno=2832, col_offset=11), Add(), Str("\n        DESCRIPTION\n\n        positional arguments:\n          foo            FOO HELP\n          bar            BAR HELP\n\n        optional arguments:\n          -h, --help     show this help message and exit\n          -v, --version  show program's version number and exit\n          -x             X HELP\n          --y Y          Y HELP\n\n        EPILOG\n    ", lineno=2847, col_offset=-1), lineno=2832, col_offset=11), lineno=2832, col_offset=4), Assign([Name('version', Store(), lineno=2848, col_offset=4)], Str('        0.1\n        ', lineno=2850, col_offset=-1), lineno=2848, col_offset=4)], [], lineno=2817, col_offset=0), ClassDef('TestHelpBiggerOptionalGroups', [Name('HelpTestCase', Load(), lineno=2853, col_offset=35)], [Expr(Str('Make sure that argument help aligns when options are longer', lineno=2854, col_offset=4), lineno=2854, col_offset=4), Assign([Name('parser_signature', Store(), lineno=2856, col_offset=4)], Call(Name('Sig', Load(), lineno=2856, col_offset=23), [], [keyword('prog', Str('PROG', lineno=2856, col_offset=32)), keyword('description', Str('DESCRIPTION', lineno=2856, col_offset=52)), keyword('epilog', Str('EPILOG', lineno=2857, col_offset=34)), keyword('version', Str('0.1', lineno=2857, col_offset=52))], None, None, lineno=2856, col_offset=23), lineno=2856, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=2858, col_offset=4)], List([Call(Name('Sig', Load(), lineno=2859, col_offset=8), [Str('-x', lineno=2859, col_offset=12)], [keyword('action', Str('store_true', lineno=2859, col_offset=25)), keyword('help', Str('X HELP', lineno=2859, col_offset=44))], None, None, lineno=2859, col_offset=8), Call(Name('Sig', Load(), lineno=2860, col_offset=8), [Str('--y', lineno=2860, col_offset=12)], [keyword('help', Str('Y HELP', lineno=2860, col_offset=24))], None, None, lineno=2860, col_offset=8), Call(Name('Sig', Load(), lineno=2861, col_offset=8), [Str('foo', lineno=2861, col_offset=12)], [keyword('help', Str('FOO HELP', lineno=2861, col_offset=24))], None, None, lineno=2861, col_offset=8), Call(Name('Sig', Load(), lineno=2862, col_offset=8), [Str('bar', lineno=2862, col_offset=12)], [keyword('help', Str('BAR HELP', lineno=2862, col_offset=24))], None, None, lineno=2862, col_offset=8)], Load(), lineno=2858, col_offset=26), lineno=2858, col_offset=4), Assign([Name('argument_group_signatures', Store(), lineno=2864, col_offset=4)], List([Tuple([Call(Name('Sig', Load(), lineno=2865, col_offset=9), [Str('GROUP TITLE', lineno=2865, col_offset=13)], [keyword('description', Str('GROUP DESCRIPTION', lineno=2865, col_offset=40))], None, None, lineno=2865, col_offset=9), List([Call(Name('Sig', Load(), lineno=2866, col_offset=12), [Str('baz', lineno=2866, col_offset=16)], [keyword('help', Str('BAZ HELP', lineno=2866, col_offset=28))], None, None, lineno=2866, col_offset=12), Call(Name('Sig', Load(), lineno=2867, col_offset=12), [Str('-z', lineno=2867, col_offset=16)], [keyword('nargs', Str('+', lineno=2867, col_offset=28)), keyword('help', Str('Z HELP', lineno=2867, col_offset=38))], None, None, lineno=2867, col_offset=12)], Load(), lineno=2865, col_offset=62)], Load(), lineno=2865, col_offset=9)], Load(), lineno=2864, col_offset=32), lineno=2864, col_offset=4), Assign([Name('usage', Store(), lineno=2869, col_offset=4)], Str('        usage: PROG [-h] [-v] [-x] [--y Y] [-z Z [Z ...]] foo bar baz\n        ', lineno=2871, col_offset=-1), lineno=2869, col_offset=4), Assign([Name('help', Store(), lineno=2872, col_offset=4)], BinOp(Name('usage', Load(), lineno=2872, col_offset=11), Add(), Str("\n        DESCRIPTION\n\n        positional arguments:\n          foo            FOO HELP\n          bar            BAR HELP\n\n        optional arguments:\n          -h, --help     show this help message and exit\n          -v, --version  show program's version number and exit\n          -x             X HELP\n          --y Y          Y HELP\n\n        GROUP TITLE:\n          GROUP DESCRIPTION\n\n          baz            BAZ HELP\n          -z Z [Z ...]   Z HELP\n\n        EPILOG\n    ", lineno=2893, col_offset=-1), lineno=2872, col_offset=11), lineno=2872, col_offset=4), Assign([Name('version', Store(), lineno=2894, col_offset=4)], Str('        0.1\n        ', lineno=2896, col_offset=-1), lineno=2894, col_offset=4)], [], lineno=2853, col_offset=0), ClassDef('TestHelpBiggerPositionals', [Name('HelpTestCase', Load(), lineno=2899, col_offset=32)], [Expr(Str('Make sure that help aligns when arguments are longer', lineno=2900, col_offset=4), lineno=2900, col_offset=4), Assign([Name('parser_signature', Store(), lineno=2902, col_offset=4)], Call(Name('Sig', Load(), lineno=2902, col_offset=23), [], [keyword('usage', Str('USAGE', lineno=2902, col_offset=33)), keyword('description', Str('DESCRIPTION', lineno=2902, col_offset=54))], None, None, lineno=2902, col_offset=23), lineno=2902, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=2903, col_offset=4)], List([Call(Name('Sig', Load(), lineno=2904, col_offset=8), [Str('-x', lineno=2904, col_offset=12)], [keyword('action', Str('store_true', lineno=2904, col_offset=25)), keyword('help', Str('X HELP', lineno=2904, col_offset=44))], None, None, lineno=2904, col_offset=8), Call(Name('Sig', Load(), lineno=2905, col_offset=8), [Str('--y', lineno=2905, col_offset=12)], [keyword('help', Str('Y HELP', lineno=2905, col_offset=24))], None, None, lineno=2905, col_offset=8), Call(Name('Sig', Load(), lineno=2906, col_offset=8), [Str('ekiekiekifekang', lineno=2906, col_offset=12)], [keyword('help', Str('EKI HELP', lineno=2906, col_offset=36))], None, None, lineno=2906, col_offset=8), Call(Name('Sig', Load(), lineno=2907, col_offset=8), [Str('bar', lineno=2907, col_offset=12)], [keyword('help', Str('BAR HELP', lineno=2907, col_offset=24))], None, None, lineno=2907, col_offset=8)], Load(), lineno=2903, col_offset=26), lineno=2903, col_offset=4), Assign([Name('argument_group_signatures', Store(), lineno=2909, col_offset=4)], List([], Load(), lineno=2909, col_offset=32), lineno=2909, col_offset=4), Assign([Name('usage', Store(), lineno=2910, col_offset=4)], Str('        usage: USAGE\n        ', lineno=2912, col_offset=-1), lineno=2910, col_offset=4), Assign([Name('help', Store(), lineno=2913, col_offset=4)], BinOp(Name('usage', Load(), lineno=2913, col_offset=11), Add(), Str('\n        DESCRIPTION\n\n        positional arguments:\n          ekiekiekifekang  EKI HELP\n          bar              BAR HELP\n\n        optional arguments:\n          -h, --help       show this help message and exit\n          -x               X HELP\n          --y Y            Y HELP\n        ', lineno=2925, col_offset=-1), lineno=2913, col_offset=11), lineno=2913, col_offset=4), Assign([Name('version', Store(), lineno=2927, col_offset=4)], Str('', lineno=2927, col_offset=14), lineno=2927, col_offset=4)], [], lineno=2899, col_offset=0), ClassDef('TestHelpReformatting', [Name('HelpTestCase', Load(), lineno=2930, col_offset=27)], [Expr(Str('Make sure that text after short names starts on the first line', lineno=2931, col_offset=4), lineno=2931, col_offset=4), Assign([Name('parser_signature', Store(), lineno=2933, col_offset=4)], Call(Name('Sig', Load(), lineno=2933, col_offset=23), [], [keyword('prog', Str('PROG', lineno=2934, col_offset=13)), keyword('description', Str('   oddly    formatted\ndescription\n\nthat is so long that it should go onto multiple lines when wrapped', lineno=2935, col_offset=20))], None, None, lineno=2933, col_offset=23), lineno=2933, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=2940, col_offset=4)], List([Call(Name('Sig', Load(), lineno=2941, col_offset=8), [Str('-x', lineno=2941, col_offset=12)], [keyword('metavar', Str('XX', lineno=2941, col_offset=26)), keyword('help', Str('oddly\n    formatted -x help', lineno=2941, col_offset=37))], None, None, lineno=2941, col_offset=8), Call(Name('Sig', Load(), lineno=2943, col_offset=8), [Str('y', lineno=2943, col_offset=12)], [keyword('metavar', Str('yyy', lineno=2943, col_offset=25)), keyword('help', Str('normal y help', lineno=2943, col_offset=37))], None, None, lineno=2943, col_offset=8)], Load(), lineno=2940, col_offset=26), lineno=2940, col_offset=4), Assign([Name('argument_group_signatures', Store(), lineno=2945, col_offset=4)], List([Tuple([Call(Name('Sig', Load(), lineno=2946, col_offset=9), [Str('title', lineno=2946, col_offset=13)], [keyword('description', Str('\n    oddly formatted group\n\ndescription', lineno=2946, col_offset=34))], None, None, lineno=2946, col_offset=9), List([Call(Name('Sig', Load(), lineno=2950, col_offset=10), [Str('-a', lineno=2950, col_offset=14)], [keyword('action', Str('store_true', lineno=2950, col_offset=27)), keyword('help', Str(' oddly \nformatted    -a  help  \n    again, so long that it should be wrapped over multiple lines', lineno=2951, col_offset=19))], None, None, lineno=2950, col_offset=10)], Load(), lineno=2950, col_offset=9)], Load(), lineno=2946, col_offset=9)], Load(), lineno=2945, col_offset=32), lineno=2945, col_offset=4), Assign([Name('usage', Store(), lineno=2956, col_offset=4)], Str('        usage: PROG [-h] [-x XX] [-a] yyy\n        ', lineno=2958, col_offset=-1), lineno=2956, col_offset=4), Assign([Name('help', Store(), lineno=2959, col_offset=4)], BinOp(Name('usage', Load(), lineno=2959, col_offset=11), Add(), Str('\n        oddly formatted description that is so long that it should go onto multiple\n        lines when wrapped\n\n        positional arguments:\n          yyy         normal y help\n\n        optional arguments:\n          -h, --help  show this help message and exit\n          -x XX       oddly formatted -x help\n\n        title:\n          oddly formatted group description\n\n          -a          oddly formatted -a help again, so long that it should be wrapped\n                      over multiple lines\n        ', lineno=2978, col_offset=-1), lineno=2959, col_offset=11), lineno=2959, col_offset=4), Assign([Name('version', Store(), lineno=2979, col_offset=4)], Str('', lineno=2979, col_offset=14), lineno=2979, col_offset=4)], [], lineno=2930, col_offset=0), ClassDef('TestHelpWrappingShortNames', [Name('HelpTestCase', Load(), lineno=2982, col_offset=33)], [Expr(Str('Make sure that text after short names starts on the first line', lineno=2983, col_offset=4), lineno=2983, col_offset=4), Assign([Name('parser_signature', Store(), lineno=2985, col_offset=4)], Call(Name('Sig', Load(), lineno=2985, col_offset=23), [], [keyword('prog', Str('PROG', lineno=2985, col_offset=32)), keyword('description', BinOp(Str('D\nD', lineno=2985, col_offset=53), Mult(), Num(30, lineno=2985, col_offset=62), lineno=2985, col_offset=53))], None, None, lineno=2985, col_offset=23), lineno=2985, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=2986, col_offset=4)], List([Call(Name('Sig', Load(), lineno=2987, col_offset=8), [Str('-x', lineno=2987, col_offset=12)], [keyword('metavar', Str('XX', lineno=2987, col_offset=26)), keyword('help', BinOp(Str('XHH HX', lineno=2987, col_offset=37), Mult(), Num(20, lineno=2987, col_offset=48), lineno=2987, col_offset=37))], None, None, lineno=2987, col_offset=8), Call(Name('Sig', Load(), lineno=2988, col_offset=8), [Str('y', lineno=2988, col_offset=12)], [keyword('metavar', Str('yyy', lineno=2988, col_offset=25)), keyword('help', BinOp(Str('YH YH', lineno=2988, col_offset=37), Mult(), Num(20, lineno=2988, col_offset=47), lineno=2988, col_offset=37))], None, None, lineno=2988, col_offset=8)], Load(), lineno=2986, col_offset=26), lineno=2986, col_offset=4), Assign([Name('argument_group_signatures', Store(), lineno=2990, col_offset=4)], List([Tuple([Call(Name('Sig', Load(), lineno=2991, col_offset=9), [Str('ALPHAS', lineno=2991, col_offset=13)], [], None, None, lineno=2991, col_offset=9), List([Call(Name('Sig', Load(), lineno=2992, col_offset=12), [Str('-a', lineno=2992, col_offset=16)], [keyword('action', Str('store_true', lineno=2992, col_offset=29)), keyword('help', BinOp(Str('AHHH HHA', lineno=2992, col_offset=48), Mult(), Num(10, lineno=2992, col_offset=61), lineno=2992, col_offset=48))], None, None, lineno=2992, col_offset=12)], Load(), lineno=2991, col_offset=24)], Load(), lineno=2991, col_offset=9)], Load(), lineno=2990, col_offset=32), lineno=2990, col_offset=4), Assign([Name('usage', Store(), lineno=2994, col_offset=4)], Str('        usage: PROG [-h] [-x XX] [-a] yyy\n        ', lineno=2996, col_offset=-1), lineno=2994, col_offset=4), Assign([Name('help', Store(), lineno=2997, col_offset=4)], BinOp(Name('usage', Load(), lineno=2997, col_offset=11), Add(), Str('\n        D DD DD DD DD DD DD DD DD DD DD DD DD DD DD DD DD DD DD DD DD DD DD DD DD DD\n        DD DD DD DD D\n\n        positional arguments:\n          yyy         YH YHYH YHYH YHYH YHYH YHYH YHYH YHYH YHYH YHYH YHYH YHYH YHYH\n                      YHYH YHYH YHYH YHYH YHYH YHYH YHYH YH\n\n        optional arguments:\n          -h, --help  show this help message and exit\n          -x XX       XHH HXXHH HXXHH HXXHH HXXHH HXXHH HXXHH HXXHH HXXHH HXXHH HXXHH\n                      HXXHH HXXHH HXXHH HXXHH HXXHH HXXHH HXXHH HXXHH HXXHH HX\n\n        ALPHAS:\n          -a          AHHH HHAAHHH HHAAHHH HHAAHHH HHAAHHH HHAAHHH HHAAHHH HHAAHHH\n                      HHAAHHH HHAAHHH HHA\n        ', lineno=3018, col_offset=-1), lineno=2997, col_offset=11), lineno=2997, col_offset=4), Assign([Name('version', Store(), lineno=3019, col_offset=4)], Str('', lineno=3019, col_offset=14), lineno=3019, col_offset=4)], [], lineno=2982, col_offset=0), ClassDef('TestHelpWrappingLongNames', [Name('HelpTestCase', Load(), lineno=3022, col_offset=32)], [Expr(Str('Make sure that text after long names starts on the next line', lineno=3023, col_offset=4), lineno=3023, col_offset=4), Assign([Name('parser_signature', Store(), lineno=3025, col_offset=4)], Call(Name('Sig', Load(), lineno=3025, col_offset=23), [], [keyword('usage', Str('USAGE', lineno=3025, col_offset=33)), keyword('description', BinOp(Str('D D', lineno=3025, col_offset=55), Mult(), Num(30, lineno=3025, col_offset=63), lineno=3025, col_offset=55)), keyword('version', BinOp(Str('V V', lineno=3026, col_offset=35), Mult(), Num(30, lineno=3026, col_offset=41), lineno=3026, col_offset=35))], None, None, lineno=3025, col_offset=23), lineno=3025, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=3027, col_offset=4)], List([Call(Name('Sig', Load(), lineno=3028, col_offset=8), [Str('-x', lineno=3028, col_offset=12)], [keyword('metavar', BinOp(Str('X', lineno=3028, col_offset=26), Mult(), Num(25, lineno=3028, col_offset=32), lineno=3028, col_offset=26)), keyword('help', BinOp(Str('XH XH', lineno=3028, col_offset=41), Mult(), Num(20, lineno=3028, col_offset=51), lineno=3028, col_offset=41))], None, None, lineno=3028, col_offset=8), Call(Name('Sig', Load(), lineno=3029, col_offset=8), [Str('y', lineno=3029, col_offset=12)], [keyword('metavar', BinOp(Str('y', lineno=3029, col_offset=25), Mult(), Num(25, lineno=3029, col_offset=31), lineno=3029, col_offset=25)), keyword('help', BinOp(Str('YH YH', lineno=3029, col_offset=40), Mult(), Num(20, lineno=3029, col_offset=50), lineno=3029, col_offset=40))], None, None, lineno=3029, col_offset=8)], Load(), lineno=3027, col_offset=26), lineno=3027, col_offset=4), Assign([Name('argument_group_signatures', Store(), lineno=3031, col_offset=4)], List([Tuple([Call(Name('Sig', Load(), lineno=3032, col_offset=9), [Str('ALPHAS', lineno=3032, col_offset=13)], [], None, None, lineno=3032, col_offset=9), List([Call(Name('Sig', Load(), lineno=3033, col_offset=12), [Str('-a', lineno=3033, col_offset=16)], [keyword('metavar', BinOp(Str('A', lineno=3033, col_offset=30), Mult(), Num(25, lineno=3033, col_offset=36), lineno=3033, col_offset=30)), keyword('help', BinOp(Str('AH AH', lineno=3033, col_offset=45), Mult(), Num(20, lineno=3033, col_offset=55), lineno=3033, col_offset=45))], None, None, lineno=3033, col_offset=12), Call(Name('Sig', Load(), lineno=3034, col_offset=12), [Str('z', lineno=3034, col_offset=16)], [keyword('metavar', BinOp(Str('z', lineno=3034, col_offset=29), Mult(), Num(25, lineno=3034, col_offset=35), lineno=3034, col_offset=29)), keyword('help', BinOp(Str('ZH ZH', lineno=3034, col_offset=44), Mult(), Num(20, lineno=3034, col_offset=54), lineno=3034, col_offset=44))], None, None, lineno=3034, col_offset=12)], Load(), lineno=3032, col_offset=24)], Load(), lineno=3032, col_offset=9)], Load(), lineno=3031, col_offset=32), lineno=3031, col_offset=4), Assign([Name('usage', Store(), lineno=3036, col_offset=4)], Str('        usage: USAGE\n        ', lineno=3038, col_offset=-1), lineno=3036, col_offset=4), Assign([Name('help', Store(), lineno=3039, col_offset=4)], BinOp(Name('usage', Load(), lineno=3039, col_offset=11), Add(), Str("\n        D DD DD DD DD DD DD DD DD DD DD DD DD DD DD DD DD DD DD DD DD DD DD DD DD DD\n        DD DD DD DD D\n\n        positional arguments:\n          yyyyyyyyyyyyyyyyyyyyyyyyy\n                                YH YHYH YHYH YHYH YHYH YHYH YHYH YHYH YHYH YHYH YHYH\n                                YHYH YHYH YHYH YHYH YHYH YHYH YHYH YHYH YHYH YH\n\n        optional arguments:\n          -h, --help            show this help message and exit\n          -v, --version         show program's version number and exit\n          -x XXXXXXXXXXXXXXXXXXXXXXXXX\n                                XH XHXH XHXH XHXH XHXH XHXH XHXH XHXH XHXH XHXH XHXH\n                                XHXH XHXH XHXH XHXH XHXH XHXH XHXH XHXH XHXH XH\n\n        ALPHAS:\n          -a AAAAAAAAAAAAAAAAAAAAAAAAA\n                                AH AHAH AHAH AHAH AHAH AHAH AHAH AHAH AHAH AHAH AHAH\n                                AHAH AHAH AHAH AHAH AHAH AHAH AHAH AHAH AHAH AH\n          zzzzzzzzzzzzzzzzzzzzzzzzz\n                                ZH ZHZH ZHZH ZHZH ZHZH ZHZH ZHZH ZHZH ZHZH ZHZH ZHZH\n                                ZHZH ZHZH ZHZH ZHZH ZHZH ZHZH ZHZH ZHZH ZHZH ZH\n        ", lineno=3068, col_offset=-1), lineno=3039, col_offset=11), lineno=3039, col_offset=4), Assign([Name('version', Store(), lineno=3069, col_offset=4)], Str('        V VV VV VV VV VV VV VV VV VV VV VV VV VV VV VV VV VV VV VV VV VV VV VV VV VV\n        VV VV VV VV V\n        ', lineno=3073, col_offset=-1), lineno=3069, col_offset=4)], [], lineno=3022, col_offset=0), ClassDef('TestHelpUsage', [Name('HelpTestCase', Load(), lineno=3076, col_offset=20)], [Expr(Str('Test basic usage messages', lineno=3077, col_offset=4), lineno=3077, col_offset=4), Assign([Name('parser_signature', Store(), lineno=3079, col_offset=4)], Call(Name('Sig', Load(), lineno=3079, col_offset=23), [], [keyword('prog', Str('PROG', lineno=3079, col_offset=32))], None, None, lineno=3079, col_offset=23), lineno=3079, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=3080, col_offset=4)], List([Call(Name('Sig', Load(), lineno=3081, col_offset=8), [Str('-w', lineno=3081, col_offset=12)], [keyword('nargs', Str('+', lineno=3081, col_offset=24)), keyword('help', Str('w', lineno=3081, col_offset=34))], None, None, lineno=3081, col_offset=8), Call(Name('Sig', Load(), lineno=3082, col_offset=8), [Str('-x', lineno=3082, col_offset=12)], [keyword('nargs', Str('*', lineno=3082, col_offset=24)), keyword('help', Str('x', lineno=3082, col_offset=34))], None, None, lineno=3082, col_offset=8), Call(Name('Sig', Load(), lineno=3083, col_offset=8), [Str('a', lineno=3083, col_offset=12)], [keyword('help', Str('a', lineno=3083, col_offset=22))], None, None, lineno=3083, col_offset=8), Call(Name('Sig', Load(), lineno=3084, col_offset=8), [Str('b', lineno=3084, col_offset=12)], [keyword('help', Str('b', lineno=3084, col_offset=22)), keyword('nargs', Num(2, lineno=3084, col_offset=33))], None, None, lineno=3084, col_offset=8), Call(Name('Sig', Load(), lineno=3085, col_offset=8), [Str('c', lineno=3085, col_offset=12)], [keyword('help', Str('c', lineno=3085, col_offset=22)), keyword('nargs', Str('?', lineno=3085, col_offset=33))], None, None, lineno=3085, col_offset=8)], Load(), lineno=3080, col_offset=26), lineno=3080, col_offset=4), Assign([Name('argument_group_signatures', Store(), lineno=3087, col_offset=4)], List([Tuple([Call(Name('Sig', Load(), lineno=3088, col_offset=9), [Str('group', lineno=3088, col_offset=13)], [], None, None, lineno=3088, col_offset=9), List([Call(Name('Sig', Load(), lineno=3089, col_offset=12), [Str('-y', lineno=3089, col_offset=16)], [keyword('nargs', Str('?', lineno=3089, col_offset=28)), keyword('help', Str('y', lineno=3089, col_offset=38))], None, None, lineno=3089, col_offset=12), Call(Name('Sig', Load(), lineno=3090, col_offset=12), [Str('-z', lineno=3090, col_offset=16)], [keyword('nargs', Num(3, lineno=3090, col_offset=28)), keyword('help', Str('z', lineno=3090, col_offset=36))], None, None, lineno=3090, col_offset=12), Call(Name('Sig', Load(), lineno=3091, col_offset=12), [Str('d', lineno=3091, col_offset=16)], [keyword('help', Str('d', lineno=3091, col_offset=26)), keyword('nargs', Str('*', lineno=3091, col_offset=37))], None, None, lineno=3091, col_offset=12), Call(Name('Sig', Load(), lineno=3092, col_offset=12), [Str('e', lineno=3092, col_offset=16)], [keyword('help', Str('e', lineno=3092, col_offset=26)), keyword('nargs', Str('+', lineno=3092, col_offset=37))], None, None, lineno=3092, col_offset=12)], Load(), lineno=3088, col_offset=23)], Load(), lineno=3088, col_offset=9)], Load(), lineno=3087, col_offset=32), lineno=3087, col_offset=4), Assign([Name('usage', Store(), lineno=3095, col_offset=4)], Str('        usage: PROG [-h] [-w W [W ...]] [-x [X [X ...]]] [-y [Y]] [-z Z Z Z]\n                    a b b [c] [d [d ...]] e [e ...]\n        ', lineno=3098, col_offset=-1), lineno=3095, col_offset=4), Assign([Name('help', Store(), lineno=3099, col_offset=4)], BinOp(Name('usage', Load(), lineno=3099, col_offset=11), Add(), Str('\n        positional arguments:\n          a               a\n          b               b\n          c               c\n\n        optional arguments:\n          -h, --help      show this help message and exit\n          -w W [W ...]    w\n          -x [X [X ...]]  x\n\n        group:\n          -y [Y]          y\n          -z Z Z Z        z\n          d               d\n          e               e\n        ', lineno=3116, col_offset=-1), lineno=3099, col_offset=11), lineno=3099, col_offset=4), Assign([Name('version', Store(), lineno=3117, col_offset=4)], Str('', lineno=3117, col_offset=14), lineno=3117, col_offset=4)], [], lineno=3076, col_offset=0), ClassDef('TestHelpOnlyUserGroups', [Name('HelpTestCase', Load(), lineno=3120, col_offset=29)], [Expr(Str('Test basic usage messages', lineno=3121, col_offset=4), lineno=3121, col_offset=4), Assign([Name('parser_signature', Store(), lineno=3123, col_offset=4)], Call(Name('Sig', Load(), lineno=3123, col_offset=23), [], [keyword('prog', Str('PROG', lineno=3123, col_offset=32)), keyword('add_help', Name('False', Load(), lineno=3123, col_offset=49))], None, None, lineno=3123, col_offset=23), lineno=3123, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=3124, col_offset=4)], List([], Load(), lineno=3124, col_offset=26), lineno=3124, col_offset=4), Assign([Name('argument_group_signatures', Store(), lineno=3125, col_offset=4)], List([Tuple([Call(Name('Sig', Load(), lineno=3126, col_offset=9), [Str('xxxx', lineno=3126, col_offset=13)], [], None, None, lineno=3126, col_offset=9), List([Call(Name('Sig', Load(), lineno=3127, col_offset=12), [Str('-x', lineno=3127, col_offset=16)], [keyword('help', Str('x', lineno=3127, col_offset=27))], None, None, lineno=3127, col_offset=12), Call(Name('Sig', Load(), lineno=3128, col_offset=12), [Str('a', lineno=3128, col_offset=16)], [keyword('help', Str('a', lineno=3128, col_offset=26))], None, None, lineno=3128, col_offset=12)], Load(), lineno=3126, col_offset=22)], Load(), lineno=3126, col_offset=9), Tuple([Call(Name('Sig', Load(), lineno=3130, col_offset=9), [Str('yyyy', lineno=3130, col_offset=13)], [], None, None, lineno=3130, col_offset=9), List([Call(Name('Sig', Load(), lineno=3131, col_offset=12), [Str('b', lineno=3131, col_offset=16)], [keyword('help', Str('b', lineno=3131, col_offset=26))], None, None, lineno=3131, col_offset=12), Call(Name('Sig', Load(), lineno=3132, col_offset=12), [Str('-y', lineno=3132, col_offset=16)], [keyword('help', Str('y', lineno=3132, col_offset=27))], None, None, lineno=3132, col_offset=12)], Load(), lineno=3130, col_offset=22)], Load(), lineno=3130, col_offset=9)], Load(), lineno=3125, col_offset=32), lineno=3125, col_offset=4), Assign([Name('usage', Store(), lineno=3135, col_offset=4)], Str('        usage: PROG [-x X] [-y Y] a b\n        ', lineno=3137, col_offset=-1), lineno=3135, col_offset=4), Assign([Name('help', Store(), lineno=3138, col_offset=4)], BinOp(Name('usage', Load(), lineno=3138, col_offset=11), Add(), Str('\n        xxxx:\n          -x X  x\n          a     a\n\n        yyyy:\n          b     b\n          -y Y  y\n        ', lineno=3147, col_offset=-1), lineno=3138, col_offset=11), lineno=3138, col_offset=4), Assign([Name('version', Store(), lineno=3148, col_offset=4)], Str('', lineno=3148, col_offset=14), lineno=3148, col_offset=4)], [], lineno=3120, col_offset=0), ClassDef('TestHelpUsageLongProg', [Name('HelpTestCase', Load(), lineno=3151, col_offset=28)], [Expr(Str('Test usage messages where the prog is long', lineno=3152, col_offset=4), lineno=3152, col_offset=4), Assign([Name('parser_signature', Store(), lineno=3154, col_offset=4)], Call(Name('Sig', Load(), lineno=3154, col_offset=23), [], [keyword('prog', BinOp(Str('P', lineno=3154, col_offset=32), Mult(), Num(60, lineno=3154, col_offset=38), lineno=3154, col_offset=32))], None, None, lineno=3154, col_offset=23), lineno=3154, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=3155, col_offset=4)], List([Call(Name('Sig', Load(), lineno=3156, col_offset=8), [Str('-w', lineno=3156, col_offset=12)], [keyword('metavar', Str('W', lineno=3156, col_offset=26))], None, None, lineno=3156, col_offset=8), Call(Name('Sig', Load(), lineno=3157, col_offset=8), [Str('-x', lineno=3157, col_offset=12)], [keyword('metavar', Str('X', lineno=3157, col_offset=26))], None, None, lineno=3157, col_offset=8), Call(Name('Sig', Load(), lineno=3158, col_offset=8), [Str('a', lineno=3158, col_offset=12)], [], None, None, lineno=3158, col_offset=8), Call(Name('Sig', Load(), lineno=3159, col_offset=8), [Str('b', lineno=3159, col_offset=12)], [], None, None, lineno=3159, col_offset=8)], Load(), lineno=3155, col_offset=26), lineno=3155, col_offset=4), Assign([Name('argument_group_signatures', Store(), lineno=3161, col_offset=4)], List([], Load(), lineno=3161, col_offset=32), lineno=3161, col_offset=4), Assign([Name('usage', Store(), lineno=3162, col_offset=4)], Str('        usage: PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n               [-h] [-w W] [-x X] a b\n        ', lineno=3165, col_offset=-1), lineno=3162, col_offset=4), Assign([Name('help', Store(), lineno=3166, col_offset=4)], BinOp(Name('usage', Load(), lineno=3166, col_offset=11), Add(), Str('\n        positional arguments:\n          a\n          b\n\n        optional arguments:\n          -h, --help  show this help message and exit\n          -w W\n          -x X\n        ', lineno=3176, col_offset=-1), lineno=3166, col_offset=11), lineno=3166, col_offset=4), Assign([Name('version', Store(), lineno=3177, col_offset=4)], Str('', lineno=3177, col_offset=14), lineno=3177, col_offset=4)], [], lineno=3151, col_offset=0), ClassDef('TestHelpUsageLongProgOptionsWrap', [Name('HelpTestCase', Load(), lineno=3180, col_offset=39)], [Expr(Str('Test usage messages where the prog is long and the optionals wrap', lineno=3181, col_offset=4), lineno=3181, col_offset=4), Assign([Name('parser_signature', Store(), lineno=3183, col_offset=4)], Call(Name('Sig', Load(), lineno=3183, col_offset=23), [], [keyword('prog', BinOp(Str('P', lineno=3183, col_offset=32), Mult(), Num(60, lineno=3183, col_offset=38), lineno=3183, col_offset=32))], None, None, lineno=3183, col_offset=23), lineno=3183, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=3184, col_offset=4)], List([Call(Name('Sig', Load(), lineno=3185, col_offset=8), [Str('-w', lineno=3185, col_offset=12)], [keyword('metavar', BinOp(Str('W', lineno=3185, col_offset=26), Mult(), Num(25, lineno=3185, col_offset=32), lineno=3185, col_offset=26))], None, None, lineno=3185, col_offset=8), Call(Name('Sig', Load(), lineno=3186, col_offset=8), [Str('-x', lineno=3186, col_offset=12)], [keyword('metavar', BinOp(Str('X', lineno=3186, col_offset=26), Mult(), Num(25, lineno=3186, col_offset=32), lineno=3186, col_offset=26))], None, None, lineno=3186, col_offset=8), Call(Name('Sig', Load(), lineno=3187, col_offset=8), [Str('-y', lineno=3187, col_offset=12)], [keyword('metavar', BinOp(Str('Y', lineno=3187, col_offset=26), Mult(), Num(25, lineno=3187, col_offset=32), lineno=3187, col_offset=26))], None, None, lineno=3187, col_offset=8), Call(Name('Sig', Load(), lineno=3188, col_offset=8), [Str('-z', lineno=3188, col_offset=12)], [keyword('metavar', BinOp(Str('Z', lineno=3188, col_offset=26), Mult(), Num(25, lineno=3188, col_offset=32), lineno=3188, col_offset=26))], None, None, lineno=3188, col_offset=8), Call(Name('Sig', Load(), lineno=3189, col_offset=8), [Str('a', lineno=3189, col_offset=12)], [], None, None, lineno=3189, col_offset=8), Call(Name('Sig', Load(), lineno=3190, col_offset=8), [Str('b', lineno=3190, col_offset=12)], [], None, None, lineno=3190, col_offset=8)], Load(), lineno=3184, col_offset=26), lineno=3184, col_offset=4), Assign([Name('argument_group_signatures', Store(), lineno=3192, col_offset=4)], List([], Load(), lineno=3192, col_offset=32), lineno=3192, col_offset=4), Assign([Name('usage', Store(), lineno=3193, col_offset=4)], Str('        usage: PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n               [-h] [-w WWWWWWWWWWWWWWWWWWWWWWWWW] [-x XXXXXXXXXXXXXXXXXXXXXXXXX]\n               [-y YYYYYYYYYYYYYYYYYYYYYYYYY] [-z ZZZZZZZZZZZZZZZZZZZZZZZZZ]\n               a b\n        ', lineno=3199, col_offset=-1), lineno=3193, col_offset=4), Assign([Name('help', Store(), lineno=3200, col_offset=4)], BinOp(Name('usage', Load(), lineno=3200, col_offset=11), Add(), Str('\n        positional arguments:\n          a\n          b\n\n        optional arguments:\n          -h, --help            show this help message and exit\n          -w WWWWWWWWWWWWWWWWWWWWWWWWW\n          -x XXXXXXXXXXXXXXXXXXXXXXXXX\n          -y YYYYYYYYYYYYYYYYYYYYYYYYY\n          -z ZZZZZZZZZZZZZZZZZZZZZZZZZ\n        ', lineno=3212, col_offset=-1), lineno=3200, col_offset=11), lineno=3200, col_offset=4), Assign([Name('version', Store(), lineno=3213, col_offset=4)], Str('', lineno=3213, col_offset=14), lineno=3213, col_offset=4)], [], lineno=3180, col_offset=0), ClassDef('TestHelpUsageLongProgPositionalsWrap', [Name('HelpTestCase', Load(), lineno=3216, col_offset=43)], [Expr(Str('Test usage messages where the prog is long and the positionals wrap', lineno=3217, col_offset=4), lineno=3217, col_offset=4), Assign([Name('parser_signature', Store(), lineno=3219, col_offset=4)], Call(Name('Sig', Load(), lineno=3219, col_offset=23), [], [keyword('prog', BinOp(Str('P', lineno=3219, col_offset=32), Mult(), Num(60, lineno=3219, col_offset=38), lineno=3219, col_offset=32)), keyword('add_help', Name('False', Load(), lineno=3219, col_offset=51))], None, None, lineno=3219, col_offset=23), lineno=3219, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=3220, col_offset=4)], List([Call(Name('Sig', Load(), lineno=3221, col_offset=8), [BinOp(Str('a', lineno=3221, col_offset=12), Mult(), Num(25, lineno=3221, col_offset=18), lineno=3221, col_offset=12)], [], None, None, lineno=3221, col_offset=8), Call(Name('Sig', Load(), lineno=3222, col_offset=8), [BinOp(Str('b', lineno=3222, col_offset=12), Mult(), Num(25, lineno=3222, col_offset=18), lineno=3222, col_offset=12)], [], None, None, lineno=3222, col_offset=8), Call(Name('Sig', Load(), lineno=3223, col_offset=8), [BinOp(Str('c', lineno=3223, col_offset=12), Mult(), Num(25, lineno=3223, col_offset=18), lineno=3223, col_offset=12)], [], None, None, lineno=3223, col_offset=8)], Load(), lineno=3220, col_offset=26), lineno=3220, col_offset=4), Assign([Name('argument_group_signatures', Store(), lineno=3225, col_offset=4)], List([], Load(), lineno=3225, col_offset=32), lineno=3225, col_offset=4), Assign([Name('usage', Store(), lineno=3226, col_offset=4)], Str('        usage: PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n               aaaaaaaaaaaaaaaaaaaaaaaaa bbbbbbbbbbbbbbbbbbbbbbbbb\n               ccccccccccccccccccccccccc\n        ', lineno=3230, col_offset=-1), lineno=3226, col_offset=4), Assign([Name('help', Store(), lineno=3231, col_offset=4)], BinOp(Name('usage', Load(), lineno=3231, col_offset=11), Add(), Str('\n        positional arguments:\n          aaaaaaaaaaaaaaaaaaaaaaaaa\n          bbbbbbbbbbbbbbbbbbbbbbbbb\n          ccccccccccccccccccccccccc\n        ', lineno=3237, col_offset=-1), lineno=3231, col_offset=11), lineno=3231, col_offset=4), Assign([Name('version', Store(), lineno=3238, col_offset=4)], Str('', lineno=3238, col_offset=14), lineno=3238, col_offset=4)], [], lineno=3216, col_offset=0), ClassDef('TestHelpUsageOptionalsWrap', [Name('HelpTestCase', Load(), lineno=3241, col_offset=33)], [Expr(Str('Test usage messages where the optionals wrap', lineno=3242, col_offset=4), lineno=3242, col_offset=4), Assign([Name('parser_signature', Store(), lineno=3244, col_offset=4)], Call(Name('Sig', Load(), lineno=3244, col_offset=23), [], [keyword('prog', Str('PROG', lineno=3244, col_offset=32))], None, None, lineno=3244, col_offset=23), lineno=3244, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=3245, col_offset=4)], List([Call(Name('Sig', Load(), lineno=3246, col_offset=8), [Str('-w', lineno=3246, col_offset=12)], [keyword('metavar', BinOp(Str('W', lineno=3246, col_offset=26), Mult(), Num(25, lineno=3246, col_offset=32), lineno=3246, col_offset=26))], None, None, lineno=3246, col_offset=8), Call(Name('Sig', Load(), lineno=3247, col_offset=8), [Str('-x', lineno=3247, col_offset=12)], [keyword('metavar', BinOp(Str('X', lineno=3247, col_offset=26), Mult(), Num(25, lineno=3247, col_offset=32), lineno=3247, col_offset=26))], None, None, lineno=3247, col_offset=8), Call(Name('Sig', Load(), lineno=3248, col_offset=8), [Str('-y', lineno=3248, col_offset=12)], [keyword('metavar', BinOp(Str('Y', lineno=3248, col_offset=26), Mult(), Num(25, lineno=3248, col_offset=32), lineno=3248, col_offset=26))], None, None, lineno=3248, col_offset=8), Call(Name('Sig', Load(), lineno=3249, col_offset=8), [Str('-z', lineno=3249, col_offset=12)], [keyword('metavar', BinOp(Str('Z', lineno=3249, col_offset=26), Mult(), Num(25, lineno=3249, col_offset=32), lineno=3249, col_offset=26))], None, None, lineno=3249, col_offset=8), Call(Name('Sig', Load(), lineno=3250, col_offset=8), [Str('a', lineno=3250, col_offset=12)], [], None, None, lineno=3250, col_offset=8), Call(Name('Sig', Load(), lineno=3251, col_offset=8), [Str('b', lineno=3251, col_offset=12)], [], None, None, lineno=3251, col_offset=8), Call(Name('Sig', Load(), lineno=3252, col_offset=8), [Str('c', lineno=3252, col_offset=12)], [], None, None, lineno=3252, col_offset=8)], Load(), lineno=3245, col_offset=26), lineno=3245, col_offset=4), Assign([Name('argument_group_signatures', Store(), lineno=3254, col_offset=4)], List([], Load(), lineno=3254, col_offset=32), lineno=3254, col_offset=4), Assign([Name('usage', Store(), lineno=3255, col_offset=4)], Str('        usage: PROG [-h] [-w WWWWWWWWWWWWWWWWWWWWWWWWW] [-x XXXXXXXXXXXXXXXXXXXXXXXXX]\n                    [-y YYYYYYYYYYYYYYYYYYYYYYYYY] [-z ZZZZZZZZZZZZZZZZZZZZZZZZZ]\n                    a b c\n        ', lineno=3261, col_offset=-1), lineno=3255, col_offset=4), Assign([Name('help', Store(), lineno=3262, col_offset=4)], BinOp(Name('usage', Load(), lineno=3262, col_offset=11), Add(), Str('\n        positional arguments:\n          a\n          b\n          c\n\n        optional arguments:\n          -h, --help            show this help message and exit\n          -w WWWWWWWWWWWWWWWWWWWWWWWWW\n          -x XXXXXXXXXXXXXXXXXXXXXXXXX\n          -y YYYYYYYYYYYYYYYYYYYYYYYYY\n          -z ZZZZZZZZZZZZZZZZZZZZZZZZZ\n        ', lineno=3275, col_offset=-1), lineno=3262, col_offset=11), lineno=3262, col_offset=4), Assign([Name('version', Store(), lineno=3276, col_offset=4)], Str('', lineno=3276, col_offset=14), lineno=3276, col_offset=4)], [], lineno=3241, col_offset=0), ClassDef('TestHelpUsagePositionalsWrap', [Name('HelpTestCase', Load(), lineno=3279, col_offset=35)], [Expr(Str('Test usage messages where the positionals wrap', lineno=3280, col_offset=4), lineno=3280, col_offset=4), Assign([Name('parser_signature', Store(), lineno=3282, col_offset=4)], Call(Name('Sig', Load(), lineno=3282, col_offset=23), [], [keyword('prog', Str('PROG', lineno=3282, col_offset=32))], None, None, lineno=3282, col_offset=23), lineno=3282, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=3283, col_offset=4)], List([Call(Name('Sig', Load(), lineno=3284, col_offset=8), [Str('-x', lineno=3284, col_offset=12)], [], None, None, lineno=3284, col_offset=8), Call(Name('Sig', Load(), lineno=3285, col_offset=8), [Str('-y', lineno=3285, col_offset=12)], [], None, None, lineno=3285, col_offset=8), Call(Name('Sig', Load(), lineno=3286, col_offset=8), [Str('-z', lineno=3286, col_offset=12)], [], None, None, lineno=3286, col_offset=8), Call(Name('Sig', Load(), lineno=3287, col_offset=8), [BinOp(Str('a', lineno=3287, col_offset=12), Mult(), Num(25, lineno=3287, col_offset=18), lineno=3287, col_offset=12)], [], None, None, lineno=3287, col_offset=8), Call(Name('Sig', Load(), lineno=3288, col_offset=8), [BinOp(Str('b', lineno=3288, col_offset=12), Mult(), Num(25, lineno=3288, col_offset=18), lineno=3288, col_offset=12)], [], None, None, lineno=3288, col_offset=8), Call(Name('Sig', Load(), lineno=3289, col_offset=8), [BinOp(Str('c', lineno=3289, col_offset=12), Mult(), Num(25, lineno=3289, col_offset=18), lineno=3289, col_offset=12)], [], None, None, lineno=3289, col_offset=8)], Load(), lineno=3283, col_offset=26), lineno=3283, col_offset=4), Assign([Name('argument_group_signatures', Store(), lineno=3291, col_offset=4)], List([], Load(), lineno=3291, col_offset=32), lineno=3291, col_offset=4), Assign([Name('usage', Store(), lineno=3292, col_offset=4)], Str('        usage: PROG [-h] [-x X] [-y Y] [-z Z]\n                    aaaaaaaaaaaaaaaaaaaaaaaaa bbbbbbbbbbbbbbbbbbbbbbbbb\n                    ccccccccccccccccccccccccc\n        ', lineno=3296, col_offset=-1), lineno=3292, col_offset=4), Assign([Name('help', Store(), lineno=3297, col_offset=4)], BinOp(Name('usage', Load(), lineno=3297, col_offset=11), Add(), Str('\n        positional arguments:\n          aaaaaaaaaaaaaaaaaaaaaaaaa\n          bbbbbbbbbbbbbbbbbbbbbbbbb\n          ccccccccccccccccccccccccc\n\n        optional arguments:\n          -h, --help            show this help message and exit\n          -x X\n          -y Y\n          -z Z\n        ', lineno=3309, col_offset=-1), lineno=3297, col_offset=11), lineno=3297, col_offset=4), Assign([Name('version', Store(), lineno=3310, col_offset=4)], Str('', lineno=3310, col_offset=14), lineno=3310, col_offset=4)], [], lineno=3279, col_offset=0), ClassDef('TestHelpUsageOptionalsPositionalsWrap', [Name('HelpTestCase', Load(), lineno=3313, col_offset=44)], [Expr(Str('Test usage messages where the optionals and positionals wrap', lineno=3314, col_offset=4), lineno=3314, col_offset=4), Assign([Name('parser_signature', Store(), lineno=3316, col_offset=4)], Call(Name('Sig', Load(), lineno=3316, col_offset=23), [], [keyword('prog', Str('PROG', lineno=3316, col_offset=32))], None, None, lineno=3316, col_offset=23), lineno=3316, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=3317, col_offset=4)], List([Call(Name('Sig', Load(), lineno=3318, col_offset=8), [Str('-x', lineno=3318, col_offset=12)], [keyword('metavar', BinOp(Str('X', lineno=3318, col_offset=26), Mult(), Num(25, lineno=3318, col_offset=32), lineno=3318, col_offset=26))], None, None, lineno=3318, col_offset=8), Call(Name('Sig', Load(), lineno=3319, col_offset=8), [Str('-y', lineno=3319, col_offset=12)], [keyword('metavar', BinOp(Str('Y', lineno=3319, col_offset=26), Mult(), Num(25, lineno=3319, col_offset=32), lineno=3319, col_offset=26))], None, None, lineno=3319, col_offset=8), Call(Name('Sig', Load(), lineno=3320, col_offset=8), [Str('-z', lineno=3320, col_offset=12)], [keyword('metavar', BinOp(Str('Z', lineno=3320, col_offset=26), Mult(), Num(25, lineno=3320, col_offset=32), lineno=3320, col_offset=26))], None, None, lineno=3320, col_offset=8), Call(Name('Sig', Load(), lineno=3321, col_offset=8), [BinOp(Str('a', lineno=3321, col_offset=12), Mult(), Num(25, lineno=3321, col_offset=18), lineno=3321, col_offset=12)], [], None, None, lineno=3321, col_offset=8), Call(Name('Sig', Load(), lineno=3322, col_offset=8), [BinOp(Str('b', lineno=3322, col_offset=12), Mult(), Num(25, lineno=3322, col_offset=18), lineno=3322, col_offset=12)], [], None, None, lineno=3322, col_offset=8), Call(Name('Sig', Load(), lineno=3323, col_offset=8), [BinOp(Str('c', lineno=3323, col_offset=12), Mult(), Num(25, lineno=3323, col_offset=18), lineno=3323, col_offset=12)], [], None, None, lineno=3323, col_offset=8)], Load(), lineno=3317, col_offset=26), lineno=3317, col_offset=4), Assign([Name('argument_group_signatures', Store(), lineno=3325, col_offset=4)], List([], Load(), lineno=3325, col_offset=32), lineno=3325, col_offset=4), Assign([Name('usage', Store(), lineno=3326, col_offset=4)], Str('        usage: PROG [-h] [-x XXXXXXXXXXXXXXXXXXXXXXXXX] [-y YYYYYYYYYYYYYYYYYYYYYYYYY]\n                    [-z ZZZZZZZZZZZZZZZZZZZZZZZZZ]\n                    aaaaaaaaaaaaaaaaaaaaaaaaa bbbbbbbbbbbbbbbbbbbbbbbbb\n                    ccccccccccccccccccccccccc\n        ', lineno=3332, col_offset=-1), lineno=3326, col_offset=4), Assign([Name('help', Store(), lineno=3333, col_offset=4)], BinOp(Name('usage', Load(), lineno=3333, col_offset=11), Add(), Str('\n        positional arguments:\n          aaaaaaaaaaaaaaaaaaaaaaaaa\n          bbbbbbbbbbbbbbbbbbbbbbbbb\n          ccccccccccccccccccccccccc\n\n        optional arguments:\n          -h, --help            show this help message and exit\n          -x XXXXXXXXXXXXXXXXXXXXXXXXX\n          -y YYYYYYYYYYYYYYYYYYYYYYYYY\n          -z ZZZZZZZZZZZZZZZZZZZZZZZZZ\n        ', lineno=3345, col_offset=-1), lineno=3333, col_offset=11), lineno=3333, col_offset=4), Assign([Name('version', Store(), lineno=3346, col_offset=4)], Str('', lineno=3346, col_offset=14), lineno=3346, col_offset=4)], [], lineno=3313, col_offset=0), ClassDef('TestHelpUsageOptionalsOnlyWrap', [Name('HelpTestCase', Load(), lineno=3349, col_offset=37)], [Expr(Str('Test usage messages where there are only optionals and they wrap', lineno=3350, col_offset=4), lineno=3350, col_offset=4), Assign([Name('parser_signature', Store(), lineno=3352, col_offset=4)], Call(Name('Sig', Load(), lineno=3352, col_offset=23), [], [keyword('prog', Str('PROG', lineno=3352, col_offset=32))], None, None, lineno=3352, col_offset=23), lineno=3352, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=3353, col_offset=4)], List([Call(Name('Sig', Load(), lineno=3354, col_offset=8), [Str('-x', lineno=3354, col_offset=12)], [keyword('metavar', BinOp(Str('X', lineno=3354, col_offset=26), Mult(), Num(25, lineno=3354, col_offset=32), lineno=3354, col_offset=26))], None, None, lineno=3354, col_offset=8), Call(Name('Sig', Load(), lineno=3355, col_offset=8), [Str('-y', lineno=3355, col_offset=12)], [keyword('metavar', BinOp(Str('Y', lineno=3355, col_offset=26), Mult(), Num(25, lineno=3355, col_offset=32), lineno=3355, col_offset=26))], None, None, lineno=3355, col_offset=8), Call(Name('Sig', Load(), lineno=3356, col_offset=8), [Str('-z', lineno=3356, col_offset=12)], [keyword('metavar', BinOp(Str('Z', lineno=3356, col_offset=26), Mult(), Num(25, lineno=3356, col_offset=32), lineno=3356, col_offset=26))], None, None, lineno=3356, col_offset=8)], Load(), lineno=3353, col_offset=26), lineno=3353, col_offset=4), Assign([Name('argument_group_signatures', Store(), lineno=3358, col_offset=4)], List([], Load(), lineno=3358, col_offset=32), lineno=3358, col_offset=4), Assign([Name('usage', Store(), lineno=3359, col_offset=4)], Str('        usage: PROG [-h] [-x XXXXXXXXXXXXXXXXXXXXXXXXX] [-y YYYYYYYYYYYYYYYYYYYYYYYYY]\n                    [-z ZZZZZZZZZZZZZZZZZZZZZZZZZ]\n        ', lineno=3363, col_offset=-1), lineno=3359, col_offset=4), Assign([Name('help', Store(), lineno=3364, col_offset=4)], BinOp(Name('usage', Load(), lineno=3364, col_offset=11), Add(), Str('\n        optional arguments:\n          -h, --help            show this help message and exit\n          -x XXXXXXXXXXXXXXXXXXXXXXXXX\n          -y YYYYYYYYYYYYYYYYYYYYYYYYY\n          -z ZZZZZZZZZZZZZZZZZZZZZZZZZ\n        ', lineno=3371, col_offset=-1), lineno=3364, col_offset=11), lineno=3364, col_offset=4), Assign([Name('version', Store(), lineno=3372, col_offset=4)], Str('', lineno=3372, col_offset=14), lineno=3372, col_offset=4)], [], lineno=3349, col_offset=0), ClassDef('TestHelpUsagePositionalsOnlyWrap', [Name('HelpTestCase', Load(), lineno=3375, col_offset=39)], [Expr(Str('Test usage messages where there are only positionals and they wrap', lineno=3376, col_offset=4), lineno=3376, col_offset=4), Assign([Name('parser_signature', Store(), lineno=3378, col_offset=4)], Call(Name('Sig', Load(), lineno=3378, col_offset=23), [], [keyword('prog', Str('PROG', lineno=3378, col_offset=32)), keyword('add_help', Name('False', Load(), lineno=3378, col_offset=49))], None, None, lineno=3378, col_offset=23), lineno=3378, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=3379, col_offset=4)], List([Call(Name('Sig', Load(), lineno=3380, col_offset=8), [BinOp(Str('a', lineno=3380, col_offset=12), Mult(), Num(25, lineno=3380, col_offset=18), lineno=3380, col_offset=12)], [], None, None, lineno=3380, col_offset=8), Call(Name('Sig', Load(), lineno=3381, col_offset=8), [BinOp(Str('b', lineno=3381, col_offset=12), Mult(), Num(25, lineno=3381, col_offset=18), lineno=3381, col_offset=12)], [], None, None, lineno=3381, col_offset=8), Call(Name('Sig', Load(), lineno=3382, col_offset=8), [BinOp(Str('c', lineno=3382, col_offset=12), Mult(), Num(25, lineno=3382, col_offset=18), lineno=3382, col_offset=12)], [], None, None, lineno=3382, col_offset=8)], Load(), lineno=3379, col_offset=26), lineno=3379, col_offset=4), Assign([Name('argument_group_signatures', Store(), lineno=3384, col_offset=4)], List([], Load(), lineno=3384, col_offset=32), lineno=3384, col_offset=4), Assign([Name('usage', Store(), lineno=3385, col_offset=4)], Str('        usage: PROG aaaaaaaaaaaaaaaaaaaaaaaaa bbbbbbbbbbbbbbbbbbbbbbbbb\n                    ccccccccccccccccccccccccc\n        ', lineno=3388, col_offset=-1), lineno=3385, col_offset=4), Assign([Name('help', Store(), lineno=3389, col_offset=4)], BinOp(Name('usage', Load(), lineno=3389, col_offset=11), Add(), Str('\n        positional arguments:\n          aaaaaaaaaaaaaaaaaaaaaaaaa\n          bbbbbbbbbbbbbbbbbbbbbbbbb\n          ccccccccccccccccccccccccc\n        ', lineno=3395, col_offset=-1), lineno=3389, col_offset=11), lineno=3389, col_offset=4), Assign([Name('version', Store(), lineno=3396, col_offset=4)], Str('', lineno=3396, col_offset=14), lineno=3396, col_offset=4)], [], lineno=3375, col_offset=0), ClassDef('TestHelpVariableExpansion', [Name('HelpTestCase', Load(), lineno=3399, col_offset=32)], [Expr(Str('Test that variables are expanded properly in help messages', lineno=3400, col_offset=4), lineno=3400, col_offset=4), Assign([Name('parser_signature', Store(), lineno=3402, col_offset=4)], Call(Name('Sig', Load(), lineno=3402, col_offset=23), [], [keyword('prog', Str('PROG', lineno=3402, col_offset=32))], None, None, lineno=3402, col_offset=23), lineno=3402, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=3403, col_offset=4)], List([Call(Name('Sig', Load(), lineno=3404, col_offset=8), [Str('-x', lineno=3404, col_offset=12)], [keyword('type', Name('int', Load(), lineno=3404, col_offset=23)), keyword('help', Str('x %(prog)s %(default)s %(type)s %%', lineno=3405, col_offset=17))], None, None, lineno=3404, col_offset=8), Call(Name('Sig', Load(), lineno=3406, col_offset=8), [Str('-y', lineno=3406, col_offset=12)], [keyword('action', Str('store_const', lineno=3406, col_offset=25)), keyword('default', Num(42, lineno=3406, col_offset=48)), keyword('const', Str('XXX', lineno=3406, col_offset=58)), keyword('help', Str('y %(prog)s %(default)s %(const)s', lineno=3407, col_offset=17))], None, None, lineno=3406, col_offset=8), Call(Name('Sig', Load(), lineno=3408, col_offset=8), [Str('--foo', lineno=3408, col_offset=12)], [keyword('choices', Str('abc', lineno=3408, col_offset=29)), keyword('help', Str('foo %(prog)s %(default)s %(choices)s', lineno=3409, col_offset=17))], None, None, lineno=3408, col_offset=8), Call(Name('Sig', Load(), lineno=3410, col_offset=8), [Str('--bar', lineno=3410, col_offset=12)], [keyword('default', Str('baz', lineno=3410, col_offset=29)), keyword('choices', List([Num(1, lineno=3410, col_offset=45), Num(2, lineno=3410, col_offset=48)], Load(), lineno=3410, col_offset=44)), keyword('metavar', Str('BBB', lineno=3410, col_offset=60)), keyword('help', Str('bar %(prog)s %(default)s %(dest)s', lineno=3411, col_offset=17))], None, None, lineno=3410, col_offset=8), Call(Name('Sig', Load(), lineno=3412, col_offset=8), [Str('spam', lineno=3412, col_offset=12)], [keyword('help', Str('spam %(prog)s %(default)s', lineno=3412, col_offset=25))], None, None, lineno=3412, col_offset=8), Call(Name('Sig', Load(), lineno=3413, col_offset=8), [Str('badger', lineno=3413, col_offset=12)], [keyword('default', Num(0.5, lineno=3413, col_offset=30)), keyword('help', Str('badger %(prog)s %(default)s', lineno=3413, col_offset=40))], None, None, lineno=3413, col_offset=8)], Load(), lineno=3403, col_offset=26), lineno=3403, col_offset=4), Assign([Name('argument_group_signatures', Store(), lineno=3415, col_offset=4)], List([Tuple([Call(Name('Sig', Load(), lineno=3416, col_offset=9), [Str('group', lineno=3416, col_offset=13)], [], None, None, lineno=3416, col_offset=9), List([Call(Name('Sig', Load(), lineno=3417, col_offset=12), [Str('-a', lineno=3417, col_offset=16)], [keyword('help', Str('a %(prog)s %(default)s', lineno=3417, col_offset=27))], None, None, lineno=3417, col_offset=12), Call(Name('Sig', Load(), lineno=3418, col_offset=12), [Str('-b', lineno=3418, col_offset=16)], [keyword('default', Num(-1, lineno=3418, col_offset=31)), keyword('help', Str('b %(prog)s %(default)s', lineno=3418, col_offset=39))], None, None, lineno=3418, col_offset=12)], Load(), lineno=3416, col_offset=23)], Load(), lineno=3416, col_offset=9)], Load(), lineno=3415, col_offset=32), lineno=3415, col_offset=4), Assign([Name('usage', Store(), lineno=3421, col_offset=4)], Str('        usage: PROG [-h] [-x X] [-y] [--foo {a,b,c}] [--bar BBB] [-a A] [-b B]\n                    spam badger\n        ', lineno=3424, col_offset=-1), lineno=3421, col_offset=4), Assign([Name('help', Store(), lineno=3425, col_offset=4)], BinOp(Name('usage', Load(), lineno=3425, col_offset=11), Add(), Str('\n        positional arguments:\n          spam           spam PROG None\n          badger         badger PROG 0.5\n\n        optional arguments:\n          -h, --help     show this help message and exit\n          -x X           x PROG None int %\n          -y             y PROG 42 XXX\n          --foo {a,b,c}  foo PROG None a, b, c\n          --bar BBB      bar PROG baz bar\n\n        group:\n          -a A           a PROG None\n          -b B           b PROG -1\n        ', lineno=3441, col_offset=-1), lineno=3425, col_offset=11), lineno=3425, col_offset=4), Assign([Name('version', Store(), lineno=3442, col_offset=4)], Str('', lineno=3442, col_offset=14), lineno=3442, col_offset=4)], [], lineno=3399, col_offset=0), ClassDef('TestHelpVariableExpansionUsageSupplied', [Name('HelpTestCase', Load(), lineno=3445, col_offset=45)], [Expr(Str('Test that variables are expanded properly when usage= is present', lineno=3446, col_offset=4), lineno=3446, col_offset=4), Assign([Name('parser_signature', Store(), lineno=3448, col_offset=4)], Call(Name('Sig', Load(), lineno=3448, col_offset=23), [], [keyword('prog', Str('PROG', lineno=3448, col_offset=32)), keyword('usage', Str('%(prog)s FOO', lineno=3448, col_offset=46))], None, None, lineno=3448, col_offset=23), lineno=3448, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=3449, col_offset=4)], List([], Load(), lineno=3449, col_offset=26), lineno=3449, col_offset=4), Assign([Name('argument_group_signatures', Store(), lineno=3450, col_offset=4)], List([], Load(), lineno=3450, col_offset=32), lineno=3450, col_offset=4), Assign([Name('usage', Store(), lineno=3451, col_offset=4)], Str('        usage: PROG FOO\n        ', lineno=3453, col_offset=-1), lineno=3451, col_offset=4), Assign([Name('help', Store(), lineno=3454, col_offset=4)], BinOp(Name('usage', Load(), lineno=3454, col_offset=11), Add(), Str('\n        optional arguments:\n          -h, --help  show this help message and exit\n        ', lineno=3458, col_offset=-1), lineno=3454, col_offset=11), lineno=3454, col_offset=4), Assign([Name('version', Store(), lineno=3459, col_offset=4)], Str('', lineno=3459, col_offset=14), lineno=3459, col_offset=4)], [], lineno=3445, col_offset=0), ClassDef('TestHelpVariableExpansionNoArguments', [Name('HelpTestCase', Load(), lineno=3462, col_offset=43)], [Expr(Str('Test that variables are expanded properly with no arguments', lineno=3463, col_offset=4), lineno=3463, col_offset=4), Assign([Name('parser_signature', Store(), lineno=3465, col_offset=4)], Call(Name('Sig', Load(), lineno=3465, col_offset=23), [], [keyword('prog', Str('PROG', lineno=3465, col_offset=32)), keyword('add_help', Name('False', Load(), lineno=3465, col_offset=49))], None, None, lineno=3465, col_offset=23), lineno=3465, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=3466, col_offset=4)], List([], Load(), lineno=3466, col_offset=26), lineno=3466, col_offset=4), Assign([Name('argument_group_signatures', Store(), lineno=3467, col_offset=4)], List([], Load(), lineno=3467, col_offset=32), lineno=3467, col_offset=4), Assign([Name('usage', Store(), lineno=3468, col_offset=4)], Str('        usage: PROG\n        ', lineno=3470, col_offset=-1), lineno=3468, col_offset=4), Assign([Name('help', Store(), lineno=3471, col_offset=4)], Name('usage', Load(), lineno=3471, col_offset=11), lineno=3471, col_offset=4), Assign([Name('version', Store(), lineno=3472, col_offset=4)], Str('', lineno=3472, col_offset=14), lineno=3472, col_offset=4)], [], lineno=3462, col_offset=0), ClassDef('TestHelpSuppressUsage', [Name('HelpTestCase', Load(), lineno=3475, col_offset=28)], [Expr(Str('Test that items can be suppressed in usage messages', lineno=3476, col_offset=4), lineno=3476, col_offset=4), Assign([Name('parser_signature', Store(), lineno=3478, col_offset=4)], Call(Name('Sig', Load(), lineno=3478, col_offset=23), [], [keyword('prog', Str('PROG', lineno=3478, col_offset=32)), keyword('usage', Attribute(Name('argparse', Load(), lineno=3478, col_offset=46), 'SUPPRESS', Load(), lineno=3478, col_offset=46))], None, None, lineno=3478, col_offset=23), lineno=3478, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=3479, col_offset=4)], List([Call(Name('Sig', Load(), lineno=3480, col_offset=8), [Str('--foo', lineno=3480, col_offset=12)], [keyword('help', Str('foo help', lineno=3480, col_offset=26))], None, None, lineno=3480, col_offset=8), Call(Name('Sig', Load(), lineno=3481, col_offset=8), [Str('spam', lineno=3481, col_offset=12)], [keyword('help', Str('spam help', lineno=3481, col_offset=25))], None, None, lineno=3481, col_offset=8)], Load(), lineno=3479, col_offset=26), lineno=3479, col_offset=4), Assign([Name('argument_group_signatures', Store(), lineno=3483, col_offset=4)], List([], Load(), lineno=3483, col_offset=32), lineno=3483, col_offset=4), Assign([Name('help', Store(), lineno=3484, col_offset=4)], Str('        positional arguments:\n          spam        spam help\n\n        optional arguments:\n          -h, --help  show this help message and exit\n          --foo FOO   foo help\n        ', lineno=3491, col_offset=-1), lineno=3484, col_offset=4), Assign([Name('usage', Store(), lineno=3492, col_offset=4)], Str('', lineno=3492, col_offset=12), lineno=3492, col_offset=4), Assign([Name('version', Store(), lineno=3493, col_offset=4)], Str('', lineno=3493, col_offset=14), lineno=3493, col_offset=4)], [], lineno=3475, col_offset=0), ClassDef('TestHelpSuppressOptional', [Name('HelpTestCase', Load(), lineno=3496, col_offset=31)], [Expr(Str('Test that optional arguments can be suppressed in help messages', lineno=3497, col_offset=4), lineno=3497, col_offset=4), Assign([Name('parser_signature', Store(), lineno=3499, col_offset=4)], Call(Name('Sig', Load(), lineno=3499, col_offset=23), [], [keyword('prog', Str('PROG', lineno=3499, col_offset=32)), keyword('add_help', Name('False', Load(), lineno=3499, col_offset=49))], None, None, lineno=3499, col_offset=23), lineno=3499, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=3500, col_offset=4)], List([Call(Name('Sig', Load(), lineno=3501, col_offset=8), [Str('--foo', lineno=3501, col_offset=12)], [keyword('help', Attribute(Name('argparse', Load(), lineno=3501, col_offset=26), 'SUPPRESS', Load(), lineno=3501, col_offset=26))], None, None, lineno=3501, col_offset=8), Call(Name('Sig', Load(), lineno=3502, col_offset=8), [Str('spam', lineno=3502, col_offset=12)], [keyword('help', Str('spam help', lineno=3502, col_offset=25))], None, None, lineno=3502, col_offset=8)], Load(), lineno=3500, col_offset=26), lineno=3500, col_offset=4), Assign([Name('argument_group_signatures', Store(), lineno=3504, col_offset=4)], List([], Load(), lineno=3504, col_offset=32), lineno=3504, col_offset=4), Assign([Name('usage', Store(), lineno=3505, col_offset=4)], Str('        usage: PROG spam\n        ', lineno=3507, col_offset=-1), lineno=3505, col_offset=4), Assign([Name('help', Store(), lineno=3508, col_offset=4)], BinOp(Name('usage', Load(), lineno=3508, col_offset=11), Add(), Str('\n        positional arguments:\n          spam  spam help\n        ', lineno=3512, col_offset=-1), lineno=3508, col_offset=11), lineno=3508, col_offset=4), Assign([Name('version', Store(), lineno=3513, col_offset=4)], Str('', lineno=3513, col_offset=14), lineno=3513, col_offset=4)], [], lineno=3496, col_offset=0), ClassDef('TestHelpSuppressOptionalGroup', [Name('HelpTestCase', Load(), lineno=3516, col_offset=36)], [Expr(Str('Test that optional groups can be suppressed in help messages', lineno=3517, col_offset=4), lineno=3517, col_offset=4), Assign([Name('parser_signature', Store(), lineno=3519, col_offset=4)], Call(Name('Sig', Load(), lineno=3519, col_offset=23), [], [keyword('prog', Str('PROG', lineno=3519, col_offset=32))], None, None, lineno=3519, col_offset=23), lineno=3519, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=3520, col_offset=4)], List([Call(Name('Sig', Load(), lineno=3521, col_offset=8), [Str('--foo', lineno=3521, col_offset=12)], [keyword('help', Str('foo help', lineno=3521, col_offset=26))], None, None, lineno=3521, col_offset=8), Call(Name('Sig', Load(), lineno=3522, col_offset=8), [Str('spam', lineno=3522, col_offset=12)], [keyword('help', Str('spam help', lineno=3522, col_offset=25))], None, None, lineno=3522, col_offset=8)], Load(), lineno=3520, col_offset=26), lineno=3520, col_offset=4), Assign([Name('argument_group_signatures', Store(), lineno=3524, col_offset=4)], List([Tuple([Call(Name('Sig', Load(), lineno=3525, col_offset=9), [Str('group', lineno=3525, col_offset=13)], [], None, None, lineno=3525, col_offset=9), List([Call(Name('Sig', Load(), lineno=3525, col_offset=24), [Str('--bar', lineno=3525, col_offset=28)], [keyword('help', Attribute(Name('argparse', Load(), lineno=3525, col_offset=42), 'SUPPRESS', Load(), lineno=3525, col_offset=42))], None, None, lineno=3525, col_offset=24)], Load(), lineno=3525, col_offset=23)], Load(), lineno=3525, col_offset=9)], Load(), lineno=3524, col_offset=32), lineno=3524, col_offset=4), Assign([Name('usage', Store(), lineno=3527, col_offset=4)], Str('        usage: PROG [-h] [--foo FOO] spam\n        ', lineno=3529, col_offset=-1), lineno=3527, col_offset=4), Assign([Name('help', Store(), lineno=3530, col_offset=4)], BinOp(Name('usage', Load(), lineno=3530, col_offset=11), Add(), Str('\n        positional arguments:\n          spam        spam help\n\n        optional arguments:\n          -h, --help  show this help message and exit\n          --foo FOO   foo help\n        ', lineno=3538, col_offset=-1), lineno=3530, col_offset=11), lineno=3530, col_offset=4), Assign([Name('version', Store(), lineno=3539, col_offset=4)], Str('', lineno=3539, col_offset=14), lineno=3539, col_offset=4)], [], lineno=3516, col_offset=0), ClassDef('TestHelpSuppressPositional', [Name('HelpTestCase', Load(), lineno=3542, col_offset=33)], [Expr(Str('Test that positional arguments can be suppressed in help messages', lineno=3543, col_offset=4), lineno=3543, col_offset=4), Assign([Name('parser_signature', Store(), lineno=3545, col_offset=4)], Call(Name('Sig', Load(), lineno=3545, col_offset=23), [], [keyword('prog', Str('PROG', lineno=3545, col_offset=32))], None, None, lineno=3545, col_offset=23), lineno=3545, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=3546, col_offset=4)], List([Call(Name('Sig', Load(), lineno=3547, col_offset=8), [Str('--foo', lineno=3547, col_offset=12)], [keyword('help', Str('foo help', lineno=3547, col_offset=26))], None, None, lineno=3547, col_offset=8), Call(Name('Sig', Load(), lineno=3548, col_offset=8), [Str('spam', lineno=3548, col_offset=12)], [keyword('help', Attribute(Name('argparse', Load(), lineno=3548, col_offset=25), 'SUPPRESS', Load(), lineno=3548, col_offset=25))], None, None, lineno=3548, col_offset=8)], Load(), lineno=3546, col_offset=26), lineno=3546, col_offset=4), Assign([Name('argument_group_signatures', Store(), lineno=3550, col_offset=4)], List([], Load(), lineno=3550, col_offset=32), lineno=3550, col_offset=4), Assign([Name('usage', Store(), lineno=3551, col_offset=4)], Str('        usage: PROG [-h] [--foo FOO]\n        ', lineno=3553, col_offset=-1), lineno=3551, col_offset=4), Assign([Name('help', Store(), lineno=3554, col_offset=4)], BinOp(Name('usage', Load(), lineno=3554, col_offset=11), Add(), Str('\n        optional arguments:\n          -h, --help  show this help message and exit\n          --foo FOO   foo help\n        ', lineno=3559, col_offset=-1), lineno=3554, col_offset=11), lineno=3554, col_offset=4), Assign([Name('version', Store(), lineno=3560, col_offset=4)], Str('', lineno=3560, col_offset=14), lineno=3560, col_offset=4)], [], lineno=3542, col_offset=0), ClassDef('TestHelpRequiredOptional', [Name('HelpTestCase', Load(), lineno=3563, col_offset=31)], [Expr(Str("Test that required options don't look optional", lineno=3564, col_offset=4), lineno=3564, col_offset=4), Assign([Name('parser_signature', Store(), lineno=3566, col_offset=4)], Call(Name('Sig', Load(), lineno=3566, col_offset=23), [], [keyword('prog', Str('PROG', lineno=3566, col_offset=32))], None, None, lineno=3566, col_offset=23), lineno=3566, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=3567, col_offset=4)], List([Call(Name('Sig', Load(), lineno=3568, col_offset=8), [Str('--foo', lineno=3568, col_offset=12)], [keyword('required', Name('True', Load(), lineno=3568, col_offset=30)), keyword('help', Str('foo help', lineno=3568, col_offset=41))], None, None, lineno=3568, col_offset=8)], Load(), lineno=3567, col_offset=26), lineno=3567, col_offset=4), Assign([Name('argument_group_signatures', Store(), lineno=3570, col_offset=4)], List([], Load(), lineno=3570, col_offset=32), lineno=3570, col_offset=4), Assign([Name('usage', Store(), lineno=3571, col_offset=4)], Str('        usage: PROG [-h] --foo FOO\n        ', lineno=3573, col_offset=-1), lineno=3571, col_offset=4), Assign([Name('help', Store(), lineno=3574, col_offset=4)], BinOp(Name('usage', Load(), lineno=3574, col_offset=11), Add(), Str('\n        optional arguments:\n          -h, --help  show this help message and exit\n          --foo FOO   foo help\n        ', lineno=3579, col_offset=-1), lineno=3574, col_offset=11), lineno=3574, col_offset=4), Assign([Name('version', Store(), lineno=3580, col_offset=4)], Str('', lineno=3580, col_offset=14), lineno=3580, col_offset=4)], [], lineno=3563, col_offset=0), ClassDef('TestHelpAlternatePrefixChars', [Name('HelpTestCase', Load(), lineno=3583, col_offset=35)], [Expr(Str('Test that options display with different prefix characters', lineno=3584, col_offset=4), lineno=3584, col_offset=4), Assign([Name('parser_signature', Store(), lineno=3586, col_offset=4)], Call(Name('Sig', Load(), lineno=3586, col_offset=23), [], [keyword('prog', Str('PROG', lineno=3586, col_offset=32)), keyword('prefix_chars', Str('^;', lineno=3586, col_offset=53)), keyword('add_help', Name('False', Load(), lineno=3586, col_offset=68))], None, None, lineno=3586, col_offset=23), lineno=3586, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=3587, col_offset=4)], List([Call(Name('Sig', Load(), lineno=3588, col_offset=8), [Str('^^foo', lineno=3588, col_offset=12)], [keyword('action', Str('store_true', lineno=3588, col_offset=28)), keyword('help', Str('foo help', lineno=3588, col_offset=47))], None, None, lineno=3588, col_offset=8), Call(Name('Sig', Load(), lineno=3589, col_offset=8), [Str(';b', lineno=3589, col_offset=12), Str(';;bar', lineno=3589, col_offset=18)], [keyword('help', Str('bar help', lineno=3589, col_offset=32))], None, None, lineno=3589, col_offset=8)], Load(), lineno=3587, col_offset=26), lineno=3587, col_offset=4), Assign([Name('argument_group_signatures', Store(), lineno=3591, col_offset=4)], List([], Load(), lineno=3591, col_offset=32), lineno=3591, col_offset=4), Assign([Name('usage', Store(), lineno=3592, col_offset=4)], Str('        usage: PROG [^^foo] [;b BAR]\n        ', lineno=3594, col_offset=-1), lineno=3592, col_offset=4), Assign([Name('help', Store(), lineno=3595, col_offset=4)], BinOp(Name('usage', Load(), lineno=3595, col_offset=11), Add(), Str('\n        optional arguments:\n          ^^foo              foo help\n          ;b BAR, ;;bar BAR  bar help\n        ', lineno=3600, col_offset=-1), lineno=3595, col_offset=11), lineno=3595, col_offset=4), Assign([Name('version', Store(), lineno=3601, col_offset=4)], Str('', lineno=3601, col_offset=14), lineno=3601, col_offset=4)], [], lineno=3583, col_offset=0), ClassDef('TestHelpNoHelpOptional', [Name('HelpTestCase', Load(), lineno=3604, col_offset=29)], [Expr(Str('Test that the --help argument can be suppressed help messages', lineno=3605, col_offset=4), lineno=3605, col_offset=4), Assign([Name('parser_signature', Store(), lineno=3607, col_offset=4)], Call(Name('Sig', Load(), lineno=3607, col_offset=23), [], [keyword('prog', Str('PROG', lineno=3607, col_offset=32)), keyword('add_help', Name('False', Load(), lineno=3607, col_offset=49))], None, None, lineno=3607, col_offset=23), lineno=3607, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=3608, col_offset=4)], List([Call(Name('Sig', Load(), lineno=3609, col_offset=8), [Str('--foo', lineno=3609, col_offset=12)], [keyword('help', Str('foo help', lineno=3609, col_offset=26))], None, None, lineno=3609, col_offset=8), Call(Name('Sig', Load(), lineno=3610, col_offset=8), [Str('spam', lineno=3610, col_offset=12)], [keyword('help', Str('spam help', lineno=3610, col_offset=25))], None, None, lineno=3610, col_offset=8)], Load(), lineno=3608, col_offset=26), lineno=3608, col_offset=4), Assign([Name('argument_group_signatures', Store(), lineno=3612, col_offset=4)], List([], Load(), lineno=3612, col_offset=32), lineno=3612, col_offset=4), Assign([Name('usage', Store(), lineno=3613, col_offset=4)], Str('        usage: PROG [--foo FOO] spam\n        ', lineno=3615, col_offset=-1), lineno=3613, col_offset=4), Assign([Name('help', Store(), lineno=3616, col_offset=4)], BinOp(Name('usage', Load(), lineno=3616, col_offset=11), Add(), Str('\n        positional arguments:\n          spam       spam help\n\n        optional arguments:\n          --foo FOO  foo help\n        ', lineno=3623, col_offset=-1), lineno=3616, col_offset=11), lineno=3616, col_offset=4), Assign([Name('version', Store(), lineno=3624, col_offset=4)], Str('', lineno=3624, col_offset=14), lineno=3624, col_offset=4)], [], lineno=3604, col_offset=0), ClassDef('TestHelpVersionOptional', [Name('HelpTestCase', Load(), lineno=3627, col_offset=30)], [Expr(Str('Test that the --version argument can be suppressed help messages', lineno=3628, col_offset=4), lineno=3628, col_offset=4), Assign([Name('parser_signature', Store(), lineno=3630, col_offset=4)], Call(Name('Sig', Load(), lineno=3630, col_offset=23), [], [keyword('prog', Str('PROG', lineno=3630, col_offset=32)), keyword('version', Str('1.0', lineno=3630, col_offset=48))], None, None, lineno=3630, col_offset=23), lineno=3630, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=3631, col_offset=4)], List([Call(Name('Sig', Load(), lineno=3632, col_offset=8), [Str('--foo', lineno=3632, col_offset=12)], [keyword('help', Str('foo help', lineno=3632, col_offset=26))], None, None, lineno=3632, col_offset=8), Call(Name('Sig', Load(), lineno=3633, col_offset=8), [Str('spam', lineno=3633, col_offset=12)], [keyword('help', Str('spam help', lineno=3633, col_offset=25))], None, None, lineno=3633, col_offset=8)], Load(), lineno=3631, col_offset=26), lineno=3631, col_offset=4), Assign([Name('argument_group_signatures', Store(), lineno=3635, col_offset=4)], List([], Load(), lineno=3635, col_offset=32), lineno=3635, col_offset=4), Assign([Name('usage', Store(), lineno=3636, col_offset=4)], Str('        usage: PROG [-h] [-v] [--foo FOO] spam\n        ', lineno=3638, col_offset=-1), lineno=3636, col_offset=4), Assign([Name('help', Store(), lineno=3639, col_offset=4)], BinOp(Name('usage', Load(), lineno=3639, col_offset=11), Add(), Str("\n        positional arguments:\n          spam           spam help\n\n        optional arguments:\n          -h, --help     show this help message and exit\n          -v, --version  show program's version number and exit\n          --foo FOO      foo help\n        ", lineno=3648, col_offset=-1), lineno=3639, col_offset=11), lineno=3639, col_offset=4), Assign([Name('version', Store(), lineno=3649, col_offset=4)], Str('        1.0\n        ', lineno=3651, col_offset=-1), lineno=3649, col_offset=4)], [], lineno=3627, col_offset=0), ClassDef('TestHelpNone', [Name('HelpTestCase', Load(), lineno=3654, col_offset=19)], [Expr(Str('Test that no errors occur if no help is specified', lineno=3655, col_offset=4), lineno=3655, col_offset=4), Assign([Name('parser_signature', Store(), lineno=3657, col_offset=4)], Call(Name('Sig', Load(), lineno=3657, col_offset=23), [], [keyword('prog', Str('PROG', lineno=3657, col_offset=32))], None, None, lineno=3657, col_offset=23), lineno=3657, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=3658, col_offset=4)], List([Call(Name('Sig', Load(), lineno=3659, col_offset=8), [Str('--foo', lineno=3659, col_offset=12)], [], None, None, lineno=3659, col_offset=8), Call(Name('Sig', Load(), lineno=3660, col_offset=8), [Str('spam', lineno=3660, col_offset=12)], [], None, None, lineno=3660, col_offset=8)], Load(), lineno=3658, col_offset=26), lineno=3658, col_offset=4), Assign([Name('argument_group_signatures', Store(), lineno=3662, col_offset=4)], List([], Load(), lineno=3662, col_offset=32), lineno=3662, col_offset=4), Assign([Name('usage', Store(), lineno=3663, col_offset=4)], Str('        usage: PROG [-h] [--foo FOO] spam\n        ', lineno=3665, col_offset=-1), lineno=3663, col_offset=4), Assign([Name('help', Store(), lineno=3666, col_offset=4)], BinOp(Name('usage', Load(), lineno=3666, col_offset=11), Add(), Str('\n        positional arguments:\n          spam\n\n        optional arguments:\n          -h, --help  show this help message and exit\n          --foo FOO\n        ', lineno=3674, col_offset=-1), lineno=3666, col_offset=11), lineno=3666, col_offset=4), Assign([Name('version', Store(), lineno=3675, col_offset=4)], Str('', lineno=3675, col_offset=14), lineno=3675, col_offset=4)], [], lineno=3654, col_offset=0), ClassDef('TestHelpTupleMetavar', [Name('HelpTestCase', Load(), lineno=3678, col_offset=27)], [Expr(Str('Test specifying metavar as a tuple', lineno=3679, col_offset=4), lineno=3679, col_offset=4), Assign([Name('parser_signature', Store(), lineno=3681, col_offset=4)], Call(Name('Sig', Load(), lineno=3681, col_offset=23), [], [keyword('prog', Str('PROG', lineno=3681, col_offset=32))], None, None, lineno=3681, col_offset=23), lineno=3681, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=3682, col_offset=4)], List([Call(Name('Sig', Load(), lineno=3683, col_offset=8), [Str('-w', lineno=3683, col_offset=12)], [keyword('help', Str('w', lineno=3683, col_offset=23)), keyword('nargs', Str('+', lineno=3683, col_offset=34)), keyword('metavar', Tuple([Str('W1', lineno=3683, col_offset=48), Str('W2', lineno=3683, col_offset=54)], Load(), lineno=3683, col_offset=48))], None, None, lineno=3683, col_offset=8), Call(Name('Sig', Load(), lineno=3684, col_offset=8), [Str('-x', lineno=3684, col_offset=12)], [keyword('help', Str('x', lineno=3684, col_offset=23)), keyword('nargs', Str('*', lineno=3684, col_offset=34)), keyword('metavar', Tuple([Str('X1', lineno=3684, col_offset=48), Str('X2', lineno=3684, col_offset=54)], Load(), lineno=3684, col_offset=48))], None, None, lineno=3684, col_offset=8), Call(Name('Sig', Load(), lineno=3685, col_offset=8), [Str('-y', lineno=3685, col_offset=12)], [keyword('help', Str('y', lineno=3685, col_offset=23)), keyword('nargs', Num(3, lineno=3685, col_offset=34)), keyword('metavar', Tuple([Str('Y1', lineno=3685, col_offset=46), Str('Y2', lineno=3685, col_offset=52), Str('Y3', lineno=3685, col_offset=58)], Load(), lineno=3685, col_offset=46))], None, None, lineno=3685, col_offset=8), Call(Name('Sig', Load(), lineno=3686, col_offset=8), [Str('-z', lineno=3686, col_offset=12)], [keyword('help', Str('z', lineno=3686, col_offset=23)), keyword('nargs', Str('?', lineno=3686, col_offset=34)), keyword('metavar', Tuple([Str('Z1', lineno=3686, col_offset=48)], Load(), lineno=3686, col_offset=48))], None, None, lineno=3686, col_offset=8)], Load(), lineno=3682, col_offset=26), lineno=3682, col_offset=4), Assign([Name('argument_group_signatures', Store(), lineno=3688, col_offset=4)], List([], Load(), lineno=3688, col_offset=32), lineno=3688, col_offset=4), Assign([Name('usage', Store(), lineno=3689, col_offset=4)], Str('        usage: PROG [-h] [-w W1 [W2 ...]] [-x [X1 [X2 ...]]] [-y Y1 Y2 Y3] [-z [Z1]]\n        ', lineno=3692, col_offset=-1), lineno=3689, col_offset=4), Assign([Name('help', Store(), lineno=3693, col_offset=4)], BinOp(Name('usage', Load(), lineno=3693, col_offset=11), Add(), Str('\n        optional arguments:\n          -h, --help        show this help message and exit\n          -w W1 [W2 ...]    w\n          -x [X1 [X2 ...]]  x\n          -y Y1 Y2 Y3       y\n          -z [Z1]           z\n        ', lineno=3701, col_offset=-1), lineno=3693, col_offset=11), lineno=3693, col_offset=4), Assign([Name('version', Store(), lineno=3702, col_offset=4)], Str('', lineno=3702, col_offset=14), lineno=3702, col_offset=4)], [], lineno=3678, col_offset=0), ClassDef('TestHelpRawText', [Name('HelpTestCase', Load(), lineno=3705, col_offset=22)], [Expr(Str('Test the RawTextHelpFormatter', lineno=3706, col_offset=4), lineno=3706, col_offset=4), Assign([Name('parser_signature', Store(), lineno=3708, col_offset=4)], Call(Name('Sig', Load(), lineno=3708, col_offset=23), [], [keyword('prog', Str('PROG', lineno=3709, col_offset=13)), keyword('formatter_class', Attribute(Name('argparse', Load(), lineno=3709, col_offset=37), 'RawTextHelpFormatter', Load(), lineno=3709, col_offset=37)), keyword('description', Str('Keep the formatting\n    exactly as it is written\n\nhere\n', lineno=3710, col_offset=20))], None, None, lineno=3708, col_offset=23), lineno=3708, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=3715, col_offset=4)], List([Call(Name('Sig', Load(), lineno=3716, col_offset=8), [Str('--foo', lineno=3716, col_offset=12)], [keyword('help', Str('    foo help should also\nappear as given here', lineno=3716, col_offset=26))], None, None, lineno=3716, col_offset=8), Call(Name('Sig', Load(), lineno=3718, col_offset=8), [Str('spam', lineno=3718, col_offset=12)], [keyword('help', Str('spam help', lineno=3718, col_offset=25))], None, None, lineno=3718, col_offset=8)], Load(), lineno=3715, col_offset=26), lineno=3715, col_offset=4), Assign([Name('argument_group_signatures', Store(), lineno=3720, col_offset=4)], List([Tuple([Call(Name('Sig', Load(), lineno=3721, col_offset=9), [Str('title', lineno=3721, col_offset=13)], [keyword('description', Str('    This text\n  should be indented\n    exactly like it is here\n', lineno=3721, col_offset=34))], None, None, lineno=3721, col_offset=9), List([Call(Name('Sig', Load(), lineno=3724, col_offset=10), [Str('--bar', lineno=3724, col_offset=14)], [keyword('help', Str('bar help', lineno=3724, col_offset=28))], None, None, lineno=3724, col_offset=10)], Load(), lineno=3724, col_offset=9)], Load(), lineno=3721, col_offset=9)], Load(), lineno=3720, col_offset=32), lineno=3720, col_offset=4), Assign([Name('usage', Store(), lineno=3726, col_offset=4)], Str('        usage: PROG [-h] [--foo FOO] [--bar BAR] spam\n        ', lineno=3728, col_offset=-1), lineno=3726, col_offset=4), Assign([Name('help', Store(), lineno=3729, col_offset=4)], BinOp(Name('usage', Load(), lineno=3729, col_offset=11), Add(), Str('\n        Keep the formatting\n            exactly as it is written\n\n        here\n\n        positional arguments:\n          spam        spam help\n\n        optional arguments:\n          -h, --help  show this help message and exit\n          --foo FOO       foo help should also\n                      appear as given here\n\n        title:\n              This text\n            should be indented\n              exactly like it is here\n\n          --bar BAR   bar help\n        ', lineno=3750, col_offset=-1), lineno=3729, col_offset=11), lineno=3729, col_offset=4), Assign([Name('version', Store(), lineno=3751, col_offset=4)], Str('', lineno=3751, col_offset=14), lineno=3751, col_offset=4)], [], lineno=3705, col_offset=0), ClassDef('TestHelpRawDescription', [Name('HelpTestCase', Load(), lineno=3754, col_offset=29)], [Expr(Str('Test the RawTextHelpFormatter', lineno=3755, col_offset=4), lineno=3755, col_offset=4), Assign([Name('parser_signature', Store(), lineno=3757, col_offset=4)], Call(Name('Sig', Load(), lineno=3757, col_offset=23), [], [keyword('prog', Str('PROG', lineno=3758, col_offset=13)), keyword('formatter_class', Attribute(Name('argparse', Load(), lineno=3758, col_offset=37), 'RawDescriptionHelpFormatter', Load(), lineno=3758, col_offset=37)), keyword('description', Str('Keep the formatting\n    exactly as it is written\n\nhere\n', lineno=3759, col_offset=20))], None, None, lineno=3757, col_offset=23), lineno=3757, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=3764, col_offset=4)], List([Call(Name('Sig', Load(), lineno=3765, col_offset=8), [Str('--foo', lineno=3765, col_offset=12)], [keyword('help', Str('  foo help should not\n    retain this odd formatting', lineno=3765, col_offset=26))], None, None, lineno=3765, col_offset=8), Call(Name('Sig', Load(), lineno=3767, col_offset=8), [Str('spam', lineno=3767, col_offset=12)], [keyword('help', Str('spam help', lineno=3767, col_offset=25))], None, None, lineno=3767, col_offset=8)], Load(), lineno=3764, col_offset=26), lineno=3764, col_offset=4), Assign([Name('argument_group_signatures', Store(), lineno=3769, col_offset=4)], List([Tuple([Call(Name('Sig', Load(), lineno=3770, col_offset=9), [Str('title', lineno=3770, col_offset=13)], [keyword('description', Str('    This text\n  should be indented\n    exactly like it is here\n', lineno=3770, col_offset=34))], None, None, lineno=3770, col_offset=9), List([Call(Name('Sig', Load(), lineno=3773, col_offset=10), [Str('--bar', lineno=3773, col_offset=14)], [keyword('help', Str('bar help', lineno=3773, col_offset=28))], None, None, lineno=3773, col_offset=10)], Load(), lineno=3773, col_offset=9)], Load(), lineno=3770, col_offset=9)], Load(), lineno=3769, col_offset=32), lineno=3769, col_offset=4), Assign([Name('usage', Store(), lineno=3775, col_offset=4)], Str('        usage: PROG [-h] [--foo FOO] [--bar BAR] spam\n        ', lineno=3777, col_offset=-1), lineno=3775, col_offset=4), Assign([Name('help', Store(), lineno=3778, col_offset=4)], BinOp(Name('usage', Load(), lineno=3778, col_offset=11), Add(), Str('\n        Keep the formatting\n            exactly as it is written\n\n        here\n\n        positional arguments:\n          spam        spam help\n\n        optional arguments:\n          -h, --help  show this help message and exit\n          --foo FOO   foo help should not retain this odd formatting\n\n        title:\n              This text\n            should be indented\n              exactly like it is here\n\n          --bar BAR   bar help\n        ', lineno=3798, col_offset=-1), lineno=3778, col_offset=11), lineno=3778, col_offset=4), Assign([Name('version', Store(), lineno=3799, col_offset=4)], Str('', lineno=3799, col_offset=14), lineno=3799, col_offset=4)], [], lineno=3754, col_offset=0), ClassDef('TestHelpArgumentDefaults', [Name('HelpTestCase', Load(), lineno=3802, col_offset=31)], [Expr(Str('Test the ArgumentDefaultsHelpFormatter', lineno=3803, col_offset=4), lineno=3803, col_offset=4), Assign([Name('parser_signature', Store(), lineno=3805, col_offset=4)], Call(Name('Sig', Load(), lineno=3805, col_offset=23), [], [keyword('prog', Str('PROG', lineno=3806, col_offset=13)), keyword('formatter_class', Attribute(Name('argparse', Load(), lineno=3806, col_offset=37), 'ArgumentDefaultsHelpFormatter', Load(), lineno=3806, col_offset=37)), keyword('description', Str('description', lineno=3807, col_offset=20))], None, None, lineno=3805, col_offset=23), lineno=3805, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=3809, col_offset=4)], List([Call(Name('Sig', Load(), lineno=3810, col_offset=8), [Str('--foo', lineno=3810, col_offset=12)], [keyword('help', Str('foo help - oh and by the way, %(default)s', lineno=3810, col_offset=26))], None, None, lineno=3810, col_offset=8), Call(Name('Sig', Load(), lineno=3811, col_offset=8), [Str('--bar', lineno=3811, col_offset=12)], [keyword('action', Str('store_true', lineno=3811, col_offset=28)), keyword('help', Str('bar help', lineno=3811, col_offset=47))], None, None, lineno=3811, col_offset=8), Call(Name('Sig', Load(), lineno=3812, col_offset=8), [Str('spam', lineno=3812, col_offset=12)], [keyword('help', Str('spam help', lineno=3812, col_offset=25))], None, None, lineno=3812, col_offset=8), Call(Name('Sig', Load(), lineno=3813, col_offset=8), [Str('badger', lineno=3813, col_offset=12)], [keyword('nargs', Str('?', lineno=3813, col_offset=28)), keyword('default', Str('wooden', lineno=3813, col_offset=41)), keyword('help', Str('badger help', lineno=3813, col_offset=56))], None, None, lineno=3813, col_offset=8)], Load(), lineno=3809, col_offset=26), lineno=3809, col_offset=4), Assign([Name('argument_group_signatures', Store(), lineno=3815, col_offset=4)], List([Tuple([Call(Name('Sig', Load(), lineno=3816, col_offset=9), [Str('title', lineno=3816, col_offset=13)], [keyword('description', Str('description', lineno=3816, col_offset=34))], None, None, lineno=3816, col_offset=9), List([Call(Name('Sig', Load(), lineno=3817, col_offset=10), [Str('--baz', lineno=3817, col_offset=14)], [keyword('type', Name('int', Load(), lineno=3817, col_offset=28)), keyword('default', Num(42, lineno=3817, col_offset=41)), keyword('help', Str('baz help', lineno=3817, col_offset=50))], None, None, lineno=3817, col_offset=10)], Load(), lineno=3817, col_offset=9)], Load(), lineno=3816, col_offset=9)], Load(), lineno=3815, col_offset=32), lineno=3815, col_offset=4), Assign([Name('usage', Store(), lineno=3819, col_offset=4)], Str('        usage: PROG [-h] [--foo FOO] [--bar] [--baz BAZ] spam [badger]\n        ', lineno=3821, col_offset=-1), lineno=3819, col_offset=4), Assign([Name('help', Store(), lineno=3822, col_offset=4)], BinOp(Name('usage', Load(), lineno=3822, col_offset=11), Add(), Str('\n        description\n\n        positional arguments:\n          spam        spam help\n          badger      badger help (default: wooden)\n\n        optional arguments:\n          -h, --help  show this help message and exit\n          --foo FOO   foo help - oh and by the way, None\n          --bar       bar help (default: False)\n\n        title:\n          description\n\n          --baz BAZ   baz help (default: 42)\n        ', lineno=3839, col_offset=-1), lineno=3822, col_offset=11), lineno=3822, col_offset=4), Assign([Name('version', Store(), lineno=3840, col_offset=4)], Str('', lineno=3840, col_offset=14), lineno=3840, col_offset=4)], [], lineno=3802, col_offset=0), ClassDef('TestHelpVersionAction', [Name('HelpTestCase', Load(), lineno=3842, col_offset=28)], [Expr(Str('Test the default help for the version action', lineno=3843, col_offset=4), lineno=3843, col_offset=4), Assign([Name('parser_signature', Store(), lineno=3845, col_offset=4)], Call(Name('Sig', Load(), lineno=3845, col_offset=23), [], [keyword('prog', Str('PROG', lineno=3845, col_offset=32)), keyword('description', Str('description', lineno=3845, col_offset=52))], None, None, lineno=3845, col_offset=23), lineno=3845, col_offset=4), Assign([Name('argument_signatures', Store(), lineno=3846, col_offset=4)], List([Call(Name('Sig', Load(), lineno=3846, col_offset=27), [Str('-V', lineno=3846, col_offset=31), Str('--version', lineno=3846, col_offset=37)], [keyword('action', Str('version', lineno=3846, col_offset=57)), keyword('version', Str('3.6', lineno=3846, col_offset=76))], None, None, lineno=3846, col_offset=27)], Load(), lineno=3846, col_offset=26), lineno=3846, col_offset=4), Assign([Name('argument_group_signatures', Store(), lineno=3847, col_offset=4)], List([], Load(), lineno=3847, col_offset=32), lineno=3847, col_offset=4), Assign([Name('usage', Store(), lineno=3848, col_offset=4)], Str('        usage: PROG [-h] [-V]\n        ', lineno=3850, col_offset=-1), lineno=3848, col_offset=4), Assign([Name('help', Store(), lineno=3851, col_offset=4)], BinOp(Name('usage', Load(), lineno=3851, col_offset=11), Add(), Str("\n        description\n\n        optional arguments:\n          -h, --help     show this help message and exit\n          -V, --version  show program's version number and exit\n        ", lineno=3858, col_offset=-1), lineno=3851, col_offset=11), lineno=3851, col_offset=4), Assign([Name('version', Store(), lineno=3859, col_offset=4)], Str('', lineno=3859, col_offset=14), lineno=3859, col_offset=4)], [], lineno=3842, col_offset=0), ClassDef('TestInvalidArgumentConstructors', [Name('TestCase', Load(), lineno=3865, col_offset=38)], [Expr(Str('Test a bunch of invalid Argument constructors', lineno=3866, col_offset=4), lineno=3866, col_offset=4), FunctionDef('assertTypeError', arguments([Name('self', Param(), lineno=3868, col_offset=24)], 'args', 'kwargs', []), [Assign([Name('parser', Store(), lineno=3869, col_offset=8)], Call(Attribute(Name('argparse', Load(), lineno=3869, col_offset=17), 'ArgumentParser', Load(), lineno=3869, col_offset=17), [], [], None, None, lineno=3869, col_offset=17), lineno=3869, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=3870, col_offset=8), 'assertRaises', Load(), lineno=3870, col_offset=8), [Name('TypeError', Load(), lineno=3870, col_offset=26), Attribute(Name('parser', Load(), lineno=3870, col_offset=37), 'add_argument', Load(), lineno=3870, col_offset=37)], [], Name('args', Load(), lineno=3871, col_offset=27), Name('kwargs', Load(), lineno=3871, col_offset=35), lineno=3870, col_offset=8), lineno=3870, col_offset=8)], [], lineno=3868, col_offset=4), FunctionDef('assertValueError', arguments([Name('self', Param(), lineno=3873, col_offset=25)], 'args', 'kwargs', []), [Assign([Name('parser', Store(), lineno=3874, col_offset=8)], Call(Attribute(Name('argparse', Load(), lineno=3874, col_offset=17), 'ArgumentParser', Load(), lineno=3874, col_offset=17), [], [], None, None, lineno=3874, col_offset=17), lineno=3874, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=3875, col_offset=8), 'assertRaises', Load(), lineno=3875, col_offset=8), [Name('ValueError', Load(), lineno=3875, col_offset=26), Attribute(Name('parser', Load(), lineno=3875, col_offset=38), 'add_argument', Load(), lineno=3875, col_offset=38)], [], Name('args', Load(), lineno=3876, col_offset=27), Name('kwargs', Load(), lineno=3876, col_offset=35), lineno=3875, col_offset=8), lineno=3875, col_offset=8)], [], lineno=3873, col_offset=4), FunctionDef('test_invalid_keyword_arguments', arguments([Name('self', Param(), lineno=3878, col_offset=39)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=3879, col_offset=8), 'assertTypeError', Load(), lineno=3879, col_offset=8), [Str('-x', lineno=3879, col_offset=29)], [keyword('bar', Name('None', Load(), lineno=3879, col_offset=39))], None, None, lineno=3879, col_offset=8), lineno=3879, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=3880, col_offset=8), 'assertTypeError', Load(), lineno=3880, col_offset=8), [Str('-y', lineno=3880, col_offset=29)], [keyword('callback', Str('foo', lineno=3880, col_offset=44))], None, None, lineno=3880, col_offset=8), lineno=3880, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=3881, col_offset=8), 'assertTypeError', Load(), lineno=3881, col_offset=8), [Str('-y', lineno=3881, col_offset=29)], [keyword('callback_args', Tuple([], Load(), lineno=3881, col_offset=49))], None, None, lineno=3881, col_offset=8), lineno=3881, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=3882, col_offset=8), 'assertTypeError', Load(), lineno=3882, col_offset=8), [Str('-y', lineno=3882, col_offset=29)], [keyword('callback_kwargs', Dict([], [], lineno=3882, col_offset=51))], None, None, lineno=3882, col_offset=8), lineno=3882, col_offset=8)], [], lineno=3878, col_offset=4), FunctionDef('test_missing_destination', arguments([Name('self', Param(), lineno=3884, col_offset=33)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=3885, col_offset=8), 'assertTypeError', Load(), lineno=3885, col_offset=8), [], [], None, None, lineno=3885, col_offset=8), lineno=3885, col_offset=8), For(Name('action', Store(), lineno=3886, col_offset=12), List([Str('append', lineno=3886, col_offset=23), Str('store', lineno=3886, col_offset=33)], Load(), lineno=3886, col_offset=22), [Expr(Call(Attribute(Name('self', Load(), lineno=3887, col_offset=12), 'assertTypeError', Load(), lineno=3887, col_offset=12), [], [keyword('action', Name('action', Load(), lineno=3887, col_offset=40))], None, None, lineno=3887, col_offset=12), lineno=3887, col_offset=12)], [], lineno=3886, col_offset=8)], [], lineno=3884, col_offset=4), FunctionDef('test_invalid_option_strings', arguments([Name('self', Param(), lineno=3889, col_offset=36)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=3890, col_offset=8), 'assertValueError', Load(), lineno=3890, col_offset=8), [Str('--', lineno=3890, col_offset=30)], [], None, None, lineno=3890, col_offset=8), lineno=3890, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=3891, col_offset=8), 'assertValueError', Load(), lineno=3891, col_offset=8), [Str('---', lineno=3891, col_offset=30)], [], None, None, lineno=3891, col_offset=8), lineno=3891, col_offset=8)], [], lineno=3889, col_offset=4), FunctionDef('test_invalid_type', arguments([Name('self', Param(), lineno=3893, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=3894, col_offset=8), 'assertValueError', Load(), lineno=3894, col_offset=8), [Str('--foo', lineno=3894, col_offset=30)], [keyword('type', Str('int', lineno=3894, col_offset=44))], None, None, lineno=3894, col_offset=8), lineno=3894, col_offset=8)], [], lineno=3893, col_offset=4), FunctionDef('test_invalid_action', arguments([Name('self', Param(), lineno=3896, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=3897, col_offset=8), 'assertValueError', Load(), lineno=3897, col_offset=8), [Str('-x', lineno=3897, col_offset=30)], [keyword('action', Str('foo', lineno=3897, col_offset=43))], None, None, lineno=3897, col_offset=8), lineno=3897, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=3898, col_offset=8), 'assertValueError', Load(), lineno=3898, col_offset=8), [Str('foo', lineno=3898, col_offset=30)], [keyword('action', Str('baz', lineno=3898, col_offset=44))], None, None, lineno=3898, col_offset=8), lineno=3898, col_offset=8), Assign([Name('parser', Store(), lineno=3899, col_offset=8)], Call(Attribute(Name('argparse', Load(), lineno=3899, col_offset=17), 'ArgumentParser', Load(), lineno=3899, col_offset=17), [], [], None, None, lineno=3899, col_offset=17), lineno=3899, col_offset=8), TryExcept([Expr(Call(Attribute(Name('parser', Load(), lineno=3901, col_offset=12), 'add_argument', Load(), lineno=3901, col_offset=12), [Str('--foo', lineno=3901, col_offset=32)], [keyword('action', Str('store-true', lineno=3901, col_offset=48))], None, None, lineno=3901, col_offset=12), lineno=3901, col_offset=12)], [ExceptHandler(Name('ValueError', Load(), lineno=3902, col_offset=15), None, [Assign([Name('e', Store(), lineno=3903, col_offset=12)], Subscript(Call(Attribute(Name('sys', Load(), lineno=3903, col_offset=16), 'exc_info', Load(), lineno=3903, col_offset=16), [], [], None, None, lineno=3903, col_offset=16), Index(Num(1, lineno=3903, col_offset=31)), Load(), lineno=3903, col_offset=16), lineno=3903, col_offset=12), Assign([Name('expected', Store(), lineno=3904, col_offset=12)], Str('unknown action', lineno=3904, col_offset=23), lineno=3904, col_offset=12), Assign([Name('msg', Store(), lineno=3905, col_offset=12)], BinOp(Str('expected %r, found %r', lineno=3905, col_offset=18), Mod(), Tuple([Name('expected', Load(), lineno=3905, col_offset=45), Name('e', Load(), lineno=3905, col_offset=55)], Load(), lineno=3905, col_offset=45), lineno=3905, col_offset=18), lineno=3905, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=3906, col_offset=12), 'assertTrue', Load(), lineno=3906, col_offset=12), [Compare(Name('expected', Load(), lineno=3906, col_offset=28), [In()], [Call(Name('str', Load(), lineno=3906, col_offset=40), [Name('e', Load(), lineno=3906, col_offset=44)], [], None, None, lineno=3906, col_offset=40)], lineno=3906, col_offset=28), Name('msg', Load(), lineno=3906, col_offset=48)], [], None, None, lineno=3906, col_offset=12), lineno=3906, col_offset=12)], lineno=3902, col_offset=8)], [], lineno=3900, col_offset=8)], [], lineno=3896, col_offset=4), FunctionDef('test_multiple_dest', arguments([Name('self', Param(), lineno=3908, col_offset=27)], None, None, []), [Assign([Name('parser', Store(), lineno=3909, col_offset=8)], Call(Attribute(Name('argparse', Load(), lineno=3909, col_offset=17), 'ArgumentParser', Load(), lineno=3909, col_offset=17), [], [], None, None, lineno=3909, col_offset=17), lineno=3909, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=3910, col_offset=8), 'add_argument', Load(), lineno=3910, col_offset=8), [], [keyword('dest', Str('foo', lineno=3910, col_offset=33))], None, None, lineno=3910, col_offset=8), lineno=3910, col_offset=8), TryExcept([Expr(Call(Attribute(Name('parser', Load(), lineno=3912, col_offset=12), 'add_argument', Load(), lineno=3912, col_offset=12), [Str('bar', lineno=3912, col_offset=32)], [keyword('dest', Str('baz', lineno=3912, col_offset=44))], None, None, lineno=3912, col_offset=12), lineno=3912, col_offset=12)], [ExceptHandler(Name('ValueError', Load(), lineno=3913, col_offset=15), None, [Assign([Name('e', Store(), lineno=3914, col_offset=12)], Subscript(Call(Attribute(Name('sys', Load(), lineno=3914, col_offset=16), 'exc_info', Load(), lineno=3914, col_offset=16), [], [], None, None, lineno=3914, col_offset=16), Index(Num(1, lineno=3914, col_offset=31)), Load(), lineno=3914, col_offset=16), lineno=3914, col_offset=12), Assign([Name('expected', Store(), lineno=3915, col_offset=12)], Str('dest supplied twice for positional argument', lineno=3915, col_offset=23), lineno=3915, col_offset=12), Assign([Name('msg', Store(), lineno=3916, col_offset=12)], BinOp(Str('expected %r, found %r', lineno=3916, col_offset=18), Mod(), Tuple([Name('expected', Load(), lineno=3916, col_offset=45), Name('e', Load(), lineno=3916, col_offset=55)], Load(), lineno=3916, col_offset=45), lineno=3916, col_offset=18), lineno=3916, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=3917, col_offset=12), 'assertTrue', Load(), lineno=3917, col_offset=12), [Compare(Name('expected', Load(), lineno=3917, col_offset=28), [In()], [Call(Name('str', Load(), lineno=3917, col_offset=40), [Name('e', Load(), lineno=3917, col_offset=44)], [], None, None, lineno=3917, col_offset=40)], lineno=3917, col_offset=28), Name('msg', Load(), lineno=3917, col_offset=48)], [], None, None, lineno=3917, col_offset=12), lineno=3917, col_offset=12)], lineno=3913, col_offset=8)], [], lineno=3911, col_offset=8)], [], lineno=3908, col_offset=4), FunctionDef('test_no_argument_actions', arguments([Name('self', Param(), lineno=3919, col_offset=33)], None, None, []), [For(Name('action', Store(), lineno=3920, col_offset=12), List([Str('store_const', lineno=3920, col_offset=23), Str('store_true', lineno=3920, col_offset=38), Str('store_false', lineno=3920, col_offset=52), Str('append_const', lineno=3921, col_offset=23), Str('count', lineno=3921, col_offset=39)], Load(), lineno=3920, col_offset=22), [For(Name('attrs', Store(), lineno=3922, col_offset=16), List([Call(Name('dict', Load(), lineno=3922, col_offset=26), [], [keyword('type', Name('int', Load(), lineno=3922, col_offset=36))], None, None, lineno=3922, col_offset=26), Call(Name('dict', Load(), lineno=3922, col_offset=42), [], [keyword('nargs', Str('+', lineno=3922, col_offset=53))], None, None, lineno=3922, col_offset=42), Call(Name('dict', Load(), lineno=3923, col_offset=26), [], [keyword('choices', Str('ab', lineno=3923, col_offset=39))], None, None, lineno=3923, col_offset=26)], Load(), lineno=3922, col_offset=25), [Expr(Call(Attribute(Name('self', Load(), lineno=3924, col_offset=16), 'assertTypeError', Load(), lineno=3924, col_offset=16), [Str('-x', lineno=3924, col_offset=37)], [keyword('action', Name('action', Load(), lineno=3924, col_offset=50))], None, Name('attrs', Load(), lineno=3924, col_offset=60), lineno=3924, col_offset=16), lineno=3924, col_offset=16)], [], lineno=3922, col_offset=12)], [], lineno=3920, col_offset=8)], [], lineno=3919, col_offset=4), FunctionDef('test_no_argument_no_const_actions', arguments([Name('self', Param(), lineno=3926, col_offset=42)], None, None, []), [For(Name('action', Store(), lineno=3928, col_offset=12), List([Str('store_true', lineno=3928, col_offset=23), Str('store_false', lineno=3928, col_offset=37), Str('count', lineno=3928, col_offset=52)], Load(), lineno=3928, col_offset=22), [Expr(Call(Attribute(Name('self', Load(), lineno=3931, col_offset=12), 'assertTypeError', Load(), lineno=3931, col_offset=12), [Str('-x', lineno=3931, col_offset=33)], [keyword('const', Str('foo', lineno=3931, col_offset=45)), keyword('action', Name('action', Load(), lineno=3931, col_offset=59))], None, None, lineno=3931, col_offset=12), lineno=3931, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=3934, col_offset=12), 'assertTypeError', Load(), lineno=3934, col_offset=12), [Str('-x', lineno=3934, col_offset=33)], [keyword('nargs', Str('*', lineno=3934, col_offset=45)), keyword('action', Name('action', Load(), lineno=3934, col_offset=57))], None, None, lineno=3934, col_offset=12), lineno=3934, col_offset=12)], [], lineno=3928, col_offset=8)], [], lineno=3926, col_offset=4), FunctionDef('test_more_than_one_argument_actions', arguments([Name('self', Param(), lineno=3936, col_offset=44)], None, None, []), [For(Name('action', Store(), lineno=3937, col_offset=12), List([Str('store', lineno=3937, col_offset=23), Str('append', lineno=3937, col_offset=32)], Load(), lineno=3937, col_offset=22), [Expr(Call(Attribute(Name('self', Load(), lineno=3940, col_offset=12), 'assertValueError', Load(), lineno=3940, col_offset=12), [Str('-x', lineno=3940, col_offset=34)], [keyword('nargs', Num(0, lineno=3940, col_offset=46)), keyword('action', Name('action', Load(), lineno=3940, col_offset=56))], None, None, lineno=3940, col_offset=12), lineno=3940, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=3941, col_offset=12), 'assertValueError', Load(), lineno=3941, col_offset=12), [Str('spam', lineno=3941, col_offset=34)], [keyword('nargs', Num(0, lineno=3941, col_offset=48)), keyword('action', Name('action', Load(), lineno=3941, col_offset=58))], None, None, lineno=3941, col_offset=12), lineno=3941, col_offset=12), For(Name('nargs', Store(), lineno=3944, col_offset=16), List([Num(1, lineno=3944, col_offset=26), Str('*', lineno=3944, col_offset=29), Str('+', lineno=3944, col_offset=34)], Load(), lineno=3944, col_offset=25), [Expr(Call(Attribute(Name('self', Load(), lineno=3945, col_offset=16), 'assertValueError', Load(), lineno=3945, col_offset=16), [Str('-x', lineno=3945, col_offset=38)], [keyword('const', Str('foo', lineno=3945, col_offset=50)), keyword('nargs', Name('nargs', Load(), lineno=3946, col_offset=44)), keyword('action', Name('action', Load(), lineno=3946, col_offset=58))], None, None, lineno=3945, col_offset=16), lineno=3945, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=3947, col_offset=16), 'assertValueError', Load(), lineno=3947, col_offset=16), [Str('spam', lineno=3947, col_offset=38)], [keyword('const', Str('foo', lineno=3947, col_offset=52)), keyword('nargs', Name('nargs', Load(), lineno=3948, col_offset=44)), keyword('action', Name('action', Load(), lineno=3948, col_offset=58))], None, None, lineno=3947, col_offset=16), lineno=3947, col_offset=16)], [], lineno=3944, col_offset=12)], [], lineno=3937, col_offset=8)], [], lineno=3936, col_offset=4), FunctionDef('test_required_const_actions', arguments([Name('self', Param(), lineno=3950, col_offset=36)], None, None, []), [For(Name('action', Store(), lineno=3951, col_offset=12), List([Str('store_const', lineno=3951, col_offset=23), Str('append_const', lineno=3951, col_offset=38)], Load(), lineno=3951, col_offset=22), [Expr(Call(Attribute(Name('self', Load(), lineno=3954, col_offset=12), 'assertTypeError', Load(), lineno=3954, col_offset=12), [Str('-x', lineno=3954, col_offset=33)], [keyword('nargs', Str('+', lineno=3954, col_offset=45)), keyword('action', Name('action', Load(), lineno=3954, col_offset=57))], None, None, lineno=3954, col_offset=12), lineno=3954, col_offset=12)], [], lineno=3951, col_offset=8)], [], lineno=3950, col_offset=4), FunctionDef('test_parsers_action_missing_params', arguments([Name('self', Param(), lineno=3956, col_offset=43)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=3957, col_offset=8), 'assertTypeError', Load(), lineno=3957, col_offset=8), [Str('command', lineno=3957, col_offset=29)], [keyword('action', Str('parsers', lineno=3957, col_offset=47))], None, None, lineno=3957, col_offset=8), lineno=3957, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=3958, col_offset=8), 'assertTypeError', Load(), lineno=3958, col_offset=8), [Str('command', lineno=3958, col_offset=29)], [keyword('action', Str('parsers', lineno=3958, col_offset=47)), keyword('prog', Str('PROG', lineno=3958, col_offset=63))], None, None, lineno=3958, col_offset=8), lineno=3958, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=3959, col_offset=8), 'assertTypeError', Load(), lineno=3959, col_offset=8), [Str('command', lineno=3959, col_offset=29)], [keyword('action', Str('parsers', lineno=3959, col_offset=47)), keyword('parser_class', Attribute(Name('argparse', Load(), lineno=3960, col_offset=42), 'ArgumentParser', Load(), lineno=3960, col_offset=42))], None, None, lineno=3959, col_offset=8), lineno=3959, col_offset=8)], [], lineno=3956, col_offset=4), FunctionDef('test_required_positional', arguments([Name('self', Param(), lineno=3962, col_offset=33)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=3963, col_offset=8), 'assertTypeError', Load(), lineno=3963, col_offset=8), [Str('foo', lineno=3963, col_offset=29)], [keyword('required', Name('True', Load(), lineno=3963, col_offset=45))], None, None, lineno=3963, col_offset=8), lineno=3963, col_offset=8)], [], lineno=3962, col_offset=4), FunctionDef('test_user_defined_action', arguments([Name('self', Param(), lineno=3965, col_offset=33)], None, None, []), [ClassDef('Success', [Name('Exception', Load(), lineno=3967, col_offset=22)], [Pass( lineno=3968, col_offset=12)], [], lineno=3967, col_offset=8), ClassDef('Action', [Name('object', Load(), lineno=3970, col_offset=21)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=3972, col_offset=25), Name('option_strings', Param(), lineno=3973, col_offset=25), Name('dest', Param(), lineno=3974, col_offset=25), Name('const', Param(), lineno=3975, col_offset=25), Name('default', Param(), lineno=3976, col_offset=25), Name('required', Param(), lineno=3977, col_offset=25)], None, None, [Name('False', Load(), lineno=3977, col_offset=34)]), [If(Compare(Name('dest', Load(), lineno=3978, col_offset=19), [Eq()], [Str('spam', lineno=3978, col_offset=27)], lineno=3978, col_offset=19), [If(Compare(Name('const', Load(), lineno=3979, col_offset=23), [Is()], [Name('Success', Load(), lineno=3979, col_offset=32)], lineno=3979, col_offset=23), [If(Compare(Name('default', Load(), lineno=3980, col_offset=27), [Is()], [Name('Success', Load(), lineno=3980, col_offset=38)], lineno=3980, col_offset=27), [Raise(Call(Name('Success', Load(), lineno=3981, col_offset=34), [], [], None, None, lineno=3981, col_offset=34), None, None, lineno=3981, col_offset=28)], [], lineno=3980, col_offset=24)], [], lineno=3979, col_offset=20)], [], lineno=3978, col_offset=16)], [], lineno=3972, col_offset=12), FunctionDef('__call__', arguments([Name('self', Param(), lineno=3983, col_offset=25)], 'args', 'kwargs', []), [Pass( lineno=3984, col_offset=16)], [], lineno=3983, col_offset=12)], [], lineno=3970, col_offset=8), Assign([Name('parser', Store(), lineno=3986, col_offset=8)], Call(Attribute(Name('argparse', Load(), lineno=3986, col_offset=17), 'ArgumentParser', Load(), lineno=3986, col_offset=17), [], [], None, None, lineno=3986, col_offset=17), lineno=3986, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=3987, col_offset=8), 'assertRaises', Load(), lineno=3987, col_offset=8), [Name('Success', Load(), lineno=3987, col_offset=26), Attribute(Name('parser', Load(), lineno=3987, col_offset=35), 'add_argument', Load(), lineno=3987, col_offset=35), Str('--spam', lineno=3987, col_offset=56)], [keyword('action', Name('Action', Load(), lineno=3988, col_offset=33)), keyword('default', Name('Success', Load(), lineno=3988, col_offset=49)), keyword('const', Name('Success', Load(), lineno=3988, col_offset=64))], None, None, lineno=3987, col_offset=8), lineno=3987, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=3989, col_offset=8), 'assertRaises', Load(), lineno=3989, col_offset=8), [Name('Success', Load(), lineno=3989, col_offset=26), Attribute(Name('parser', Load(), lineno=3989, col_offset=35), 'add_argument', Load(), lineno=3989, col_offset=35), Str('spam', lineno=3989, col_offset=56)], [keyword('action', Name('Action', Load(), lineno=3990, col_offset=33)), keyword('default', Name('Success', Load(), lineno=3990, col_offset=49)), keyword('const', Name('Success', Load(), lineno=3990, col_offset=64))], None, None, lineno=3989, col_offset=8), lineno=3989, col_offset=8)], [], lineno=3965, col_offset=4)], [], lineno=3865, col_offset=0), ClassDef('TestActionsReturned', [Name('TestCase', Load(), lineno=3996, col_offset=26)], [FunctionDef('test_dest', arguments([Name('self', Param(), lineno=3998, col_offset=18)], None, None, []), [Assign([Name('parser', Store(), lineno=3999, col_offset=8)], Call(Attribute(Name('argparse', Load(), lineno=3999, col_offset=17), 'ArgumentParser', Load(), lineno=3999, col_offset=17), [], [], None, None, lineno=3999, col_offset=17), lineno=3999, col_offset=8), Assign([Name('action', Store(), lineno=4000, col_offset=8)], Call(Attribute(Name('parser', Load(), lineno=4000, col_offset=17), 'add_argument', Load(), lineno=4000, col_offset=17), [Str('--foo', lineno=4000, col_offset=37)], [], None, None, lineno=4000, col_offset=17), lineno=4000, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4001, col_offset=8), 'assertEqual', Load(), lineno=4001, col_offset=8), [Attribute(Name('action', Load(), lineno=4001, col_offset=25), 'dest', Load(), lineno=4001, col_offset=25), Str('foo', lineno=4001, col_offset=38)], [], None, None, lineno=4001, col_offset=8), lineno=4001, col_offset=8), Assign([Name('action', Store(), lineno=4002, col_offset=8)], Call(Attribute(Name('parser', Load(), lineno=4002, col_offset=17), 'add_argument', Load(), lineno=4002, col_offset=17), [Str('-b', lineno=4002, col_offset=37), Str('--bar', lineno=4002, col_offset=43)], [], None, None, lineno=4002, col_offset=17), lineno=4002, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4003, col_offset=8), 'assertEqual', Load(), lineno=4003, col_offset=8), [Attribute(Name('action', Load(), lineno=4003, col_offset=25), 'dest', Load(), lineno=4003, col_offset=25), Str('bar', lineno=4003, col_offset=38)], [], None, None, lineno=4003, col_offset=8), lineno=4003, col_offset=8), Assign([Name('action', Store(), lineno=4004, col_offset=8)], Call(Attribute(Name('parser', Load(), lineno=4004, col_offset=17), 'add_argument', Load(), lineno=4004, col_offset=17), [Str('-x', lineno=4004, col_offset=37), Str('-y', lineno=4004, col_offset=43)], [], None, None, lineno=4004, col_offset=17), lineno=4004, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4005, col_offset=8), 'assertEqual', Load(), lineno=4005, col_offset=8), [Attribute(Name('action', Load(), lineno=4005, col_offset=25), 'dest', Load(), lineno=4005, col_offset=25), Str('x', lineno=4005, col_offset=38)], [], None, None, lineno=4005, col_offset=8), lineno=4005, col_offset=8)], [], lineno=3998, col_offset=4), FunctionDef('test_misc', arguments([Name('self', Param(), lineno=4007, col_offset=18)], None, None, []), [Assign([Name('parser', Store(), lineno=4008, col_offset=8)], Call(Attribute(Name('argparse', Load(), lineno=4008, col_offset=17), 'ArgumentParser', Load(), lineno=4008, col_offset=17), [], [], None, None, lineno=4008, col_offset=17), lineno=4008, col_offset=8), Assign([Name('action', Store(), lineno=4009, col_offset=8)], Call(Attribute(Name('parser', Load(), lineno=4009, col_offset=17), 'add_argument', Load(), lineno=4009, col_offset=17), [Str('--foo', lineno=4009, col_offset=37)], [keyword('nargs', Str('?', lineno=4009, col_offset=52)), keyword('const', Num(42, lineno=4009, col_offset=63)), keyword('default', Num(84, lineno=4010, col_offset=45)), keyword('type', Name('int', Load(), lineno=4010, col_offset=54)), keyword('choices', List([Num(1, lineno=4010, col_offset=68), Num(2, lineno=4010, col_offset=71)], Load(), lineno=4010, col_offset=67)), keyword('help', Str('FOO', lineno=4011, col_offset=42)), keyword('metavar', Str('BAR', lineno=4011, col_offset=57)), keyword('dest', Str('baz', lineno=4011, col_offset=69))], None, None, lineno=4009, col_offset=17), lineno=4009, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4012, col_offset=8), 'assertEqual', Load(), lineno=4012, col_offset=8), [Attribute(Name('action', Load(), lineno=4012, col_offset=25), 'nargs', Load(), lineno=4012, col_offset=25), Str('?', lineno=4012, col_offset=39)], [], None, None, lineno=4012, col_offset=8), lineno=4012, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4013, col_offset=8), 'assertEqual', Load(), lineno=4013, col_offset=8), [Attribute(Name('action', Load(), lineno=4013, col_offset=25), 'const', Load(), lineno=4013, col_offset=25), Num(42, lineno=4013, col_offset=39)], [], None, None, lineno=4013, col_offset=8), lineno=4013, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4014, col_offset=8), 'assertEqual', Load(), lineno=4014, col_offset=8), [Attribute(Name('action', Load(), lineno=4014, col_offset=25), 'default', Load(), lineno=4014, col_offset=25), Num(84, lineno=4014, col_offset=41)], [], None, None, lineno=4014, col_offset=8), lineno=4014, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4015, col_offset=8), 'assertEqual', Load(), lineno=4015, col_offset=8), [Attribute(Name('action', Load(), lineno=4015, col_offset=25), 'type', Load(), lineno=4015, col_offset=25), Name('int', Load(), lineno=4015, col_offset=38)], [], None, None, lineno=4015, col_offset=8), lineno=4015, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4016, col_offset=8), 'assertEqual', Load(), lineno=4016, col_offset=8), [Attribute(Name('action', Load(), lineno=4016, col_offset=25), 'choices', Load(), lineno=4016, col_offset=25), List([Num(1, lineno=4016, col_offset=42), Num(2, lineno=4016, col_offset=45)], Load(), lineno=4016, col_offset=41)], [], None, None, lineno=4016, col_offset=8), lineno=4016, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4017, col_offset=8), 'assertEqual', Load(), lineno=4017, col_offset=8), [Attribute(Name('action', Load(), lineno=4017, col_offset=25), 'help', Load(), lineno=4017, col_offset=25), Str('FOO', lineno=4017, col_offset=38)], [], None, None, lineno=4017, col_offset=8), lineno=4017, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4018, col_offset=8), 'assertEqual', Load(), lineno=4018, col_offset=8), [Attribute(Name('action', Load(), lineno=4018, col_offset=25), 'metavar', Load(), lineno=4018, col_offset=25), Str('BAR', lineno=4018, col_offset=41)], [], None, None, lineno=4018, col_offset=8), lineno=4018, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4019, col_offset=8), 'assertEqual', Load(), lineno=4019, col_offset=8), [Attribute(Name('action', Load(), lineno=4019, col_offset=25), 'dest', Load(), lineno=4019, col_offset=25), Str('baz', lineno=4019, col_offset=38)], [], None, None, lineno=4019, col_offset=8), lineno=4019, col_offset=8)], [], lineno=4007, col_offset=4)], [], lineno=3996, col_offset=0), ClassDef('TestConflictHandling', [Name('TestCase', Load(), lineno=4026, col_offset=27)], [FunctionDef('test_bad_type', arguments([Name('self', Param(), lineno=4028, col_offset=22)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=4029, col_offset=8), 'assertRaises', Load(), lineno=4029, col_offset=8), [Name('ValueError', Load(), lineno=4029, col_offset=26), Attribute(Name('argparse', Load(), lineno=4029, col_offset=38), 'ArgumentParser', Load(), lineno=4029, col_offset=38)], [keyword('conflict_handler', Str('foo', lineno=4030, col_offset=43))], None, None, lineno=4029, col_offset=8), lineno=4029, col_offset=8)], [], lineno=4028, col_offset=4), FunctionDef('test_conflict_error', arguments([Name('self', Param(), lineno=4032, col_offset=28)], None, None, []), [Assign([Name('parser', Store(), lineno=4033, col_offset=8)], Call(Attribute(Name('argparse', Load(), lineno=4033, col_offset=17), 'ArgumentParser', Load(), lineno=4033, col_offset=17), [], [], None, None, lineno=4033, col_offset=17), lineno=4033, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=4034, col_offset=8), 'add_argument', Load(), lineno=4034, col_offset=8), [Str('-x', lineno=4034, col_offset=28)], [], None, None, lineno=4034, col_offset=8), lineno=4034, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4035, col_offset=8), 'assertRaises', Load(), lineno=4035, col_offset=8), [Attribute(Name('argparse', Load(), lineno=4035, col_offset=26), 'ArgumentError', Load(), lineno=4035, col_offset=26), Attribute(Name('parser', Load(), lineno=4036, col_offset=26), 'add_argument', Load(), lineno=4036, col_offset=26), Str('-x', lineno=4036, col_offset=47)], [], None, None, lineno=4035, col_offset=8), lineno=4035, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=4037, col_offset=8), 'add_argument', Load(), lineno=4037, col_offset=8), [Str('--spam', lineno=4037, col_offset=28)], [], None, None, lineno=4037, col_offset=8), lineno=4037, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4038, col_offset=8), 'assertRaises', Load(), lineno=4038, col_offset=8), [Attribute(Name('argparse', Load(), lineno=4038, col_offset=26), 'ArgumentError', Load(), lineno=4038, col_offset=26), Attribute(Name('parser', Load(), lineno=4039, col_offset=26), 'add_argument', Load(), lineno=4039, col_offset=26), Str('--spam', lineno=4039, col_offset=47)], [], None, None, lineno=4038, col_offset=8), lineno=4038, col_offset=8)], [], lineno=4032, col_offset=4), FunctionDef('test_resolve_error', arguments([Name('self', Param(), lineno=4041, col_offset=27)], None, None, []), [Assign([Name('get_parser', Store(), lineno=4042, col_offset=8)], Attribute(Name('argparse', Load(), lineno=4042, col_offset=21), 'ArgumentParser', Load(), lineno=4042, col_offset=21), lineno=4042, col_offset=8), Assign([Name('parser', Store(), lineno=4043, col_offset=8)], Call(Name('get_parser', Load(), lineno=4043, col_offset=17), [], [keyword('prog', Str('PROG', lineno=4043, col_offset=33)), keyword('conflict_handler', Str('resolve', lineno=4043, col_offset=58))], None, None, lineno=4043, col_offset=17), lineno=4043, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=4045, col_offset=8), 'add_argument', Load(), lineno=4045, col_offset=8), [Str('-x', lineno=4045, col_offset=28)], [keyword('help', Str('OLD X', lineno=4045, col_offset=39))], None, None, lineno=4045, col_offset=8), lineno=4045, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=4046, col_offset=8), 'add_argument', Load(), lineno=4046, col_offset=8), [Str('-x', lineno=4046, col_offset=28)], [keyword('help', Str('NEW X', lineno=4046, col_offset=39))], None, None, lineno=4046, col_offset=8), lineno=4046, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4047, col_offset=8), 'assertEqual', Load(), lineno=4047, col_offset=8), [Call(Attribute(Name('parser', Load(), lineno=4047, col_offset=25), 'format_help', Load(), lineno=4047, col_offset=25), [], [], None, None, lineno=4047, col_offset=25), Call(Attribute(Name('textwrap', Load(), lineno=4047, col_offset=47), 'dedent', Load(), lineno=4047, col_offset=47), [Str('            usage: PROG [-h] [-x X]\n\n            optional arguments:\n              -h, --help  show this help message and exit\n              -x X        NEW X\n            ', lineno=4053, col_offset=-1)], [], None, None, lineno=4047, col_offset=47)], [], None, None, lineno=4047, col_offset=8), lineno=4047, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=4055, col_offset=8), 'add_argument', Load(), lineno=4055, col_offset=8), [Str('--spam', lineno=4055, col_offset=28)], [keyword('metavar', Str('OLD_SPAM', lineno=4055, col_offset=46))], None, None, lineno=4055, col_offset=8), lineno=4055, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=4056, col_offset=8), 'add_argument', Load(), lineno=4056, col_offset=8), [Str('--spam', lineno=4056, col_offset=28)], [keyword('metavar', Str('NEW_SPAM', lineno=4056, col_offset=46))], None, None, lineno=4056, col_offset=8), lineno=4056, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4057, col_offset=8), 'assertEqual', Load(), lineno=4057, col_offset=8), [Call(Attribute(Name('parser', Load(), lineno=4057, col_offset=25), 'format_help', Load(), lineno=4057, col_offset=25), [], [], None, None, lineno=4057, col_offset=25), Call(Attribute(Name('textwrap', Load(), lineno=4057, col_offset=47), 'dedent', Load(), lineno=4057, col_offset=47), [Str('            usage: PROG [-h] [-x X] [--spam NEW_SPAM]\n\n            optional arguments:\n              -h, --help       show this help message and exit\n              -x X             NEW X\n              --spam NEW_SPAM\n            ', lineno=4064, col_offset=-1)], [], None, None, lineno=4057, col_offset=47)], [], None, None, lineno=4057, col_offset=8), lineno=4057, col_offset=8)], [], lineno=4041, col_offset=4)], [], lineno=4026, col_offset=0), ClassDef('TestOptionalsHelpVersionActions', [Name('TestCase', Load(), lineno=4071, col_offset=38)], [Expr(Str('Test the help and version actions', lineno=4072, col_offset=4), lineno=4072, col_offset=4), FunctionDef('_get_error', arguments([Name('self', Param(), lineno=4074, col_offset=19), Name('func', Param(), lineno=4074, col_offset=25)], 'args', 'kwargs', []), [TryExcept([Expr(Call(Name('func', Load(), lineno=4076, col_offset=12), [], [], Name('args', Load(), lineno=4076, col_offset=18), Name('kwargs', Load(), lineno=4076, col_offset=26), lineno=4076, col_offset=12), lineno=4076, col_offset=12)], [ExceptHandler(Name('ArgumentParserError', Load(), lineno=4077, col_offset=15), None, [Return(Subscript(Call(Attribute(Name('sys', Load(), lineno=4078, col_offset=19), 'exc_info', Load(), lineno=4078, col_offset=19), [], [], None, None, lineno=4078, col_offset=19), Index(Num(1, lineno=4078, col_offset=34)), Load(), lineno=4078, col_offset=19), lineno=4078, col_offset=12)], lineno=4077, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=4080, col_offset=12), 'assertRaises', Load(), lineno=4080, col_offset=12), [Name('ArgumentParserError', Load(), lineno=4080, col_offset=30), Name('func', Load(), lineno=4080, col_offset=51)], [], Name('args', Load(), lineno=4080, col_offset=58), Name('kwargs', Load(), lineno=4080, col_offset=66), lineno=4080, col_offset=12), lineno=4080, col_offset=12)], lineno=4075, col_offset=8)], [], lineno=4074, col_offset=4), FunctionDef('assertPrintHelpExit', arguments([Name('self', Param(), lineno=4082, col_offset=28), Name('parser', Param(), lineno=4082, col_offset=34), Name('args_str', Param(), lineno=4082, col_offset=42)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=4083, col_offset=8), 'assertEqual', Load(), lineno=4083, col_offset=8), [Call(Attribute(Name('parser', Load(), lineno=4084, col_offset=12), 'format_help', Load(), lineno=4084, col_offset=12), [], [], None, None, lineno=4084, col_offset=12), Attribute(Call(Attribute(Name('self', Load(), lineno=4085, col_offset=12), '_get_error', Load(), lineno=4085, col_offset=12), [Attribute(Name('parser', Load(), lineno=4085, col_offset=28), 'parse_args', Load(), lineno=4085, col_offset=28), Call(Attribute(Name('args_str', Load(), lineno=4085, col_offset=47), 'split', Load(), lineno=4085, col_offset=47), [], [], None, None, lineno=4085, col_offset=47)], [], None, None, lineno=4085, col_offset=12), 'stdout', Load(), lineno=4085, col_offset=12)], [], None, None, lineno=4083, col_offset=8), lineno=4083, col_offset=8)], [], lineno=4082, col_offset=4), FunctionDef('assertPrintVersionExit', arguments([Name('self', Param(), lineno=4087, col_offset=31), Name('parser', Param(), lineno=4087, col_offset=37), Name('args_str', Param(), lineno=4087, col_offset=45)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=4088, col_offset=8), 'assertEqual', Load(), lineno=4088, col_offset=8), [Call(Attribute(Name('parser', Load(), lineno=4089, col_offset=12), 'format_version', Load(), lineno=4089, col_offset=12), [], [], None, None, lineno=4089, col_offset=12), Attribute(Call(Attribute(Name('self', Load(), lineno=4090, col_offset=12), '_get_error', Load(), lineno=4090, col_offset=12), [Attribute(Name('parser', Load(), lineno=4090, col_offset=28), 'parse_args', Load(), lineno=4090, col_offset=28), Call(Attribute(Name('args_str', Load(), lineno=4090, col_offset=47), 'split', Load(), lineno=4090, col_offset=47), [], [], None, None, lineno=4090, col_offset=47)], [], None, None, lineno=4090, col_offset=12), 'stderr', Load(), lineno=4090, col_offset=12)], [], None, None, lineno=4088, col_offset=8), lineno=4088, col_offset=8)], [], lineno=4087, col_offset=4), FunctionDef('assertArgumentParserError', arguments([Name('self', Param(), lineno=4092, col_offset=34), Name('parser', Param(), lineno=4092, col_offset=40)], 'args', None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=4093, col_offset=8), 'assertRaises', Load(), lineno=4093, col_offset=8), [Name('ArgumentParserError', Load(), lineno=4093, col_offset=26), Attribute(Name('parser', Load(), lineno=4093, col_offset=47), 'parse_args', Load(), lineno=4093, col_offset=47), Name('args', Load(), lineno=4093, col_offset=66)], [], None, None, lineno=4093, col_offset=8), lineno=4093, col_offset=8)], [], lineno=4092, col_offset=4), FunctionDef('test_version', arguments([Name('self', Param(), lineno=4095, col_offset=21)], None, None, []), [Assign([Name('parser', Store(), lineno=4096, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=4096, col_offset=17), [], [keyword('version', Str('1.0', lineno=4096, col_offset=52))], None, None, lineno=4096, col_offset=17), lineno=4096, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4097, col_offset=8), 'assertPrintHelpExit', Load(), lineno=4097, col_offset=8), [Name('parser', Load(), lineno=4097, col_offset=33), Str('-h', lineno=4097, col_offset=41)], [], None, None, lineno=4097, col_offset=8), lineno=4097, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4098, col_offset=8), 'assertPrintHelpExit', Load(), lineno=4098, col_offset=8), [Name('parser', Load(), lineno=4098, col_offset=33), Str('--help', lineno=4098, col_offset=41)], [], None, None, lineno=4098, col_offset=8), lineno=4098, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4099, col_offset=8), 'assertPrintVersionExit', Load(), lineno=4099, col_offset=8), [Name('parser', Load(), lineno=4099, col_offset=36), Str('-v', lineno=4099, col_offset=44)], [], None, None, lineno=4099, col_offset=8), lineno=4099, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4100, col_offset=8), 'assertPrintVersionExit', Load(), lineno=4100, col_offset=8), [Name('parser', Load(), lineno=4100, col_offset=36), Str('--version', lineno=4100, col_offset=44)], [], None, None, lineno=4100, col_offset=8), lineno=4100, col_offset=8)], [], lineno=4095, col_offset=4), FunctionDef('test_version_format', arguments([Name('self', Param(), lineno=4102, col_offset=28)], None, None, []), [Assign([Name('parser', Store(), lineno=4103, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=4103, col_offset=17), [], [keyword('prog', Str('PPP', lineno=4103, col_offset=49)), keyword('version', Str('%(prog)s 3.5', lineno=4103, col_offset=64))], None, None, lineno=4103, col_offset=17), lineno=4103, col_offset=8), Assign([Name('msg', Store(), lineno=4104, col_offset=8)], Attribute(Call(Attribute(Name('self', Load(), lineno=4104, col_offset=14), '_get_error', Load(), lineno=4104, col_offset=14), [Attribute(Name('parser', Load(), lineno=4104, col_offset=30), 'parse_args', Load(), lineno=4104, col_offset=30), List([Str('-v', lineno=4104, col_offset=50)], Load(), lineno=4104, col_offset=49)], [], None, None, lineno=4104, col_offset=14), 'stderr', Load(), lineno=4104, col_offset=14), lineno=4104, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4105, col_offset=8), 'assertEqual', Load(), lineno=4105, col_offset=8), [Str('PPP 3.5\n', lineno=4105, col_offset=25), Name('msg', Load(), lineno=4105, col_offset=38)], [], None, None, lineno=4105, col_offset=8), lineno=4105, col_offset=8)], [], lineno=4102, col_offset=4), FunctionDef('test_version_no_help', arguments([Name('self', Param(), lineno=4107, col_offset=29)], None, None, []), [Assign([Name('parser', Store(), lineno=4108, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=4108, col_offset=17), [], [keyword('add_help', Name('False', Load(), lineno=4108, col_offset=53)), keyword('version', Str('1.0', lineno=4108, col_offset=68))], None, None, lineno=4108, col_offset=17), lineno=4108, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4109, col_offset=8), 'assertArgumentParserError', Load(), lineno=4109, col_offset=8), [Name('parser', Load(), lineno=4109, col_offset=39), Str('-h', lineno=4109, col_offset=47)], [], None, None, lineno=4109, col_offset=8), lineno=4109, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4110, col_offset=8), 'assertArgumentParserError', Load(), lineno=4110, col_offset=8), [Name('parser', Load(), lineno=4110, col_offset=39), Str('--help', lineno=4110, col_offset=47)], [], None, None, lineno=4110, col_offset=8), lineno=4110, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4111, col_offset=8), 'assertPrintVersionExit', Load(), lineno=4111, col_offset=8), [Name('parser', Load(), lineno=4111, col_offset=36), Str('-v', lineno=4111, col_offset=44)], [], None, None, lineno=4111, col_offset=8), lineno=4111, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4112, col_offset=8), 'assertPrintVersionExit', Load(), lineno=4112, col_offset=8), [Name('parser', Load(), lineno=4112, col_offset=36), Str('--version', lineno=4112, col_offset=44)], [], None, None, lineno=4112, col_offset=8), lineno=4112, col_offset=8)], [], lineno=4107, col_offset=4), FunctionDef('test_version_action', arguments([Name('self', Param(), lineno=4114, col_offset=28)], None, None, []), [Assign([Name('parser', Store(), lineno=4115, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=4115, col_offset=17), [], [keyword('prog', Str('XXX', lineno=4115, col_offset=49))], None, None, lineno=4115, col_offset=17), lineno=4115, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=4116, col_offset=8), 'add_argument', Load(), lineno=4116, col_offset=8), [Str('-V', lineno=4116, col_offset=28)], [keyword('action', Str('version', lineno=4116, col_offset=41)), keyword('version', Str('%(prog)s 3.7', lineno=4116, col_offset=60))], None, None, lineno=4116, col_offset=8), lineno=4116, col_offset=8), Assign([Name('msg', Store(), lineno=4117, col_offset=8)], Attribute(Call(Attribute(Name('self', Load(), lineno=4117, col_offset=14), '_get_error', Load(), lineno=4117, col_offset=14), [Attribute(Name('parser', Load(), lineno=4117, col_offset=30), 'parse_args', Load(), lineno=4117, col_offset=30), List([Str('-V', lineno=4117, col_offset=50)], Load(), lineno=4117, col_offset=49)], [], None, None, lineno=4117, col_offset=14), 'stderr', Load(), lineno=4117, col_offset=14), lineno=4117, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4118, col_offset=8), 'assertEqual', Load(), lineno=4118, col_offset=8), [Str('XXX 3.7\n', lineno=4118, col_offset=25), Name('msg', Load(), lineno=4118, col_offset=38)], [], None, None, lineno=4118, col_offset=8), lineno=4118, col_offset=8)], [], lineno=4114, col_offset=4), FunctionDef('test_no_help', arguments([Name('self', Param(), lineno=4120, col_offset=21)], None, None, []), [Assign([Name('parser', Store(), lineno=4121, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=4121, col_offset=17), [], [keyword('add_help', Name('False', Load(), lineno=4121, col_offset=53))], None, None, lineno=4121, col_offset=17), lineno=4121, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4122, col_offset=8), 'assertArgumentParserError', Load(), lineno=4122, col_offset=8), [Name('parser', Load(), lineno=4122, col_offset=39), Str('-h', lineno=4122, col_offset=47)], [], None, None, lineno=4122, col_offset=8), lineno=4122, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4123, col_offset=8), 'assertArgumentParserError', Load(), lineno=4123, col_offset=8), [Name('parser', Load(), lineno=4123, col_offset=39), Str('--help', lineno=4123, col_offset=47)], [], None, None, lineno=4123, col_offset=8), lineno=4123, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4124, col_offset=8), 'assertArgumentParserError', Load(), lineno=4124, col_offset=8), [Name('parser', Load(), lineno=4124, col_offset=39), Str('-v', lineno=4124, col_offset=47)], [], None, None, lineno=4124, col_offset=8), lineno=4124, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4125, col_offset=8), 'assertArgumentParserError', Load(), lineno=4125, col_offset=8), [Name('parser', Load(), lineno=4125, col_offset=39), Str('--version', lineno=4125, col_offset=47)], [], None, None, lineno=4125, col_offset=8), lineno=4125, col_offset=8)], [], lineno=4120, col_offset=4), FunctionDef('test_alternate_help_version', arguments([Name('self', Param(), lineno=4127, col_offset=36)], None, None, []), [Assign([Name('parser', Store(), lineno=4128, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=4128, col_offset=17), [], [], None, None, lineno=4128, col_offset=17), lineno=4128, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=4129, col_offset=8), 'add_argument', Load(), lineno=4129, col_offset=8), [Str('-x', lineno=4129, col_offset=28)], [keyword('action', Str('help', lineno=4129, col_offset=41))], None, None, lineno=4129, col_offset=8), lineno=4129, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=4130, col_offset=8), 'add_argument', Load(), lineno=4130, col_offset=8), [Str('-y', lineno=4130, col_offset=28)], [keyword('action', Str('version', lineno=4130, col_offset=41))], None, None, lineno=4130, col_offset=8), lineno=4130, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4131, col_offset=8), 'assertPrintHelpExit', Load(), lineno=4131, col_offset=8), [Name('parser', Load(), lineno=4131, col_offset=33), Str('-x', lineno=4131, col_offset=41)], [], None, None, lineno=4131, col_offset=8), lineno=4131, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4132, col_offset=8), 'assertPrintVersionExit', Load(), lineno=4132, col_offset=8), [Name('parser', Load(), lineno=4132, col_offset=36), Str('-y', lineno=4132, col_offset=44)], [], None, None, lineno=4132, col_offset=8), lineno=4132, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4133, col_offset=8), 'assertArgumentParserError', Load(), lineno=4133, col_offset=8), [Name('parser', Load(), lineno=4133, col_offset=39), Str('-v', lineno=4133, col_offset=47)], [], None, None, lineno=4133, col_offset=8), lineno=4133, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4134, col_offset=8), 'assertArgumentParserError', Load(), lineno=4134, col_offset=8), [Name('parser', Load(), lineno=4134, col_offset=39), Str('--version', lineno=4134, col_offset=47)], [], None, None, lineno=4134, col_offset=8), lineno=4134, col_offset=8)], [], lineno=4127, col_offset=4), FunctionDef('test_help_version_extra_arguments', arguments([Name('self', Param(), lineno=4136, col_offset=42)], None, None, []), [Assign([Name('parser', Store(), lineno=4137, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=4137, col_offset=17), [], [keyword('version', Str('1.0', lineno=4137, col_offset=52))], None, None, lineno=4137, col_offset=17), lineno=4137, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=4138, col_offset=8), 'add_argument', Load(), lineno=4138, col_offset=8), [Str('-x', lineno=4138, col_offset=28)], [keyword('action', Str('store_true', lineno=4138, col_offset=41))], None, None, lineno=4138, col_offset=8), lineno=4138, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=4139, col_offset=8), 'add_argument', Load(), lineno=4139, col_offset=8), [Str('y', lineno=4139, col_offset=28)], [], None, None, lineno=4139, col_offset=8), lineno=4139, col_offset=8), Assign([Name('valid_prefixes', Store(), lineno=4142, col_offset=8)], List([Str('', lineno=4142, col_offset=26), Str('-x', lineno=4142, col_offset=30), Str('foo', lineno=4142, col_offset=36), Str('-x bar', lineno=4142, col_offset=43), Str('baz -x', lineno=4142, col_offset=53)], Load(), lineno=4142, col_offset=25), lineno=4142, col_offset=8), Assign([Name('valid_suffixes', Store(), lineno=4143, col_offset=8)], BinOp(Name('valid_prefixes', Load(), lineno=4143, col_offset=25), Add(), List([Str('--bad-option', lineno=4143, col_offset=43), Str('foo bar baz', lineno=4143, col_offset=59)], Load(), lineno=4143, col_offset=42), lineno=4143, col_offset=25), lineno=4143, col_offset=8), For(Name('prefix', Store(), lineno=4144, col_offset=12), Name('valid_prefixes', Load(), lineno=4144, col_offset=22), [For(Name('suffix', Store(), lineno=4145, col_offset=16), Name('valid_suffixes', Load(), lineno=4145, col_offset=26), [Assign([Name('format', Store(), lineno=4146, col_offset=16)], BinOp(Str('%s %%s %s', lineno=4146, col_offset=25), Mod(), Tuple([Name('prefix', Load(), lineno=4146, col_offset=40), Name('suffix', Load(), lineno=4146, col_offset=48)], Load(), lineno=4146, col_offset=40), lineno=4146, col_offset=25), lineno=4146, col_offset=16)], [], lineno=4145, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=4147, col_offset=12), 'assertPrintHelpExit', Load(), lineno=4147, col_offset=12), [Name('parser', Load(), lineno=4147, col_offset=37), BinOp(Name('format', Load(), lineno=4147, col_offset=45), Mod(), Str('-h', lineno=4147, col_offset=54), lineno=4147, col_offset=45)], [], None, None, lineno=4147, col_offset=12), lineno=4147, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=4148, col_offset=12), 'assertPrintHelpExit', Load(), lineno=4148, col_offset=12), [Name('parser', Load(), lineno=4148, col_offset=37), BinOp(Name('format', Load(), lineno=4148, col_offset=45), Mod(), Str('--help', lineno=4148, col_offset=54), lineno=4148, col_offset=45)], [], None, None, lineno=4148, col_offset=12), lineno=4148, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=4149, col_offset=12), 'assertPrintVersionExit', Load(), lineno=4149, col_offset=12), [Name('parser', Load(), lineno=4149, col_offset=40), BinOp(Name('format', Load(), lineno=4149, col_offset=48), Mod(), Str('-v', lineno=4149, col_offset=57), lineno=4149, col_offset=48)], [], None, None, lineno=4149, col_offset=12), lineno=4149, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=4150, col_offset=12), 'assertPrintVersionExit', Load(), lineno=4150, col_offset=12), [Name('parser', Load(), lineno=4150, col_offset=40), BinOp(Name('format', Load(), lineno=4150, col_offset=48), Mod(), Str('--version', lineno=4150, col_offset=57), lineno=4150, col_offset=48)], [], None, None, lineno=4150, col_offset=12), lineno=4150, col_offset=12)], [], lineno=4144, col_offset=8)], [], lineno=4136, col_offset=4)], [], lineno=4071, col_offset=0), ClassDef('TestStrings', [Name('TestCase', Load(), lineno=4157, col_offset=18)], [Expr(Str('Test str()  and repr() on Optionals and Positionals', lineno=4158, col_offset=4), lineno=4158, col_offset=4), FunctionDef('assertStringEqual', arguments([Name('self', Param(), lineno=4160, col_offset=26), Name('obj', Param(), lineno=4160, col_offset=32), Name('result_string', Param(), lineno=4160, col_offset=37)], None, None, []), [For(Name('func', Store(), lineno=4161, col_offset=12), List([Name('str', Load(), lineno=4161, col_offset=21), Name('repr', Load(), lineno=4161, col_offset=26)], Load(), lineno=4161, col_offset=20), [Expr(Call(Attribute(Name('self', Load(), lineno=4162, col_offset=12), 'assertEqual', Load(), lineno=4162, col_offset=12), [Call(Name('func', Load(), lineno=4162, col_offset=29), [Name('obj', Load(), lineno=4162, col_offset=34)], [], None, None, lineno=4162, col_offset=29), Name('result_string', Load(), lineno=4162, col_offset=40)], [], None, None, lineno=4162, col_offset=12), lineno=4162, col_offset=12)], [], lineno=4161, col_offset=8)], [], lineno=4160, col_offset=4), FunctionDef('test_optional', arguments([Name('self', Param(), lineno=4164, col_offset=22)], None, None, []), [Assign([Name('option', Store(), lineno=4165, col_offset=8)], Call(Attribute(Name('argparse', Load(), lineno=4165, col_offset=17), 'Action', Load(), lineno=4165, col_offset=17), [], [keyword('option_strings', List([Str('--foo', lineno=4166, col_offset=28), Str('-a', lineno=4166, col_offset=37), Str('-b', lineno=4166, col_offset=43)], Load(), lineno=4166, col_offset=27)), keyword('dest', Str('b', lineno=4167, col_offset=17)), keyword('type', Str('int', lineno=4168, col_offset=17)), keyword('nargs', Str('+', lineno=4169, col_offset=18)), keyword('default', Num(42, lineno=4170, col_offset=20)), keyword('choices', List([Num(1, lineno=4171, col_offset=21), Num(2, lineno=4171, col_offset=24), Num(3, lineno=4171, col_offset=27)], Load(), lineno=4171, col_offset=20)), keyword('help', Str('HELP', lineno=4172, col_offset=17)), keyword('metavar', Str('METAVAR', lineno=4173, col_offset=20))], None, None, lineno=4165, col_offset=17), lineno=4165, col_offset=8), Assign([Name('string', Store(), lineno=4174, col_offset=8)], Str("Action(option_strings=['--foo', '-a', '-b'], dest='b', nargs='+', const=None, default=42, type='int', choices=[1, 2, 3], help='HELP', metavar='METAVAR')", lineno=4175, col_offset=12), lineno=4174, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4178, col_offset=8), 'assertStringEqual', Load(), lineno=4178, col_offset=8), [Name('option', Load(), lineno=4178, col_offset=31), Name('string', Load(), lineno=4178, col_offset=39)], [], None, None, lineno=4178, col_offset=8), lineno=4178, col_offset=8)], [], lineno=4164, col_offset=4), FunctionDef('test_argument', arguments([Name('self', Param(), lineno=4180, col_offset=22)], None, None, []), [Assign([Name('argument', Store(), lineno=4181, col_offset=8)], Call(Attribute(Name('argparse', Load(), lineno=4181, col_offset=19), 'Action', Load(), lineno=4181, col_offset=19), [], [keyword('option_strings', List([], Load(), lineno=4182, col_offset=27)), keyword('dest', Str('x', lineno=4183, col_offset=17)), keyword('type', Name('float', Load(), lineno=4184, col_offset=17)), keyword('nargs', Str('?', lineno=4185, col_offset=18)), keyword('default', Num(2.5, lineno=4186, col_offset=20)), keyword('choices', List([Num(0.5, lineno=4187, col_offset=21), Num(1.5, lineno=4187, col_offset=26), Num(2.5, lineno=4187, col_offset=31)], Load(), lineno=4187, col_offset=20)), keyword('help', Str('H HH H', lineno=4188, col_offset=17)), keyword('metavar', Str('MV MV MV', lineno=4189, col_offset=20))], None, None, lineno=4181, col_offset=19), lineno=4181, col_offset=8), Assign([Name('string', Store(), lineno=4190, col_offset=8)], BinOp(Str("Action(option_strings=[], dest='x', nargs='?', const=None, default=2.5, type=%r, choices=[0.5, 1.5, 2.5], help='H HH H', metavar='MV MV MV')", lineno=4191, col_offset=12), Mod(), Name('float', Load(), lineno=4193, col_offset=51), lineno=4191, col_offset=12), lineno=4190, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4194, col_offset=8), 'assertStringEqual', Load(), lineno=4194, col_offset=8), [Name('argument', Load(), lineno=4194, col_offset=31), Name('string', Load(), lineno=4194, col_offset=41)], [], None, None, lineno=4194, col_offset=8), lineno=4194, col_offset=8)], [], lineno=4180, col_offset=4), FunctionDef('test_namespace', arguments([Name('self', Param(), lineno=4196, col_offset=23)], None, None, []), [Assign([Name('ns', Store(), lineno=4197, col_offset=8)], Call(Attribute(Name('argparse', Load(), lineno=4197, col_offset=13), 'Namespace', Load(), lineno=4197, col_offset=13), [], [keyword('foo', Num(42, lineno=4197, col_offset=36)), keyword('bar', Str('spam', lineno=4197, col_offset=44))], None, None, lineno=4197, col_offset=13), lineno=4197, col_offset=8), Assign([Name('string', Store(), lineno=4198, col_offset=8)], Str("Namespace(bar='spam', foo=42)", lineno=4198, col_offset=17), lineno=4198, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4199, col_offset=8), 'assertStringEqual', Load(), lineno=4199, col_offset=8), [Name('ns', Load(), lineno=4199, col_offset=31), Name('string', Load(), lineno=4199, col_offset=35)], [], None, None, lineno=4199, col_offset=8), lineno=4199, col_offset=8)], [], lineno=4196, col_offset=4), FunctionDef('test_parser', arguments([Name('self', Param(), lineno=4201, col_offset=20)], None, None, []), [Assign([Name('parser', Store(), lineno=4202, col_offset=8)], Call(Attribute(Name('argparse', Load(), lineno=4202, col_offset=17), 'ArgumentParser', Load(), lineno=4202, col_offset=17), [], [keyword('prog', Str('PROG', lineno=4202, col_offset=46))], None, None, lineno=4202, col_offset=17), lineno=4202, col_offset=8), Assign([Name('string', Store(), lineno=4203, col_offset=8)], BinOp(Str("ArgumentParser(prog='PROG', usage=None, description=None, version=None, formatter_class=%r, conflict_handler='error', add_help=True)", lineno=4204, col_offset=12), Mod(), Attribute(Name('argparse', Load(), lineno=4206, col_offset=31), 'HelpFormatter', Load(), lineno=4206, col_offset=31), lineno=4204, col_offset=12), lineno=4203, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4207, col_offset=8), 'assertStringEqual', Load(), lineno=4207, col_offset=8), [Name('parser', Load(), lineno=4207, col_offset=31), Name('string', Load(), lineno=4207, col_offset=39)], [], None, None, lineno=4207, col_offset=8), lineno=4207, col_offset=8)], [], lineno=4201, col_offset=4)], [], lineno=4157, col_offset=0), ClassDef('TestNamespace', [Name('TestCase', Load(), lineno=4213, col_offset=20)], [FunctionDef('test_constructor', arguments([Name('self', Param(), lineno=4215, col_offset=25)], None, None, []), [Assign([Name('ns', Store(), lineno=4216, col_offset=8)], Call(Attribute(Name('argparse', Load(), lineno=4216, col_offset=13), 'Namespace', Load(), lineno=4216, col_offset=13), [], [], None, None, lineno=4216, col_offset=13), lineno=4216, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4217, col_offset=8), 'assertRaises', Load(), lineno=4217, col_offset=8), [Name('AttributeError', Load(), lineno=4217, col_offset=26), Name('getattr', Load(), lineno=4217, col_offset=42), Name('ns', Load(), lineno=4217, col_offset=51), Str('x', lineno=4217, col_offset=55)], [], None, None, lineno=4217, col_offset=8), lineno=4217, col_offset=8), Assign([Name('ns', Store(), lineno=4219, col_offset=8)], Call(Attribute(Name('argparse', Load(), lineno=4219, col_offset=13), 'Namespace', Load(), lineno=4219, col_offset=13), [], [keyword('a', Num(42, lineno=4219, col_offset=34)), keyword('b', Str('spam', lineno=4219, col_offset=40))], None, None, lineno=4219, col_offset=13), lineno=4219, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4220, col_offset=8), 'assertEqual', Load(), lineno=4220, col_offset=8), [Attribute(Name('ns', Load(), lineno=4220, col_offset=25), 'a', Load(), lineno=4220, col_offset=25), Num(42, lineno=4220, col_offset=31)], [], None, None, lineno=4220, col_offset=8), lineno=4220, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4221, col_offset=8), 'assertEqual', Load(), lineno=4221, col_offset=8), [Attribute(Name('ns', Load(), lineno=4221, col_offset=25), 'b', Load(), lineno=4221, col_offset=25), Str('spam', lineno=4221, col_offset=31)], [], None, None, lineno=4221, col_offset=8), lineno=4221, col_offset=8)], [], lineno=4215, col_offset=4), FunctionDef('test_equality', arguments([Name('self', Param(), lineno=4223, col_offset=22)], None, None, []), [Assign([Name('ns1', Store(), lineno=4224, col_offset=8)], Call(Attribute(Name('argparse', Load(), lineno=4224, col_offset=14), 'Namespace', Load(), lineno=4224, col_offset=14), [], [keyword('a', Num(1, lineno=4224, col_offset=35)), keyword('b', Num(2, lineno=4224, col_offset=40))], None, None, lineno=4224, col_offset=14), lineno=4224, col_offset=8), Assign([Name('ns2', Store(), lineno=4225, col_offset=8)], Call(Attribute(Name('argparse', Load(), lineno=4225, col_offset=14), 'Namespace', Load(), lineno=4225, col_offset=14), [], [keyword('b', Num(2, lineno=4225, col_offset=35)), keyword('a', Num(1, lineno=4225, col_offset=40))], None, None, lineno=4225, col_offset=14), lineno=4225, col_offset=8), Assign([Name('ns3', Store(), lineno=4226, col_offset=8)], Call(Attribute(Name('argparse', Load(), lineno=4226, col_offset=14), 'Namespace', Load(), lineno=4226, col_offset=14), [], [keyword('a', Num(1, lineno=4226, col_offset=35))], None, None, lineno=4226, col_offset=14), lineno=4226, col_offset=8), Assign([Name('ns4', Store(), lineno=4227, col_offset=8)], Call(Attribute(Name('argparse', Load(), lineno=4227, col_offset=14), 'Namespace', Load(), lineno=4227, col_offset=14), [], [keyword('b', Num(2, lineno=4227, col_offset=35))], None, None, lineno=4227, col_offset=14), lineno=4227, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4229, col_offset=8), 'assertEqual', Load(), lineno=4229, col_offset=8), [Name('ns1', Load(), lineno=4229, col_offset=25), Name('ns2', Load(), lineno=4229, col_offset=30)], [], None, None, lineno=4229, col_offset=8), lineno=4229, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4230, col_offset=8), 'assertNotEqual', Load(), lineno=4230, col_offset=8), [Name('ns1', Load(), lineno=4230, col_offset=28), Name('ns3', Load(), lineno=4230, col_offset=33)], [], None, None, lineno=4230, col_offset=8), lineno=4230, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4231, col_offset=8), 'assertNotEqual', Load(), lineno=4231, col_offset=8), [Name('ns1', Load(), lineno=4231, col_offset=28), Name('ns4', Load(), lineno=4231, col_offset=33)], [], None, None, lineno=4231, col_offset=8), lineno=4231, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4232, col_offset=8), 'assertNotEqual', Load(), lineno=4232, col_offset=8), [Name('ns2', Load(), lineno=4232, col_offset=28), Name('ns3', Load(), lineno=4232, col_offset=33)], [], None, None, lineno=4232, col_offset=8), lineno=4232, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4233, col_offset=8), 'assertNotEqual', Load(), lineno=4233, col_offset=8), [Name('ns2', Load(), lineno=4233, col_offset=28), Name('ns4', Load(), lineno=4233, col_offset=33)], [], None, None, lineno=4233, col_offset=8), lineno=4233, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4234, col_offset=8), 'assertTrue', Load(), lineno=4234, col_offset=8), [Compare(Name('ns1', Load(), lineno=4234, col_offset=24), [NotEq()], [Name('ns3', Load(), lineno=4234, col_offset=31)], lineno=4234, col_offset=24)], [], None, None, lineno=4234, col_offset=8), lineno=4234, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4235, col_offset=8), 'assertTrue', Load(), lineno=4235, col_offset=8), [Compare(Name('ns1', Load(), lineno=4235, col_offset=24), [NotEq()], [Name('ns4', Load(), lineno=4235, col_offset=31)], lineno=4235, col_offset=24)], [], None, None, lineno=4235, col_offset=8), lineno=4235, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4236, col_offset=8), 'assertTrue', Load(), lineno=4236, col_offset=8), [Compare(Name('ns2', Load(), lineno=4236, col_offset=24), [NotEq()], [Name('ns3', Load(), lineno=4236, col_offset=31)], lineno=4236, col_offset=24)], [], None, None, lineno=4236, col_offset=8), lineno=4236, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4237, col_offset=8), 'assertTrue', Load(), lineno=4237, col_offset=8), [Compare(Name('ns2', Load(), lineno=4237, col_offset=24), [NotEq()], [Name('ns4', Load(), lineno=4237, col_offset=31)], lineno=4237, col_offset=24)], [], None, None, lineno=4237, col_offset=8), lineno=4237, col_offset=8)], [], lineno=4223, col_offset=4)], [], lineno=4213, col_offset=0), ClassDef('TestEncoding', [Name('TestCase', Load(), lineno=4244, col_offset=19)], [FunctionDef('_test_module_encoding', arguments([Name('self', Param(), lineno=4246, col_offset=30), Name('path', Param(), lineno=4246, col_offset=36)], None, None, []), [Assign([Tuple([Name('path', Store(), lineno=4247, col_offset=8), Name('_', Store(), lineno=4247, col_offset=14)], Store(), lineno=4247, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=4247, col_offset=18), 'path', Load(), lineno=4247, col_offset=18), 'splitext', Load(), lineno=4247, col_offset=18), [Name('path', Load(), lineno=4247, col_offset=35)], [], None, None, lineno=4247, col_offset=18), lineno=4247, col_offset=8), AugAssign(Name('path', Store(), lineno=4248, col_offset=8), Add(), Str('.py', lineno=4248, col_offset=16), lineno=4248, col_offset=8), With(Call(Attribute(Name('codecs', Load(), lineno=4249, col_offset=13), 'open', Load(), lineno=4249, col_offset=13), [Name('path', Load(), lineno=4249, col_offset=25), Str('r', lineno=4249, col_offset=31), Str('utf8', lineno=4249, col_offset=36)], [], None, None, lineno=4249, col_offset=13), Name('f', Store(), lineno=4249, col_offset=47), [Expr(Call(Attribute(Name('f', Load(), lineno=4250, col_offset=12), 'read', Load(), lineno=4250, col_offset=12), [], [], None, None, lineno=4250, col_offset=12), lineno=4250, col_offset=12)], lineno=4249, col_offset=13)], [], lineno=4246, col_offset=4), FunctionDef('test_argparse_module_encoding', arguments([Name('self', Param(), lineno=4252, col_offset=38)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=4253, col_offset=8), '_test_module_encoding', Load(), lineno=4253, col_offset=8), [Attribute(Name('argparse', Load(), lineno=4253, col_offset=35), '__file__', Load(), lineno=4253, col_offset=35)], [], None, None, lineno=4253, col_offset=8), lineno=4253, col_offset=8)], [], lineno=4252, col_offset=4), FunctionDef('test_test_argparse_module_encoding', arguments([Name('self', Param(), lineno=4255, col_offset=43)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=4256, col_offset=8), '_test_module_encoding', Load(), lineno=4256, col_offset=8), [Name('__file__', Load(), lineno=4256, col_offset=35)], [], None, None, lineno=4256, col_offset=8), lineno=4256, col_offset=8)], [], lineno=4255, col_offset=4)], [], lineno=4244, col_offset=0), ClassDef('TestArgumentError', [Name('TestCase', Load(), lineno=4262, col_offset=24)], [FunctionDef('test_argument_error', arguments([Name('self', Param(), lineno=4264, col_offset=28)], None, None, []), [Assign([Name('msg', Store(), lineno=4265, col_offset=8)], Str('my error here', lineno=4265, col_offset=14), lineno=4265, col_offset=8), Assign([Name('error', Store(), lineno=4266, col_offset=8)], Call(Attribute(Name('argparse', Load(), lineno=4266, col_offset=16), 'ArgumentError', Load(), lineno=4266, col_offset=16), [Name('None', Load(), lineno=4266, col_offset=39), Name('msg', Load(), lineno=4266, col_offset=45)], [], None, None, lineno=4266, col_offset=16), lineno=4266, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4267, col_offset=8), 'assertEqual', Load(), lineno=4267, col_offset=8), [Call(Name('str', Load(), lineno=4267, col_offset=25), [Name('error', Load(), lineno=4267, col_offset=29)], [], None, None, lineno=4267, col_offset=25), Name('msg', Load(), lineno=4267, col_offset=37)], [], None, None, lineno=4267, col_offset=8), lineno=4267, col_offset=8)], [], lineno=4264, col_offset=4)], [], lineno=4262, col_offset=0), ClassDef('TestArgumentError', [Name('TestCase', Load(), lineno=4273, col_offset=24)], [FunctionDef('test_argument_type_error', arguments([Name('self', Param(), lineno=4275, col_offset=33)], None, None, []), [FunctionDef('spam', arguments([Name('string', Param(), lineno=4277, col_offset=17)], None, None, []), [Raise(Call(Attribute(Name('argparse', Load(), lineno=4278, col_offset=18), 'ArgumentTypeError', Load(), lineno=4278, col_offset=18), [Str('spam!', lineno=4278, col_offset=45)], [], None, None, lineno=4278, col_offset=18), None, None, lineno=4278, col_offset=12)], [], lineno=4277, col_offset=8), Assign([Name('parser', Store(), lineno=4280, col_offset=8)], Call(Name('ErrorRaisingArgumentParser', Load(), lineno=4280, col_offset=17), [], [keyword('prog', Str('PROG', lineno=4280, col_offset=49)), keyword('add_help', Name('False', Load(), lineno=4280, col_offset=66))], None, None, lineno=4280, col_offset=17), lineno=4280, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=4281, col_offset=8), 'add_argument', Load(), lineno=4281, col_offset=8), [Str('x', lineno=4281, col_offset=28)], [keyword('type', Name('spam', Load(), lineno=4281, col_offset=38))], None, None, lineno=4281, col_offset=8), lineno=4281, col_offset=8), TryExcept([Expr(Call(Attribute(Name('parser', Load(), lineno=4283, col_offset=12), 'parse_args', Load(), lineno=4283, col_offset=12), [List([Str('XXX', lineno=4283, col_offset=31)], Load(), lineno=4283, col_offset=30)], [], None, None, lineno=4283, col_offset=12), lineno=4283, col_offset=12)], [ExceptHandler(Name('ArgumentParserError', Load(), lineno=4284, col_offset=15), None, [Assign([Name('expected', Store(), lineno=4285, col_offset=12)], Str('usage: PROG x\nPROG: error: argument x: spam!\n', lineno=4285, col_offset=23), lineno=4285, col_offset=12), Assign([Name('msg', Store(), lineno=4286, col_offset=12)], Attribute(Subscript(Call(Attribute(Name('sys', Load(), lineno=4286, col_offset=18), 'exc_info', Load(), lineno=4286, col_offset=18), [], [], None, None, lineno=4286, col_offset=18), Index(Num(1, lineno=4286, col_offset=33)), Load(), lineno=4286, col_offset=18), 'stderr', Load(), lineno=4286, col_offset=18), lineno=4286, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=4287, col_offset=12), 'assertEqual', Load(), lineno=4287, col_offset=12), [Name('expected', Load(), lineno=4287, col_offset=29), Name('msg', Load(), lineno=4287, col_offset=39)], [], None, None, lineno=4287, col_offset=12), lineno=4287, col_offset=12)], lineno=4284, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=4289, col_offset=12), 'fail', Load(), lineno=4289, col_offset=12), [], [], None, None, lineno=4289, col_offset=12), lineno=4289, col_offset=12)], lineno=4282, col_offset=8)], [], lineno=4275, col_offset=4)], [], lineno=4273, col_offset=0), ClassDef('TestParseKnownArgs', [Name('TestCase', Load(), lineno=4295, col_offset=25)], [FunctionDef('test_optionals', arguments([Name('self', Param(), lineno=4297, col_offset=23)], None, None, []), [Assign([Name('parser', Store(), lineno=4298, col_offset=8)], Call(Attribute(Name('argparse', Load(), lineno=4298, col_offset=17), 'ArgumentParser', Load(), lineno=4298, col_offset=17), [], [], None, None, lineno=4298, col_offset=17), lineno=4298, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=4299, col_offset=8), 'add_argument', Load(), lineno=4299, col_offset=8), [Str('--foo', lineno=4299, col_offset=28)], [], None, None, lineno=4299, col_offset=8), lineno=4299, col_offset=8), Assign([Tuple([Name('args', Store(), lineno=4300, col_offset=8), Name('extras', Store(), lineno=4300, col_offset=14)], Store(), lineno=4300, col_offset=8)], Call(Attribute(Name('parser', Load(), lineno=4300, col_offset=23), 'parse_known_args', Load(), lineno=4300, col_offset=23), [Call(Attribute(Str('--foo F --bar --baz', lineno=4300, col_offset=47), 'split', Load(), lineno=4300, col_offset=47), [], [], None, None, lineno=4300, col_offset=47)], [], None, None, lineno=4300, col_offset=23), lineno=4300, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4301, col_offset=8), 'assertEqual', Load(), lineno=4301, col_offset=8), [Call(Name('NS', Load(), lineno=4301, col_offset=25), [], [keyword('foo', Str('F', lineno=4301, col_offset=32))], None, None, lineno=4301, col_offset=25), Name('args', Load(), lineno=4301, col_offset=38)], [], None, None, lineno=4301, col_offset=8), lineno=4301, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4302, col_offset=8), 'assertEqual', Load(), lineno=4302, col_offset=8), [List([Str('--bar', lineno=4302, col_offset=26), Str('--baz', lineno=4302, col_offset=35)], Load(), lineno=4302, col_offset=25), Name('extras', Load(), lineno=4302, col_offset=45)], [], None, None, lineno=4302, col_offset=8), lineno=4302, col_offset=8)], [], lineno=4297, col_offset=4), FunctionDef('test_mixed', arguments([Name('self', Param(), lineno=4304, col_offset=19)], None, None, []), [Assign([Name('parser', Store(), lineno=4305, col_offset=8)], Call(Attribute(Name('argparse', Load(), lineno=4305, col_offset=17), 'ArgumentParser', Load(), lineno=4305, col_offset=17), [], [], None, None, lineno=4305, col_offset=17), lineno=4305, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=4306, col_offset=8), 'add_argument', Load(), lineno=4306, col_offset=8), [Str('-v', lineno=4306, col_offset=28)], [keyword('nargs', Str('?', lineno=4306, col_offset=40)), keyword('const', Num(1, lineno=4306, col_offset=51)), keyword('type', Name('int', Load(), lineno=4306, col_offset=59))], None, None, lineno=4306, col_offset=8), lineno=4306, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=4307, col_offset=8), 'add_argument', Load(), lineno=4307, col_offset=8), [Str('--spam', lineno=4307, col_offset=28)], [keyword('action', Str('store_false', lineno=4307, col_offset=45))], None, None, lineno=4307, col_offset=8), lineno=4307, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=4308, col_offset=8), 'add_argument', Load(), lineno=4308, col_offset=8), [Str('badger', lineno=4308, col_offset=28)], [], None, None, lineno=4308, col_offset=8), lineno=4308, col_offset=8), Assign([Name('argv', Store(), lineno=4310, col_offset=8)], List([Str('B', lineno=4310, col_offset=16), Str('C', lineno=4310, col_offset=21), Str('--foo', lineno=4310, col_offset=26), Str('-v', lineno=4310, col_offset=35), Str('3', lineno=4310, col_offset=41), Str('4', lineno=4310, col_offset=46)], Load(), lineno=4310, col_offset=15), lineno=4310, col_offset=8), Assign([Tuple([Name('args', Store(), lineno=4311, col_offset=8), Name('extras', Store(), lineno=4311, col_offset=14)], Store(), lineno=4311, col_offset=8)], Call(Attribute(Name('parser', Load(), lineno=4311, col_offset=23), 'parse_known_args', Load(), lineno=4311, col_offset=23), [Name('argv', Load(), lineno=4311, col_offset=47)], [], None, None, lineno=4311, col_offset=23), lineno=4311, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4312, col_offset=8), 'assertEqual', Load(), lineno=4312, col_offset=8), [Call(Name('NS', Load(), lineno=4312, col_offset=25), [], [keyword('v', Num(3, lineno=4312, col_offset=30)), keyword('spam', Name('True', Load(), lineno=4312, col_offset=38)), keyword('badger', Str('B', lineno=4312, col_offset=51))], None, None, lineno=4312, col_offset=25), Name('args', Load(), lineno=4312, col_offset=57)], [], None, None, lineno=4312, col_offset=8), lineno=4312, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4313, col_offset=8), 'assertEqual', Load(), lineno=4313, col_offset=8), [List([Str('C', lineno=4313, col_offset=26), Str('--foo', lineno=4313, col_offset=31), Str('4', lineno=4313, col_offset=40)], Load(), lineno=4313, col_offset=25), Name('extras', Load(), lineno=4313, col_offset=46)], [], None, None, lineno=4313, col_offset=8), lineno=4313, col_offset=8)], [], lineno=4304, col_offset=4)], [], lineno=4295, col_offset=0), ClassDef('TestImportStar', [Name('TestCase', Load(), lineno=4319, col_offset=21)], [FunctionDef('test', arguments([Name('self', Param(), lineno=4321, col_offset=13)], None, None, []), [For(Name('name', Store(), lineno=4322, col_offset=12), Attribute(Name('argparse', Load(), lineno=4322, col_offset=20), '__all__', Load(), lineno=4322, col_offset=20), [Expr(Call(Attribute(Name('self', Load(), lineno=4323, col_offset=12), 'assertTrue', Load(), lineno=4323, col_offset=12), [Call(Name('hasattr', Load(), lineno=4323, col_offset=28), [Name('argparse', Load(), lineno=4323, col_offset=36), Name('name', Load(), lineno=4323, col_offset=46)], [], None, None, lineno=4323, col_offset=28)], [], None, None, lineno=4323, col_offset=12), lineno=4323, col_offset=12)], [], lineno=4322, col_offset=8)], [], lineno=4321, col_offset=4), FunctionDef('test_all_exports_everything_but_modules', arguments([Name('self', Param(), lineno=4325, col_offset=48)], None, None, []), [Assign([Name('items', Store(), lineno=4326, col_offset=8)], ListComp(Name('name', Load(), lineno=4327, col_offset=12), [comprehension(Tuple([Name('name', Store(), lineno=4328, col_offset=16), Name('value', Store(), lineno=4328, col_offset=22)], Store(), lineno=4328, col_offset=16), Call(Attribute(Call(Name('vars', Load(), lineno=4328, col_offset=31), [Name('argparse', Load(), lineno=4328, col_offset=36)], [], None, None, lineno=4328, col_offset=31), 'items', Load(), lineno=4328, col_offset=31), [], [], None, None, lineno=4328, col_offset=31), [UnaryOp(Not(), Call(Attribute(Name('name', Load(), lineno=4329, col_offset=19), 'startswith', Load(), lineno=4329, col_offset=19), [Str('_', lineno=4329, col_offset=35)], [], None, None, lineno=4329, col_offset=19), lineno=4329, col_offset=15), UnaryOp(Not(), Call(Attribute(Name('inspect', Load(), lineno=4330, col_offset=19), 'ismodule', Load(), lineno=4330, col_offset=19), [Name('value', Load(), lineno=4330, col_offset=36)], [], None, None, lineno=4330, col_offset=19), lineno=4330, col_offset=15)])], lineno=4327, col_offset=12), lineno=4326, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=4332, col_offset=8), 'assertEqual', Load(), lineno=4332, col_offset=8), [Call(Name('sorted', Load(), lineno=4332, col_offset=25), [Name('items', Load(), lineno=4332, col_offset=32)], [], None, None, lineno=4332, col_offset=25), Call(Name('sorted', Load(), lineno=4332, col_offset=40), [Attribute(Name('argparse', Load(), lineno=4332, col_offset=47), '__all__', Load(), lineno=4332, col_offset=47)], [], None, None, lineno=4332, col_offset=40)], [], None, None, lineno=4332, col_offset=8), lineno=4332, col_offset=8)], [], lineno=4325, col_offset=4)], [], lineno=4319, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [With(Call(Attribute(Name('test_support', Load(), lineno=4336, col_offset=9), 'check_warnings', Load(), lineno=4336, col_offset=9), [Tuple([Str('The "version" argument to ArgumentParser is deprecated.', lineno=4337, col_offset=13), Name('DeprecationWarning', Load(), lineno=4338, col_offset=13)], Load(), lineno=4337, col_offset=13), Tuple([Str('The (format|print)_version method is deprecated', lineno=4339, col_offset=13), Name('DeprecationWarning', Load(), lineno=4340, col_offset=13)], Load(), lineno=4339, col_offset=13)], [], None, None, lineno=4336, col_offset=9), None, [Expr(Call(Attribute(Name('test_support', Load(), lineno=4341, col_offset=8), 'run_unittest', Load(), lineno=4341, col_offset=8), [Name('__name__', Load(), lineno=4341, col_offset=34)], [], None, None, lineno=4341, col_offset=8), lineno=4341, col_offset=8)], lineno=4336, col_offset=9), Assign([Attribute(Name('RFile', Load(), lineno=4343, col_offset=4), 'seen', Store(), lineno=4343, col_offset=4)], Dict([], [], lineno=4343, col_offset=17), lineno=4343, col_offset=4), Assign([Attribute(Name('WFile', Load(), lineno=4344, col_offset=4), 'seen', Store(), lineno=4344, col_offset=4)], Call(Name('set', Load(), lineno=4344, col_offset=17), [], [], None, None, lineno=4344, col_offset=17), lineno=4344, col_offset=4)], [], lineno=4334, col_offset=0), If(Compare(Name('__name__', Load(), lineno=4348, col_offset=3), [Eq()], [Str('__main__', lineno=4348, col_offset=15)], lineno=4348, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=4349, col_offset=4), [], [], None, None, lineno=4349, col_offset=4), lineno=4349, col_offset=4)], [], lineno=4348, col_offset=0)])
