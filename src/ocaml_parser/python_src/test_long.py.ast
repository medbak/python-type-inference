Module([Import([alias('unittest', None)], lineno=1, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=2, col_offset=0), Import([alias('sys', None)], lineno=3, col_offset=0), Import([alias('random', None)], lineno=5, col_offset=0), Import([alias('math', None)], lineno=6, col_offset=0), ClassDef('Frm', [Name('object', Load(), lineno=9, col_offset=10)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=10, col_offset=17), Name('format', Param(), lineno=10, col_offset=23)], 'args', None, []), [Assign([Attribute(Name('self', Load(), lineno=11, col_offset=8), 'format', Store(), lineno=11, col_offset=8)], Name('format', Load(), lineno=11, col_offset=22), lineno=11, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=12, col_offset=8), 'args', Store(), lineno=12, col_offset=8)], Name('args', Load(), lineno=12, col_offset=20), lineno=12, col_offset=8)], [], lineno=10, col_offset=4), FunctionDef('__str__', arguments([Name('self', Param(), lineno=14, col_offset=16)], None, None, []), [Return(BinOp(Attribute(Name('self', Load(), lineno=15, col_offset=15), 'format', Load(), lineno=15, col_offset=15), Mod(), Attribute(Name('self', Load(), lineno=15, col_offset=29), 'args', Load(), lineno=15, col_offset=29), lineno=15, col_offset=15), lineno=15, col_offset=8)], [], lineno=14, col_offset=4)], [], lineno=9, col_offset=0), Assign([Name('SHIFT', Store(), lineno=18, col_offset=0)], Attribute(Attribute(Name('sys', Load(), lineno=18, col_offset=8), 'long_info', Load(), lineno=18, col_offset=8), 'bits_per_digit', Load(), lineno=18, col_offset=8), lineno=18, col_offset=0), Assign([Name('BASE', Store(), lineno=19, col_offset=0)], BinOp(Num(2, lineno=19, col_offset=7), Pow(), Name('SHIFT', Load(), lineno=19, col_offset=12), lineno=19, col_offset=7), lineno=19, col_offset=0), Assign([Name('MASK', Store(), lineno=20, col_offset=0)], BinOp(Name('BASE', Load(), lineno=20, col_offset=7), Sub(), Num(1, lineno=20, col_offset=14), lineno=20, col_offset=7), lineno=20, col_offset=0), Assign([Name('KARATSUBA_CUTOFF', Store(), lineno=21, col_offset=0)], Num(70, lineno=21, col_offset=19), lineno=21, col_offset=0), Assign([Name('MAXDIGITS', Store(), lineno=25, col_offset=0)], Num(15, lineno=25, col_offset=12), lineno=25, col_offset=0), Assign([Name('special', Store(), lineno=28, col_offset=0)], Call(Name('map', Load(), lineno=28, col_offset=10), [Name('long', Load(), lineno=28, col_offset=14), List([Num(0, lineno=28, col_offset=21), Num(1, lineno=28, col_offset=24), Num(2, lineno=28, col_offset=27), Name('BASE', Load(), lineno=28, col_offset=30), BinOp(Name('BASE', Load(), lineno=28, col_offset=36), RShift(), Num(1, lineno=28, col_offset=44), lineno=28, col_offset=36)], Load(), lineno=28, col_offset=20)], [], None, None, lineno=28, col_offset=10), lineno=28, col_offset=0), Expr(Call(Attribute(Name('special', Load(), lineno=29, col_offset=0), 'append', Load(), lineno=29, col_offset=0), [Num(6148914691236517205L, lineno=29, col_offset=15)], [], None, None, lineno=29, col_offset=0), lineno=29, col_offset=0), Expr(Call(Attribute(Name('special', Load(), lineno=30, col_offset=0), 'append', Load(), lineno=30, col_offset=0), [Num(12297829382473034410L, lineno=30, col_offset=15)], [], None, None, lineno=30, col_offset=0), lineno=30, col_offset=0), Assign([Name('p2', Store(), lineno=32, col_offset=0)], Num(4L, lineno=32, col_offset=5), lineno=32, col_offset=0), For(Name('i', Store(), lineno=33, col_offset=4), Call(Name('range', Load(), lineno=33, col_offset=9), [BinOp(Num(2, lineno=33, col_offset=15), Mult(), Name('SHIFT', Load(), lineno=33, col_offset=17), lineno=33, col_offset=15)], [], None, None, lineno=33, col_offset=9), [Expr(Call(Attribute(Name('special', Load(), lineno=34, col_offset=4), 'append', Load(), lineno=34, col_offset=4), [BinOp(Name('p2', Load(), lineno=34, col_offset=19), Sub(), Num(1, lineno=34, col_offset=24), lineno=34, col_offset=19)], [], None, None, lineno=34, col_offset=4), lineno=34, col_offset=4), Assign([Name('p2', Store(), lineno=35, col_offset=4)], BinOp(Name('p2', Load(), lineno=35, col_offset=9), LShift(), Num(1, lineno=35, col_offset=15), lineno=35, col_offset=9), lineno=35, col_offset=4)], [], lineno=33, col_offset=0), Delete([Name('p2', Del(), lineno=36, col_offset=4)], lineno=36, col_offset=0), Assign([Name('special', Store(), lineno=38, col_offset=0)], BinOp(BinOp(Name('special', Load(), lineno=38, col_offset=10), Add(), Call(Name('map', Load(), lineno=38, col_offset=20), [Lambda(arguments([Name('x', Param(), lineno=38, col_offset=31)], None, None, []), UnaryOp(Invert(), Name('x', Load(), lineno=38, col_offset=35), lineno=38, col_offset=34), lineno=38, col_offset=24), Name('special', Load(), lineno=38, col_offset=38)], [], None, None, lineno=38, col_offset=20), lineno=38, col_offset=10), Add(), Call(Name('map', Load(), lineno=39, col_offset=20), [Lambda(arguments([Name('x', Param(), lineno=39, col_offset=31)], None, None, []), UnaryOp(USub(), Name('x', Load(), lineno=39, col_offset=35), lineno=39, col_offset=34), lineno=39, col_offset=24), Name('special', Load(), lineno=39, col_offset=38)], [], None, None, lineno=39, col_offset=20), lineno=38, col_offset=47), lineno=38, col_offset=0), Assign([Name('L', Store(), lineno=41, col_offset=0)], List([Tuple([Str('0', lineno=42, col_offset=9), Num(0, lineno=42, col_offset=14)], Load(), lineno=42, col_offset=9), Tuple([Str('1', lineno=43, col_offset=9), Num(1, lineno=43, col_offset=14)], Load(), lineno=43, col_offset=9), Tuple([Str('9', lineno=44, col_offset=9), Num(9, lineno=44, col_offset=14)], Load(), lineno=44, col_offset=9), Tuple([Str('10', lineno=45, col_offset=9), Num(10, lineno=45, col_offset=15)], Load(), lineno=45, col_offset=9), Tuple([Str('99', lineno=46, col_offset=9), Num(99, lineno=46, col_offset=15)], Load(), lineno=46, col_offset=9), Tuple([Str('100', lineno=47, col_offset=9), Num(100, lineno=47, col_offset=16)], Load(), lineno=47, col_offset=9), Tuple([Str('314', lineno=48, col_offset=9), Num(314, lineno=48, col_offset=16)], Load(), lineno=48, col_offset=9), Tuple([Str(' 314', lineno=49, col_offset=9), Num(314, lineno=49, col_offset=17)], Load(), lineno=49, col_offset=9), Tuple([Str('314 ', lineno=50, col_offset=9), Num(314, lineno=50, col_offset=17)], Load(), lineno=50, col_offset=9), Tuple([Str('  \t\t  314  \t\t  ', lineno=51, col_offset=9), Num(314, lineno=51, col_offset=32)], Load(), lineno=51, col_offset=9), Tuple([Call(Name('repr', Load(), lineno=52, col_offset=9), [Attribute(Name('sys', Load(), lineno=52, col_offset=14), 'maxint', Load(), lineno=52, col_offset=14)], [], None, None, lineno=52, col_offset=9), Attribute(Name('sys', Load(), lineno=52, col_offset=27), 'maxint', Load(), lineno=52, col_offset=27)], Load(), lineno=52, col_offset=9), Tuple([Str('  1x', lineno=53, col_offset=9), Name('ValueError', Load(), lineno=53, col_offset=17)], Load(), lineno=53, col_offset=9), Tuple([Str('  1  ', lineno=54, col_offset=9), Num(1, lineno=54, col_offset=18)], Load(), lineno=54, col_offset=9), Tuple([Str('  1\x02  ', lineno=55, col_offset=9), Name('ValueError', Load(), lineno=55, col_offset=21)], Load(), lineno=55, col_offset=9), Tuple([Str('', lineno=56, col_offset=9), Name('ValueError', Load(), lineno=56, col_offset=13)], Load(), lineno=56, col_offset=9), Tuple([Str(' ', lineno=57, col_offset=9), Name('ValueError', Load(), lineno=57, col_offset=14)], Load(), lineno=57, col_offset=9), Tuple([Str('  \t\t  ', lineno=58, col_offset=9), Name('ValueError', Load(), lineno=58, col_offset=21)], Load(), lineno=58, col_offset=9)], Load(), lineno=41, col_offset=4), lineno=41, col_offset=0), If(Attribute(Name('test_support', Load(), lineno=60, col_offset=3), 'have_unicode', Load(), lineno=60, col_offset=3), [AugAssign(Name('L', Store(), lineno=61, col_offset=4), Add(), List([Tuple([Call(Name('unicode', Load(), lineno=62, col_offset=9), [Str('0', lineno=62, col_offset=17)], [], None, None, lineno=62, col_offset=9), Num(0, lineno=62, col_offset=23)], Load(), lineno=62, col_offset=9), Tuple([Call(Name('unicode', Load(), lineno=63, col_offset=9), [Str('1', lineno=63, col_offset=17)], [], None, None, lineno=63, col_offset=9), Num(1, lineno=63, col_offset=23)], Load(), lineno=63, col_offset=9), Tuple([Call(Name('unicode', Load(), lineno=64, col_offset=9), [Str('9', lineno=64, col_offset=17)], [], None, None, lineno=64, col_offset=9), Num(9, lineno=64, col_offset=23)], Load(), lineno=64, col_offset=9), Tuple([Call(Name('unicode', Load(), lineno=65, col_offset=9), [Str('10', lineno=65, col_offset=17)], [], None, None, lineno=65, col_offset=9), Num(10, lineno=65, col_offset=24)], Load(), lineno=65, col_offset=9), Tuple([Call(Name('unicode', Load(), lineno=66, col_offset=9), [Str('99', lineno=66, col_offset=17)], [], None, None, lineno=66, col_offset=9), Num(99, lineno=66, col_offset=24)], Load(), lineno=66, col_offset=9), Tuple([Call(Name('unicode', Load(), lineno=67, col_offset=9), [Str('100', lineno=67, col_offset=17)], [], None, None, lineno=67, col_offset=9), Num(100, lineno=67, col_offset=25)], Load(), lineno=67, col_offset=9), Tuple([Call(Name('unicode', Load(), lineno=68, col_offset=9), [Str('314', lineno=68, col_offset=17)], [], None, None, lineno=68, col_offset=9), Num(314, lineno=68, col_offset=25)], Load(), lineno=68, col_offset=9), Tuple([Call(Name('unicode', Load(), lineno=69, col_offset=9), [Str(' 314', lineno=69, col_offset=17)], [], None, None, lineno=69, col_offset=9), Num(314, lineno=69, col_offset=26)], Load(), lineno=69, col_offset=9), Tuple([Call(Name('unicode', Load(), lineno=70, col_offset=9), [Str('\\u0663\\u0661\\u0664 ', lineno=70, col_offset=17), Str('raw-unicode-escape', lineno=70, col_offset=39)], [], None, None, lineno=70, col_offset=9), Num(314, lineno=70, col_offset=62)], Load(), lineno=70, col_offset=9), Tuple([Call(Name('unicode', Load(), lineno=71, col_offset=9), [Str('  \t\t  314  \t\t  ', lineno=71, col_offset=17)], [], None, None, lineno=71, col_offset=9), Num(314, lineno=71, col_offset=41)], Load(), lineno=71, col_offset=9), Tuple([Call(Name('unicode', Load(), lineno=72, col_offset=9), [Str('  1x', lineno=72, col_offset=17)], [], None, None, lineno=72, col_offset=9), Name('ValueError', Load(), lineno=72, col_offset=26)], Load(), lineno=72, col_offset=9), Tuple([Call(Name('unicode', Load(), lineno=73, col_offset=9), [Str('  1  ', lineno=73, col_offset=17)], [], None, None, lineno=73, col_offset=9), Num(1, lineno=73, col_offset=27)], Load(), lineno=73, col_offset=9), Tuple([Call(Name('unicode', Load(), lineno=74, col_offset=9), [Str('  1\x02  ', lineno=74, col_offset=17)], [], None, None, lineno=74, col_offset=9), Name('ValueError', Load(), lineno=74, col_offset=30)], Load(), lineno=74, col_offset=9), Tuple([Call(Name('unicode', Load(), lineno=75, col_offset=9), [Str('', lineno=75, col_offset=17)], [], None, None, lineno=75, col_offset=9), Name('ValueError', Load(), lineno=75, col_offset=22)], Load(), lineno=75, col_offset=9), Tuple([Call(Name('unicode', Load(), lineno=76, col_offset=9), [Str(' ', lineno=76, col_offset=17)], [], None, None, lineno=76, col_offset=9), Name('ValueError', Load(), lineno=76, col_offset=23)], Load(), lineno=76, col_offset=9), Tuple([Call(Name('unicode', Load(), lineno=77, col_offset=9), [Str('  \t\t  ', lineno=77, col_offset=17)], [], None, None, lineno=77, col_offset=9), Name('ValueError', Load(), lineno=77, col_offset=30)], Load(), lineno=77, col_offset=9), Tuple([Call(Name('unichr', Load(), lineno=78, col_offset=9), [Num(512, lineno=78, col_offset=16)], [], None, None, lineno=78, col_offset=9), Name('ValueError', Load(), lineno=78, col_offset=24)], Load(), lineno=78, col_offset=9)], Load(), lineno=61, col_offset=9), lineno=61, col_offset=4)], [], lineno=60, col_offset=0), ClassDef('LongTest', [Attribute(Name('unittest', Load(), lineno=82, col_offset=15), 'TestCase', Load(), lineno=82, col_offset=15)], [FunctionDef('getran', arguments([Name('self', Param(), lineno=90, col_offset=15), Name('ndigits', Param(), lineno=90, col_offset=21)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=91, col_offset=8), 'assertTrue', Load(), lineno=91, col_offset=8), [Compare(Name('ndigits', Load(), lineno=91, col_offset=24), [Gt()], [Num(0, lineno=91, col_offset=34)], lineno=91, col_offset=24)], [], None, None, lineno=91, col_offset=8), lineno=91, col_offset=8), Assign([Name('nbits_hi', Store(), lineno=92, col_offset=8)], BinOp(Name('ndigits', Load(), lineno=92, col_offset=19), Mult(), Name('SHIFT', Load(), lineno=92, col_offset=29), lineno=92, col_offset=19), lineno=92, col_offset=8), Assign([Name('nbits_lo', Store(), lineno=93, col_offset=8)], BinOp(BinOp(Name('nbits_hi', Load(), lineno=93, col_offset=19), Sub(), Name('SHIFT', Load(), lineno=93, col_offset=30), lineno=93, col_offset=19), Add(), Num(1, lineno=93, col_offset=38), lineno=93, col_offset=36), lineno=93, col_offset=8), Assign([Name('answer', Store(), lineno=94, col_offset=8)], Num(0L, lineno=94, col_offset=17), lineno=94, col_offset=8), Assign([Name('nbits', Store(), lineno=95, col_offset=8)], Num(0, lineno=95, col_offset=16), lineno=95, col_offset=8), Assign([Name('r', Store(), lineno=96, col_offset=8)], BinOp(Call(Name('int', Load(), lineno=96, col_offset=12), [BinOp(Call(Attribute(Name('random', Load(), lineno=96, col_offset=16), 'random', Load(), lineno=96, col_offset=16), [], [], None, None, lineno=96, col_offset=16), Mult(), BinOp(Name('SHIFT', Load(), lineno=96, col_offset=35), Mult(), Num(2, lineno=96, col_offset=43), lineno=96, col_offset=35), lineno=96, col_offset=16)], [], None, None, lineno=96, col_offset=12), BitOr(), Num(1, lineno=96, col_offset=49), lineno=96, col_offset=12), lineno=96, col_offset=8), While(Compare(Name('nbits', Load(), lineno=97, col_offset=14), [Lt()], [Name('nbits_lo', Load(), lineno=97, col_offset=22)], lineno=97, col_offset=14), [Assign([Name('bits', Store(), lineno=98, col_offset=12)], BinOp(BinOp(Name('r', Load(), lineno=98, col_offset=20), RShift(), Num(1, lineno=98, col_offset=25), lineno=98, col_offset=20), Add(), Num(1, lineno=98, col_offset=30), lineno=98, col_offset=19), lineno=98, col_offset=12), Assign([Name('bits', Store(), lineno=99, col_offset=12)], Call(Name('min', Load(), lineno=99, col_offset=19), [Name('bits', Load(), lineno=99, col_offset=23), BinOp(Name('nbits_hi', Load(), lineno=99, col_offset=29), Sub(), Name('nbits', Load(), lineno=99, col_offset=40), lineno=99, col_offset=29)], [], None, None, lineno=99, col_offset=19), lineno=99, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=100, col_offset=12), 'assertTrue', Load(), lineno=100, col_offset=12), [Compare(Num(1, lineno=100, col_offset=28), [LtE(), LtE()], [Name('bits', Load(), lineno=100, col_offset=33), Name('SHIFT', Load(), lineno=100, col_offset=41)], lineno=100, col_offset=28)], [], None, None, lineno=100, col_offset=12), lineno=100, col_offset=12), Assign([Name('nbits', Store(), lineno=101, col_offset=12)], BinOp(Name('nbits', Load(), lineno=101, col_offset=20), Add(), Name('bits', Load(), lineno=101, col_offset=28), lineno=101, col_offset=20), lineno=101, col_offset=12), Assign([Name('answer', Store(), lineno=102, col_offset=12)], BinOp(Name('answer', Load(), lineno=102, col_offset=21), LShift(), Name('bits', Load(), lineno=102, col_offset=31), lineno=102, col_offset=21), lineno=102, col_offset=12), If(BinOp(Name('r', Load(), lineno=103, col_offset=15), BitAnd(), Num(1, lineno=103, col_offset=19), lineno=103, col_offset=15), [Assign([Name('answer', Store(), lineno=104, col_offset=16)], BinOp(Name('answer', Load(), lineno=104, col_offset=25), BitOr(), BinOp(BinOp(Num(1, lineno=104, col_offset=36), LShift(), Name('bits', Load(), lineno=104, col_offset=41), lineno=104, col_offset=36), Sub(), Num(1, lineno=104, col_offset=49), lineno=104, col_offset=35), lineno=104, col_offset=25), lineno=104, col_offset=16)], [], lineno=103, col_offset=12), Assign([Name('r', Store(), lineno=105, col_offset=12)], Call(Name('int', Load(), lineno=105, col_offset=16), [BinOp(Call(Attribute(Name('random', Load(), lineno=105, col_offset=20), 'random', Load(), lineno=105, col_offset=20), [], [], None, None, lineno=105, col_offset=20), Mult(), BinOp(Name('SHIFT', Load(), lineno=105, col_offset=39), Mult(), Num(2, lineno=105, col_offset=47), lineno=105, col_offset=39), lineno=105, col_offset=20)], [], None, None, lineno=105, col_offset=16), lineno=105, col_offset=12)], [], lineno=97, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=106, col_offset=8), 'assertTrue', Load(), lineno=106, col_offset=8), [Compare(Name('nbits_lo', Load(), lineno=106, col_offset=24), [LtE(), LtE()], [Name('nbits', Load(), lineno=106, col_offset=36), Name('nbits_hi', Load(), lineno=106, col_offset=45)], lineno=106, col_offset=24)], [], None, None, lineno=106, col_offset=8), lineno=106, col_offset=8), If(Compare(Call(Attribute(Name('random', Load(), lineno=107, col_offset=11), 'random', Load(), lineno=107, col_offset=11), [], [], None, None, lineno=107, col_offset=11), [Lt()], [Num(0.5, lineno=107, col_offset=29)], lineno=107, col_offset=11), [Assign([Name('answer', Store(), lineno=108, col_offset=12)], UnaryOp(USub(), Name('answer', Load(), lineno=108, col_offset=22), lineno=108, col_offset=21), lineno=108, col_offset=12)], [], lineno=107, col_offset=8), Return(Name('answer', Load(), lineno=109, col_offset=15), lineno=109, col_offset=8)], [], lineno=90, col_offset=4), FunctionDef('getran2', arguments([Name('ndigits', Param(), lineno=114, col_offset=16)], None, None, []), [Assign([Name('answer', Store(), lineno=115, col_offset=8)], Num(0L, lineno=115, col_offset=17), lineno=115, col_offset=8), For(Name('i', Store(), lineno=116, col_offset=12), Call(Name('xrange', Load(), lineno=116, col_offset=17), [Name('ndigits', Load(), lineno=116, col_offset=24)], [], None, None, lineno=116, col_offset=17), [Assign([Name('answer', Store(), lineno=117, col_offset=12)], BinOp(BinOp(Name('answer', Load(), lineno=117, col_offset=22), LShift(), Name('SHIFT', Load(), lineno=117, col_offset=32), lineno=117, col_offset=22), BitOr(), Call(Attribute(Name('random', Load(), lineno=117, col_offset=41), 'randint', Load(), lineno=117, col_offset=41), [Num(0, lineno=117, col_offset=56), Name('MASK', Load(), lineno=117, col_offset=59)], [], None, None, lineno=117, col_offset=41), lineno=117, col_offset=21), lineno=117, col_offset=12)], [], lineno=116, col_offset=8), If(Compare(Call(Attribute(Name('random', Load(), lineno=118, col_offset=11), 'random', Load(), lineno=118, col_offset=11), [], [], None, None, lineno=118, col_offset=11), [Lt()], [Num(0.5, lineno=118, col_offset=29)], lineno=118, col_offset=11), [Assign([Name('answer', Store(), lineno=119, col_offset=12)], UnaryOp(USub(), Name('answer', Load(), lineno=119, col_offset=22), lineno=119, col_offset=21), lineno=119, col_offset=12)], [], lineno=118, col_offset=8), Return(Name('answer', Load(), lineno=120, col_offset=15), lineno=120, col_offset=8)], [], lineno=114, col_offset=4), FunctionDef('check_division', arguments([Name('self', Param(), lineno=122, col_offset=23), Name('x', Param(), lineno=122, col_offset=29), Name('y', Param(), lineno=122, col_offset=32)], None, None, []), [Assign([Name('eq', Store(), lineno=123, col_offset=8)], Attribute(Name('self', Load(), lineno=123, col_offset=13), 'assertEqual', Load(), lineno=123, col_offset=13), lineno=123, col_offset=8), Assign([Tuple([Name('q', Store(), lineno=124, col_offset=8), Name('r', Store(), lineno=124, col_offset=11)], Store(), lineno=124, col_offset=8)], Call(Name('divmod', Load(), lineno=124, col_offset=15), [Name('x', Load(), lineno=124, col_offset=22), Name('y', Load(), lineno=124, col_offset=25)], [], None, None, lineno=124, col_offset=15), lineno=124, col_offset=8), Assign([Tuple([Name('q2', Store(), lineno=125, col_offset=8), Name('r2', Store(), lineno=125, col_offset=12)], Store(), lineno=125, col_offset=8)], Tuple([BinOp(Name('x', Load(), lineno=125, col_offset=17), FloorDiv(), Name('y', Load(), lineno=125, col_offset=20), lineno=125, col_offset=17), BinOp(Name('x', Load(), lineno=125, col_offset=23), Mod(), Name('y', Load(), lineno=125, col_offset=25), lineno=125, col_offset=23)], Load(), lineno=125, col_offset=17), lineno=125, col_offset=8), Assign([Tuple([Name('pab', Store(), lineno=126, col_offset=8), Name('pba', Store(), lineno=126, col_offset=13)], Store(), lineno=126, col_offset=8)], Tuple([BinOp(Name('x', Load(), lineno=126, col_offset=19), Mult(), Name('y', Load(), lineno=126, col_offset=21), lineno=126, col_offset=19), BinOp(Name('y', Load(), lineno=126, col_offset=24), Mult(), Name('x', Load(), lineno=126, col_offset=26), lineno=126, col_offset=24)], Load(), lineno=126, col_offset=19), lineno=126, col_offset=8), Expr(Call(Name('eq', Load(), lineno=127, col_offset=8), [Name('pab', Load(), lineno=127, col_offset=11), Name('pba', Load(), lineno=127, col_offset=16), Call(Name('Frm', Load(), lineno=127, col_offset=21), [Str('multiplication does not commute for %r and %r', lineno=127, col_offset=25), Name('x', Load(), lineno=127, col_offset=74), Name('y', Load(), lineno=127, col_offset=77)], [], None, None, lineno=127, col_offset=21)], [], None, None, lineno=127, col_offset=8), lineno=127, col_offset=8), Expr(Call(Name('eq', Load(), lineno=128, col_offset=8), [Name('q', Load(), lineno=128, col_offset=11), Name('q2', Load(), lineno=128, col_offset=14), Call(Name('Frm', Load(), lineno=128, col_offset=18), [Str('divmod returns different quotient than / for %r and %r', lineno=128, col_offset=22), Name('x', Load(), lineno=128, col_offset=80), Name('y', Load(), lineno=128, col_offset=83)], [], None, None, lineno=128, col_offset=18)], [], None, None, lineno=128, col_offset=8), lineno=128, col_offset=8), Expr(Call(Name('eq', Load(), lineno=129, col_offset=8), [Name('r', Load(), lineno=129, col_offset=11), Name('r2', Load(), lineno=129, col_offset=14), Call(Name('Frm', Load(), lineno=129, col_offset=18), [Str('divmod returns different mod than %% for %r and %r', lineno=129, col_offset=22), Name('x', Load(), lineno=129, col_offset=76), Name('y', Load(), lineno=129, col_offset=79)], [], None, None, lineno=129, col_offset=18)], [], None, None, lineno=129, col_offset=8), lineno=129, col_offset=8), Expr(Call(Name('eq', Load(), lineno=130, col_offset=8), [Name('x', Load(), lineno=130, col_offset=11), BinOp(BinOp(Name('q', Load(), lineno=130, col_offset=14), Mult(), Name('y', Load(), lineno=130, col_offset=16), lineno=130, col_offset=14), Add(), Name('r', Load(), lineno=130, col_offset=20), lineno=130, col_offset=14), Call(Name('Frm', Load(), lineno=130, col_offset=23), [Str('x != q*y + r after divmod on x=%r, y=%r', lineno=130, col_offset=27), Name('x', Load(), lineno=130, col_offset=70), Name('y', Load(), lineno=130, col_offset=73)], [], None, None, lineno=130, col_offset=23)], [], None, None, lineno=130, col_offset=8), lineno=130, col_offset=8), If(Compare(Name('y', Load(), lineno=131, col_offset=11), [Gt()], [Num(0, lineno=131, col_offset=15)], lineno=131, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=132, col_offset=12), 'assertTrue', Load(), lineno=132, col_offset=12), [Compare(Num(0, lineno=132, col_offset=28), [LtE(), Lt()], [Name('r', Load(), lineno=132, col_offset=33), Name('y', Load(), lineno=132, col_offset=37)], lineno=132, col_offset=28), Call(Name('Frm', Load(), lineno=132, col_offset=40), [Str('bad mod from divmod on %r and %r', lineno=132, col_offset=44), Name('x', Load(), lineno=132, col_offset=80), Name('y', Load(), lineno=132, col_offset=83)], [], None, None, lineno=132, col_offset=40)], [], None, None, lineno=132, col_offset=12), lineno=132, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=134, col_offset=12), 'assertTrue', Load(), lineno=134, col_offset=12), [Compare(Name('y', Load(), lineno=134, col_offset=28), [Lt(), LtE()], [Name('r', Load(), lineno=134, col_offset=32), Num(0, lineno=134, col_offset=37)], lineno=134, col_offset=28), Call(Name('Frm', Load(), lineno=134, col_offset=40), [Str('bad mod from divmod on %r and %r', lineno=134, col_offset=44), Name('x', Load(), lineno=134, col_offset=80), Name('y', Load(), lineno=134, col_offset=83)], [], None, None, lineno=134, col_offset=40)], [], None, None, lineno=134, col_offset=12), lineno=134, col_offset=12)], lineno=131, col_offset=8)], [], lineno=122, col_offset=4), FunctionDef('test_division', arguments([Name('self', Param(), lineno=136, col_offset=22)], None, None, []), [Assign([Name('digits', Store(), lineno=137, col_offset=8)], BinOp(Call(Name('range', Load(), lineno=137, col_offset=17), [Num(1, lineno=137, col_offset=23), BinOp(Name('MAXDIGITS', Load(), lineno=137, col_offset=26), Add(), Num(1, lineno=137, col_offset=36), lineno=137, col_offset=26)], [], None, None, lineno=137, col_offset=17), Add(), Call(Name('range', Load(), lineno=137, col_offset=41), [Name('KARATSUBA_CUTOFF', Load(), lineno=137, col_offset=47), BinOp(Name('KARATSUBA_CUTOFF', Load(), lineno=138, col_offset=47), Add(), Num(14, lineno=138, col_offset=66), lineno=138, col_offset=47)], [], None, None, lineno=137, col_offset=41), lineno=137, col_offset=17), lineno=137, col_offset=8), Expr(Call(Attribute(Name('digits', Load(), lineno=139, col_offset=8), 'append', Load(), lineno=139, col_offset=8), [BinOp(Name('KARATSUBA_CUTOFF', Load(), lineno=139, col_offset=22), Mult(), Num(3, lineno=139, col_offset=41), lineno=139, col_offset=22)], [], None, None, lineno=139, col_offset=8), lineno=139, col_offset=8), For(Name('lenx', Store(), lineno=140, col_offset=12), Name('digits', Load(), lineno=140, col_offset=20), [Assign([Name('x', Store(), lineno=141, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=141, col_offset=16), 'getran', Load(), lineno=141, col_offset=16), [Name('lenx', Load(), lineno=141, col_offset=28)], [], None, None, lineno=141, col_offset=16), lineno=141, col_offset=12), For(Name('leny', Store(), lineno=142, col_offset=16), Name('digits', Load(), lineno=142, col_offset=24), [Assign([Name('y', Store(), lineno=143, col_offset=16)], BoolOp(Or(), [Call(Attribute(Name('self', Load(), lineno=143, col_offset=20), 'getran', Load(), lineno=143, col_offset=20), [Name('leny', Load(), lineno=143, col_offset=32)], [], None, None, lineno=143, col_offset=20), Num(1L, lineno=143, col_offset=41)], lineno=143, col_offset=20), lineno=143, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=144, col_offset=16), 'check_division', Load(), lineno=144, col_offset=16), [Name('x', Load(), lineno=144, col_offset=36), Name('y', Load(), lineno=144, col_offset=39)], [], None, None, lineno=144, col_offset=16), lineno=144, col_offset=16)], [], lineno=142, col_offset=12)], [], lineno=140, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=150, col_offset=8), 'check_division', Load(), lineno=150, col_offset=8), [Num(1231948412290879395966702881L, lineno=150, col_offset=28), Num(1147341367131428698L, lineno=151, col_offset=28)], [], None, None, lineno=150, col_offset=8), lineno=150, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=152, col_offset=8), 'check_division', Load(), lineno=152, col_offset=8), [Num(815427756481275430342312021515587883L, lineno=152, col_offset=28), Num(707270836069027745L, lineno=153, col_offset=23)], [], None, None, lineno=152, col_offset=8), lineno=152, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=154, col_offset=8), 'check_division', Load(), lineno=154, col_offset=8), [Num(627976073697012820849443363563599041L, lineno=154, col_offset=28), Num(643588798496057020L, lineno=155, col_offset=23)], [], None, None, lineno=154, col_offset=8), lineno=154, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=156, col_offset=8), 'check_division', Load(), lineno=156, col_offset=8), [Num(1115141373653752303710932756325578065L, lineno=156, col_offset=28), Num(1038556335171453937726882627L, lineno=157, col_offset=23)], [], None, None, lineno=156, col_offset=8), lineno=156, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=159, col_offset=8), 'check_division', Load(), lineno=159, col_offset=8), [Num(922498905405436751940989320930368494L, lineno=159, col_offset=28), Num(949985870686786135626943396L, lineno=160, col_offset=23)], [], None, None, lineno=159, col_offset=8), lineno=159, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=161, col_offset=8), 'check_division', Load(), lineno=161, col_offset=8), [Num(768235853328091167204009652174031844L, lineno=161, col_offset=28), Num(1091555541180371554426545266L, lineno=162, col_offset=23)], [], None, None, lineno=161, col_offset=8), lineno=161, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=165, col_offset=8), 'check_division', Load(), lineno=165, col_offset=8), [Num(20172188947443L, lineno=165, col_offset=28), Num(615611397L, lineno=165, col_offset=45)], [], None, None, lineno=165, col_offset=8), lineno=165, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=166, col_offset=8), 'check_division', Load(), lineno=166, col_offset=8), [Num(1020908530270155025L, lineno=166, col_offset=28), Num(950795710L, lineno=166, col_offset=50)], [], None, None, lineno=166, col_offset=8), lineno=166, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=167, col_offset=8), 'check_division', Load(), lineno=167, col_offset=8), [Num(128589565723112408L, lineno=167, col_offset=28), Num(736393718L, lineno=167, col_offset=49)], [], None, None, lineno=167, col_offset=8), lineno=167, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=168, col_offset=8), 'check_division', Load(), lineno=168, col_offset=8), [Num(609919780285761575L, lineno=168, col_offset=28), Num(18613274546784L, lineno=168, col_offset=49)], [], None, None, lineno=168, col_offset=8), lineno=168, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=170, col_offset=8), 'check_division', Load(), lineno=170, col_offset=8), [Num(710031681576388032L, lineno=170, col_offset=28), Num(26769404391308L, lineno=170, col_offset=49)], [], None, None, lineno=170, col_offset=8), lineno=170, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=171, col_offset=8), 'check_division', Load(), lineno=171, col_offset=8), [Num(1933622614268221L, lineno=171, col_offset=28), Num(30212853348836L, lineno=171, col_offset=47)], [], None, None, lineno=171, col_offset=8), lineno=171, col_offset=8)], [], lineno=136, col_offset=4), FunctionDef('test_karatsuba', arguments([Name('self', Param(), lineno=175, col_offset=23)], None, None, []), [Assign([Name('digits', Store(), lineno=176, col_offset=8)], BinOp(Call(Name('range', Load(), lineno=176, col_offset=17), [Num(1, lineno=176, col_offset=23), Num(5, lineno=176, col_offset=26)], [], None, None, lineno=176, col_offset=17), Add(), Call(Name('range', Load(), lineno=176, col_offset=31), [Name('KARATSUBA_CUTOFF', Load(), lineno=176, col_offset=37), BinOp(Name('KARATSUBA_CUTOFF', Load(), lineno=176, col_offset=55), Add(), Num(10, lineno=176, col_offset=74), lineno=176, col_offset=55)], [], None, None, lineno=176, col_offset=31), lineno=176, col_offset=17), lineno=176, col_offset=8), Expr(Call(Attribute(Name('digits', Load(), lineno=177, col_offset=8), 'extend', Load(), lineno=177, col_offset=8), [List([BinOp(Name('KARATSUBA_CUTOFF', Load(), lineno=177, col_offset=23), Mult(), Num(10, lineno=177, col_offset=42), lineno=177, col_offset=23), BinOp(Name('KARATSUBA_CUTOFF', Load(), lineno=177, col_offset=46), Mult(), Num(100, lineno=177, col_offset=65), lineno=177, col_offset=46)], Load(), lineno=177, col_offset=22)], [], None, None, lineno=177, col_offset=8), lineno=177, col_offset=8), Assign([Name('bits', Store(), lineno=179, col_offset=8)], ListComp(BinOp(Name('digit', Load(), lineno=179, col_offset=16), Mult(), Name('SHIFT', Load(), lineno=179, col_offset=24), lineno=179, col_offset=16), [comprehension(Name('digit', Store(), lineno=179, col_offset=34), Name('digits', Load(), lineno=179, col_offset=43), [])], lineno=179, col_offset=16), lineno=179, col_offset=8), For(Name('abits', Store(), lineno=183, col_offset=12), Name('bits', Load(), lineno=183, col_offset=21), [Assign([Name('a', Store(), lineno=184, col_offset=12)], BinOp(BinOp(Num(1L, lineno=184, col_offset=17), LShift(), Name('abits', Load(), lineno=184, col_offset=23), lineno=184, col_offset=17), Sub(), Num(1, lineno=184, col_offset=32), lineno=184, col_offset=16), lineno=184, col_offset=12), For(Name('bbits', Store(), lineno=185, col_offset=16), Name('bits', Load(), lineno=185, col_offset=25), [If(Compare(Name('bbits', Load(), lineno=186, col_offset=19), [Lt()], [Name('abits', Load(), lineno=186, col_offset=27)], lineno=186, col_offset=19), [Continue( lineno=187, col_offset=20)], [], lineno=186, col_offset=16), Assign([Name('b', Store(), lineno=188, col_offset=16)], BinOp(BinOp(Num(1L, lineno=188, col_offset=21), LShift(), Name('bbits', Load(), lineno=188, col_offset=27), lineno=188, col_offset=21), Sub(), Num(1, lineno=188, col_offset=36), lineno=188, col_offset=20), lineno=188, col_offset=16), Assign([Name('x', Store(), lineno=189, col_offset=16)], BinOp(Name('a', Load(), lineno=189, col_offset=20), Mult(), Name('b', Load(), lineno=189, col_offset=24), lineno=189, col_offset=20), lineno=189, col_offset=16), Assign([Name('y', Store(), lineno=190, col_offset=16)], BinOp(BinOp(BinOp(BinOp(Num(1L, lineno=190, col_offset=22), LShift(), BinOp(Name('abits', Load(), lineno=190, col_offset=29), Add(), Name('bbits', Load(), lineno=190, col_offset=37), lineno=190, col_offset=29), lineno=190, col_offset=22), Sub(), BinOp(Num(1L, lineno=191, col_offset=22), LShift(), Name('abits', Load(), lineno=191, col_offset=28), lineno=191, col_offset=22), lineno=190, col_offset=21), Sub(), BinOp(Num(1L, lineno=192, col_offset=22), LShift(), Name('bbits', Load(), lineno=192, col_offset=28), lineno=192, col_offset=22), lineno=191, col_offset=35), Add(), Num(1, lineno=193, col_offset=21), lineno=192, col_offset=35), lineno=190, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=194, col_offset=16), 'assertEqual', Load(), lineno=194, col_offset=16), [Name('x', Load(), lineno=194, col_offset=33), Name('y', Load(), lineno=194, col_offset=36), Call(Name('Frm', Load(), lineno=195, col_offset=20), [Str('bad result for a*b: a=%r, b=%r, x=%r, y=%r', lineno=195, col_offset=24), Name('a', Load(), lineno=195, col_offset=70), Name('b', Load(), lineno=195, col_offset=73), Name('x', Load(), lineno=195, col_offset=76), Name('y', Load(), lineno=195, col_offset=79)], [], None, None, lineno=195, col_offset=20)], [], None, None, lineno=194, col_offset=16), lineno=194, col_offset=16)], [], lineno=185, col_offset=12)], [], lineno=183, col_offset=8)], [], lineno=175, col_offset=4), FunctionDef('check_bitop_identities_1', arguments([Name('self', Param(), lineno=197, col_offset=33), Name('x', Param(), lineno=197, col_offset=39)], None, None, []), [Assign([Name('eq', Store(), lineno=198, col_offset=8)], Attribute(Name('self', Load(), lineno=198, col_offset=13), 'assertEqual', Load(), lineno=198, col_offset=13), lineno=198, col_offset=8), Expr(Call(Name('eq', Load(), lineno=199, col_offset=8), [BinOp(Name('x', Load(), lineno=199, col_offset=11), BitAnd(), Num(0, lineno=199, col_offset=15), lineno=199, col_offset=11), Num(0, lineno=199, col_offset=18), Call(Name('Frm', Load(), lineno=199, col_offset=21), [Str('x & 0 != 0 for x=%r', lineno=199, col_offset=25), Name('x', Load(), lineno=199, col_offset=48)], [], None, None, lineno=199, col_offset=21)], [], None, None, lineno=199, col_offset=8), lineno=199, col_offset=8), Expr(Call(Name('eq', Load(), lineno=200, col_offset=8), [BinOp(Name('x', Load(), lineno=200, col_offset=11), BitOr(), Num(0, lineno=200, col_offset=15), lineno=200, col_offset=11), Name('x', Load(), lineno=200, col_offset=18), Call(Name('Frm', Load(), lineno=200, col_offset=21), [Str('x | 0 != x for x=%r', lineno=200, col_offset=25), Name('x', Load(), lineno=200, col_offset=48)], [], None, None, lineno=200, col_offset=21)], [], None, None, lineno=200, col_offset=8), lineno=200, col_offset=8), Expr(Call(Name('eq', Load(), lineno=201, col_offset=8), [BinOp(Name('x', Load(), lineno=201, col_offset=11), BitXor(), Num(0, lineno=201, col_offset=15), lineno=201, col_offset=11), Name('x', Load(), lineno=201, col_offset=18), Call(Name('Frm', Load(), lineno=201, col_offset=21), [Str('x ^ 0 != x for x=%r', lineno=201, col_offset=25), Name('x', Load(), lineno=201, col_offset=48)], [], None, None, lineno=201, col_offset=21)], [], None, None, lineno=201, col_offset=8), lineno=201, col_offset=8), Expr(Call(Name('eq', Load(), lineno=202, col_offset=8), [BinOp(Name('x', Load(), lineno=202, col_offset=11), BitAnd(), Num(-1, lineno=202, col_offset=16), lineno=202, col_offset=11), Name('x', Load(), lineno=202, col_offset=19), Call(Name('Frm', Load(), lineno=202, col_offset=22), [Str('x & -1 != x for x=%r', lineno=202, col_offset=26), Name('x', Load(), lineno=202, col_offset=50)], [], None, None, lineno=202, col_offset=22)], [], None, None, lineno=202, col_offset=8), lineno=202, col_offset=8), Expr(Call(Name('eq', Load(), lineno=203, col_offset=8), [BinOp(Name('x', Load(), lineno=203, col_offset=11), BitOr(), Num(-1, lineno=203, col_offset=16), lineno=203, col_offset=11), Num(-1, lineno=203, col_offset=20), Call(Name('Frm', Load(), lineno=203, col_offset=23), [Str('x | -1 != -1 for x=%r', lineno=203, col_offset=27), Name('x', Load(), lineno=203, col_offset=52)], [], None, None, lineno=203, col_offset=23)], [], None, None, lineno=203, col_offset=8), lineno=203, col_offset=8), Expr(Call(Name('eq', Load(), lineno=204, col_offset=8), [BinOp(Name('x', Load(), lineno=204, col_offset=11), BitXor(), Num(-1, lineno=204, col_offset=16), lineno=204, col_offset=11), UnaryOp(Invert(), Name('x', Load(), lineno=204, col_offset=20), lineno=204, col_offset=19), Call(Name('Frm', Load(), lineno=204, col_offset=23), [Str('x ^ -1 != ~x for x=%r', lineno=204, col_offset=27), Name('x', Load(), lineno=204, col_offset=52)], [], None, None, lineno=204, col_offset=23)], [], None, None, lineno=204, col_offset=8), lineno=204, col_offset=8), Expr(Call(Name('eq', Load(), lineno=205, col_offset=8), [Name('x', Load(), lineno=205, col_offset=11), UnaryOp(Invert(), UnaryOp(Invert(), Name('x', Load(), lineno=205, col_offset=16), lineno=205, col_offset=15), lineno=205, col_offset=14), Call(Name('Frm', Load(), lineno=205, col_offset=19), [Str('x != ~~x for x=%r', lineno=205, col_offset=23), Name('x', Load(), lineno=205, col_offset=44)], [], None, None, lineno=205, col_offset=19)], [], None, None, lineno=205, col_offset=8), lineno=205, col_offset=8), Expr(Call(Name('eq', Load(), lineno=206, col_offset=8), [BinOp(Name('x', Load(), lineno=206, col_offset=11), BitAnd(), Name('x', Load(), lineno=206, col_offset=15), lineno=206, col_offset=11), Name('x', Load(), lineno=206, col_offset=18), Call(Name('Frm', Load(), lineno=206, col_offset=21), [Str('x & x != x for x=%r', lineno=206, col_offset=25), Name('x', Load(), lineno=206, col_offset=48)], [], None, None, lineno=206, col_offset=21)], [], None, None, lineno=206, col_offset=8), lineno=206, col_offset=8), Expr(Call(Name('eq', Load(), lineno=207, col_offset=8), [BinOp(Name('x', Load(), lineno=207, col_offset=11), BitOr(), Name('x', Load(), lineno=207, col_offset=15), lineno=207, col_offset=11), Name('x', Load(), lineno=207, col_offset=18), Call(Name('Frm', Load(), lineno=207, col_offset=21), [Str('x | x != x for x=%r', lineno=207, col_offset=25), Name('x', Load(), lineno=207, col_offset=48)], [], None, None, lineno=207, col_offset=21)], [], None, None, lineno=207, col_offset=8), lineno=207, col_offset=8), Expr(Call(Name('eq', Load(), lineno=208, col_offset=8), [BinOp(Name('x', Load(), lineno=208, col_offset=11), BitXor(), Name('x', Load(), lineno=208, col_offset=15), lineno=208, col_offset=11), Num(0, lineno=208, col_offset=18), Call(Name('Frm', Load(), lineno=208, col_offset=21), [Str('x ^ x != 0 for x=%r', lineno=208, col_offset=25), Name('x', Load(), lineno=208, col_offset=48)], [], None, None, lineno=208, col_offset=21)], [], None, None, lineno=208, col_offset=8), lineno=208, col_offset=8), Expr(Call(Name('eq', Load(), lineno=209, col_offset=8), [BinOp(Name('x', Load(), lineno=209, col_offset=11), BitAnd(), UnaryOp(Invert(), Name('x', Load(), lineno=209, col_offset=16), lineno=209, col_offset=15), lineno=209, col_offset=11), Num(0, lineno=209, col_offset=19), Call(Name('Frm', Load(), lineno=209, col_offset=22), [Str('x & ~x != 0 for x=%r', lineno=209, col_offset=26), Name('x', Load(), lineno=209, col_offset=50)], [], None, None, lineno=209, col_offset=22)], [], None, None, lineno=209, col_offset=8), lineno=209, col_offset=8), Expr(Call(Name('eq', Load(), lineno=210, col_offset=8), [BinOp(Name('x', Load(), lineno=210, col_offset=11), BitOr(), UnaryOp(Invert(), Name('x', Load(), lineno=210, col_offset=16), lineno=210, col_offset=15), lineno=210, col_offset=11), Num(-1, lineno=210, col_offset=20), Call(Name('Frm', Load(), lineno=210, col_offset=23), [Str('x | ~x != -1 for x=%r', lineno=210, col_offset=27), Name('x', Load(), lineno=210, col_offset=52)], [], None, None, lineno=210, col_offset=23)], [], None, None, lineno=210, col_offset=8), lineno=210, col_offset=8), Expr(Call(Name('eq', Load(), lineno=211, col_offset=8), [BinOp(Name('x', Load(), lineno=211, col_offset=11), BitXor(), UnaryOp(Invert(), Name('x', Load(), lineno=211, col_offset=16), lineno=211, col_offset=15), lineno=211, col_offset=11), Num(-1, lineno=211, col_offset=20), Call(Name('Frm', Load(), lineno=211, col_offset=23), [Str('x ^ ~x != -1 for x=%r', lineno=211, col_offset=27), Name('x', Load(), lineno=211, col_offset=52)], [], None, None, lineno=211, col_offset=23)], [], None, None, lineno=211, col_offset=8), lineno=211, col_offset=8), Expr(Call(Name('eq', Load(), lineno=212, col_offset=8), [UnaryOp(USub(), Name('x', Load(), lineno=212, col_offset=12), lineno=212, col_offset=11), BinOp(Num(1, lineno=212, col_offset=15), Add(), UnaryOp(Invert(), Name('x', Load(), lineno=212, col_offset=20), lineno=212, col_offset=19), lineno=212, col_offset=15), Call(Name('Frm', Load(), lineno=212, col_offset=23), [Str('not -x == 1 + ~x for x=%r', lineno=212, col_offset=27), Name('x', Load(), lineno=212, col_offset=56)], [], None, None, lineno=212, col_offset=23)], [], None, None, lineno=212, col_offset=8), lineno=212, col_offset=8), Expr(Call(Name('eq', Load(), lineno=213, col_offset=8), [UnaryOp(USub(), Name('x', Load(), lineno=213, col_offset=12), lineno=213, col_offset=11), UnaryOp(Invert(), BinOp(Name('x', Load(), lineno=213, col_offset=17), Sub(), Num(1, lineno=213, col_offset=19), lineno=213, col_offset=17), lineno=213, col_offset=15), Call(Name('Frm', Load(), lineno=213, col_offset=23), [Str('not -x == ~(x-1) forx =%r', lineno=213, col_offset=27), Name('x', Load(), lineno=213, col_offset=56)], [], None, None, lineno=213, col_offset=23)], [], None, None, lineno=213, col_offset=8), lineno=213, col_offset=8), For(Name('n', Store(), lineno=214, col_offset=12), Call(Name('xrange', Load(), lineno=214, col_offset=17), [BinOp(Num(2, lineno=214, col_offset=24), Mult(), Name('SHIFT', Load(), lineno=214, col_offset=26), lineno=214, col_offset=24)], [], None, None, lineno=214, col_offset=17), [Assign([Name('p2', Store(), lineno=215, col_offset=12)], BinOp(Num(2L, lineno=215, col_offset=17), Pow(), Name('n', Load(), lineno=215, col_offset=23), lineno=215, col_offset=17), lineno=215, col_offset=12), Expr(Call(Name('eq', Load(), lineno=216, col_offset=12), [BinOp(BinOp(Name('x', Load(), lineno=216, col_offset=15), LShift(), Name('n', Load(), lineno=216, col_offset=20), lineno=216, col_offset=15), RShift(), Name('n', Load(), lineno=216, col_offset=25), lineno=216, col_offset=22), Name('x', Load(), lineno=216, col_offset=28), Call(Name('Frm', Load(), lineno=217, col_offset=16), [Str('x << n >> n != x for x=%r, n=%r', lineno=217, col_offset=20), Tuple([Name('x', Load(), lineno=217, col_offset=56), Name('n', Load(), lineno=217, col_offset=59)], Load(), lineno=217, col_offset=56)], [], None, None, lineno=217, col_offset=16)], [], None, None, lineno=216, col_offset=12), lineno=216, col_offset=12), Expr(Call(Name('eq', Load(), lineno=218, col_offset=12), [BinOp(Name('x', Load(), lineno=218, col_offset=15), FloorDiv(), Name('p2', Load(), lineno=218, col_offset=20), lineno=218, col_offset=15), BinOp(Name('x', Load(), lineno=218, col_offset=24), RShift(), Name('n', Load(), lineno=218, col_offset=29), lineno=218, col_offset=24), Call(Name('Frm', Load(), lineno=219, col_offset=16), [Str('x // p2 != x >> n for x=%r n=%r p2=%r', lineno=219, col_offset=20), Tuple([Name('x', Load(), lineno=219, col_offset=62), Name('n', Load(), lineno=219, col_offset=65), Name('p2', Load(), lineno=219, col_offset=68)], Load(), lineno=219, col_offset=62)], [], None, None, lineno=219, col_offset=16)], [], None, None, lineno=218, col_offset=12), lineno=218, col_offset=12), Expr(Call(Name('eq', Load(), lineno=220, col_offset=12), [BinOp(Name('x', Load(), lineno=220, col_offset=15), Mult(), Name('p2', Load(), lineno=220, col_offset=19), lineno=220, col_offset=15), BinOp(Name('x', Load(), lineno=220, col_offset=23), LShift(), Name('n', Load(), lineno=220, col_offset=28), lineno=220, col_offset=23), Call(Name('Frm', Load(), lineno=221, col_offset=16), [Str('x * p2 != x << n for x=%r n=%r p2=%r', lineno=221, col_offset=20), Tuple([Name('x', Load(), lineno=221, col_offset=61), Name('n', Load(), lineno=221, col_offset=64), Name('p2', Load(), lineno=221, col_offset=67)], Load(), lineno=221, col_offset=61)], [], None, None, lineno=221, col_offset=16)], [], None, None, lineno=220, col_offset=12), lineno=220, col_offset=12), Expr(Call(Name('eq', Load(), lineno=222, col_offset=12), [BinOp(Name('x', Load(), lineno=222, col_offset=15), BitAnd(), UnaryOp(USub(), Name('p2', Load(), lineno=222, col_offset=20), lineno=222, col_offset=19), lineno=222, col_offset=15), BinOp(BinOp(Name('x', Load(), lineno=222, col_offset=24), RShift(), Name('n', Load(), lineno=222, col_offset=29), lineno=222, col_offset=24), LShift(), Name('n', Load(), lineno=222, col_offset=34), lineno=222, col_offset=31), Call(Name('Frm', Load(), lineno=223, col_offset=16), [Str('not x & -p2 == x >> n << n for x=%r n=%r p2=%r', lineno=223, col_offset=20), Tuple([Name('x', Load(), lineno=223, col_offset=71), Name('n', Load(), lineno=223, col_offset=74), Name('p2', Load(), lineno=223, col_offset=77)], Load(), lineno=223, col_offset=71)], [], None, None, lineno=223, col_offset=16)], [], None, None, lineno=222, col_offset=12), lineno=222, col_offset=12), Expr(Call(Name('eq', Load(), lineno=224, col_offset=12), [BinOp(Name('x', Load(), lineno=224, col_offset=15), BitAnd(), UnaryOp(USub(), Name('p2', Load(), lineno=224, col_offset=20), lineno=224, col_offset=19), lineno=224, col_offset=15), BinOp(Name('x', Load(), lineno=224, col_offset=24), BitAnd(), UnaryOp(Invert(), BinOp(Name('p2', Load(), lineno=224, col_offset=30), Sub(), Num(1, lineno=224, col_offset=35), lineno=224, col_offset=30), lineno=224, col_offset=28), lineno=224, col_offset=24), Call(Name('Frm', Load(), lineno=225, col_offset=16), [Str('not x & -p2 == x & ~(p2 - 1) for x=%r n=%r p2=%r', lineno=225, col_offset=20), Tuple([Name('x', Load(), lineno=225, col_offset=73), Name('n', Load(), lineno=225, col_offset=76), Name('p2', Load(), lineno=225, col_offset=79)], Load(), lineno=225, col_offset=73)], [], None, None, lineno=225, col_offset=16)], [], None, None, lineno=224, col_offset=12), lineno=224, col_offset=12)], [], lineno=214, col_offset=8)], [], lineno=197, col_offset=4), FunctionDef('check_bitop_identities_2', arguments([Name('self', Param(), lineno=227, col_offset=33), Name('x', Param(), lineno=227, col_offset=39), Name('y', Param(), lineno=227, col_offset=42)], None, None, []), [Assign([Name('eq', Store(), lineno=228, col_offset=8)], Attribute(Name('self', Load(), lineno=228, col_offset=13), 'assertEqual', Load(), lineno=228, col_offset=13), lineno=228, col_offset=8), Expr(Call(Name('eq', Load(), lineno=229, col_offset=8), [BinOp(Name('x', Load(), lineno=229, col_offset=11), BitAnd(), Name('y', Load(), lineno=229, col_offset=15), lineno=229, col_offset=11), BinOp(Name('y', Load(), lineno=229, col_offset=18), BitAnd(), Name('x', Load(), lineno=229, col_offset=22), lineno=229, col_offset=18), Call(Name('Frm', Load(), lineno=229, col_offset=25), [Str('x & y != y & x for x=%r, y=%r', lineno=229, col_offset=29), Tuple([Name('x', Load(), lineno=229, col_offset=63), Name('y', Load(), lineno=229, col_offset=66)], Load(), lineno=229, col_offset=63)], [], None, None, lineno=229, col_offset=25)], [], None, None, lineno=229, col_offset=8), lineno=229, col_offset=8), Expr(Call(Name('eq', Load(), lineno=230, col_offset=8), [BinOp(Name('x', Load(), lineno=230, col_offset=11), BitOr(), Name('y', Load(), lineno=230, col_offset=15), lineno=230, col_offset=11), BinOp(Name('y', Load(), lineno=230, col_offset=18), BitOr(), Name('x', Load(), lineno=230, col_offset=22), lineno=230, col_offset=18), Call(Name('Frm', Load(), lineno=230, col_offset=25), [Str('x | y != y | x for x=%r, y=%r', lineno=230, col_offset=29), Tuple([Name('x', Load(), lineno=230, col_offset=63), Name('y', Load(), lineno=230, col_offset=66)], Load(), lineno=230, col_offset=63)], [], None, None, lineno=230, col_offset=25)], [], None, None, lineno=230, col_offset=8), lineno=230, col_offset=8), Expr(Call(Name('eq', Load(), lineno=231, col_offset=8), [BinOp(Name('x', Load(), lineno=231, col_offset=11), BitXor(), Name('y', Load(), lineno=231, col_offset=15), lineno=231, col_offset=11), BinOp(Name('y', Load(), lineno=231, col_offset=18), BitXor(), Name('x', Load(), lineno=231, col_offset=22), lineno=231, col_offset=18), Call(Name('Frm', Load(), lineno=231, col_offset=25), [Str('x ^ y != y ^ x for x=%r, y=%r', lineno=231, col_offset=29), Tuple([Name('x', Load(), lineno=231, col_offset=63), Name('y', Load(), lineno=231, col_offset=66)], Load(), lineno=231, col_offset=63)], [], None, None, lineno=231, col_offset=25)], [], None, None, lineno=231, col_offset=8), lineno=231, col_offset=8), Expr(Call(Name('eq', Load(), lineno=232, col_offset=8), [BinOp(BinOp(Name('x', Load(), lineno=232, col_offset=11), BitXor(), Name('y', Load(), lineno=232, col_offset=15), lineno=232, col_offset=11), BitXor(), Name('x', Load(), lineno=232, col_offset=19), lineno=232, col_offset=17), Name('y', Load(), lineno=232, col_offset=22), Call(Name('Frm', Load(), lineno=232, col_offset=25), [Str('x ^ y ^ x != y for x=%r, y=%r', lineno=232, col_offset=29), Tuple([Name('x', Load(), lineno=232, col_offset=63), Name('y', Load(), lineno=232, col_offset=66)], Load(), lineno=232, col_offset=63)], [], None, None, lineno=232, col_offset=25)], [], None, None, lineno=232, col_offset=8), lineno=232, col_offset=8), Expr(Call(Name('eq', Load(), lineno=233, col_offset=8), [BinOp(Name('x', Load(), lineno=233, col_offset=11), BitAnd(), Name('y', Load(), lineno=233, col_offset=15), lineno=233, col_offset=11), UnaryOp(Invert(), BinOp(UnaryOp(Invert(), Name('x', Load(), lineno=233, col_offset=21), lineno=233, col_offset=20), BitOr(), UnaryOp(Invert(), Name('y', Load(), lineno=233, col_offset=26), lineno=233, col_offset=25), lineno=233, col_offset=20), lineno=233, col_offset=18), Call(Name('Frm', Load(), lineno=233, col_offset=30), [Str('x & y != ~(~x | ~y) for x=%r, y=%r', lineno=233, col_offset=34), Tuple([Name('x', Load(), lineno=233, col_offset=73), Name('y', Load(), lineno=233, col_offset=76)], Load(), lineno=233, col_offset=73)], [], None, None, lineno=233, col_offset=30)], [], None, None, lineno=233, col_offset=8), lineno=233, col_offset=8), Expr(Call(Name('eq', Load(), lineno=234, col_offset=8), [BinOp(Name('x', Load(), lineno=234, col_offset=11), BitOr(), Name('y', Load(), lineno=234, col_offset=15), lineno=234, col_offset=11), UnaryOp(Invert(), BinOp(UnaryOp(Invert(), Name('x', Load(), lineno=234, col_offset=21), lineno=234, col_offset=20), BitAnd(), UnaryOp(Invert(), Name('y', Load(), lineno=234, col_offset=26), lineno=234, col_offset=25), lineno=234, col_offset=20), lineno=234, col_offset=18), Call(Name('Frm', Load(), lineno=234, col_offset=30), [Str('x | y != ~(~x & ~y) for x=%r, y=%r', lineno=234, col_offset=34), Tuple([Name('x', Load(), lineno=234, col_offset=73), Name('y', Load(), lineno=234, col_offset=76)], Load(), lineno=234, col_offset=73)], [], None, None, lineno=234, col_offset=30)], [], None, None, lineno=234, col_offset=8), lineno=234, col_offset=8), Expr(Call(Name('eq', Load(), lineno=235, col_offset=8), [BinOp(Name('x', Load(), lineno=235, col_offset=11), BitXor(), Name('y', Load(), lineno=235, col_offset=15), lineno=235, col_offset=11), BinOp(BinOp(Name('x', Load(), lineno=235, col_offset=19), BitOr(), Name('y', Load(), lineno=235, col_offset=23), lineno=235, col_offset=19), BitAnd(), UnaryOp(Invert(), BinOp(Name('x', Load(), lineno=235, col_offset=30), BitAnd(), Name('y', Load(), lineno=235, col_offset=34), lineno=235, col_offset=30), lineno=235, col_offset=28), lineno=235, col_offset=18), Call(Name('Frm', Load(), lineno=236, col_offset=13), [Str('x ^ y != (x | y) & ~(x & y) for x=%r, y=%r', lineno=236, col_offset=17), Tuple([Name('x', Load(), lineno=236, col_offset=64), Name('y', Load(), lineno=236, col_offset=67)], Load(), lineno=236, col_offset=64)], [], None, None, lineno=236, col_offset=13)], [], None, None, lineno=235, col_offset=8), lineno=235, col_offset=8), Expr(Call(Name('eq', Load(), lineno=237, col_offset=8), [BinOp(Name('x', Load(), lineno=237, col_offset=11), BitXor(), Name('y', Load(), lineno=237, col_offset=15), lineno=237, col_offset=11), BinOp(BinOp(Name('x', Load(), lineno=237, col_offset=19), BitAnd(), UnaryOp(Invert(), Name('y', Load(), lineno=237, col_offset=24), lineno=237, col_offset=23), lineno=237, col_offset=19), BitOr(), BinOp(UnaryOp(Invert(), Name('x', Load(), lineno=237, col_offset=31), lineno=237, col_offset=30), BitAnd(), Name('y', Load(), lineno=237, col_offset=35), lineno=237, col_offset=30), lineno=237, col_offset=18), Call(Name('Frm', Load(), lineno=238, col_offset=13), [Str('x ^ y == (x & ~y) | (~x & y) for x=%r, y=%r', lineno=238, col_offset=17), Tuple([Name('x', Load(), lineno=238, col_offset=65), Name('y', Load(), lineno=238, col_offset=68)], Load(), lineno=238, col_offset=65)], [], None, None, lineno=238, col_offset=13)], [], None, None, lineno=237, col_offset=8), lineno=237, col_offset=8), Expr(Call(Name('eq', Load(), lineno=239, col_offset=8), [BinOp(Name('x', Load(), lineno=239, col_offset=11), BitXor(), Name('y', Load(), lineno=239, col_offset=15), lineno=239, col_offset=11), BinOp(BinOp(Name('x', Load(), lineno=239, col_offset=19), BitOr(), Name('y', Load(), lineno=239, col_offset=23), lineno=239, col_offset=19), BitAnd(), BinOp(UnaryOp(Invert(), Name('x', Load(), lineno=239, col_offset=30), lineno=239, col_offset=29), BitOr(), UnaryOp(Invert(), Name('y', Load(), lineno=239, col_offset=35), lineno=239, col_offset=34), lineno=239, col_offset=29), lineno=239, col_offset=18), Call(Name('Frm', Load(), lineno=240, col_offset=13), [Str('x ^ y == (x | y) & (~x | ~y) for x=%r, y=%r', lineno=240, col_offset=17), Tuple([Name('x', Load(), lineno=240, col_offset=65), Name('y', Load(), lineno=240, col_offset=68)], Load(), lineno=240, col_offset=65)], [], None, None, lineno=240, col_offset=13)], [], None, None, lineno=239, col_offset=8), lineno=239, col_offset=8)], [], lineno=227, col_offset=4), FunctionDef('check_bitop_identities_3', arguments([Name('self', Param(), lineno=242, col_offset=33), Name('x', Param(), lineno=242, col_offset=39), Name('y', Param(), lineno=242, col_offset=42), Name('z', Param(), lineno=242, col_offset=45)], None, None, []), [Assign([Name('eq', Store(), lineno=243, col_offset=8)], Attribute(Name('self', Load(), lineno=243, col_offset=13), 'assertEqual', Load(), lineno=243, col_offset=13), lineno=243, col_offset=8), Expr(Call(Name('eq', Load(), lineno=244, col_offset=8), [BinOp(BinOp(Name('x', Load(), lineno=244, col_offset=12), BitAnd(), Name('y', Load(), lineno=244, col_offset=16), lineno=244, col_offset=12), BitAnd(), Name('z', Load(), lineno=244, col_offset=21), lineno=244, col_offset=11), BinOp(Name('x', Load(), lineno=244, col_offset=24), BitAnd(), BinOp(Name('y', Load(), lineno=244, col_offset=29), BitAnd(), Name('z', Load(), lineno=244, col_offset=33), lineno=244, col_offset=29), lineno=244, col_offset=24), Call(Name('Frm', Load(), lineno=245, col_offset=13), [Str('(x & y) & z != x & (y & z) for x=%r, y=%r, z=%r', lineno=245, col_offset=17), Tuple([Name('x', Load(), lineno=245, col_offset=69), Name('y', Load(), lineno=245, col_offset=72), Name('z', Load(), lineno=245, col_offset=75)], Load(), lineno=245, col_offset=69)], [], None, None, lineno=245, col_offset=13)], [], None, None, lineno=244, col_offset=8), lineno=244, col_offset=8), Expr(Call(Name('eq', Load(), lineno=246, col_offset=8), [BinOp(BinOp(Name('x', Load(), lineno=246, col_offset=12), BitOr(), Name('y', Load(), lineno=246, col_offset=16), lineno=246, col_offset=12), BitOr(), Name('z', Load(), lineno=246, col_offset=21), lineno=246, col_offset=11), BinOp(Name('x', Load(), lineno=246, col_offset=24), BitOr(), BinOp(Name('y', Load(), lineno=246, col_offset=29), BitOr(), Name('z', Load(), lineno=246, col_offset=33), lineno=246, col_offset=29), lineno=246, col_offset=24), Call(Name('Frm', Load(), lineno=247, col_offset=13), [Str('(x | y) | z != x | (y | z) for x=%r, y=%r, z=%r', lineno=247, col_offset=17), Tuple([Name('x', Load(), lineno=247, col_offset=69), Name('y', Load(), lineno=247, col_offset=72), Name('z', Load(), lineno=247, col_offset=75)], Load(), lineno=247, col_offset=69)], [], None, None, lineno=247, col_offset=13)], [], None, None, lineno=246, col_offset=8), lineno=246, col_offset=8), Expr(Call(Name('eq', Load(), lineno=248, col_offset=8), [BinOp(BinOp(Name('x', Load(), lineno=248, col_offset=12), BitXor(), Name('y', Load(), lineno=248, col_offset=16), lineno=248, col_offset=12), BitXor(), Name('z', Load(), lineno=248, col_offset=21), lineno=248, col_offset=11), BinOp(Name('x', Load(), lineno=248, col_offset=24), BitXor(), BinOp(Name('y', Load(), lineno=248, col_offset=29), BitXor(), Name('z', Load(), lineno=248, col_offset=33), lineno=248, col_offset=29), lineno=248, col_offset=24), Call(Name('Frm', Load(), lineno=249, col_offset=13), [Str('(x ^ y) ^ z != x ^ (y ^ z) for x=%r, y=%r, z=%r', lineno=249, col_offset=17), Tuple([Name('x', Load(), lineno=249, col_offset=69), Name('y', Load(), lineno=249, col_offset=72), Name('z', Load(), lineno=249, col_offset=75)], Load(), lineno=249, col_offset=69)], [], None, None, lineno=249, col_offset=13)], [], None, None, lineno=248, col_offset=8), lineno=248, col_offset=8), Expr(Call(Name('eq', Load(), lineno=250, col_offset=8), [BinOp(Name('x', Load(), lineno=250, col_offset=11), BitAnd(), BinOp(Name('y', Load(), lineno=250, col_offset=16), BitOr(), Name('z', Load(), lineno=250, col_offset=20), lineno=250, col_offset=16), lineno=250, col_offset=11), BinOp(BinOp(Name('x', Load(), lineno=250, col_offset=25), BitAnd(), Name('y', Load(), lineno=250, col_offset=29), lineno=250, col_offset=25), BitOr(), BinOp(Name('x', Load(), lineno=250, col_offset=35), BitAnd(), Name('z', Load(), lineno=250, col_offset=39), lineno=250, col_offset=35), lineno=250, col_offset=24), Call(Name('Frm', Load(), lineno=251, col_offset=13), [Str('x & (y | z) != (x & y) | (x & z) for x=%r, y=%r, z=%r', lineno=251, col_offset=17), Tuple([Name('x', Load(), lineno=251, col_offset=75), Name('y', Load(), lineno=251, col_offset=78), Name('z', Load(), lineno=251, col_offset=81)], Load(), lineno=251, col_offset=75)], [], None, None, lineno=251, col_offset=13)], [], None, None, lineno=250, col_offset=8), lineno=250, col_offset=8), Expr(Call(Name('eq', Load(), lineno=252, col_offset=8), [BinOp(Name('x', Load(), lineno=252, col_offset=11), BitOr(), BinOp(Name('y', Load(), lineno=252, col_offset=16), BitAnd(), Name('z', Load(), lineno=252, col_offset=20), lineno=252, col_offset=16), lineno=252, col_offset=11), BinOp(BinOp(Name('x', Load(), lineno=252, col_offset=25), BitOr(), Name('y', Load(), lineno=252, col_offset=29), lineno=252, col_offset=25), BitAnd(), BinOp(Name('x', Load(), lineno=252, col_offset=35), BitOr(), Name('z', Load(), lineno=252, col_offset=39), lineno=252, col_offset=35), lineno=252, col_offset=24), Call(Name('Frm', Load(), lineno=253, col_offset=13), [Str('x | (y & z) != (x | y) & (x | z) for x=%r, y=%r, z=%r', lineno=253, col_offset=17), Tuple([Name('x', Load(), lineno=253, col_offset=75), Name('y', Load(), lineno=253, col_offset=78), Name('z', Load(), lineno=253, col_offset=81)], Load(), lineno=253, col_offset=75)], [], None, None, lineno=253, col_offset=13)], [], None, None, lineno=252, col_offset=8), lineno=252, col_offset=8)], [], lineno=242, col_offset=4), FunctionDef('test_bitop_identities', arguments([Name('self', Param(), lineno=255, col_offset=30)], None, None, []), [For(Name('x', Store(), lineno=256, col_offset=12), Name('special', Load(), lineno=256, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=257, col_offset=12), 'check_bitop_identities_1', Load(), lineno=257, col_offset=12), [Name('x', Load(), lineno=257, col_offset=42)], [], None, None, lineno=257, col_offset=12), lineno=257, col_offset=12)], [], lineno=256, col_offset=8), Assign([Name('digits', Store(), lineno=258, col_offset=8)], Call(Name('xrange', Load(), lineno=258, col_offset=17), [Num(1, lineno=258, col_offset=24), BinOp(Name('MAXDIGITS', Load(), lineno=258, col_offset=27), Add(), Num(1, lineno=258, col_offset=37), lineno=258, col_offset=27)], [], None, None, lineno=258, col_offset=17), lineno=258, col_offset=8), For(Name('lenx', Store(), lineno=259, col_offset=12), Name('digits', Load(), lineno=259, col_offset=20), [Assign([Name('x', Store(), lineno=260, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=260, col_offset=16), 'getran', Load(), lineno=260, col_offset=16), [Name('lenx', Load(), lineno=260, col_offset=28)], [], None, None, lineno=260, col_offset=16), lineno=260, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=261, col_offset=12), 'check_bitop_identities_1', Load(), lineno=261, col_offset=12), [Name('x', Load(), lineno=261, col_offset=42)], [], None, None, lineno=261, col_offset=12), lineno=261, col_offset=12), For(Name('leny', Store(), lineno=262, col_offset=16), Name('digits', Load(), lineno=262, col_offset=24), [Assign([Name('y', Store(), lineno=263, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=263, col_offset=20), 'getran', Load(), lineno=263, col_offset=20), [Name('leny', Load(), lineno=263, col_offset=32)], [], None, None, lineno=263, col_offset=20), lineno=263, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=264, col_offset=16), 'check_bitop_identities_2', Load(), lineno=264, col_offset=16), [Name('x', Load(), lineno=264, col_offset=46), Name('y', Load(), lineno=264, col_offset=49)], [], None, None, lineno=264, col_offset=16), lineno=264, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=265, col_offset=16), 'check_bitop_identities_3', Load(), lineno=265, col_offset=16), [Name('x', Load(), lineno=265, col_offset=46), Name('y', Load(), lineno=265, col_offset=49), Call(Attribute(Name('self', Load(), lineno=265, col_offset=52), 'getran', Load(), lineno=265, col_offset=52), [BinOp(BinOp(Name('lenx', Load(), lineno=265, col_offset=65), Add(), Name('leny', Load(), lineno=265, col_offset=72), lineno=265, col_offset=65), FloorDiv(), Num(2, lineno=265, col_offset=79), lineno=265, col_offset=64)], [], None, None, lineno=265, col_offset=52)], [], None, None, lineno=265, col_offset=16), lineno=265, col_offset=16)], [], lineno=262, col_offset=12)], [], lineno=259, col_offset=8)], [], lineno=255, col_offset=4), FunctionDef('slow_format', arguments([Name('self', Param(), lineno=267, col_offset=20), Name('x', Param(), lineno=267, col_offset=26), Name('base', Param(), lineno=267, col_offset=29)], None, None, []), [If(Compare(Tuple([Name('x', Load(), lineno=268, col_offset=12), Name('base', Load(), lineno=268, col_offset=15)], Load(), lineno=268, col_offset=12), [Eq()], [Tuple([Num(0, lineno=268, col_offset=25), Num(8, lineno=268, col_offset=28)], Load(), lineno=268, col_offset=25)], lineno=268, col_offset=11), [Return(Str('0L', lineno=270, col_offset=19), lineno=270, col_offset=12)], [], lineno=268, col_offset=8), Assign([Name('digits', Store(), lineno=271, col_offset=8)], List([], Load(), lineno=271, col_offset=17), lineno=271, col_offset=8), Assign([Name('sign', Store(), lineno=272, col_offset=8)], Num(0, lineno=272, col_offset=15), lineno=272, col_offset=8), If(Compare(Name('x', Load(), lineno=273, col_offset=11), [Lt()], [Num(0, lineno=273, col_offset=15)], lineno=273, col_offset=11), [Assign([Tuple([Name('sign', Store(), lineno=274, col_offset=12), Name('x', Store(), lineno=274, col_offset=18)], Store(), lineno=274, col_offset=12)], Tuple([Num(1, lineno=274, col_offset=22), UnaryOp(USub(), Name('x', Load(), lineno=274, col_offset=26), lineno=274, col_offset=25)], Load(), lineno=274, col_offset=22), lineno=274, col_offset=12)], [], lineno=273, col_offset=8), While(Name('x', Load(), lineno=275, col_offset=14), [Assign([Tuple([Name('x', Store(), lineno=276, col_offset=12), Name('r', Store(), lineno=276, col_offset=15)], Store(), lineno=276, col_offset=12)], Call(Name('divmod', Load(), lineno=276, col_offset=19), [Name('x', Load(), lineno=276, col_offset=26), Name('base', Load(), lineno=276, col_offset=29)], [], None, None, lineno=276, col_offset=19), lineno=276, col_offset=12), Expr(Call(Attribute(Name('digits', Load(), lineno=277, col_offset=12), 'append', Load(), lineno=277, col_offset=12), [Call(Name('int', Load(), lineno=277, col_offset=26), [Name('r', Load(), lineno=277, col_offset=30)], [], None, None, lineno=277, col_offset=26)], [], None, None, lineno=277, col_offset=12), lineno=277, col_offset=12)], [], lineno=275, col_offset=8), Expr(Call(Attribute(Name('digits', Load(), lineno=278, col_offset=8), 'reverse', Load(), lineno=278, col_offset=8), [], [], None, None, lineno=278, col_offset=8), lineno=278, col_offset=8), Assign([Name('digits', Store(), lineno=279, col_offset=8)], BoolOp(Or(), [Name('digits', Load(), lineno=279, col_offset=17), List([Num(0, lineno=279, col_offset=28)], Load(), lineno=279, col_offset=27)], lineno=279, col_offset=17), lineno=279, col_offset=8), Return(BinOp(BinOp(BinOp(Subscript(Str('-', lineno=280, col_offset=15), Slice(None, Name('sign', Load(), lineno=280, col_offset=20), None), Load(), lineno=280, col_offset=15), Add(), Subscript(Dict([Num(8, lineno=281, col_offset=16), Num(10, lineno=281, col_offset=24), Num(16, lineno=281, col_offset=32)], [Str('0', lineno=281, col_offset=19), Str('', lineno=281, col_offset=28), Str('0x', lineno=281, col_offset=36)], lineno=281, col_offset=15), Index(Name('base', Load(), lineno=281, col_offset=42)), Load(), lineno=281, col_offset=15), lineno=280, col_offset=15), Add(), Call(Attribute(Str('', lineno=282, col_offset=15), 'join', Load(), lineno=282, col_offset=15), [Call(Name('map', Load(), lineno=282, col_offset=23), [Lambda(arguments([Name('i', Param(), lineno=282, col_offset=34)], None, None, []), Subscript(Str('0123456789abcdef', lineno=282, col_offset=37), Index(Name('i', Load(), lineno=282, col_offset=56)), Load(), lineno=282, col_offset=37), lineno=282, col_offset=27), Name('digits', Load(), lineno=282, col_offset=60)], [], None, None, lineno=282, col_offset=23)], [], None, None, lineno=282, col_offset=15), lineno=281, col_offset=48), Add(), Str('L', lineno=282, col_offset=71), lineno=282, col_offset=69), lineno=280, col_offset=8)], [], lineno=267, col_offset=4), FunctionDef('check_format_1', arguments([Name('self', Param(), lineno=284, col_offset=23), Name('x', Param(), lineno=284, col_offset=29)], None, None, []), [For(Tuple([Name('base', Store(), lineno=285, col_offset=12), Name('mapper', Store(), lineno=285, col_offset=18)], Store(), lineno=285, col_offset=12), Tuple([Tuple([Num(8, lineno=285, col_offset=29), Name('oct', Load(), lineno=285, col_offset=32)], Load(), lineno=285, col_offset=29), Tuple([Num(10, lineno=285, col_offset=39), Name('repr', Load(), lineno=285, col_offset=43)], Load(), lineno=285, col_offset=39), Tuple([Num(16, lineno=285, col_offset=51), Name('hex', Load(), lineno=285, col_offset=55)], Load(), lineno=285, col_offset=51)], Load(), lineno=285, col_offset=28), [Assign([Name('got', Store(), lineno=286, col_offset=12)], Call(Name('mapper', Load(), lineno=286, col_offset=18), [Name('x', Load(), lineno=286, col_offset=25)], [], None, None, lineno=286, col_offset=18), lineno=286, col_offset=12), Assign([Name('expected', Store(), lineno=287, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=287, col_offset=23), 'slow_format', Load(), lineno=287, col_offset=23), [Name('x', Load(), lineno=287, col_offset=40), Name('base', Load(), lineno=287, col_offset=43)], [], None, None, lineno=287, col_offset=23), lineno=287, col_offset=12), Assign([Name('msg', Store(), lineno=288, col_offset=12)], Call(Name('Frm', Load(), lineno=288, col_offset=18), [Str('%s returned %r but expected %r for %r', lineno=288, col_offset=22), Attribute(Name('mapper', Load(), lineno=289, col_offset=16), '__name__', Load(), lineno=289, col_offset=16), Name('got', Load(), lineno=289, col_offset=33), Name('expected', Load(), lineno=289, col_offset=38), Name('x', Load(), lineno=289, col_offset=48)], [], None, None, lineno=288, col_offset=18), lineno=288, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=290, col_offset=12), 'assertEqual', Load(), lineno=290, col_offset=12), [Name('got', Load(), lineno=290, col_offset=29), Name('expected', Load(), lineno=290, col_offset=34), Name('msg', Load(), lineno=290, col_offset=44)], [], None, None, lineno=290, col_offset=12), lineno=290, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=291, col_offset=12), 'assertEqual', Load(), lineno=291, col_offset=12), [Call(Name('long', Load(), lineno=291, col_offset=29), [Name('got', Load(), lineno=291, col_offset=34), Num(0, lineno=291, col_offset=39)], [], None, None, lineno=291, col_offset=29), Name('x', Load(), lineno=291, col_offset=43), Call(Name('Frm', Load(), lineno=291, col_offset=46), [Str('long("%s", 0) != %r', lineno=291, col_offset=50), Name('got', Load(), lineno=291, col_offset=73), Name('x', Load(), lineno=291, col_offset=78)], [], None, None, lineno=291, col_offset=46)], [], None, None, lineno=291, col_offset=12), lineno=291, col_offset=12)], [], lineno=285, col_offset=8), Assign([Name('got', Store(), lineno=294, col_offset=8)], Call(Name('str', Load(), lineno=294, col_offset=14), [Name('x', Load(), lineno=294, col_offset=18)], [], None, None, lineno=294, col_offset=14), lineno=294, col_offset=8), Assign([Name('expected', Store(), lineno=295, col_offset=8)], Subscript(Call(Attribute(Name('self', Load(), lineno=295, col_offset=19), 'slow_format', Load(), lineno=295, col_offset=19), [Name('x', Load(), lineno=295, col_offset=36), Num(10, lineno=295, col_offset=39)], [], None, None, lineno=295, col_offset=19), Slice(None, Num(-1, lineno=295, col_offset=45), None), Load(), lineno=295, col_offset=19), lineno=295, col_offset=8), Assign([Name('msg', Store(), lineno=296, col_offset=8)], Call(Name('Frm', Load(), lineno=296, col_offset=14), [Str('%s returned %r but expected %r for %r', lineno=296, col_offset=18), Attribute(Name('mapper', Load(), lineno=297, col_offset=12), '__name__', Load(), lineno=297, col_offset=12), Name('got', Load(), lineno=297, col_offset=29), Name('expected', Load(), lineno=297, col_offset=34), Name('x', Load(), lineno=297, col_offset=44)], [], None, None, lineno=296, col_offset=14), lineno=296, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=298, col_offset=8), 'assertEqual', Load(), lineno=298, col_offset=8), [Name('got', Load(), lineno=298, col_offset=25), Name('expected', Load(), lineno=298, col_offset=30), Name('msg', Load(), lineno=298, col_offset=40)], [], None, None, lineno=298, col_offset=8), lineno=298, col_offset=8)], [], lineno=284, col_offset=4), FunctionDef('test_format', arguments([Name('self', Param(), lineno=300, col_offset=20)], None, None, []), [For(Name('x', Store(), lineno=301, col_offset=12), Name('special', Load(), lineno=301, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=302, col_offset=12), 'check_format_1', Load(), lineno=302, col_offset=12), [Name('x', Load(), lineno=302, col_offset=32)], [], None, None, lineno=302, col_offset=12), lineno=302, col_offset=12)], [], lineno=301, col_offset=8), For(Name('i', Store(), lineno=303, col_offset=12), Call(Name('xrange', Load(), lineno=303, col_offset=17), [Num(10, lineno=303, col_offset=24)], [], None, None, lineno=303, col_offset=17), [For(Name('lenx', Store(), lineno=304, col_offset=16), Call(Name('xrange', Load(), lineno=304, col_offset=24), [Num(1, lineno=304, col_offset=31), BinOp(Name('MAXDIGITS', Load(), lineno=304, col_offset=34), Add(), Num(1, lineno=304, col_offset=44), lineno=304, col_offset=34)], [], None, None, lineno=304, col_offset=24), [Assign([Name('x', Store(), lineno=305, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=305, col_offset=20), 'getran', Load(), lineno=305, col_offset=20), [Name('lenx', Load(), lineno=305, col_offset=32)], [], None, None, lineno=305, col_offset=20), lineno=305, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=306, col_offset=16), 'check_format_1', Load(), lineno=306, col_offset=16), [Name('x', Load(), lineno=306, col_offset=36)], [], None, None, lineno=306, col_offset=16), lineno=306, col_offset=16)], [], lineno=304, col_offset=12)], [], lineno=303, col_offset=8)], [], lineno=300, col_offset=4), FunctionDef('test_long', arguments([Name('self', Param(), lineno=308, col_offset=18)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=309, col_offset=8), 'assertEqual', Load(), lineno=309, col_offset=8), [Call(Name('long', Load(), lineno=309, col_offset=25), [Num(314, lineno=309, col_offset=30)], [], None, None, lineno=309, col_offset=25), Num(314L, lineno=309, col_offset=36)], [], None, None, lineno=309, col_offset=8), lineno=309, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=310, col_offset=8), 'assertEqual', Load(), lineno=310, col_offset=8), [Call(Name('long', Load(), lineno=310, col_offset=25), [Num(3.14, lineno=310, col_offset=30)], [], None, None, lineno=310, col_offset=25), Num(3L, lineno=310, col_offset=37)], [], None, None, lineno=310, col_offset=8), lineno=310, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=311, col_offset=8), 'assertEqual', Load(), lineno=311, col_offset=8), [Call(Name('long', Load(), lineno=311, col_offset=25), [Num(314L, lineno=311, col_offset=30)], [], None, None, lineno=311, col_offset=25), Num(314L, lineno=311, col_offset=37)], [], None, None, lineno=311, col_offset=8), lineno=311, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=313, col_offset=8), 'assertEqual', Load(), lineno=313, col_offset=8), [Call(Name('type', Load(), lineno=313, col_offset=25), [Call(Name('long', Load(), lineno=313, col_offset=30), [Num(314, lineno=313, col_offset=35)], [], None, None, lineno=313, col_offset=30)], [], None, None, lineno=313, col_offset=25), Name('long', Load(), lineno=313, col_offset=42)], [], None, None, lineno=313, col_offset=8), lineno=313, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=314, col_offset=8), 'assertEqual', Load(), lineno=314, col_offset=8), [Call(Name('type', Load(), lineno=314, col_offset=25), [Call(Name('long', Load(), lineno=314, col_offset=30), [Num(3.14, lineno=314, col_offset=35)], [], None, None, lineno=314, col_offset=30)], [], None, None, lineno=314, col_offset=25), Name('long', Load(), lineno=314, col_offset=43)], [], None, None, lineno=314, col_offset=8), lineno=314, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=315, col_offset=8), 'assertEqual', Load(), lineno=315, col_offset=8), [Call(Name('type', Load(), lineno=315, col_offset=25), [Call(Name('long', Load(), lineno=315, col_offset=30), [Num(314L, lineno=315, col_offset=35)], [], None, None, lineno=315, col_offset=30)], [], None, None, lineno=315, col_offset=25), Name('long', Load(), lineno=315, col_offset=43)], [], None, None, lineno=315, col_offset=8), lineno=315, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=317, col_offset=8), 'assertEqual', Load(), lineno=317, col_offset=8), [Call(Name('long', Load(), lineno=317, col_offset=25), [Num(-3.14, lineno=317, col_offset=31)], [], None, None, lineno=317, col_offset=25), Num(-3L, lineno=317, col_offset=39)], [], None, None, lineno=317, col_offset=8), lineno=317, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=318, col_offset=8), 'assertEqual', Load(), lineno=318, col_offset=8), [Call(Name('long', Load(), lineno=318, col_offset=25), [Num(3.9, lineno=318, col_offset=30)], [], None, None, lineno=318, col_offset=25), Num(3L, lineno=318, col_offset=36)], [], None, None, lineno=318, col_offset=8), lineno=318, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=319, col_offset=8), 'assertEqual', Load(), lineno=319, col_offset=8), [Call(Name('long', Load(), lineno=319, col_offset=25), [Num(-3.9, lineno=319, col_offset=31)], [], None, None, lineno=319, col_offset=25), Num(-3L, lineno=319, col_offset=38)], [], None, None, lineno=319, col_offset=8), lineno=319, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=320, col_offset=8), 'assertEqual', Load(), lineno=320, col_offset=8), [Call(Name('long', Load(), lineno=320, col_offset=25), [Num(3.5, lineno=320, col_offset=30)], [], None, None, lineno=320, col_offset=25), Num(3L, lineno=320, col_offset=36)], [], None, None, lineno=320, col_offset=8), lineno=320, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=321, col_offset=8), 'assertEqual', Load(), lineno=321, col_offset=8), [Call(Name('long', Load(), lineno=321, col_offset=25), [Num(-3.5, lineno=321, col_offset=31)], [], None, None, lineno=321, col_offset=25), Num(-3L, lineno=321, col_offset=38)], [], None, None, lineno=321, col_offset=8), lineno=321, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=322, col_offset=8), 'assertEqual', Load(), lineno=322, col_offset=8), [Call(Name('long', Load(), lineno=322, col_offset=25), [Str('-3', lineno=322, col_offset=30)], [], None, None, lineno=322, col_offset=25), Num(-3L, lineno=322, col_offset=38)], [], None, None, lineno=322, col_offset=8), lineno=322, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=323, col_offset=8), 'assertEqual', Load(), lineno=323, col_offset=8), [Call(Name('long', Load(), lineno=323, col_offset=25), [Str('0b10', lineno=323, col_offset=30), Num(2, lineno=323, col_offset=38)], [], None, None, lineno=323, col_offset=25), Num(2L, lineno=323, col_offset=42)], [], None, None, lineno=323, col_offset=8), lineno=323, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=324, col_offset=8), 'assertEqual', Load(), lineno=324, col_offset=8), [Call(Name('long', Load(), lineno=324, col_offset=25), [Str('0o10', lineno=324, col_offset=30), Num(8, lineno=324, col_offset=38)], [], None, None, lineno=324, col_offset=25), Num(8L, lineno=324, col_offset=42)], [], None, None, lineno=324, col_offset=8), lineno=324, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=325, col_offset=8), 'assertEqual', Load(), lineno=325, col_offset=8), [Call(Name('long', Load(), lineno=325, col_offset=25), [Str('0x10', lineno=325, col_offset=30), Num(16, lineno=325, col_offset=38)], [], None, None, lineno=325, col_offset=25), Num(16L, lineno=325, col_offset=43)], [], None, None, lineno=325, col_offset=8), lineno=325, col_offset=8), If(Attribute(Name('test_support', Load(), lineno=326, col_offset=11), 'have_unicode', Load(), lineno=326, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=327, col_offset=12), 'assertEqual', Load(), lineno=327, col_offset=12), [Call(Name('long', Load(), lineno=327, col_offset=29), [Call(Name('unicode', Load(), lineno=327, col_offset=34), [Str('-3', lineno=327, col_offset=42)], [], None, None, lineno=327, col_offset=34)], [], None, None, lineno=327, col_offset=29), Num(-3L, lineno=327, col_offset=51)], [], None, None, lineno=327, col_offset=12), lineno=327, col_offset=12)], [], lineno=326, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=329, col_offset=8), 'assertEqual', Load(), lineno=329, col_offset=8), [Call(Name('long', Load(), lineno=329, col_offset=25), [Str('10', lineno=329, col_offset=30), Num(16, lineno=329, col_offset=35)], [], None, None, lineno=329, col_offset=25), Num(16L, lineno=329, col_offset=40)], [], None, None, lineno=329, col_offset=8), lineno=329, col_offset=8), If(Attribute(Name('test_support', Load(), lineno=330, col_offset=11), 'have_unicode', Load(), lineno=330, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=331, col_offset=12), 'assertEqual', Load(), lineno=331, col_offset=12), [Call(Name('long', Load(), lineno=331, col_offset=29), [Call(Name('unicode', Load(), lineno=331, col_offset=34), [Str('10', lineno=331, col_offset=42)], [], None, None, lineno=331, col_offset=34), Num(16, lineno=331, col_offset=48)], [], None, None, lineno=331, col_offset=29), Num(16L, lineno=331, col_offset=53)], [], None, None, lineno=331, col_offset=12), lineno=331, col_offset=12)], [], lineno=330, col_offset=8), Assign([Name('LL', Store(), lineno=333, col_offset=8)], List([Tuple([BinOp(Str('1', lineno=334, col_offset=17), Add(), BinOp(Str('0', lineno=334, col_offset=23), Mult(), Num(20, lineno=334, col_offset=27), lineno=334, col_offset=23), lineno=334, col_offset=17), BinOp(Num(10L, lineno=334, col_offset=31), Pow(), Num(20, lineno=334, col_offset=36), lineno=334, col_offset=31)], Load(), lineno=334, col_offset=17), Tuple([BinOp(Str('1', lineno=335, col_offset=17), Add(), BinOp(Str('0', lineno=335, col_offset=23), Mult(), Num(100, lineno=335, col_offset=27), lineno=335, col_offset=23), lineno=335, col_offset=17), BinOp(Num(10L, lineno=335, col_offset=32), Pow(), Num(100, lineno=335, col_offset=37), lineno=335, col_offset=32)], Load(), lineno=335, col_offset=17)], Load(), lineno=333, col_offset=13), lineno=333, col_offset=8), Assign([Name('L2', Store(), lineno=337, col_offset=8)], Subscript(Name('L', Load(), lineno=337, col_offset=13), Slice(None, None, None), Load(), lineno=337, col_offset=13), lineno=337, col_offset=8), If(Attribute(Name('test_support', Load(), lineno=338, col_offset=11), 'have_unicode', Load(), lineno=338, col_offset=11), [AugAssign(Name('L2', Store(), lineno=339, col_offset=12), Add(), List([Tuple([BinOp(Call(Name('unicode', Load(), lineno=340, col_offset=17), [Str('1', lineno=340, col_offset=25)], [], None, None, lineno=340, col_offset=17), Add(), BinOp(Call(Name('unicode', Load(), lineno=340, col_offset=32), [Str('0', lineno=340, col_offset=40)], [], None, None, lineno=340, col_offset=32), Mult(), Num(20, lineno=340, col_offset=45), lineno=340, col_offset=32), lineno=340, col_offset=17), BinOp(Num(10L, lineno=340, col_offset=49), Pow(), Num(20, lineno=340, col_offset=54), lineno=340, col_offset=49)], Load(), lineno=340, col_offset=17), Tuple([BinOp(Call(Name('unicode', Load(), lineno=341, col_offset=17), [Str('1', lineno=341, col_offset=25)], [], None, None, lineno=341, col_offset=17), Add(), BinOp(Call(Name('unicode', Load(), lineno=341, col_offset=32), [Str('0', lineno=341, col_offset=40)], [], None, None, lineno=341, col_offset=32), Mult(), Num(100, lineno=341, col_offset=45), lineno=341, col_offset=32), lineno=341, col_offset=17), BinOp(Num(10L, lineno=341, col_offset=50), Pow(), Num(100, lineno=341, col_offset=55), lineno=341, col_offset=50)], Load(), lineno=341, col_offset=17)], Load(), lineno=339, col_offset=18), lineno=339, col_offset=12)], [], lineno=338, col_offset=8), For(Tuple([Name('s', Store(), lineno=343, col_offset=12), Name('v', Store(), lineno=343, col_offset=15)], Store(), lineno=343, col_offset=12), BinOp(Name('L2', Load(), lineno=343, col_offset=20), Add(), Name('LL', Load(), lineno=343, col_offset=25), lineno=343, col_offset=20), [For(Name('sign', Store(), lineno=344, col_offset=16), Tuple([Str('', lineno=344, col_offset=24), Str('+', lineno=344, col_offset=28), Str('-', lineno=344, col_offset=33)], Load(), lineno=344, col_offset=24), [For(Name('prefix', Store(), lineno=345, col_offset=20), Tuple([Str('', lineno=345, col_offset=30), Str(' ', lineno=345, col_offset=34), Str('\t', lineno=345, col_offset=39), Str('  \t\t  ', lineno=345, col_offset=45)], Load(), lineno=345, col_offset=30), [Assign([Name('ss', Store(), lineno=346, col_offset=20)], BinOp(BinOp(Name('prefix', Load(), lineno=346, col_offset=25), Add(), Name('sign', Load(), lineno=346, col_offset=34), lineno=346, col_offset=25), Add(), Name('s', Load(), lineno=346, col_offset=41), lineno=346, col_offset=39), lineno=346, col_offset=20), Assign([Name('vv', Store(), lineno=347, col_offset=20)], Name('v', Load(), lineno=347, col_offset=25), lineno=347, col_offset=20), If(BoolOp(And(), [Compare(Name('sign', Load(), lineno=348, col_offset=23), [Eq()], [Str('-', lineno=348, col_offset=31)], lineno=348, col_offset=23), Compare(Name('v', Load(), lineno=348, col_offset=39), [IsNot()], [Name('ValueError', Load(), lineno=348, col_offset=48)], lineno=348, col_offset=39)], lineno=348, col_offset=23), [Assign([Name('vv', Store(), lineno=349, col_offset=24)], UnaryOp(USub(), Name('v', Load(), lineno=349, col_offset=30), lineno=349, col_offset=29), lineno=349, col_offset=24)], [], lineno=348, col_offset=20), TryExcept([Expr(Call(Attribute(Name('self', Load(), lineno=351, col_offset=24), 'assertEqual', Load(), lineno=351, col_offset=24), [Call(Name('long', Load(), lineno=351, col_offset=41), [Name('ss', Load(), lineno=351, col_offset=46)], [], None, None, lineno=351, col_offset=41), Call(Name('long', Load(), lineno=351, col_offset=51), [Name('vv', Load(), lineno=351, col_offset=56)], [], None, None, lineno=351, col_offset=51)], [], None, None, lineno=351, col_offset=24), lineno=351, col_offset=24)], [ExceptHandler(Name('v', Load(), lineno=352, col_offset=27), None, [Pass( lineno=353, col_offset=24)], lineno=352, col_offset=20)], [], lineno=350, col_offset=20)], [], lineno=345, col_offset=16)], [], lineno=344, col_offset=12)], [], lineno=343, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=355, col_offset=8), 'assertRaises', Load(), lineno=355, col_offset=8), [Name('ValueError', Load(), lineno=355, col_offset=26), Name('long', Load(), lineno=355, col_offset=38), Str('123\x00', lineno=355, col_offset=44)], [], None, None, lineno=355, col_offset=8), lineno=355, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=356, col_offset=8), 'assertRaises', Load(), lineno=356, col_offset=8), [Name('ValueError', Load(), lineno=356, col_offset=26), Name('long', Load(), lineno=356, col_offset=38), Str('53', lineno=356, col_offset=44), Num(40, lineno=356, col_offset=50)], [], None, None, lineno=356, col_offset=8), lineno=356, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=357, col_offset=8), 'assertRaises', Load(), lineno=357, col_offset=8), [Name('TypeError', Load(), lineno=357, col_offset=26), Name('long', Load(), lineno=357, col_offset=37), Num(1, lineno=357, col_offset=43), Num(12, lineno=357, col_offset=46)], [], None, None, lineno=357, col_offset=8), lineno=357, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=360, col_offset=8), 'assertEqual', Load(), lineno=360, col_offset=8), [Call(Name('long', Load(), lineno=360, col_offset=25), [Str(' 0123  ', lineno=360, col_offset=30), Num(0, lineno=360, col_offset=41)], [], None, None, lineno=360, col_offset=25), Num(83, lineno=360, col_offset=45)], [], None, None, lineno=360, col_offset=8), lineno=360, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=361, col_offset=8), 'assertEqual', Load(), lineno=361, col_offset=8), [Call(Name('long', Load(), lineno=361, col_offset=25), [Str(' 0123  ', lineno=361, col_offset=30), Num(0, lineno=361, col_offset=41)], [], None, None, lineno=361, col_offset=25), Num(83, lineno=361, col_offset=45)], [], None, None, lineno=361, col_offset=8), lineno=361, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=362, col_offset=8), 'assertEqual', Load(), lineno=362, col_offset=8), [Call(Name('long', Load(), lineno=362, col_offset=25), [Str('000', lineno=362, col_offset=30), Num(0, lineno=362, col_offset=37)], [], None, None, lineno=362, col_offset=25), Num(0, lineno=362, col_offset=41)], [], None, None, lineno=362, col_offset=8), lineno=362, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=363, col_offset=8), 'assertEqual', Load(), lineno=363, col_offset=8), [Call(Name('long', Load(), lineno=363, col_offset=25), [Str('0o123', lineno=363, col_offset=30), Num(0, lineno=363, col_offset=39)], [], None, None, lineno=363, col_offset=25), Num(83, lineno=363, col_offset=43)], [], None, None, lineno=363, col_offset=8), lineno=363, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=364, col_offset=8), 'assertEqual', Load(), lineno=364, col_offset=8), [Call(Name('long', Load(), lineno=364, col_offset=25), [Str('0x123', lineno=364, col_offset=30), Num(0, lineno=364, col_offset=39)], [], None, None, lineno=364, col_offset=25), Num(291, lineno=364, col_offset=43)], [], None, None, lineno=364, col_offset=8), lineno=364, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=365, col_offset=8), 'assertEqual', Load(), lineno=365, col_offset=8), [Call(Name('long', Load(), lineno=365, col_offset=25), [Str('0b100', lineno=365, col_offset=30), Num(0, lineno=365, col_offset=39)], [], None, None, lineno=365, col_offset=25), Num(4, lineno=365, col_offset=43)], [], None, None, lineno=365, col_offset=8), lineno=365, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=366, col_offset=8), 'assertEqual', Load(), lineno=366, col_offset=8), [Call(Name('long', Load(), lineno=366, col_offset=25), [Str(' 0O123   ', lineno=366, col_offset=30), Num(0, lineno=366, col_offset=43)], [], None, None, lineno=366, col_offset=25), Num(83, lineno=366, col_offset=47)], [], None, None, lineno=366, col_offset=8), lineno=366, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=367, col_offset=8), 'assertEqual', Load(), lineno=367, col_offset=8), [Call(Name('long', Load(), lineno=367, col_offset=25), [Str(' 0X123  ', lineno=367, col_offset=30), Num(0, lineno=367, col_offset=42)], [], None, None, lineno=367, col_offset=25), Num(291, lineno=367, col_offset=46)], [], None, None, lineno=367, col_offset=8), lineno=367, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=368, col_offset=8), 'assertEqual', Load(), lineno=368, col_offset=8), [Call(Name('long', Load(), lineno=368, col_offset=25), [Str(' 0B100 ', lineno=368, col_offset=30), Num(0, lineno=368, col_offset=41)], [], None, None, lineno=368, col_offset=25), Num(4, lineno=368, col_offset=45)], [], None, None, lineno=368, col_offset=8), lineno=368, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=369, col_offset=8), 'assertEqual', Load(), lineno=369, col_offset=8), [Call(Name('long', Load(), lineno=369, col_offset=25), [Str('0', lineno=369, col_offset=30), Num(0, lineno=369, col_offset=35)], [], None, None, lineno=369, col_offset=25), Num(0, lineno=369, col_offset=39)], [], None, None, lineno=369, col_offset=8), lineno=369, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=370, col_offset=8), 'assertEqual', Load(), lineno=370, col_offset=8), [Call(Name('long', Load(), lineno=370, col_offset=25), [Str('+0', lineno=370, col_offset=30), Num(0, lineno=370, col_offset=36)], [], None, None, lineno=370, col_offset=25), Num(0, lineno=370, col_offset=40)], [], None, None, lineno=370, col_offset=8), lineno=370, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=371, col_offset=8), 'assertEqual', Load(), lineno=371, col_offset=8), [Call(Name('long', Load(), lineno=371, col_offset=25), [Str('-0', lineno=371, col_offset=30), Num(0, lineno=371, col_offset=36)], [], None, None, lineno=371, col_offset=25), Num(0, lineno=371, col_offset=40)], [], None, None, lineno=371, col_offset=8), lineno=371, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=372, col_offset=8), 'assertEqual', Load(), lineno=372, col_offset=8), [Call(Name('long', Load(), lineno=372, col_offset=25), [Str('00', lineno=372, col_offset=30), Num(0, lineno=372, col_offset=36)], [], None, None, lineno=372, col_offset=25), Num(0, lineno=372, col_offset=40)], [], None, None, lineno=372, col_offset=8), lineno=372, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=373, col_offset=8), 'assertRaises', Load(), lineno=373, col_offset=8), [Name('ValueError', Load(), lineno=373, col_offset=26), Name('long', Load(), lineno=373, col_offset=38), Str('08', lineno=373, col_offset=44), Num(0, lineno=373, col_offset=50)], [], None, None, lineno=373, col_offset=8), lineno=373, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=374, col_offset=8), 'assertRaises', Load(), lineno=374, col_offset=8), [Name('ValueError', Load(), lineno=374, col_offset=26), Name('long', Load(), lineno=374, col_offset=38), Str('-012395', lineno=374, col_offset=44), Num(0, lineno=374, col_offset=55)], [], None, None, lineno=374, col_offset=8), lineno=374, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=378, col_offset=8), 'assertRaises', Load(), lineno=378, col_offset=8), [Name('ValueError', Load(), lineno=378, col_offset=26), Name('long', Load(), lineno=378, col_offset=38), Str('123\x00', lineno=378, col_offset=44), Num(10, lineno=378, col_offset=53)], [], None, None, lineno=378, col_offset=8), lineno=378, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=379, col_offset=8), 'assertRaises', Load(), lineno=379, col_offset=8), [Name('ValueError', Load(), lineno=379, col_offset=26), Name('long', Load(), lineno=379, col_offset=38), Str('123\x00 245', lineno=379, col_offset=44), Num(20, lineno=379, col_offset=59)], [], None, None, lineno=379, col_offset=8), lineno=379, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=381, col_offset=8), 'assertEqual', Load(), lineno=381, col_offset=8), [Call(Name('long', Load(), lineno=381, col_offset=25), [Str('100000000000000000000000000000000', lineno=381, col_offset=30), Num(2, lineno=381, col_offset=67)], [], None, None, lineno=381, col_offset=25), Num(4294967296, lineno=382, col_offset=25)], [], None, None, lineno=381, col_offset=8), lineno=381, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=383, col_offset=8), 'assertEqual', Load(), lineno=383, col_offset=8), [Call(Name('long', Load(), lineno=383, col_offset=25), [Str('102002022201221111211', lineno=383, col_offset=30), Num(3, lineno=383, col_offset=55)], [], None, None, lineno=383, col_offset=25), Num(4294967296, lineno=383, col_offset=59)], [], None, None, lineno=383, col_offset=8), lineno=383, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=384, col_offset=8), 'assertEqual', Load(), lineno=384, col_offset=8), [Call(Name('long', Load(), lineno=384, col_offset=25), [Str('10000000000000000', lineno=384, col_offset=30), Num(4, lineno=384, col_offset=51)], [], None, None, lineno=384, col_offset=25), Num(4294967296, lineno=384, col_offset=55)], [], None, None, lineno=384, col_offset=8), lineno=384, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=385, col_offset=8), 'assertEqual', Load(), lineno=385, col_offset=8), [Call(Name('long', Load(), lineno=385, col_offset=25), [Str('32244002423141', lineno=385, col_offset=30), Num(5, lineno=385, col_offset=48)], [], None, None, lineno=385, col_offset=25), Num(4294967296, lineno=385, col_offset=52)], [], None, None, lineno=385, col_offset=8), lineno=385, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=386, col_offset=8), 'assertEqual', Load(), lineno=386, col_offset=8), [Call(Name('long', Load(), lineno=386, col_offset=25), [Str('1550104015504', lineno=386, col_offset=30), Num(6, lineno=386, col_offset=47)], [], None, None, lineno=386, col_offset=25), Num(4294967296, lineno=386, col_offset=51)], [], None, None, lineno=386, col_offset=8), lineno=386, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=387, col_offset=8), 'assertEqual', Load(), lineno=387, col_offset=8), [Call(Name('long', Load(), lineno=387, col_offset=25), [Str('211301422354', lineno=387, col_offset=30), Num(7, lineno=387, col_offset=46)], [], None, None, lineno=387, col_offset=25), Num(4294967296, lineno=387, col_offset=50)], [], None, None, lineno=387, col_offset=8), lineno=387, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=388, col_offset=8), 'assertEqual', Load(), lineno=388, col_offset=8), [Call(Name('long', Load(), lineno=388, col_offset=25), [Str('40000000000', lineno=388, col_offset=30), Num(8, lineno=388, col_offset=45)], [], None, None, lineno=388, col_offset=25), Num(4294967296, lineno=388, col_offset=49)], [], None, None, lineno=388, col_offset=8), lineno=388, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=389, col_offset=8), 'assertEqual', Load(), lineno=389, col_offset=8), [Call(Name('long', Load(), lineno=389, col_offset=25), [Str('12068657454', lineno=389, col_offset=30), Num(9, lineno=389, col_offset=45)], [], None, None, lineno=389, col_offset=25), Num(4294967296, lineno=389, col_offset=49)], [], None, None, lineno=389, col_offset=8), lineno=389, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=390, col_offset=8), 'assertEqual', Load(), lineno=390, col_offset=8), [Call(Name('long', Load(), lineno=390, col_offset=25), [Str('4294967296', lineno=390, col_offset=30), Num(10, lineno=390, col_offset=44)], [], None, None, lineno=390, col_offset=25), Num(4294967296, lineno=390, col_offset=49)], [], None, None, lineno=390, col_offset=8), lineno=390, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=391, col_offset=8), 'assertEqual', Load(), lineno=391, col_offset=8), [Call(Name('long', Load(), lineno=391, col_offset=25), [Str('1904440554', lineno=391, col_offset=30), Num(11, lineno=391, col_offset=44)], [], None, None, lineno=391, col_offset=25), Num(4294967296, lineno=391, col_offset=49)], [], None, None, lineno=391, col_offset=8), lineno=391, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=392, col_offset=8), 'assertEqual', Load(), lineno=392, col_offset=8), [Call(Name('long', Load(), lineno=392, col_offset=25), [Str('9ba461594', lineno=392, col_offset=30), Num(12, lineno=392, col_offset=43)], [], None, None, lineno=392, col_offset=25), Num(4294967296, lineno=392, col_offset=48)], [], None, None, lineno=392, col_offset=8), lineno=392, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=393, col_offset=8), 'assertEqual', Load(), lineno=393, col_offset=8), [Call(Name('long', Load(), lineno=393, col_offset=25), [Str('535a79889', lineno=393, col_offset=30), Num(13, lineno=393, col_offset=43)], [], None, None, lineno=393, col_offset=25), Num(4294967296, lineno=393, col_offset=48)], [], None, None, lineno=393, col_offset=8), lineno=393, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=394, col_offset=8), 'assertEqual', Load(), lineno=394, col_offset=8), [Call(Name('long', Load(), lineno=394, col_offset=25), [Str('2ca5b7464', lineno=394, col_offset=30), Num(14, lineno=394, col_offset=43)], [], None, None, lineno=394, col_offset=25), Num(4294967296, lineno=394, col_offset=48)], [], None, None, lineno=394, col_offset=8), lineno=394, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=395, col_offset=8), 'assertEqual', Load(), lineno=395, col_offset=8), [Call(Name('long', Load(), lineno=395, col_offset=25), [Str('1a20dcd81', lineno=395, col_offset=30), Num(15, lineno=395, col_offset=43)], [], None, None, lineno=395, col_offset=25), Num(4294967296, lineno=395, col_offset=48)], [], None, None, lineno=395, col_offset=8), lineno=395, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=396, col_offset=8), 'assertEqual', Load(), lineno=396, col_offset=8), [Call(Name('long', Load(), lineno=396, col_offset=25), [Str('100000000', lineno=396, col_offset=30), Num(16, lineno=396, col_offset=43)], [], None, None, lineno=396, col_offset=25), Num(4294967296, lineno=396, col_offset=48)], [], None, None, lineno=396, col_offset=8), lineno=396, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=397, col_offset=8), 'assertEqual', Load(), lineno=397, col_offset=8), [Call(Name('long', Load(), lineno=397, col_offset=25), [Str('a7ffda91', lineno=397, col_offset=30), Num(17, lineno=397, col_offset=42)], [], None, None, lineno=397, col_offset=25), Num(4294967296, lineno=397, col_offset=47)], [], None, None, lineno=397, col_offset=8), lineno=397, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=398, col_offset=8), 'assertEqual', Load(), lineno=398, col_offset=8), [Call(Name('long', Load(), lineno=398, col_offset=25), [Str('704he7g4', lineno=398, col_offset=30), Num(18, lineno=398, col_offset=42)], [], None, None, lineno=398, col_offset=25), Num(4294967296, lineno=398, col_offset=47)], [], None, None, lineno=398, col_offset=8), lineno=398, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=399, col_offset=8), 'assertEqual', Load(), lineno=399, col_offset=8), [Call(Name('long', Load(), lineno=399, col_offset=25), [Str('4f5aff66', lineno=399, col_offset=30), Num(19, lineno=399, col_offset=42)], [], None, None, lineno=399, col_offset=25), Num(4294967296, lineno=399, col_offset=47)], [], None, None, lineno=399, col_offset=8), lineno=399, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=400, col_offset=8), 'assertEqual', Load(), lineno=400, col_offset=8), [Call(Name('long', Load(), lineno=400, col_offset=25), [Str('3723ai4g', lineno=400, col_offset=30), Num(20, lineno=400, col_offset=42)], [], None, None, lineno=400, col_offset=25), Num(4294967296, lineno=400, col_offset=47)], [], None, None, lineno=400, col_offset=8), lineno=400, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=401, col_offset=8), 'assertEqual', Load(), lineno=401, col_offset=8), [Call(Name('long', Load(), lineno=401, col_offset=25), [Str('281d55i4', lineno=401, col_offset=30), Num(21, lineno=401, col_offset=42)], [], None, None, lineno=401, col_offset=25), Num(4294967296, lineno=401, col_offset=47)], [], None, None, lineno=401, col_offset=8), lineno=401, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=402, col_offset=8), 'assertEqual', Load(), lineno=402, col_offset=8), [Call(Name('long', Load(), lineno=402, col_offset=25), [Str('1fj8b184', lineno=402, col_offset=30), Num(22, lineno=402, col_offset=42)], [], None, None, lineno=402, col_offset=25), Num(4294967296, lineno=402, col_offset=47)], [], None, None, lineno=402, col_offset=8), lineno=402, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=403, col_offset=8), 'assertEqual', Load(), lineno=403, col_offset=8), [Call(Name('long', Load(), lineno=403, col_offset=25), [Str('1606k7ic', lineno=403, col_offset=30), Num(23, lineno=403, col_offset=42)], [], None, None, lineno=403, col_offset=25), Num(4294967296, lineno=403, col_offset=47)], [], None, None, lineno=403, col_offset=8), lineno=403, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=404, col_offset=8), 'assertEqual', Load(), lineno=404, col_offset=8), [Call(Name('long', Load(), lineno=404, col_offset=25), [Str('mb994ag', lineno=404, col_offset=30), Num(24, lineno=404, col_offset=41)], [], None, None, lineno=404, col_offset=25), Num(4294967296, lineno=404, col_offset=46)], [], None, None, lineno=404, col_offset=8), lineno=404, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=405, col_offset=8), 'assertEqual', Load(), lineno=405, col_offset=8), [Call(Name('long', Load(), lineno=405, col_offset=25), [Str('hek2mgl', lineno=405, col_offset=30), Num(25, lineno=405, col_offset=41)], [], None, None, lineno=405, col_offset=25), Num(4294967296, lineno=405, col_offset=46)], [], None, None, lineno=405, col_offset=8), lineno=405, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=406, col_offset=8), 'assertEqual', Load(), lineno=406, col_offset=8), [Call(Name('long', Load(), lineno=406, col_offset=25), [Str('dnchbnm', lineno=406, col_offset=30), Num(26, lineno=406, col_offset=41)], [], None, None, lineno=406, col_offset=25), Num(4294967296, lineno=406, col_offset=46)], [], None, None, lineno=406, col_offset=8), lineno=406, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=407, col_offset=8), 'assertEqual', Load(), lineno=407, col_offset=8), [Call(Name('long', Load(), lineno=407, col_offset=25), [Str('b28jpdm', lineno=407, col_offset=30), Num(27, lineno=407, col_offset=41)], [], None, None, lineno=407, col_offset=25), Num(4294967296, lineno=407, col_offset=46)], [], None, None, lineno=407, col_offset=8), lineno=407, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=408, col_offset=8), 'assertEqual', Load(), lineno=408, col_offset=8), [Call(Name('long', Load(), lineno=408, col_offset=25), [Str('8pfgih4', lineno=408, col_offset=30), Num(28, lineno=408, col_offset=41)], [], None, None, lineno=408, col_offset=25), Num(4294967296, lineno=408, col_offset=46)], [], None, None, lineno=408, col_offset=8), lineno=408, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=409, col_offset=8), 'assertEqual', Load(), lineno=409, col_offset=8), [Call(Name('long', Load(), lineno=409, col_offset=25), [Str('76beigg', lineno=409, col_offset=30), Num(29, lineno=409, col_offset=41)], [], None, None, lineno=409, col_offset=25), Num(4294967296, lineno=409, col_offset=46)], [], None, None, lineno=409, col_offset=8), lineno=409, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=410, col_offset=8), 'assertEqual', Load(), lineno=410, col_offset=8), [Call(Name('long', Load(), lineno=410, col_offset=25), [Str('5qmcpqg', lineno=410, col_offset=30), Num(30, lineno=410, col_offset=41)], [], None, None, lineno=410, col_offset=25), Num(4294967296, lineno=410, col_offset=46)], [], None, None, lineno=410, col_offset=8), lineno=410, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=411, col_offset=8), 'assertEqual', Load(), lineno=411, col_offset=8), [Call(Name('long', Load(), lineno=411, col_offset=25), [Str('4q0jto4', lineno=411, col_offset=30), Num(31, lineno=411, col_offset=41)], [], None, None, lineno=411, col_offset=25), Num(4294967296, lineno=411, col_offset=46)], [], None, None, lineno=411, col_offset=8), lineno=411, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=412, col_offset=8), 'assertEqual', Load(), lineno=412, col_offset=8), [Call(Name('long', Load(), lineno=412, col_offset=25), [Str('4000000', lineno=412, col_offset=30), Num(32, lineno=412, col_offset=41)], [], None, None, lineno=412, col_offset=25), Num(4294967296, lineno=412, col_offset=46)], [], None, None, lineno=412, col_offset=8), lineno=412, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=413, col_offset=8), 'assertEqual', Load(), lineno=413, col_offset=8), [Call(Name('long', Load(), lineno=413, col_offset=25), [Str('3aokq94', lineno=413, col_offset=30), Num(33, lineno=413, col_offset=41)], [], None, None, lineno=413, col_offset=25), Num(4294967296, lineno=413, col_offset=46)], [], None, None, lineno=413, col_offset=8), lineno=413, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=414, col_offset=8), 'assertEqual', Load(), lineno=414, col_offset=8), [Call(Name('long', Load(), lineno=414, col_offset=25), [Str('2qhxjli', lineno=414, col_offset=30), Num(34, lineno=414, col_offset=41)], [], None, None, lineno=414, col_offset=25), Num(4294967296, lineno=414, col_offset=46)], [], None, None, lineno=414, col_offset=8), lineno=414, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=415, col_offset=8), 'assertEqual', Load(), lineno=415, col_offset=8), [Call(Name('long', Load(), lineno=415, col_offset=25), [Str('2br45qb', lineno=415, col_offset=30), Num(35, lineno=415, col_offset=41)], [], None, None, lineno=415, col_offset=25), Num(4294967296, lineno=415, col_offset=46)], [], None, None, lineno=415, col_offset=8), lineno=415, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=416, col_offset=8), 'assertEqual', Load(), lineno=416, col_offset=8), [Call(Name('long', Load(), lineno=416, col_offset=25), [Str('1z141z4', lineno=416, col_offset=30), Num(36, lineno=416, col_offset=41)], [], None, None, lineno=416, col_offset=25), Num(4294967296, lineno=416, col_offset=46)], [], None, None, lineno=416, col_offset=8), lineno=416, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=418, col_offset=8), 'assertEqual', Load(), lineno=418, col_offset=8), [Call(Name('long', Load(), lineno=418, col_offset=25), [Str('100000000000000000000000000000001', lineno=418, col_offset=30), Num(2, lineno=418, col_offset=67)], [], None, None, lineno=418, col_offset=25), Num(4294967297, lineno=419, col_offset=25)], [], None, None, lineno=418, col_offset=8), lineno=418, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=420, col_offset=8), 'assertEqual', Load(), lineno=420, col_offset=8), [Call(Name('long', Load(), lineno=420, col_offset=25), [Str('102002022201221111212', lineno=420, col_offset=30), Num(3, lineno=420, col_offset=55)], [], None, None, lineno=420, col_offset=25), Num(4294967297, lineno=420, col_offset=59)], [], None, None, lineno=420, col_offset=8), lineno=420, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=421, col_offset=8), 'assertEqual', Load(), lineno=421, col_offset=8), [Call(Name('long', Load(), lineno=421, col_offset=25), [Str('10000000000000001', lineno=421, col_offset=30), Num(4, lineno=421, col_offset=51)], [], None, None, lineno=421, col_offset=25), Num(4294967297, lineno=421, col_offset=55)], [], None, None, lineno=421, col_offset=8), lineno=421, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=422, col_offset=8), 'assertEqual', Load(), lineno=422, col_offset=8), [Call(Name('long', Load(), lineno=422, col_offset=25), [Str('32244002423142', lineno=422, col_offset=30), Num(5, lineno=422, col_offset=48)], [], None, None, lineno=422, col_offset=25), Num(4294967297, lineno=422, col_offset=52)], [], None, None, lineno=422, col_offset=8), lineno=422, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=423, col_offset=8), 'assertEqual', Load(), lineno=423, col_offset=8), [Call(Name('long', Load(), lineno=423, col_offset=25), [Str('1550104015505', lineno=423, col_offset=30), Num(6, lineno=423, col_offset=47)], [], None, None, lineno=423, col_offset=25), Num(4294967297, lineno=423, col_offset=51)], [], None, None, lineno=423, col_offset=8), lineno=423, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=424, col_offset=8), 'assertEqual', Load(), lineno=424, col_offset=8), [Call(Name('long', Load(), lineno=424, col_offset=25), [Str('211301422355', lineno=424, col_offset=30), Num(7, lineno=424, col_offset=46)], [], None, None, lineno=424, col_offset=25), Num(4294967297, lineno=424, col_offset=50)], [], None, None, lineno=424, col_offset=8), lineno=424, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=425, col_offset=8), 'assertEqual', Load(), lineno=425, col_offset=8), [Call(Name('long', Load(), lineno=425, col_offset=25), [Str('40000000001', lineno=425, col_offset=30), Num(8, lineno=425, col_offset=45)], [], None, None, lineno=425, col_offset=25), Num(4294967297, lineno=425, col_offset=49)], [], None, None, lineno=425, col_offset=8), lineno=425, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=426, col_offset=8), 'assertEqual', Load(), lineno=426, col_offset=8), [Call(Name('long', Load(), lineno=426, col_offset=25), [Str('12068657455', lineno=426, col_offset=30), Num(9, lineno=426, col_offset=45)], [], None, None, lineno=426, col_offset=25), Num(4294967297, lineno=426, col_offset=49)], [], None, None, lineno=426, col_offset=8), lineno=426, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=427, col_offset=8), 'assertEqual', Load(), lineno=427, col_offset=8), [Call(Name('long', Load(), lineno=427, col_offset=25), [Str('4294967297', lineno=427, col_offset=30), Num(10, lineno=427, col_offset=44)], [], None, None, lineno=427, col_offset=25), Num(4294967297, lineno=427, col_offset=49)], [], None, None, lineno=427, col_offset=8), lineno=427, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=428, col_offset=8), 'assertEqual', Load(), lineno=428, col_offset=8), [Call(Name('long', Load(), lineno=428, col_offset=25), [Str('1904440555', lineno=428, col_offset=30), Num(11, lineno=428, col_offset=44)], [], None, None, lineno=428, col_offset=25), Num(4294967297, lineno=428, col_offset=49)], [], None, None, lineno=428, col_offset=8), lineno=428, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=429, col_offset=8), 'assertEqual', Load(), lineno=429, col_offset=8), [Call(Name('long', Load(), lineno=429, col_offset=25), [Str('9ba461595', lineno=429, col_offset=30), Num(12, lineno=429, col_offset=43)], [], None, None, lineno=429, col_offset=25), Num(4294967297, lineno=429, col_offset=48)], [], None, None, lineno=429, col_offset=8), lineno=429, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=430, col_offset=8), 'assertEqual', Load(), lineno=430, col_offset=8), [Call(Name('long', Load(), lineno=430, col_offset=25), [Str('535a7988a', lineno=430, col_offset=30), Num(13, lineno=430, col_offset=43)], [], None, None, lineno=430, col_offset=25), Num(4294967297, lineno=430, col_offset=48)], [], None, None, lineno=430, col_offset=8), lineno=430, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=431, col_offset=8), 'assertEqual', Load(), lineno=431, col_offset=8), [Call(Name('long', Load(), lineno=431, col_offset=25), [Str('2ca5b7465', lineno=431, col_offset=30), Num(14, lineno=431, col_offset=43)], [], None, None, lineno=431, col_offset=25), Num(4294967297, lineno=431, col_offset=48)], [], None, None, lineno=431, col_offset=8), lineno=431, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=432, col_offset=8), 'assertEqual', Load(), lineno=432, col_offset=8), [Call(Name('long', Load(), lineno=432, col_offset=25), [Str('1a20dcd82', lineno=432, col_offset=30), Num(15, lineno=432, col_offset=43)], [], None, None, lineno=432, col_offset=25), Num(4294967297, lineno=432, col_offset=48)], [], None, None, lineno=432, col_offset=8), lineno=432, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=433, col_offset=8), 'assertEqual', Load(), lineno=433, col_offset=8), [Call(Name('long', Load(), lineno=433, col_offset=25), [Str('100000001', lineno=433, col_offset=30), Num(16, lineno=433, col_offset=43)], [], None, None, lineno=433, col_offset=25), Num(4294967297, lineno=433, col_offset=48)], [], None, None, lineno=433, col_offset=8), lineno=433, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=434, col_offset=8), 'assertEqual', Load(), lineno=434, col_offset=8), [Call(Name('long', Load(), lineno=434, col_offset=25), [Str('a7ffda92', lineno=434, col_offset=30), Num(17, lineno=434, col_offset=42)], [], None, None, lineno=434, col_offset=25), Num(4294967297, lineno=434, col_offset=47)], [], None, None, lineno=434, col_offset=8), lineno=434, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=435, col_offset=8), 'assertEqual', Load(), lineno=435, col_offset=8), [Call(Name('long', Load(), lineno=435, col_offset=25), [Str('704he7g5', lineno=435, col_offset=30), Num(18, lineno=435, col_offset=42)], [], None, None, lineno=435, col_offset=25), Num(4294967297, lineno=435, col_offset=47)], [], None, None, lineno=435, col_offset=8), lineno=435, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=436, col_offset=8), 'assertEqual', Load(), lineno=436, col_offset=8), [Call(Name('long', Load(), lineno=436, col_offset=25), [Str('4f5aff67', lineno=436, col_offset=30), Num(19, lineno=436, col_offset=42)], [], None, None, lineno=436, col_offset=25), Num(4294967297, lineno=436, col_offset=47)], [], None, None, lineno=436, col_offset=8), lineno=436, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=437, col_offset=8), 'assertEqual', Load(), lineno=437, col_offset=8), [Call(Name('long', Load(), lineno=437, col_offset=25), [Str('3723ai4h', lineno=437, col_offset=30), Num(20, lineno=437, col_offset=42)], [], None, None, lineno=437, col_offset=25), Num(4294967297, lineno=437, col_offset=47)], [], None, None, lineno=437, col_offset=8), lineno=437, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=438, col_offset=8), 'assertEqual', Load(), lineno=438, col_offset=8), [Call(Name('long', Load(), lineno=438, col_offset=25), [Str('281d55i5', lineno=438, col_offset=30), Num(21, lineno=438, col_offset=42)], [], None, None, lineno=438, col_offset=25), Num(4294967297, lineno=438, col_offset=47)], [], None, None, lineno=438, col_offset=8), lineno=438, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=439, col_offset=8), 'assertEqual', Load(), lineno=439, col_offset=8), [Call(Name('long', Load(), lineno=439, col_offset=25), [Str('1fj8b185', lineno=439, col_offset=30), Num(22, lineno=439, col_offset=42)], [], None, None, lineno=439, col_offset=25), Num(4294967297, lineno=439, col_offset=47)], [], None, None, lineno=439, col_offset=8), lineno=439, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=440, col_offset=8), 'assertEqual', Load(), lineno=440, col_offset=8), [Call(Name('long', Load(), lineno=440, col_offset=25), [Str('1606k7id', lineno=440, col_offset=30), Num(23, lineno=440, col_offset=42)], [], None, None, lineno=440, col_offset=25), Num(4294967297, lineno=440, col_offset=47)], [], None, None, lineno=440, col_offset=8), lineno=440, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=441, col_offset=8), 'assertEqual', Load(), lineno=441, col_offset=8), [Call(Name('long', Load(), lineno=441, col_offset=25), [Str('mb994ah', lineno=441, col_offset=30), Num(24, lineno=441, col_offset=41)], [], None, None, lineno=441, col_offset=25), Num(4294967297, lineno=441, col_offset=46)], [], None, None, lineno=441, col_offset=8), lineno=441, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=442, col_offset=8), 'assertEqual', Load(), lineno=442, col_offset=8), [Call(Name('long', Load(), lineno=442, col_offset=25), [Str('hek2mgm', lineno=442, col_offset=30), Num(25, lineno=442, col_offset=41)], [], None, None, lineno=442, col_offset=25), Num(4294967297, lineno=442, col_offset=46)], [], None, None, lineno=442, col_offset=8), lineno=442, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=443, col_offset=8), 'assertEqual', Load(), lineno=443, col_offset=8), [Call(Name('long', Load(), lineno=443, col_offset=25), [Str('dnchbnn', lineno=443, col_offset=30), Num(26, lineno=443, col_offset=41)], [], None, None, lineno=443, col_offset=25), Num(4294967297, lineno=443, col_offset=46)], [], None, None, lineno=443, col_offset=8), lineno=443, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=444, col_offset=8), 'assertEqual', Load(), lineno=444, col_offset=8), [Call(Name('long', Load(), lineno=444, col_offset=25), [Str('b28jpdn', lineno=444, col_offset=30), Num(27, lineno=444, col_offset=41)], [], None, None, lineno=444, col_offset=25), Num(4294967297, lineno=444, col_offset=46)], [], None, None, lineno=444, col_offset=8), lineno=444, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=445, col_offset=8), 'assertEqual', Load(), lineno=445, col_offset=8), [Call(Name('long', Load(), lineno=445, col_offset=25), [Str('8pfgih5', lineno=445, col_offset=30), Num(28, lineno=445, col_offset=41)], [], None, None, lineno=445, col_offset=25), Num(4294967297, lineno=445, col_offset=46)], [], None, None, lineno=445, col_offset=8), lineno=445, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=446, col_offset=8), 'assertEqual', Load(), lineno=446, col_offset=8), [Call(Name('long', Load(), lineno=446, col_offset=25), [Str('76beigh', lineno=446, col_offset=30), Num(29, lineno=446, col_offset=41)], [], None, None, lineno=446, col_offset=25), Num(4294967297, lineno=446, col_offset=46)], [], None, None, lineno=446, col_offset=8), lineno=446, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=447, col_offset=8), 'assertEqual', Load(), lineno=447, col_offset=8), [Call(Name('long', Load(), lineno=447, col_offset=25), [Str('5qmcpqh', lineno=447, col_offset=30), Num(30, lineno=447, col_offset=41)], [], None, None, lineno=447, col_offset=25), Num(4294967297, lineno=447, col_offset=46)], [], None, None, lineno=447, col_offset=8), lineno=447, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=448, col_offset=8), 'assertEqual', Load(), lineno=448, col_offset=8), [Call(Name('long', Load(), lineno=448, col_offset=25), [Str('4q0jto5', lineno=448, col_offset=30), Num(31, lineno=448, col_offset=41)], [], None, None, lineno=448, col_offset=25), Num(4294967297, lineno=448, col_offset=46)], [], None, None, lineno=448, col_offset=8), lineno=448, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=449, col_offset=8), 'assertEqual', Load(), lineno=449, col_offset=8), [Call(Name('long', Load(), lineno=449, col_offset=25), [Str('4000001', lineno=449, col_offset=30), Num(32, lineno=449, col_offset=41)], [], None, None, lineno=449, col_offset=25), Num(4294967297, lineno=449, col_offset=46)], [], None, None, lineno=449, col_offset=8), lineno=449, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=450, col_offset=8), 'assertEqual', Load(), lineno=450, col_offset=8), [Call(Name('long', Load(), lineno=450, col_offset=25), [Str('3aokq95', lineno=450, col_offset=30), Num(33, lineno=450, col_offset=41)], [], None, None, lineno=450, col_offset=25), Num(4294967297, lineno=450, col_offset=46)], [], None, None, lineno=450, col_offset=8), lineno=450, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=451, col_offset=8), 'assertEqual', Load(), lineno=451, col_offset=8), [Call(Name('long', Load(), lineno=451, col_offset=25), [Str('2qhxjlj', lineno=451, col_offset=30), Num(34, lineno=451, col_offset=41)], [], None, None, lineno=451, col_offset=25), Num(4294967297, lineno=451, col_offset=46)], [], None, None, lineno=451, col_offset=8), lineno=451, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=452, col_offset=8), 'assertEqual', Load(), lineno=452, col_offset=8), [Call(Name('long', Load(), lineno=452, col_offset=25), [Str('2br45qc', lineno=452, col_offset=30), Num(35, lineno=452, col_offset=41)], [], None, None, lineno=452, col_offset=25), Num(4294967297, lineno=452, col_offset=46)], [], None, None, lineno=452, col_offset=8), lineno=452, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=453, col_offset=8), 'assertEqual', Load(), lineno=453, col_offset=8), [Call(Name('long', Load(), lineno=453, col_offset=25), [Str('1z141z5', lineno=453, col_offset=30), Num(36, lineno=453, col_offset=41)], [], None, None, lineno=453, col_offset=25), Num(4294967297, lineno=453, col_offset=46)], [], None, None, lineno=453, col_offset=8), lineno=453, col_offset=8)], [], lineno=308, col_offset=4), FunctionDef('test_conversion', arguments([Name('self', Param(), lineno=456, col_offset=24)], None, None, []), [ClassDef('ClassicMissingMethods', [], [Pass( lineno=459, col_offset=12)], [], lineno=458, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=460, col_offset=8), 'assertRaises', Load(), lineno=460, col_offset=8), [Name('AttributeError', Load(), lineno=460, col_offset=26), Name('long', Load(), lineno=460, col_offset=42), Call(Name('ClassicMissingMethods', Load(), lineno=460, col_offset=48), [], [], None, None, lineno=460, col_offset=48)], [], None, None, lineno=460, col_offset=8), lineno=460, col_offset=8), ClassDef('MissingMethods', [Name('object', Load(), lineno=462, col_offset=29)], [Pass( lineno=463, col_offset=12)], [], lineno=462, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=464, col_offset=8), 'assertRaises', Load(), lineno=464, col_offset=8), [Name('TypeError', Load(), lineno=464, col_offset=26), Name('long', Load(), lineno=464, col_offset=37), Call(Name('MissingMethods', Load(), lineno=464, col_offset=43), [], [], None, None, lineno=464, col_offset=43)], [], None, None, lineno=464, col_offset=8), lineno=464, col_offset=8), ClassDef('Foo0', [], [FunctionDef('__long__', arguments([Name('self', Param(), lineno=467, col_offset=25)], None, None, []), [Return(Num(42L, lineno=468, col_offset=23), lineno=468, col_offset=16)], [], lineno=467, col_offset=12)], [], lineno=466, col_offset=8), ClassDef('Foo1', [Name('object', Load(), lineno=470, col_offset=19)], [FunctionDef('__long__', arguments([Name('self', Param(), lineno=471, col_offset=25)], None, None, []), [Return(Num(42L, lineno=472, col_offset=23), lineno=472, col_offset=16)], [], lineno=471, col_offset=12)], [], lineno=470, col_offset=8), ClassDef('Foo2', [Name('long', Load(), lineno=474, col_offset=19)], [FunctionDef('__long__', arguments([Name('self', Param(), lineno=475, col_offset=25)], None, None, []), [Return(Num(42L, lineno=476, col_offset=23), lineno=476, col_offset=16)], [], lineno=475, col_offset=12)], [], lineno=474, col_offset=8), ClassDef('Foo3', [Name('long', Load(), lineno=478, col_offset=19)], [FunctionDef('__long__', arguments([Name('self', Param(), lineno=479, col_offset=25)], None, None, []), [Return(Name('self', Load(), lineno=480, col_offset=23), lineno=480, col_offset=16)], [], lineno=479, col_offset=12)], [], lineno=478, col_offset=8), ClassDef('Foo4', [Name('long', Load(), lineno=482, col_offset=19)], [FunctionDef('__long__', arguments([Name('self', Param(), lineno=483, col_offset=25)], None, None, []), [Return(Num(42, lineno=484, col_offset=23), lineno=484, col_offset=16)], [], lineno=483, col_offset=12)], [], lineno=482, col_offset=8), ClassDef('Foo5', [Name('long', Load(), lineno=486, col_offset=19)], [FunctionDef('__long__', arguments([Name('self', Param(), lineno=487, col_offset=25)], None, None, []), [Return(Num(42.0, lineno=488, col_offset=23), lineno=488, col_offset=16)], [], lineno=487, col_offset=12)], [], lineno=486, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=490, col_offset=8), 'assertEqual', Load(), lineno=490, col_offset=8), [Call(Name('long', Load(), lineno=490, col_offset=25), [Call(Name('Foo0', Load(), lineno=490, col_offset=30), [], [], None, None, lineno=490, col_offset=30)], [], None, None, lineno=490, col_offset=25), Num(42L, lineno=490, col_offset=39)], [], None, None, lineno=490, col_offset=8), lineno=490, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=491, col_offset=8), 'assertEqual', Load(), lineno=491, col_offset=8), [Call(Name('long', Load(), lineno=491, col_offset=25), [Call(Name('Foo1', Load(), lineno=491, col_offset=30), [], [], None, None, lineno=491, col_offset=30)], [], None, None, lineno=491, col_offset=25), Num(42L, lineno=491, col_offset=39)], [], None, None, lineno=491, col_offset=8), lineno=491, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=492, col_offset=8), 'assertEqual', Load(), lineno=492, col_offset=8), [Call(Name('long', Load(), lineno=492, col_offset=25), [Call(Name('Foo2', Load(), lineno=492, col_offset=30), [], [], None, None, lineno=492, col_offset=30)], [], None, None, lineno=492, col_offset=25), Num(42L, lineno=492, col_offset=39)], [], None, None, lineno=492, col_offset=8), lineno=492, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=493, col_offset=8), 'assertEqual', Load(), lineno=493, col_offset=8), [Call(Name('long', Load(), lineno=493, col_offset=25), [Call(Name('Foo3', Load(), lineno=493, col_offset=30), [], [], None, None, lineno=493, col_offset=30)], [], None, None, lineno=493, col_offset=25), Num(0, lineno=493, col_offset=39)], [], None, None, lineno=493, col_offset=8), lineno=493, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=494, col_offset=8), 'assertEqual', Load(), lineno=494, col_offset=8), [Call(Name('long', Load(), lineno=494, col_offset=25), [Call(Name('Foo4', Load(), lineno=494, col_offset=30), [], [], None, None, lineno=494, col_offset=30)], [], None, None, lineno=494, col_offset=25), Num(42, lineno=494, col_offset=39)], [], None, None, lineno=494, col_offset=8), lineno=494, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=495, col_offset=8), 'assertRaises', Load(), lineno=495, col_offset=8), [Name('TypeError', Load(), lineno=495, col_offset=26), Name('long', Load(), lineno=495, col_offset=37), Call(Name('Foo5', Load(), lineno=495, col_offset=43), [], [], None, None, lineno=495, col_offset=43)], [], None, None, lineno=495, col_offset=8), lineno=495, col_offset=8), ClassDef('Classic', [], [Pass( lineno=498, col_offset=12)], [], lineno=497, col_offset=8), For(Name('base', Store(), lineno=499, col_offset=12), Tuple([Name('object', Load(), lineno=499, col_offset=21), Name('Classic', Load(), lineno=499, col_offset=29)], Load(), lineno=499, col_offset=21), [ClassDef('LongOverridesTrunc', [Name('base', Load(), lineno=500, col_offset=37)], [FunctionDef('__long__', arguments([Name('self', Param(), lineno=501, col_offset=29)], None, None, []), [Return(Num(42, lineno=502, col_offset=27), lineno=502, col_offset=20)], [], lineno=501, col_offset=16), FunctionDef('__trunc__', arguments([Name('self', Param(), lineno=503, col_offset=30)], None, None, []), [Return(Num(-12, lineno=504, col_offset=28), lineno=504, col_offset=20)], [], lineno=503, col_offset=16)], [], lineno=500, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=505, col_offset=12), 'assertEqual', Load(), lineno=505, col_offset=12), [Call(Name('long', Load(), lineno=505, col_offset=29), [Call(Name('LongOverridesTrunc', Load(), lineno=505, col_offset=34), [], [], None, None, lineno=505, col_offset=34)], [], None, None, lineno=505, col_offset=29), Num(42, lineno=505, col_offset=57)], [], None, None, lineno=505, col_offset=12), lineno=505, col_offset=12), ClassDef('JustTrunc', [Name('base', Load(), lineno=507, col_offset=28)], [FunctionDef('__trunc__', arguments([Name('self', Param(), lineno=508, col_offset=30)], None, None, []), [Return(Num(42, lineno=509, col_offset=27), lineno=509, col_offset=20)], [], lineno=508, col_offset=16)], [], lineno=507, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=510, col_offset=12), 'assertEqual', Load(), lineno=510, col_offset=12), [Call(Name('long', Load(), lineno=510, col_offset=29), [Call(Name('JustTrunc', Load(), lineno=510, col_offset=34), [], [], None, None, lineno=510, col_offset=34)], [], None, None, lineno=510, col_offset=29), Num(42, lineno=510, col_offset=48)], [], None, None, lineno=510, col_offset=12), lineno=510, col_offset=12), For(Name('trunc_result_base', Store(), lineno=512, col_offset=16), Tuple([Name('object', Load(), lineno=512, col_offset=38), Name('Classic', Load(), lineno=512, col_offset=46)], Load(), lineno=512, col_offset=38), [ClassDef('Integral', [Name('trunc_result_base', Load(), lineno=513, col_offset=31)], [FunctionDef('__int__', arguments([Name('self', Param(), lineno=514, col_offset=32)], None, None, []), [Return(Num(42, lineno=515, col_offset=31), lineno=515, col_offset=24)], [], lineno=514, col_offset=20)], [], lineno=513, col_offset=16), ClassDef('TruncReturnsNonLong', [Name('base', Load(), lineno=517, col_offset=42)], [FunctionDef('__trunc__', arguments([Name('self', Param(), lineno=518, col_offset=34)], None, None, []), [Return(Call(Name('Integral', Load(), lineno=519, col_offset=31), [], [], None, None, lineno=519, col_offset=31), lineno=519, col_offset=24)], [], lineno=518, col_offset=20)], [], lineno=517, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=520, col_offset=16), 'assertEqual', Load(), lineno=520, col_offset=16), [Call(Name('long', Load(), lineno=520, col_offset=33), [Call(Name('TruncReturnsNonLong', Load(), lineno=520, col_offset=38), [], [], None, None, lineno=520, col_offset=38)], [], None, None, lineno=520, col_offset=33), Num(42, lineno=520, col_offset=62)], [], None, None, lineno=520, col_offset=16), lineno=520, col_offset=16), ClassDef('NonIntegral', [Name('trunc_result_base', Load(), lineno=522, col_offset=34)], [FunctionDef('__trunc__', arguments([Name('self', Param(), lineno=523, col_offset=34)], None, None, []), [Return(Call(Name('NonIntegral', Load(), lineno=525, col_offset=31), [], [], None, None, lineno=525, col_offset=31), lineno=525, col_offset=24)], [], lineno=523, col_offset=20)], [], lineno=522, col_offset=16), ClassDef('TruncReturnsNonIntegral', [Name('base', Load(), lineno=527, col_offset=46)], [FunctionDef('__trunc__', arguments([Name('self', Param(), lineno=528, col_offset=34)], None, None, []), [Return(Call(Name('NonIntegral', Load(), lineno=529, col_offset=31), [], [], None, None, lineno=529, col_offset=31), lineno=529, col_offset=24)], [], lineno=528, col_offset=20)], [], lineno=527, col_offset=16), TryExcept([Expr(Call(Name('long', Load(), lineno=531, col_offset=20), [Call(Name('TruncReturnsNonIntegral', Load(), lineno=531, col_offset=25), [], [], None, None, lineno=531, col_offset=25)], [], None, None, lineno=531, col_offset=20), lineno=531, col_offset=20)], [ExceptHandler(Name('TypeError', Load(), lineno=532, col_offset=23), Name('e', Store(), lineno=532, col_offset=36), [Expr(Call(Attribute(Name('self', Load(), lineno=533, col_offset=20), 'assertEqual', Load(), lineno=533, col_offset=20), [Call(Name('str', Load(), lineno=533, col_offset=37), [Name('e', Load(), lineno=533, col_offset=41)], [], None, None, lineno=533, col_offset=37), Str('__trunc__ returned non-Integral (type NonIntegral)', lineno=534, col_offset=37)], [], None, None, lineno=533, col_offset=20), lineno=533, col_offset=20)], lineno=532, col_offset=16)], [Expr(Call(Attribute(Name('self', Load(), lineno=537, col_offset=20), 'fail', Load(), lineno=537, col_offset=20), [BinOp(Str('Failed to raise TypeError with %s', lineno=537, col_offset=30), Mod(), Tuple([Tuple([Name('base', Load(), lineno=538, col_offset=32), Name('trunc_result_base', Load(), lineno=538, col_offset=38)], Load(), lineno=538, col_offset=32)], Load(), lineno=538, col_offset=31), lineno=537, col_offset=30)], [], None, None, lineno=537, col_offset=20), lineno=537, col_offset=20)], lineno=530, col_offset=16)], [], lineno=512, col_offset=12)], [], lineno=499, col_offset=8)], [], lineno=456, col_offset=4), FunctionDef('test_misc', arguments([Name('self', Param(), lineno=540, col_offset=18)], None, None, []), [Assign([Name('hugepos', Store(), lineno=543, col_offset=8)], Attribute(Name('sys', Load(), lineno=543, col_offset=18), 'maxint', Load(), lineno=543, col_offset=18), lineno=543, col_offset=8), Assign([Name('hugeneg', Store(), lineno=544, col_offset=8)], BinOp(UnaryOp(USub(), Name('hugepos', Load(), lineno=544, col_offset=19), lineno=544, col_offset=18), Sub(), Num(1, lineno=544, col_offset=29), lineno=544, col_offset=18), lineno=544, col_offset=8), Assign([Name('hugepos_aslong', Store(), lineno=545, col_offset=8)], Call(Name('long', Load(), lineno=545, col_offset=25), [Name('hugepos', Load(), lineno=545, col_offset=30)], [], None, None, lineno=545, col_offset=25), lineno=545, col_offset=8), Assign([Name('hugeneg_aslong', Store(), lineno=546, col_offset=8)], Call(Name('long', Load(), lineno=546, col_offset=25), [Name('hugeneg', Load(), lineno=546, col_offset=30)], [], None, None, lineno=546, col_offset=25), lineno=546, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=547, col_offset=8), 'assertEqual', Load(), lineno=547, col_offset=8), [Name('hugepos', Load(), lineno=547, col_offset=25), Name('hugepos_aslong', Load(), lineno=547, col_offset=34), Str('long(sys.maxint) != sys.maxint', lineno=547, col_offset=50)], [], None, None, lineno=547, col_offset=8), lineno=547, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=548, col_offset=8), 'assertEqual', Load(), lineno=548, col_offset=8), [Name('hugeneg', Load(), lineno=548, col_offset=25), Name('hugeneg_aslong', Load(), lineno=548, col_offset=34), Str('long(-sys.maxint-1) != -sys.maxint-1', lineno=549, col_offset=12)], [], None, None, lineno=548, col_offset=8), lineno=548, col_offset=8), Assign([Name('x', Store(), lineno=552, col_offset=8)], Call(Name('int', Load(), lineno=552, col_offset=12), [Name('hugepos_aslong', Load(), lineno=552, col_offset=16)], [], None, None, lineno=552, col_offset=12), lineno=552, col_offset=8), TryExcept([Expr(Call(Attribute(Name('self', Load(), lineno=554, col_offset=12), 'assertEqual', Load(), lineno=554, col_offset=12), [Name('x', Load(), lineno=554, col_offset=29), Name('hugepos', Load(), lineno=554, col_offset=32), Str('converting sys.maxint to long and back to int fails', lineno=555, col_offset=18)], [], None, None, lineno=554, col_offset=12), lineno=554, col_offset=12)], [ExceptHandler(Name('OverflowError', Load(), lineno=556, col_offset=15), None, [Expr(Call(Attribute(Name('self', Load(), lineno=557, col_offset=12), 'fail', Load(), lineno=557, col_offset=12), [Str('int(long(sys.maxint)) overflowed!', lineno=557, col_offset=22)], [], None, None, lineno=557, col_offset=12), lineno=557, col_offset=12)], lineno=556, col_offset=8)], [], lineno=553, col_offset=8), If(UnaryOp(Not(), Call(Name('isinstance', Load(), lineno=558, col_offset=15), [Name('x', Load(), lineno=558, col_offset=26), Name('int', Load(), lineno=558, col_offset=29)], [], None, None, lineno=558, col_offset=15), lineno=558, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=559, col_offset=12), 'fail', Load(), lineno=559, col_offset=12), [Str('int(long(sys.maxint)) should have returned int', lineno=559, col_offset=22)], [], None, None, lineno=559, col_offset=12), lineno=559, col_offset=12)], [], lineno=558, col_offset=8), Assign([Name('x', Store(), lineno=560, col_offset=8)], Call(Name('int', Load(), lineno=560, col_offset=12), [Name('hugeneg_aslong', Load(), lineno=560, col_offset=16)], [], None, None, lineno=560, col_offset=12), lineno=560, col_offset=8), TryExcept([Expr(Call(Attribute(Name('self', Load(), lineno=562, col_offset=12), 'assertEqual', Load(), lineno=562, col_offset=12), [Name('x', Load(), lineno=562, col_offset=29), Name('hugeneg', Load(), lineno=562, col_offset=32), Str('converting -sys.maxint-1 to long and back to int fails', lineno=563, col_offset=18)], [], None, None, lineno=562, col_offset=12), lineno=562, col_offset=12)], [ExceptHandler(Name('OverflowError', Load(), lineno=564, col_offset=15), None, [Expr(Call(Attribute(Name('self', Load(), lineno=565, col_offset=12), 'fail', Load(), lineno=565, col_offset=12), [Str('int(long(-sys.maxint-1)) overflowed!', lineno=565, col_offset=22)], [], None, None, lineno=565, col_offset=12), lineno=565, col_offset=12)], lineno=564, col_offset=8)], [], lineno=561, col_offset=8), If(UnaryOp(Not(), Call(Name('isinstance', Load(), lineno=566, col_offset=15), [Name('x', Load(), lineno=566, col_offset=26), Name('int', Load(), lineno=566, col_offset=29)], [], None, None, lineno=566, col_offset=15), lineno=566, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=567, col_offset=12), 'fail', Load(), lineno=567, col_offset=12), [Str('int(long(-sys.maxint-1)) should have returned int', lineno=567, col_offset=22)], [], None, None, lineno=567, col_offset=12), lineno=567, col_offset=12)], [], lineno=566, col_offset=8), Assign([Name('x', Store(), lineno=569, col_offset=8)], BinOp(Name('hugepos_aslong', Load(), lineno=569, col_offset=12), Add(), Num(1, lineno=569, col_offset=29), lineno=569, col_offset=12), lineno=569, col_offset=8), TryExcept([Assign([Name('y', Store(), lineno=571, col_offset=12)], Call(Name('int', Load(), lineno=571, col_offset=16), [Name('x', Load(), lineno=571, col_offset=20)], [], None, None, lineno=571, col_offset=16), lineno=571, col_offset=12)], [ExceptHandler(Name('OverflowError', Load(), lineno=572, col_offset=15), None, [Expr(Call(Attribute(Name('self', Load(), lineno=573, col_offset=12), 'fail', Load(), lineno=573, col_offset=12), [Str("int(long(sys.maxint) + 1) mustn't overflow", lineno=573, col_offset=22)], [], None, None, lineno=573, col_offset=12), lineno=573, col_offset=12)], lineno=572, col_offset=8)], [], lineno=570, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=574, col_offset=8), 'assertIsInstance', Load(), lineno=574, col_offset=8), [Name('y', Load(), lineno=574, col_offset=30), Name('long', Load(), lineno=574, col_offset=33), Str('int(long(sys.maxint) + 1) should have returned long', lineno=575, col_offset=12)], [], None, None, lineno=574, col_offset=8), lineno=574, col_offset=8), Assign([Name('x', Store(), lineno=577, col_offset=8)], BinOp(Name('hugeneg_aslong', Load(), lineno=577, col_offset=12), Sub(), Num(1, lineno=577, col_offset=29), lineno=577, col_offset=12), lineno=577, col_offset=8), TryExcept([Assign([Name('y', Store(), lineno=579, col_offset=12)], Call(Name('int', Load(), lineno=579, col_offset=16), [Name('x', Load(), lineno=579, col_offset=20)], [], None, None, lineno=579, col_offset=16), lineno=579, col_offset=12)], [ExceptHandler(Name('OverflowError', Load(), lineno=580, col_offset=15), None, [Expr(Call(Attribute(Name('self', Load(), lineno=581, col_offset=12), 'fail', Load(), lineno=581, col_offset=12), [Str("int(long(-sys.maxint-1) - 1) mustn't overflow", lineno=581, col_offset=22)], [], None, None, lineno=581, col_offset=12), lineno=581, col_offset=12)], lineno=580, col_offset=8)], [], lineno=578, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=582, col_offset=8), 'assertIsInstance', Load(), lineno=582, col_offset=8), [Name('y', Load(), lineno=582, col_offset=30), Name('long', Load(), lineno=582, col_offset=33), Str('int(long(-sys.maxint-1) - 1) should have returned long', lineno=583, col_offset=15)], [], None, None, lineno=582, col_offset=8), lineno=582, col_offset=8), ClassDef('long2', [Name('long', Load(), lineno=585, col_offset=20)], [Pass( lineno=586, col_offset=12)], [], lineno=585, col_offset=8), Assign([Name('x', Store(), lineno=587, col_offset=8)], Call(Name('long2', Load(), lineno=587, col_offset=12), [BinOp(Num(1L, lineno=587, col_offset=18), LShift(), Num(100, lineno=587, col_offset=22), lineno=587, col_offset=18)], [], None, None, lineno=587, col_offset=12), lineno=587, col_offset=8), Assign([Name('y', Store(), lineno=588, col_offset=8)], Call(Name('int', Load(), lineno=588, col_offset=12), [Name('x', Load(), lineno=588, col_offset=16)], [], None, None, lineno=588, col_offset=12), lineno=588, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=589, col_offset=8), 'assertTrue', Load(), lineno=589, col_offset=8), [Compare(Call(Name('type', Load(), lineno=589, col_offset=24), [Name('y', Load(), lineno=589, col_offset=29)], [], None, None, lineno=589, col_offset=24), [Is()], [Name('long', Load(), lineno=589, col_offset=35)], lineno=589, col_offset=24), Str('overflowing int conversion must return long not long subtype', lineno=590, col_offset=12)], [], None, None, lineno=589, col_offset=8), lineno=589, col_offset=8), ClassDef('X', [Name('object', Load(), lineno=593, col_offset=16)], [FunctionDef('__getslice__', arguments([Name('self', Param(), lineno=594, col_offset=29), Name('i', Param(), lineno=594, col_offset=35), Name('j', Param(), lineno=594, col_offset=38)], None, None, []), [Return(Tuple([Name('i', Load(), lineno=595, col_offset=23), Name('j', Load(), lineno=595, col_offset=26)], Load(), lineno=595, col_offset=23), lineno=595, col_offset=16)], [], lineno=594, col_offset=12)], [], lineno=593, col_offset=8), With(Call(Attribute(Name('test_support', Load(), lineno=597, col_offset=13), 'check_py3k_warnings', Load(), lineno=597, col_offset=13), [], [], None, None, lineno=597, col_offset=13), None, [Expr(Call(Attribute(Name('self', Load(), lineno=598, col_offset=12), 'assertEqual', Load(), lineno=598, col_offset=12), [Subscript(Call(Name('X', Load(), lineno=598, col_offset=29), [], [], None, None, lineno=598, col_offset=29), Slice(Num(-5L, lineno=598, col_offset=34), Num(7L, lineno=598, col_offset=37), None), Load(), lineno=598, col_offset=29), Tuple([Num(-5, lineno=598, col_offset=44), Num(7, lineno=598, col_offset=47)], Load(), lineno=598, col_offset=43)], [], None, None, lineno=598, col_offset=12), lineno=598, col_offset=12), Assign([Tuple([Name('slicemin', Store(), lineno=601, col_offset=12), Name('slicemax', Store(), lineno=601, col_offset=22)], Store(), lineno=601, col_offset=12)], Subscript(Call(Name('X', Load(), lineno=601, col_offset=33), [], [], None, None, lineno=601, col_offset=33), Slice(UnaryOp(USub(), BinOp(Num(2L, lineno=601, col_offset=38), Pow(), Num(100, lineno=601, col_offset=42), lineno=601, col_offset=38), lineno=601, col_offset=37), BinOp(Num(2L, lineno=601, col_offset=46), Pow(), Num(100, lineno=601, col_offset=50), lineno=601, col_offset=46), None), Load(), lineno=601, col_offset=33), lineno=601, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=602, col_offset=12), 'assertEqual', Load(), lineno=602, col_offset=12), [Subscript(Call(Name('X', Load(), lineno=602, col_offset=29), [], [], None, None, lineno=602, col_offset=29), Slice(Name('slicemin', Load(), lineno=602, col_offset=33), Name('slicemax', Load(), lineno=602, col_offset=42), None), Load(), lineno=602, col_offset=29), Tuple([Name('slicemin', Load(), lineno=602, col_offset=54), Name('slicemax', Load(), lineno=602, col_offset=64)], Load(), lineno=602, col_offset=54)], [], None, None, lineno=602, col_offset=12), lineno=602, col_offset=12)], lineno=597, col_offset=13)], [], lineno=540, col_offset=4), FunctionDef('test_issue9869', arguments([Name('self', Param(), lineno=604, col_offset=23)], None, None, []), [ClassDef('BadLong', [Name('object', Load(), lineno=608, col_offset=22)], [FunctionDef('__long__', arguments([Name('self', Param(), lineno=609, col_offset=25)], None, None, []), [Return(Num(1000000, lineno=610, col_offset=23), lineno=610, col_offset=16)], [], lineno=609, col_offset=12)], [], lineno=608, col_offset=8), ClassDef('MyLong', [Name('long', Load(), lineno=612, col_offset=21)], [Pass( lineno=613, col_offset=12)], [], lineno=612, col_offset=8), Assign([Name('x', Store(), lineno=615, col_offset=8)], Call(Name('MyLong', Load(), lineno=615, col_offset=12), [Call(Name('BadLong', Load(), lineno=615, col_offset=19), [], [], None, None, lineno=615, col_offset=19)], [], None, None, lineno=615, col_offset=12), lineno=615, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=616, col_offset=8), 'assertIsInstance', Load(), lineno=616, col_offset=8), [Name('x', Load(), lineno=616, col_offset=30), Name('long', Load(), lineno=616, col_offset=33)], [], None, None, lineno=616, col_offset=8), lineno=616, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=617, col_offset=8), 'assertEqual', Load(), lineno=617, col_offset=8), [Name('x', Load(), lineno=617, col_offset=25), Num(1000000, lineno=617, col_offset=28)], [], None, None, lineno=617, col_offset=8), lineno=617, col_offset=8)], [], lineno=604, col_offset=4), FunctionDef('test_auto_overflow', arguments([Name('self', Param(), lineno=622, col_offset=27)], None, None, []), [Assign([Name('special', Store(), lineno=623, col_offset=8)], List([Num(0, lineno=623, col_offset=19), Num(1, lineno=623, col_offset=22), Num(2, lineno=623, col_offset=25), Num(3, lineno=623, col_offset=28), BinOp(Attribute(Name('sys', Load(), lineno=623, col_offset=31), 'maxint', Load(), lineno=623, col_offset=31), Sub(), Num(1, lineno=623, col_offset=42), lineno=623, col_offset=31), Attribute(Name('sys', Load(), lineno=623, col_offset=45), 'maxint', Load(), lineno=623, col_offset=45), BinOp(Attribute(Name('sys', Load(), lineno=623, col_offset=57), 'maxint', Load(), lineno=623, col_offset=57), Add(), Num(1, lineno=623, col_offset=68), lineno=623, col_offset=57)], Load(), lineno=623, col_offset=18), lineno=623, col_offset=8), Assign([Name('sqrt', Store(), lineno=624, col_offset=8)], Call(Name('int', Load(), lineno=624, col_offset=15), [Call(Attribute(Name('math', Load(), lineno=624, col_offset=19), 'sqrt', Load(), lineno=624, col_offset=19), [Attribute(Name('sys', Load(), lineno=624, col_offset=29), 'maxint', Load(), lineno=624, col_offset=29)], [], None, None, lineno=624, col_offset=19)], [], None, None, lineno=624, col_offset=15), lineno=624, col_offset=8), Expr(Call(Attribute(Name('special', Load(), lineno=625, col_offset=8), 'extend', Load(), lineno=625, col_offset=8), [List([BinOp(Name('sqrt', Load(), lineno=625, col_offset=24), Sub(), Num(1, lineno=625, col_offset=29), lineno=625, col_offset=24), Name('sqrt', Load(), lineno=625, col_offset=32), BinOp(Name('sqrt', Load(), lineno=625, col_offset=38), Add(), Num(1, lineno=625, col_offset=43), lineno=625, col_offset=38)], Load(), lineno=625, col_offset=23)], [], None, None, lineno=625, col_offset=8), lineno=625, col_offset=8), Expr(Call(Attribute(Name('special', Load(), lineno=626, col_offset=8), 'extend', Load(), lineno=626, col_offset=8), [ListComp(UnaryOp(USub(), Name('i', Load(), lineno=626, col_offset=25), lineno=626, col_offset=24), [comprehension(Name('i', Store(), lineno=626, col_offset=31), Name('special', Load(), lineno=626, col_offset=36), [])], lineno=626, col_offset=24)], [], None, None, lineno=626, col_offset=8), lineno=626, col_offset=8), FunctionDef('checkit', arguments([], 'args', None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=630, col_offset=12), 'assertEqual', Load(), lineno=630, col_offset=12), [Name('got', Load(), lineno=630, col_offset=29), Name('expected', Load(), lineno=630, col_offset=34), Call(Name('Frm', Load(), lineno=631, col_offset=16), [Str('for %r expected %r got %r', lineno=631, col_offset=20), Name('args', Load(), lineno=631, col_offset=49), Name('expected', Load(), lineno=631, col_offset=55), Name('got', Load(), lineno=631, col_offset=65)], [], None, None, lineno=631, col_offset=16)], [], None, None, lineno=630, col_offset=12), lineno=630, col_offset=12)], [], lineno=628, col_offset=8), For(Name('x', Store(), lineno=633, col_offset=12), Name('special', Load(), lineno=633, col_offset=17), [Assign([Name('longx', Store(), lineno=634, col_offset=12)], Call(Name('long', Load(), lineno=634, col_offset=20), [Name('x', Load(), lineno=634, col_offset=25)], [], None, None, lineno=634, col_offset=20), lineno=634, col_offset=12), Assign([Name('expected', Store(), lineno=636, col_offset=12)], UnaryOp(USub(), Name('longx', Load(), lineno=636, col_offset=24), lineno=636, col_offset=23), lineno=636, col_offset=12), Assign([Name('got', Store(), lineno=637, col_offset=12)], UnaryOp(USub(), Name('x', Load(), lineno=637, col_offset=19), lineno=637, col_offset=18), lineno=637, col_offset=12), Expr(Call(Name('checkit', Load(), lineno=638, col_offset=12), [Str('-', lineno=638, col_offset=20), Name('x', Load(), lineno=638, col_offset=25)], [], None, None, lineno=638, col_offset=12), lineno=638, col_offset=12), For(Name('y', Store(), lineno=640, col_offset=16), Name('special', Load(), lineno=640, col_offset=21), [Assign([Name('longy', Store(), lineno=641, col_offset=16)], Call(Name('long', Load(), lineno=641, col_offset=24), [Name('y', Load(), lineno=641, col_offset=29)], [], None, None, lineno=641, col_offset=24), lineno=641, col_offset=16), Assign([Name('expected', Store(), lineno=643, col_offset=16)], BinOp(Name('longx', Load(), lineno=643, col_offset=27), Add(), Name('longy', Load(), lineno=643, col_offset=35), lineno=643, col_offset=27), lineno=643, col_offset=16), Assign([Name('got', Store(), lineno=644, col_offset=16)], BinOp(Name('x', Load(), lineno=644, col_offset=22), Add(), Name('y', Load(), lineno=644, col_offset=26), lineno=644, col_offset=22), lineno=644, col_offset=16), Expr(Call(Name('checkit', Load(), lineno=645, col_offset=16), [Name('x', Load(), lineno=645, col_offset=24), Str('+', lineno=645, col_offset=27), Name('y', Load(), lineno=645, col_offset=32)], [], None, None, lineno=645, col_offset=16), lineno=645, col_offset=16), Assign([Name('expected', Store(), lineno=647, col_offset=16)], BinOp(Name('longx', Load(), lineno=647, col_offset=27), Sub(), Name('longy', Load(), lineno=647, col_offset=35), lineno=647, col_offset=27), lineno=647, col_offset=16), Assign([Name('got', Store(), lineno=648, col_offset=16)], BinOp(Name('x', Load(), lineno=648, col_offset=22), Sub(), Name('y', Load(), lineno=648, col_offset=26), lineno=648, col_offset=22), lineno=648, col_offset=16), Expr(Call(Name('checkit', Load(), lineno=649, col_offset=16), [Name('x', Load(), lineno=649, col_offset=24), Str('-', lineno=649, col_offset=27), Name('y', Load(), lineno=649, col_offset=32)], [], None, None, lineno=649, col_offset=16), lineno=649, col_offset=16), Assign([Name('expected', Store(), lineno=651, col_offset=16)], BinOp(Name('longx', Load(), lineno=651, col_offset=27), Mult(), Name('longy', Load(), lineno=651, col_offset=35), lineno=651, col_offset=27), lineno=651, col_offset=16), Assign([Name('got', Store(), lineno=652, col_offset=16)], BinOp(Name('x', Load(), lineno=652, col_offset=22), Mult(), Name('y', Load(), lineno=652, col_offset=26), lineno=652, col_offset=22), lineno=652, col_offset=16), Expr(Call(Name('checkit', Load(), lineno=653, col_offset=16), [Name('x', Load(), lineno=653, col_offset=24), Str('*', lineno=653, col_offset=27), Name('y', Load(), lineno=653, col_offset=32)], [], None, None, lineno=653, col_offset=16), lineno=653, col_offset=16), If(Name('y', Load(), lineno=655, col_offset=19), [With(Call(Attribute(Name('test_support', Load(), lineno=656, col_offset=25), 'check_py3k_warnings', Load(), lineno=656, col_offset=25), [], [], None, None, lineno=656, col_offset=25), None, [Assign([Name('expected', Store(), lineno=657, col_offset=24)], BinOp(Name('longx', Load(), lineno=657, col_offset=35), Div(), Name('longy', Load(), lineno=657, col_offset=43), lineno=657, col_offset=35), lineno=657, col_offset=24), Assign([Name('got', Store(), lineno=658, col_offset=24)], BinOp(Name('x', Load(), lineno=658, col_offset=30), Div(), Name('y', Load(), lineno=658, col_offset=34), lineno=658, col_offset=30), lineno=658, col_offset=24)], lineno=656, col_offset=25), Expr(Call(Name('checkit', Load(), lineno=659, col_offset=20), [Name('x', Load(), lineno=659, col_offset=28), Str('/', lineno=659, col_offset=31), Name('y', Load(), lineno=659, col_offset=36)], [], None, None, lineno=659, col_offset=20), lineno=659, col_offset=20), Assign([Name('expected', Store(), lineno=661, col_offset=20)], BinOp(Name('longx', Load(), lineno=661, col_offset=31), FloorDiv(), Name('longy', Load(), lineno=661, col_offset=40), lineno=661, col_offset=31), lineno=661, col_offset=20), Assign([Name('got', Store(), lineno=662, col_offset=20)], BinOp(Name('x', Load(), lineno=662, col_offset=26), FloorDiv(), Name('y', Load(), lineno=662, col_offset=31), lineno=662, col_offset=26), lineno=662, col_offset=20), Expr(Call(Name('checkit', Load(), lineno=663, col_offset=20), [Name('x', Load(), lineno=663, col_offset=28), Str('//', lineno=663, col_offset=31), Name('y', Load(), lineno=663, col_offset=37)], [], None, None, lineno=663, col_offset=20), lineno=663, col_offset=20), Assign([Name('expected', Store(), lineno=665, col_offset=20)], Call(Name('divmod', Load(), lineno=665, col_offset=31), [Name('longx', Load(), lineno=665, col_offset=38), Name('longy', Load(), lineno=665, col_offset=45)], [], None, None, lineno=665, col_offset=31), lineno=665, col_offset=20), Assign([Name('got', Store(), lineno=666, col_offset=20)], Call(Name('divmod', Load(), lineno=666, col_offset=26), [Name('longx', Load(), lineno=666, col_offset=33), Name('longy', Load(), lineno=666, col_offset=40)], [], None, None, lineno=666, col_offset=26), lineno=666, col_offset=20), Expr(Call(Name('checkit', Load(), lineno=667, col_offset=20), [Name('x', Load(), lineno=667, col_offset=28), Str('divmod', lineno=667, col_offset=31), Name('y', Load(), lineno=667, col_offset=41)], [], None, None, lineno=667, col_offset=20), lineno=667, col_offset=20)], [], lineno=655, col_offset=16), If(BoolOp(And(), [Compare(Call(Name('abs', Load(), lineno=669, col_offset=19), [Name('y', Load(), lineno=669, col_offset=23)], [], None, None, lineno=669, col_offset=19), [Lt()], [Num(5, lineno=669, col_offset=28)], lineno=669, col_offset=19), UnaryOp(Not(), BoolOp(And(), [Compare(Name('x', Load(), lineno=669, col_offset=39), [Eq()], [Num(0, lineno=669, col_offset=44)], lineno=669, col_offset=39), Compare(Name('y', Load(), lineno=669, col_offset=50), [Lt()], [Num(0, lineno=669, col_offset=54)], lineno=669, col_offset=50)], lineno=669, col_offset=39), lineno=669, col_offset=34)], lineno=669, col_offset=19), [Assign([Name('expected', Store(), lineno=670, col_offset=20)], BinOp(Name('longx', Load(), lineno=670, col_offset=31), Pow(), Name('longy', Load(), lineno=670, col_offset=40), lineno=670, col_offset=31), lineno=670, col_offset=20), Assign([Name('got', Store(), lineno=671, col_offset=20)], BinOp(Name('x', Load(), lineno=671, col_offset=26), Pow(), Name('y', Load(), lineno=671, col_offset=31), lineno=671, col_offset=26), lineno=671, col_offset=20), Expr(Call(Name('checkit', Load(), lineno=672, col_offset=20), [Name('x', Load(), lineno=672, col_offset=28), Str('**', lineno=672, col_offset=31), Name('y', Load(), lineno=672, col_offset=37)], [], None, None, lineno=672, col_offset=20), lineno=672, col_offset=20), For(Name('z', Store(), lineno=674, col_offset=24), Name('special', Load(), lineno=674, col_offset=29), [If(Compare(Name('z', Load(), lineno=675, col_offset=27), [NotEq()], [Num(0, lineno=675, col_offset=32)], lineno=675, col_offset=27), [If(Compare(Name('y', Load(), lineno=676, col_offset=31), [GtE()], [Num(0, lineno=676, col_offset=36)], lineno=676, col_offset=31), [Assign([Name('expected', Store(), lineno=677, col_offset=32)], Call(Name('pow', Load(), lineno=677, col_offset=43), [Name('longx', Load(), lineno=677, col_offset=47), Name('longy', Load(), lineno=677, col_offset=54), Call(Name('long', Load(), lineno=677, col_offset=61), [Name('z', Load(), lineno=677, col_offset=66)], [], None, None, lineno=677, col_offset=61)], [], None, None, lineno=677, col_offset=43), lineno=677, col_offset=32), Assign([Name('got', Store(), lineno=678, col_offset=32)], Call(Name('pow', Load(), lineno=678, col_offset=38), [Name('x', Load(), lineno=678, col_offset=42), Name('y', Load(), lineno=678, col_offset=45), Name('z', Load(), lineno=678, col_offset=48)], [], None, None, lineno=678, col_offset=38), lineno=678, col_offset=32), Expr(Call(Name('checkit', Load(), lineno=679, col_offset=32), [Str('pow', lineno=679, col_offset=40), Name('x', Load(), lineno=679, col_offset=47), Name('y', Load(), lineno=679, col_offset=50), Str('%', lineno=679, col_offset=53), Name('z', Load(), lineno=679, col_offset=58)], [], None, None, lineno=679, col_offset=32), lineno=679, col_offset=32)], [Expr(Call(Attribute(Name('self', Load(), lineno=681, col_offset=32), 'assertRaises', Load(), lineno=681, col_offset=32), [Name('TypeError', Load(), lineno=681, col_offset=50), Name('pow', Load(), lineno=681, col_offset=61), Name('longx', Load(), lineno=681, col_offset=65), Name('longy', Load(), lineno=681, col_offset=72), Call(Name('long', Load(), lineno=681, col_offset=79), [Name('z', Load(), lineno=681, col_offset=84)], [], None, None, lineno=681, col_offset=79)], [], None, None, lineno=681, col_offset=32), lineno=681, col_offset=32)], lineno=676, col_offset=28)], [], lineno=675, col_offset=24)], [], lineno=674, col_offset=20)], [], lineno=669, col_offset=16)], [], lineno=640, col_offset=12)], [], lineno=633, col_offset=8)], [], lineno=622, col_offset=4), FunctionDef('test_float_conversion', arguments([Name('self', Param(), lineno=685, col_offset=30)], None, None, []), [Import([alias('sys', None)], lineno=686, col_offset=8), Assign([Name('DBL_MAX', Store(), lineno=687, col_offset=8)], Attribute(Attribute(Name('sys', Load(), lineno=687, col_offset=18), 'float_info', Load(), lineno=687, col_offset=18), 'max', Load(), lineno=687, col_offset=18), lineno=687, col_offset=8), Assign([Name('DBL_MAX_EXP', Store(), lineno=688, col_offset=8)], Attribute(Attribute(Name('sys', Load(), lineno=688, col_offset=22), 'float_info', Load(), lineno=688, col_offset=22), 'max_exp', Load(), lineno=688, col_offset=22), lineno=688, col_offset=8), Assign([Name('DBL_MANT_DIG', Store(), lineno=689, col_offset=8)], Attribute(Attribute(Name('sys', Load(), lineno=689, col_offset=23), 'float_info', Load(), lineno=689, col_offset=23), 'mant_dig', Load(), lineno=689, col_offset=23), lineno=689, col_offset=8), Assign([Name('exact_values', Store(), lineno=691, col_offset=8)], List([Num(0L, lineno=691, col_offset=24), Num(1L, lineno=691, col_offset=28), Num(2L, lineno=691, col_offset=32), Call(Name('long', Load(), lineno=692, col_offset=25), [BinOp(BinOp(Num(2, lineno=692, col_offset=30), Pow(), Num(53, lineno=692, col_offset=33), lineno=692, col_offset=30), Sub(), Num(3, lineno=692, col_offset=36), lineno=692, col_offset=30)], [], None, None, lineno=692, col_offset=25), Call(Name('long', Load(), lineno=693, col_offset=25), [BinOp(BinOp(Num(2, lineno=693, col_offset=30), Pow(), Num(53, lineno=693, col_offset=33), lineno=693, col_offset=30), Sub(), Num(2, lineno=693, col_offset=36), lineno=693, col_offset=30)], [], None, None, lineno=693, col_offset=25), Call(Name('long', Load(), lineno=694, col_offset=25), [BinOp(BinOp(Num(2, lineno=694, col_offset=30), Pow(), Num(53, lineno=694, col_offset=33), lineno=694, col_offset=30), Sub(), Num(1, lineno=694, col_offset=36), lineno=694, col_offset=30)], [], None, None, lineno=694, col_offset=25), Call(Name('long', Load(), lineno=695, col_offset=25), [BinOp(Num(2, lineno=695, col_offset=30), Pow(), Num(53, lineno=695, col_offset=33), lineno=695, col_offset=30)], [], None, None, lineno=695, col_offset=25), Call(Name('long', Load(), lineno=696, col_offset=25), [BinOp(BinOp(Num(2, lineno=696, col_offset=30), Pow(), Num(53, lineno=696, col_offset=33), lineno=696, col_offset=30), Add(), Num(2, lineno=696, col_offset=36), lineno=696, col_offset=30)], [], None, None, lineno=696, col_offset=25), Call(Name('long', Load(), lineno=697, col_offset=25), [BinOp(BinOp(Num(2, lineno=697, col_offset=30), Pow(), Num(54, lineno=697, col_offset=33), lineno=697, col_offset=30), Sub(), Num(4, lineno=697, col_offset=36), lineno=697, col_offset=30)], [], None, None, lineno=697, col_offset=25), Call(Name('long', Load(), lineno=698, col_offset=25), [BinOp(BinOp(Num(2, lineno=698, col_offset=30), Pow(), Num(54, lineno=698, col_offset=33), lineno=698, col_offset=30), Sub(), Num(2, lineno=698, col_offset=36), lineno=698, col_offset=30)], [], None, None, lineno=698, col_offset=25), Call(Name('long', Load(), lineno=699, col_offset=25), [BinOp(Num(2, lineno=699, col_offset=30), Pow(), Num(54, lineno=699, col_offset=33), lineno=699, col_offset=30)], [], None, None, lineno=699, col_offset=25), Call(Name('long', Load(), lineno=700, col_offset=25), [BinOp(BinOp(Num(2, lineno=700, col_offset=30), Pow(), Num(54, lineno=700, col_offset=33), lineno=700, col_offset=30), Add(), Num(4, lineno=700, col_offset=36), lineno=700, col_offset=30)], [], None, None, lineno=700, col_offset=25)], Load(), lineno=691, col_offset=23), lineno=691, col_offset=8), For(Name('x', Store(), lineno=701, col_offset=12), Name('exact_values', Load(), lineno=701, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=702, col_offset=12), 'assertEqual', Load(), lineno=702, col_offset=12), [Call(Name('long', Load(), lineno=702, col_offset=29), [Call(Name('float', Load(), lineno=702, col_offset=34), [Name('x', Load(), lineno=702, col_offset=40)], [], None, None, lineno=702, col_offset=34)], [], None, None, lineno=702, col_offset=29), Name('x', Load(), lineno=702, col_offset=45)], [], None, None, lineno=702, col_offset=12), lineno=702, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=703, col_offset=12), 'assertEqual', Load(), lineno=703, col_offset=12), [Call(Name('long', Load(), lineno=703, col_offset=29), [Call(Name('float', Load(), lineno=703, col_offset=34), [UnaryOp(USub(), Name('x', Load(), lineno=703, col_offset=41), lineno=703, col_offset=40)], [], None, None, lineno=703, col_offset=34)], [], None, None, lineno=703, col_offset=29), UnaryOp(USub(), Name('x', Load(), lineno=703, col_offset=47), lineno=703, col_offset=46)], [], None, None, lineno=703, col_offset=12), lineno=703, col_offset=12)], [], lineno=701, col_offset=8), For(Tuple([Name('x', Store(), lineno=706, col_offset=12), Name('y', Store(), lineno=706, col_offset=15)], Store(), lineno=706, col_offset=12), List([Tuple([Num(1, lineno=706, col_offset=22), Num(0, lineno=706, col_offset=25)], Load(), lineno=706, col_offset=22), Tuple([Num(2, lineno=706, col_offset=30), Num(2, lineno=706, col_offset=33)], Load(), lineno=706, col_offset=30), Tuple([Num(3, lineno=706, col_offset=38), Num(4, lineno=706, col_offset=41)], Load(), lineno=706, col_offset=38), Tuple([Num(4, lineno=706, col_offset=46), Num(4, lineno=706, col_offset=49)], Load(), lineno=706, col_offset=46), Tuple([Num(5, lineno=706, col_offset=54), Num(4, lineno=706, col_offset=57)], Load(), lineno=706, col_offset=54), Tuple([Num(6, lineno=706, col_offset=62), Num(6, lineno=706, col_offset=65)], Load(), lineno=706, col_offset=62), Tuple([Num(7, lineno=706, col_offset=70), Num(8, lineno=706, col_offset=73)], Load(), lineno=706, col_offset=70)], Load(), lineno=706, col_offset=20), [For(Name('p', Store(), lineno=707, col_offset=16), Call(Name('xrange', Load(), lineno=707, col_offset=21), [Num(15, lineno=707, col_offset=28)], [], None, None, lineno=707, col_offset=21), [Expr(Call(Attribute(Name('self', Load(), lineno=708, col_offset=16), 'assertEqual', Load(), lineno=708, col_offset=16), [Call(Name('long', Load(), lineno=708, col_offset=33), [Call(Name('float', Load(), lineno=708, col_offset=38), [BinOp(BinOp(Num(2L, lineno=708, col_offset=44), Pow(), Name('p', Load(), lineno=708, col_offset=48), lineno=708, col_offset=44), Mult(), BinOp(BinOp(Num(2, lineno=708, col_offset=51), Pow(), Num(53, lineno=708, col_offset=54), lineno=708, col_offset=51), Add(), Name('x', Load(), lineno=708, col_offset=57), lineno=708, col_offset=51), lineno=708, col_offset=44)], [], None, None, lineno=708, col_offset=38)], [], None, None, lineno=708, col_offset=33), BinOp(BinOp(Num(2L, lineno=708, col_offset=63), Pow(), Name('p', Load(), lineno=708, col_offset=67), lineno=708, col_offset=63), Mult(), BinOp(BinOp(Num(2, lineno=708, col_offset=70), Pow(), Num(53, lineno=708, col_offset=73), lineno=708, col_offset=70), Add(), Name('y', Load(), lineno=708, col_offset=76), lineno=708, col_offset=70), lineno=708, col_offset=63)], [], None, None, lineno=708, col_offset=16), lineno=708, col_offset=16)], [], lineno=707, col_offset=12)], [], lineno=706, col_offset=8), For(Tuple([Name('x', Store(), lineno=710, col_offset=12), Name('y', Store(), lineno=710, col_offset=15)], Store(), lineno=710, col_offset=12), List([Tuple([Num(0, lineno=710, col_offset=22), Num(0, lineno=710, col_offset=25)], Load(), lineno=710, col_offset=22), Tuple([Num(1, lineno=710, col_offset=30), Num(0, lineno=710, col_offset=33)], Load(), lineno=710, col_offset=30), Tuple([Num(2, lineno=710, col_offset=38), Num(0, lineno=710, col_offset=41)], Load(), lineno=710, col_offset=38), Tuple([Num(3, lineno=710, col_offset=46), Num(4, lineno=710, col_offset=49)], Load(), lineno=710, col_offset=46), Tuple([Num(4, lineno=710, col_offset=54), Num(4, lineno=710, col_offset=57)], Load(), lineno=710, col_offset=54), Tuple([Num(5, lineno=710, col_offset=62), Num(4, lineno=710, col_offset=65)], Load(), lineno=710, col_offset=62), Tuple([Num(6, lineno=710, col_offset=70), Num(8, lineno=710, col_offset=73)], Load(), lineno=710, col_offset=70), Tuple([Num(7, lineno=711, col_offset=22), Num(8, lineno=711, col_offset=25)], Load(), lineno=711, col_offset=22), Tuple([Num(8, lineno=711, col_offset=30), Num(8, lineno=711, col_offset=33)], Load(), lineno=711, col_offset=30), Tuple([Num(9, lineno=711, col_offset=38), Num(8, lineno=711, col_offset=41)], Load(), lineno=711, col_offset=38), Tuple([Num(10, lineno=711, col_offset=46), Num(8, lineno=711, col_offset=50)], Load(), lineno=711, col_offset=46), Tuple([Num(11, lineno=711, col_offset=55), Num(12, lineno=711, col_offset=59)], Load(), lineno=711, col_offset=55), Tuple([Num(12, lineno=711, col_offset=65), Num(12, lineno=711, col_offset=69)], Load(), lineno=711, col_offset=65), Tuple([Num(13, lineno=712, col_offset=22), Num(12, lineno=712, col_offset=26)], Load(), lineno=712, col_offset=22), Tuple([Num(14, lineno=712, col_offset=32), Num(16, lineno=712, col_offset=36)], Load(), lineno=712, col_offset=32), Tuple([Num(15, lineno=712, col_offset=42), Num(16, lineno=712, col_offset=46)], Load(), lineno=712, col_offset=42)], Load(), lineno=710, col_offset=20), [For(Name('p', Store(), lineno=713, col_offset=16), Call(Name('xrange', Load(), lineno=713, col_offset=21), [Num(15, lineno=713, col_offset=28)], [], None, None, lineno=713, col_offset=21), [Expr(Call(Attribute(Name('self', Load(), lineno=714, col_offset=16), 'assertEqual', Load(), lineno=714, col_offset=16), [Call(Name('long', Load(), lineno=714, col_offset=33), [Call(Name('float', Load(), lineno=714, col_offset=38), [BinOp(BinOp(Num(2L, lineno=714, col_offset=44), Pow(), Name('p', Load(), lineno=714, col_offset=48), lineno=714, col_offset=44), Mult(), BinOp(BinOp(Num(2, lineno=714, col_offset=51), Pow(), Num(54, lineno=714, col_offset=54), lineno=714, col_offset=51), Add(), Name('x', Load(), lineno=714, col_offset=57), lineno=714, col_offset=51), lineno=714, col_offset=44)], [], None, None, lineno=714, col_offset=38)], [], None, None, lineno=714, col_offset=33), BinOp(BinOp(Num(2L, lineno=714, col_offset=63), Pow(), Name('p', Load(), lineno=714, col_offset=67), lineno=714, col_offset=63), Mult(), BinOp(BinOp(Num(2, lineno=714, col_offset=70), Pow(), Num(54, lineno=714, col_offset=73), lineno=714, col_offset=70), Add(), Name('y', Load(), lineno=714, col_offset=76), lineno=714, col_offset=70), lineno=714, col_offset=63)], [], None, None, lineno=714, col_offset=16), lineno=714, col_offset=16)], [], lineno=713, col_offset=12)], [], lineno=710, col_offset=8), Assign([Name('long_dbl_max', Store(), lineno=717, col_offset=8)], Call(Name('long', Load(), lineno=717, col_offset=23), [Name('DBL_MAX', Load(), lineno=717, col_offset=28)], [], None, None, lineno=717, col_offset=23), lineno=717, col_offset=8), Assign([Name('top_power', Store(), lineno=718, col_offset=8)], BinOp(Num(2, lineno=718, col_offset=20), Pow(), Name('DBL_MAX_EXP', Load(), lineno=718, col_offset=23), lineno=718, col_offset=20), lineno=718, col_offset=8), Assign([Name('halfway', Store(), lineno=719, col_offset=8)], BinOp(BinOp(Name('long_dbl_max', Load(), lineno=719, col_offset=19), Add(), Name('top_power', Load(), lineno=719, col_offset=34), lineno=719, col_offset=19), FloorDiv(), Num(2, lineno=719, col_offset=46), lineno=719, col_offset=18), lineno=719, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=720, col_offset=8), 'assertEqual', Load(), lineno=720, col_offset=8), [Call(Name('float', Load(), lineno=720, col_offset=25), [Name('long_dbl_max', Load(), lineno=720, col_offset=31)], [], None, None, lineno=720, col_offset=25), Name('DBL_MAX', Load(), lineno=720, col_offset=46)], [], None, None, lineno=720, col_offset=8), lineno=720, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=721, col_offset=8), 'assertEqual', Load(), lineno=721, col_offset=8), [Call(Name('float', Load(), lineno=721, col_offset=25), [BinOp(Name('long_dbl_max', Load(), lineno=721, col_offset=31), Add(), Num(1, lineno=721, col_offset=44), lineno=721, col_offset=31)], [], None, None, lineno=721, col_offset=25), Name('DBL_MAX', Load(), lineno=721, col_offset=48)], [], None, None, lineno=721, col_offset=8), lineno=721, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=722, col_offset=8), 'assertEqual', Load(), lineno=722, col_offset=8), [Call(Name('float', Load(), lineno=722, col_offset=25), [BinOp(Name('halfway', Load(), lineno=722, col_offset=31), Sub(), Num(1, lineno=722, col_offset=39), lineno=722, col_offset=31)], [], None, None, lineno=722, col_offset=25), Name('DBL_MAX', Load(), lineno=722, col_offset=43)], [], None, None, lineno=722, col_offset=8), lineno=722, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=723, col_offset=8), 'assertRaises', Load(), lineno=723, col_offset=8), [Name('OverflowError', Load(), lineno=723, col_offset=26), Name('float', Load(), lineno=723, col_offset=41), Name('halfway', Load(), lineno=723, col_offset=48)], [], None, None, lineno=723, col_offset=8), lineno=723, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=724, col_offset=8), 'assertEqual', Load(), lineno=724, col_offset=8), [Call(Name('float', Load(), lineno=724, col_offset=25), [BinOp(Num(1, lineno=724, col_offset=31), Sub(), Name('halfway', Load(), lineno=724, col_offset=33), lineno=724, col_offset=31)], [], None, None, lineno=724, col_offset=25), UnaryOp(USub(), Name('DBL_MAX', Load(), lineno=724, col_offset=44), lineno=724, col_offset=43)], [], None, None, lineno=724, col_offset=8), lineno=724, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=725, col_offset=8), 'assertRaises', Load(), lineno=725, col_offset=8), [Name('OverflowError', Load(), lineno=725, col_offset=26), Name('float', Load(), lineno=725, col_offset=41), UnaryOp(USub(), Name('halfway', Load(), lineno=725, col_offset=49), lineno=725, col_offset=48)], [], None, None, lineno=725, col_offset=8), lineno=725, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=726, col_offset=8), 'assertRaises', Load(), lineno=726, col_offset=8), [Name('OverflowError', Load(), lineno=726, col_offset=26), Name('float', Load(), lineno=726, col_offset=41), BinOp(Name('top_power', Load(), lineno=726, col_offset=48), Sub(), Num(1, lineno=726, col_offset=58), lineno=726, col_offset=48)], [], None, None, lineno=726, col_offset=8), lineno=726, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=727, col_offset=8), 'assertRaises', Load(), lineno=727, col_offset=8), [Name('OverflowError', Load(), lineno=727, col_offset=26), Name('float', Load(), lineno=727, col_offset=41), Name('top_power', Load(), lineno=727, col_offset=48)], [], None, None, lineno=727, col_offset=8), lineno=727, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=728, col_offset=8), 'assertRaises', Load(), lineno=728, col_offset=8), [Name('OverflowError', Load(), lineno=728, col_offset=26), Name('float', Load(), lineno=728, col_offset=41), BinOp(Name('top_power', Load(), lineno=728, col_offset=48), Add(), Num(1, lineno=728, col_offset=58), lineno=728, col_offset=48)], [], None, None, lineno=728, col_offset=8), lineno=728, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=729, col_offset=8), 'assertRaises', Load(), lineno=729, col_offset=8), [Name('OverflowError', Load(), lineno=729, col_offset=26), Name('float', Load(), lineno=729, col_offset=41), BinOp(BinOp(Num(2, lineno=729, col_offset=48), Mult(), Name('top_power', Load(), lineno=729, col_offset=50), lineno=729, col_offset=48), Sub(), Num(1, lineno=729, col_offset=60), lineno=729, col_offset=48)], [], None, None, lineno=729, col_offset=8), lineno=729, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=730, col_offset=8), 'assertRaises', Load(), lineno=730, col_offset=8), [Name('OverflowError', Load(), lineno=730, col_offset=26), Name('float', Load(), lineno=730, col_offset=41), BinOp(Num(2, lineno=730, col_offset=48), Mult(), Name('top_power', Load(), lineno=730, col_offset=50), lineno=730, col_offset=48)], [], None, None, lineno=730, col_offset=8), lineno=730, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=731, col_offset=8), 'assertRaises', Load(), lineno=731, col_offset=8), [Name('OverflowError', Load(), lineno=731, col_offset=26), Name('float', Load(), lineno=731, col_offset=41), BinOp(Name('top_power', Load(), lineno=731, col_offset=48), Mult(), Name('top_power', Load(), lineno=731, col_offset=58), lineno=731, col_offset=48)], [], None, None, lineno=731, col_offset=8), lineno=731, col_offset=8), For(Name('p', Store(), lineno=733, col_offset=12), Call(Name('xrange', Load(), lineno=733, col_offset=17), [Num(100, lineno=733, col_offset=24)], [], None, None, lineno=733, col_offset=17), [Assign([Name('x', Store(), lineno=734, col_offset=12)], Call(Name('long', Load(), lineno=734, col_offset=16), [BinOp(BinOp(BinOp(Num(2, lineno=734, col_offset=21), Pow(), Name('p', Load(), lineno=734, col_offset=24), lineno=734, col_offset=21), Mult(), BinOp(BinOp(Num(2, lineno=734, col_offset=29), Pow(), Num(53, lineno=734, col_offset=32), lineno=734, col_offset=29), Add(), Num(1, lineno=734, col_offset=37), lineno=734, col_offset=29), lineno=734, col_offset=21), Add(), Num(1, lineno=734, col_offset=42), lineno=734, col_offset=21)], [], None, None, lineno=734, col_offset=16), lineno=734, col_offset=12), Assign([Name('y', Store(), lineno=735, col_offset=12)], Call(Name('long', Load(), lineno=735, col_offset=16), [BinOp(BinOp(Num(2, lineno=735, col_offset=21), Pow(), Name('p', Load(), lineno=735, col_offset=24), lineno=735, col_offset=21), Mult(), BinOp(BinOp(Num(2, lineno=735, col_offset=29), Pow(), Num(53, lineno=735, col_offset=32), lineno=735, col_offset=29), Add(), Num(2, lineno=735, col_offset=36), lineno=735, col_offset=29), lineno=735, col_offset=21)], [], None, None, lineno=735, col_offset=16), lineno=735, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=736, col_offset=12), 'assertEqual', Load(), lineno=736, col_offset=12), [Call(Name('long', Load(), lineno=736, col_offset=29), [Call(Name('float', Load(), lineno=736, col_offset=34), [Name('x', Load(), lineno=736, col_offset=40)], [], None, None, lineno=736, col_offset=34)], [], None, None, lineno=736, col_offset=29), Name('y', Load(), lineno=736, col_offset=45)], [], None, None, lineno=736, col_offset=12), lineno=736, col_offset=12), Assign([Name('x', Store(), lineno=738, col_offset=12)], Call(Name('long', Load(), lineno=738, col_offset=16), [BinOp(BinOp(Num(2, lineno=738, col_offset=21), Pow(), Name('p', Load(), lineno=738, col_offset=24), lineno=738, col_offset=21), Mult(), BinOp(BinOp(Num(2, lineno=738, col_offset=29), Pow(), Num(53, lineno=738, col_offset=32), lineno=738, col_offset=29), Add(), Num(1, lineno=738, col_offset=37), lineno=738, col_offset=29), lineno=738, col_offset=21)], [], None, None, lineno=738, col_offset=16), lineno=738, col_offset=12), Assign([Name('y', Store(), lineno=739, col_offset=12)], Call(Name('long', Load(), lineno=739, col_offset=16), [BinOp(BinOp(Num(2, lineno=739, col_offset=21), Pow(), Name('p', Load(), lineno=739, col_offset=24), lineno=739, col_offset=21), Mult(), BinOp(Num(2, lineno=739, col_offset=28), Pow(), Num(53, lineno=739, col_offset=31), lineno=739, col_offset=28), lineno=739, col_offset=21)], [], None, None, lineno=739, col_offset=16), lineno=739, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=740, col_offset=12), 'assertEqual', Load(), lineno=740, col_offset=12), [Call(Name('long', Load(), lineno=740, col_offset=29), [Call(Name('float', Load(), lineno=740, col_offset=34), [Name('x', Load(), lineno=740, col_offset=40)], [], None, None, lineno=740, col_offset=34)], [], None, None, lineno=740, col_offset=29), Name('y', Load(), lineno=740, col_offset=45)], [], None, None, lineno=740, col_offset=12), lineno=740, col_offset=12)], [], lineno=733, col_offset=8)], [Call(Attribute(Name('unittest', Load(), lineno=683, col_offset=5), 'skipUnless', Load(), lineno=683, col_offset=5), [Call(Attribute(Call(Attribute(Name('float', Load(), lineno=683, col_offset=25), '__getformat__', Load(), lineno=683, col_offset=25), [Str('double', lineno=683, col_offset=45)], [], None, None, lineno=683, col_offset=25), 'startswith', Load(), lineno=683, col_offset=25), [Str('IEEE', lineno=683, col_offset=66)], [], None, None, lineno=683, col_offset=25), Str('test requires IEEE 754 doubles', lineno=684, col_offset=25)], [], None, None, lineno=683, col_offset=5)], lineno=683, col_offset=4), FunctionDef('test_float_overflow', arguments([Name('self', Param(), lineno=742, col_offset=28)], None, None, []), [For(Name('x', Store(), lineno=743, col_offset=12), Tuple([Num(-2.0, lineno=743, col_offset=18), Num(-1.0, lineno=743, col_offset=24), Num(0.0, lineno=743, col_offset=29), Num(1.0, lineno=743, col_offset=34), Num(2.0, lineno=743, col_offset=39)], Load(), lineno=743, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=744, col_offset=12), 'assertEqual', Load(), lineno=744, col_offset=12), [Call(Name('float', Load(), lineno=744, col_offset=29), [Call(Name('long', Load(), lineno=744, col_offset=35), [Name('x', Load(), lineno=744, col_offset=40)], [], None, None, lineno=744, col_offset=35)], [], None, None, lineno=744, col_offset=29), Name('x', Load(), lineno=744, col_offset=45)], [], None, None, lineno=744, col_offset=12), lineno=744, col_offset=12)], [], lineno=743, col_offset=8), Assign([Name('shuge', Store(), lineno=746, col_offset=8)], BinOp(Str('12345', lineno=746, col_offset=16), Mult(), Num(120, lineno=746, col_offset=26), lineno=746, col_offset=16), lineno=746, col_offset=8), Assign([Name('huge', Store(), lineno=747, col_offset=8)], BinOp(Num(1L, lineno=747, col_offset=15), LShift(), Num(30000, lineno=747, col_offset=21), lineno=747, col_offset=15), lineno=747, col_offset=8), Assign([Name('mhuge', Store(), lineno=748, col_offset=8)], UnaryOp(USub(), Name('huge', Load(), lineno=748, col_offset=17), lineno=748, col_offset=16), lineno=748, col_offset=8), Assign([Name('namespace', Store(), lineno=749, col_offset=8)], Dict([Str('huge', lineno=749, col_offset=21), Str('mhuge', lineno=749, col_offset=35), Str('shuge', lineno=749, col_offset=51), Str('math', lineno=749, col_offset=67)], [Name('huge', Load(), lineno=749, col_offset=29), Name('mhuge', Load(), lineno=749, col_offset=44), Name('shuge', Load(), lineno=749, col_offset=60), Name('math', Load(), lineno=749, col_offset=75)], lineno=749, col_offset=20), lineno=749, col_offset=8), For(Name('test', Store(), lineno=750, col_offset=12), List([Str('float(huge)', lineno=750, col_offset=21), Str('float(mhuge)', lineno=750, col_offset=36), Str('complex(huge)', lineno=751, col_offset=21), Str('complex(mhuge)', lineno=751, col_offset=38), Str('complex(huge, 1)', lineno=752, col_offset=21), Str('complex(mhuge, 1)', lineno=752, col_offset=41), Str('complex(1, huge)', lineno=753, col_offset=21), Str('complex(1, mhuge)', lineno=753, col_offset=41), Str('1. + huge', lineno=754, col_offset=21), Str('huge + 1.', lineno=754, col_offset=34), Str('1. + mhuge', lineno=754, col_offset=47), Str('mhuge + 1.', lineno=754, col_offset=61), Str('1. - huge', lineno=755, col_offset=21), Str('huge - 1.', lineno=755, col_offset=34), Str('1. - mhuge', lineno=755, col_offset=47), Str('mhuge - 1.', lineno=755, col_offset=61), Str('1. * huge', lineno=756, col_offset=21), Str('huge * 1.', lineno=756, col_offset=34), Str('1. * mhuge', lineno=756, col_offset=47), Str('mhuge * 1.', lineno=756, col_offset=61), Str('1. // huge', lineno=757, col_offset=21), Str('huge // 1.', lineno=757, col_offset=35), Str('1. // mhuge', lineno=757, col_offset=49), Str('mhuge // 1.', lineno=757, col_offset=64), Str('1. / huge', lineno=758, col_offset=21), Str('huge / 1.', lineno=758, col_offset=34), Str('1. / mhuge', lineno=758, col_offset=47), Str('mhuge / 1.', lineno=758, col_offset=61), Str('1. ** huge', lineno=759, col_offset=21), Str('huge ** 1.', lineno=759, col_offset=35), Str('1. ** mhuge', lineno=759, col_offset=49), Str('mhuge ** 1.', lineno=759, col_offset=64), Str('math.sin(huge)', lineno=760, col_offset=21), Str('math.sin(mhuge)', lineno=760, col_offset=39), Str('math.sqrt(huge)', lineno=761, col_offset=21), Str('math.sqrt(mhuge)', lineno=761, col_offset=40), Str('math.floor(huge)', lineno=762, col_offset=21), Str('math.floor(mhuge)', lineno=762, col_offset=41)], Load(), lineno=750, col_offset=20), [Expr(Call(Attribute(Name('self', Load(), lineno=764, col_offset=12), 'assertRaises', Load(), lineno=764, col_offset=12), [Name('OverflowError', Load(), lineno=764, col_offset=30), Name('eval', Load(), lineno=764, col_offset=45), Name('test', Load(), lineno=764, col_offset=51), Name('namespace', Load(), lineno=764, col_offset=57)], [], None, None, lineno=764, col_offset=12), lineno=764, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=768, col_offset=12), 'assertNotEqual', Load(), lineno=768, col_offset=12), [Call(Name('float', Load(), lineno=768, col_offset=32), [Name('shuge', Load(), lineno=768, col_offset=38)], [], None, None, lineno=768, col_offset=32), Call(Name('int', Load(), lineno=768, col_offset=46), [Name('shuge', Load(), lineno=768, col_offset=50)], [], None, None, lineno=768, col_offset=46), Str('float(shuge) should not equal int(shuge)', lineno=769, col_offset=16)], [], None, None, lineno=768, col_offset=12), lineno=768, col_offset=12)], [], lineno=750, col_offset=8)], [], lineno=742, col_offset=4), FunctionDef('test_logs', arguments([Name('self', Param(), lineno=771, col_offset=18)], None, None, []), [Assign([Name('LOG10E', Store(), lineno=772, col_offset=8)], Call(Attribute(Name('math', Load(), lineno=772, col_offset=17), 'log10', Load(), lineno=772, col_offset=17), [Attribute(Name('math', Load(), lineno=772, col_offset=28), 'e', Load(), lineno=772, col_offset=28)], [], None, None, lineno=772, col_offset=17), lineno=772, col_offset=8), For(Name('exp', Store(), lineno=774, col_offset=12), BinOp(Call(Name('range', Load(), lineno=774, col_offset=19), [Num(10, lineno=774, col_offset=25)], [], None, None, lineno=774, col_offset=19), Add(), List([Num(100, lineno=774, col_offset=32), Num(1000, lineno=774, col_offset=37), Num(10000, lineno=774, col_offset=43)], Load(), lineno=774, col_offset=31), lineno=774, col_offset=19), [Assign([Name('value', Store(), lineno=775, col_offset=12)], BinOp(Num(10, lineno=775, col_offset=20), Pow(), Name('exp', Load(), lineno=775, col_offset=26), lineno=775, col_offset=20), lineno=775, col_offset=12), Assign([Name('log10', Store(), lineno=776, col_offset=12)], Call(Attribute(Name('math', Load(), lineno=776, col_offset=20), 'log10', Load(), lineno=776, col_offset=20), [Name('value', Load(), lineno=776, col_offset=31)], [], None, None, lineno=776, col_offset=20), lineno=776, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=777, col_offset=12), 'assertAlmostEqual', Load(), lineno=777, col_offset=12), [Name('log10', Load(), lineno=777, col_offset=35), Name('exp', Load(), lineno=777, col_offset=42)], [], None, None, lineno=777, col_offset=12), lineno=777, col_offset=12), Assign([Name('expected', Store(), lineno=781, col_offset=12)], BinOp(Name('exp', Load(), lineno=781, col_offset=23), Div(), Name('LOG10E', Load(), lineno=781, col_offset=29), lineno=781, col_offset=23), lineno=781, col_offset=12), Assign([Name('log', Store(), lineno=782, col_offset=12)], Call(Attribute(Name('math', Load(), lineno=782, col_offset=18), 'log', Load(), lineno=782, col_offset=18), [Name('value', Load(), lineno=782, col_offset=27)], [], None, None, lineno=782, col_offset=18), lineno=782, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=783, col_offset=12), 'assertAlmostEqual', Load(), lineno=783, col_offset=12), [Name('log', Load(), lineno=783, col_offset=35), Name('expected', Load(), lineno=783, col_offset=40)], [], None, None, lineno=783, col_offset=12), lineno=783, col_offset=12)], [], lineno=774, col_offset=8), For(Name('bad', Store(), lineno=785, col_offset=12), Tuple([UnaryOp(USub(), BinOp(Num(1L, lineno=785, col_offset=21), LShift(), Num(10000, lineno=785, col_offset=27), lineno=785, col_offset=21), lineno=785, col_offset=19), Num(-2L, lineno=785, col_offset=36), Num(0L, lineno=785, col_offset=40)], Load(), lineno=785, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=786, col_offset=12), 'assertRaises', Load(), lineno=786, col_offset=12), [Name('ValueError', Load(), lineno=786, col_offset=30), Attribute(Name('math', Load(), lineno=786, col_offset=42), 'log', Load(), lineno=786, col_offset=42), Name('bad', Load(), lineno=786, col_offset=52)], [], None, None, lineno=786, col_offset=12), lineno=786, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=787, col_offset=12), 'assertRaises', Load(), lineno=787, col_offset=12), [Name('ValueError', Load(), lineno=787, col_offset=30), Attribute(Name('math', Load(), lineno=787, col_offset=42), 'log10', Load(), lineno=787, col_offset=42), Name('bad', Load(), lineno=787, col_offset=54)], [], None, None, lineno=787, col_offset=12), lineno=787, col_offset=12)], [], lineno=785, col_offset=8)], [], lineno=771, col_offset=4), FunctionDef('test_mixed_compares', arguments([Name('self', Param(), lineno=789, col_offset=28)], None, None, []), [Assign([Name('eq', Store(), lineno=790, col_offset=8)], Attribute(Name('self', Load(), lineno=790, col_offset=13), 'assertEqual', Load(), lineno=790, col_offset=13), lineno=790, col_offset=8), ClassDef('Rat', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=798, col_offset=25), Name('value', Param(), lineno=798, col_offset=31)], None, None, []), [If(Call(Name('isinstance', Load(), lineno=799, col_offset=19), [Name('value', Load(), lineno=799, col_offset=30), Tuple([Name('int', Load(), lineno=799, col_offset=38), Name('long', Load(), lineno=799, col_offset=43)], Load(), lineno=799, col_offset=38)], [], None, None, lineno=799, col_offset=19), [Assign([Attribute(Name('self', Load(), lineno=800, col_offset=20), 'n', Store(), lineno=800, col_offset=20)], Name('value', Load(), lineno=800, col_offset=29), lineno=800, col_offset=20), Assign([Attribute(Name('self', Load(), lineno=801, col_offset=20), 'd', Store(), lineno=801, col_offset=20)], Num(1, lineno=801, col_offset=29), lineno=801, col_offset=20)], [If(Call(Name('isinstance', Load(), lineno=802, col_offset=21), [Name('value', Load(), lineno=802, col_offset=32), Name('float', Load(), lineno=802, col_offset=39)], [], None, None, lineno=802, col_offset=21), [Assign([Tuple([Name('f', Store(), lineno=804, col_offset=20), Name('e', Store(), lineno=804, col_offset=23)], Store(), lineno=804, col_offset=20)], Call(Attribute(Name('math', Load(), lineno=804, col_offset=27), 'frexp', Load(), lineno=804, col_offset=27), [Call(Name('abs', Load(), lineno=804, col_offset=38), [Name('value', Load(), lineno=804, col_offset=42)], [], None, None, lineno=804, col_offset=38)], [], None, None, lineno=804, col_offset=27), lineno=804, col_offset=20), Assert(BoolOp(Or(), [Compare(Name('f', Load(), lineno=805, col_offset=27), [Eq()], [Num(0, lineno=805, col_offset=32)], lineno=805, col_offset=27), Compare(Num(0.5, lineno=805, col_offset=37), [LtE(), Lt()], [Name('f', Load(), lineno=805, col_offset=44), Num(1.0, lineno=805, col_offset=48)], lineno=805, col_offset=37)], lineno=805, col_offset=27), None, lineno=805, col_offset=20), Assign([Name('CHUNK', Store(), lineno=811, col_offset=20)], Num(28, lineno=811, col_offset=28), lineno=811, col_offset=20), Assign([Name('top', Store(), lineno=812, col_offset=20)], Num(0, lineno=812, col_offset=26), lineno=812, col_offset=20), While(Name('f', Load(), lineno=814, col_offset=26), [Assign([Name('f', Store(), lineno=815, col_offset=24)], Call(Attribute(Name('math', Load(), lineno=815, col_offset=28), 'ldexp', Load(), lineno=815, col_offset=28), [Name('f', Load(), lineno=815, col_offset=39), Name('CHUNK', Load(), lineno=815, col_offset=42)], [], None, None, lineno=815, col_offset=28), lineno=815, col_offset=24), Assign([Name('digit', Store(), lineno=816, col_offset=24)], Call(Name('int', Load(), lineno=816, col_offset=32), [Name('f', Load(), lineno=816, col_offset=36)], [], None, None, lineno=816, col_offset=32), lineno=816, col_offset=24), Assert(Compare(BinOp(Name('digit', Load(), lineno=817, col_offset=31), RShift(), Name('CHUNK', Load(), lineno=817, col_offset=40), lineno=817, col_offset=31), [Eq()], [Num(0, lineno=817, col_offset=49)], lineno=817, col_offset=31), None, lineno=817, col_offset=24), Assign([Name('top', Store(), lineno=818, col_offset=24)], BinOp(BinOp(Name('top', Load(), lineno=818, col_offset=31), LShift(), Name('CHUNK', Load(), lineno=818, col_offset=38), lineno=818, col_offset=31), BitOr(), Name('digit', Load(), lineno=818, col_offset=47), lineno=818, col_offset=30), lineno=818, col_offset=24), AugAssign(Name('f', Store(), lineno=819, col_offset=24), Sub(), Name('digit', Load(), lineno=819, col_offset=29), lineno=819, col_offset=24), Assert(Compare(Num(0.0, lineno=820, col_offset=31), [LtE(), Lt()], [Name('f', Load(), lineno=820, col_offset=38), Num(1.0, lineno=820, col_offset=42)], lineno=820, col_offset=31), None, lineno=820, col_offset=24), AugAssign(Name('e', Store(), lineno=821, col_offset=24), Sub(), Name('CHUNK', Load(), lineno=821, col_offset=29), lineno=821, col_offset=24)], [], lineno=814, col_offset=20), If(Compare(Name('e', Load(), lineno=824, col_offset=23), [GtE()], [Num(0, lineno=824, col_offset=28)], lineno=824, col_offset=23), [Assign([Name('n', Store(), lineno=825, col_offset=24)], BinOp(Name('top', Load(), lineno=825, col_offset=28), LShift(), Name('e', Load(), lineno=825, col_offset=35), lineno=825, col_offset=28), lineno=825, col_offset=24), Assign([Name('d', Store(), lineno=826, col_offset=24)], Num(1, lineno=826, col_offset=28), lineno=826, col_offset=24)], [Assign([Name('n', Store(), lineno=828, col_offset=24)], Name('top', Load(), lineno=828, col_offset=28), lineno=828, col_offset=24), Assign([Name('d', Store(), lineno=829, col_offset=24)], BinOp(Num(1, lineno=829, col_offset=28), LShift(), UnaryOp(USub(), Name('e', Load(), lineno=829, col_offset=34), lineno=829, col_offset=33), lineno=829, col_offset=28), lineno=829, col_offset=24)], lineno=824, col_offset=20), If(Compare(Name('value', Load(), lineno=830, col_offset=23), [Lt()], [Num(0, lineno=830, col_offset=31)], lineno=830, col_offset=23), [Assign([Name('n', Store(), lineno=831, col_offset=24)], UnaryOp(USub(), Name('n', Load(), lineno=831, col_offset=29), lineno=831, col_offset=28), lineno=831, col_offset=24)], [], lineno=830, col_offset=20), Assign([Attribute(Name('self', Load(), lineno=832, col_offset=20), 'n', Store(), lineno=832, col_offset=20)], Name('n', Load(), lineno=832, col_offset=29), lineno=832, col_offset=20), Assign([Attribute(Name('self', Load(), lineno=833, col_offset=20), 'd', Store(), lineno=833, col_offset=20)], Name('d', Load(), lineno=833, col_offset=29), lineno=833, col_offset=20), Assert(Compare(BinOp(Call(Name('float', Load(), lineno=834, col_offset=27), [Name('n', Load(), lineno=834, col_offset=33)], [], None, None, lineno=834, col_offset=27), Div(), Call(Name('float', Load(), lineno=834, col_offset=38), [Name('d', Load(), lineno=834, col_offset=44)], [], None, None, lineno=834, col_offset=38), lineno=834, col_offset=27), [Eq()], [Name('value', Load(), lineno=834, col_offset=50)], lineno=834, col_offset=27), None, lineno=834, col_offset=20)], [Raise(Call(Name('TypeError', Load(), lineno=836, col_offset=26), [BinOp(Str("can't deal with %r", lineno=836, col_offset=36), Mod(), Name('value', Load(), lineno=836, col_offset=59), lineno=836, col_offset=36)], [], None, None, lineno=836, col_offset=26), None, None, lineno=836, col_offset=20)], lineno=802, col_offset=21)], lineno=799, col_offset=16)], [], lineno=798, col_offset=12), FunctionDef('__cmp__', arguments([Name('self', Param(), lineno=838, col_offset=24), Name('other', Param(), lineno=838, col_offset=30)], None, None, []), [If(UnaryOp(Not(), Call(Name('isinstance', Load(), lineno=839, col_offset=23), [Name('other', Load(), lineno=839, col_offset=34), Name('Rat', Load(), lineno=839, col_offset=41)], [], None, None, lineno=839, col_offset=23), lineno=839, col_offset=19), [Assign([Name('other', Store(), lineno=840, col_offset=20)], Call(Name('Rat', Load(), lineno=840, col_offset=28), [Name('other', Load(), lineno=840, col_offset=32)], [], None, None, lineno=840, col_offset=28), lineno=840, col_offset=20)], [], lineno=839, col_offset=16), Return(Call(Name('cmp', Load(), lineno=841, col_offset=23), [BinOp(Attribute(Name('self', Load(), lineno=841, col_offset=27), 'n', Load(), lineno=841, col_offset=27), Mult(), Attribute(Name('other', Load(), lineno=841, col_offset=36), 'd', Load(), lineno=841, col_offset=36), lineno=841, col_offset=27), BinOp(Attribute(Name('self', Load(), lineno=841, col_offset=45), 'd', Load(), lineno=841, col_offset=45), Mult(), Attribute(Name('other', Load(), lineno=841, col_offset=54), 'n', Load(), lineno=841, col_offset=54), lineno=841, col_offset=45)], [], None, None, lineno=841, col_offset=23), lineno=841, col_offset=16)], [], lineno=838, col_offset=12)], [], lineno=797, col_offset=8), Assign([Name('cases', Store(), lineno=843, col_offset=8)], List([Num(0, lineno=843, col_offset=17), Num(0.001, lineno=843, col_offset=20), Num(0.99, lineno=843, col_offset=27), Num(1.0, lineno=843, col_offset=33), Num(1.5, lineno=843, col_offset=38), Num(1e+20, lineno=843, col_offset=43), Num(1e+200, lineno=843, col_offset=49)], Load(), lineno=843, col_offset=16), lineno=843, col_offset=8), For(Name('t', Store(), lineno=846, col_offset=12), Tuple([BinOp(Num(2.0, lineno=846, col_offset=17), Pow(), Num(48, lineno=846, col_offset=22), lineno=846, col_offset=17), BinOp(Num(2.0, lineno=846, col_offset=26), Pow(), Num(50, lineno=846, col_offset=31), lineno=846, col_offset=26), BinOp(Num(2.0, lineno=846, col_offset=35), Pow(), Num(53, lineno=846, col_offset=40), lineno=846, col_offset=35)], Load(), lineno=846, col_offset=17), [Expr(Call(Attribute(Name('cases', Load(), lineno=847, col_offset=12), 'extend', Load(), lineno=847, col_offset=12), [List([BinOp(Name('t', Load(), lineno=847, col_offset=26), Sub(), Num(1.0, lineno=847, col_offset=30), lineno=847, col_offset=26), BinOp(Name('t', Load(), lineno=847, col_offset=35), Sub(), Num(0.3, lineno=847, col_offset=39), lineno=847, col_offset=35), Name('t', Load(), lineno=847, col_offset=44), BinOp(Name('t', Load(), lineno=847, col_offset=47), Add(), Num(0.3, lineno=847, col_offset=51), lineno=847, col_offset=47), BinOp(Name('t', Load(), lineno=847, col_offset=56), Add(), Num(1.0, lineno=847, col_offset=60), lineno=847, col_offset=56), Call(Name('long', Load(), lineno=848, col_offset=26), [BinOp(Name('t', Load(), lineno=848, col_offset=31), Sub(), Num(1, lineno=848, col_offset=33), lineno=848, col_offset=31)], [], None, None, lineno=848, col_offset=26), Call(Name('long', Load(), lineno=848, col_offset=37), [Name('t', Load(), lineno=848, col_offset=42)], [], None, None, lineno=848, col_offset=37), Call(Name('long', Load(), lineno=848, col_offset=46), [BinOp(Name('t', Load(), lineno=848, col_offset=51), Add(), Num(1, lineno=848, col_offset=53), lineno=848, col_offset=51)], [], None, None, lineno=848, col_offset=46)], Load(), lineno=847, col_offset=25)], [], None, None, lineno=847, col_offset=12), lineno=847, col_offset=12)], [], lineno=846, col_offset=8), Expr(Call(Attribute(Name('cases', Load(), lineno=849, col_offset=8), 'extend', Load(), lineno=849, col_offset=8), [List([Num(0, lineno=849, col_offset=22), Num(1, lineno=849, col_offset=25), Num(2, lineno=849, col_offset=28), Attribute(Name('sys', Load(), lineno=849, col_offset=31), 'maxint', Load(), lineno=849, col_offset=31), Call(Name('float', Load(), lineno=849, col_offset=43), [Attribute(Name('sys', Load(), lineno=849, col_offset=49), 'maxint', Load(), lineno=849, col_offset=49)], [], None, None, lineno=849, col_offset=43)], Load(), lineno=849, col_offset=21)], [], None, None, lineno=849, col_offset=8), lineno=849, col_offset=8), Assign([Name('t', Store(), lineno=852, col_offset=8)], Call(Name('long', Load(), lineno=852, col_offset=12), [Num(1e+200, lineno=852, col_offset=17)], [], None, None, lineno=852, col_offset=12), lineno=852, col_offset=8), Expr(Call(Attribute(Name('cases', Load(), lineno=853, col_offset=8), 'extend', Load(), lineno=853, col_offset=8), [List([Num(0L, lineno=853, col_offset=22), Num(1L, lineno=853, col_offset=26), Num(2L, lineno=853, col_offset=30), BinOp(Num(1L, lineno=853, col_offset=34), LShift(), Num(20000, lineno=853, col_offset=40), lineno=853, col_offset=34), BinOp(Name('t', Load(), lineno=853, col_offset=47), Sub(), Num(1, lineno=853, col_offset=49), lineno=853, col_offset=47), Name('t', Load(), lineno=853, col_offset=52), BinOp(Name('t', Load(), lineno=853, col_offset=55), Add(), Num(1, lineno=853, col_offset=57), lineno=853, col_offset=55)], Load(), lineno=853, col_offset=21)], [], None, None, lineno=853, col_offset=8), lineno=853, col_offset=8), Expr(Call(Attribute(Name('cases', Load(), lineno=854, col_offset=8), 'extend', Load(), lineno=854, col_offset=8), [ListComp(UnaryOp(USub(), Name('x', Load(), lineno=854, col_offset=23), lineno=854, col_offset=22), [comprehension(Name('x', Store(), lineno=854, col_offset=29), Name('cases', Load(), lineno=854, col_offset=34), [])], lineno=854, col_offset=22)], [], None, None, lineno=854, col_offset=8), lineno=854, col_offset=8), For(Name('x', Store(), lineno=855, col_offset=12), Name('cases', Load(), lineno=855, col_offset=17), [Assign([Name('Rx', Store(), lineno=856, col_offset=12)], Call(Name('Rat', Load(), lineno=856, col_offset=17), [Name('x', Load(), lineno=856, col_offset=21)], [], None, None, lineno=856, col_offset=17), lineno=856, col_offset=12), For(Name('y', Store(), lineno=857, col_offset=16), Name('cases', Load(), lineno=857, col_offset=21), [Assign([Name('Ry', Store(), lineno=858, col_offset=16)], Call(Name('Rat', Load(), lineno=858, col_offset=21), [Name('y', Load(), lineno=858, col_offset=25)], [], None, None, lineno=858, col_offset=21), lineno=858, col_offset=16), Assign([Name('Rcmp', Store(), lineno=859, col_offset=16)], Call(Name('cmp', Load(), lineno=859, col_offset=23), [Name('Rx', Load(), lineno=859, col_offset=27), Name('Ry', Load(), lineno=859, col_offset=31)], [], None, None, lineno=859, col_offset=23), lineno=859, col_offset=16), Assign([Name('xycmp', Store(), lineno=860, col_offset=16)], Call(Name('cmp', Load(), lineno=860, col_offset=24), [Name('x', Load(), lineno=860, col_offset=28), Name('y', Load(), lineno=860, col_offset=31)], [], None, None, lineno=860, col_offset=24), lineno=860, col_offset=16), Expr(Call(Name('eq', Load(), lineno=861, col_offset=16), [Name('Rcmp', Load(), lineno=861, col_offset=19), Name('xycmp', Load(), lineno=861, col_offset=25), Call(Name('Frm', Load(), lineno=861, col_offset=32), [Str('%r %r %d %d', lineno=861, col_offset=36), Name('x', Load(), lineno=861, col_offset=51), Name('y', Load(), lineno=861, col_offset=54), Name('Rcmp', Load(), lineno=861, col_offset=57), Name('xycmp', Load(), lineno=861, col_offset=63)], [], None, None, lineno=861, col_offset=32)], [], None, None, lineno=861, col_offset=16), lineno=861, col_offset=16), Expr(Call(Name('eq', Load(), lineno=862, col_offset=16), [Compare(Name('x', Load(), lineno=862, col_offset=19), [Eq()], [Name('y', Load(), lineno=862, col_offset=24)], lineno=862, col_offset=19), Compare(Name('Rcmp', Load(), lineno=862, col_offset=27), [Eq()], [Num(0, lineno=862, col_offset=35)], lineno=862, col_offset=27), Call(Name('Frm', Load(), lineno=862, col_offset=38), [Str('%r == %r %d', lineno=862, col_offset=42), Name('x', Load(), lineno=862, col_offset=57), Name('y', Load(), lineno=862, col_offset=60), Name('Rcmp', Load(), lineno=862, col_offset=63)], [], None, None, lineno=862, col_offset=38)], [], None, None, lineno=862, col_offset=16), lineno=862, col_offset=16), Expr(Call(Name('eq', Load(), lineno=863, col_offset=16), [Compare(Name('x', Load(), lineno=863, col_offset=19), [NotEq()], [Name('y', Load(), lineno=863, col_offset=24)], lineno=863, col_offset=19), Compare(Name('Rcmp', Load(), lineno=863, col_offset=27), [NotEq()], [Num(0, lineno=863, col_offset=35)], lineno=863, col_offset=27), Call(Name('Frm', Load(), lineno=863, col_offset=38), [Str('%r != %r %d', lineno=863, col_offset=42), Name('x', Load(), lineno=863, col_offset=57), Name('y', Load(), lineno=863, col_offset=60), Name('Rcmp', Load(), lineno=863, col_offset=63)], [], None, None, lineno=863, col_offset=38)], [], None, None, lineno=863, col_offset=16), lineno=863, col_offset=16), Expr(Call(Name('eq', Load(), lineno=864, col_offset=16), [Compare(Name('x', Load(), lineno=864, col_offset=19), [Lt()], [Name('y', Load(), lineno=864, col_offset=23)], lineno=864, col_offset=19), Compare(Name('Rcmp', Load(), lineno=864, col_offset=26), [Lt()], [Num(0, lineno=864, col_offset=33)], lineno=864, col_offset=26), Call(Name('Frm', Load(), lineno=864, col_offset=36), [Str('%r < %r %d', lineno=864, col_offset=40), Name('x', Load(), lineno=864, col_offset=54), Name('y', Load(), lineno=864, col_offset=57), Name('Rcmp', Load(), lineno=864, col_offset=60)], [], None, None, lineno=864, col_offset=36)], [], None, None, lineno=864, col_offset=16), lineno=864, col_offset=16), Expr(Call(Name('eq', Load(), lineno=865, col_offset=16), [Compare(Name('x', Load(), lineno=865, col_offset=19), [LtE()], [Name('y', Load(), lineno=865, col_offset=24)], lineno=865, col_offset=19), Compare(Name('Rcmp', Load(), lineno=865, col_offset=27), [LtE()], [Num(0, lineno=865, col_offset=35)], lineno=865, col_offset=27), Call(Name('Frm', Load(), lineno=865, col_offset=38), [Str('%r <= %r %d', lineno=865, col_offset=42), Name('x', Load(), lineno=865, col_offset=57), Name('y', Load(), lineno=865, col_offset=60), Name('Rcmp', Load(), lineno=865, col_offset=63)], [], None, None, lineno=865, col_offset=38)], [], None, None, lineno=865, col_offset=16), lineno=865, col_offset=16), Expr(Call(Name('eq', Load(), lineno=866, col_offset=16), [Compare(Name('x', Load(), lineno=866, col_offset=19), [Gt()], [Name('y', Load(), lineno=866, col_offset=23)], lineno=866, col_offset=19), Compare(Name('Rcmp', Load(), lineno=866, col_offset=26), [Gt()], [Num(0, lineno=866, col_offset=33)], lineno=866, col_offset=26), Call(Name('Frm', Load(), lineno=866, col_offset=36), [Str('%r > %r %d', lineno=866, col_offset=40), Name('x', Load(), lineno=866, col_offset=54), Name('y', Load(), lineno=866, col_offset=57), Name('Rcmp', Load(), lineno=866, col_offset=60)], [], None, None, lineno=866, col_offset=36)], [], None, None, lineno=866, col_offset=16), lineno=866, col_offset=16), Expr(Call(Name('eq', Load(), lineno=867, col_offset=16), [Compare(Name('x', Load(), lineno=867, col_offset=19), [GtE()], [Name('y', Load(), lineno=867, col_offset=24)], lineno=867, col_offset=19), Compare(Name('Rcmp', Load(), lineno=867, col_offset=27), [GtE()], [Num(0, lineno=867, col_offset=35)], lineno=867, col_offset=27), Call(Name('Frm', Load(), lineno=867, col_offset=38), [Str('%r >= %r %d', lineno=867, col_offset=42), Name('x', Load(), lineno=867, col_offset=57), Name('y', Load(), lineno=867, col_offset=60), Name('Rcmp', Load(), lineno=867, col_offset=63)], [], None, None, lineno=867, col_offset=38)], [], None, None, lineno=867, col_offset=16), lineno=867, col_offset=16)], [], lineno=857, col_offset=12)], [], lineno=855, col_offset=8)], [], lineno=789, col_offset=4), FunctionDef('test_nan_inf', arguments([Name('self', Param(), lineno=869, col_offset=21)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=870, col_offset=8), 'assertRaises', Load(), lineno=870, col_offset=8), [Name('OverflowError', Load(), lineno=870, col_offset=26), Name('long', Load(), lineno=870, col_offset=41), Call(Name('float', Load(), lineno=870, col_offset=47), [Str('inf', lineno=870, col_offset=53)], [], None, None, lineno=870, col_offset=47)], [], None, None, lineno=870, col_offset=8), lineno=870, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=871, col_offset=8), 'assertRaises', Load(), lineno=871, col_offset=8), [Name('OverflowError', Load(), lineno=871, col_offset=26), Name('long', Load(), lineno=871, col_offset=41), Call(Name('float', Load(), lineno=871, col_offset=47), [Str('-inf', lineno=871, col_offset=53)], [], None, None, lineno=871, col_offset=47)], [], None, None, lineno=871, col_offset=8), lineno=871, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=872, col_offset=8), 'assertRaises', Load(), lineno=872, col_offset=8), [Name('ValueError', Load(), lineno=872, col_offset=26), Name('long', Load(), lineno=872, col_offset=38), Call(Name('float', Load(), lineno=872, col_offset=44), [Str('nan', lineno=872, col_offset=50)], [], None, None, lineno=872, col_offset=44)], [], None, None, lineno=872, col_offset=8), lineno=872, col_offset=8)], [], lineno=869, col_offset=4), FunctionDef('test_bit_length', arguments([Name('self', Param(), lineno=874, col_offset=24)], None, None, []), [Assign([Name('tiny', Store(), lineno=875, col_offset=8)], Num(1e-10, lineno=875, col_offset=15), lineno=875, col_offset=8), For(Name('x', Store(), lineno=876, col_offset=12), Call(Name('xrange', Load(), lineno=876, col_offset=17), [Num(-65000, lineno=876, col_offset=25), Num(65000, lineno=876, col_offset=32)], [], None, None, lineno=876, col_offset=17), [Assign([Name('x', Store(), lineno=877, col_offset=12)], Call(Name('long', Load(), lineno=877, col_offset=16), [Name('x', Load(), lineno=877, col_offset=21)], [], None, None, lineno=877, col_offset=16), lineno=877, col_offset=12), Assign([Name('k', Store(), lineno=878, col_offset=12)], Call(Attribute(Name('x', Load(), lineno=878, col_offset=16), 'bit_length', Load(), lineno=878, col_offset=16), [], [], None, None, lineno=878, col_offset=16), lineno=878, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=880, col_offset=12), 'assertEqual', Load(), lineno=880, col_offset=12), [Name('k', Load(), lineno=880, col_offset=29), Call(Name('len', Load(), lineno=880, col_offset=32), [Call(Attribute(Call(Name('bin', Load(), lineno=880, col_offset=36), [Name('x', Load(), lineno=880, col_offset=40)], [], None, None, lineno=880, col_offset=36), 'lstrip', Load(), lineno=880, col_offset=36), [Str('-0b', lineno=880, col_offset=50)], [], None, None, lineno=880, col_offset=36)], [], None, None, lineno=880, col_offset=32)], [], None, None, lineno=880, col_offset=12), lineno=880, col_offset=12), If(Compare(Name('x', Load(), lineno=882, col_offset=15), [NotEq()], [Num(0, lineno=882, col_offset=20)], lineno=882, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=883, col_offset=16), 'assertTrue', Load(), lineno=883, col_offset=16), [Compare(BinOp(Num(2, lineno=883, col_offset=32), Pow(), BinOp(Name('k', Load(), lineno=883, col_offset=36), Sub(), Num(1, lineno=883, col_offset=38), lineno=883, col_offset=36), lineno=883, col_offset=32), [LtE(), Lt()], [Call(Name('abs', Load(), lineno=883, col_offset=44), [Name('x', Load(), lineno=883, col_offset=48)], [], None, None, lineno=883, col_offset=44), BinOp(Num(2, lineno=883, col_offset=53), Pow(), Name('k', Load(), lineno=883, col_offset=56), lineno=883, col_offset=53)], lineno=883, col_offset=32)], [], None, None, lineno=883, col_offset=16), lineno=883, col_offset=16)], [Expr(Call(Attribute(Name('self', Load(), lineno=885, col_offset=16), 'assertEqual', Load(), lineno=885, col_offset=16), [Name('k', Load(), lineno=885, col_offset=33), Num(0, lineno=885, col_offset=36)], [], None, None, lineno=885, col_offset=16), lineno=885, col_offset=16)], lineno=882, col_offset=12), If(Compare(Name('x', Load(), lineno=887, col_offset=15), [NotEq()], [Num(0, lineno=887, col_offset=20)], lineno=887, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=892, col_offset=16), 'assertEqual', Load(), lineno=892, col_offset=16), [Name('k', Load(), lineno=892, col_offset=33), BinOp(Num(1, lineno=892, col_offset=36), Add(), Call(Attribute(Name('math', Load(), lineno=892, col_offset=40), 'floor', Load(), lineno=892, col_offset=40), [BinOp(BinOp(Call(Attribute(Name('math', Load(), lineno=893, col_offset=24), 'log', Load(), lineno=893, col_offset=24), [Call(Name('abs', Load(), lineno=893, col_offset=33), [Name('x', Load(), lineno=893, col_offset=37)], [], None, None, lineno=893, col_offset=33)], [], None, None, lineno=893, col_offset=24), Div(), Call(Attribute(Name('math', Load(), lineno=893, col_offset=41), 'log', Load(), lineno=893, col_offset=41), [Num(2, lineno=893, col_offset=50)], [], None, None, lineno=893, col_offset=41), lineno=893, col_offset=24), Add(), Name('tiny', Load(), lineno=893, col_offset=55), lineno=893, col_offset=24)], [], None, None, lineno=892, col_offset=40), lineno=892, col_offset=36)], [], None, None, lineno=892, col_offset=16), lineno=892, col_offset=16)], [], lineno=887, col_offset=12)], [], lineno=876, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=895, col_offset=8), 'assertEqual', Load(), lineno=895, col_offset=8), [Call(Attribute(Num(0L, lineno=895, col_offset=26), 'bit_length', Load(), lineno=895, col_offset=26), [], [], None, None, lineno=895, col_offset=26), Num(0, lineno=895, col_offset=44)], [], None, None, lineno=895, col_offset=8), lineno=895, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=896, col_offset=8), 'assertEqual', Load(), lineno=896, col_offset=8), [Call(Attribute(Num(1L, lineno=896, col_offset=26), 'bit_length', Load(), lineno=896, col_offset=26), [], [], None, None, lineno=896, col_offset=26), Num(1, lineno=896, col_offset=44)], [], None, None, lineno=896, col_offset=8), lineno=896, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=897, col_offset=8), 'assertEqual', Load(), lineno=897, col_offset=8), [Call(Attribute(Num(-1L, lineno=897, col_offset=27), 'bit_length', Load(), lineno=897, col_offset=27), [], [], None, None, lineno=897, col_offset=27), Num(1, lineno=897, col_offset=45)], [], None, None, lineno=897, col_offset=8), lineno=897, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=898, col_offset=8), 'assertEqual', Load(), lineno=898, col_offset=8), [Call(Attribute(Num(2L, lineno=898, col_offset=26), 'bit_length', Load(), lineno=898, col_offset=26), [], [], None, None, lineno=898, col_offset=26), Num(2, lineno=898, col_offset=44)], [], None, None, lineno=898, col_offset=8), lineno=898, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=899, col_offset=8), 'assertEqual', Load(), lineno=899, col_offset=8), [Call(Attribute(Num(-2L, lineno=899, col_offset=27), 'bit_length', Load(), lineno=899, col_offset=27), [], [], None, None, lineno=899, col_offset=27), Num(2, lineno=899, col_offset=45)], [], None, None, lineno=899, col_offset=8), lineno=899, col_offset=8), For(Name('i', Store(), lineno=900, col_offset=12), List([Num(2, lineno=900, col_offset=18), Num(3, lineno=900, col_offset=21), Num(15, lineno=900, col_offset=24), Num(16, lineno=900, col_offset=28), Num(17, lineno=900, col_offset=32), Num(31, lineno=900, col_offset=36), Num(32, lineno=900, col_offset=40), Num(33, lineno=900, col_offset=44), Num(63, lineno=900, col_offset=48), Num(64, lineno=900, col_offset=52), Num(234, lineno=900, col_offset=56)], Load(), lineno=900, col_offset=17), [Assign([Name('a', Store(), lineno=901, col_offset=12)], BinOp(Num(2L, lineno=901, col_offset=16), Pow(), Name('i', Load(), lineno=901, col_offset=20), lineno=901, col_offset=16), lineno=901, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=902, col_offset=12), 'assertEqual', Load(), lineno=902, col_offset=12), [Call(Attribute(BinOp(Name('a', Load(), lineno=902, col_offset=30), Sub(), Num(1, lineno=902, col_offset=32), lineno=902, col_offset=30), 'bit_length', Load(), lineno=902, col_offset=30), [], [], None, None, lineno=902, col_offset=30), Name('i', Load(), lineno=902, col_offset=49)], [], None, None, lineno=902, col_offset=12), lineno=902, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=903, col_offset=12), 'assertEqual', Load(), lineno=903, col_offset=12), [Call(Attribute(BinOp(Num(1, lineno=903, col_offset=30), Sub(), Name('a', Load(), lineno=903, col_offset=32), lineno=903, col_offset=30), 'bit_length', Load(), lineno=903, col_offset=30), [], [], None, None, lineno=903, col_offset=30), Name('i', Load(), lineno=903, col_offset=49)], [], None, None, lineno=903, col_offset=12), lineno=903, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=904, col_offset=12), 'assertEqual', Load(), lineno=904, col_offset=12), [Call(Attribute(Name('a', Load(), lineno=904, col_offset=30), 'bit_length', Load(), lineno=904, col_offset=30), [], [], None, None, lineno=904, col_offset=30), BinOp(Name('i', Load(), lineno=904, col_offset=47), Add(), Num(1, lineno=904, col_offset=49), lineno=904, col_offset=47)], [], None, None, lineno=904, col_offset=12), lineno=904, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=905, col_offset=12), 'assertEqual', Load(), lineno=905, col_offset=12), [Call(Attribute(UnaryOp(USub(), Name('a', Load(), lineno=905, col_offset=31), lineno=905, col_offset=30), 'bit_length', Load(), lineno=905, col_offset=30), [], [], None, None, lineno=905, col_offset=30), BinOp(Name('i', Load(), lineno=905, col_offset=48), Add(), Num(1, lineno=905, col_offset=50), lineno=905, col_offset=48)], [], None, None, lineno=905, col_offset=12), lineno=905, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=906, col_offset=12), 'assertEqual', Load(), lineno=906, col_offset=12), [Call(Attribute(BinOp(Name('a', Load(), lineno=906, col_offset=30), Add(), Num(1, lineno=906, col_offset=32), lineno=906, col_offset=30), 'bit_length', Load(), lineno=906, col_offset=30), [], [], None, None, lineno=906, col_offset=30), BinOp(Name('i', Load(), lineno=906, col_offset=49), Add(), Num(1, lineno=906, col_offset=51), lineno=906, col_offset=49)], [], None, None, lineno=906, col_offset=12), lineno=906, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=907, col_offset=12), 'assertEqual', Load(), lineno=907, col_offset=12), [Call(Attribute(BinOp(UnaryOp(USub(), Name('a', Load(), lineno=907, col_offset=31), lineno=907, col_offset=30), Sub(), Num(1, lineno=907, col_offset=33), lineno=907, col_offset=30), 'bit_length', Load(), lineno=907, col_offset=30), [], [], None, None, lineno=907, col_offset=30), BinOp(Name('i', Load(), lineno=907, col_offset=50), Add(), Num(1, lineno=907, col_offset=52), lineno=907, col_offset=50)], [], None, None, lineno=907, col_offset=12), lineno=907, col_offset=12)], [], lineno=900, col_offset=8)], [], lineno=874, col_offset=4)], [], lineno=82, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=911, col_offset=4), 'run_unittest', Load(), lineno=911, col_offset=4), [Name('LongTest', Load(), lineno=911, col_offset=30)], [], None, None, lineno=911, col_offset=4), lineno=911, col_offset=4)], [], lineno=910, col_offset=0), If(Compare(Name('__name__', Load(), lineno=913, col_offset=3), [Eq()], [Str('__main__', lineno=913, col_offset=15)], lineno=913, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=914, col_offset=4), [], [], None, None, lineno=914, col_offset=4), lineno=914, col_offset=4)], [], lineno=913, col_offset=0)])
