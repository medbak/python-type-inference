Module([Expr(Str(' Test Codecs (used by test_charmapcodec)\n\nWritten by Marc-Andre Lemburg (mal@lemburg.com).\n\n(c) Copyright 2000 Guido van Rossum.\n\n', lineno=7, col_offset=-1), lineno=7, col_offset=-1), Import([alias('codecs', None)], lineno=8, col_offset=0), ClassDef('Codec', [Attribute(Name('codecs', Load(), lineno=12, col_offset=12), 'Codec', Load(), lineno=12, col_offset=12)], [FunctionDef('encode', arguments([Name('self', Param(), lineno=14, col_offset=15), Name('input', Param(), lineno=14, col_offset=20), Name('errors', Param(), lineno=14, col_offset=26)], None, None, [Str('strict', lineno=14, col_offset=33)]), [Return(Call(Attribute(Name('codecs', Load(), lineno=16, col_offset=15), 'charmap_encode', Load(), lineno=16, col_offset=15), [Name('input', Load(), lineno=16, col_offset=37), Name('errors', Load(), lineno=16, col_offset=43), Name('encoding_map', Load(), lineno=16, col_offset=50)], [], None, None, lineno=16, col_offset=15), lineno=16, col_offset=8)], [], lineno=14, col_offset=4), FunctionDef('decode', arguments([Name('self', Param(), lineno=18, col_offset=15), Name('input', Param(), lineno=18, col_offset=20), Name('errors', Param(), lineno=18, col_offset=26)], None, None, [Str('strict', lineno=18, col_offset=33)]), [Return(Call(Attribute(Name('codecs', Load(), lineno=20, col_offset=15), 'charmap_decode', Load(), lineno=20, col_offset=15), [Name('input', Load(), lineno=20, col_offset=37), Name('errors', Load(), lineno=20, col_offset=43), Name('decoding_map', Load(), lineno=20, col_offset=50)], [], None, None, lineno=20, col_offset=15), lineno=20, col_offset=8)], [], lineno=18, col_offset=4)], [], lineno=12, col_offset=0), ClassDef('StreamWriter', [Name('Codec', Load(), lineno=22, col_offset=19), Attribute(Name('codecs', Load(), lineno=22, col_offset=25), 'StreamWriter', Load(), lineno=22, col_offset=25)], [Pass( lineno=23, col_offset=4)], [], lineno=22, col_offset=0), ClassDef('StreamReader', [Name('Codec', Load(), lineno=25, col_offset=19), Attribute(Name('codecs', Load(), lineno=25, col_offset=25), 'StreamReader', Load(), lineno=25, col_offset=25)], [Pass( lineno=26, col_offset=4)], [], lineno=25, col_offset=0), FunctionDef('getregentry', arguments([], None, None, []), [Return(Tuple([Attribute(Call(Name('Codec', Load(), lineno=32, col_offset=12), [], [], None, None, lineno=32, col_offset=12), 'encode', Load(), lineno=32, col_offset=12), Attribute(Call(Name('Codec', Load(), lineno=32, col_offset=27), [], [], None, None, lineno=32, col_offset=27), 'decode', Load(), lineno=32, col_offset=27), Name('StreamReader', Load(), lineno=32, col_offset=42), Name('StreamWriter', Load(), lineno=32, col_offset=55)], Load(), lineno=32, col_offset=12), lineno=32, col_offset=4)], [], lineno=30, col_offset=0), Assign([Name('decoding_map', Store(), lineno=36, col_offset=0)], Call(Attribute(Name('codecs', Load(), lineno=36, col_offset=15), 'make_identity_dict', Load(), lineno=36, col_offset=15), [Call(Name('range', Load(), lineno=36, col_offset=41), [Num(256, lineno=36, col_offset=47)], [], None, None, lineno=36, col_offset=41)], [], None, None, lineno=36, col_offset=15), lineno=36, col_offset=0), Expr(Call(Attribute(Name('decoding_map', Load(), lineno=37, col_offset=0), 'update', Load(), lineno=37, col_offset=0), [Dict([Num(120, lineno=38, col_offset=8), Str('abc', lineno=39, col_offset=8), Num(1, lineno=40, col_offset=8), Num(121, lineno=41, col_offset=8)], [Str(u'abc', lineno=38, col_offset=14), Num(120, lineno=39, col_offset=15), Name('None', Load(), lineno=40, col_offset=14), Str(u'', lineno=41, col_offset=14)], lineno=37, col_offset=20)], [], None, None, lineno=37, col_offset=0), lineno=37, col_offset=0), Assign([Name('encoding_map', Store(), lineno=46, col_offset=0)], Dict([], [], lineno=46, col_offset=15), lineno=46, col_offset=0), For(Tuple([Name('k', Store(), lineno=47, col_offset=4), Name('v', Store(), lineno=47, col_offset=6)], Store(), lineno=47, col_offset=4), Call(Attribute(Name('decoding_map', Load(), lineno=47, col_offset=11), 'items', Load(), lineno=47, col_offset=11), [], [], None, None, lineno=47, col_offset=11), [Assign([Subscript(Name('encoding_map', Load(), lineno=48, col_offset=4), Index(Name('v', Load(), lineno=48, col_offset=17)), Store(), lineno=48, col_offset=4)], Name('k', Load(), lineno=48, col_offset=22), lineno=48, col_offset=4)], [], lineno=47, col_offset=0)])
