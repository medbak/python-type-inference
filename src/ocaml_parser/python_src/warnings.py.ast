Module([Expr(Str('Python part of the warnings subsystem.', lineno=1, col_offset=0), lineno=1, col_offset=0), Import([alias('linecache', None)], lineno=6, col_offset=0), Import([alias('sys', None)], lineno=7, col_offset=0), Import([alias('types', None)], lineno=8, col_offset=0), Assign([Name('__all__', Store(), lineno=10, col_offset=0)], List([Str('warn', lineno=10, col_offset=11), Str('showwarning', lineno=10, col_offset=19), Str('formatwarning', lineno=10, col_offset=34), Str('filterwarnings', lineno=10, col_offset=51), Str('resetwarnings', lineno=11, col_offset=11), Str('catch_warnings', lineno=11, col_offset=28)], Load(), lineno=10, col_offset=10), lineno=10, col_offset=0), FunctionDef('warnpy3k', arguments([Name('message', Param(), lineno=14, col_offset=13), Name('category', Param(), lineno=14, col_offset=22), Name('stacklevel', Param(), lineno=14, col_offset=37)], None, None, [Name('None', Load(), lineno=14, col_offset=31), Num(1, lineno=14, col_offset=48)]), [Expr(Str('Issue a deprecation warning for Python 3.x related changes.\n\n    Warnings are omitted unless Python is started with the -3 option.\n    ', lineno=18, col_offset=-1), lineno=18, col_offset=-1), If(Attribute(Name('sys', Load(), lineno=19, col_offset=7), 'py3kwarning', Load(), lineno=19, col_offset=7), [If(Compare(Name('category', Load(), lineno=20, col_offset=11), [Is()], [Name('None', Load(), lineno=20, col_offset=23)], lineno=20, col_offset=11), [Assign([Name('category', Store(), lineno=21, col_offset=12)], Name('DeprecationWarning', Load(), lineno=21, col_offset=23), lineno=21, col_offset=12)], [], lineno=20, col_offset=8), Expr(Call(Name('warn', Load(), lineno=22, col_offset=8), [Name('message', Load(), lineno=22, col_offset=13), Name('category', Load(), lineno=22, col_offset=22), BinOp(Name('stacklevel', Load(), lineno=22, col_offset=32), Add(), Num(1, lineno=22, col_offset=43), lineno=22, col_offset=32)], [], None, None, lineno=22, col_offset=8), lineno=22, col_offset=8)], [], lineno=19, col_offset=4)], [], lineno=14, col_offset=0), FunctionDef('_show_warning', arguments([Name('message', Param(), lineno=24, col_offset=18), Name('category', Param(), lineno=24, col_offset=27), Name('filename', Param(), lineno=24, col_offset=37), Name('lineno', Param(), lineno=24, col_offset=47), Name('file', Param(), lineno=24, col_offset=55), Name('line', Param(), lineno=24, col_offset=66)], None, None, [Name('None', Load(), lineno=24, col_offset=60), Name('None', Load(), lineno=24, col_offset=71)]), [Expr(Str('Hook to write a warning to a file; replace if you like.', lineno=25, col_offset=4), lineno=25, col_offset=4), If(Compare(Name('file', Load(), lineno=26, col_offset=7), [Is()], [Name('None', Load(), lineno=26, col_offset=15)], lineno=26, col_offset=7), [Assign([Name('file', Store(), lineno=27, col_offset=8)], Attribute(Name('sys', Load(), lineno=27, col_offset=15), 'stderr', Load(), lineno=27, col_offset=15), lineno=27, col_offset=8)], [], lineno=26, col_offset=4), TryExcept([Expr(Call(Attribute(Name('file', Load(), lineno=29, col_offset=8), 'write', Load(), lineno=29, col_offset=8), [Call(Name('formatwarning', Load(), lineno=29, col_offset=19), [Name('message', Load(), lineno=29, col_offset=33), Name('category', Load(), lineno=29, col_offset=42), Name('filename', Load(), lineno=29, col_offset=52), Name('lineno', Load(), lineno=29, col_offset=62), Name('line', Load(), lineno=29, col_offset=70)], [], None, None, lineno=29, col_offset=19)], [], None, None, lineno=29, col_offset=8), lineno=29, col_offset=8)], [ExceptHandler(Name('IOError', Load(), lineno=30, col_offset=11), None, [Pass( lineno=31, col_offset=8)], lineno=30, col_offset=4)], [], lineno=28, col_offset=4)], [], lineno=24, col_offset=0), Assign([Name('showwarning', Store(), lineno=34, col_offset=0)], Name('_show_warning', Load(), lineno=34, col_offset=14), lineno=34, col_offset=0), FunctionDef('formatwarning', arguments([Name('message', Param(), lineno=36, col_offset=18), Name('category', Param(), lineno=36, col_offset=27), Name('filename', Param(), lineno=36, col_offset=37), Name('lineno', Param(), lineno=36, col_offset=47), Name('line', Param(), lineno=36, col_offset=55)], None, None, [Name('None', Load(), lineno=36, col_offset=60)]), [Expr(Str('Function to format a warning the standard way.', lineno=37, col_offset=4), lineno=37, col_offset=4), Assign([Name('s', Store(), lineno=38, col_offset=4)], BinOp(Str('%s:%s: %s: %s\n', lineno=38, col_offset=9), Mod(), Tuple([Name('filename', Load(), lineno=38, col_offset=30), Name('lineno', Load(), lineno=38, col_offset=40), Attribute(Name('category', Load(), lineno=38, col_offset=48), '__name__', Load(), lineno=38, col_offset=48), Name('message', Load(), lineno=38, col_offset=67)], Load(), lineno=38, col_offset=30), lineno=38, col_offset=9), lineno=38, col_offset=4), Assign([Name('line', Store(), lineno=39, col_offset=4)], IfExp(Compare(Name('line', Load(), lineno=39, col_offset=50), [Is()], [Name('None', Load(), lineno=39, col_offset=58)], lineno=39, col_offset=50), Call(Attribute(Name('linecache', Load(), lineno=39, col_offset=11), 'getline', Load(), lineno=39, col_offset=11), [Name('filename', Load(), lineno=39, col_offset=29), Name('lineno', Load(), lineno=39, col_offset=39)], [], None, None, lineno=39, col_offset=11), Name('line', Load(), lineno=39, col_offset=68), lineno=39, col_offset=11), lineno=39, col_offset=4), If(Name('line', Load(), lineno=40, col_offset=7), [Assign([Name('line', Store(), lineno=41, col_offset=8)], Call(Attribute(Name('line', Load(), lineno=41, col_offset=15), 'strip', Load(), lineno=41, col_offset=15), [], [], None, None, lineno=41, col_offset=15), lineno=41, col_offset=8), AugAssign(Name('s', Store(), lineno=42, col_offset=8), Add(), BinOp(Str('  %s\n', lineno=42, col_offset=13), Mod(), Name('line', Load(), lineno=42, col_offset=24), lineno=42, col_offset=13), lineno=42, col_offset=8)], [], lineno=40, col_offset=4), Return(Name('s', Load(), lineno=43, col_offset=11), lineno=43, col_offset=4)], [], lineno=36, col_offset=0), FunctionDef('filterwarnings', arguments([Name('action', Param(), lineno=45, col_offset=19), Name('message', Param(), lineno=45, col_offset=27), Name('category', Param(), lineno=45, col_offset=39), Name('module', Param(), lineno=45, col_offset=57), Name('lineno', Param(), lineno=45, col_offset=68), Name('append', Param(), lineno=46, col_offset=19)], None, None, [Str('', lineno=45, col_offset=35), Name('Warning', Load(), lineno=45, col_offset=48), Str('', lineno=45, col_offset=64), Num(0, lineno=45, col_offset=75), Num(0, lineno=46, col_offset=26)]), [Expr(Str('Insert an entry into the list of warnings filters (at the front).\n\n    \'action\' -- one of "error", "ignore", "always", "default", "module",\n                or "once"\n    \'message\' -- a regex that the warning message must match\n    \'category\' -- a class that the warning must be a subclass of\n    \'module\' -- a regex that the module name must match\n    \'lineno\' -- an integer line number, 0 matches all warnings\n    \'append\' -- if true, append to the list of filters\n    ', lineno=56, col_offset=-1), lineno=56, col_offset=-1), Import([alias('re', None)], lineno=57, col_offset=4), Assert(Compare(Name('action', Load(), lineno=58, col_offset=11), [In()], [Tuple([Str('error', lineno=58, col_offset=22), Str('ignore', lineno=58, col_offset=31), Str('always', lineno=58, col_offset=41), Str('default', lineno=58, col_offset=51), Str('module', lineno=58, col_offset=62), Str('once', lineno=59, col_offset=22)], Load(), lineno=58, col_offset=22)], lineno=58, col_offset=11), BinOp(Str('invalid action: %r', lineno=59, col_offset=31), Mod(), Tuple([Name('action', Load(), lineno=59, col_offset=55)], Load(), lineno=59, col_offset=55), lineno=59, col_offset=31), lineno=58, col_offset=4), Assert(Call(Name('isinstance', Load(), lineno=60, col_offset=11), [Name('message', Load(), lineno=60, col_offset=22), Name('basestring', Load(), lineno=60, col_offset=31)], [], None, None, lineno=60, col_offset=11), Str('message must be a string', lineno=60, col_offset=44), lineno=60, col_offset=4), Assert(Call(Name('isinstance', Load(), lineno=61, col_offset=11), [Name('category', Load(), lineno=61, col_offset=22), Tuple([Name('type', Load(), lineno=61, col_offset=33), Attribute(Name('types', Load(), lineno=61, col_offset=39), 'ClassType', Load(), lineno=61, col_offset=39)], Load(), lineno=61, col_offset=33)], [], None, None, lineno=61, col_offset=11), Str('category must be a class', lineno=62, col_offset=11), lineno=61, col_offset=4), Assert(Call(Name('issubclass', Load(), lineno=63, col_offset=11), [Name('category', Load(), lineno=63, col_offset=22), Name('Warning', Load(), lineno=63, col_offset=32)], [], None, None, lineno=63, col_offset=11), Str('category must be a Warning subclass', lineno=63, col_offset=42), lineno=63, col_offset=4), Assert(Call(Name('isinstance', Load(), lineno=64, col_offset=11), [Name('module', Load(), lineno=64, col_offset=22), Name('basestring', Load(), lineno=64, col_offset=30)], [], None, None, lineno=64, col_offset=11), Str('module must be a string', lineno=64, col_offset=43), lineno=64, col_offset=4), Assert(BoolOp(And(), [Call(Name('isinstance', Load(), lineno=65, col_offset=11), [Name('lineno', Load(), lineno=65, col_offset=22), Name('int', Load(), lineno=65, col_offset=30)], [], None, None, lineno=65, col_offset=11), Compare(Name('lineno', Load(), lineno=65, col_offset=39), [GtE()], [Num(0, lineno=65, col_offset=49)], lineno=65, col_offset=39)], lineno=65, col_offset=11), Str('lineno must be an int >= 0', lineno=66, col_offset=11), lineno=65, col_offset=4), Assign([Name('item', Store(), lineno=67, col_offset=4)], Tuple([Name('action', Load(), lineno=67, col_offset=12), Call(Attribute(Name('re', Load(), lineno=67, col_offset=20), 'compile', Load(), lineno=67, col_offset=20), [Name('message', Load(), lineno=67, col_offset=31), Attribute(Name('re', Load(), lineno=67, col_offset=40), 'I', Load(), lineno=67, col_offset=40)], [], None, None, lineno=67, col_offset=20), Name('category', Load(), lineno=67, col_offset=47), Call(Attribute(Name('re', Load(), lineno=68, col_offset=12), 'compile', Load(), lineno=68, col_offset=12), [Name('module', Load(), lineno=68, col_offset=23)], [], None, None, lineno=68, col_offset=12), Name('lineno', Load(), lineno=68, col_offset=32)], Load(), lineno=67, col_offset=12), lineno=67, col_offset=4), If(Name('append', Load(), lineno=69, col_offset=7), [Expr(Call(Attribute(Name('filters', Load(), lineno=70, col_offset=8), 'append', Load(), lineno=70, col_offset=8), [Name('item', Load(), lineno=70, col_offset=23)], [], None, None, lineno=70, col_offset=8), lineno=70, col_offset=8)], [Expr(Call(Attribute(Name('filters', Load(), lineno=72, col_offset=8), 'insert', Load(), lineno=72, col_offset=8), [Num(0, lineno=72, col_offset=23), Name('item', Load(), lineno=72, col_offset=26)], [], None, None, lineno=72, col_offset=8), lineno=72, col_offset=8)], lineno=69, col_offset=4)], [], lineno=45, col_offset=0), FunctionDef('simplefilter', arguments([Name('action', Param(), lineno=74, col_offset=17), Name('category', Param(), lineno=74, col_offset=25), Name('lineno', Param(), lineno=74, col_offset=43), Name('append', Param(), lineno=74, col_offset=53)], None, None, [Name('Warning', Load(), lineno=74, col_offset=34), Num(0, lineno=74, col_offset=50), Num(0, lineno=74, col_offset=60)]), [Expr(Str('Insert a simple entry into the list of warnings filters (at the front).\n\n    A simple filter matches all modules and messages.\n    \'action\' -- one of "error", "ignore", "always", "default", "module",\n                or "once"\n    \'category\' -- a class that the warning must be a subclass of\n    \'lineno\' -- an integer line number, 0 matches all warnings\n    \'append\' -- if true, append to the list of filters\n    ', lineno=83, col_offset=-1), lineno=83, col_offset=-1), Assert(Compare(Name('action', Load(), lineno=84, col_offset=11), [In()], [Tuple([Str('error', lineno=84, col_offset=22), Str('ignore', lineno=84, col_offset=31), Str('always', lineno=84, col_offset=41), Str('default', lineno=84, col_offset=51), Str('module', lineno=84, col_offset=62), Str('once', lineno=85, col_offset=22)], Load(), lineno=84, col_offset=22)], lineno=84, col_offset=11), BinOp(Str('invalid action: %r', lineno=85, col_offset=31), Mod(), Tuple([Name('action', Load(), lineno=85, col_offset=55)], Load(), lineno=85, col_offset=55), lineno=85, col_offset=31), lineno=84, col_offset=4), Assert(BoolOp(And(), [Call(Name('isinstance', Load(), lineno=86, col_offset=11), [Name('lineno', Load(), lineno=86, col_offset=22), Name('int', Load(), lineno=86, col_offset=30)], [], None, None, lineno=86, col_offset=11), Compare(Name('lineno', Load(), lineno=86, col_offset=39), [GtE()], [Num(0, lineno=86, col_offset=49)], lineno=86, col_offset=39)], lineno=86, col_offset=11), Str('lineno must be an int >= 0', lineno=87, col_offset=11), lineno=86, col_offset=4), Assign([Name('item', Store(), lineno=88, col_offset=4)], Tuple([Name('action', Load(), lineno=88, col_offset=12), Name('None', Load(), lineno=88, col_offset=20), Name('category', Load(), lineno=88, col_offset=26), Name('None', Load(), lineno=88, col_offset=36), Name('lineno', Load(), lineno=88, col_offset=42)], Load(), lineno=88, col_offset=12), lineno=88, col_offset=4), If(Name('append', Load(), lineno=89, col_offset=7), [Expr(Call(Attribute(Name('filters', Load(), lineno=90, col_offset=8), 'append', Load(), lineno=90, col_offset=8), [Name('item', Load(), lineno=90, col_offset=23)], [], None, None, lineno=90, col_offset=8), lineno=90, col_offset=8)], [Expr(Call(Attribute(Name('filters', Load(), lineno=92, col_offset=8), 'insert', Load(), lineno=92, col_offset=8), [Num(0, lineno=92, col_offset=23), Name('item', Load(), lineno=92, col_offset=26)], [], None, None, lineno=92, col_offset=8), lineno=92, col_offset=8)], lineno=89, col_offset=4)], [], lineno=74, col_offset=0), FunctionDef('resetwarnings', arguments([], None, None, []), [Expr(Str('Clear the list of warning filters, so that no filters are active.', lineno=95, col_offset=4), lineno=95, col_offset=4), Assign([Subscript(Name('filters', Load(), lineno=96, col_offset=4), Slice(None, None, None), Store(), lineno=96, col_offset=4)], List([], Load(), lineno=96, col_offset=17), lineno=96, col_offset=4)], [], lineno=94, col_offset=0), ClassDef('_OptionError', [Name('Exception', Load(), lineno=98, col_offset=19)], [Expr(Str('Exception used by option processing helpers.', lineno=99, col_offset=4), lineno=99, col_offset=4), Pass( lineno=100, col_offset=4)], [], lineno=98, col_offset=0), FunctionDef('_processoptions', arguments([Name('args', Param(), lineno=103, col_offset=20)], None, None, []), [For(Name('arg', Store(), lineno=104, col_offset=8), Name('args', Load(), lineno=104, col_offset=15), [TryExcept([Expr(Call(Name('_setoption', Load(), lineno=106, col_offset=12), [Name('arg', Load(), lineno=106, col_offset=23)], [], None, None, lineno=106, col_offset=12), lineno=106, col_offset=12)], [ExceptHandler(Name('_OptionError', Load(), lineno=107, col_offset=15), Name('msg', Store(), lineno=107, col_offset=29), [Print(Attribute(Name('sys', Load(), lineno=108, col_offset=20), 'stderr', Load(), lineno=108, col_offset=20), [Str('Invalid -W option ignored:', lineno=108, col_offset=32), Name('msg', Load(), lineno=108, col_offset=62)], True, lineno=108, col_offset=12)], lineno=107, col_offset=8)], [], lineno=105, col_offset=8)], [], lineno=104, col_offset=4)], [], lineno=103, col_offset=0), FunctionDef('_setoption', arguments([Name('arg', Param(), lineno=111, col_offset=15)], None, None, []), [Import([alias('re', None)], lineno=112, col_offset=4), Assign([Name('parts', Store(), lineno=113, col_offset=4)], Call(Attribute(Name('arg', Load(), lineno=113, col_offset=12), 'split', Load(), lineno=113, col_offset=12), [Str(':', lineno=113, col_offset=22)], [], None, None, lineno=113, col_offset=12), lineno=113, col_offset=4), If(Compare(Call(Name('len', Load(), lineno=114, col_offset=7), [Name('parts', Load(), lineno=114, col_offset=11)], [], None, None, lineno=114, col_offset=7), [Gt()], [Num(5, lineno=114, col_offset=20)], lineno=114, col_offset=7), [Raise(Call(Name('_OptionError', Load(), lineno=115, col_offset=14), [BinOp(Str('too many fields (max 5): %r', lineno=115, col_offset=27), Mod(), Tuple([Name('arg', Load(), lineno=115, col_offset=60)], Load(), lineno=115, col_offset=60), lineno=115, col_offset=27)], [], None, None, lineno=115, col_offset=14), None, None, lineno=115, col_offset=8)], [], lineno=114, col_offset=4), While(Compare(Call(Name('len', Load(), lineno=116, col_offset=10), [Name('parts', Load(), lineno=116, col_offset=14)], [], None, None, lineno=116, col_offset=10), [Lt()], [Num(5, lineno=116, col_offset=23)], lineno=116, col_offset=10), [Expr(Call(Attribute(Name('parts', Load(), lineno=117, col_offset=8), 'append', Load(), lineno=117, col_offset=8), [Str('', lineno=117, col_offset=21)], [], None, None, lineno=117, col_offset=8), lineno=117, col_offset=8)], [], lineno=116, col_offset=4), Assign([Tuple([Name('action', Store(), lineno=118, col_offset=4), Name('message', Store(), lineno=118, col_offset=12), Name('category', Store(), lineno=118, col_offset=21), Name('module', Store(), lineno=118, col_offset=31), Name('lineno', Store(), lineno=118, col_offset=39)], Store(), lineno=118, col_offset=4)], ListComp(Call(Attribute(Name('s', Load(), lineno=118, col_offset=49), 'strip', Load(), lineno=118, col_offset=49), [], [], None, None, lineno=118, col_offset=49), [comprehension(Name('s', Store(), lineno=119, col_offset=53), Name('parts', Load(), lineno=119, col_offset=58), [])], lineno=118, col_offset=49), lineno=118, col_offset=4), Assign([Name('action', Store(), lineno=120, col_offset=4)], Call(Name('_getaction', Load(), lineno=120, col_offset=13), [Name('action', Load(), lineno=120, col_offset=24)], [], None, None, lineno=120, col_offset=13), lineno=120, col_offset=4), Assign([Name('message', Store(), lineno=121, col_offset=4)], Call(Attribute(Name('re', Load(), lineno=121, col_offset=14), 'escape', Load(), lineno=121, col_offset=14), [Name('message', Load(), lineno=121, col_offset=24)], [], None, None, lineno=121, col_offset=14), lineno=121, col_offset=4), Assign([Name('category', Store(), lineno=122, col_offset=4)], Call(Name('_getcategory', Load(), lineno=122, col_offset=15), [Name('category', Load(), lineno=122, col_offset=28)], [], None, None, lineno=122, col_offset=15), lineno=122, col_offset=4), Assign([Name('module', Store(), lineno=123, col_offset=4)], Call(Attribute(Name('re', Load(), lineno=123, col_offset=13), 'escape', Load(), lineno=123, col_offset=13), [Name('module', Load(), lineno=123, col_offset=23)], [], None, None, lineno=123, col_offset=13), lineno=123, col_offset=4), If(Name('module', Load(), lineno=124, col_offset=7), [Assign([Name('module', Store(), lineno=125, col_offset=8)], BinOp(Name('module', Load(), lineno=125, col_offset=17), Add(), Str('$', lineno=125, col_offset=26), lineno=125, col_offset=17), lineno=125, col_offset=8)], [], lineno=124, col_offset=4), If(Name('lineno', Load(), lineno=126, col_offset=7), [TryExcept([Assign([Name('lineno', Store(), lineno=128, col_offset=12)], Call(Name('int', Load(), lineno=128, col_offset=21), [Name('lineno', Load(), lineno=128, col_offset=25)], [], None, None, lineno=128, col_offset=21), lineno=128, col_offset=12), If(Compare(Name('lineno', Load(), lineno=129, col_offset=15), [Lt()], [Num(0, lineno=129, col_offset=24)], lineno=129, col_offset=15), [Raise(Name('ValueError', Load(), lineno=130, col_offset=22), None, None, lineno=130, col_offset=16)], [], lineno=129, col_offset=12)], [ExceptHandler(Tuple([Name('ValueError', Load(), lineno=131, col_offset=16), Name('OverflowError', Load(), lineno=131, col_offset=28)], Load(), lineno=131, col_offset=16), None, [Raise(Call(Name('_OptionError', Load(), lineno=132, col_offset=18), [BinOp(Str('invalid lineno %r', lineno=132, col_offset=31), Mod(), Tuple([Name('lineno', Load(), lineno=132, col_offset=54)], Load(), lineno=132, col_offset=54), lineno=132, col_offset=31)], [], None, None, lineno=132, col_offset=18), None, None, lineno=132, col_offset=12)], lineno=131, col_offset=8)], [], lineno=127, col_offset=8)], [Assign([Name('lineno', Store(), lineno=134, col_offset=8)], Num(0, lineno=134, col_offset=17), lineno=134, col_offset=8)], lineno=126, col_offset=4), Expr(Call(Name('filterwarnings', Load(), lineno=135, col_offset=4), [Name('action', Load(), lineno=135, col_offset=19), Name('message', Load(), lineno=135, col_offset=27), Name('category', Load(), lineno=135, col_offset=36), Name('module', Load(), lineno=135, col_offset=46), Name('lineno', Load(), lineno=135, col_offset=54)], [], None, None, lineno=135, col_offset=4), lineno=135, col_offset=4)], [], lineno=111, col_offset=0), FunctionDef('_getaction', arguments([Name('action', Param(), lineno=138, col_offset=15)], None, None, []), [If(UnaryOp(Not(), Name('action', Load(), lineno=139, col_offset=11), lineno=139, col_offset=7), [Return(Str('default', lineno=140, col_offset=15), lineno=140, col_offset=8)], [], lineno=139, col_offset=4), If(Compare(Name('action', Load(), lineno=141, col_offset=7), [Eq()], [Str('all', lineno=141, col_offset=17)], lineno=141, col_offset=7), [Return(Str('always', lineno=141, col_offset=31), lineno=141, col_offset=24)], [], lineno=141, col_offset=4), For(Name('a', Store(), lineno=142, col_offset=8), Tuple([Str('default', lineno=142, col_offset=14), Str('always', lineno=142, col_offset=25), Str('ignore', lineno=142, col_offset=35), Str('module', lineno=142, col_offset=45), Str('once', lineno=142, col_offset=55), Str('error', lineno=142, col_offset=63)], Load(), lineno=142, col_offset=14), [If(Call(Attribute(Name('a', Load(), lineno=143, col_offset=11), 'startswith', Load(), lineno=143, col_offset=11), [Name('action', Load(), lineno=143, col_offset=24)], [], None, None, lineno=143, col_offset=11), [Return(Name('a', Load(), lineno=144, col_offset=19), lineno=144, col_offset=12)], [], lineno=143, col_offset=8)], [], lineno=142, col_offset=4), Raise(Call(Name('_OptionError', Load(), lineno=145, col_offset=10), [BinOp(Str('invalid action: %r', lineno=145, col_offset=23), Mod(), Tuple([Name('action', Load(), lineno=145, col_offset=47)], Load(), lineno=145, col_offset=47), lineno=145, col_offset=23)], [], None, None, lineno=145, col_offset=10), None, None, lineno=145, col_offset=4)], [], lineno=138, col_offset=0), FunctionDef('_getcategory', arguments([Name('category', Param(), lineno=148, col_offset=17)], None, None, []), [Import([alias('re', None)], lineno=149, col_offset=4), If(UnaryOp(Not(), Name('category', Load(), lineno=150, col_offset=11), lineno=150, col_offset=7), [Return(Name('Warning', Load(), lineno=151, col_offset=15), lineno=151, col_offset=8)], [], lineno=150, col_offset=4), If(Call(Attribute(Name('re', Load(), lineno=152, col_offset=7), 'match', Load(), lineno=152, col_offset=7), [Str('^[a-zA-Z0-9_]+$', lineno=152, col_offset=16), Name('category', Load(), lineno=152, col_offset=35)], [], None, None, lineno=152, col_offset=7), [TryExcept([Assign([Name('cat', Store(), lineno=154, col_offset=12)], Call(Name('eval', Load(), lineno=154, col_offset=18), [Name('category', Load(), lineno=154, col_offset=23)], [], None, None, lineno=154, col_offset=18), lineno=154, col_offset=12)], [ExceptHandler(Name('NameError', Load(), lineno=155, col_offset=15), None, [Raise(Call(Name('_OptionError', Load(), lineno=156, col_offset=18), [BinOp(Str('unknown warning category: %r', lineno=156, col_offset=31), Mod(), Tuple([Name('category', Load(), lineno=156, col_offset=65)], Load(), lineno=156, col_offset=65), lineno=156, col_offset=31)], [], None, None, lineno=156, col_offset=18), None, None, lineno=156, col_offset=12)], lineno=155, col_offset=8)], [], lineno=153, col_offset=8)], [Assign([Name('i', Store(), lineno=158, col_offset=8)], Call(Attribute(Name('category', Load(), lineno=158, col_offset=12), 'rfind', Load(), lineno=158, col_offset=12), [Str('.', lineno=158, col_offset=27)], [], None, None, lineno=158, col_offset=12), lineno=158, col_offset=8), Assign([Name('module', Store(), lineno=159, col_offset=8)], Subscript(Name('category', Load(), lineno=159, col_offset=17), Slice(None, Name('i', Load(), lineno=159, col_offset=27), None), Load(), lineno=159, col_offset=17), lineno=159, col_offset=8), Assign([Name('klass', Store(), lineno=160, col_offset=8)], Subscript(Name('category', Load(), lineno=160, col_offset=16), Slice(BinOp(Name('i', Load(), lineno=160, col_offset=25), Add(), Num(1, lineno=160, col_offset=27), lineno=160, col_offset=25), None, None), Load(), lineno=160, col_offset=16), lineno=160, col_offset=8), TryExcept([Assign([Name('m', Store(), lineno=162, col_offset=12)], Call(Name('__import__', Load(), lineno=162, col_offset=16), [Name('module', Load(), lineno=162, col_offset=27), Name('None', Load(), lineno=162, col_offset=35), Name('None', Load(), lineno=162, col_offset=41), List([Name('klass', Load(), lineno=162, col_offset=48)], Load(), lineno=162, col_offset=47)], [], None, None, lineno=162, col_offset=16), lineno=162, col_offset=12)], [ExceptHandler(Name('ImportError', Load(), lineno=163, col_offset=15), None, [Raise(Call(Name('_OptionError', Load(), lineno=164, col_offset=18), [BinOp(Str('invalid module name: %r', lineno=164, col_offset=31), Mod(), Tuple([Name('module', Load(), lineno=164, col_offset=60)], Load(), lineno=164, col_offset=60), lineno=164, col_offset=31)], [], None, None, lineno=164, col_offset=18), None, None, lineno=164, col_offset=12)], lineno=163, col_offset=8)], [], lineno=161, col_offset=8), TryExcept([Assign([Name('cat', Store(), lineno=166, col_offset=12)], Call(Name('getattr', Load(), lineno=166, col_offset=18), [Name('m', Load(), lineno=166, col_offset=26), Name('klass', Load(), lineno=166, col_offset=29)], [], None, None, lineno=166, col_offset=18), lineno=166, col_offset=12)], [ExceptHandler(Name('AttributeError', Load(), lineno=167, col_offset=15), None, [Raise(Call(Name('_OptionError', Load(), lineno=168, col_offset=18), [BinOp(Str('unknown warning category: %r', lineno=168, col_offset=31), Mod(), Tuple([Name('category', Load(), lineno=168, col_offset=65)], Load(), lineno=168, col_offset=65), lineno=168, col_offset=31)], [], None, None, lineno=168, col_offset=18), None, None, lineno=168, col_offset=12)], lineno=167, col_offset=8)], [], lineno=165, col_offset=8)], lineno=152, col_offset=4), If(UnaryOp(Not(), Call(Name('issubclass', Load(), lineno=169, col_offset=11), [Name('cat', Load(), lineno=169, col_offset=22), Name('Warning', Load(), lineno=169, col_offset=27)], [], None, None, lineno=169, col_offset=11), lineno=169, col_offset=7), [Raise(Call(Name('_OptionError', Load(), lineno=170, col_offset=14), [BinOp(Str('invalid warning category: %r', lineno=170, col_offset=27), Mod(), Tuple([Name('category', Load(), lineno=170, col_offset=61)], Load(), lineno=170, col_offset=61), lineno=170, col_offset=27)], [], None, None, lineno=170, col_offset=14), None, None, lineno=170, col_offset=8)], [], lineno=169, col_offset=4), Return(Name('cat', Load(), lineno=171, col_offset=11), lineno=171, col_offset=4)], [], lineno=148, col_offset=0), FunctionDef('warn', arguments([Name('message', Param(), lineno=175, col_offset=9), Name('category', Param(), lineno=175, col_offset=18), Name('stacklevel', Param(), lineno=175, col_offset=33)], None, None, [Name('None', Load(), lineno=175, col_offset=27), Num(1, lineno=175, col_offset=44)]), [Expr(Str('Issue a warning, or maybe ignore it or raise an exception.', lineno=176, col_offset=4), lineno=176, col_offset=4), If(Call(Name('isinstance', Load(), lineno=178, col_offset=7), [Name('message', Load(), lineno=178, col_offset=18), Name('Warning', Load(), lineno=178, col_offset=27)], [], None, None, lineno=178, col_offset=7), [Assign([Name('category', Store(), lineno=179, col_offset=8)], Attribute(Name('message', Load(), lineno=179, col_offset=19), '__class__', Load(), lineno=179, col_offset=19), lineno=179, col_offset=8)], [], lineno=178, col_offset=4), If(Compare(Name('category', Load(), lineno=181, col_offset=7), [Is()], [Name('None', Load(), lineno=181, col_offset=19)], lineno=181, col_offset=7), [Assign([Name('category', Store(), lineno=182, col_offset=8)], Name('UserWarning', Load(), lineno=182, col_offset=19), lineno=182, col_offset=8)], [], lineno=181, col_offset=4), Assert(Call(Name('issubclass', Load(), lineno=183, col_offset=11), [Name('category', Load(), lineno=183, col_offset=22), Name('Warning', Load(), lineno=183, col_offset=32)], [], None, None, lineno=183, col_offset=11), None, lineno=183, col_offset=4), TryExcept([Assign([Name('caller', Store(), lineno=186, col_offset=8)], Call(Attribute(Name('sys', Load(), lineno=186, col_offset=17), '_getframe', Load(), lineno=186, col_offset=17), [Name('stacklevel', Load(), lineno=186, col_offset=31)], [], None, None, lineno=186, col_offset=17), lineno=186, col_offset=8)], [ExceptHandler(Name('ValueError', Load(), lineno=187, col_offset=11), None, [Assign([Name('globals', Store(), lineno=188, col_offset=8)], Attribute(Name('sys', Load(), lineno=188, col_offset=18), '__dict__', Load(), lineno=188, col_offset=18), lineno=188, col_offset=8), Assign([Name('lineno', Store(), lineno=189, col_offset=8)], Num(1, lineno=189, col_offset=17), lineno=189, col_offset=8)], lineno=187, col_offset=4)], [Assign([Name('globals', Store(), lineno=191, col_offset=8)], Attribute(Name('caller', Load(), lineno=191, col_offset=18), 'f_globals', Load(), lineno=191, col_offset=18), lineno=191, col_offset=8), Assign([Name('lineno', Store(), lineno=192, col_offset=8)], Attribute(Name('caller', Load(), lineno=192, col_offset=17), 'f_lineno', Load(), lineno=192, col_offset=17), lineno=192, col_offset=8)], lineno=185, col_offset=4), If(Compare(Str('__name__', lineno=193, col_offset=7), [In()], [Name('globals', Load(), lineno=193, col_offset=21)], lineno=193, col_offset=7), [Assign([Name('module', Store(), lineno=194, col_offset=8)], Subscript(Name('globals', Load(), lineno=194, col_offset=17), Index(Str('__name__', lineno=194, col_offset=25)), Load(), lineno=194, col_offset=17), lineno=194, col_offset=8)], [Assign([Name('module', Store(), lineno=196, col_offset=8)], Str('<string>', lineno=196, col_offset=17), lineno=196, col_offset=8)], lineno=193, col_offset=4), Assign([Name('filename', Store(), lineno=197, col_offset=4)], Call(Attribute(Name('globals', Load(), lineno=197, col_offset=15), 'get', Load(), lineno=197, col_offset=15), [Str('__file__', lineno=197, col_offset=27)], [], None, None, lineno=197, col_offset=15), lineno=197, col_offset=4), If(Name('filename', Load(), lineno=198, col_offset=7), [Assign([Name('fnl', Store(), lineno=199, col_offset=8)], Call(Attribute(Name('filename', Load(), lineno=199, col_offset=14), 'lower', Load(), lineno=199, col_offset=14), [], [], None, None, lineno=199, col_offset=14), lineno=199, col_offset=8), If(Call(Attribute(Name('fnl', Load(), lineno=200, col_offset=11), 'endswith', Load(), lineno=200, col_offset=11), [Tuple([Str('.pyc', lineno=200, col_offset=25), Str('.pyo', lineno=200, col_offset=33)], Load(), lineno=200, col_offset=25)], [], None, None, lineno=200, col_offset=11), [Assign([Name('filename', Store(), lineno=201, col_offset=12)], Subscript(Name('filename', Load(), lineno=201, col_offset=23), Slice(None, Num(-1, lineno=201, col_offset=34), None), Load(), lineno=201, col_offset=23), lineno=201, col_offset=12)], [], lineno=200, col_offset=8)], [If(Compare(Name('module', Load(), lineno=203, col_offset=11), [Eq()], [Str('__main__', lineno=203, col_offset=21)], lineno=203, col_offset=11), [TryExcept([Assign([Name('filename', Store(), lineno=205, col_offset=16)], Subscript(Attribute(Name('sys', Load(), lineno=205, col_offset=27), 'argv', Load(), lineno=205, col_offset=27), Index(Num(0, lineno=205, col_offset=36)), Load(), lineno=205, col_offset=27), lineno=205, col_offset=16)], [ExceptHandler(Name('AttributeError', Load(), lineno=206, col_offset=19), None, [Assign([Name('filename', Store(), lineno=208, col_offset=16)], Str('__main__', lineno=208, col_offset=27), lineno=208, col_offset=16)], lineno=206, col_offset=12)], [], lineno=204, col_offset=12)], [], lineno=203, col_offset=8), If(UnaryOp(Not(), Name('filename', Load(), lineno=209, col_offset=15), lineno=209, col_offset=11), [Assign([Name('filename', Store(), lineno=210, col_offset=12)], Name('module', Load(), lineno=210, col_offset=23), lineno=210, col_offset=12)], [], lineno=209, col_offset=8)], lineno=198, col_offset=4), Assign([Name('registry', Store(), lineno=211, col_offset=4)], Call(Attribute(Name('globals', Load(), lineno=211, col_offset=15), 'setdefault', Load(), lineno=211, col_offset=15), [Str('__warningregistry__', lineno=211, col_offset=34), Dict([], [], lineno=211, col_offset=57)], [], None, None, lineno=211, col_offset=15), lineno=211, col_offset=4), Expr(Call(Name('warn_explicit', Load(), lineno=212, col_offset=4), [Name('message', Load(), lineno=212, col_offset=18), Name('category', Load(), lineno=212, col_offset=27), Name('filename', Load(), lineno=212, col_offset=37), Name('lineno', Load(), lineno=212, col_offset=47), Name('module', Load(), lineno=212, col_offset=55), Name('registry', Load(), lineno=212, col_offset=63), Name('globals', Load(), lineno=213, col_offset=18)], [], None, None, lineno=212, col_offset=4), lineno=212, col_offset=4)], [], lineno=175, col_offset=0), FunctionDef('warn_explicit', arguments([Name('message', Param(), lineno=215, col_offset=18), Name('category', Param(), lineno=215, col_offset=27), Name('filename', Param(), lineno=215, col_offset=37), Name('lineno', Param(), lineno=215, col_offset=47), Name('module', Param(), lineno=216, col_offset=18), Name('registry', Param(), lineno=216, col_offset=31), Name('module_globals', Param(), lineno=216, col_offset=46)], None, None, [Name('None', Load(), lineno=216, col_offset=25), Name('None', Load(), lineno=216, col_offset=40), Name('None', Load(), lineno=216, col_offset=61)]), [Assign([Name('lineno', Store(), lineno=217, col_offset=4)], Call(Name('int', Load(), lineno=217, col_offset=13), [Name('lineno', Load(), lineno=217, col_offset=17)], [], None, None, lineno=217, col_offset=13), lineno=217, col_offset=4), If(Compare(Name('module', Load(), lineno=218, col_offset=7), [Is()], [Name('None', Load(), lineno=218, col_offset=17)], lineno=218, col_offset=7), [Assign([Name('module', Store(), lineno=219, col_offset=8)], BoolOp(Or(), [Name('filename', Load(), lineno=219, col_offset=17), Str('<unknown>', lineno=219, col_offset=29)], lineno=219, col_offset=17), lineno=219, col_offset=8), If(Compare(Call(Attribute(Subscript(Name('module', Load(), lineno=220, col_offset=11), Slice(Num(-3, lineno=220, col_offset=19), None, None), Load(), lineno=220, col_offset=11), 'lower', Load(), lineno=220, col_offset=11), [], [], None, None, lineno=220, col_offset=11), [Eq()], [Str('.py', lineno=220, col_offset=34)], lineno=220, col_offset=11), [Assign([Name('module', Store(), lineno=221, col_offset=12)], Subscript(Name('module', Load(), lineno=221, col_offset=21), Slice(None, Num(-3, lineno=221, col_offset=30), None), Load(), lineno=221, col_offset=21), lineno=221, col_offset=12)], [], lineno=220, col_offset=8)], [], lineno=218, col_offset=4), If(Compare(Name('registry', Load(), lineno=222, col_offset=7), [Is()], [Name('None', Load(), lineno=222, col_offset=19)], lineno=222, col_offset=7), [Assign([Name('registry', Store(), lineno=223, col_offset=8)], Dict([], [], lineno=223, col_offset=19), lineno=223, col_offset=8)], [], lineno=222, col_offset=4), If(Call(Name('isinstance', Load(), lineno=224, col_offset=7), [Name('message', Load(), lineno=224, col_offset=18), Name('Warning', Load(), lineno=224, col_offset=27)], [], None, None, lineno=224, col_offset=7), [Assign([Name('text', Store(), lineno=225, col_offset=8)], Call(Name('str', Load(), lineno=225, col_offset=15), [Name('message', Load(), lineno=225, col_offset=19)], [], None, None, lineno=225, col_offset=15), lineno=225, col_offset=8), Assign([Name('category', Store(), lineno=226, col_offset=8)], Attribute(Name('message', Load(), lineno=226, col_offset=19), '__class__', Load(), lineno=226, col_offset=19), lineno=226, col_offset=8)], [Assign([Name('text', Store(), lineno=228, col_offset=8)], Name('message', Load(), lineno=228, col_offset=15), lineno=228, col_offset=8), Assign([Name('message', Store(), lineno=229, col_offset=8)], Call(Name('category', Load(), lineno=229, col_offset=18), [Name('message', Load(), lineno=229, col_offset=27)], [], None, None, lineno=229, col_offset=18), lineno=229, col_offset=8)], lineno=224, col_offset=4), Assign([Name('key', Store(), lineno=230, col_offset=4)], Tuple([Name('text', Load(), lineno=230, col_offset=11), Name('category', Load(), lineno=230, col_offset=17), Name('lineno', Load(), lineno=230, col_offset=27)], Load(), lineno=230, col_offset=11), lineno=230, col_offset=4), If(Call(Attribute(Name('registry', Load(), lineno=232, col_offset=7), 'get', Load(), lineno=232, col_offset=7), [Name('key', Load(), lineno=232, col_offset=20)], [], None, None, lineno=232, col_offset=7), [Return(None, lineno=233, col_offset=8)], [], lineno=232, col_offset=4), For(Name('item', Store(), lineno=235, col_offset=8), Name('filters', Load(), lineno=235, col_offset=16), [Assign([Tuple([Name('action', Store(), lineno=236, col_offset=8), Name('msg', Store(), lineno=236, col_offset=16), Name('cat', Store(), lineno=236, col_offset=21), Name('mod', Store(), lineno=236, col_offset=26), Name('ln', Store(), lineno=236, col_offset=31)], Store(), lineno=236, col_offset=8)], Name('item', Load(), lineno=236, col_offset=36), lineno=236, col_offset=8), If(BoolOp(And(), [BoolOp(Or(), [Compare(Name('msg', Load(), lineno=237, col_offset=13), [Is()], [Name('None', Load(), lineno=237, col_offset=20)], lineno=237, col_offset=13), Call(Attribute(Name('msg', Load(), lineno=237, col_offset=28), 'match', Load(), lineno=237, col_offset=28), [Name('text', Load(), lineno=237, col_offset=38)], [], None, None, lineno=237, col_offset=28)], lineno=237, col_offset=13), Call(Name('issubclass', Load(), lineno=238, col_offset=12), [Name('category', Load(), lineno=238, col_offset=23), Name('cat', Load(), lineno=238, col_offset=33)], [], None, None, lineno=238, col_offset=12), BoolOp(Or(), [Compare(Name('mod', Load(), lineno=239, col_offset=13), [Is()], [Name('None', Load(), lineno=239, col_offset=20)], lineno=239, col_offset=13), Call(Attribute(Name('mod', Load(), lineno=239, col_offset=28), 'match', Load(), lineno=239, col_offset=28), [Name('module', Load(), lineno=239, col_offset=38)], [], None, None, lineno=239, col_offset=28)], lineno=239, col_offset=13), BoolOp(Or(), [Compare(Name('ln', Load(), lineno=240, col_offset=13), [Eq()], [Num(0, lineno=240, col_offset=19)], lineno=240, col_offset=13), Compare(Name('lineno', Load(), lineno=240, col_offset=24), [Eq()], [Name('ln', Load(), lineno=240, col_offset=34)], lineno=240, col_offset=24)], lineno=240, col_offset=13)], lineno=237, col_offset=12), [Break( lineno=241, col_offset=12)], [], lineno=237, col_offset=8)], [Assign([Name('action', Store(), lineno=243, col_offset=8)], Name('defaultaction', Load(), lineno=243, col_offset=17), lineno=243, col_offset=8)], lineno=235, col_offset=4), If(Compare(Name('action', Load(), lineno=245, col_offset=7), [Eq()], [Str('ignore', lineno=245, col_offset=17)], lineno=245, col_offset=7), [Assign([Subscript(Name('registry', Load(), lineno=246, col_offset=8), Index(Name('key', Load(), lineno=246, col_offset=17)), Store(), lineno=246, col_offset=8)], Num(1, lineno=246, col_offset=24), lineno=246, col_offset=8), Return(None, lineno=247, col_offset=8)], [], lineno=245, col_offset=4), Expr(Call(Attribute(Name('linecache', Load(), lineno=251, col_offset=4), 'getlines', Load(), lineno=251, col_offset=4), [Name('filename', Load(), lineno=251, col_offset=23), Name('module_globals', Load(), lineno=251, col_offset=33)], [], None, None, lineno=251, col_offset=4), lineno=251, col_offset=4), If(Compare(Name('action', Load(), lineno=253, col_offset=7), [Eq()], [Str('error', lineno=253, col_offset=17)], lineno=253, col_offset=7), [Raise(Name('message', Load(), lineno=254, col_offset=14), None, None, lineno=254, col_offset=8)], [], lineno=253, col_offset=4), If(Compare(Name('action', Load(), lineno=256, col_offset=7), [Eq()], [Str('once', lineno=256, col_offset=17)], lineno=256, col_offset=7), [Assign([Subscript(Name('registry', Load(), lineno=257, col_offset=8), Index(Name('key', Load(), lineno=257, col_offset=17)), Store(), lineno=257, col_offset=8)], Num(1, lineno=257, col_offset=24), lineno=257, col_offset=8), Assign([Name('oncekey', Store(), lineno=258, col_offset=8)], Tuple([Name('text', Load(), lineno=258, col_offset=19), Name('category', Load(), lineno=258, col_offset=25)], Load(), lineno=258, col_offset=19), lineno=258, col_offset=8), If(Call(Attribute(Name('onceregistry', Load(), lineno=259, col_offset=11), 'get', Load(), lineno=259, col_offset=11), [Name('oncekey', Load(), lineno=259, col_offset=28)], [], None, None, lineno=259, col_offset=11), [Return(None, lineno=260, col_offset=12)], [], lineno=259, col_offset=8), Assign([Subscript(Name('onceregistry', Load(), lineno=261, col_offset=8), Index(Name('oncekey', Load(), lineno=261, col_offset=21)), Store(), lineno=261, col_offset=8)], Num(1, lineno=261, col_offset=32), lineno=261, col_offset=8)], [If(Compare(Name('action', Load(), lineno=262, col_offset=9), [Eq()], [Str('always', lineno=262, col_offset=19)], lineno=262, col_offset=9), [Pass( lineno=263, col_offset=8)], [If(Compare(Name('action', Load(), lineno=264, col_offset=9), [Eq()], [Str('module', lineno=264, col_offset=19)], lineno=264, col_offset=9), [Assign([Subscript(Name('registry', Load(), lineno=265, col_offset=8), Index(Name('key', Load(), lineno=265, col_offset=17)), Store(), lineno=265, col_offset=8)], Num(1, lineno=265, col_offset=24), lineno=265, col_offset=8), Assign([Name('altkey', Store(), lineno=266, col_offset=8)], Tuple([Name('text', Load(), lineno=266, col_offset=18), Name('category', Load(), lineno=266, col_offset=24), Num(0, lineno=266, col_offset=34)], Load(), lineno=266, col_offset=18), lineno=266, col_offset=8), If(Call(Attribute(Name('registry', Load(), lineno=267, col_offset=11), 'get', Load(), lineno=267, col_offset=11), [Name('altkey', Load(), lineno=267, col_offset=24)], [], None, None, lineno=267, col_offset=11), [Return(None, lineno=268, col_offset=12)], [], lineno=267, col_offset=8), Assign([Subscript(Name('registry', Load(), lineno=269, col_offset=8), Index(Name('altkey', Load(), lineno=269, col_offset=17)), Store(), lineno=269, col_offset=8)], Num(1, lineno=269, col_offset=27), lineno=269, col_offset=8)], [If(Compare(Name('action', Load(), lineno=270, col_offset=9), [Eq()], [Str('default', lineno=270, col_offset=19)], lineno=270, col_offset=9), [Assign([Subscript(Name('registry', Load(), lineno=271, col_offset=8), Index(Name('key', Load(), lineno=271, col_offset=17)), Store(), lineno=271, col_offset=8)], Num(1, lineno=271, col_offset=24), lineno=271, col_offset=8)], [Raise(Call(Name('RuntimeError', Load(), lineno=274, col_offset=14), [BinOp(Str('Unrecognized action (%r) in warnings.filters:\n %s', lineno=275, col_offset=14), Mod(), Tuple([Name('action', Load(), lineno=276, col_offset=15), Name('item', Load(), lineno=276, col_offset=23)], Load(), lineno=276, col_offset=15), lineno=275, col_offset=14)], [], None, None, lineno=274, col_offset=14), None, None, lineno=274, col_offset=8)], lineno=270, col_offset=9)], lineno=264, col_offset=9)], lineno=262, col_offset=9)], lineno=256, col_offset=4), Expr(Call(Name('showwarning', Load(), lineno=278, col_offset=4), [Name('message', Load(), lineno=278, col_offset=16), Name('category', Load(), lineno=278, col_offset=25), Name('filename', Load(), lineno=278, col_offset=35), Name('lineno', Load(), lineno=278, col_offset=45)], [], None, None, lineno=278, col_offset=4), lineno=278, col_offset=4)], [], lineno=215, col_offset=0), ClassDef('WarningMessage', [Name('object', Load(), lineno=281, col_offset=21)], [Expr(Str('Holds the result of a single showwarning() call.', lineno=283, col_offset=4), lineno=283, col_offset=4), Assign([Name('_WARNING_DETAILS', Store(), lineno=285, col_offset=4)], Tuple([Str('message', lineno=285, col_offset=24), Str('category', lineno=285, col_offset=35), Str('filename', lineno=285, col_offset=47), Str('lineno', lineno=285, col_offset=59), Str('file', lineno=285, col_offset=69), Str('line', lineno=286, col_offset=24)], Load(), lineno=285, col_offset=24), lineno=285, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=288, col_offset=17), Name('message', Param(), lineno=288, col_offset=23), Name('category', Param(), lineno=288, col_offset=32), Name('filename', Param(), lineno=288, col_offset=42), Name('lineno', Param(), lineno=288, col_offset=52), Name('file', Param(), lineno=288, col_offset=60), Name('line', Param(), lineno=289, col_offset=20)], None, None, [Name('None', Load(), lineno=288, col_offset=65), Name('None', Load(), lineno=289, col_offset=25)]), [Assign([Name('local_values', Store(), lineno=290, col_offset=8)], Call(Name('locals', Load(), lineno=290, col_offset=23), [], [], None, None, lineno=290, col_offset=23), lineno=290, col_offset=8), For(Name('attr', Store(), lineno=291, col_offset=12), Attribute(Name('self', Load(), lineno=291, col_offset=20), '_WARNING_DETAILS', Load(), lineno=291, col_offset=20), [Expr(Call(Name('setattr', Load(), lineno=292, col_offset=12), [Name('self', Load(), lineno=292, col_offset=20), Name('attr', Load(), lineno=292, col_offset=26), Subscript(Name('local_values', Load(), lineno=292, col_offset=32), Index(Name('attr', Load(), lineno=292, col_offset=45)), Load(), lineno=292, col_offset=32)], [], None, None, lineno=292, col_offset=12), lineno=292, col_offset=12)], [], lineno=291, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=293, col_offset=8), '_category_name', Store(), lineno=293, col_offset=8)], IfExp(Name('category', Load(), lineno=293, col_offset=51), Attribute(Name('category', Load(), lineno=293, col_offset=30), '__name__', Load(), lineno=293, col_offset=30), Name('None', Load(), lineno=293, col_offset=65), lineno=293, col_offset=30), lineno=293, col_offset=8)], [], lineno=288, col_offset=4), FunctionDef('__str__', arguments([Name('self', Param(), lineno=295, col_offset=16)], None, None, []), [Return(BinOp(Str('{message : %r, category : %r, filename : %r, lineno : %s, line : %r}', lineno=296, col_offset=16), Mod(), Tuple([Attribute(Name('self', Load(), lineno=297, col_offset=36), 'message', Load(), lineno=297, col_offset=36), Attribute(Name('self', Load(), lineno=297, col_offset=50), '_category_name', Load(), lineno=297, col_offset=50), Attribute(Name('self', Load(), lineno=298, col_offset=36), 'filename', Load(), lineno=298, col_offset=36), Attribute(Name('self', Load(), lineno=298, col_offset=51), 'lineno', Load(), lineno=298, col_offset=51), Attribute(Name('self', Load(), lineno=298, col_offset=64), 'line', Load(), lineno=298, col_offset=64)], Load(), lineno=297, col_offset=36), lineno=296, col_offset=16), lineno=296, col_offset=8)], [], lineno=295, col_offset=4)], [], lineno=281, col_offset=0), ClassDef('catch_warnings', [Name('object', Load(), lineno=301, col_offset=21)], [Expr(Str("A context manager that copies and restores the warnings filter upon\n    exiting the context.\n\n    The 'record' argument specifies whether warnings should be captured by a\n    custom implementation of warnings.showwarning() and be appended to a list\n    returned by the context manager. Otherwise None is returned by the context\n    manager. The objects appended to the list are arguments whose attributes\n    mirror the arguments to showwarning().\n\n    The 'module' argument is to specify an alternative module to the module\n    named 'warnings' and imported under that name. This argument is only useful\n    when testing the warnings module itself.\n\n    ", lineno=316, col_offset=-1), lineno=316, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=318, col_offset=17), Name('record', Param(), lineno=318, col_offset=23), Name('module', Param(), lineno=318, col_offset=37)], None, None, [Name('False', Load(), lineno=318, col_offset=30), Name('None', Load(), lineno=318, col_offset=44)]), [Expr(Str("Specify whether to record warnings and if an alternative module\n        should be used other than sys.modules['warnings'].\n\n        For compatibility with Python 3.0, please consider all arguments to be\n        keyword-only.\n\n        ", lineno=325, col_offset=-1), lineno=325, col_offset=-1), Assign([Attribute(Name('self', Load(), lineno=326, col_offset=8), '_record', Store(), lineno=326, col_offset=8)], Name('record', Load(), lineno=326, col_offset=23), lineno=326, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=327, col_offset=8), '_module', Store(), lineno=327, col_offset=8)], IfExp(Compare(Name('module', Load(), lineno=327, col_offset=50), [Is()], [Name('None', Load(), lineno=327, col_offset=60)], lineno=327, col_offset=50), Subscript(Attribute(Name('sys', Load(), lineno=327, col_offset=23), 'modules', Load(), lineno=327, col_offset=23), Index(Str('warnings', lineno=327, col_offset=35)), Load(), lineno=327, col_offset=23), Name('module', Load(), lineno=327, col_offset=70), lineno=327, col_offset=23), lineno=327, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=328, col_offset=8), '_entered', Store(), lineno=328, col_offset=8)], Name('False', Load(), lineno=328, col_offset=24), lineno=328, col_offset=8)], [], lineno=318, col_offset=4), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=330, col_offset=17)], None, None, []), [Assign([Name('args', Store(), lineno=331, col_offset=8)], List([], Load(), lineno=331, col_offset=15), lineno=331, col_offset=8), If(Attribute(Name('self', Load(), lineno=332, col_offset=11), '_record', Load(), lineno=332, col_offset=11), [Expr(Call(Attribute(Name('args', Load(), lineno=333, col_offset=12), 'append', Load(), lineno=333, col_offset=12), [Str('record=True', lineno=333, col_offset=24)], [], None, None, lineno=333, col_offset=12), lineno=333, col_offset=12)], [], lineno=332, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=334, col_offset=11), '_module', Load(), lineno=334, col_offset=11), [IsNot()], [Subscript(Attribute(Name('sys', Load(), lineno=334, col_offset=31), 'modules', Load(), lineno=334, col_offset=31), Index(Str('warnings', lineno=334, col_offset=43)), Load(), lineno=334, col_offset=31)], lineno=334, col_offset=11), [Expr(Call(Attribute(Name('args', Load(), lineno=335, col_offset=12), 'append', Load(), lineno=335, col_offset=12), [BinOp(Str('module=%r', lineno=335, col_offset=24), Mod(), Attribute(Name('self', Load(), lineno=335, col_offset=38), '_module', Load(), lineno=335, col_offset=38), lineno=335, col_offset=24)], [], None, None, lineno=335, col_offset=12), lineno=335, col_offset=12)], [], lineno=334, col_offset=8), Assign([Name('name', Store(), lineno=336, col_offset=8)], Attribute(Call(Name('type', Load(), lineno=336, col_offset=15), [Name('self', Load(), lineno=336, col_offset=20)], [], None, None, lineno=336, col_offset=15), '__name__', Load(), lineno=336, col_offset=15), lineno=336, col_offset=8), Return(BinOp(Str('%s(%s)', lineno=337, col_offset=15), Mod(), Tuple([Name('name', Load(), lineno=337, col_offset=27), Call(Attribute(Str(', ', lineno=337, col_offset=33), 'join', Load(), lineno=337, col_offset=33), [Name('args', Load(), lineno=337, col_offset=43)], [], None, None, lineno=337, col_offset=33)], Load(), lineno=337, col_offset=27), lineno=337, col_offset=15), lineno=337, col_offset=8)], [], lineno=330, col_offset=4), FunctionDef('__enter__', arguments([Name('self', Param(), lineno=339, col_offset=18)], None, None, []), [If(Attribute(Name('self', Load(), lineno=340, col_offset=11), '_entered', Load(), lineno=340, col_offset=11), [Raise(Call(Name('RuntimeError', Load(), lineno=341, col_offset=18), [BinOp(Str('Cannot enter %r twice', lineno=341, col_offset=31), Mod(), Name('self', Load(), lineno=341, col_offset=57), lineno=341, col_offset=31)], [], None, None, lineno=341, col_offset=18), None, None, lineno=341, col_offset=12)], [], lineno=340, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=342, col_offset=8), '_entered', Store(), lineno=342, col_offset=8)], Name('True', Load(), lineno=342, col_offset=24), lineno=342, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=343, col_offset=8), '_filters', Store(), lineno=343, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=343, col_offset=24), '_module', Load(), lineno=343, col_offset=24), 'filters', Load(), lineno=343, col_offset=24), lineno=343, col_offset=8), Assign([Attribute(Attribute(Name('self', Load(), lineno=344, col_offset=8), '_module', Load(), lineno=344, col_offset=8), 'filters', Store(), lineno=344, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=344, col_offset=31), '_filters', Load(), lineno=344, col_offset=31), Slice(None, None, None), Load(), lineno=344, col_offset=31), lineno=344, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=345, col_offset=8), '_showwarning', Store(), lineno=345, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=345, col_offset=28), '_module', Load(), lineno=345, col_offset=28), 'showwarning', Load(), lineno=345, col_offset=28), lineno=345, col_offset=8), If(Attribute(Name('self', Load(), lineno=346, col_offset=11), '_record', Load(), lineno=346, col_offset=11), [Assign([Name('log', Store(), lineno=347, col_offset=12)], List([], Load(), lineno=347, col_offset=18), lineno=347, col_offset=12), FunctionDef('showwarning', arguments([], 'args', 'kwargs', []), [Expr(Call(Attribute(Name('log', Load(), lineno=349, col_offset=16), 'append', Load(), lineno=349, col_offset=16), [Call(Name('WarningMessage', Load(), lineno=349, col_offset=27), [], [], Name('args', Load(), lineno=349, col_offset=43), Name('kwargs', Load(), lineno=349, col_offset=51), lineno=349, col_offset=27)], [], None, None, lineno=349, col_offset=16), lineno=349, col_offset=16)], [], lineno=348, col_offset=12), Assign([Attribute(Attribute(Name('self', Load(), lineno=350, col_offset=12), '_module', Load(), lineno=350, col_offset=12), 'showwarning', Store(), lineno=350, col_offset=12)], Name('showwarning', Load(), lineno=350, col_offset=39), lineno=350, col_offset=12), Return(Name('log', Load(), lineno=351, col_offset=19), lineno=351, col_offset=12)], [Return(Name('None', Load(), lineno=353, col_offset=19), lineno=353, col_offset=12)], lineno=346, col_offset=8)], [], lineno=339, col_offset=4), FunctionDef('__exit__', arguments([Name('self', Param(), lineno=355, col_offset=17)], 'exc_info', None, []), [If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=356, col_offset=15), '_entered', Load(), lineno=356, col_offset=15), lineno=356, col_offset=11), [Raise(Call(Name('RuntimeError', Load(), lineno=357, col_offset=18), [BinOp(Str('Cannot exit %r without entering first', lineno=357, col_offset=31), Mod(), Name('self', Load(), lineno=357, col_offset=73), lineno=357, col_offset=31)], [], None, None, lineno=357, col_offset=18), None, None, lineno=357, col_offset=12)], [], lineno=356, col_offset=8), Assign([Attribute(Attribute(Name('self', Load(), lineno=358, col_offset=8), '_module', Load(), lineno=358, col_offset=8), 'filters', Store(), lineno=358, col_offset=8)], Attribute(Name('self', Load(), lineno=358, col_offset=31), '_filters', Load(), lineno=358, col_offset=31), lineno=358, col_offset=8), Assign([Attribute(Attribute(Name('self', Load(), lineno=359, col_offset=8), '_module', Load(), lineno=359, col_offset=8), 'showwarning', Store(), lineno=359, col_offset=8)], Attribute(Name('self', Load(), lineno=359, col_offset=35), '_showwarning', Load(), lineno=359, col_offset=35), lineno=359, col_offset=8)], [], lineno=355, col_offset=4)], [], lineno=301, col_offset=0), Assign([Name('_warnings_defaults', Store(), lineno=370, col_offset=0)], Name('False', Load(), lineno=370, col_offset=21), lineno=370, col_offset=0), TryExcept([ImportFrom('_warnings', [alias('filters', None), alias('default_action', None), alias('once_registry', None), alias('warn', None), alias('warn_explicit', None)], 0, lineno=372, col_offset=4), Assign([Name('defaultaction', Store(), lineno=374, col_offset=4)], Name('default_action', Load(), lineno=374, col_offset=20), lineno=374, col_offset=4), Assign([Name('onceregistry', Store(), lineno=375, col_offset=4)], Name('once_registry', Load(), lineno=375, col_offset=19), lineno=375, col_offset=4), Assign([Name('_warnings_defaults', Store(), lineno=376, col_offset=4)], Name('True', Load(), lineno=376, col_offset=25), lineno=376, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=377, col_offset=7), None, [Assign([Name('filters', Store(), lineno=378, col_offset=4)], List([], Load(), lineno=378, col_offset=14), lineno=378, col_offset=4), Assign([Name('defaultaction', Store(), lineno=379, col_offset=4)], Str('default', lineno=379, col_offset=20), lineno=379, col_offset=4), Assign([Name('onceregistry', Store(), lineno=380, col_offset=4)], Dict([], [], lineno=380, col_offset=19), lineno=380, col_offset=4)], lineno=377, col_offset=0)], [], lineno=371, col_offset=0), Expr(Call(Name('_processoptions', Load(), lineno=384, col_offset=0), [Attribute(Name('sys', Load(), lineno=384, col_offset=16), 'warnoptions', Load(), lineno=384, col_offset=16)], [], None, None, lineno=384, col_offset=0), lineno=384, col_offset=0), If(UnaryOp(Not(), Name('_warnings_defaults', Load(), lineno=385, col_offset=7), lineno=385, col_offset=3), [Assign([Name('silence', Store(), lineno=386, col_offset=4)], List([Name('ImportWarning', Load(), lineno=386, col_offset=15), Name('PendingDeprecationWarning', Load(), lineno=386, col_offset=30)], Load(), lineno=386, col_offset=14), lineno=386, col_offset=4), If(BoolOp(And(), [UnaryOp(Not(), Attribute(Name('sys', Load(), lineno=388, col_offset=11), 'py3kwarning', Load(), lineno=388, col_offset=11), lineno=388, col_offset=7), UnaryOp(Not(), Attribute(Attribute(Name('sys', Load(), lineno=388, col_offset=35), 'flags', Load(), lineno=388, col_offset=35), 'division_warning', Load(), lineno=388, col_offset=35), lineno=388, col_offset=31)], lineno=388, col_offset=7), [Expr(Call(Attribute(Name('silence', Load(), lineno=389, col_offset=8), 'append', Load(), lineno=389, col_offset=8), [Name('DeprecationWarning', Load(), lineno=389, col_offset=23)], [], None, None, lineno=389, col_offset=8), lineno=389, col_offset=8)], [], lineno=388, col_offset=4), For(Name('cls', Store(), lineno=390, col_offset=8), Name('silence', Load(), lineno=390, col_offset=15), [Expr(Call(Name('simplefilter', Load(), lineno=391, col_offset=8), [Str('ignore', lineno=391, col_offset=21)], [keyword('category', Name('cls', Load(), lineno=391, col_offset=40))], None, None, lineno=391, col_offset=8), lineno=391, col_offset=8)], [], lineno=390, col_offset=4), Assign([Name('bytes_warning', Store(), lineno=392, col_offset=4)], Attribute(Attribute(Name('sys', Load(), lineno=392, col_offset=20), 'flags', Load(), lineno=392, col_offset=20), 'bytes_warning', Load(), lineno=392, col_offset=20), lineno=392, col_offset=4), If(Compare(Name('bytes_warning', Load(), lineno=393, col_offset=7), [Gt()], [Num(1, lineno=393, col_offset=23)], lineno=393, col_offset=7), [Assign([Name('bytes_action', Store(), lineno=394, col_offset=8)], Str('error', lineno=394, col_offset=23), lineno=394, col_offset=8)], [If(Name('bytes_warning', Load(), lineno=395, col_offset=9), [Assign([Name('bytes_action', Store(), lineno=396, col_offset=8)], Str('default', lineno=396, col_offset=23), lineno=396, col_offset=8)], [Assign([Name('bytes_action', Store(), lineno=398, col_offset=8)], Str('ignore', lineno=398, col_offset=23), lineno=398, col_offset=8)], lineno=395, col_offset=9)], lineno=393, col_offset=4), Expr(Call(Name('simplefilter', Load(), lineno=399, col_offset=4), [Name('bytes_action', Load(), lineno=399, col_offset=17)], [keyword('category', Name('BytesWarning', Load(), lineno=399, col_offset=40)), keyword('append', Num(1, lineno=399, col_offset=61))], None, None, lineno=399, col_offset=4), lineno=399, col_offset=4)], [], lineno=385, col_offset=0), Delete([Name('_warnings_defaults', Del(), lineno=400, col_offset=4)], lineno=400, col_offset=0)])
