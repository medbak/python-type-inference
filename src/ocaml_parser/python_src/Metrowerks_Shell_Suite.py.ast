Module([Expr(Str('Suite Metrowerks Shell Suite: Events supported by the Metrowerks Project Shell\nLevel 1, version 1\n\nGenerated from /Volumes/Sap/Applications (Mac OS 9)/Metrowerks CodeWarrior 7.0/Metrowerks CodeWarrior/CodeWarrior IDE 4.2.5\nAETE/AEUT resource version 1/0, language 0, script 0\n', lineno=6, col_offset=-1), lineno=6, col_offset=-1), Import([alias('aetools', None)], lineno=8, col_offset=0), Import([alias('MacOS', None)], lineno=9, col_offset=0), Assign([Name('_code', Store(), lineno=11, col_offset=0)], Str('MMPR', lineno=11, col_offset=8), lineno=11, col_offset=0), ClassDef('Metrowerks_Shell_Suite_Events', [], [Assign([Name('_argmap_Add_Files', Store(), lineno=15, col_offset=4)], Dict([Str('To_Segment', lineno=16, col_offset=8)], [Str('Segm', lineno=16, col_offset=23)], lineno=15, col_offset=24), lineno=15, col_offset=4), FunctionDef('Add_Files', arguments([Name('self', Param(), lineno=19, col_offset=18), Name('_object', Param(), lineno=19, col_offset=24), Name('_attributes', Param(), lineno=19, col_offset=33)], None, '_arguments', [Dict([], [], lineno=19, col_offset=45)]), [Expr(Str('Add Files: Add the specified file(s) to the current project\n        Required argument: List of files to add\n        Keyword argument To_Segment: Segment number into which to add the file(s)\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: Error code for each file added\n        ', lineno=25, col_offset=-1), lineno=25, col_offset=-1), Assign([Name('_code', Store(), lineno=26, col_offset=8)], Str('MMPR', lineno=26, col_offset=16), lineno=26, col_offset=8), Assign([Name('_subcode', Store(), lineno=27, col_offset=8)], Str('AddF', lineno=27, col_offset=19), lineno=27, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=29, col_offset=8), 'keysubst', Load(), lineno=29, col_offset=8), [Name('_arguments', Load(), lineno=29, col_offset=25), Attribute(Name('self', Load(), lineno=29, col_offset=37), '_argmap_Add_Files', Load(), lineno=29, col_offset=37)], [], None, None, lineno=29, col_offset=8), lineno=29, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=30, col_offset=8), Index(Str('----', lineno=30, col_offset=19)), Store(), lineno=30, col_offset=8)], Name('_object', Load(), lineno=30, col_offset=29), lineno=30, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=33, col_offset=8), Name('_arguments', Store(), lineno=33, col_offset=16), Name('_attributes', Store(), lineno=33, col_offset=28)], Store(), lineno=33, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=33, col_offset=42), 'send', Load(), lineno=33, col_offset=42), [Name('_code', Load(), lineno=33, col_offset=52), Name('_subcode', Load(), lineno=33, col_offset=59), Name('_arguments', Load(), lineno=34, col_offset=16), Name('_attributes', Load(), lineno=34, col_offset=28)], [], None, None, lineno=33, col_offset=42), lineno=33, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=35, col_offset=11), 'get', Load(), lineno=35, col_offset=11), [Str('errn', lineno=35, col_offset=26), Num(0, lineno=35, col_offset=34)], [], None, None, lineno=35, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=36, col_offset=18), 'Error', Load(), lineno=36, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=36, col_offset=33), 'decodeerror', Load(), lineno=36, col_offset=33), [Name('_arguments', Load(), lineno=36, col_offset=53)], [], None, None, lineno=36, col_offset=33), None, lineno=36, col_offset=12)], [], lineno=35, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=38, col_offset=11), 'has_key', Load(), lineno=38, col_offset=11), [Str('----', lineno=38, col_offset=30)], [], None, None, lineno=38, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=39, col_offset=19), Index(Str('----', lineno=39, col_offset=30)), Load(), lineno=39, col_offset=19), lineno=39, col_offset=12)], [], lineno=38, col_offset=8)], [], lineno=19, col_offset=4), Assign([Name('_argmap_Check_Syntax', Store(), lineno=41, col_offset=4)], Dict([Str('ExternalEditor', lineno=42, col_offset=8)], [Str('Errs', lineno=42, col_offset=27)], lineno=41, col_offset=27), lineno=41, col_offset=4), FunctionDef('Check_Syntax', arguments([Name('self', Param(), lineno=45, col_offset=21), Name('_object', Param(), lineno=45, col_offset=27), Name('_attributes', Param(), lineno=45, col_offset=36)], None, '_arguments', [Dict([], [], lineno=45, col_offset=48)]), [Expr(Str('Check Syntax: Check the syntax of the specified file(s)\n        Required argument: List of files to check the syntax of\n        Keyword argument ExternalEditor: Should the contents of the message window be returned to the caller?\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: Errors for each file whose syntax was checked\n        ', lineno=51, col_offset=-1), lineno=51, col_offset=-1), Assign([Name('_code', Store(), lineno=52, col_offset=8)], Str('MMPR', lineno=52, col_offset=16), lineno=52, col_offset=8), Assign([Name('_subcode', Store(), lineno=53, col_offset=8)], Str('Chek', lineno=53, col_offset=19), lineno=53, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=55, col_offset=8), 'keysubst', Load(), lineno=55, col_offset=8), [Name('_arguments', Load(), lineno=55, col_offset=25), Attribute(Name('self', Load(), lineno=55, col_offset=37), '_argmap_Check_Syntax', Load(), lineno=55, col_offset=37)], [], None, None, lineno=55, col_offset=8), lineno=55, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=56, col_offset=8), Index(Str('----', lineno=56, col_offset=19)), Store(), lineno=56, col_offset=8)], Name('_object', Load(), lineno=56, col_offset=29), lineno=56, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=59, col_offset=8), Name('_arguments', Store(), lineno=59, col_offset=16), Name('_attributes', Store(), lineno=59, col_offset=28)], Store(), lineno=59, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=59, col_offset=42), 'send', Load(), lineno=59, col_offset=42), [Name('_code', Load(), lineno=59, col_offset=52), Name('_subcode', Load(), lineno=59, col_offset=59), Name('_arguments', Load(), lineno=60, col_offset=16), Name('_attributes', Load(), lineno=60, col_offset=28)], [], None, None, lineno=59, col_offset=42), lineno=59, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=61, col_offset=11), 'get', Load(), lineno=61, col_offset=11), [Str('errn', lineno=61, col_offset=26), Num(0, lineno=61, col_offset=34)], [], None, None, lineno=61, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=62, col_offset=18), 'Error', Load(), lineno=62, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=62, col_offset=33), 'decodeerror', Load(), lineno=62, col_offset=33), [Name('_arguments', Load(), lineno=62, col_offset=53)], [], None, None, lineno=62, col_offset=33), None, lineno=62, col_offset=12)], [], lineno=61, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=64, col_offset=11), 'has_key', Load(), lineno=64, col_offset=11), [Str('----', lineno=64, col_offset=30)], [], None, None, lineno=64, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=65, col_offset=19), Index(Str('----', lineno=65, col_offset=30)), Load(), lineno=65, col_offset=19), lineno=65, col_offset=12)], [], lineno=64, col_offset=8)], [], lineno=45, col_offset=4), FunctionDef('Close_Project', arguments([Name('self', Param(), lineno=67, col_offset=22), Name('_no_object', Param(), lineno=67, col_offset=28), Name('_attributes', Param(), lineno=67, col_offset=45)], None, '_arguments', [Name('None', Load(), lineno=67, col_offset=39), Dict([], [], lineno=67, col_offset=57)]), [Expr(Str('Close Project: Close the current project\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        ', lineno=70, col_offset=-1), lineno=70, col_offset=-1), Assign([Name('_code', Store(), lineno=71, col_offset=8)], Str('MMPR', lineno=71, col_offset=16), lineno=71, col_offset=8), Assign([Name('_subcode', Store(), lineno=72, col_offset=8)], Str('ClsP', lineno=72, col_offset=19), lineno=72, col_offset=8), If(Name('_arguments', Load(), lineno=74, col_offset=11), [Raise(Name('TypeError', Load(), lineno=74, col_offset=29), Str('No optional args expected', lineno=74, col_offset=40), None, lineno=74, col_offset=23)], [], lineno=74, col_offset=8), If(Compare(Name('_no_object', Load(), lineno=75, col_offset=11), [IsNot()], [Name('None', Load(), lineno=75, col_offset=29)], lineno=75, col_offset=11), [Raise(Name('TypeError', Load(), lineno=75, col_offset=41), Str('No direct arg expected', lineno=75, col_offset=52), None, lineno=75, col_offset=35)], [], lineno=75, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=78, col_offset=8), Name('_arguments', Store(), lineno=78, col_offset=16), Name('_attributes', Store(), lineno=78, col_offset=28)], Store(), lineno=78, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=78, col_offset=42), 'send', Load(), lineno=78, col_offset=42), [Name('_code', Load(), lineno=78, col_offset=52), Name('_subcode', Load(), lineno=78, col_offset=59), Name('_arguments', Load(), lineno=79, col_offset=16), Name('_attributes', Load(), lineno=79, col_offset=28)], [], None, None, lineno=78, col_offset=42), lineno=78, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=80, col_offset=11), 'get', Load(), lineno=80, col_offset=11), [Str('errn', lineno=80, col_offset=26), Num(0, lineno=80, col_offset=34)], [], None, None, lineno=80, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=81, col_offset=18), 'Error', Load(), lineno=81, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=81, col_offset=33), 'decodeerror', Load(), lineno=81, col_offset=33), [Name('_arguments', Load(), lineno=81, col_offset=53)], [], None, None, lineno=81, col_offset=33), None, lineno=81, col_offset=12)], [], lineno=80, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=83, col_offset=11), 'has_key', Load(), lineno=83, col_offset=11), [Str('----', lineno=83, col_offset=30)], [], None, None, lineno=83, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=84, col_offset=19), Index(Str('----', lineno=84, col_offset=30)), Load(), lineno=84, col_offset=19), lineno=84, col_offset=12)], [], lineno=83, col_offset=8)], [], lineno=67, col_offset=4), Assign([Name('_argmap_Close_Window', Store(), lineno=86, col_offset=4)], Dict([Str('Saving', lineno=87, col_offset=8)], [Str('savo', lineno=87, col_offset=19)], lineno=86, col_offset=27), lineno=86, col_offset=4), FunctionDef('Close_Window', arguments([Name('self', Param(), lineno=90, col_offset=21), Name('_object', Param(), lineno=90, col_offset=27), Name('_attributes', Param(), lineno=90, col_offset=36)], None, '_arguments', [Dict([], [], lineno=90, col_offset=48)]), [Expr(Str('Close Window: Close the windows showing the specified files\n        Required argument: The files to close\n        Keyword argument Saving: Whether to save changes to each file before closing its window\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        ', lineno=95, col_offset=-1), lineno=95, col_offset=-1), Assign([Name('_code', Store(), lineno=96, col_offset=8)], Str('MMPR', lineno=96, col_offset=16), lineno=96, col_offset=8), Assign([Name('_subcode', Store(), lineno=97, col_offset=8)], Str('ClsW', lineno=97, col_offset=19), lineno=97, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=99, col_offset=8), 'keysubst', Load(), lineno=99, col_offset=8), [Name('_arguments', Load(), lineno=99, col_offset=25), Attribute(Name('self', Load(), lineno=99, col_offset=37), '_argmap_Close_Window', Load(), lineno=99, col_offset=37)], [], None, None, lineno=99, col_offset=8), lineno=99, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=100, col_offset=8), Index(Str('----', lineno=100, col_offset=19)), Store(), lineno=100, col_offset=8)], Name('_object', Load(), lineno=100, col_offset=29), lineno=100, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=102, col_offset=8), 'enumsubst', Load(), lineno=102, col_offset=8), [Name('_arguments', Load(), lineno=102, col_offset=26), Str('savo', lineno=102, col_offset=38), Name('_Enum_savo', Load(), lineno=102, col_offset=46)], [], None, None, lineno=102, col_offset=8), lineno=102, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=104, col_offset=8), Name('_arguments', Store(), lineno=104, col_offset=16), Name('_attributes', Store(), lineno=104, col_offset=28)], Store(), lineno=104, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=104, col_offset=42), 'send', Load(), lineno=104, col_offset=42), [Name('_code', Load(), lineno=104, col_offset=52), Name('_subcode', Load(), lineno=104, col_offset=59), Name('_arguments', Load(), lineno=105, col_offset=16), Name('_attributes', Load(), lineno=105, col_offset=28)], [], None, None, lineno=104, col_offset=42), lineno=104, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=106, col_offset=11), 'get', Load(), lineno=106, col_offset=11), [Str('errn', lineno=106, col_offset=26), Num(0, lineno=106, col_offset=34)], [], None, None, lineno=106, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=107, col_offset=18), 'Error', Load(), lineno=107, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=107, col_offset=33), 'decodeerror', Load(), lineno=107, col_offset=33), [Name('_arguments', Load(), lineno=107, col_offset=53)], [], None, None, lineno=107, col_offset=33), None, lineno=107, col_offset=12)], [], lineno=106, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=109, col_offset=11), 'has_key', Load(), lineno=109, col_offset=11), [Str('----', lineno=109, col_offset=30)], [], None, None, lineno=109, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=110, col_offset=19), Index(Str('----', lineno=110, col_offset=30)), Load(), lineno=110, col_offset=19), lineno=110, col_offset=12)], [], lineno=109, col_offset=8)], [], lineno=90, col_offset=4), Assign([Name('_argmap_Compile', Store(), lineno=112, col_offset=4)], Dict([Str('ExternalEditor', lineno=113, col_offset=8)], [Str('Errs', lineno=113, col_offset=27)], lineno=112, col_offset=22), lineno=112, col_offset=4), FunctionDef('Compile', arguments([Name('self', Param(), lineno=116, col_offset=16), Name('_object', Param(), lineno=116, col_offset=22), Name('_attributes', Param(), lineno=116, col_offset=31)], None, '_arguments', [Dict([], [], lineno=116, col_offset=43)]), [Expr(Str('Compile: Compile the specified file(s)\n        Required argument: List of files to compile\n        Keyword argument ExternalEditor: Should the contents of the message window be returned to the caller?\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: Errors for each file compiled\n        ', lineno=122, col_offset=-1), lineno=122, col_offset=-1), Assign([Name('_code', Store(), lineno=123, col_offset=8)], Str('MMPR', lineno=123, col_offset=16), lineno=123, col_offset=8), Assign([Name('_subcode', Store(), lineno=124, col_offset=8)], Str('Comp', lineno=124, col_offset=19), lineno=124, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=126, col_offset=8), 'keysubst', Load(), lineno=126, col_offset=8), [Name('_arguments', Load(), lineno=126, col_offset=25), Attribute(Name('self', Load(), lineno=126, col_offset=37), '_argmap_Compile', Load(), lineno=126, col_offset=37)], [], None, None, lineno=126, col_offset=8), lineno=126, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=127, col_offset=8), Index(Str('----', lineno=127, col_offset=19)), Store(), lineno=127, col_offset=8)], Name('_object', Load(), lineno=127, col_offset=29), lineno=127, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=130, col_offset=8), Name('_arguments', Store(), lineno=130, col_offset=16), Name('_attributes', Store(), lineno=130, col_offset=28)], Store(), lineno=130, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=130, col_offset=42), 'send', Load(), lineno=130, col_offset=42), [Name('_code', Load(), lineno=130, col_offset=52), Name('_subcode', Load(), lineno=130, col_offset=59), Name('_arguments', Load(), lineno=131, col_offset=16), Name('_attributes', Load(), lineno=131, col_offset=28)], [], None, None, lineno=130, col_offset=42), lineno=130, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=132, col_offset=11), 'get', Load(), lineno=132, col_offset=11), [Str('errn', lineno=132, col_offset=26), Num(0, lineno=132, col_offset=34)], [], None, None, lineno=132, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=133, col_offset=18), 'Error', Load(), lineno=133, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=133, col_offset=33), 'decodeerror', Load(), lineno=133, col_offset=33), [Name('_arguments', Load(), lineno=133, col_offset=53)], [], None, None, lineno=133, col_offset=33), None, lineno=133, col_offset=12)], [], lineno=132, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=135, col_offset=11), 'has_key', Load(), lineno=135, col_offset=11), [Str('----', lineno=135, col_offset=30)], [], None, None, lineno=135, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=136, col_offset=19), Index(Str('----', lineno=136, col_offset=30)), Load(), lineno=136, col_offset=19), lineno=136, col_offset=12)], [], lineno=135, col_offset=8)], [], lineno=116, col_offset=4), Assign([Name('_argmap_Create_Project', Store(), lineno=138, col_offset=4)], Dict([Str('from_stationery', lineno=139, col_offset=8)], [Str('Tmpl', lineno=139, col_offset=28)], lineno=138, col_offset=29), lineno=138, col_offset=4), FunctionDef('Create_Project', arguments([Name('self', Param(), lineno=142, col_offset=23), Name('_object', Param(), lineno=142, col_offset=29), Name('_attributes', Param(), lineno=142, col_offset=38)], None, '_arguments', [Dict([], [], lineno=142, col_offset=50)]), [Expr(Str("Create Project: Create a new project file\n        Required argument: New project file specifier\n        Keyword argument from_stationery: undocumented, typecode 'alis'\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        ", lineno=147, col_offset=-1), lineno=147, col_offset=-1), Assign([Name('_code', Store(), lineno=148, col_offset=8)], Str('MMPR', lineno=148, col_offset=16), lineno=148, col_offset=8), Assign([Name('_subcode', Store(), lineno=149, col_offset=8)], Str('NewP', lineno=149, col_offset=19), lineno=149, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=151, col_offset=8), 'keysubst', Load(), lineno=151, col_offset=8), [Name('_arguments', Load(), lineno=151, col_offset=25), Attribute(Name('self', Load(), lineno=151, col_offset=37), '_argmap_Create_Project', Load(), lineno=151, col_offset=37)], [], None, None, lineno=151, col_offset=8), lineno=151, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=152, col_offset=8), Index(Str('----', lineno=152, col_offset=19)), Store(), lineno=152, col_offset=8)], Name('_object', Load(), lineno=152, col_offset=29), lineno=152, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=155, col_offset=8), Name('_arguments', Store(), lineno=155, col_offset=16), Name('_attributes', Store(), lineno=155, col_offset=28)], Store(), lineno=155, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=155, col_offset=42), 'send', Load(), lineno=155, col_offset=42), [Name('_code', Load(), lineno=155, col_offset=52), Name('_subcode', Load(), lineno=155, col_offset=59), Name('_arguments', Load(), lineno=156, col_offset=16), Name('_attributes', Load(), lineno=156, col_offset=28)], [], None, None, lineno=155, col_offset=42), lineno=155, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=157, col_offset=11), 'get', Load(), lineno=157, col_offset=11), [Str('errn', lineno=157, col_offset=26), Num(0, lineno=157, col_offset=34)], [], None, None, lineno=157, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=158, col_offset=18), 'Error', Load(), lineno=158, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=158, col_offset=33), 'decodeerror', Load(), lineno=158, col_offset=33), [Name('_arguments', Load(), lineno=158, col_offset=53)], [], None, None, lineno=158, col_offset=33), None, lineno=158, col_offset=12)], [], lineno=157, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=160, col_offset=11), 'has_key', Load(), lineno=160, col_offset=11), [Str('----', lineno=160, col_offset=30)], [], None, None, lineno=160, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=161, col_offset=19), Index(Str('----', lineno=161, col_offset=30)), Load(), lineno=161, col_offset=19), lineno=161, col_offset=12)], [], lineno=160, col_offset=8)], [], lineno=142, col_offset=4), FunctionDef('Get_Definition', arguments([Name('self', Param(), lineno=163, col_offset=23), Name('_object', Param(), lineno=163, col_offset=29), Name('_attributes', Param(), lineno=163, col_offset=38)], None, '_arguments', [Dict([], [], lineno=163, col_offset=50)]), [Expr(Str("Get Definition: Returns the location(s) of a globally scoped function or data object.\n        Required argument: undocumented, typecode 'TEXT'\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: undocumented, typecode 'FDef'\n        ", lineno=168, col_offset=-1), lineno=168, col_offset=-1), Assign([Name('_code', Store(), lineno=169, col_offset=8)], Str('MMPR', lineno=169, col_offset=16), lineno=169, col_offset=8), Assign([Name('_subcode', Store(), lineno=170, col_offset=8)], Str('GDef', lineno=170, col_offset=19), lineno=170, col_offset=8), If(Name('_arguments', Load(), lineno=172, col_offset=11), [Raise(Name('TypeError', Load(), lineno=172, col_offset=29), Str('No optional args expected', lineno=172, col_offset=40), None, lineno=172, col_offset=23)], [], lineno=172, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=173, col_offset=8), Index(Str('----', lineno=173, col_offset=19)), Store(), lineno=173, col_offset=8)], Name('_object', Load(), lineno=173, col_offset=29), lineno=173, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=176, col_offset=8), Name('_arguments', Store(), lineno=176, col_offset=16), Name('_attributes', Store(), lineno=176, col_offset=28)], Store(), lineno=176, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=176, col_offset=42), 'send', Load(), lineno=176, col_offset=42), [Name('_code', Load(), lineno=176, col_offset=52), Name('_subcode', Load(), lineno=176, col_offset=59), Name('_arguments', Load(), lineno=177, col_offset=16), Name('_attributes', Load(), lineno=177, col_offset=28)], [], None, None, lineno=176, col_offset=42), lineno=176, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=178, col_offset=11), 'get', Load(), lineno=178, col_offset=11), [Str('errn', lineno=178, col_offset=26), Num(0, lineno=178, col_offset=34)], [], None, None, lineno=178, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=179, col_offset=18), 'Error', Load(), lineno=179, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=179, col_offset=33), 'decodeerror', Load(), lineno=179, col_offset=33), [Name('_arguments', Load(), lineno=179, col_offset=53)], [], None, None, lineno=179, col_offset=33), None, lineno=179, col_offset=12)], [], lineno=178, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=181, col_offset=11), 'has_key', Load(), lineno=181, col_offset=11), [Str('----', lineno=181, col_offset=30)], [], None, None, lineno=181, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=182, col_offset=19), Index(Str('----', lineno=182, col_offset=30)), Load(), lineno=182, col_offset=19), lineno=182, col_offset=12)], [], lineno=181, col_offset=8)], [], lineno=163, col_offset=4), FunctionDef('Get_Open_Documents', arguments([Name('self', Param(), lineno=184, col_offset=27), Name('_no_object', Param(), lineno=184, col_offset=33), Name('_attributes', Param(), lineno=184, col_offset=50)], None, '_arguments', [Name('None', Load(), lineno=184, col_offset=44), Dict([], [], lineno=184, col_offset=62)]), [Expr(Str('Get Open Documents: Returns the list of open documents\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: The list of documents\n        ', lineno=188, col_offset=-1), lineno=188, col_offset=-1), Assign([Name('_code', Store(), lineno=189, col_offset=8)], Str('MMPR', lineno=189, col_offset=16), lineno=189, col_offset=8), Assign([Name('_subcode', Store(), lineno=190, col_offset=8)], Str('GDoc', lineno=190, col_offset=19), lineno=190, col_offset=8), If(Name('_arguments', Load(), lineno=192, col_offset=11), [Raise(Name('TypeError', Load(), lineno=192, col_offset=29), Str('No optional args expected', lineno=192, col_offset=40), None, lineno=192, col_offset=23)], [], lineno=192, col_offset=8), If(Compare(Name('_no_object', Load(), lineno=193, col_offset=11), [IsNot()], [Name('None', Load(), lineno=193, col_offset=29)], lineno=193, col_offset=11), [Raise(Name('TypeError', Load(), lineno=193, col_offset=41), Str('No direct arg expected', lineno=193, col_offset=52), None, lineno=193, col_offset=35)], [], lineno=193, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=196, col_offset=8), Name('_arguments', Store(), lineno=196, col_offset=16), Name('_attributes', Store(), lineno=196, col_offset=28)], Store(), lineno=196, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=196, col_offset=42), 'send', Load(), lineno=196, col_offset=42), [Name('_code', Load(), lineno=196, col_offset=52), Name('_subcode', Load(), lineno=196, col_offset=59), Name('_arguments', Load(), lineno=197, col_offset=16), Name('_attributes', Load(), lineno=197, col_offset=28)], [], None, None, lineno=196, col_offset=42), lineno=196, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=198, col_offset=11), 'get', Load(), lineno=198, col_offset=11), [Str('errn', lineno=198, col_offset=26), Num(0, lineno=198, col_offset=34)], [], None, None, lineno=198, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=199, col_offset=18), 'Error', Load(), lineno=199, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=199, col_offset=33), 'decodeerror', Load(), lineno=199, col_offset=33), [Name('_arguments', Load(), lineno=199, col_offset=53)], [], None, None, lineno=199, col_offset=33), None, lineno=199, col_offset=12)], [], lineno=198, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=201, col_offset=11), 'has_key', Load(), lineno=201, col_offset=11), [Str('----', lineno=201, col_offset=30)], [], None, None, lineno=201, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=202, col_offset=19), Index(Str('----', lineno=202, col_offset=30)), Load(), lineno=202, col_offset=19), lineno=202, col_offset=12)], [], lineno=201, col_offset=8)], [], lineno=184, col_offset=4), Assign([Name('_argmap_Get_Preferences', Store(), lineno=204, col_offset=4)], Dict([Str('of', lineno=205, col_offset=8), Str('from_panel', lineno=206, col_offset=8)], [Str('PRec', lineno=205, col_offset=15), Str('PNam', lineno=206, col_offset=23)], lineno=204, col_offset=30), lineno=204, col_offset=4), FunctionDef('Get_Preferences', arguments([Name('self', Param(), lineno=209, col_offset=24), Name('_no_object', Param(), lineno=209, col_offset=30), Name('_attributes', Param(), lineno=209, col_offset=47)], None, '_arguments', [Name('None', Load(), lineno=209, col_offset=41), Dict([], [], lineno=209, col_offset=59)]), [Expr(Str('Get Preferences: Get the preferences for the current project\n        Keyword argument of: Names of requested preferences\n        Keyword argument from_panel: Name of the preference panel\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: The requested preferences\n        ', lineno=215, col_offset=-1), lineno=215, col_offset=-1), Assign([Name('_code', Store(), lineno=216, col_offset=8)], Str('MMPR', lineno=216, col_offset=16), lineno=216, col_offset=8), Assign([Name('_subcode', Store(), lineno=217, col_offset=8)], Str('Gref', lineno=217, col_offset=19), lineno=217, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=219, col_offset=8), 'keysubst', Load(), lineno=219, col_offset=8), [Name('_arguments', Load(), lineno=219, col_offset=25), Attribute(Name('self', Load(), lineno=219, col_offset=37), '_argmap_Get_Preferences', Load(), lineno=219, col_offset=37)], [], None, None, lineno=219, col_offset=8), lineno=219, col_offset=8), If(Compare(Name('_no_object', Load(), lineno=220, col_offset=11), [IsNot()], [Name('None', Load(), lineno=220, col_offset=29)], lineno=220, col_offset=11), [Raise(Name('TypeError', Load(), lineno=220, col_offset=41), Str('No direct arg expected', lineno=220, col_offset=52), None, lineno=220, col_offset=35)], [], lineno=220, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=223, col_offset=8), Name('_arguments', Store(), lineno=223, col_offset=16), Name('_attributes', Store(), lineno=223, col_offset=28)], Store(), lineno=223, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=223, col_offset=42), 'send', Load(), lineno=223, col_offset=42), [Name('_code', Load(), lineno=223, col_offset=52), Name('_subcode', Load(), lineno=223, col_offset=59), Name('_arguments', Load(), lineno=224, col_offset=16), Name('_attributes', Load(), lineno=224, col_offset=28)], [], None, None, lineno=223, col_offset=42), lineno=223, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=225, col_offset=11), 'get', Load(), lineno=225, col_offset=11), [Str('errn', lineno=225, col_offset=26), Num(0, lineno=225, col_offset=34)], [], None, None, lineno=225, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=226, col_offset=18), 'Error', Load(), lineno=226, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=226, col_offset=33), 'decodeerror', Load(), lineno=226, col_offset=33), [Name('_arguments', Load(), lineno=226, col_offset=53)], [], None, None, lineno=226, col_offset=33), None, lineno=226, col_offset=12)], [], lineno=225, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=228, col_offset=11), 'has_key', Load(), lineno=228, col_offset=11), [Str('----', lineno=228, col_offset=30)], [], None, None, lineno=228, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=229, col_offset=19), Index(Str('----', lineno=229, col_offset=30)), Load(), lineno=229, col_offset=19), lineno=229, col_offset=12)], [], lineno=228, col_offset=8)], [], lineno=209, col_offset=4), Assign([Name('_argmap_Get_Project_File', Store(), lineno=231, col_offset=4)], Dict([Str('Segment', lineno=232, col_offset=8)], [Str('Segm', lineno=232, col_offset=20)], lineno=231, col_offset=31), lineno=231, col_offset=4), FunctionDef('Get_Project_File', arguments([Name('self', Param(), lineno=235, col_offset=25), Name('_object', Param(), lineno=235, col_offset=31), Name('_attributes', Param(), lineno=235, col_offset=40)], None, '_arguments', [Dict([], [], lineno=235, col_offset=52)]), [Expr(Str("Get Project File: Returns a description of a file in the project window.\n        Required argument: The index of the file within its segment.\n        Keyword argument Segment: The segment containing the file.\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: undocumented, typecode 'SrcF'\n        ", lineno=241, col_offset=-1), lineno=241, col_offset=-1), Assign([Name('_code', Store(), lineno=242, col_offset=8)], Str('MMPR', lineno=242, col_offset=16), lineno=242, col_offset=8), Assign([Name('_subcode', Store(), lineno=243, col_offset=8)], Str('GFil', lineno=243, col_offset=19), lineno=243, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=245, col_offset=8), 'keysubst', Load(), lineno=245, col_offset=8), [Name('_arguments', Load(), lineno=245, col_offset=25), Attribute(Name('self', Load(), lineno=245, col_offset=37), '_argmap_Get_Project_File', Load(), lineno=245, col_offset=37)], [], None, None, lineno=245, col_offset=8), lineno=245, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=246, col_offset=8), Index(Str('----', lineno=246, col_offset=19)), Store(), lineno=246, col_offset=8)], Name('_object', Load(), lineno=246, col_offset=29), lineno=246, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=249, col_offset=8), Name('_arguments', Store(), lineno=249, col_offset=16), Name('_attributes', Store(), lineno=249, col_offset=28)], Store(), lineno=249, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=249, col_offset=42), 'send', Load(), lineno=249, col_offset=42), [Name('_code', Load(), lineno=249, col_offset=52), Name('_subcode', Load(), lineno=249, col_offset=59), Name('_arguments', Load(), lineno=250, col_offset=16), Name('_attributes', Load(), lineno=250, col_offset=28)], [], None, None, lineno=249, col_offset=42), lineno=249, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=251, col_offset=11), 'get', Load(), lineno=251, col_offset=11), [Str('errn', lineno=251, col_offset=26), Num(0, lineno=251, col_offset=34)], [], None, None, lineno=251, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=252, col_offset=18), 'Error', Load(), lineno=252, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=252, col_offset=33), 'decodeerror', Load(), lineno=252, col_offset=33), [Name('_arguments', Load(), lineno=252, col_offset=53)], [], None, None, lineno=252, col_offset=33), None, lineno=252, col_offset=12)], [], lineno=251, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=254, col_offset=11), 'has_key', Load(), lineno=254, col_offset=11), [Str('----', lineno=254, col_offset=30)], [], None, None, lineno=254, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=255, col_offset=19), Index(Str('----', lineno=255, col_offset=30)), Load(), lineno=255, col_offset=19), lineno=255, col_offset=12)], [], lineno=254, col_offset=8)], [], lineno=235, col_offset=4), FunctionDef('Get_Project_Specifier', arguments([Name('self', Param(), lineno=257, col_offset=30), Name('_no_object', Param(), lineno=257, col_offset=36), Name('_attributes', Param(), lineno=257, col_offset=53)], None, '_arguments', [Name('None', Load(), lineno=257, col_offset=47), Dict([], [], lineno=257, col_offset=65)]), [Expr(Str('Get Project Specifier: Return the File Specifier for the current project\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: File Specifier for the current project\n        ', lineno=261, col_offset=-1), lineno=261, col_offset=-1), Assign([Name('_code', Store(), lineno=262, col_offset=8)], Str('MMPR', lineno=262, col_offset=16), lineno=262, col_offset=8), Assign([Name('_subcode', Store(), lineno=263, col_offset=8)], Str('GetP', lineno=263, col_offset=19), lineno=263, col_offset=8), If(Name('_arguments', Load(), lineno=265, col_offset=11), [Raise(Name('TypeError', Load(), lineno=265, col_offset=29), Str('No optional args expected', lineno=265, col_offset=40), None, lineno=265, col_offset=23)], [], lineno=265, col_offset=8), If(Compare(Name('_no_object', Load(), lineno=266, col_offset=11), [IsNot()], [Name('None', Load(), lineno=266, col_offset=29)], lineno=266, col_offset=11), [Raise(Name('TypeError', Load(), lineno=266, col_offset=41), Str('No direct arg expected', lineno=266, col_offset=52), None, lineno=266, col_offset=35)], [], lineno=266, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=269, col_offset=8), Name('_arguments', Store(), lineno=269, col_offset=16), Name('_attributes', Store(), lineno=269, col_offset=28)], Store(), lineno=269, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=269, col_offset=42), 'send', Load(), lineno=269, col_offset=42), [Name('_code', Load(), lineno=269, col_offset=52), Name('_subcode', Load(), lineno=269, col_offset=59), Name('_arguments', Load(), lineno=270, col_offset=16), Name('_attributes', Load(), lineno=270, col_offset=28)], [], None, None, lineno=269, col_offset=42), lineno=269, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=271, col_offset=11), 'get', Load(), lineno=271, col_offset=11), [Str('errn', lineno=271, col_offset=26), Num(0, lineno=271, col_offset=34)], [], None, None, lineno=271, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=272, col_offset=18), 'Error', Load(), lineno=272, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=272, col_offset=33), 'decodeerror', Load(), lineno=272, col_offset=33), [Name('_arguments', Load(), lineno=272, col_offset=53)], [], None, None, lineno=272, col_offset=33), None, lineno=272, col_offset=12)], [], lineno=271, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=274, col_offset=11), 'has_key', Load(), lineno=274, col_offset=11), [Str('----', lineno=274, col_offset=30)], [], None, None, lineno=274, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=275, col_offset=19), Index(Str('----', lineno=275, col_offset=30)), Load(), lineno=275, col_offset=19), lineno=275, col_offset=12)], [], lineno=274, col_offset=8)], [], lineno=257, col_offset=4), FunctionDef('Get_Segments', arguments([Name('self', Param(), lineno=277, col_offset=21), Name('_no_object', Param(), lineno=277, col_offset=27), Name('_attributes', Param(), lineno=277, col_offset=44)], None, '_arguments', [Name('None', Load(), lineno=277, col_offset=38), Dict([], [], lineno=277, col_offset=56)]), [Expr(Str("Get Segments: Returns a description of each segment in the project.\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: undocumented, typecode 'Seg '\n        ", lineno=281, col_offset=-1), lineno=281, col_offset=-1), Assign([Name('_code', Store(), lineno=282, col_offset=8)], Str('MMPR', lineno=282, col_offset=16), lineno=282, col_offset=8), Assign([Name('_subcode', Store(), lineno=283, col_offset=8)], Str('GSeg', lineno=283, col_offset=19), lineno=283, col_offset=8), If(Name('_arguments', Load(), lineno=285, col_offset=11), [Raise(Name('TypeError', Load(), lineno=285, col_offset=29), Str('No optional args expected', lineno=285, col_offset=40), None, lineno=285, col_offset=23)], [], lineno=285, col_offset=8), If(Compare(Name('_no_object', Load(), lineno=286, col_offset=11), [IsNot()], [Name('None', Load(), lineno=286, col_offset=29)], lineno=286, col_offset=11), [Raise(Name('TypeError', Load(), lineno=286, col_offset=41), Str('No direct arg expected', lineno=286, col_offset=52), None, lineno=286, col_offset=35)], [], lineno=286, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=289, col_offset=8), Name('_arguments', Store(), lineno=289, col_offset=16), Name('_attributes', Store(), lineno=289, col_offset=28)], Store(), lineno=289, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=289, col_offset=42), 'send', Load(), lineno=289, col_offset=42), [Name('_code', Load(), lineno=289, col_offset=52), Name('_subcode', Load(), lineno=289, col_offset=59), Name('_arguments', Load(), lineno=290, col_offset=16), Name('_attributes', Load(), lineno=290, col_offset=28)], [], None, None, lineno=289, col_offset=42), lineno=289, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=291, col_offset=11), 'get', Load(), lineno=291, col_offset=11), [Str('errn', lineno=291, col_offset=26), Num(0, lineno=291, col_offset=34)], [], None, None, lineno=291, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=292, col_offset=18), 'Error', Load(), lineno=292, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=292, col_offset=33), 'decodeerror', Load(), lineno=292, col_offset=33), [Name('_arguments', Load(), lineno=292, col_offset=53)], [], None, None, lineno=292, col_offset=33), None, lineno=292, col_offset=12)], [], lineno=291, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=294, col_offset=11), 'has_key', Load(), lineno=294, col_offset=11), [Str('----', lineno=294, col_offset=30)], [], None, None, lineno=294, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=295, col_offset=19), Index(Str('----', lineno=295, col_offset=30)), Load(), lineno=295, col_offset=19), lineno=295, col_offset=12)], [], lineno=294, col_offset=8)], [], lineno=277, col_offset=4), FunctionDef('Get_member_function_names', arguments([Name('self', Param(), lineno=297, col_offset=34), Name('_object', Param(), lineno=297, col_offset=40), Name('_attributes', Param(), lineno=297, col_offset=49)], None, '_arguments', [Dict([], [], lineno=297, col_offset=61)]), [Expr(Str("Get member function names: Returns a list containing the names of all the member functions of a class object\n        Required argument: must be a class object\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: undocumented, typecode 'list'\n        ", lineno=302, col_offset=-1), lineno=302, col_offset=-1), Assign([Name('_code', Store(), lineno=303, col_offset=8)], Str('MMPR', lineno=303, col_offset=16), lineno=303, col_offset=8), Assign([Name('_subcode', Store(), lineno=304, col_offset=8)], Str('MbFN', lineno=304, col_offset=19), lineno=304, col_offset=8), If(Name('_arguments', Load(), lineno=306, col_offset=11), [Raise(Name('TypeError', Load(), lineno=306, col_offset=29), Str('No optional args expected', lineno=306, col_offset=40), None, lineno=306, col_offset=23)], [], lineno=306, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=307, col_offset=8), Index(Str('----', lineno=307, col_offset=19)), Store(), lineno=307, col_offset=8)], Name('_object', Load(), lineno=307, col_offset=29), lineno=307, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=310, col_offset=8), Name('_arguments', Store(), lineno=310, col_offset=16), Name('_attributes', Store(), lineno=310, col_offset=28)], Store(), lineno=310, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=310, col_offset=42), 'send', Load(), lineno=310, col_offset=42), [Name('_code', Load(), lineno=310, col_offset=52), Name('_subcode', Load(), lineno=310, col_offset=59), Name('_arguments', Load(), lineno=311, col_offset=16), Name('_attributes', Load(), lineno=311, col_offset=28)], [], None, None, lineno=310, col_offset=42), lineno=310, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=312, col_offset=11), 'get', Load(), lineno=312, col_offset=11), [Str('errn', lineno=312, col_offset=26), Num(0, lineno=312, col_offset=34)], [], None, None, lineno=312, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=313, col_offset=18), 'Error', Load(), lineno=313, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=313, col_offset=33), 'decodeerror', Load(), lineno=313, col_offset=33), [Name('_arguments', Load(), lineno=313, col_offset=53)], [], None, None, lineno=313, col_offset=33), None, lineno=313, col_offset=12)], [], lineno=312, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=315, col_offset=11), 'has_key', Load(), lineno=315, col_offset=11), [Str('----', lineno=315, col_offset=30)], [], None, None, lineno=315, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=316, col_offset=19), Index(Str('----', lineno=316, col_offset=30)), Load(), lineno=316, col_offset=19), lineno=316, col_offset=12)], [], lineno=315, col_offset=8)], [], lineno=297, col_offset=4), FunctionDef('Get_nonsimple_classes', arguments([Name('self', Param(), lineno=318, col_offset=30), Name('_no_object', Param(), lineno=318, col_offset=36), Name('_attributes', Param(), lineno=318, col_offset=53)], None, '_arguments', [Name('None', Load(), lineno=318, col_offset=47), Dict([], [], lineno=318, col_offset=65)]), [Expr(Str("Get nonsimple classes: Returns an alphabetical list of classes with member functions, bases classes, or subclasses\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: undocumented, typecode 'list'\n        ", lineno=322, col_offset=-1), lineno=322, col_offset=-1), Assign([Name('_code', Store(), lineno=323, col_offset=8)], Str('MMPR', lineno=323, col_offset=16), lineno=323, col_offset=8), Assign([Name('_subcode', Store(), lineno=324, col_offset=8)], Str('NsCl', lineno=324, col_offset=19), lineno=324, col_offset=8), If(Name('_arguments', Load(), lineno=326, col_offset=11), [Raise(Name('TypeError', Load(), lineno=326, col_offset=29), Str('No optional args expected', lineno=326, col_offset=40), None, lineno=326, col_offset=23)], [], lineno=326, col_offset=8), If(Compare(Name('_no_object', Load(), lineno=327, col_offset=11), [IsNot()], [Name('None', Load(), lineno=327, col_offset=29)], lineno=327, col_offset=11), [Raise(Name('TypeError', Load(), lineno=327, col_offset=41), Str('No direct arg expected', lineno=327, col_offset=52), None, lineno=327, col_offset=35)], [], lineno=327, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=330, col_offset=8), Name('_arguments', Store(), lineno=330, col_offset=16), Name('_attributes', Store(), lineno=330, col_offset=28)], Store(), lineno=330, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=330, col_offset=42), 'send', Load(), lineno=330, col_offset=42), [Name('_code', Load(), lineno=330, col_offset=52), Name('_subcode', Load(), lineno=330, col_offset=59), Name('_arguments', Load(), lineno=331, col_offset=16), Name('_attributes', Load(), lineno=331, col_offset=28)], [], None, None, lineno=330, col_offset=42), lineno=330, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=332, col_offset=11), 'get', Load(), lineno=332, col_offset=11), [Str('errn', lineno=332, col_offset=26), Num(0, lineno=332, col_offset=34)], [], None, None, lineno=332, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=333, col_offset=18), 'Error', Load(), lineno=333, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=333, col_offset=33), 'decodeerror', Load(), lineno=333, col_offset=33), [Name('_arguments', Load(), lineno=333, col_offset=53)], [], None, None, lineno=333, col_offset=33), None, lineno=333, col_offset=12)], [], lineno=332, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=335, col_offset=11), 'has_key', Load(), lineno=335, col_offset=11), [Str('----', lineno=335, col_offset=30)], [], None, None, lineno=335, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=336, col_offset=19), Index(Str('----', lineno=336, col_offset=30)), Load(), lineno=336, col_offset=19), lineno=336, col_offset=12)], [], lineno=335, col_offset=8)], [], lineno=318, col_offset=4), FunctionDef('Goto_Function', arguments([Name('self', Param(), lineno=338, col_offset=22), Name('_object', Param(), lineno=338, col_offset=28), Name('_attributes', Param(), lineno=338, col_offset=37)], None, '_arguments', [Dict([], [], lineno=338, col_offset=49)]), [Expr(Str("Goto Function: Goto Specified Function Name\n        Required argument: undocumented, typecode 'TEXT'\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        ", lineno=342, col_offset=-1), lineno=342, col_offset=-1), Assign([Name('_code', Store(), lineno=343, col_offset=8)], Str('MMPR', lineno=343, col_offset=16), lineno=343, col_offset=8), Assign([Name('_subcode', Store(), lineno=344, col_offset=8)], Str('GoFn', lineno=344, col_offset=19), lineno=344, col_offset=8), If(Name('_arguments', Load(), lineno=346, col_offset=11), [Raise(Name('TypeError', Load(), lineno=346, col_offset=29), Str('No optional args expected', lineno=346, col_offset=40), None, lineno=346, col_offset=23)], [], lineno=346, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=347, col_offset=8), Index(Str('----', lineno=347, col_offset=19)), Store(), lineno=347, col_offset=8)], Name('_object', Load(), lineno=347, col_offset=29), lineno=347, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=350, col_offset=8), Name('_arguments', Store(), lineno=350, col_offset=16), Name('_attributes', Store(), lineno=350, col_offset=28)], Store(), lineno=350, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=350, col_offset=42), 'send', Load(), lineno=350, col_offset=42), [Name('_code', Load(), lineno=350, col_offset=52), Name('_subcode', Load(), lineno=350, col_offset=59), Name('_arguments', Load(), lineno=351, col_offset=16), Name('_attributes', Load(), lineno=351, col_offset=28)], [], None, None, lineno=350, col_offset=42), lineno=350, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=352, col_offset=11), 'get', Load(), lineno=352, col_offset=11), [Str('errn', lineno=352, col_offset=26), Num(0, lineno=352, col_offset=34)], [], None, None, lineno=352, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=353, col_offset=18), 'Error', Load(), lineno=353, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=353, col_offset=33), 'decodeerror', Load(), lineno=353, col_offset=33), [Name('_arguments', Load(), lineno=353, col_offset=53)], [], None, None, lineno=353, col_offset=33), None, lineno=353, col_offset=12)], [], lineno=352, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=355, col_offset=11), 'has_key', Load(), lineno=355, col_offset=11), [Str('----', lineno=355, col_offset=30)], [], None, None, lineno=355, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=356, col_offset=19), Index(Str('----', lineno=356, col_offset=30)), Load(), lineno=356, col_offset=19), lineno=356, col_offset=12)], [], lineno=355, col_offset=8)], [], lineno=338, col_offset=4), FunctionDef('Goto_Line', arguments([Name('self', Param(), lineno=358, col_offset=18), Name('_object', Param(), lineno=358, col_offset=24), Name('_attributes', Param(), lineno=358, col_offset=33)], None, '_arguments', [Dict([], [], lineno=358, col_offset=45)]), [Expr(Str('Goto Line: Goto Specified Line Number\n        Required argument: The requested source file line number\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        ', lineno=362, col_offset=-1), lineno=362, col_offset=-1), Assign([Name('_code', Store(), lineno=363, col_offset=8)], Str('MMPR', lineno=363, col_offset=16), lineno=363, col_offset=8), Assign([Name('_subcode', Store(), lineno=364, col_offset=8)], Str('GoLn', lineno=364, col_offset=19), lineno=364, col_offset=8), If(Name('_arguments', Load(), lineno=366, col_offset=11), [Raise(Name('TypeError', Load(), lineno=366, col_offset=29), Str('No optional args expected', lineno=366, col_offset=40), None, lineno=366, col_offset=23)], [], lineno=366, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=367, col_offset=8), Index(Str('----', lineno=367, col_offset=19)), Store(), lineno=367, col_offset=8)], Name('_object', Load(), lineno=367, col_offset=29), lineno=367, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=370, col_offset=8), Name('_arguments', Store(), lineno=370, col_offset=16), Name('_attributes', Store(), lineno=370, col_offset=28)], Store(), lineno=370, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=370, col_offset=42), 'send', Load(), lineno=370, col_offset=42), [Name('_code', Load(), lineno=370, col_offset=52), Name('_subcode', Load(), lineno=370, col_offset=59), Name('_arguments', Load(), lineno=371, col_offset=16), Name('_attributes', Load(), lineno=371, col_offset=28)], [], None, None, lineno=370, col_offset=42), lineno=370, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=372, col_offset=11), 'get', Load(), lineno=372, col_offset=11), [Str('errn', lineno=372, col_offset=26), Num(0, lineno=372, col_offset=34)], [], None, None, lineno=372, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=373, col_offset=18), 'Error', Load(), lineno=373, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=373, col_offset=33), 'decodeerror', Load(), lineno=373, col_offset=33), [Name('_arguments', Load(), lineno=373, col_offset=53)], [], None, None, lineno=373, col_offset=33), None, lineno=373, col_offset=12)], [], lineno=372, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=375, col_offset=11), 'has_key', Load(), lineno=375, col_offset=11), [Str('----', lineno=375, col_offset=30)], [], None, None, lineno=375, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=376, col_offset=19), Index(Str('----', lineno=376, col_offset=30)), Load(), lineno=376, col_offset=19), lineno=376, col_offset=12)], [], lineno=375, col_offset=8)], [], lineno=358, col_offset=4), FunctionDef('Is_In_Project', arguments([Name('self', Param(), lineno=378, col_offset=22), Name('_object', Param(), lineno=378, col_offset=28), Name('_attributes', Param(), lineno=378, col_offset=37)], None, '_arguments', [Dict([], [], lineno=378, col_offset=49)]), [Expr(Str('Is In Project: Whether or not the specified file(s) is in the current project\n        Required argument: List of files to check for project membership\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: Result code for each file\n        ', lineno=383, col_offset=-1), lineno=383, col_offset=-1), Assign([Name('_code', Store(), lineno=384, col_offset=8)], Str('MMPR', lineno=384, col_offset=16), lineno=384, col_offset=8), Assign([Name('_subcode', Store(), lineno=385, col_offset=8)], Str('FInP', lineno=385, col_offset=19), lineno=385, col_offset=8), If(Name('_arguments', Load(), lineno=387, col_offset=11), [Raise(Name('TypeError', Load(), lineno=387, col_offset=29), Str('No optional args expected', lineno=387, col_offset=40), None, lineno=387, col_offset=23)], [], lineno=387, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=388, col_offset=8), Index(Str('----', lineno=388, col_offset=19)), Store(), lineno=388, col_offset=8)], Name('_object', Load(), lineno=388, col_offset=29), lineno=388, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=391, col_offset=8), Name('_arguments', Store(), lineno=391, col_offset=16), Name('_attributes', Store(), lineno=391, col_offset=28)], Store(), lineno=391, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=391, col_offset=42), 'send', Load(), lineno=391, col_offset=42), [Name('_code', Load(), lineno=391, col_offset=52), Name('_subcode', Load(), lineno=391, col_offset=59), Name('_arguments', Load(), lineno=392, col_offset=16), Name('_attributes', Load(), lineno=392, col_offset=28)], [], None, None, lineno=391, col_offset=42), lineno=391, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=393, col_offset=11), 'get', Load(), lineno=393, col_offset=11), [Str('errn', lineno=393, col_offset=26), Num(0, lineno=393, col_offset=34)], [], None, None, lineno=393, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=394, col_offset=18), 'Error', Load(), lineno=394, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=394, col_offset=33), 'decodeerror', Load(), lineno=394, col_offset=33), [Name('_arguments', Load(), lineno=394, col_offset=53)], [], None, None, lineno=394, col_offset=33), None, lineno=394, col_offset=12)], [], lineno=393, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=396, col_offset=11), 'has_key', Load(), lineno=396, col_offset=11), [Str('----', lineno=396, col_offset=30)], [], None, None, lineno=396, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=397, col_offset=19), Index(Str('----', lineno=397, col_offset=30)), Load(), lineno=397, col_offset=19), lineno=397, col_offset=12)], [], lineno=396, col_offset=8)], [], lineno=378, col_offset=4), Assign([Name('_argmap_Make_Project', Store(), lineno=399, col_offset=4)], Dict([Str('ExternalEditor', lineno=400, col_offset=8)], [Str('Errs', lineno=400, col_offset=27)], lineno=399, col_offset=27), lineno=399, col_offset=4), FunctionDef('Make_Project', arguments([Name('self', Param(), lineno=403, col_offset=21), Name('_no_object', Param(), lineno=403, col_offset=27), Name('_attributes', Param(), lineno=403, col_offset=44)], None, '_arguments', [Name('None', Load(), lineno=403, col_offset=38), Dict([], [], lineno=403, col_offset=56)]), [Expr(Str('Make Project: Make the current project\n        Keyword argument ExternalEditor: Should the contents of the message window be returned to the caller?\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: Errors that occurred while making the project\n        ', lineno=408, col_offset=-1), lineno=408, col_offset=-1), Assign([Name('_code', Store(), lineno=409, col_offset=8)], Str('MMPR', lineno=409, col_offset=16), lineno=409, col_offset=8), Assign([Name('_subcode', Store(), lineno=410, col_offset=8)], Str('Make', lineno=410, col_offset=19), lineno=410, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=412, col_offset=8), 'keysubst', Load(), lineno=412, col_offset=8), [Name('_arguments', Load(), lineno=412, col_offset=25), Attribute(Name('self', Load(), lineno=412, col_offset=37), '_argmap_Make_Project', Load(), lineno=412, col_offset=37)], [], None, None, lineno=412, col_offset=8), lineno=412, col_offset=8), If(Compare(Name('_no_object', Load(), lineno=413, col_offset=11), [IsNot()], [Name('None', Load(), lineno=413, col_offset=29)], lineno=413, col_offset=11), [Raise(Name('TypeError', Load(), lineno=413, col_offset=41), Str('No direct arg expected', lineno=413, col_offset=52), None, lineno=413, col_offset=35)], [], lineno=413, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=416, col_offset=8), Name('_arguments', Store(), lineno=416, col_offset=16), Name('_attributes', Store(), lineno=416, col_offset=28)], Store(), lineno=416, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=416, col_offset=42), 'send', Load(), lineno=416, col_offset=42), [Name('_code', Load(), lineno=416, col_offset=52), Name('_subcode', Load(), lineno=416, col_offset=59), Name('_arguments', Load(), lineno=417, col_offset=16), Name('_attributes', Load(), lineno=417, col_offset=28)], [], None, None, lineno=416, col_offset=42), lineno=416, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=418, col_offset=11), 'get', Load(), lineno=418, col_offset=11), [Str('errn', lineno=418, col_offset=26), Num(0, lineno=418, col_offset=34)], [], None, None, lineno=418, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=419, col_offset=18), 'Error', Load(), lineno=419, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=419, col_offset=33), 'decodeerror', Load(), lineno=419, col_offset=33), [Name('_arguments', Load(), lineno=419, col_offset=53)], [], None, None, lineno=419, col_offset=33), None, lineno=419, col_offset=12)], [], lineno=418, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=421, col_offset=11), 'has_key', Load(), lineno=421, col_offset=11), [Str('----', lineno=421, col_offset=30)], [], None, None, lineno=421, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=422, col_offset=19), Index(Str('----', lineno=422, col_offset=30)), Load(), lineno=422, col_offset=19), lineno=422, col_offset=12)], [], lineno=421, col_offset=8)], [], lineno=403, col_offset=4), FunctionDef('Open_browser', arguments([Name('self', Param(), lineno=424, col_offset=21), Name('_object', Param(), lineno=424, col_offset=27), Name('_attributes', Param(), lineno=424, col_offset=36)], None, '_arguments', [Dict([], [], lineno=424, col_offset=48)]), [Expr(Str('Open browser: Display a class, member function, or data member object in a single class browser window\n        Required argument: an AE object reference\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        ', lineno=428, col_offset=-1), lineno=428, col_offset=-1), Assign([Name('_code', Store(), lineno=429, col_offset=8)], Str('MMPR', lineno=429, col_offset=16), lineno=429, col_offset=8), Assign([Name('_subcode', Store(), lineno=430, col_offset=8)], Str('Brow', lineno=430, col_offset=19), lineno=430, col_offset=8), If(Name('_arguments', Load(), lineno=432, col_offset=11), [Raise(Name('TypeError', Load(), lineno=432, col_offset=29), Str('No optional args expected', lineno=432, col_offset=40), None, lineno=432, col_offset=23)], [], lineno=432, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=433, col_offset=8), Index(Str('----', lineno=433, col_offset=19)), Store(), lineno=433, col_offset=8)], Name('_object', Load(), lineno=433, col_offset=29), lineno=433, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=436, col_offset=8), Name('_arguments', Store(), lineno=436, col_offset=16), Name('_attributes', Store(), lineno=436, col_offset=28)], Store(), lineno=436, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=436, col_offset=42), 'send', Load(), lineno=436, col_offset=42), [Name('_code', Load(), lineno=436, col_offset=52), Name('_subcode', Load(), lineno=436, col_offset=59), Name('_arguments', Load(), lineno=437, col_offset=16), Name('_attributes', Load(), lineno=437, col_offset=28)], [], None, None, lineno=436, col_offset=42), lineno=436, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=438, col_offset=11), 'get', Load(), lineno=438, col_offset=11), [Str('errn', lineno=438, col_offset=26), Num(0, lineno=438, col_offset=34)], [], None, None, lineno=438, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=439, col_offset=18), 'Error', Load(), lineno=439, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=439, col_offset=33), 'decodeerror', Load(), lineno=439, col_offset=33), [Name('_arguments', Load(), lineno=439, col_offset=53)], [], None, None, lineno=439, col_offset=33), None, lineno=439, col_offset=12)], [], lineno=438, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=441, col_offset=11), 'has_key', Load(), lineno=441, col_offset=11), [Str('----', lineno=441, col_offset=30)], [], None, None, lineno=441, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=442, col_offset=19), Index(Str('----', lineno=442, col_offset=30)), Load(), lineno=442, col_offset=19), lineno=442, col_offset=12)], [], lineno=441, col_offset=8)], [], lineno=424, col_offset=4), Assign([Name('_argmap_Precompile', Store(), lineno=444, col_offset=4)], Dict([Str('Saving_As', lineno=445, col_offset=8), Str('ExternalEditor', lineno=446, col_offset=8)], [Str('Targ', lineno=445, col_offset=22), Str('Errs', lineno=446, col_offset=27)], lineno=444, col_offset=25), lineno=444, col_offset=4), FunctionDef('Precompile', arguments([Name('self', Param(), lineno=449, col_offset=19), Name('_object', Param(), lineno=449, col_offset=25), Name('_attributes', Param(), lineno=449, col_offset=34)], None, '_arguments', [Dict([], [], lineno=449, col_offset=46)]), [Expr(Str('Precompile: Precompile the specified file to the specified destination file\n        Required argument: File to precompile\n        Keyword argument Saving_As: Destination file for precompiled header\n        Keyword argument ExternalEditor: Should the contents of the message window be returned to the caller?\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: Errors for the precompiled file\n        ', lineno=456, col_offset=-1), lineno=456, col_offset=-1), Assign([Name('_code', Store(), lineno=457, col_offset=8)], Str('MMPR', lineno=457, col_offset=16), lineno=457, col_offset=8), Assign([Name('_subcode', Store(), lineno=458, col_offset=8)], Str('PreC', lineno=458, col_offset=19), lineno=458, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=460, col_offset=8), 'keysubst', Load(), lineno=460, col_offset=8), [Name('_arguments', Load(), lineno=460, col_offset=25), Attribute(Name('self', Load(), lineno=460, col_offset=37), '_argmap_Precompile', Load(), lineno=460, col_offset=37)], [], None, None, lineno=460, col_offset=8), lineno=460, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=461, col_offset=8), Index(Str('----', lineno=461, col_offset=19)), Store(), lineno=461, col_offset=8)], Name('_object', Load(), lineno=461, col_offset=29), lineno=461, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=464, col_offset=8), Name('_arguments', Store(), lineno=464, col_offset=16), Name('_attributes', Store(), lineno=464, col_offset=28)], Store(), lineno=464, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=464, col_offset=42), 'send', Load(), lineno=464, col_offset=42), [Name('_code', Load(), lineno=464, col_offset=52), Name('_subcode', Load(), lineno=464, col_offset=59), Name('_arguments', Load(), lineno=465, col_offset=16), Name('_attributes', Load(), lineno=465, col_offset=28)], [], None, None, lineno=464, col_offset=42), lineno=464, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=466, col_offset=11), 'get', Load(), lineno=466, col_offset=11), [Str('errn', lineno=466, col_offset=26), Num(0, lineno=466, col_offset=34)], [], None, None, lineno=466, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=467, col_offset=18), 'Error', Load(), lineno=467, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=467, col_offset=33), 'decodeerror', Load(), lineno=467, col_offset=33), [Name('_arguments', Load(), lineno=467, col_offset=53)], [], None, None, lineno=467, col_offset=33), None, lineno=467, col_offset=12)], [], lineno=466, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=469, col_offset=11), 'has_key', Load(), lineno=469, col_offset=11), [Str('----', lineno=469, col_offset=30)], [], None, None, lineno=469, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=470, col_offset=19), Index(Str('----', lineno=470, col_offset=30)), Load(), lineno=470, col_offset=19), lineno=470, col_offset=12)], [], lineno=469, col_offset=8)], [], lineno=449, col_offset=4), Assign([Name('_argmap_Preprocess', Store(), lineno=472, col_offset=4)], Dict([Str('ExternalEditor', lineno=473, col_offset=8)], [Str('Errs', lineno=473, col_offset=27)], lineno=472, col_offset=25), lineno=472, col_offset=4), FunctionDef('Preprocess', arguments([Name('self', Param(), lineno=476, col_offset=19), Name('_object', Param(), lineno=476, col_offset=25), Name('_attributes', Param(), lineno=476, col_offset=34)], None, '_arguments', [Dict([], [], lineno=476, col_offset=46)]), [Expr(Str("Preprocess: Preprocesses the specified file(s)\n        Required argument: undocumented, typecode 'alis'\n        Keyword argument ExternalEditor: undocumented, typecode 'bool'\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: Errors for each preprocessed file\n        ", lineno=482, col_offset=-1), lineno=482, col_offset=-1), Assign([Name('_code', Store(), lineno=483, col_offset=8)], Str('MMPR', lineno=483, col_offset=16), lineno=483, col_offset=8), Assign([Name('_subcode', Store(), lineno=484, col_offset=8)], Str('PreP', lineno=484, col_offset=19), lineno=484, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=486, col_offset=8), 'keysubst', Load(), lineno=486, col_offset=8), [Name('_arguments', Load(), lineno=486, col_offset=25), Attribute(Name('self', Load(), lineno=486, col_offset=37), '_argmap_Preprocess', Load(), lineno=486, col_offset=37)], [], None, None, lineno=486, col_offset=8), lineno=486, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=487, col_offset=8), Index(Str('----', lineno=487, col_offset=19)), Store(), lineno=487, col_offset=8)], Name('_object', Load(), lineno=487, col_offset=29), lineno=487, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=490, col_offset=8), Name('_arguments', Store(), lineno=490, col_offset=16), Name('_attributes', Store(), lineno=490, col_offset=28)], Store(), lineno=490, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=490, col_offset=42), 'send', Load(), lineno=490, col_offset=42), [Name('_code', Load(), lineno=490, col_offset=52), Name('_subcode', Load(), lineno=490, col_offset=59), Name('_arguments', Load(), lineno=491, col_offset=16), Name('_attributes', Load(), lineno=491, col_offset=28)], [], None, None, lineno=490, col_offset=42), lineno=490, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=492, col_offset=11), 'get', Load(), lineno=492, col_offset=11), [Str('errn', lineno=492, col_offset=26), Num(0, lineno=492, col_offset=34)], [], None, None, lineno=492, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=493, col_offset=18), 'Error', Load(), lineno=493, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=493, col_offset=33), 'decodeerror', Load(), lineno=493, col_offset=33), [Name('_arguments', Load(), lineno=493, col_offset=53)], [], None, None, lineno=493, col_offset=33), None, lineno=493, col_offset=12)], [], lineno=492, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=495, col_offset=11), 'has_key', Load(), lineno=495, col_offset=11), [Str('----', lineno=495, col_offset=30)], [], None, None, lineno=495, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=496, col_offset=19), Index(Str('----', lineno=496, col_offset=30)), Load(), lineno=496, col_offset=19), lineno=496, col_offset=12)], [], lineno=495, col_offset=8)], [], lineno=476, col_offset=4), FunctionDef('Remove_Binaries', arguments([Name('self', Param(), lineno=498, col_offset=24), Name('_no_object', Param(), lineno=498, col_offset=30), Name('_attributes', Param(), lineno=498, col_offset=47)], None, '_arguments', [Name('None', Load(), lineno=498, col_offset=41), Dict([], [], lineno=498, col_offset=59)]), [Expr(Str('Remove Binaries: Remove the binary object code from the current project\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        ', lineno=501, col_offset=-1), lineno=501, col_offset=-1), Assign([Name('_code', Store(), lineno=502, col_offset=8)], Str('MMPR', lineno=502, col_offset=16), lineno=502, col_offset=8), Assign([Name('_subcode', Store(), lineno=503, col_offset=8)], Str('RemB', lineno=503, col_offset=19), lineno=503, col_offset=8), If(Name('_arguments', Load(), lineno=505, col_offset=11), [Raise(Name('TypeError', Load(), lineno=505, col_offset=29), Str('No optional args expected', lineno=505, col_offset=40), None, lineno=505, col_offset=23)], [], lineno=505, col_offset=8), If(Compare(Name('_no_object', Load(), lineno=506, col_offset=11), [IsNot()], [Name('None', Load(), lineno=506, col_offset=29)], lineno=506, col_offset=11), [Raise(Name('TypeError', Load(), lineno=506, col_offset=41), Str('No direct arg expected', lineno=506, col_offset=52), None, lineno=506, col_offset=35)], [], lineno=506, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=509, col_offset=8), Name('_arguments', Store(), lineno=509, col_offset=16), Name('_attributes', Store(), lineno=509, col_offset=28)], Store(), lineno=509, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=509, col_offset=42), 'send', Load(), lineno=509, col_offset=42), [Name('_code', Load(), lineno=509, col_offset=52), Name('_subcode', Load(), lineno=509, col_offset=59), Name('_arguments', Load(), lineno=510, col_offset=16), Name('_attributes', Load(), lineno=510, col_offset=28)], [], None, None, lineno=509, col_offset=42), lineno=509, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=511, col_offset=11), 'get', Load(), lineno=511, col_offset=11), [Str('errn', lineno=511, col_offset=26), Num(0, lineno=511, col_offset=34)], [], None, None, lineno=511, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=512, col_offset=18), 'Error', Load(), lineno=512, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=512, col_offset=33), 'decodeerror', Load(), lineno=512, col_offset=33), [Name('_arguments', Load(), lineno=512, col_offset=53)], [], None, None, lineno=512, col_offset=33), None, lineno=512, col_offset=12)], [], lineno=511, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=514, col_offset=11), 'has_key', Load(), lineno=514, col_offset=11), [Str('----', lineno=514, col_offset=30)], [], None, None, lineno=514, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=515, col_offset=19), Index(Str('----', lineno=515, col_offset=30)), Load(), lineno=515, col_offset=19), lineno=515, col_offset=12)], [], lineno=514, col_offset=8)], [], lineno=498, col_offset=4), FunctionDef('Remove_Files', arguments([Name('self', Param(), lineno=517, col_offset=21), Name('_object', Param(), lineno=517, col_offset=27), Name('_attributes', Param(), lineno=517, col_offset=36)], None, '_arguments', [Dict([], [], lineno=517, col_offset=48)]), [Expr(Str('Remove Files: Remove the specified file(s) from the current project\n        Required argument: List of files to remove\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: Error code for each file removed\n        ', lineno=522, col_offset=-1), lineno=522, col_offset=-1), Assign([Name('_code', Store(), lineno=523, col_offset=8)], Str('MMPR', lineno=523, col_offset=16), lineno=523, col_offset=8), Assign([Name('_subcode', Store(), lineno=524, col_offset=8)], Str('RemF', lineno=524, col_offset=19), lineno=524, col_offset=8), If(Name('_arguments', Load(), lineno=526, col_offset=11), [Raise(Name('TypeError', Load(), lineno=526, col_offset=29), Str('No optional args expected', lineno=526, col_offset=40), None, lineno=526, col_offset=23)], [], lineno=526, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=527, col_offset=8), Index(Str('----', lineno=527, col_offset=19)), Store(), lineno=527, col_offset=8)], Name('_object', Load(), lineno=527, col_offset=29), lineno=527, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=530, col_offset=8), Name('_arguments', Store(), lineno=530, col_offset=16), Name('_attributes', Store(), lineno=530, col_offset=28)], Store(), lineno=530, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=530, col_offset=42), 'send', Load(), lineno=530, col_offset=42), [Name('_code', Load(), lineno=530, col_offset=52), Name('_subcode', Load(), lineno=530, col_offset=59), Name('_arguments', Load(), lineno=531, col_offset=16), Name('_attributes', Load(), lineno=531, col_offset=28)], [], None, None, lineno=530, col_offset=42), lineno=530, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=532, col_offset=11), 'get', Load(), lineno=532, col_offset=11), [Str('errn', lineno=532, col_offset=26), Num(0, lineno=532, col_offset=34)], [], None, None, lineno=532, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=533, col_offset=18), 'Error', Load(), lineno=533, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=533, col_offset=33), 'decodeerror', Load(), lineno=533, col_offset=33), [Name('_arguments', Load(), lineno=533, col_offset=53)], [], None, None, lineno=533, col_offset=33), None, lineno=533, col_offset=12)], [], lineno=532, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=535, col_offset=11), 'has_key', Load(), lineno=535, col_offset=11), [Str('----', lineno=535, col_offset=30)], [], None, None, lineno=535, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=536, col_offset=19), Index(Str('----', lineno=536, col_offset=30)), Load(), lineno=536, col_offset=19), lineno=536, col_offset=12)], [], lineno=535, col_offset=8)], [], lineno=517, col_offset=4), FunctionDef('Reset_File_Paths', arguments([Name('self', Param(), lineno=538, col_offset=25), Name('_no_object', Param(), lineno=538, col_offset=31), Name('_attributes', Param(), lineno=538, col_offset=48)], None, '_arguments', [Name('None', Load(), lineno=538, col_offset=42), Dict([], [], lineno=538, col_offset=60)]), [Expr(Str('Reset File Paths: Resets access paths for all files belonging to open project.\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        ', lineno=541, col_offset=-1), lineno=541, col_offset=-1), Assign([Name('_code', Store(), lineno=542, col_offset=8)], Str('MMPR', lineno=542, col_offset=16), lineno=542, col_offset=8), Assign([Name('_subcode', Store(), lineno=543, col_offset=8)], Str('ReFP', lineno=543, col_offset=19), lineno=543, col_offset=8), If(Name('_arguments', Load(), lineno=545, col_offset=11), [Raise(Name('TypeError', Load(), lineno=545, col_offset=29), Str('No optional args expected', lineno=545, col_offset=40), None, lineno=545, col_offset=23)], [], lineno=545, col_offset=8), If(Compare(Name('_no_object', Load(), lineno=546, col_offset=11), [IsNot()], [Name('None', Load(), lineno=546, col_offset=29)], lineno=546, col_offset=11), [Raise(Name('TypeError', Load(), lineno=546, col_offset=41), Str('No direct arg expected', lineno=546, col_offset=52), None, lineno=546, col_offset=35)], [], lineno=546, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=549, col_offset=8), Name('_arguments', Store(), lineno=549, col_offset=16), Name('_attributes', Store(), lineno=549, col_offset=28)], Store(), lineno=549, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=549, col_offset=42), 'send', Load(), lineno=549, col_offset=42), [Name('_code', Load(), lineno=549, col_offset=52), Name('_subcode', Load(), lineno=549, col_offset=59), Name('_arguments', Load(), lineno=550, col_offset=16), Name('_attributes', Load(), lineno=550, col_offset=28)], [], None, None, lineno=549, col_offset=42), lineno=549, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=551, col_offset=11), 'get', Load(), lineno=551, col_offset=11), [Str('errn', lineno=551, col_offset=26), Num(0, lineno=551, col_offset=34)], [], None, None, lineno=551, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=552, col_offset=18), 'Error', Load(), lineno=552, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=552, col_offset=33), 'decodeerror', Load(), lineno=552, col_offset=33), [Name('_arguments', Load(), lineno=552, col_offset=53)], [], None, None, lineno=552, col_offset=33), None, lineno=552, col_offset=12)], [], lineno=551, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=554, col_offset=11), 'has_key', Load(), lineno=554, col_offset=11), [Str('----', lineno=554, col_offset=30)], [], None, None, lineno=554, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=555, col_offset=19), Index(Str('----', lineno=555, col_offset=30)), Load(), lineno=555, col_offset=19), lineno=555, col_offset=12)], [], lineno=554, col_offset=8)], [], lineno=538, col_offset=4), Assign([Name('_argmap_Run_Project', Store(), lineno=557, col_offset=4)], Dict([Str('ExternalEditor', lineno=558, col_offset=8), Str('SourceDebugger', lineno=559, col_offset=8)], [Str('Errs', lineno=558, col_offset=27), Str('DeBg', lineno=559, col_offset=27)], lineno=557, col_offset=26), lineno=557, col_offset=4), FunctionDef('Run_Project', arguments([Name('self', Param(), lineno=562, col_offset=20), Name('_no_object', Param(), lineno=562, col_offset=26), Name('_attributes', Param(), lineno=562, col_offset=43)], None, '_arguments', [Name('None', Load(), lineno=562, col_offset=37), Dict([], [], lineno=562, col_offset=55)]), [Expr(Str('Run Project: Run the current project\n        Keyword argument ExternalEditor: Should the contents of the message window be returned to the caller?\n        Keyword argument SourceDebugger: Run the application under the control of the source-level debugger\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: Errors that occurred when running the project\n        ', lineno=568, col_offset=-1), lineno=568, col_offset=-1), Assign([Name('_code', Store(), lineno=569, col_offset=8)], Str('MMPR', lineno=569, col_offset=16), lineno=569, col_offset=8), Assign([Name('_subcode', Store(), lineno=570, col_offset=8)], Str('RunP', lineno=570, col_offset=19), lineno=570, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=572, col_offset=8), 'keysubst', Load(), lineno=572, col_offset=8), [Name('_arguments', Load(), lineno=572, col_offset=25), Attribute(Name('self', Load(), lineno=572, col_offset=37), '_argmap_Run_Project', Load(), lineno=572, col_offset=37)], [], None, None, lineno=572, col_offset=8), lineno=572, col_offset=8), If(Compare(Name('_no_object', Load(), lineno=573, col_offset=11), [IsNot()], [Name('None', Load(), lineno=573, col_offset=29)], lineno=573, col_offset=11), [Raise(Name('TypeError', Load(), lineno=573, col_offset=41), Str('No direct arg expected', lineno=573, col_offset=52), None, lineno=573, col_offset=35)], [], lineno=573, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=576, col_offset=8), Name('_arguments', Store(), lineno=576, col_offset=16), Name('_attributes', Store(), lineno=576, col_offset=28)], Store(), lineno=576, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=576, col_offset=42), 'send', Load(), lineno=576, col_offset=42), [Name('_code', Load(), lineno=576, col_offset=52), Name('_subcode', Load(), lineno=576, col_offset=59), Name('_arguments', Load(), lineno=577, col_offset=16), Name('_attributes', Load(), lineno=577, col_offset=28)], [], None, None, lineno=576, col_offset=42), lineno=576, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=578, col_offset=11), 'get', Load(), lineno=578, col_offset=11), [Str('errn', lineno=578, col_offset=26), Num(0, lineno=578, col_offset=34)], [], None, None, lineno=578, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=579, col_offset=18), 'Error', Load(), lineno=579, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=579, col_offset=33), 'decodeerror', Load(), lineno=579, col_offset=33), [Name('_arguments', Load(), lineno=579, col_offset=53)], [], None, None, lineno=579, col_offset=33), None, lineno=579, col_offset=12)], [], lineno=578, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=581, col_offset=11), 'has_key', Load(), lineno=581, col_offset=11), [Str('----', lineno=581, col_offset=30)], [], None, None, lineno=581, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=582, col_offset=19), Index(Str('----', lineno=582, col_offset=30)), Load(), lineno=582, col_offset=19), lineno=582, col_offset=12)], [], lineno=581, col_offset=8)], [], lineno=562, col_offset=4), FunctionDef('Save_Error_Window_As', arguments([Name('self', Param(), lineno=584, col_offset=29), Name('_object', Param(), lineno=584, col_offset=35), Name('_attributes', Param(), lineno=584, col_offset=44)], None, '_arguments', [Dict([], [], lineno=584, col_offset=56)]), [Expr(Str('Save Error Window As: Saves the Errors & Warnings window as a text file\n        Required argument: Destination file for Save Message Window As\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        ', lineno=588, col_offset=-1), lineno=588, col_offset=-1), Assign([Name('_code', Store(), lineno=589, col_offset=8)], Str('MMPR', lineno=589, col_offset=16), lineno=589, col_offset=8), Assign([Name('_subcode', Store(), lineno=590, col_offset=8)], Str('SvMs', lineno=590, col_offset=19), lineno=590, col_offset=8), If(Name('_arguments', Load(), lineno=592, col_offset=11), [Raise(Name('TypeError', Load(), lineno=592, col_offset=29), Str('No optional args expected', lineno=592, col_offset=40), None, lineno=592, col_offset=23)], [], lineno=592, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=593, col_offset=8), Index(Str('----', lineno=593, col_offset=19)), Store(), lineno=593, col_offset=8)], Name('_object', Load(), lineno=593, col_offset=29), lineno=593, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=596, col_offset=8), Name('_arguments', Store(), lineno=596, col_offset=16), Name('_attributes', Store(), lineno=596, col_offset=28)], Store(), lineno=596, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=596, col_offset=42), 'send', Load(), lineno=596, col_offset=42), [Name('_code', Load(), lineno=596, col_offset=52), Name('_subcode', Load(), lineno=596, col_offset=59), Name('_arguments', Load(), lineno=597, col_offset=16), Name('_attributes', Load(), lineno=597, col_offset=28)], [], None, None, lineno=596, col_offset=42), lineno=596, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=598, col_offset=11), 'get', Load(), lineno=598, col_offset=11), [Str('errn', lineno=598, col_offset=26), Num(0, lineno=598, col_offset=34)], [], None, None, lineno=598, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=599, col_offset=18), 'Error', Load(), lineno=599, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=599, col_offset=33), 'decodeerror', Load(), lineno=599, col_offset=33), [Name('_arguments', Load(), lineno=599, col_offset=53)], [], None, None, lineno=599, col_offset=33), None, lineno=599, col_offset=12)], [], lineno=598, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=601, col_offset=11), 'has_key', Load(), lineno=601, col_offset=11), [Str('----', lineno=601, col_offset=30)], [], None, None, lineno=601, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=602, col_offset=19), Index(Str('----', lineno=602, col_offset=30)), Load(), lineno=602, col_offset=19), lineno=602, col_offset=12)], [], lineno=601, col_offset=8)], [], lineno=584, col_offset=4), FunctionDef('Set_Current_Target', arguments([Name('self', Param(), lineno=604, col_offset=27), Name('_object', Param(), lineno=604, col_offset=33), Name('_attributes', Param(), lineno=604, col_offset=47)], None, '_arguments', [Name('None', Load(), lineno=604, col_offset=41), Dict([], [], lineno=604, col_offset=59)]), [Expr(Str('Set Current Target: Set the current target of a project\n        Required argument: Name of target\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        ', lineno=608, col_offset=-1), lineno=608, col_offset=-1), Assign([Name('_code', Store(), lineno=609, col_offset=8)], Str('MMPR', lineno=609, col_offset=16), lineno=609, col_offset=8), Assign([Name('_subcode', Store(), lineno=610, col_offset=8)], Str('STrg', lineno=610, col_offset=19), lineno=610, col_offset=8), If(Name('_arguments', Load(), lineno=612, col_offset=11), [Raise(Name('TypeError', Load(), lineno=612, col_offset=29), Str('No optional args expected', lineno=612, col_offset=40), None, lineno=612, col_offset=23)], [], lineno=612, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=613, col_offset=8), Index(Str('----', lineno=613, col_offset=19)), Store(), lineno=613, col_offset=8)], Name('_object', Load(), lineno=613, col_offset=29), lineno=613, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=616, col_offset=8), Name('_arguments', Store(), lineno=616, col_offset=16), Name('_attributes', Store(), lineno=616, col_offset=28)], Store(), lineno=616, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=616, col_offset=42), 'send', Load(), lineno=616, col_offset=42), [Name('_code', Load(), lineno=616, col_offset=52), Name('_subcode', Load(), lineno=616, col_offset=59), Name('_arguments', Load(), lineno=617, col_offset=16), Name('_attributes', Load(), lineno=617, col_offset=28)], [], None, None, lineno=616, col_offset=42), lineno=616, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=618, col_offset=11), 'get', Load(), lineno=618, col_offset=11), [Str('errn', lineno=618, col_offset=26), Num(0, lineno=618, col_offset=34)], [], None, None, lineno=618, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=619, col_offset=18), 'Error', Load(), lineno=619, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=619, col_offset=33), 'decodeerror', Load(), lineno=619, col_offset=33), [Name('_arguments', Load(), lineno=619, col_offset=53)], [], None, None, lineno=619, col_offset=33), None, lineno=619, col_offset=12)], [], lineno=618, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=621, col_offset=11), 'has_key', Load(), lineno=621, col_offset=11), [Str('----', lineno=621, col_offset=30)], [], None, None, lineno=621, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=622, col_offset=19), Index(Str('----', lineno=622, col_offset=30)), Load(), lineno=622, col_offset=19), lineno=622, col_offset=12)], [], lineno=621, col_offset=8)], [], lineno=604, col_offset=4), FunctionDef('Set_Default_Project', arguments([Name('self', Param(), lineno=624, col_offset=28), Name('_object', Param(), lineno=624, col_offset=34), Name('_attributes', Param(), lineno=624, col_offset=43)], None, '_arguments', [Dict([], [], lineno=624, col_offset=55)]), [Expr(Str('Set Default Project: Set the default project\n        Required argument: Name of project\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        ', lineno=628, col_offset=-1), lineno=628, col_offset=-1), Assign([Name('_code', Store(), lineno=629, col_offset=8)], Str('MMPR', lineno=629, col_offset=16), lineno=629, col_offset=8), Assign([Name('_subcode', Store(), lineno=630, col_offset=8)], Str('SDfP', lineno=630, col_offset=19), lineno=630, col_offset=8), If(Name('_arguments', Load(), lineno=632, col_offset=11), [Raise(Name('TypeError', Load(), lineno=632, col_offset=29), Str('No optional args expected', lineno=632, col_offset=40), None, lineno=632, col_offset=23)], [], lineno=632, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=633, col_offset=8), Index(Str('----', lineno=633, col_offset=19)), Store(), lineno=633, col_offset=8)], Name('_object', Load(), lineno=633, col_offset=29), lineno=633, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=636, col_offset=8), Name('_arguments', Store(), lineno=636, col_offset=16), Name('_attributes', Store(), lineno=636, col_offset=28)], Store(), lineno=636, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=636, col_offset=42), 'send', Load(), lineno=636, col_offset=42), [Name('_code', Load(), lineno=636, col_offset=52), Name('_subcode', Load(), lineno=636, col_offset=59), Name('_arguments', Load(), lineno=637, col_offset=16), Name('_attributes', Load(), lineno=637, col_offset=28)], [], None, None, lineno=636, col_offset=42), lineno=636, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=638, col_offset=11), 'get', Load(), lineno=638, col_offset=11), [Str('errn', lineno=638, col_offset=26), Num(0, lineno=638, col_offset=34)], [], None, None, lineno=638, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=639, col_offset=18), 'Error', Load(), lineno=639, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=639, col_offset=33), 'decodeerror', Load(), lineno=639, col_offset=33), [Name('_arguments', Load(), lineno=639, col_offset=53)], [], None, None, lineno=639, col_offset=33), None, lineno=639, col_offset=12)], [], lineno=638, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=641, col_offset=11), 'has_key', Load(), lineno=641, col_offset=11), [Str('----', lineno=641, col_offset=30)], [], None, None, lineno=641, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=642, col_offset=19), Index(Str('----', lineno=642, col_offset=30)), Load(), lineno=642, col_offset=19), lineno=642, col_offset=12)], [], lineno=641, col_offset=8)], [], lineno=624, col_offset=4), Assign([Name('_argmap_Set_Modification_Date', Store(), lineno=644, col_offset=4)], Dict([Str('to', lineno=645, col_offset=8)], [Str('MDat', lineno=645, col_offset=15)], lineno=644, col_offset=36), lineno=644, col_offset=4), FunctionDef('Set_Modification_Date', arguments([Name('self', Param(), lineno=648, col_offset=30), Name('_object', Param(), lineno=648, col_offset=36), Name('_attributes', Param(), lineno=648, col_offset=45)], None, '_arguments', [Dict([], [], lineno=648, col_offset=57)]), [Expr(Str("Set Modification Date: Changes the internal modification date of the specified file(s)\n        Required argument: List of files\n        Keyword argument to: undocumented, typecode 'ldt '\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: Error code for each modified file\n        ", lineno=654, col_offset=-1), lineno=654, col_offset=-1), Assign([Name('_code', Store(), lineno=655, col_offset=8)], Str('MMPR', lineno=655, col_offset=16), lineno=655, col_offset=8), Assign([Name('_subcode', Store(), lineno=656, col_offset=8)], Str('SMod', lineno=656, col_offset=19), lineno=656, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=658, col_offset=8), 'keysubst', Load(), lineno=658, col_offset=8), [Name('_arguments', Load(), lineno=658, col_offset=25), Attribute(Name('self', Load(), lineno=658, col_offset=37), '_argmap_Set_Modification_Date', Load(), lineno=658, col_offset=37)], [], None, None, lineno=658, col_offset=8), lineno=658, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=659, col_offset=8), Index(Str('----', lineno=659, col_offset=19)), Store(), lineno=659, col_offset=8)], Name('_object', Load(), lineno=659, col_offset=29), lineno=659, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=662, col_offset=8), Name('_arguments', Store(), lineno=662, col_offset=16), Name('_attributes', Store(), lineno=662, col_offset=28)], Store(), lineno=662, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=662, col_offset=42), 'send', Load(), lineno=662, col_offset=42), [Name('_code', Load(), lineno=662, col_offset=52), Name('_subcode', Load(), lineno=662, col_offset=59), Name('_arguments', Load(), lineno=663, col_offset=16), Name('_attributes', Load(), lineno=663, col_offset=28)], [], None, None, lineno=662, col_offset=42), lineno=662, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=664, col_offset=11), 'get', Load(), lineno=664, col_offset=11), [Str('errn', lineno=664, col_offset=26), Num(0, lineno=664, col_offset=34)], [], None, None, lineno=664, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=665, col_offset=18), 'Error', Load(), lineno=665, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=665, col_offset=33), 'decodeerror', Load(), lineno=665, col_offset=33), [Name('_arguments', Load(), lineno=665, col_offset=53)], [], None, None, lineno=665, col_offset=33), None, lineno=665, col_offset=12)], [], lineno=664, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=667, col_offset=11), 'has_key', Load(), lineno=667, col_offset=11), [Str('----', lineno=667, col_offset=30)], [], None, None, lineno=667, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=668, col_offset=19), Index(Str('----', lineno=668, col_offset=30)), Load(), lineno=668, col_offset=19), lineno=668, col_offset=12)], [], lineno=667, col_offset=8)], [], lineno=648, col_offset=4), Assign([Name('_argmap_Set_Preferences', Store(), lineno=670, col_offset=4)], Dict([Str('of_panel', lineno=671, col_offset=8), Str('to', lineno=672, col_offset=8)], [Str('PNam', lineno=671, col_offset=21), Str('PRec', lineno=672, col_offset=15)], lineno=670, col_offset=30), lineno=670, col_offset=4), FunctionDef('Set_Preferences', arguments([Name('self', Param(), lineno=675, col_offset=24), Name('_no_object', Param(), lineno=675, col_offset=30), Name('_attributes', Param(), lineno=675, col_offset=47)], None, '_arguments', [Name('None', Load(), lineno=675, col_offset=41), Dict([], [], lineno=675, col_offset=59)]), [Expr(Str('Set Preferences: Set the preferences for the current project\n        Keyword argument of_panel: Name of the preference panel\n        Keyword argument to: Preferences settings\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        ', lineno=680, col_offset=-1), lineno=680, col_offset=-1), Assign([Name('_code', Store(), lineno=681, col_offset=8)], Str('MMPR', lineno=681, col_offset=16), lineno=681, col_offset=8), Assign([Name('_subcode', Store(), lineno=682, col_offset=8)], Str('Pref', lineno=682, col_offset=19), lineno=682, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=684, col_offset=8), 'keysubst', Load(), lineno=684, col_offset=8), [Name('_arguments', Load(), lineno=684, col_offset=25), Attribute(Name('self', Load(), lineno=684, col_offset=37), '_argmap_Set_Preferences', Load(), lineno=684, col_offset=37)], [], None, None, lineno=684, col_offset=8), lineno=684, col_offset=8), If(Compare(Name('_no_object', Load(), lineno=685, col_offset=11), [IsNot()], [Name('None', Load(), lineno=685, col_offset=29)], lineno=685, col_offset=11), [Raise(Name('TypeError', Load(), lineno=685, col_offset=41), Str('No direct arg expected', lineno=685, col_offset=52), None, lineno=685, col_offset=35)], [], lineno=685, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=688, col_offset=8), Name('_arguments', Store(), lineno=688, col_offset=16), Name('_attributes', Store(), lineno=688, col_offset=28)], Store(), lineno=688, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=688, col_offset=42), 'send', Load(), lineno=688, col_offset=42), [Name('_code', Load(), lineno=688, col_offset=52), Name('_subcode', Load(), lineno=688, col_offset=59), Name('_arguments', Load(), lineno=689, col_offset=16), Name('_attributes', Load(), lineno=689, col_offset=28)], [], None, None, lineno=688, col_offset=42), lineno=688, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=690, col_offset=11), 'get', Load(), lineno=690, col_offset=11), [Str('errn', lineno=690, col_offset=26), Num(0, lineno=690, col_offset=34)], [], None, None, lineno=690, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=691, col_offset=18), 'Error', Load(), lineno=691, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=691, col_offset=33), 'decodeerror', Load(), lineno=691, col_offset=33), [Name('_arguments', Load(), lineno=691, col_offset=53)], [], None, None, lineno=691, col_offset=33), None, lineno=691, col_offset=12)], [], lineno=690, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=693, col_offset=11), 'has_key', Load(), lineno=693, col_offset=11), [Str('----', lineno=693, col_offset=30)], [], None, None, lineno=693, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=694, col_offset=19), Index(Str('----', lineno=694, col_offset=30)), Load(), lineno=694, col_offset=19), lineno=694, col_offset=12)], [], lineno=693, col_offset=8)], [], lineno=675, col_offset=4), Assign([Name('_argmap_Set_Project_File', Store(), lineno=696, col_offset=4)], Dict([Str('to', lineno=697, col_offset=8)], [Str('SrcS', lineno=697, col_offset=15)], lineno=696, col_offset=31), lineno=696, col_offset=4), FunctionDef('Set_Project_File', arguments([Name('self', Param(), lineno=700, col_offset=25), Name('_object', Param(), lineno=700, col_offset=31), Name('_attributes', Param(), lineno=700, col_offset=40)], None, '_arguments', [Dict([], [], lineno=700, col_offset=52)]), [Expr(Str('Set Project File: Changes the settings for a given file in the project.\n        Required argument: The name of the file\n        Keyword argument to: The new settings for the file\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        ', lineno=705, col_offset=-1), lineno=705, col_offset=-1), Assign([Name('_code', Store(), lineno=706, col_offset=8)], Str('MMPR', lineno=706, col_offset=16), lineno=706, col_offset=8), Assign([Name('_subcode', Store(), lineno=707, col_offset=8)], Str('SFil', lineno=707, col_offset=19), lineno=707, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=709, col_offset=8), 'keysubst', Load(), lineno=709, col_offset=8), [Name('_arguments', Load(), lineno=709, col_offset=25), Attribute(Name('self', Load(), lineno=709, col_offset=37), '_argmap_Set_Project_File', Load(), lineno=709, col_offset=37)], [], None, None, lineno=709, col_offset=8), lineno=709, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=710, col_offset=8), Index(Str('----', lineno=710, col_offset=19)), Store(), lineno=710, col_offset=8)], Name('_object', Load(), lineno=710, col_offset=29), lineno=710, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=713, col_offset=8), Name('_arguments', Store(), lineno=713, col_offset=16), Name('_attributes', Store(), lineno=713, col_offset=28)], Store(), lineno=713, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=713, col_offset=42), 'send', Load(), lineno=713, col_offset=42), [Name('_code', Load(), lineno=713, col_offset=52), Name('_subcode', Load(), lineno=713, col_offset=59), Name('_arguments', Load(), lineno=714, col_offset=16), Name('_attributes', Load(), lineno=714, col_offset=28)], [], None, None, lineno=713, col_offset=42), lineno=713, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=715, col_offset=11), 'get', Load(), lineno=715, col_offset=11), [Str('errn', lineno=715, col_offset=26), Num(0, lineno=715, col_offset=34)], [], None, None, lineno=715, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=716, col_offset=18), 'Error', Load(), lineno=716, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=716, col_offset=33), 'decodeerror', Load(), lineno=716, col_offset=33), [Name('_arguments', Load(), lineno=716, col_offset=53)], [], None, None, lineno=716, col_offset=33), None, lineno=716, col_offset=12)], [], lineno=715, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=718, col_offset=11), 'has_key', Load(), lineno=718, col_offset=11), [Str('----', lineno=718, col_offset=30)], [], None, None, lineno=718, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=719, col_offset=19), Index(Str('----', lineno=719, col_offset=30)), Load(), lineno=719, col_offset=19), lineno=719, col_offset=12)], [], lineno=718, col_offset=8)], [], lineno=700, col_offset=4), Assign([Name('_argmap_Set_Segment', Store(), lineno=721, col_offset=4)], Dict([Str('to', lineno=722, col_offset=8)], [Str('Segm', lineno=722, col_offset=15)], lineno=721, col_offset=26), lineno=721, col_offset=4), FunctionDef('Set_Segment', arguments([Name('self', Param(), lineno=725, col_offset=20), Name('_object', Param(), lineno=725, col_offset=26), Name('_attributes', Param(), lineno=725, col_offset=35)], None, '_arguments', [Dict([], [], lineno=725, col_offset=47)]), [Expr(Str('Set Segment: Changes the name and attributes of a segment.\n        Required argument: The segment to change\n        Keyword argument to: The new name and attributes for the segment.\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        ', lineno=730, col_offset=-1), lineno=730, col_offset=-1), Assign([Name('_code', Store(), lineno=731, col_offset=8)], Str('MMPR', lineno=731, col_offset=16), lineno=731, col_offset=8), Assign([Name('_subcode', Store(), lineno=732, col_offset=8)], Str('SSeg', lineno=732, col_offset=19), lineno=732, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=734, col_offset=8), 'keysubst', Load(), lineno=734, col_offset=8), [Name('_arguments', Load(), lineno=734, col_offset=25), Attribute(Name('self', Load(), lineno=734, col_offset=37), '_argmap_Set_Segment', Load(), lineno=734, col_offset=37)], [], None, None, lineno=734, col_offset=8), lineno=734, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=735, col_offset=8), Index(Str('----', lineno=735, col_offset=19)), Store(), lineno=735, col_offset=8)], Name('_object', Load(), lineno=735, col_offset=29), lineno=735, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=738, col_offset=8), Name('_arguments', Store(), lineno=738, col_offset=16), Name('_attributes', Store(), lineno=738, col_offset=28)], Store(), lineno=738, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=738, col_offset=42), 'send', Load(), lineno=738, col_offset=42), [Name('_code', Load(), lineno=738, col_offset=52), Name('_subcode', Load(), lineno=738, col_offset=59), Name('_arguments', Load(), lineno=739, col_offset=16), Name('_attributes', Load(), lineno=739, col_offset=28)], [], None, None, lineno=738, col_offset=42), lineno=738, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=740, col_offset=11), 'get', Load(), lineno=740, col_offset=11), [Str('errn', lineno=740, col_offset=26), Num(0, lineno=740, col_offset=34)], [], None, None, lineno=740, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=741, col_offset=18), 'Error', Load(), lineno=741, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=741, col_offset=33), 'decodeerror', Load(), lineno=741, col_offset=33), [Name('_arguments', Load(), lineno=741, col_offset=53)], [], None, None, lineno=741, col_offset=33), None, lineno=741, col_offset=12)], [], lineno=740, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=743, col_offset=11), 'has_key', Load(), lineno=743, col_offset=11), [Str('----', lineno=743, col_offset=30)], [], None, None, lineno=743, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=744, col_offset=19), Index(Str('----', lineno=744, col_offset=30)), Load(), lineno=744, col_offset=19), lineno=744, col_offset=12)], [], lineno=743, col_offset=8)], [], lineno=725, col_offset=4), FunctionDef('Touch', arguments([Name('self', Param(), lineno=746, col_offset=14), Name('_object', Param(), lineno=746, col_offset=20), Name('_attributes', Param(), lineno=746, col_offset=29)], None, '_arguments', [Dict([], [], lineno=746, col_offset=41)]), [Expr(Str('Touch: Force recompilation of the specified file(s)\n        Required argument: List of files to compile\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: Error code for each file touched\n        ', lineno=751, col_offset=-1), lineno=751, col_offset=-1), Assign([Name('_code', Store(), lineno=752, col_offset=8)], Str('MMPR', lineno=752, col_offset=16), lineno=752, col_offset=8), Assign([Name('_subcode', Store(), lineno=753, col_offset=8)], Str('Toch', lineno=753, col_offset=19), lineno=753, col_offset=8), If(Name('_arguments', Load(), lineno=755, col_offset=11), [Raise(Name('TypeError', Load(), lineno=755, col_offset=29), Str('No optional args expected', lineno=755, col_offset=40), None, lineno=755, col_offset=23)], [], lineno=755, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=756, col_offset=8), Index(Str('----', lineno=756, col_offset=19)), Store(), lineno=756, col_offset=8)], Name('_object', Load(), lineno=756, col_offset=29), lineno=756, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=759, col_offset=8), Name('_arguments', Store(), lineno=759, col_offset=16), Name('_attributes', Store(), lineno=759, col_offset=28)], Store(), lineno=759, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=759, col_offset=42), 'send', Load(), lineno=759, col_offset=42), [Name('_code', Load(), lineno=759, col_offset=52), Name('_subcode', Load(), lineno=759, col_offset=59), Name('_arguments', Load(), lineno=760, col_offset=16), Name('_attributes', Load(), lineno=760, col_offset=28)], [], None, None, lineno=759, col_offset=42), lineno=759, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=761, col_offset=11), 'get', Load(), lineno=761, col_offset=11), [Str('errn', lineno=761, col_offset=26), Num(0, lineno=761, col_offset=34)], [], None, None, lineno=761, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=762, col_offset=18), 'Error', Load(), lineno=762, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=762, col_offset=33), 'decodeerror', Load(), lineno=762, col_offset=33), [Name('_arguments', Load(), lineno=762, col_offset=53)], [], None, None, lineno=762, col_offset=33), None, lineno=762, col_offset=12)], [], lineno=761, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=764, col_offset=11), 'has_key', Load(), lineno=764, col_offset=11), [Str('----', lineno=764, col_offset=30)], [], None, None, lineno=764, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=765, col_offset=19), Index(Str('----', lineno=765, col_offset=30)), Load(), lineno=765, col_offset=19), lineno=765, col_offset=12)], [], lineno=764, col_offset=8)], [], lineno=746, col_offset=4), Assign([Name('_argmap_Update_Project', Store(), lineno=767, col_offset=4)], Dict([Str('ExternalEditor', lineno=768, col_offset=8)], [Str('Errs', lineno=768, col_offset=27)], lineno=767, col_offset=29), lineno=767, col_offset=4), FunctionDef('Update_Project', arguments([Name('self', Param(), lineno=771, col_offset=23), Name('_no_object', Param(), lineno=771, col_offset=29), Name('_attributes', Param(), lineno=771, col_offset=46)], None, '_arguments', [Name('None', Load(), lineno=771, col_offset=40), Dict([], [], lineno=771, col_offset=58)]), [Expr(Str('Update Project: Update the current project\n        Keyword argument ExternalEditor: Should the contents of the message window be returned to the caller?\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: Errors that occurred while updating the project\n        ', lineno=776, col_offset=-1), lineno=776, col_offset=-1), Assign([Name('_code', Store(), lineno=777, col_offset=8)], Str('MMPR', lineno=777, col_offset=16), lineno=777, col_offset=8), Assign([Name('_subcode', Store(), lineno=778, col_offset=8)], Str('UpdP', lineno=778, col_offset=19), lineno=778, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=780, col_offset=8), 'keysubst', Load(), lineno=780, col_offset=8), [Name('_arguments', Load(), lineno=780, col_offset=25), Attribute(Name('self', Load(), lineno=780, col_offset=37), '_argmap_Update_Project', Load(), lineno=780, col_offset=37)], [], None, None, lineno=780, col_offset=8), lineno=780, col_offset=8), If(Compare(Name('_no_object', Load(), lineno=781, col_offset=11), [IsNot()], [Name('None', Load(), lineno=781, col_offset=29)], lineno=781, col_offset=11), [Raise(Name('TypeError', Load(), lineno=781, col_offset=41), Str('No direct arg expected', lineno=781, col_offset=52), None, lineno=781, col_offset=35)], [], lineno=781, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=784, col_offset=8), Name('_arguments', Store(), lineno=784, col_offset=16), Name('_attributes', Store(), lineno=784, col_offset=28)], Store(), lineno=784, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=784, col_offset=42), 'send', Load(), lineno=784, col_offset=42), [Name('_code', Load(), lineno=784, col_offset=52), Name('_subcode', Load(), lineno=784, col_offset=59), Name('_arguments', Load(), lineno=785, col_offset=16), Name('_attributes', Load(), lineno=785, col_offset=28)], [], None, None, lineno=784, col_offset=42), lineno=784, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=786, col_offset=11), 'get', Load(), lineno=786, col_offset=11), [Str('errn', lineno=786, col_offset=26), Num(0, lineno=786, col_offset=34)], [], None, None, lineno=786, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=787, col_offset=18), 'Error', Load(), lineno=787, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=787, col_offset=33), 'decodeerror', Load(), lineno=787, col_offset=33), [Name('_arguments', Load(), lineno=787, col_offset=53)], [], None, None, lineno=787, col_offset=33), None, lineno=787, col_offset=12)], [], lineno=786, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=789, col_offset=11), 'has_key', Load(), lineno=789, col_offset=11), [Str('----', lineno=789, col_offset=30)], [], None, None, lineno=789, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=790, col_offset=19), Index(Str('----', lineno=790, col_offset=30)), Load(), lineno=790, col_offset=19), lineno=790, col_offset=12)], [], lineno=789, col_offset=8)], [], lineno=771, col_offset=4)], [], lineno=13, col_offset=0), ClassDef('Browser_Coloring', [Attribute(Name('aetools', Load(), lineno=793, col_offset=23), 'ComponentItem', Load(), lineno=793, col_offset=23)], [Expr(Str('Browser Coloring - Colors for Browser symbols. ', lineno=794, col_offset=4), lineno=794, col_offset=4), Assign([Name('want', Store(), lineno=795, col_offset=4)], Str('BRKW', lineno=795, col_offset=11), lineno=795, col_offset=4)], [], lineno=793, col_offset=0), ClassDef('_Prop_Browser_Keywords', [Attribute(Name('aetools', Load(), lineno=796, col_offset=29), 'NProperty', Load(), lineno=796, col_offset=29)], [Expr(Str('Browser Keywords - Mark Browser symbols with color. ', lineno=797, col_offset=4), lineno=797, col_offset=4), Assign([Name('which', Store(), lineno=798, col_offset=4)], Str('BW00', lineno=798, col_offset=12), lineno=798, col_offset=4), Assign([Name('want', Store(), lineno=799, col_offset=4)], Str('bool', lineno=799, col_offset=11), lineno=799, col_offset=4)], [], lineno=796, col_offset=0), ClassDef('_Prop_Classes_Color', [Attribute(Name('aetools', Load(), lineno=800, col_offset=26), 'NProperty', Load(), lineno=800, col_offset=26)], [Expr(Str('Classes Color - The color for classes. ', lineno=801, col_offset=4), lineno=801, col_offset=4), Assign([Name('which', Store(), lineno=802, col_offset=4)], Str('BW01', lineno=802, col_offset=12), lineno=802, col_offset=4), Assign([Name('want', Store(), lineno=803, col_offset=4)], Str('cRGB', lineno=803, col_offset=11), lineno=803, col_offset=4)], [], lineno=800, col_offset=0), ClassDef('_Prop_Constants_Color', [Attribute(Name('aetools', Load(), lineno=804, col_offset=28), 'NProperty', Load(), lineno=804, col_offset=28)], [Expr(Str('Constants Color - The color for constants. ', lineno=805, col_offset=4), lineno=805, col_offset=4), Assign([Name('which', Store(), lineno=806, col_offset=4)], Str('BW02', lineno=806, col_offset=12), lineno=806, col_offset=4), Assign([Name('want', Store(), lineno=807, col_offset=4)], Str('cRGB', lineno=807, col_offset=11), lineno=807, col_offset=4)], [], lineno=804, col_offset=0), ClassDef('_Prop_Enums_Color', [Attribute(Name('aetools', Load(), lineno=808, col_offset=24), 'NProperty', Load(), lineno=808, col_offset=24)], [Expr(Str('Enums Color - The color for enums. ', lineno=809, col_offset=4), lineno=809, col_offset=4), Assign([Name('which', Store(), lineno=810, col_offset=4)], Str('BW03', lineno=810, col_offset=12), lineno=810, col_offset=4), Assign([Name('want', Store(), lineno=811, col_offset=4)], Str('cRGB', lineno=811, col_offset=11), lineno=811, col_offset=4)], [], lineno=808, col_offset=0), ClassDef('_Prop_Functions_Color', [Attribute(Name('aetools', Load(), lineno=812, col_offset=28), 'NProperty', Load(), lineno=812, col_offset=28)], [Expr(Str('Functions Color - Set color for functions. ', lineno=813, col_offset=4), lineno=813, col_offset=4), Assign([Name('which', Store(), lineno=814, col_offset=4)], Str('BW04', lineno=814, col_offset=12), lineno=814, col_offset=4), Assign([Name('want', Store(), lineno=815, col_offset=4)], Str('cRGB', lineno=815, col_offset=11), lineno=815, col_offset=4)], [], lineno=812, col_offset=0), ClassDef('_Prop_Globals_Color', [Attribute(Name('aetools', Load(), lineno=816, col_offset=26), 'NProperty', Load(), lineno=816, col_offset=26)], [Expr(Str('Globals Color - The color for globals ', lineno=817, col_offset=4), lineno=817, col_offset=4), Assign([Name('which', Store(), lineno=818, col_offset=4)], Str('BW05', lineno=818, col_offset=12), lineno=818, col_offset=4), Assign([Name('want', Store(), lineno=819, col_offset=4)], Str('cRGB', lineno=819, col_offset=11), lineno=819, col_offset=4)], [], lineno=816, col_offset=0), ClassDef('_Prop_Macros_Color', [Attribute(Name('aetools', Load(), lineno=820, col_offset=25), 'NProperty', Load(), lineno=820, col_offset=25)], [Expr(Str('Macros Color - The color for macros. ', lineno=821, col_offset=4), lineno=821, col_offset=4), Assign([Name('which', Store(), lineno=822, col_offset=4)], Str('BW06', lineno=822, col_offset=12), lineno=822, col_offset=4), Assign([Name('want', Store(), lineno=823, col_offset=4)], Str('cRGB', lineno=823, col_offset=11), lineno=823, col_offset=4)], [], lineno=820, col_offset=0), ClassDef('_Prop_Template_Commands_in_Menu', [Attribute(Name('aetools', Load(), lineno=824, col_offset=38), 'NProperty', Load(), lineno=824, col_offset=38)], [Expr(Str('Template Commands in Menu - Include template commands in context menus ', lineno=825, col_offset=4), lineno=825, col_offset=4), Assign([Name('which', Store(), lineno=826, col_offset=4)], Str('BW10', lineno=826, col_offset=12), lineno=826, col_offset=4), Assign([Name('want', Store(), lineno=827, col_offset=4)], Str('bool', lineno=827, col_offset=11), lineno=827, col_offset=4)], [], lineno=824, col_offset=0), ClassDef('_Prop_Templates_Color', [Attribute(Name('aetools', Load(), lineno=828, col_offset=28), 'NProperty', Load(), lineno=828, col_offset=28)], [Expr(Str('Templates Color - Set color for templates. ', lineno=829, col_offset=4), lineno=829, col_offset=4), Assign([Name('which', Store(), lineno=830, col_offset=4)], Str('BW07', lineno=830, col_offset=12), lineno=830, col_offset=4), Assign([Name('want', Store(), lineno=831, col_offset=4)], Str('cRGB', lineno=831, col_offset=11), lineno=831, col_offset=4)], [], lineno=828, col_offset=0), ClassDef('_Prop_Typedefs_Color', [Attribute(Name('aetools', Load(), lineno=832, col_offset=27), 'NProperty', Load(), lineno=832, col_offset=27)], [Expr(Str('Typedefs Color - The color for typedefs. ', lineno=833, col_offset=4), lineno=833, col_offset=4), Assign([Name('which', Store(), lineno=834, col_offset=4)], Str('BW08', lineno=834, col_offset=12), lineno=834, col_offset=4), Assign([Name('want', Store(), lineno=835, col_offset=4)], Str('cRGB', lineno=835, col_offset=11), lineno=835, col_offset=4)], [], lineno=832, col_offset=0), ClassDef('Build_Settings', [Attribute(Name('aetools', Load(), lineno=837, col_offset=21), 'ComponentItem', Load(), lineno=837, col_offset=21)], [Expr(Str('Build Settings - Build Settings preferences. ', lineno=838, col_offset=4), lineno=838, col_offset=4), Assign([Name('want', Store(), lineno=839, col_offset=4)], Str('BSTG', lineno=839, col_offset=11), lineno=839, col_offset=4)], [], lineno=837, col_offset=0), ClassDef('_Prop_Build_Before_Running', [Attribute(Name('aetools', Load(), lineno=840, col_offset=33), 'NProperty', Load(), lineno=840, col_offset=33)], [Expr(Str('Build Before Running - Build the target before running. ', lineno=841, col_offset=4), lineno=841, col_offset=4), Assign([Name('which', Store(), lineno=842, col_offset=4)], Str('BX04', lineno=842, col_offset=12), lineno=842, col_offset=4), Assign([Name('want', Store(), lineno=843, col_offset=4)], Str('BXbr', lineno=843, col_offset=11), lineno=843, col_offset=4)], [], lineno=840, col_offset=0), ClassDef('_Prop_Compiler_Thread_Stack_Size', [Attribute(Name('aetools', Load(), lineno=844, col_offset=39), 'NProperty', Load(), lineno=844, col_offset=39)], [Expr(Str('Compiler Thread Stack Size - Compiler Thread Stack Size ', lineno=845, col_offset=4), lineno=845, col_offset=4), Assign([Name('which', Store(), lineno=846, col_offset=4)], Str('BX06', lineno=846, col_offset=12), lineno=846, col_offset=4), Assign([Name('want', Store(), lineno=847, col_offset=4)], Str('long', lineno=847, col_offset=11), lineno=847, col_offset=4)], [], lineno=844, col_offset=0), ClassDef('_Prop_Completion_Sound', [Attribute(Name('aetools', Load(), lineno=848, col_offset=29), 'NProperty', Load(), lineno=848, col_offset=29)], [Expr(Str('Completion Sound - Play a sound when finished a Bring Up To Date or Make command. ', lineno=849, col_offset=4), lineno=849, col_offset=4), Assign([Name('which', Store(), lineno=850, col_offset=4)], Str('BX01', lineno=850, col_offset=12), lineno=850, col_offset=4), Assign([Name('want', Store(), lineno=851, col_offset=4)], Str('bool', lineno=851, col_offset=11), lineno=851, col_offset=4)], [], lineno=848, col_offset=0), ClassDef('_Prop_Failure_Sound', [Attribute(Name('aetools', Load(), lineno=852, col_offset=26), 'NProperty', Load(), lineno=852, col_offset=26)], [Expr(Str('Failure Sound - The sound CodeWarrior plays when it cannot finish a Bring Up To Date or Make command. ', lineno=853, col_offset=4), lineno=853, col_offset=4), Assign([Name('which', Store(), lineno=854, col_offset=4)], Str('BX03', lineno=854, col_offset=12), lineno=854, col_offset=4), Assign([Name('want', Store(), lineno=855, col_offset=4)], Str('TEXT', lineno=855, col_offset=11), lineno=855, col_offset=4)], [], lineno=852, col_offset=0), ClassDef('_Prop_Include_Cache_Size', [Attribute(Name('aetools', Load(), lineno=856, col_offset=31), 'NProperty', Load(), lineno=856, col_offset=31)], [Expr(Str('Include Cache Size - Include file cache size. ', lineno=857, col_offset=4), lineno=857, col_offset=4), Assign([Name('which', Store(), lineno=858, col_offset=4)], Str('BX05', lineno=858, col_offset=12), lineno=858, col_offset=4), Assign([Name('want', Store(), lineno=859, col_offset=4)], Str('long', lineno=859, col_offset=11), lineno=859, col_offset=4)], [], lineno=856, col_offset=0), ClassDef('_Prop_Save_Before_Building', [Attribute(Name('aetools', Load(), lineno=860, col_offset=33), 'NProperty', Load(), lineno=860, col_offset=33)], [Expr(Str('Save Before Building - Save open editor files before build operations ', lineno=861, col_offset=4), lineno=861, col_offset=4), Assign([Name('which', Store(), lineno=862, col_offset=4)], Str('BX07', lineno=862, col_offset=12), lineno=862, col_offset=4), Assign([Name('want', Store(), lineno=863, col_offset=4)], Str('bool', lineno=863, col_offset=11), lineno=863, col_offset=4)], [], lineno=860, col_offset=0), ClassDef('_Prop_Success_Sound', [Attribute(Name('aetools', Load(), lineno=864, col_offset=26), 'NProperty', Load(), lineno=864, col_offset=26)], [Expr(Str('Success Sound - The sound CodeWarrior plays when it successfully finishes a Bring Up To Date or Make command. ', lineno=865, col_offset=4), lineno=865, col_offset=4), Assign([Name('which', Store(), lineno=866, col_offset=4)], Str('BX02', lineno=866, col_offset=12), lineno=866, col_offset=4), Assign([Name('want', Store(), lineno=867, col_offset=4)], Str('TEXT', lineno=867, col_offset=11), lineno=867, col_offset=4)], [], lineno=864, col_offset=0), ClassDef('base_class', [Attribute(Name('aetools', Load(), lineno=869, col_offset=17), 'ComponentItem', Load(), lineno=869, col_offset=17)], [Expr(Str('base class - A base class or super class of a class ', lineno=870, col_offset=4), lineno=870, col_offset=4), Assign([Name('want', Store(), lineno=871, col_offset=4)], Str('BsCl', lineno=871, col_offset=11), lineno=871, col_offset=4)], [], lineno=869, col_offset=0), ClassDef('_Prop_access', [Attribute(Name('aetools', Load(), lineno=872, col_offset=19), 'NProperty', Load(), lineno=872, col_offset=19)], [Expr(Str('access -  ', lineno=873, col_offset=4), lineno=873, col_offset=4), Assign([Name('which', Store(), lineno=874, col_offset=4)], Str('Acce', lineno=874, col_offset=12), lineno=874, col_offset=4), Assign([Name('want', Store(), lineno=875, col_offset=4)], Str('Acce', lineno=875, col_offset=11), lineno=875, col_offset=4)], [], lineno=872, col_offset=0), ClassDef('_Prop_class_', [Attribute(Name('aetools', Load(), lineno=876, col_offset=19), 'NProperty', Load(), lineno=876, col_offset=19)], [Expr(Str('class - The class object corresponding to this base class ', lineno=877, col_offset=4), lineno=877, col_offset=4), Assign([Name('which', Store(), lineno=878, col_offset=4)], Str('Clas', lineno=878, col_offset=12), lineno=878, col_offset=4), Assign([Name('want', Store(), lineno=879, col_offset=4)], Str('obj ', lineno=879, col_offset=11), lineno=879, col_offset=4)], [], lineno=876, col_offset=0), ClassDef('_Prop_virtual', [Attribute(Name('aetools', Load(), lineno=880, col_offset=20), 'NProperty', Load(), lineno=880, col_offset=20)], [Expr(Str('virtual -  ', lineno=881, col_offset=4), lineno=881, col_offset=4), Assign([Name('which', Store(), lineno=882, col_offset=4)], Str('Virt', lineno=882, col_offset=12), lineno=882, col_offset=4), Assign([Name('want', Store(), lineno=883, col_offset=4)], Str('bool', lineno=883, col_offset=11), lineno=883, col_offset=4)], [], lineno=880, col_offset=0), Assign([Name('base_classes', Store(), lineno=885, col_offset=0)], Name('base_class', Load(), lineno=885, col_offset=15), lineno=885, col_offset=0), ClassDef('Custom_Keywords', [Attribute(Name('aetools', Load(), lineno=887, col_offset=22), 'ComponentItem', Load(), lineno=887, col_offset=22)], [Expr(Str('Custom Keywords -  ', lineno=888, col_offset=4), lineno=888, col_offset=4), Assign([Name('want', Store(), lineno=889, col_offset=4)], Str('CUKW', lineno=889, col_offset=11), lineno=889, col_offset=4)], [], lineno=887, col_offset=0), ClassDef('_Prop_Custom_Color_1', [Attribute(Name('aetools', Load(), lineno=890, col_offset=27), 'NProperty', Load(), lineno=890, col_offset=27)], [Expr(Str('Custom Color 1 - The color for the first set of custom keywords. ', lineno=891, col_offset=4), lineno=891, col_offset=4), Assign([Name('which', Store(), lineno=892, col_offset=4)], Str('GH05', lineno=892, col_offset=12), lineno=892, col_offset=4), Assign([Name('want', Store(), lineno=893, col_offset=4)], Str('cRGB', lineno=893, col_offset=11), lineno=893, col_offset=4)], [], lineno=890, col_offset=0), ClassDef('_Prop_Custom_Color_2', [Attribute(Name('aetools', Load(), lineno=894, col_offset=27), 'NProperty', Load(), lineno=894, col_offset=27)], [Expr(Str('Custom Color 2 - The color for the second set custom keywords. ', lineno=895, col_offset=4), lineno=895, col_offset=4), Assign([Name('which', Store(), lineno=896, col_offset=4)], Str('GH06', lineno=896, col_offset=12), lineno=896, col_offset=4), Assign([Name('want', Store(), lineno=897, col_offset=4)], Str('cRGB', lineno=897, col_offset=11), lineno=897, col_offset=4)], [], lineno=894, col_offset=0), ClassDef('_Prop_Custom_Color_3', [Attribute(Name('aetools', Load(), lineno=898, col_offset=27), 'NProperty', Load(), lineno=898, col_offset=27)], [Expr(Str('Custom Color 3 - The color for the third set of custom keywords. ', lineno=899, col_offset=4), lineno=899, col_offset=4), Assign([Name('which', Store(), lineno=900, col_offset=4)], Str('GH07', lineno=900, col_offset=12), lineno=900, col_offset=4), Assign([Name('want', Store(), lineno=901, col_offset=4)], Str('cRGB', lineno=901, col_offset=11), lineno=901, col_offset=4)], [], lineno=898, col_offset=0), ClassDef('_Prop_Custom_Color_4', [Attribute(Name('aetools', Load(), lineno=902, col_offset=27), 'NProperty', Load(), lineno=902, col_offset=27)], [Expr(Str('Custom Color 4 - The color for the fourth set of custom keywords. ', lineno=903, col_offset=4), lineno=903, col_offset=4), Assign([Name('which', Store(), lineno=904, col_offset=4)], Str('GH08', lineno=904, col_offset=12), lineno=904, col_offset=4), Assign([Name('want', Store(), lineno=905, col_offset=4)], Str('cRGB', lineno=905, col_offset=11), lineno=905, col_offset=4)], [], lineno=902, col_offset=0), ClassDef('browser_catalog', [Attribute(Name('aetools', Load(), lineno=907, col_offset=22), 'ComponentItem', Load(), lineno=907, col_offset=22)], [Expr(Str('browser catalog - The browser symbol catalog for the current project ', lineno=908, col_offset=4), lineno=908, col_offset=4), Assign([Name('want', Store(), lineno=909, col_offset=4)], Str('Cata', lineno=909, col_offset=11), lineno=909, col_offset=4)], [], lineno=907, col_offset=0), ClassDef('class_', [Attribute(Name('aetools', Load(), lineno=912, col_offset=13), 'ComponentItem', Load(), lineno=912, col_offset=13)], [Expr(Str('class - A class, struct, or record type in the current project. ', lineno=913, col_offset=4), lineno=913, col_offset=4), Assign([Name('want', Store(), lineno=914, col_offset=4)], Str('Clas', lineno=914, col_offset=11), lineno=914, col_offset=4)], [], lineno=912, col_offset=0), ClassDef('_Prop_all_subclasses', [Attribute(Name('aetools', Load(), lineno=915, col_offset=27), 'NProperty', Load(), lineno=915, col_offset=27)], [Expr(Str('all subclasses - the classes directly or indirectly derived from this class ', lineno=916, col_offset=4), lineno=916, col_offset=4), Assign([Name('which', Store(), lineno=917, col_offset=4)], Str('SubA', lineno=917, col_offset=12), lineno=917, col_offset=4), Assign([Name('want', Store(), lineno=918, col_offset=4)], Str('Clas', lineno=918, col_offset=11), lineno=918, col_offset=4)], [], lineno=915, col_offset=0), ClassDef('_Prop_declaration_end_offset', [Attribute(Name('aetools', Load(), lineno=919, col_offset=35), 'NProperty', Load(), lineno=919, col_offset=35)], [Expr(Str('declaration end offset - End of class declaration ', lineno=920, col_offset=4), lineno=920, col_offset=4), Assign([Name('which', Store(), lineno=921, col_offset=4)], Str('DcEn', lineno=921, col_offset=12), lineno=921, col_offset=4), Assign([Name('want', Store(), lineno=922, col_offset=4)], Str('long', lineno=922, col_offset=11), lineno=922, col_offset=4)], [], lineno=919, col_offset=0), ClassDef('_Prop_declaration_file', [Attribute(Name('aetools', Load(), lineno=923, col_offset=29), 'NProperty', Load(), lineno=923, col_offset=29)], [Expr(Str('declaration file - Source file containing the class declaration ', lineno=924, col_offset=4), lineno=924, col_offset=4), Assign([Name('which', Store(), lineno=925, col_offset=4)], Str('DcFl', lineno=925, col_offset=12), lineno=925, col_offset=4), Assign([Name('want', Store(), lineno=926, col_offset=4)], Str('fss ', lineno=926, col_offset=11), lineno=926, col_offset=4)], [], lineno=923, col_offset=0), ClassDef('_Prop_declaration_start_offset', [Attribute(Name('aetools', Load(), lineno=927, col_offset=37), 'NProperty', Load(), lineno=927, col_offset=37)], [Expr(Str('declaration start offset - Start of class declaration source code ', lineno=928, col_offset=4), lineno=928, col_offset=4), Assign([Name('which', Store(), lineno=929, col_offset=4)], Str('DcSt', lineno=929, col_offset=12), lineno=929, col_offset=4), Assign([Name('want', Store(), lineno=930, col_offset=4)], Str('long', lineno=930, col_offset=11), lineno=930, col_offset=4)], [], lineno=927, col_offset=0), ClassDef('_Prop_language', [Attribute(Name('aetools', Load(), lineno=931, col_offset=21), 'NProperty', Load(), lineno=931, col_offset=21)], [Expr(Str('language - Implementation language of this class ', lineno=932, col_offset=4), lineno=932, col_offset=4), Assign([Name('which', Store(), lineno=933, col_offset=4)], Str('Lang', lineno=933, col_offset=12), lineno=933, col_offset=4), Assign([Name('want', Store(), lineno=934, col_offset=4)], Str('Lang', lineno=934, col_offset=11), lineno=934, col_offset=4)], [], lineno=931, col_offset=0), ClassDef('_Prop_name', [Attribute(Name('aetools', Load(), lineno=935, col_offset=17), 'NProperty', Load(), lineno=935, col_offset=17)], [Expr(Str('name -  ', lineno=936, col_offset=4), lineno=936, col_offset=4), Assign([Name('which', Store(), lineno=937, col_offset=4)], Str('pnam', lineno=937, col_offset=12), lineno=937, col_offset=4), Assign([Name('want', Store(), lineno=938, col_offset=4)], Str('TEXT', lineno=938, col_offset=11), lineno=938, col_offset=4)], [], lineno=935, col_offset=0), ClassDef('_Prop_subclasses', [Attribute(Name('aetools', Load(), lineno=939, col_offset=23), 'NProperty', Load(), lineno=939, col_offset=23)], [Expr(Str('subclasses - the immediate subclasses of this class ', lineno=940, col_offset=4), lineno=940, col_offset=4), Assign([Name('which', Store(), lineno=941, col_offset=4)], Str('SubC', lineno=941, col_offset=12), lineno=941, col_offset=4), Assign([Name('want', Store(), lineno=942, col_offset=4)], Str('Clas', lineno=942, col_offset=11), lineno=942, col_offset=4)], [], lineno=939, col_offset=0), Assign([Name('classes', Store(), lineno=947, col_offset=0)], Name('class_', Load(), lineno=947, col_offset=10), lineno=947, col_offset=0), ClassDef('Debugger_Display', [Attribute(Name('aetools', Load(), lineno=949, col_offset=23), 'ComponentItem', Load(), lineno=949, col_offset=23)], [Expr(Str('Debugger Display - Debugger Display preferences ', lineno=950, col_offset=4), lineno=950, col_offset=4), Assign([Name('want', Store(), lineno=951, col_offset=4)], Str('DbDS', lineno=951, col_offset=11), lineno=951, col_offset=4)], [], lineno=949, col_offset=0), ClassDef('_Prop_Default_Array_Size', [Attribute(Name('aetools', Load(), lineno=952, col_offset=31), 'NProperty', Load(), lineno=952, col_offset=31)], [Expr(Str('Default Array Size - Controls whether CodeWarrior uses its own integrated editor or an external application for editing text files. ', lineno=953, col_offset=4), lineno=953, col_offset=4), Assign([Name('which', Store(), lineno=954, col_offset=4)], Str('Db08', lineno=954, col_offset=12), lineno=954, col_offset=4), Assign([Name('want', Store(), lineno=955, col_offset=4)], Str('shor', lineno=955, col_offset=11), lineno=955, col_offset=4)], [], lineno=952, col_offset=0), ClassDef('_Prop_Show_As_Decimal', [Attribute(Name('aetools', Load(), lineno=956, col_offset=28), 'NProperty', Load(), lineno=956, col_offset=28)], [Expr(Str('Show As Decimal - Show variable values as decimal by default ', lineno=957, col_offset=4), lineno=957, col_offset=4), Assign([Name('which', Store(), lineno=958, col_offset=4)], Str('Db10', lineno=958, col_offset=12), lineno=958, col_offset=4), Assign([Name('want', Store(), lineno=959, col_offset=4)], Str('bool', lineno=959, col_offset=11), lineno=959, col_offset=4)], [], lineno=956, col_offset=0), ClassDef('_Prop_Show_Locals', [Attribute(Name('aetools', Load(), lineno=960, col_offset=24), 'NProperty', Load(), lineno=960, col_offset=24)], [Expr(Str('Show Locals - Show locals by default ', lineno=961, col_offset=4), lineno=961, col_offset=4), Assign([Name('which', Store(), lineno=962, col_offset=4)], Str('Db09', lineno=962, col_offset=12), lineno=962, col_offset=4), Assign([Name('want', Store(), lineno=963, col_offset=4)], Str('bool', lineno=963, col_offset=11), lineno=963, col_offset=4)], [], lineno=960, col_offset=0), ClassDef('_Prop_Show_Variable_Types', [Attribute(Name('aetools', Load(), lineno=964, col_offset=32), 'NProperty', Load(), lineno=964, col_offset=32)], [Expr(Str('Show Variable Types - Show variable types by default. ', lineno=965, col_offset=4), lineno=965, col_offset=4), Assign([Name('which', Store(), lineno=966, col_offset=4)], Str('Db01', lineno=966, col_offset=12), lineno=966, col_offset=4), Assign([Name('want', Store(), lineno=967, col_offset=4)], Str('bool', lineno=967, col_offset=11), lineno=967, col_offset=4)], [], lineno=964, col_offset=0), ClassDef('_Prop_Sort_By_Method', [Attribute(Name('aetools', Load(), lineno=968, col_offset=27), 'NProperty', Load(), lineno=968, col_offset=27)], [Expr(Str('Sort By Method - Sort functions by method. ', lineno=969, col_offset=4), lineno=969, col_offset=4), Assign([Name('which', Store(), lineno=970, col_offset=4)], Str('Db02', lineno=970, col_offset=12), lineno=970, col_offset=4), Assign([Name('want', Store(), lineno=971, col_offset=4)], Str('bool', lineno=971, col_offset=11), lineno=971, col_offset=4)], [], lineno=968, col_offset=0), ClassDef('_Prop_Threads_in_Window', [Attribute(Name('aetools', Load(), lineno=972, col_offset=30), 'NProperty', Load(), lineno=972, col_offset=30)], [Expr(Str('Threads in Window - Show threads in separate windows. ', lineno=973, col_offset=4), lineno=973, col_offset=4), Assign([Name('which', Store(), lineno=974, col_offset=4)], Str('Db04', lineno=974, col_offset=12), lineno=974, col_offset=4), Assign([Name('want', Store(), lineno=975, col_offset=4)], Str('bool', lineno=975, col_offset=11), lineno=975, col_offset=4)], [], lineno=972, col_offset=0), ClassDef('_Prop_Use_RTTI', [Attribute(Name('aetools', Load(), lineno=976, col_offset=21), 'NProperty', Load(), lineno=976, col_offset=21)], [Expr(Str('Use RTTI - Enable RunTime Type Information. ', lineno=977, col_offset=4), lineno=977, col_offset=4), Assign([Name('which', Store(), lineno=978, col_offset=4)], Str('Db03', lineno=978, col_offset=12), lineno=978, col_offset=4), Assign([Name('want', Store(), lineno=979, col_offset=4)], Str('bool', lineno=979, col_offset=11), lineno=979, col_offset=4)], [], lineno=976, col_offset=0), ClassDef('_Prop_Variable_Changed_Hilite', [Attribute(Name('aetools', Load(), lineno=980, col_offset=36), 'NProperty', Load(), lineno=980, col_offset=36)], [Expr(Str('Variable Changed Hilite - Variable changed hilite color. ', lineno=981, col_offset=4), lineno=981, col_offset=4), Assign([Name('which', Store(), lineno=982, col_offset=4)], Str('Db07', lineno=982, col_offset=12), lineno=982, col_offset=4), Assign([Name('want', Store(), lineno=983, col_offset=4)], Str('cRGB', lineno=983, col_offset=11), lineno=983, col_offset=4)], [], lineno=980, col_offset=0), ClassDef('_Prop_Variable_Hints', [Attribute(Name('aetools', Load(), lineno=984, col_offset=27), 'NProperty', Load(), lineno=984, col_offset=27)], [Expr(Str('Variable Hints - Show variable hints. ', lineno=985, col_offset=4), lineno=985, col_offset=4), Assign([Name('which', Store(), lineno=986, col_offset=4)], Str('Db05', lineno=986, col_offset=12), lineno=986, col_offset=4), Assign([Name('want', Store(), lineno=987, col_offset=4)], Str('bool', lineno=987, col_offset=11), lineno=987, col_offset=4)], [], lineno=984, col_offset=0), ClassDef('_Prop_Watchpoint_Hilite', [Attribute(Name('aetools', Load(), lineno=988, col_offset=30), 'NProperty', Load(), lineno=988, col_offset=30)], [Expr(Str('Watchpoint Hilite - Watchpoint hilite color. ', lineno=989, col_offset=4), lineno=989, col_offset=4), Assign([Name('which', Store(), lineno=990, col_offset=4)], Str('Db06', lineno=990, col_offset=12), lineno=990, col_offset=4), Assign([Name('want', Store(), lineno=991, col_offset=4)], Str('cRGB', lineno=991, col_offset=11), lineno=991, col_offset=4)], [], lineno=988, col_offset=0), ClassDef('Debugger_Global', [Attribute(Name('aetools', Load(), lineno=993, col_offset=22), 'ComponentItem', Load(), lineno=993, col_offset=22)], [Expr(Str('Debugger Global - Debugger Global preferences ', lineno=994, col_offset=4), lineno=994, col_offset=4), Assign([Name('want', Store(), lineno=995, col_offset=4)], Str('DbGL', lineno=995, col_offset=11), lineno=995, col_offset=4)], [], lineno=993, col_offset=0), ClassDef('_Prop_Auto_Target_Libraries', [Attribute(Name('aetools', Load(), lineno=996, col_offset=34), 'NProperty', Load(), lineno=996, col_offset=34)], [Expr(Str('Auto Target Libraries - Automatically target libraries when debugging ', lineno=997, col_offset=4), lineno=997, col_offset=4), Assign([Name('which', Store(), lineno=998, col_offset=4)], Str('Dg11', lineno=998, col_offset=12), lineno=998, col_offset=4), Assign([Name('want', Store(), lineno=999, col_offset=4)], Str('bool', lineno=999, col_offset=11), lineno=999, col_offset=4)], [], lineno=996, col_offset=0), ClassDef('_Prop_Cache_Edited_Files', [Attribute(Name('aetools', Load(), lineno=1000, col_offset=31), 'NProperty', Load(), lineno=1000, col_offset=31)], [Expr(Str('Cache Edited Files - Cache edit files between debug sessions ', lineno=1001, col_offset=4), lineno=1001, col_offset=4), Assign([Name('which', Store(), lineno=1002, col_offset=4)], Str('Dg12', lineno=1002, col_offset=12), lineno=1002, col_offset=4), Assign([Name('want', Store(), lineno=1003, col_offset=4)], Str('bool', lineno=1003, col_offset=11), lineno=1003, col_offset=4)], [], lineno=1000, col_offset=0), ClassDef('_Prop_Confirm_Kill', [Attribute(Name('aetools', Load(), lineno=1004, col_offset=25), 'NProperty', Load(), lineno=1004, col_offset=25)], [Expr(Str('Confirm Kill - Confirm the \xd4killing\xd5 of the process. ', lineno=1005, col_offset=4), lineno=1005, col_offset=4), Assign([Name('which', Store(), lineno=1006, col_offset=4)], Str('Dg04', lineno=1006, col_offset=12), lineno=1006, col_offset=4), Assign([Name('want', Store(), lineno=1007, col_offset=4)], Str('bool', lineno=1007, col_offset=11), lineno=1007, col_offset=4)], [], lineno=1004, col_offset=0), ClassDef('_Prop_Dont_Step_in_Runtime', [Attribute(Name('aetools', Load(), lineno=1008, col_offset=33), 'NProperty', Load(), lineno=1008, col_offset=33)], [Expr(Str('Dont Step in Runtime - Don\xd5t step into runtime code when debugging. ', lineno=1009, col_offset=4), lineno=1009, col_offset=4), Assign([Name('which', Store(), lineno=1010, col_offset=4)], Str('Dg07', lineno=1010, col_offset=12), lineno=1010, col_offset=4), Assign([Name('want', Store(), lineno=1011, col_offset=4)], Str('bool', lineno=1011, col_offset=11), lineno=1011, col_offset=4)], [], lineno=1008, col_offset=0), ClassDef('_Prop_File_Cache_Duration', [Attribute(Name('aetools', Load(), lineno=1012, col_offset=32), 'NProperty', Load(), lineno=1012, col_offset=32)], [Expr(Str('File Cache Duration - Duration to keep files in cache (in days) ', lineno=1013, col_offset=4), lineno=1013, col_offset=4), Assign([Name('which', Store(), lineno=1014, col_offset=4)], Str('Dg13', lineno=1014, col_offset=12), lineno=1014, col_offset=4), Assign([Name('want', Store(), lineno=1015, col_offset=4)], Str('shor', lineno=1015, col_offset=11), lineno=1015, col_offset=4)], [], lineno=1012, col_offset=0), ClassDef('_Prop_Ignore_Mod_Dates', [Attribute(Name('aetools', Load(), lineno=1016, col_offset=29), 'NProperty', Load(), lineno=1016, col_offset=29)], [Expr(Str('Ignore Mod Dates - Ignore modification dates of files. ', lineno=1017, col_offset=4), lineno=1017, col_offset=4), Assign([Name('which', Store(), lineno=1018, col_offset=4)], Str('Dg01', lineno=1018, col_offset=12), lineno=1018, col_offset=4), Assign([Name('want', Store(), lineno=1019, col_offset=4)], Str('bool', lineno=1019, col_offset=11), lineno=1019, col_offset=4)], [], lineno=1016, col_offset=0), ClassDef('_Prop_Launch_Apps_on_Open', [Attribute(Name('aetools', Load(), lineno=1020, col_offset=32), 'NProperty', Load(), lineno=1020, col_offset=32)], [Expr(Str('Launch Apps on Open - Launch applications on the opening of sym files. ', lineno=1021, col_offset=4), lineno=1021, col_offset=4), Assign([Name('which', Store(), lineno=1022, col_offset=4)], Str('Dg03', lineno=1022, col_offset=12), lineno=1022, col_offset=4), Assign([Name('want', Store(), lineno=1023, col_offset=4)], Str('bool', lineno=1023, col_offset=11), lineno=1023, col_offset=4)], [], lineno=1020, col_offset=0), ClassDef('_Prop_Open_All_Classes', [Attribute(Name('aetools', Load(), lineno=1024, col_offset=29), 'NProperty', Load(), lineno=1024, col_offset=29)], [Expr(Str('Open All Classes - Open all Java class files. ', lineno=1025, col_offset=4), lineno=1025, col_offset=4), Assign([Name('which', Store(), lineno=1026, col_offset=4)], Str('Dg02', lineno=1026, col_offset=12), lineno=1026, col_offset=4), Assign([Name('want', Store(), lineno=1027, col_offset=4)], Str('bool', lineno=1027, col_offset=11), lineno=1027, col_offset=4)], [], lineno=1024, col_offset=0), ClassDef('_Prop_Select_Stack_Crawl', [Attribute(Name('aetools', Load(), lineno=1028, col_offset=31), 'NProperty', Load(), lineno=1028, col_offset=31)], [Expr(Str('Select Stack Crawl - Select the stack crawl. ', lineno=1029, col_offset=4), lineno=1029, col_offset=4), Assign([Name('which', Store(), lineno=1030, col_offset=4)], Str('Dg06', lineno=1030, col_offset=12), lineno=1030, col_offset=4), Assign([Name('want', Store(), lineno=1031, col_offset=4)], Str('bool', lineno=1031, col_offset=11), lineno=1031, col_offset=4)], [], lineno=1028, col_offset=0), ClassDef('_Prop_Stop_at_Main', [Attribute(Name('aetools', Load(), lineno=1032, col_offset=25), 'NProperty', Load(), lineno=1032, col_offset=25)], [Expr(Str('Stop at Main - Stop to debug on the main() function. ', lineno=1033, col_offset=4), lineno=1033, col_offset=4), Assign([Name('which', Store(), lineno=1034, col_offset=4)], Str('Dg05', lineno=1034, col_offset=12), lineno=1034, col_offset=4), Assign([Name('want', Store(), lineno=1035, col_offset=4)], Str('bool', lineno=1035, col_offset=11), lineno=1035, col_offset=4)], [], lineno=1032, col_offset=0), ClassDef('Debugger_Target', [Attribute(Name('aetools', Load(), lineno=1037, col_offset=22), 'ComponentItem', Load(), lineno=1037, col_offset=22)], [Expr(Str('Debugger Target - Debugger Target preferences ', lineno=1038, col_offset=4), lineno=1038, col_offset=4), Assign([Name('want', Store(), lineno=1039, col_offset=4)], Str('DbTG', lineno=1039, col_offset=11), lineno=1039, col_offset=4)], [], lineno=1037, col_offset=0), ClassDef('_Prop_Cache_symbolics', [Attribute(Name('aetools', Load(), lineno=1040, col_offset=28), 'NProperty', Load(), lineno=1040, col_offset=28)], [Expr(Str('Cache symbolics - Cache symbolics between runs when executable doesn\xd5t change, else release symbolics files after killing process. ', lineno=1041, col_offset=4), lineno=1041, col_offset=4), Assign([Name('which', Store(), lineno=1042, col_offset=4)], Str('Dt15', lineno=1042, col_offset=12), lineno=1042, col_offset=4), Assign([Name('want', Store(), lineno=1043, col_offset=4)], Str('bool', lineno=1043, col_offset=11), lineno=1043, col_offset=4)], [], lineno=1040, col_offset=0), ClassDef('_Prop_Data_Update_Interval', [Attribute(Name('aetools', Load(), lineno=1044, col_offset=33), 'NProperty', Load(), lineno=1044, col_offset=33)], [Expr(Str('Data Update Interval - How often to update the data while running (in seconds) ', lineno=1045, col_offset=4), lineno=1045, col_offset=4), Assign([Name('which', Store(), lineno=1046, col_offset=4)], Str('Dt09', lineno=1046, col_offset=12), lineno=1046, col_offset=4), Assign([Name('want', Store(), lineno=1047, col_offset=4)], Str('long', lineno=1047, col_offset=11), lineno=1047, col_offset=4)], [], lineno=1044, col_offset=0), ClassDef('_Prop_Log_System_Messages', [Attribute(Name('aetools', Load(), lineno=1048, col_offset=32), 'NProperty', Load(), lineno=1048, col_offset=32)], [Expr(Str('Log System Messages - Log all system messages while debugging. ', lineno=1049, col_offset=4), lineno=1049, col_offset=4), Assign([Name('which', Store(), lineno=1050, col_offset=4)], Str('Dt02', lineno=1050, col_offset=12), lineno=1050, col_offset=4), Assign([Name('want', Store(), lineno=1051, col_offset=4)], Str('bool', lineno=1051, col_offset=11), lineno=1051, col_offset=4)], [], lineno=1048, col_offset=0), ClassDef('_Prop_Relocated_Executable_Path', [Attribute(Name('aetools', Load(), lineno=1052, col_offset=38), 'NProperty', Load(), lineno=1052, col_offset=38)], [Expr(Str('Relocated Executable Path - Path to location of relocated libraries, code resources or remote debugging folder ', lineno=1053, col_offset=4), lineno=1053, col_offset=4), Assign([Name('which', Store(), lineno=1054, col_offset=4)], Str('Dt10', lineno=1054, col_offset=12), lineno=1054, col_offset=4), Assign([Name('want', Store(), lineno=1055, col_offset=4)], Str('RlPt', lineno=1055, col_offset=11), lineno=1055, col_offset=4)], [], lineno=1052, col_offset=0), ClassDef('_Prop_Stop_at_temp_breakpoint', [Attribute(Name('aetools', Load(), lineno=1056, col_offset=36), 'NProperty', Load(), lineno=1056, col_offset=36)], [Expr(Str('Stop at temp breakpoint - Stop at a temp breakpoint on program launch. Set breakpoint type in Temp Breakpoint Type AppleEvent. ', lineno=1057, col_offset=4), lineno=1057, col_offset=4), Assign([Name('which', Store(), lineno=1058, col_offset=4)], Str('Dt13', lineno=1058, col_offset=12), lineno=1058, col_offset=4), Assign([Name('want', Store(), lineno=1059, col_offset=4)], Str('bool', lineno=1059, col_offset=11), lineno=1059, col_offset=4)], [], lineno=1056, col_offset=0), ClassDef('_Prop_Temp_Breakpoint_Type', [Attribute(Name('aetools', Load(), lineno=1060, col_offset=33), 'NProperty', Load(), lineno=1060, col_offset=33)], [Expr(Str('Temp Breakpoint Type - Type of temp breakpoint to set on program launch. ', lineno=1061, col_offset=4), lineno=1061, col_offset=4), Assign([Name('which', Store(), lineno=1062, col_offset=4)], Str('Dt16', lineno=1062, col_offset=12), lineno=1062, col_offset=4), Assign([Name('want', Store(), lineno=1063, col_offset=4)], Str('TmpB', lineno=1063, col_offset=11), lineno=1063, col_offset=4)], [], lineno=1060, col_offset=0), ClassDef('_Prop_Temp_breakpoint_names', [Attribute(Name('aetools', Load(), lineno=1064, col_offset=34), 'NProperty', Load(), lineno=1064, col_offset=34)], [Expr(Str('Temp breakpoint names - Comma separated list of names to attempt to stop at on program launch. First symbol to resolve in list is the temp BP that will be set. ', lineno=1065, col_offset=4), lineno=1065, col_offset=4), Assign([Name('which', Store(), lineno=1066, col_offset=4)], Str('Dt14', lineno=1066, col_offset=12), lineno=1066, col_offset=4), Assign([Name('want', Store(), lineno=1067, col_offset=4)], Str('ctxt', lineno=1067, col_offset=11), lineno=1067, col_offset=4)], [], lineno=1064, col_offset=0), ClassDef('_Prop_Update_Data_While_Running', [Attribute(Name('aetools', Load(), lineno=1068, col_offset=38), 'NProperty', Load(), lineno=1068, col_offset=38)], [Expr(Str('Update Data While Running - Should pause to update data while running ', lineno=1069, col_offset=4), lineno=1069, col_offset=4), Assign([Name('which', Store(), lineno=1070, col_offset=4)], Str('Dt08', lineno=1070, col_offset=12), lineno=1070, col_offset=4), Assign([Name('want', Store(), lineno=1071, col_offset=4)], Str('bool', lineno=1071, col_offset=11), lineno=1071, col_offset=4)], [], lineno=1068, col_offset=0), ClassDef('Debugger_Windowing', [Attribute(Name('aetools', Load(), lineno=1073, col_offset=25), 'ComponentItem', Load(), lineno=1073, col_offset=25)], [Expr(Str('Debugger Windowing -  ', lineno=1074, col_offset=4), lineno=1074, col_offset=4), Assign([Name('want', Store(), lineno=1075, col_offset=4)], Str('DbWN', lineno=1075, col_offset=11), lineno=1075, col_offset=4)], [], lineno=1073, col_offset=0), ClassDef('_Prop_Debugging_Start_Action', [Attribute(Name('aetools', Load(), lineno=1076, col_offset=35), 'NProperty', Load(), lineno=1076, col_offset=35)], [Expr(Str('Debugging Start Action - What action to take when debug session starts ', lineno=1077, col_offset=4), lineno=1077, col_offset=4), Assign([Name('which', Store(), lineno=1078, col_offset=4)], Str('Dw01', lineno=1078, col_offset=12), lineno=1078, col_offset=4), Assign([Name('want', Store(), lineno=1079, col_offset=4)], Str('DbSA', lineno=1079, col_offset=11), lineno=1079, col_offset=4)], [], lineno=1076, col_offset=0), ClassDef('_Prop_Do_Nothing_To_Projects', [Attribute(Name('aetools', Load(), lineno=1080, col_offset=35), 'NProperty', Load(), lineno=1080, col_offset=35)], [Expr(Str('Do Nothing To Projects - Suppress debugging start action for project windows ', lineno=1081, col_offset=4), lineno=1081, col_offset=4), Assign([Name('which', Store(), lineno=1082, col_offset=4)], Str('Dw02', lineno=1082, col_offset=12), lineno=1082, col_offset=4), Assign([Name('want', Store(), lineno=1083, col_offset=4)], Str('bool', lineno=1083, col_offset=11), lineno=1083, col_offset=4)], [], lineno=1080, col_offset=0), ClassDef('data_member', [Attribute(Name('aetools', Load(), lineno=1085, col_offset=18), 'ComponentItem', Load(), lineno=1085, col_offset=18)], [Expr(Str('data member - A class data member or field ', lineno=1086, col_offset=4), lineno=1086, col_offset=4), Assign([Name('want', Store(), lineno=1087, col_offset=4)], Str('DtMb', lineno=1087, col_offset=11), lineno=1087, col_offset=4)], [], lineno=1085, col_offset=0), ClassDef('_Prop_static', [Attribute(Name('aetools', Load(), lineno=1088, col_offset=19), 'NProperty', Load(), lineno=1088, col_offset=19)], [Expr(Str('static -  ', lineno=1089, col_offset=4), lineno=1089, col_offset=4), Assign([Name('which', Store(), lineno=1090, col_offset=4)], Str('Stat', lineno=1090, col_offset=12), lineno=1090, col_offset=4), Assign([Name('want', Store(), lineno=1091, col_offset=4)], Str('bool', lineno=1091, col_offset=11), lineno=1091, col_offset=4)], [], lineno=1088, col_offset=0), Assign([Name('data_members', Store(), lineno=1093, col_offset=0)], Name('data_member', Load(), lineno=1093, col_offset=15), lineno=1093, col_offset=0), ClassDef('Editor', [Attribute(Name('aetools', Load(), lineno=1095, col_offset=13), 'ComponentItem', Load(), lineno=1095, col_offset=13)], [Expr(Str('Editor -  ', lineno=1096, col_offset=4), lineno=1096, col_offset=4), Assign([Name('want', Store(), lineno=1097, col_offset=4)], Str('EDTR', lineno=1097, col_offset=11), lineno=1097, col_offset=4)], [], lineno=1095, col_offset=0), ClassDef('_Prop_Background_Color', [Attribute(Name('aetools', Load(), lineno=1098, col_offset=29), 'NProperty', Load(), lineno=1098, col_offset=29)], [Expr(Str('Background Color - Color of the background of editor windows. ', lineno=1099, col_offset=4), lineno=1099, col_offset=4), Assign([Name('which', Store(), lineno=1100, col_offset=4)], Str('ED13', lineno=1100, col_offset=12), lineno=1100, col_offset=4), Assign([Name('want', Store(), lineno=1101, col_offset=4)], Str('cRGB', lineno=1101, col_offset=11), lineno=1101, col_offset=4)], [], lineno=1098, col_offset=0), ClassDef('_Prop_Balance', [Attribute(Name('aetools', Load(), lineno=1102, col_offset=20), 'NProperty', Load(), lineno=1102, col_offset=20)], [Expr(Str('Balance - Flash the matching opening bracket when you type a closing bracket. ', lineno=1103, col_offset=4), lineno=1103, col_offset=4), Assign([Name('which', Store(), lineno=1104, col_offset=4)], Str('ED03', lineno=1104, col_offset=12), lineno=1104, col_offset=4), Assign([Name('want', Store(), lineno=1105, col_offset=4)], Str('bool', lineno=1105, col_offset=11), lineno=1105, col_offset=4)], [], lineno=1102, col_offset=0), ClassDef('_Prop_Context_Popup_Delay', [Attribute(Name('aetools', Load(), lineno=1106, col_offset=32), 'NProperty', Load(), lineno=1106, col_offset=32)], [Expr(Str('Context Popup Delay - The amount of time, in sixtieths of a second, before the context popup is displayed if you click and hold on a browser symbol. ', lineno=1107, col_offset=4), lineno=1107, col_offset=4), Assign([Name('which', Store(), lineno=1108, col_offset=4)], Str('ED14', lineno=1108, col_offset=12), lineno=1108, col_offset=4), Assign([Name('want', Store(), lineno=1109, col_offset=4)], Str('long', lineno=1109, col_offset=11), lineno=1109, col_offset=4)], [], lineno=1106, col_offset=0), ClassDef('_Prop_Default_Text_File_Format', [Attribute(Name('aetools', Load(), lineno=1110, col_offset=37), 'NProperty', Load(), lineno=1110, col_offset=37)], [Expr(Str('Default Text File Format - Default text file format (i.e. which type of line endings to use) ', lineno=1111, col_offset=4), lineno=1111, col_offset=4), Assign([Name('which', Store(), lineno=1112, col_offset=4)], Str('ED17', lineno=1112, col_offset=12), lineno=1112, col_offset=4), Assign([Name('want', Store(), lineno=1113, col_offset=4)], Str('TxtF', lineno=1113, col_offset=11), lineno=1113, col_offset=4)], [], lineno=1110, col_offset=0), ClassDef('_Prop_Dynamic_Scroll', [Attribute(Name('aetools', Load(), lineno=1114, col_offset=27), 'NProperty', Load(), lineno=1114, col_offset=27)], [Expr(Str('Dynamic Scroll - Display a window\xd5s contents as you move the scroll box. ', lineno=1115, col_offset=4), lineno=1115, col_offset=4), Assign([Name('which', Store(), lineno=1116, col_offset=4)], Str('ED02', lineno=1116, col_offset=12), lineno=1116, col_offset=4), Assign([Name('want', Store(), lineno=1117, col_offset=4)], Str('bool', lineno=1117, col_offset=11), lineno=1117, col_offset=4)], [], lineno=1114, col_offset=0), ClassDef('_Prop_Flash_Delay', [Attribute(Name('aetools', Load(), lineno=1118, col_offset=24), 'NProperty', Load(), lineno=1118, col_offset=24)], [Expr(Str('Flash Delay - The amount of time, in sixtieths of a second, the editor highlights a matching bracket. ', lineno=1119, col_offset=4), lineno=1119, col_offset=4), Assign([Name('which', Store(), lineno=1120, col_offset=4)], Str('ED01', lineno=1120, col_offset=12), lineno=1120, col_offset=4), Assign([Name('want', Store(), lineno=1121, col_offset=4)], Str('long', lineno=1121, col_offset=11), lineno=1121, col_offset=4)], [], lineno=1118, col_offset=0), ClassDef('_Prop_Left_Margin_Line_Select', [Attribute(Name('aetools', Load(), lineno=1122, col_offset=36), 'NProperty', Load(), lineno=1122, col_offset=36)], [Expr(Str('Left Margin Line Select - Clicking in the left margin selects lines ', lineno=1123, col_offset=4), lineno=1123, col_offset=4), Assign([Name('which', Store(), lineno=1124, col_offset=4)], Str('ED16', lineno=1124, col_offset=12), lineno=1124, col_offset=4), Assign([Name('want', Store(), lineno=1125, col_offset=4)], Str('bool', lineno=1125, col_offset=11), lineno=1125, col_offset=4)], [], lineno=1122, col_offset=0), ClassDef('_Prop_Main_Text_Color', [Attribute(Name('aetools', Load(), lineno=1126, col_offset=28), 'NProperty', Load(), lineno=1126, col_offset=28)], [Expr(Str('Main Text Color - Main, default, color for text. ', lineno=1127, col_offset=4), lineno=1127, col_offset=4), Assign([Name('which', Store(), lineno=1128, col_offset=4)], Str('ED12', lineno=1128, col_offset=12), lineno=1128, col_offset=4), Assign([Name('want', Store(), lineno=1129, col_offset=4)], Str('cRGB', lineno=1129, col_offset=11), lineno=1129, col_offset=4)], [], lineno=1126, col_offset=0), ClassDef('_Prop_Relaxed_C_Popup_Parsing', [Attribute(Name('aetools', Load(), lineno=1130, col_offset=36), 'NProperty', Load(), lineno=1130, col_offset=36)], [Expr(Str('Relaxed C Popup Parsing - Relax the function parser for C source files ', lineno=1131, col_offset=4), lineno=1131, col_offset=4), Assign([Name('which', Store(), lineno=1132, col_offset=4)], Str('ED15', lineno=1132, col_offset=12), lineno=1132, col_offset=4), Assign([Name('want', Store(), lineno=1133, col_offset=4)], Str('bool', lineno=1133, col_offset=11), lineno=1133, col_offset=4)], [], lineno=1130, col_offset=0), ClassDef('_Prop_Remember_Font', [Attribute(Name('aetools', Load(), lineno=1134, col_offset=26), 'NProperty', Load(), lineno=1134, col_offset=26)], [Expr(Str('Remember Font - Display a source file with its own font settings. ', lineno=1135, col_offset=4), lineno=1135, col_offset=4), Assign([Name('which', Store(), lineno=1136, col_offset=4)], Str('ED08', lineno=1136, col_offset=12), lineno=1136, col_offset=4), Assign([Name('want', Store(), lineno=1137, col_offset=4)], Str('bool', lineno=1137, col_offset=11), lineno=1137, col_offset=4)], [], lineno=1134, col_offset=0), ClassDef('_Prop_Remember_Selection', [Attribute(Name('aetools', Load(), lineno=1138, col_offset=31), 'NProperty', Load(), lineno=1138, col_offset=31)], [Expr(Str('Remember Selection - Restore the previous selection in a file when you open it. ', lineno=1139, col_offset=4), lineno=1139, col_offset=4), Assign([Name('which', Store(), lineno=1140, col_offset=4)], Str('ED09', lineno=1140, col_offset=12), lineno=1140, col_offset=4), Assign([Name('want', Store(), lineno=1141, col_offset=4)], Str('bool', lineno=1141, col_offset=11), lineno=1141, col_offset=4)], [], lineno=1138, col_offset=0), ClassDef('_Prop_Remember_Window', [Attribute(Name('aetools', Load(), lineno=1142, col_offset=28), 'NProperty', Load(), lineno=1142, col_offset=28)], [Expr(Str('Remember Window - Restore the last size and position for a source file window when you open it. ', lineno=1143, col_offset=4), lineno=1143, col_offset=4), Assign([Name('which', Store(), lineno=1144, col_offset=4)], Str('ED10', lineno=1144, col_offset=12), lineno=1144, col_offset=4), Assign([Name('want', Store(), lineno=1145, col_offset=4)], Str('bool', lineno=1145, col_offset=11), lineno=1145, col_offset=4)], [], lineno=1142, col_offset=0), ClassDef('_Prop_Sort_Function_Popup', [Attribute(Name('aetools', Load(), lineno=1146, col_offset=32), 'NProperty', Load(), lineno=1146, col_offset=32)], [Expr(Str('Sort Function Popup -  ', lineno=1147, col_offset=4), lineno=1147, col_offset=4), Assign([Name('which', Store(), lineno=1148, col_offset=4)], Str('ED06', lineno=1148, col_offset=12), lineno=1148, col_offset=4), Assign([Name('want', Store(), lineno=1149, col_offset=4)], Str('bool', lineno=1149, col_offset=11), lineno=1149, col_offset=4)], [], lineno=1146, col_offset=0), ClassDef('_Prop_Use_Drag__26__Drop_Editing', [Attribute(Name('aetools', Load(), lineno=1150, col_offset=39), 'NProperty', Load(), lineno=1150, col_offset=39)], [Expr(Str('Use Drag & Drop Editing - Use Drag & Drop text editing. ', lineno=1151, col_offset=4), lineno=1151, col_offset=4), Assign([Name('which', Store(), lineno=1152, col_offset=4)], Str('ED04', lineno=1152, col_offset=12), lineno=1152, col_offset=4), Assign([Name('want', Store(), lineno=1153, col_offset=4)], Str('bool', lineno=1153, col_offset=11), lineno=1153, col_offset=4)], [], lineno=1150, col_offset=0), ClassDef('_Prop_Use_Multiple_Undo', [Attribute(Name('aetools', Load(), lineno=1154, col_offset=30), 'NProperty', Load(), lineno=1154, col_offset=30)], [Expr(Str('Use Multiple Undo -  ', lineno=1155, col_offset=4), lineno=1155, col_offset=4), Assign([Name('which', Store(), lineno=1156, col_offset=4)], Str('ED07', lineno=1156, col_offset=12), lineno=1156, col_offset=4), Assign([Name('want', Store(), lineno=1157, col_offset=4)], Str('bool', lineno=1157, col_offset=11), lineno=1157, col_offset=4)], [], lineno=1154, col_offset=0), ClassDef('Environment_Variable', [Attribute(Name('aetools', Load(), lineno=1159, col_offset=27), 'ComponentItem', Load(), lineno=1159, col_offset=27)], [Expr(Str('Environment Variable - Environment variable for host OS ', lineno=1160, col_offset=4), lineno=1160, col_offset=4), Assign([Name('want', Store(), lineno=1161, col_offset=4)], Str('EnvV', lineno=1161, col_offset=11), lineno=1161, col_offset=4)], [], lineno=1159, col_offset=0), ClassDef('_Prop_value', [Attribute(Name('aetools', Load(), lineno=1162, col_offset=18), 'NProperty', Load(), lineno=1162, col_offset=18)], [Expr(Str('value - Value of the environment variable ', lineno=1163, col_offset=4), lineno=1163, col_offset=4), Assign([Name('which', Store(), lineno=1164, col_offset=4)], Str('Valu', lineno=1164, col_offset=12), lineno=1164, col_offset=4), Assign([Name('want', Store(), lineno=1165, col_offset=4)], Str('TEXT', lineno=1165, col_offset=11), lineno=1165, col_offset=4)], [], lineno=1162, col_offset=0), ClassDef('Error_Information', [Attribute(Name('aetools', Load(), lineno=1167, col_offset=24), 'ComponentItem', Load(), lineno=1167, col_offset=24)], [Expr(Str('Error Information - Describes a single error or warning from the compiler or the linker. ', lineno=1168, col_offset=4), lineno=1168, col_offset=4), Assign([Name('want', Store(), lineno=1169, col_offset=4)], Str('ErrM', lineno=1169, col_offset=11), lineno=1169, col_offset=4)], [], lineno=1167, col_offset=0), ClassDef('_Prop_disk_file', [Attribute(Name('aetools', Load(), lineno=1170, col_offset=22), 'NProperty', Load(), lineno=1170, col_offset=22)], [Expr(Str('disk file - The file where the error occurred.  May not be returned for certain kinds of errors (eg, link errors). ', lineno=1171, col_offset=4), lineno=1171, col_offset=4), Assign([Name('which', Store(), lineno=1172, col_offset=4)], Str('file', lineno=1172, col_offset=12), lineno=1172, col_offset=4), Assign([Name('want', Store(), lineno=1173, col_offset=4)], Str('fss ', lineno=1173, col_offset=11), lineno=1173, col_offset=4)], [], lineno=1170, col_offset=0), ClassDef('_Prop_lineNumber', [Attribute(Name('aetools', Load(), lineno=1174, col_offset=23), 'NProperty', Load(), lineno=1174, col_offset=23)], [Expr(Str('lineNumber - The line in the file where the error occurred.  May not be returned for certain kinds of errors (eg, link errors). ', lineno=1175, col_offset=4), lineno=1175, col_offset=4), Assign([Name('which', Store(), lineno=1176, col_offset=4)], Str('ErrL', lineno=1176, col_offset=12), lineno=1176, col_offset=4), Assign([Name('want', Store(), lineno=1177, col_offset=4)], Str('long', lineno=1177, col_offset=11), lineno=1177, col_offset=4)], [], lineno=1174, col_offset=0), ClassDef('_Prop_message', [Attribute(Name('aetools', Load(), lineno=1178, col_offset=20), 'NProperty', Load(), lineno=1178, col_offset=20)], [Expr(Str('message - The error or warning message. ', lineno=1179, col_offset=4), lineno=1179, col_offset=4), Assign([Name('which', Store(), lineno=1180, col_offset=4)], Str('ErrS', lineno=1180, col_offset=12), lineno=1180, col_offset=4), Assign([Name('want', Store(), lineno=1181, col_offset=4)], Str('TEXT', lineno=1181, col_offset=11), lineno=1181, col_offset=4)], [], lineno=1178, col_offset=0), ClassDef('_Prop_messageKind', [Attribute(Name('aetools', Load(), lineno=1182, col_offset=24), 'NProperty', Load(), lineno=1182, col_offset=24)], [Expr(Str('messageKind - The type of error or warning. ', lineno=1183, col_offset=4), lineno=1183, col_offset=4), Assign([Name('which', Store(), lineno=1184, col_offset=4)], Str('ErrT', lineno=1184, col_offset=12), lineno=1184, col_offset=4), Assign([Name('want', Store(), lineno=1185, col_offset=4)], Str('ErrT', lineno=1185, col_offset=11), lineno=1185, col_offset=4)], [], lineno=1182, col_offset=0), ClassDef('Function_Information', [Attribute(Name('aetools', Load(), lineno=1187, col_offset=27), 'ComponentItem', Load(), lineno=1187, col_offset=27)], [Expr(Str('Function Information - Describes the location of any function or global data definition within the current project. ', lineno=1188, col_offset=4), lineno=1188, col_offset=4), Assign([Name('want', Store(), lineno=1189, col_offset=4)], Str('FDef', lineno=1189, col_offset=11), lineno=1189, col_offset=4)], [], lineno=1187, col_offset=0), ClassDef('File_Mappings', [Attribute(Name('aetools', Load(), lineno=1191, col_offset=20), 'ComponentItem', Load(), lineno=1191, col_offset=20)], [Expr(Str('File Mappings - Mappings of extensions & file types to compilers ', lineno=1192, col_offset=4), lineno=1192, col_offset=4), Assign([Name('want', Store(), lineno=1193, col_offset=4)], Str('FLMP', lineno=1193, col_offset=11), lineno=1193, col_offset=4)], [], lineno=1191, col_offset=0), ClassDef('_Prop_Mappings', [Attribute(Name('aetools', Load(), lineno=1194, col_offset=21), 'NProperty', Load(), lineno=1194, col_offset=21)], [Expr(Str('Mappings -  ', lineno=1195, col_offset=4), lineno=1195, col_offset=4), Assign([Name('which', Store(), lineno=1196, col_offset=4)], Str('FMps', lineno=1196, col_offset=12), lineno=1196, col_offset=4), Assign([Name('want', Store(), lineno=1197, col_offset=4)], Str('FMap', lineno=1197, col_offset=11), lineno=1197, col_offset=4)], [], lineno=1194, col_offset=0), ClassDef('File_Mapping', [Attribute(Name('aetools', Load(), lineno=1199, col_offset=19), 'ComponentItem', Load(), lineno=1199, col_offset=19)], [Expr(Str('File Mapping -  ', lineno=1200, col_offset=4), lineno=1200, col_offset=4), Assign([Name('want', Store(), lineno=1201, col_offset=4)], Str('FMap', lineno=1201, col_offset=11), lineno=1201, col_offset=4)], [], lineno=1199, col_offset=0), ClassDef('_Prop_Compiler', [Attribute(Name('aetools', Load(), lineno=1202, col_offset=21), 'NProperty', Load(), lineno=1202, col_offset=21)], [Expr(Str('Compiler -  ', lineno=1203, col_offset=4), lineno=1203, col_offset=4), Assign([Name('which', Store(), lineno=1204, col_offset=4)], Str('TA07', lineno=1204, col_offset=12), lineno=1204, col_offset=4), Assign([Name('want', Store(), lineno=1205, col_offset=4)], Str('TEXT', lineno=1205, col_offset=11), lineno=1205, col_offset=4)], [], lineno=1202, col_offset=0), ClassDef('_Prop_Extension', [Attribute(Name('aetools', Load(), lineno=1206, col_offset=22), 'NProperty', Load(), lineno=1206, col_offset=22)], [Expr(Str('Extension -  ', lineno=1207, col_offset=4), lineno=1207, col_offset=4), Assign([Name('which', Store(), lineno=1208, col_offset=4)], Str('TA02', lineno=1208, col_offset=12), lineno=1208, col_offset=4), Assign([Name('want', Store(), lineno=1209, col_offset=4)], Str('TEXT', lineno=1209, col_offset=11), lineno=1209, col_offset=4)], [], lineno=1206, col_offset=0), ClassDef('_Prop_File_Type', [Attribute(Name('aetools', Load(), lineno=1210, col_offset=22), 'NProperty', Load(), lineno=1210, col_offset=22)], [Expr(Str('File Type -  ', lineno=1211, col_offset=4), lineno=1211, col_offset=4), Assign([Name('which', Store(), lineno=1212, col_offset=4)], Str('PR04', lineno=1212, col_offset=12), lineno=1212, col_offset=4), Assign([Name('want', Store(), lineno=1213, col_offset=4)], Str('TEXT', lineno=1213, col_offset=11), lineno=1213, col_offset=4)], [], lineno=1210, col_offset=0), ClassDef('_Prop_Ignored_by_Make', [Attribute(Name('aetools', Load(), lineno=1214, col_offset=28), 'NProperty', Load(), lineno=1214, col_offset=28)], [Expr(Str('Ignored by Make -  ', lineno=1215, col_offset=4), lineno=1215, col_offset=4), Assign([Name('which', Store(), lineno=1216, col_offset=4)], Str('TA06', lineno=1216, col_offset=12), lineno=1216, col_offset=4), Assign([Name('want', Store(), lineno=1217, col_offset=4)], Str('bool', lineno=1217, col_offset=11), lineno=1217, col_offset=4)], [], lineno=1214, col_offset=0), ClassDef('_Prop_Launchable', [Attribute(Name('aetools', Load(), lineno=1218, col_offset=23), 'NProperty', Load(), lineno=1218, col_offset=23)], [Expr(Str('Launchable -  ', lineno=1219, col_offset=4), lineno=1219, col_offset=4), Assign([Name('which', Store(), lineno=1220, col_offset=4)], Str('TA05', lineno=1220, col_offset=12), lineno=1220, col_offset=4), Assign([Name('want', Store(), lineno=1221, col_offset=4)], Str('bool', lineno=1221, col_offset=11), lineno=1221, col_offset=4)], [], lineno=1218, col_offset=0), ClassDef('_Prop_Precompiled', [Attribute(Name('aetools', Load(), lineno=1222, col_offset=24), 'NProperty', Load(), lineno=1222, col_offset=24)], [Expr(Str('Precompiled -  ', lineno=1223, col_offset=4), lineno=1223, col_offset=4), Assign([Name('which', Store(), lineno=1224, col_offset=4)], Str('TA03', lineno=1224, col_offset=12), lineno=1224, col_offset=4), Assign([Name('want', Store(), lineno=1225, col_offset=4)], Str('bool', lineno=1225, col_offset=11), lineno=1225, col_offset=4)], [], lineno=1222, col_offset=0), ClassDef('_Prop_Resource_File', [Attribute(Name('aetools', Load(), lineno=1226, col_offset=26), 'NProperty', Load(), lineno=1226, col_offset=26)], [Expr(Str('Resource File -  ', lineno=1227, col_offset=4), lineno=1227, col_offset=4), Assign([Name('which', Store(), lineno=1228, col_offset=4)], Str('TA04', lineno=1228, col_offset=12), lineno=1228, col_offset=4), Assign([Name('want', Store(), lineno=1229, col_offset=4)], Str('bool', lineno=1229, col_offset=11), lineno=1229, col_offset=4)], [], lineno=1226, col_offset=0), ClassDef('Global_Source_Trees', [Attribute(Name('aetools', Load(), lineno=1231, col_offset=26), 'ComponentItem', Load(), lineno=1231, col_offset=26)], [Expr(Str('Global Source Trees - Globally-defined source tree roots ', lineno=1232, col_offset=4), lineno=1232, col_offset=4), Assign([Name('want', Store(), lineno=1233, col_offset=4)], Str('GSTs', lineno=1233, col_offset=11), lineno=1233, col_offset=4)], [], lineno=1231, col_offset=0), ClassDef('_Prop_Source_Trees', [Attribute(Name('aetools', Load(), lineno=1234, col_offset=25), 'NProperty', Load(), lineno=1234, col_offset=25)], [Expr(Str('Source Trees - List of source tree roots ', lineno=1235, col_offset=4), lineno=1235, col_offset=4), Assign([Name('which', Store(), lineno=1236, col_offset=4)], Str('ST01', lineno=1236, col_offset=12), lineno=1236, col_offset=4), Assign([Name('want', Store(), lineno=1237, col_offset=4)], Str('SrcT', lineno=1237, col_offset=11), lineno=1237, col_offset=4)], [], lineno=1234, col_offset=0), ClassDef('Extras', [Attribute(Name('aetools', Load(), lineno=1239, col_offset=13), 'ComponentItem', Load(), lineno=1239, col_offset=13)], [Expr(Str('Extras -  ', lineno=1240, col_offset=4), lineno=1240, col_offset=4), Assign([Name('want', Store(), lineno=1241, col_offset=4)], Str('GXTR', lineno=1241, col_offset=11), lineno=1241, col_offset=4)], [], lineno=1239, col_offset=0), ClassDef('_Prop_Automatic_Toolbar_Help', [Attribute(Name('aetools', Load(), lineno=1242, col_offset=35), 'NProperty', Load(), lineno=1242, col_offset=35)], [Expr(Str('Automatic Toolbar Help - Automatically show balloon help in toolbar after delay ', lineno=1243, col_offset=4), lineno=1243, col_offset=4), Assign([Name('which', Store(), lineno=1244, col_offset=4)], Str('EX19', lineno=1244, col_offset=12), lineno=1244, col_offset=4), Assign([Name('want', Store(), lineno=1245, col_offset=4)], Str('bool', lineno=1245, col_offset=11), lineno=1245, col_offset=4)], [], lineno=1242, col_offset=0), ClassDef('_Prop_External_Reference', [Attribute(Name('aetools', Load(), lineno=1246, col_offset=31), 'NProperty', Load(), lineno=1246, col_offset=31)], [Expr(Str('External Reference - Which on-line function reference to use. ', lineno=1247, col_offset=4), lineno=1247, col_offset=4), Assign([Name('which', Store(), lineno=1248, col_offset=4)], Str('EX08', lineno=1248, col_offset=12), lineno=1248, col_offset=4), Assign([Name('want', Store(), lineno=1249, col_offset=4)], Str('RefP', lineno=1249, col_offset=11), lineno=1249, col_offset=4)], [], lineno=1246, col_offset=0), ClassDef('_Prop_Full_Screen_Zoom', [Attribute(Name('aetools', Load(), lineno=1250, col_offset=29), 'NProperty', Load(), lineno=1250, col_offset=29)], [Expr(Str('Full Screen Zoom - Zoom windows to the full screen width. ', lineno=1251, col_offset=4), lineno=1251, col_offset=4), Assign([Name('which', Store(), lineno=1252, col_offset=4)], Str('EX07', lineno=1252, col_offset=12), lineno=1252, col_offset=4), Assign([Name('want', Store(), lineno=1253, col_offset=4)], Str('bool', lineno=1253, col_offset=11), lineno=1253, col_offset=4)], [], lineno=1250, col_offset=0), ClassDef('_Prop_Recent_Editor_Count', [Attribute(Name('aetools', Load(), lineno=1254, col_offset=32), 'NProperty', Load(), lineno=1254, col_offset=32)], [Expr(Str('Recent Editor Count - Maximum number of editor documents to show in the \xd2Open Recent\xd3 menu ', lineno=1255, col_offset=4), lineno=1255, col_offset=4), Assign([Name('which', Store(), lineno=1256, col_offset=4)], Str('EX16', lineno=1256, col_offset=12), lineno=1256, col_offset=4), Assign([Name('want', Store(), lineno=1257, col_offset=4)], Str('shor', lineno=1257, col_offset=11), lineno=1257, col_offset=4)], [], lineno=1254, col_offset=0), ClassDef('_Prop_Recent_Project_Count', [Attribute(Name('aetools', Load(), lineno=1258, col_offset=33), 'NProperty', Load(), lineno=1258, col_offset=33)], [Expr(Str('Recent Project Count - Maximum number of project documents to show in the \xd2Open Recent\xd3 menu ', lineno=1259, col_offset=4), lineno=1259, col_offset=4), Assign([Name('which', Store(), lineno=1260, col_offset=4)], Str('EX17', lineno=1260, col_offset=12), lineno=1260, col_offset=4), Assign([Name('want', Store(), lineno=1261, col_offset=4)], Str('shor', lineno=1261, col_offset=11), lineno=1261, col_offset=4)], [], lineno=1258, col_offset=0), ClassDef('_Prop_Use_Editor_Extensions', [Attribute(Name('aetools', Load(), lineno=1262, col_offset=34), 'NProperty', Load(), lineno=1262, col_offset=34)], [Expr(Str('Use Editor Extensions - Controls the use of the Editor Extensions menu ', lineno=1263, col_offset=4), lineno=1263, col_offset=4), Assign([Name('which', Store(), lineno=1264, col_offset=4)], Str('EX10', lineno=1264, col_offset=12), lineno=1264, col_offset=4), Assign([Name('want', Store(), lineno=1265, col_offset=4)], Str('bool', lineno=1265, col_offset=11), lineno=1265, col_offset=4)], [], lineno=1262, col_offset=0), ClassDef('_Prop_Use_External_Editor', [Attribute(Name('aetools', Load(), lineno=1266, col_offset=32), 'NProperty', Load(), lineno=1266, col_offset=32)], [Expr(Str('Use External Editor - Controls whether CodeWarrior uses its own integrated editor or an external application for editing text files. ', lineno=1267, col_offset=4), lineno=1267, col_offset=4), Assign([Name('which', Store(), lineno=1268, col_offset=4)], Str('EX11', lineno=1268, col_offset=12), lineno=1268, col_offset=4), Assign([Name('want', Store(), lineno=1269, col_offset=4)], Str('bool', lineno=1269, col_offset=11), lineno=1269, col_offset=4)], [], lineno=1266, col_offset=0), ClassDef('_Prop_Use_Script_Menu', [Attribute(Name('aetools', Load(), lineno=1270, col_offset=28), 'NProperty', Load(), lineno=1270, col_offset=28)], [Expr(Str('Use Script Menu - Controls the use of the AppleScript menu ', lineno=1271, col_offset=4), lineno=1271, col_offset=4), Assign([Name('which', Store(), lineno=1272, col_offset=4)], Str('EX12', lineno=1272, col_offset=12), lineno=1272, col_offset=4), Assign([Name('want', Store(), lineno=1273, col_offset=4)], Str('bool', lineno=1273, col_offset=11), lineno=1273, col_offset=4)], [], lineno=1270, col_offset=0), ClassDef('_Prop_Use_ToolServer_Menu', [Attribute(Name('aetools', Load(), lineno=1274, col_offset=32), 'NProperty', Load(), lineno=1274, col_offset=32)], [Expr(Str('Use ToolServer Menu - Controls the use of the ToolServer menu ', lineno=1275, col_offset=4), lineno=1275, col_offset=4), Assign([Name('which', Store(), lineno=1276, col_offset=4)], Str('EX18', lineno=1276, col_offset=12), lineno=1276, col_offset=4), Assign([Name('want', Store(), lineno=1277, col_offset=4)], Str('bool', lineno=1277, col_offset=11), lineno=1277, col_offset=4)], [], lineno=1274, col_offset=0), ClassDef('Build_Extras', [Attribute(Name('aetools', Load(), lineno=1279, col_offset=19), 'ComponentItem', Load(), lineno=1279, col_offset=19)], [Expr(Str('Build Extras -  ', lineno=1280, col_offset=4), lineno=1280, col_offset=4), Assign([Name('want', Store(), lineno=1281, col_offset=4)], Str('LXTR', lineno=1281, col_offset=11), lineno=1281, col_offset=4)], [], lineno=1279, col_offset=0), ClassDef('_Prop_Browser_Active', [Attribute(Name('aetools', Load(), lineno=1282, col_offset=27), 'NProperty', Load(), lineno=1282, col_offset=27)], [Expr(Str('Browser Active - Allow the collection of browser information. ', lineno=1283, col_offset=4), lineno=1283, col_offset=4), Assign([Name('which', Store(), lineno=1284, col_offset=4)], Str('EX09', lineno=1284, col_offset=12), lineno=1284, col_offset=4), Assign([Name('want', Store(), lineno=1285, col_offset=4)], Str('bool', lineno=1285, col_offset=11), lineno=1285, col_offset=4)], [], lineno=1282, col_offset=0), ClassDef('_Prop_Cache_Subproject_Data', [Attribute(Name('aetools', Load(), lineno=1286, col_offset=34), 'NProperty', Load(), lineno=1286, col_offset=34)], [Expr(Str('Cache Subproject Data -  ', lineno=1287, col_offset=4), lineno=1287, col_offset=4), Assign([Name('which', Store(), lineno=1288, col_offset=4)], Str('EX31', lineno=1288, col_offset=12), lineno=1288, col_offset=4), Assign([Name('want', Store(), lineno=1289, col_offset=4)], Str('bool', lineno=1289, col_offset=11), lineno=1289, col_offset=4)], [], lineno=1286, col_offset=0), ClassDef('_Prop_Dump_Browser_Info', [Attribute(Name('aetools', Load(), lineno=1290, col_offset=30), 'NProperty', Load(), lineno=1290, col_offset=30)], [Expr(Str('Dump Browser Info -  ', lineno=1291, col_offset=4), lineno=1291, col_offset=4), Assign([Name('which', Store(), lineno=1292, col_offset=4)], Str('EX30', lineno=1292, col_offset=12), lineno=1292, col_offset=4), Assign([Name('want', Store(), lineno=1293, col_offset=4)], Str('bool', lineno=1293, col_offset=11), lineno=1293, col_offset=4)], [], lineno=1290, col_offset=0), ClassDef('_Prop_Modification_Date_Caching', [Attribute(Name('aetools', Load(), lineno=1294, col_offset=38), 'NProperty', Load(), lineno=1294, col_offset=38)], [Expr(Str('Modification Date Caching -  ', lineno=1295, col_offset=4), lineno=1295, col_offset=4), Assign([Name('which', Store(), lineno=1296, col_offset=4)], Str('EX04', lineno=1296, col_offset=12), lineno=1296, col_offset=4), Assign([Name('want', Store(), lineno=1297, col_offset=4)], Str('bool', lineno=1297, col_offset=11), lineno=1297, col_offset=4)], [], lineno=1294, col_offset=0), ClassDef('member_function', [Attribute(Name('aetools', Load(), lineno=1299, col_offset=22), 'ComponentItem', Load(), lineno=1299, col_offset=22)], [Expr(Str('member function - A class member function or method. ', lineno=1300, col_offset=4), lineno=1300, col_offset=4), Assign([Name('want', Store(), lineno=1301, col_offset=4)], Str('MbFn', lineno=1301, col_offset=11), lineno=1301, col_offset=4)], [], lineno=1299, col_offset=0), ClassDef('_Prop_implementation_end_offset', [Attribute(Name('aetools', Load(), lineno=1302, col_offset=38), 'NProperty', Load(), lineno=1302, col_offset=38)], [Expr(Str('implementation end offset - end of member function definition ', lineno=1303, col_offset=4), lineno=1303, col_offset=4), Assign([Name('which', Store(), lineno=1304, col_offset=4)], Str('DfEn', lineno=1304, col_offset=12), lineno=1304, col_offset=4), Assign([Name('want', Store(), lineno=1305, col_offset=4)], Str('long', lineno=1305, col_offset=11), lineno=1305, col_offset=4)], [], lineno=1302, col_offset=0), ClassDef('_Prop_implementation_file', [Attribute(Name('aetools', Load(), lineno=1306, col_offset=32), 'NProperty', Load(), lineno=1306, col_offset=32)], [Expr(Str('implementation file - Source file containing the member function definition ', lineno=1307, col_offset=4), lineno=1307, col_offset=4), Assign([Name('which', Store(), lineno=1308, col_offset=4)], Str('DfFl', lineno=1308, col_offset=12), lineno=1308, col_offset=4), Assign([Name('want', Store(), lineno=1309, col_offset=4)], Str('fss ', lineno=1309, col_offset=11), lineno=1309, col_offset=4)], [], lineno=1306, col_offset=0), ClassDef('_Prop_implementation_start_offset', [Attribute(Name('aetools', Load(), lineno=1310, col_offset=40), 'NProperty', Load(), lineno=1310, col_offset=40)], [Expr(Str('implementation start offset - start of member function definition source code ', lineno=1311, col_offset=4), lineno=1311, col_offset=4), Assign([Name('which', Store(), lineno=1312, col_offset=4)], Str('DfSt', lineno=1312, col_offset=12), lineno=1312, col_offset=4), Assign([Name('want', Store(), lineno=1313, col_offset=4)], Str('long', lineno=1313, col_offset=11), lineno=1313, col_offset=4)], [], lineno=1310, col_offset=0), Assign([Name('member_functions', Store(), lineno=1315, col_offset=0)], Name('member_function', Load(), lineno=1315, col_offset=19), lineno=1315, col_offset=0), ClassDef('Access_Paths', [Attribute(Name('aetools', Load(), lineno=1317, col_offset=19), 'ComponentItem', Load(), lineno=1317, col_offset=19)], [Expr(Str('Access Paths - Contains the definitions of a project\xd5s access (search) paths. ', lineno=1318, col_offset=4), lineno=1318, col_offset=4), Assign([Name('want', Store(), lineno=1319, col_offset=4)], Str('PATH', lineno=1319, col_offset=11), lineno=1319, col_offset=4)], [], lineno=1317, col_offset=0), ClassDef('_Prop_Always_Full_Search', [Attribute(Name('aetools', Load(), lineno=1320, col_offset=31), 'NProperty', Load(), lineno=1320, col_offset=31)], [Expr(Str('Always Full Search - To force the compiler to search for system includes like it searches for user includes. ', lineno=1321, col_offset=4), lineno=1321, col_offset=4), Assign([Name('which', Store(), lineno=1322, col_offset=4)], Str('PA02', lineno=1322, col_offset=12), lineno=1322, col_offset=4), Assign([Name('want', Store(), lineno=1323, col_offset=4)], Str('bool', lineno=1323, col_offset=11), lineno=1323, col_offset=4)], [], lineno=1320, col_offset=0), ClassDef('_Prop_Convert_Paths', [Attribute(Name('aetools', Load(), lineno=1324, col_offset=26), 'NProperty', Load(), lineno=1324, col_offset=26)], [Expr(Str('Convert Paths - Enables conversion of DOS & Unix-style relative paths when searching for files. ', lineno=1325, col_offset=4), lineno=1325, col_offset=4), Assign([Name('which', Store(), lineno=1326, col_offset=4)], Str('PA04', lineno=1326, col_offset=12), lineno=1326, col_offset=4), Assign([Name('want', Store(), lineno=1327, col_offset=4)], Str('bool', lineno=1327, col_offset=11), lineno=1327, col_offset=4)], [], lineno=1324, col_offset=0), ClassDef('_Prop_Require_Framework_Includes', [Attribute(Name('aetools', Load(), lineno=1328, col_offset=39), 'NProperty', Load(), lineno=1328, col_offset=39)], [Expr(Str('Require Framework Includes - Causes the IDE to only look in the framework access paths if a Mac OS X framework style include (i.e. <Carbon/Carbon.h> ) is used. ', lineno=1329, col_offset=4), lineno=1329, col_offset=4), Assign([Name('which', Store(), lineno=1330, col_offset=4)], Str('PA05', lineno=1330, col_offset=12), lineno=1330, col_offset=4), Assign([Name('want', Store(), lineno=1331, col_offset=4)], Str('bool', lineno=1331, col_offset=11), lineno=1331, col_offset=4)], [], lineno=1328, col_offset=0), ClassDef('_Prop_System_Paths', [Attribute(Name('aetools', Load(), lineno=1332, col_offset=25), 'NProperty', Load(), lineno=1332, col_offset=25)], [Expr(Str('System Paths - To add an access path for the include files. (Not supported in Pascal) ', lineno=1333, col_offset=4), lineno=1333, col_offset=4), Assign([Name('which', Store(), lineno=1334, col_offset=4)], Str('PA03', lineno=1334, col_offset=12), lineno=1334, col_offset=4), Assign([Name('want', Store(), lineno=1335, col_offset=4)], Str('PInf', lineno=1335, col_offset=11), lineno=1335, col_offset=4)], [], lineno=1332, col_offset=0), ClassDef('_Prop_User_Paths', [Attribute(Name('aetools', Load(), lineno=1336, col_offset=23), 'NProperty', Load(), lineno=1336, col_offset=23)], [Expr(Str('User Paths - To add an access path for the source files. ', lineno=1337, col_offset=4), lineno=1337, col_offset=4), Assign([Name('which', Store(), lineno=1338, col_offset=4)], Str('PA01', lineno=1338, col_offset=12), lineno=1338, col_offset=4), Assign([Name('want', Store(), lineno=1339, col_offset=4)], Str('PInf', lineno=1339, col_offset=11), lineno=1339, col_offset=4)], [], lineno=1336, col_offset=0), ClassDef('Path_Information', [Attribute(Name('aetools', Load(), lineno=1341, col_offset=23), 'ComponentItem', Load(), lineno=1341, col_offset=23)], [Expr(Str('Path Information - Contains all of the parameters that describe an access path. ', lineno=1342, col_offset=4), lineno=1342, col_offset=4), Assign([Name('want', Store(), lineno=1343, col_offset=4)], Str('PInf', lineno=1343, col_offset=11), lineno=1343, col_offset=4)], [], lineno=1341, col_offset=0), ClassDef('_Prop_format', [Attribute(Name('aetools', Load(), lineno=1344, col_offset=19), 'NProperty', Load(), lineno=1344, col_offset=19)], [Expr(Str('format - Format of the a ', lineno=1345, col_offset=4), lineno=1345, col_offset=4), Assign([Name('which', Store(), lineno=1346, col_offset=4)], Str('Frmt', lineno=1346, col_offset=12), lineno=1346, col_offset=4), Assign([Name('want', Store(), lineno=1347, col_offset=4)], Str('PthF', lineno=1347, col_offset=11), lineno=1347, col_offset=4)], [], lineno=1344, col_offset=0), ClassDef('_Prop_framework', [Attribute(Name('aetools', Load(), lineno=1348, col_offset=22), 'NProperty', Load(), lineno=1348, col_offset=22)], [Expr(Str('framework - Is the path a Mac OS X framework style path?  (This flag is readable but not writeable from AppleScript.) ', lineno=1349, col_offset=4), lineno=1349, col_offset=4), Assign([Name('which', Store(), lineno=1350, col_offset=4)], Str('Frmw', lineno=1350, col_offset=12), lineno=1350, col_offset=4), Assign([Name('want', Store(), lineno=1351, col_offset=4)], Str('bool', lineno=1351, col_offset=11), lineno=1351, col_offset=4)], [], lineno=1348, col_offset=0), ClassDef('_Prop_host_flags', [Attribute(Name('aetools', Load(), lineno=1352, col_offset=23), 'NProperty', Load(), lineno=1352, col_offset=23)], [Expr(Str('host flags - Bit fields enabling the access path for each host OS (1 = Mac OS, 2 = Windows) ', lineno=1353, col_offset=4), lineno=1353, col_offset=4), Assign([Name('which', Store(), lineno=1354, col_offset=4)], Str('HstF', lineno=1354, col_offset=12), lineno=1354, col_offset=4), Assign([Name('want', Store(), lineno=1355, col_offset=4)], Str('long', lineno=1355, col_offset=11), lineno=1355, col_offset=4)], [], lineno=1352, col_offset=0), ClassDef('_Prop_origin', [Attribute(Name('aetools', Load(), lineno=1356, col_offset=19), 'NProperty', Load(), lineno=1356, col_offset=19)], [Expr(Str('origin -  ', lineno=1357, col_offset=4), lineno=1357, col_offset=4), Assign([Name('which', Store(), lineno=1358, col_offset=4)], Str('Orig', lineno=1358, col_offset=12), lineno=1358, col_offset=4), Assign([Name('want', Store(), lineno=1359, col_offset=4)], Str('PPrm', lineno=1359, col_offset=11), lineno=1359, col_offset=4)], [], lineno=1356, col_offset=0), ClassDef('_Prop_recursive', [Attribute(Name('aetools', Load(), lineno=1360, col_offset=22), 'NProperty', Load(), lineno=1360, col_offset=22)], [Expr(Str('recursive - Will the path be searched recursively?  (Default is true) ', lineno=1361, col_offset=4), lineno=1361, col_offset=4), Assign([Name('which', Store(), lineno=1362, col_offset=4)], Str('Recu', lineno=1362, col_offset=12), lineno=1362, col_offset=4), Assign([Name('want', Store(), lineno=1363, col_offset=4)], Str('bool', lineno=1363, col_offset=11), lineno=1363, col_offset=4)], [], lineno=1360, col_offset=0), ClassDef('_Prop_root', [Attribute(Name('aetools', Load(), lineno=1364, col_offset=17), 'NProperty', Load(), lineno=1364, col_offset=17)], [Expr(Str('root - Name of the root of the relative path. Pre-defined values are \xd2Absolute\xd3, \xd2Project\xd3, \xd2CodeWarrior\xd3, and  \xd2System\xd3. Anything else is a user-defined root. ', lineno=1365, col_offset=4), lineno=1365, col_offset=4), Assign([Name('which', Store(), lineno=1366, col_offset=4)], Str('Root', lineno=1366, col_offset=12), lineno=1366, col_offset=4), Assign([Name('want', Store(), lineno=1367, col_offset=4)], Str('TEXT', lineno=1367, col_offset=11), lineno=1367, col_offset=4)], [], lineno=1364, col_offset=0), ClassDef('Plugin_Settings', [Attribute(Name('aetools', Load(), lineno=1369, col_offset=22), 'ComponentItem', Load(), lineno=1369, col_offset=22)], [Expr(Str('Plugin Settings - Settings for plugin tools ', lineno=1370, col_offset=4), lineno=1370, col_offset=4), Assign([Name('want', Store(), lineno=1371, col_offset=4)], Str('PSTG', lineno=1371, col_offset=11), lineno=1371, col_offset=4)], [], lineno=1369, col_offset=0), ClassDef('_Prop_Disable_Third_Party_COM_Plugins', [Attribute(Name('aetools', Load(), lineno=1372, col_offset=44), 'NProperty', Load(), lineno=1372, col_offset=44)], [Expr(Str('Disable Third Party COM Plugins - Disable COM plugins from third parties ', lineno=1373, col_offset=4), lineno=1373, col_offset=4), Assign([Name('which', Store(), lineno=1374, col_offset=4)], Str('PX02', lineno=1374, col_offset=12), lineno=1374, col_offset=4), Assign([Name('want', Store(), lineno=1375, col_offset=4)], Str('bool', lineno=1375, col_offset=11), lineno=1375, col_offset=4)], [], lineno=1372, col_offset=0), ClassDef('_Prop_Plugin_Diagnostics_Level', [Attribute(Name('aetools', Load(), lineno=1376, col_offset=37), 'NProperty', Load(), lineno=1376, col_offset=37)], [Expr(Str('Plugin Diagnostics Level - Plugin Diagnostics Level is for those who are developing plugins for the IDE and need to debug them. ', lineno=1377, col_offset=4), lineno=1377, col_offset=4), Assign([Name('which', Store(), lineno=1378, col_offset=4)], Str('PX01', lineno=1378, col_offset=12), lineno=1378, col_offset=4), Assign([Name('want', Store(), lineno=1379, col_offset=4)], Str('PXdg', lineno=1379, col_offset=11), lineno=1379, col_offset=4)], [], lineno=1376, col_offset=0), ClassDef('Runtime_Settings', [Attribute(Name('aetools', Load(), lineno=1381, col_offset=23), 'ComponentItem', Load(), lineno=1381, col_offset=23)], [Expr(Str('Runtime Settings - Runtime settings ', lineno=1382, col_offset=4), lineno=1382, col_offset=4), Assign([Name('want', Store(), lineno=1383, col_offset=4)], Str('RSTG', lineno=1383, col_offset=11), lineno=1383, col_offset=4)], [], lineno=1381, col_offset=0), ClassDef('_Prop_Command_Line_Arguments', [Attribute(Name('aetools', Load(), lineno=1384, col_offset=35), 'NProperty', Load(), lineno=1384, col_offset=35)], [Expr(Str('Command Line Arguments - Extra command line args to pass to executable ', lineno=1385, col_offset=4), lineno=1385, col_offset=4), Assign([Name('which', Store(), lineno=1386, col_offset=4)], Str('RS02', lineno=1386, col_offset=12), lineno=1386, col_offset=4), Assign([Name('want', Store(), lineno=1387, col_offset=4)], Str('TEXT', lineno=1387, col_offset=11), lineno=1387, col_offset=4)], [], lineno=1384, col_offset=0), ClassDef('_Prop_Environment_Variables', [Attribute(Name('aetools', Load(), lineno=1388, col_offset=34), 'NProperty', Load(), lineno=1388, col_offset=34)], [Expr(Str('Environment Variables - Environment variables to use when running the executable ', lineno=1389, col_offset=4), lineno=1389, col_offset=4), Assign([Name('which', Store(), lineno=1390, col_offset=4)], Str('RS04', lineno=1390, col_offset=12), lineno=1390, col_offset=4), Assign([Name('want', Store(), lineno=1391, col_offset=4)], Str('EnvV', lineno=1391, col_offset=11), lineno=1391, col_offset=4)], [], lineno=1388, col_offset=0), ClassDef('_Prop_Host_Application', [Attribute(Name('aetools', Load(), lineno=1392, col_offset=29), 'NProperty', Load(), lineno=1392, col_offset=29)], [Expr(Str('Host Application - Host application for running/debugging libraries and code resources ', lineno=1393, col_offset=4), lineno=1393, col_offset=4), Assign([Name('which', Store(), lineno=1394, col_offset=4)], Str('RS01', lineno=1394, col_offset=12), lineno=1394, col_offset=4), Assign([Name('want', Store(), lineno=1395, col_offset=4)], Str('RlPt', lineno=1395, col_offset=11), lineno=1395, col_offset=4)], [], lineno=1392, col_offset=0), ClassDef('_Prop_Working_Directory', [Attribute(Name('aetools', Load(), lineno=1396, col_offset=30), 'NProperty', Load(), lineno=1396, col_offset=30)], [Expr(Str('Working Directory - Working directory to use when running the executable ', lineno=1397, col_offset=4), lineno=1397, col_offset=4), Assign([Name('which', Store(), lineno=1398, col_offset=4)], Str('RS03', lineno=1398, col_offset=12), lineno=1398, col_offset=4), Assign([Name('want', Store(), lineno=1399, col_offset=4)], Str('TEXT', lineno=1399, col_offset=11), lineno=1399, col_offset=4)], [], lineno=1396, col_offset=0), ClassDef('Relative_Path', [Attribute(Name('aetools', Load(), lineno=1401, col_offset=20), 'ComponentItem', Load(), lineno=1401, col_offset=20)], [Expr(Str('Relative Path - Relative path from some root ', lineno=1402, col_offset=4), lineno=1402, col_offset=4), Assign([Name('want', Store(), lineno=1403, col_offset=4)], Str('RlPt', lineno=1403, col_offset=11), lineno=1403, col_offset=4)], [], lineno=1401, col_offset=0), ClassDef('Shielded_Folder', [Attribute(Name('aetools', Load(), lineno=1405, col_offset=22), 'ComponentItem', Load(), lineno=1405, col_offset=22)], [Expr(Str('Shielded Folder -  ', lineno=1406, col_offset=4), lineno=1406, col_offset=4), Assign([Name('want', Store(), lineno=1407, col_offset=4)], Str('SFit', lineno=1407, col_offset=11), lineno=1407, col_offset=4)], [], lineno=1405, col_offset=0), ClassDef('_Prop_Expression_To_Match', [Attribute(Name('aetools', Load(), lineno=1408, col_offset=32), 'NProperty', Load(), lineno=1408, col_offset=32)], [Expr(Str('Expression To Match - Regular expression which describes folders to skip ', lineno=1409, col_offset=4), lineno=1409, col_offset=4), Assign([Name('which', Store(), lineno=1410, col_offset=4)], Str('SF01', lineno=1410, col_offset=12), lineno=1410, col_offset=4), Assign([Name('want', Store(), lineno=1411, col_offset=4)], Str('TEXT', lineno=1411, col_offset=11), lineno=1411, col_offset=4)], [], lineno=1408, col_offset=0), ClassDef('_Prop_Skip_Find_And_Compare_Operations', [Attribute(Name('aetools', Load(), lineno=1412, col_offset=45), 'NProperty', Load(), lineno=1412, col_offset=45)], [Expr(Str('Skip Find And Compare Operations - Matching folders will be skipped during find and compare operations ', lineno=1413, col_offset=4), lineno=1413, col_offset=4), Assign([Name('which', Store(), lineno=1414, col_offset=4)], Str('SF03', lineno=1414, col_offset=12), lineno=1414, col_offset=4), Assign([Name('want', Store(), lineno=1415, col_offset=4)], Str('bool', lineno=1415, col_offset=11), lineno=1415, col_offset=4)], [], lineno=1412, col_offset=0), ClassDef('_Prop_Skip_Project_Operations', [Attribute(Name('aetools', Load(), lineno=1416, col_offset=36), 'NProperty', Load(), lineno=1416, col_offset=36)], [Expr(Str('Skip Project Operations - Matching folders will be skipped during project operations ', lineno=1417, col_offset=4), lineno=1417, col_offset=4), Assign([Name('which', Store(), lineno=1418, col_offset=4)], Str('SF02', lineno=1418, col_offset=12), lineno=1418, col_offset=4), Assign([Name('want', Store(), lineno=1419, col_offset=4)], Str('bool', lineno=1419, col_offset=11), lineno=1419, col_offset=4)], [], lineno=1416, col_offset=0), ClassDef('Shielded_Folders', [Attribute(Name('aetools', Load(), lineno=1421, col_offset=23), 'ComponentItem', Load(), lineno=1421, col_offset=23)], [Expr(Str('Shielded Folders - Folders skipped when performing project and find-and-compare operations ', lineno=1422, col_offset=4), lineno=1422, col_offset=4), Assign([Name('want', Store(), lineno=1423, col_offset=4)], Str('SHFL', lineno=1423, col_offset=11), lineno=1423, col_offset=4)], [], lineno=1421, col_offset=0), ClassDef('_Prop_Shielded_Items', [Attribute(Name('aetools', Load(), lineno=1424, col_offset=27), 'NProperty', Load(), lineno=1424, col_offset=27)], [Expr(Str('Shielded Items -  ', lineno=1425, col_offset=4), lineno=1425, col_offset=4), Assign([Name('which', Store(), lineno=1426, col_offset=4)], Str('SFis', lineno=1426, col_offset=12), lineno=1426, col_offset=4), Assign([Name('want', Store(), lineno=1427, col_offset=4)], Str('SFit', lineno=1427, col_offset=11), lineno=1427, col_offset=4)], [], lineno=1424, col_offset=0), ClassDef('Syntax_Coloring', [Attribute(Name('aetools', Load(), lineno=1429, col_offset=22), 'ComponentItem', Load(), lineno=1429, col_offset=22)], [Expr(Str('Syntax Coloring -  ', lineno=1430, col_offset=4), lineno=1430, col_offset=4), Assign([Name('want', Store(), lineno=1431, col_offset=4)], Str('SNTX', lineno=1431, col_offset=11), lineno=1431, col_offset=4)], [], lineno=1429, col_offset=0), ClassDef('_Prop_Comment_Color', [Attribute(Name('aetools', Load(), lineno=1432, col_offset=26), 'NProperty', Load(), lineno=1432, col_offset=26)], [Expr(Str('Comment Color - The color for comments. ', lineno=1433, col_offset=4), lineno=1433, col_offset=4), Assign([Name('which', Store(), lineno=1434, col_offset=4)], Str('GH02', lineno=1434, col_offset=12), lineno=1434, col_offset=4), Assign([Name('want', Store(), lineno=1435, col_offset=4)], Str('cRGB', lineno=1435, col_offset=11), lineno=1435, col_offset=4)], [], lineno=1432, col_offset=0), ClassDef('_Prop_Keyword_Color', [Attribute(Name('aetools', Load(), lineno=1436, col_offset=26), 'NProperty', Load(), lineno=1436, col_offset=26)], [Expr(Str('Keyword Color - The color for language keywords. ', lineno=1437, col_offset=4), lineno=1437, col_offset=4), Assign([Name('which', Store(), lineno=1438, col_offset=4)], Str('GH03', lineno=1438, col_offset=12), lineno=1438, col_offset=4), Assign([Name('want', Store(), lineno=1439, col_offset=4)], Str('cRGB', lineno=1439, col_offset=11), lineno=1439, col_offset=4)], [], lineno=1436, col_offset=0), ClassDef('_Prop_String_Color', [Attribute(Name('aetools', Load(), lineno=1440, col_offset=25), 'NProperty', Load(), lineno=1440, col_offset=25)], [Expr(Str('String Color - The color for strings. ', lineno=1441, col_offset=4), lineno=1441, col_offset=4), Assign([Name('which', Store(), lineno=1442, col_offset=4)], Str('GH04', lineno=1442, col_offset=12), lineno=1442, col_offset=4), Assign([Name('want', Store(), lineno=1443, col_offset=4)], Str('cRGB', lineno=1443, col_offset=11), lineno=1443, col_offset=4)], [], lineno=1440, col_offset=0), ClassDef('_Prop_Syntax_Coloring', [Attribute(Name('aetools', Load(), lineno=1444, col_offset=28), 'NProperty', Load(), lineno=1444, col_offset=28)], [Expr(Str('Syntax Coloring - Mark keywords and comments with color. ', lineno=1445, col_offset=4), lineno=1445, col_offset=4), Assign([Name('which', Store(), lineno=1446, col_offset=4)], Str('GH01', lineno=1446, col_offset=12), lineno=1446, col_offset=4), Assign([Name('want', Store(), lineno=1447, col_offset=4)], Str('bool', lineno=1447, col_offset=11), lineno=1447, col_offset=4)], [], lineno=1444, col_offset=0), ClassDef('Segment', [Attribute(Name('aetools', Load(), lineno=1449, col_offset=14), 'ComponentItem', Load(), lineno=1449, col_offset=14)], [Expr(Str('Segment - A segment or group in the project ', lineno=1450, col_offset=4), lineno=1450, col_offset=4), Assign([Name('want', Store(), lineno=1451, col_offset=4)], Str('Seg ', lineno=1451, col_offset=11), lineno=1451, col_offset=4)], [], lineno=1449, col_offset=0), ClassDef('_Prop_filecount', [Attribute(Name('aetools', Load(), lineno=1452, col_offset=22), 'NProperty', Load(), lineno=1452, col_offset=22)], [Expr(Str('filecount -  ', lineno=1453, col_offset=4), lineno=1453, col_offset=4), Assign([Name('which', Store(), lineno=1454, col_offset=4)], Str('NumF', lineno=1454, col_offset=12), lineno=1454, col_offset=4), Assign([Name('want', Store(), lineno=1455, col_offset=4)], Str('shor', lineno=1455, col_offset=11), lineno=1455, col_offset=4)], [], lineno=1452, col_offset=0), ClassDef('_Prop_seg_2d_locked', [Attribute(Name('aetools', Load(), lineno=1456, col_offset=26), 'NProperty', Load(), lineno=1456, col_offset=26)], [Expr(Str('seg-locked - Is the segment locked ? [68K only] ', lineno=1457, col_offset=4), lineno=1457, col_offset=4), Assign([Name('which', Store(), lineno=1458, col_offset=4)], Str('PLck', lineno=1458, col_offset=12), lineno=1458, col_offset=4), Assign([Name('want', Store(), lineno=1459, col_offset=4)], Str('bool', lineno=1459, col_offset=11), lineno=1459, col_offset=4)], [], lineno=1456, col_offset=0), ClassDef('_Prop_seg_2d_preloaded', [Attribute(Name('aetools', Load(), lineno=1460, col_offset=29), 'NProperty', Load(), lineno=1460, col_offset=29)], [Expr(Str('seg-preloaded - Is the segment preloaded ? [68K only] ', lineno=1461, col_offset=4), lineno=1461, col_offset=4), Assign([Name('which', Store(), lineno=1462, col_offset=4)], Str('Prel', lineno=1462, col_offset=12), lineno=1462, col_offset=4), Assign([Name('want', Store(), lineno=1463, col_offset=4)], Str('bool', lineno=1463, col_offset=11), lineno=1463, col_offset=4)], [], lineno=1460, col_offset=0), ClassDef('_Prop_seg_2d_protected', [Attribute(Name('aetools', Load(), lineno=1464, col_offset=29), 'NProperty', Load(), lineno=1464, col_offset=29)], [Expr(Str('seg-protected - Is the segment protected ? [68K only] ', lineno=1465, col_offset=4), lineno=1465, col_offset=4), Assign([Name('which', Store(), lineno=1466, col_offset=4)], Str('Prot', lineno=1466, col_offset=12), lineno=1466, col_offset=4), Assign([Name('want', Store(), lineno=1467, col_offset=4)], Str('bool', lineno=1467, col_offset=11), lineno=1467, col_offset=4)], [], lineno=1464, col_offset=0), ClassDef('_Prop_seg_2d_purgeable', [Attribute(Name('aetools', Load(), lineno=1468, col_offset=29), 'NProperty', Load(), lineno=1468, col_offset=29)], [Expr(Str('seg-purgeable - Is the segment purgeable ? [68K only] ', lineno=1469, col_offset=4), lineno=1469, col_offset=4), Assign([Name('which', Store(), lineno=1470, col_offset=4)], Str('Purg', lineno=1470, col_offset=12), lineno=1470, col_offset=4), Assign([Name('want', Store(), lineno=1471, col_offset=4)], Str('bool', lineno=1471, col_offset=11), lineno=1471, col_offset=4)], [], lineno=1468, col_offset=0), ClassDef('_Prop_seg_2d_system_heap', [Attribute(Name('aetools', Load(), lineno=1472, col_offset=31), 'NProperty', Load(), lineno=1472, col_offset=31)], [Expr(Str('seg-system heap - Is the segment loaded into the system heap ? [68K only] ', lineno=1473, col_offset=4), lineno=1473, col_offset=4), Assign([Name('which', Store(), lineno=1474, col_offset=4)], Str('SysH', lineno=1474, col_offset=12), lineno=1474, col_offset=4), Assign([Name('want', Store(), lineno=1475, col_offset=4)], Str('bool', lineno=1475, col_offset=11), lineno=1475, col_offset=4)], [], lineno=1472, col_offset=0), ClassDef('ProjectFile', [Attribute(Name('aetools', Load(), lineno=1477, col_offset=18), 'ComponentItem', Load(), lineno=1477, col_offset=18)], [Expr(Str('ProjectFile - A file contained in a project ', lineno=1478, col_offset=4), lineno=1478, col_offset=4), Assign([Name('want', Store(), lineno=1479, col_offset=4)], Str('SrcF', lineno=1479, col_offset=11), lineno=1479, col_offset=4)], [], lineno=1477, col_offset=0), ClassDef('_Prop_codesize', [Attribute(Name('aetools', Load(), lineno=1480, col_offset=21), 'NProperty', Load(), lineno=1480, col_offset=21)], [Expr(Str('codesize - The size of this file\xd5s code. ', lineno=1481, col_offset=4), lineno=1481, col_offset=4), Assign([Name('which', Store(), lineno=1482, col_offset=4)], Str('CSiz', lineno=1482, col_offset=12), lineno=1482, col_offset=4), Assign([Name('want', Store(), lineno=1483, col_offset=4)], Str('long', lineno=1483, col_offset=11), lineno=1483, col_offset=4)], [], lineno=1480, col_offset=0), ClassDef('_Prop_datasize', [Attribute(Name('aetools', Load(), lineno=1484, col_offset=21), 'NProperty', Load(), lineno=1484, col_offset=21)], [Expr(Str('datasize - The size of this file\xd5s data. ', lineno=1485, col_offset=4), lineno=1485, col_offset=4), Assign([Name('which', Store(), lineno=1486, col_offset=4)], Str('DSiz', lineno=1486, col_offset=12), lineno=1486, col_offset=4), Assign([Name('want', Store(), lineno=1487, col_offset=4)], Str('long', lineno=1487, col_offset=11), lineno=1487, col_offset=4)], [], lineno=1484, col_offset=0), ClassDef('_Prop_filetype', [Attribute(Name('aetools', Load(), lineno=1488, col_offset=21), 'NProperty', Load(), lineno=1488, col_offset=21)], [Expr(Str('filetype - What kind of file is this ? ', lineno=1489, col_offset=4), lineno=1489, col_offset=4), Assign([Name('which', Store(), lineno=1490, col_offset=4)], Str('SrcT', lineno=1490, col_offset=12), lineno=1490, col_offset=4), Assign([Name('want', Store(), lineno=1491, col_offset=4)], Str('SrcT', lineno=1491, col_offset=11), lineno=1491, col_offset=4)], [], lineno=1488, col_offset=0), ClassDef('_Prop_includes', [Attribute(Name('aetools', Load(), lineno=1492, col_offset=21), 'NProperty', Load(), lineno=1492, col_offset=21)], [Expr(Str('includes -  ', lineno=1493, col_offset=4), lineno=1493, col_offset=4), Assign([Name('which', Store(), lineno=1494, col_offset=4)], Str('IncF', lineno=1494, col_offset=12), lineno=1494, col_offset=4), Assign([Name('want', Store(), lineno=1495, col_offset=4)], Str('fss ', lineno=1495, col_offset=11), lineno=1495, col_offset=4)], [], lineno=1492, col_offset=0), ClassDef('_Prop_initialize_before', [Attribute(Name('aetools', Load(), lineno=1496, col_offset=30), 'NProperty', Load(), lineno=1496, col_offset=30)], [Expr(Str('initialize before - Initialize the shared library before the main application. ', lineno=1497, col_offset=4), lineno=1497, col_offset=4), Assign([Name('which', Store(), lineno=1498, col_offset=4)], Str('Bfor', lineno=1498, col_offset=12), lineno=1498, col_offset=4), Assign([Name('want', Store(), lineno=1499, col_offset=4)], Str('bool', lineno=1499, col_offset=11), lineno=1499, col_offset=4)], [], lineno=1496, col_offset=0), ClassDef('_Prop_symbols', [Attribute(Name('aetools', Load(), lineno=1500, col_offset=20), 'NProperty', Load(), lineno=1500, col_offset=20)], [Expr(Str('symbols - Are debugging symbols generated for this file ? ', lineno=1501, col_offset=4), lineno=1501, col_offset=4), Assign([Name('which', Store(), lineno=1502, col_offset=4)], Str('SymG', lineno=1502, col_offset=12), lineno=1502, col_offset=4), Assign([Name('want', Store(), lineno=1503, col_offset=4)], Str('bool', lineno=1503, col_offset=11), lineno=1503, col_offset=4)], [], lineno=1500, col_offset=0), ClassDef('_Prop_up_to_date', [Attribute(Name('aetools', Load(), lineno=1504, col_offset=23), 'NProperty', Load(), lineno=1504, col_offset=23)], [Expr(Str('up to date - Has the file been compiled since its last modification ? ', lineno=1505, col_offset=4), lineno=1505, col_offset=4), Assign([Name('which', Store(), lineno=1506, col_offset=4)], Str('UpTD', lineno=1506, col_offset=12), lineno=1506, col_offset=4), Assign([Name('want', Store(), lineno=1507, col_offset=4)], Str('bool', lineno=1507, col_offset=11), lineno=1507, col_offset=4)], [], lineno=1504, col_offset=0), ClassDef('_Prop_weak_link', [Attribute(Name('aetools', Load(), lineno=1508, col_offset=22), 'NProperty', Load(), lineno=1508, col_offset=22)], [Expr(Str('weak link - Is this file imported weakly into the project ? [PowerPC only] ', lineno=1509, col_offset=4), lineno=1509, col_offset=4), Assign([Name('which', Store(), lineno=1510, col_offset=4)], Str('Weak', lineno=1510, col_offset=12), lineno=1510, col_offset=4), Assign([Name('want', Store(), lineno=1511, col_offset=4)], Str('bool', lineno=1511, col_offset=11), lineno=1511, col_offset=4)], [], lineno=1508, col_offset=0), ClassDef('Source_Tree', [Attribute(Name('aetools', Load(), lineno=1513, col_offset=18), 'ComponentItem', Load(), lineno=1513, col_offset=18)], [Expr(Str('Source Tree - User-defined source tree root ', lineno=1514, col_offset=4), lineno=1514, col_offset=4), Assign([Name('want', Store(), lineno=1515, col_offset=4)], Str('SrcT', lineno=1515, col_offset=11), lineno=1515, col_offset=4)], [], lineno=1513, col_offset=0), ClassDef('_Prop_path', [Attribute(Name('aetools', Load(), lineno=1516, col_offset=17), 'NProperty', Load(), lineno=1516, col_offset=17)], [Expr(Str('path - path for the user-defined source tree root ', lineno=1517, col_offset=4), lineno=1517, col_offset=4), Assign([Name('which', Store(), lineno=1518, col_offset=4)], Str('Path', lineno=1518, col_offset=12), lineno=1518, col_offset=4), Assign([Name('want', Store(), lineno=1519, col_offset=4)], Str('TEXT', lineno=1519, col_offset=11), lineno=1519, col_offset=4)], [], lineno=1516, col_offset=0), ClassDef('_Prop_path_kind', [Attribute(Name('aetools', Load(), lineno=1520, col_offset=22), 'NProperty', Load(), lineno=1520, col_offset=22)], [Expr(Str('path kind - kind of path ', lineno=1521, col_offset=4), lineno=1521, col_offset=4), Assign([Name('which', Store(), lineno=1522, col_offset=4)], Str('Kind', lineno=1522, col_offset=12), lineno=1522, col_offset=4), Assign([Name('want', Store(), lineno=1523, col_offset=4)], Str('STKd', lineno=1523, col_offset=11), lineno=1523, col_offset=4)], [], lineno=1520, col_offset=0), ClassDef('Target_Settings', [Attribute(Name('aetools', Load(), lineno=1525, col_offset=22), 'ComponentItem', Load(), lineno=1525, col_offset=22)], [Expr(Str('Target Settings - Contains the definitions of a project\xd5s target. ', lineno=1526, col_offset=4), lineno=1526, col_offset=4), Assign([Name('want', Store(), lineno=1527, col_offset=4)], Str('TARG', lineno=1527, col_offset=11), lineno=1527, col_offset=4)], [], lineno=1525, col_offset=0), ClassDef('_Prop_Linker', [Attribute(Name('aetools', Load(), lineno=1528, col_offset=19), 'NProperty', Load(), lineno=1528, col_offset=19)], [Expr(Str('Linker - The name of the current linker. ', lineno=1529, col_offset=4), lineno=1529, col_offset=4), Assign([Name('which', Store(), lineno=1530, col_offset=4)], Str('TA01', lineno=1530, col_offset=12), lineno=1530, col_offset=4), Assign([Name('want', Store(), lineno=1531, col_offset=4)], Str('TEXT', lineno=1531, col_offset=11), lineno=1531, col_offset=4)], [], lineno=1528, col_offset=0), ClassDef('_Prop_Output_Directory_Location', [Attribute(Name('aetools', Load(), lineno=1532, col_offset=38), 'NProperty', Load(), lineno=1532, col_offset=38)], [Expr(Str('Output Directory Location - Location of output directory ', lineno=1533, col_offset=4), lineno=1533, col_offset=4), Assign([Name('which', Store(), lineno=1534, col_offset=4)], Str('TA16', lineno=1534, col_offset=12), lineno=1534, col_offset=4), Assign([Name('want', Store(), lineno=1535, col_offset=4)], Str('RlPt', lineno=1535, col_offset=11), lineno=1535, col_offset=4)], [], lineno=1532, col_offset=0), ClassDef('_Prop_Output_Directory_Origin', [Attribute(Name('aetools', Load(), lineno=1536, col_offset=36), 'NProperty', Load(), lineno=1536, col_offset=36)], [Expr(Str('Output Directory Origin - Origin of path to output directory. Usage of this property is deprecated. Use the \xd2Output Directory Location\xd3 property instead. ', lineno=1537, col_offset=4), lineno=1537, col_offset=4), Assign([Name('which', Store(), lineno=1538, col_offset=4)], Str('TA12', lineno=1538, col_offset=12), lineno=1538, col_offset=4), Assign([Name('want', Store(), lineno=1539, col_offset=4)], Str('PPrm', lineno=1539, col_offset=11), lineno=1539, col_offset=4)], [], lineno=1536, col_offset=0), ClassDef('_Prop_Output_Directory_Path', [Attribute(Name('aetools', Load(), lineno=1540, col_offset=34), 'NProperty', Load(), lineno=1540, col_offset=34)], [Expr(Str('Output Directory Path - Path to output directory. Usage of this property is deprecated. Use the \xd2Output Directory Location\xd3 property instead. ', lineno=1541, col_offset=4), lineno=1541, col_offset=4), Assign([Name('which', Store(), lineno=1542, col_offset=4)], Str('TA11', lineno=1542, col_offset=12), lineno=1542, col_offset=4), Assign([Name('want', Store(), lineno=1543, col_offset=4)], Str('TEXT', lineno=1543, col_offset=11), lineno=1543, col_offset=4)], [], lineno=1540, col_offset=0), ClassDef('_Prop_Post_Linker', [Attribute(Name('aetools', Load(), lineno=1544, col_offset=24), 'NProperty', Load(), lineno=1544, col_offset=24)], [Expr(Str('Post Linker -  ', lineno=1545, col_offset=4), lineno=1545, col_offset=4), Assign([Name('which', Store(), lineno=1546, col_offset=4)], Str('TA09', lineno=1546, col_offset=12), lineno=1546, col_offset=4), Assign([Name('want', Store(), lineno=1547, col_offset=4)], Str('TEXT', lineno=1547, col_offset=11), lineno=1547, col_offset=4)], [], lineno=1544, col_offset=0), ClassDef('_Prop_Pre_Linker', [Attribute(Name('aetools', Load(), lineno=1548, col_offset=23), 'NProperty', Load(), lineno=1548, col_offset=23)], [Expr(Str('Pre Linker -  ', lineno=1549, col_offset=4), lineno=1549, col_offset=4), Assign([Name('which', Store(), lineno=1550, col_offset=4)], Str('TA13', lineno=1550, col_offset=12), lineno=1550, col_offset=4), Assign([Name('want', Store(), lineno=1551, col_offset=4)], Str('TEXT', lineno=1551, col_offset=11), lineno=1551, col_offset=4)], [], lineno=1548, col_offset=0), ClassDef('_Prop_Target_Name', [Attribute(Name('aetools', Load(), lineno=1552, col_offset=24), 'NProperty', Load(), lineno=1552, col_offset=24)], [Expr(Str('Target Name -  ', lineno=1553, col_offset=4), lineno=1553, col_offset=4), Assign([Name('which', Store(), lineno=1554, col_offset=4)], Str('TA10', lineno=1554, col_offset=12), lineno=1554, col_offset=4), Assign([Name('want', Store(), lineno=1555, col_offset=4)], Str('TEXT', lineno=1555, col_offset=11), lineno=1555, col_offset=4)], [], lineno=1552, col_offset=0), ClassDef('_Prop_Use_Relative_Paths', [Attribute(Name('aetools', Load(), lineno=1556, col_offset=31), 'NProperty', Load(), lineno=1556, col_offset=31)], [Expr(Str('Use Relative Paths - Save project entries using relative paths ', lineno=1557, col_offset=4), lineno=1557, col_offset=4), Assign([Name('which', Store(), lineno=1558, col_offset=4)], Str('TA15', lineno=1558, col_offset=12), lineno=1558, col_offset=4), Assign([Name('want', Store(), lineno=1559, col_offset=4)], Str('bool', lineno=1559, col_offset=11), lineno=1559, col_offset=4)], [], lineno=1556, col_offset=0), ClassDef('Target_Source_Trees', [Attribute(Name('aetools', Load(), lineno=1561, col_offset=26), 'ComponentItem', Load(), lineno=1561, col_offset=26)], [Expr(Str('Target Source Trees - Target-specific user-defined source tree roots ', lineno=1562, col_offset=4), lineno=1562, col_offset=4), Assign([Name('want', Store(), lineno=1563, col_offset=4)], Str('TSTs', lineno=1563, col_offset=11), lineno=1563, col_offset=4)], [], lineno=1561, col_offset=0), ClassDef('VCS_Setup', [Attribute(Name('aetools', Load(), lineno=1565, col_offset=16), 'ComponentItem', Load(), lineno=1565, col_offset=16)], [Expr(Str('VCS Setup - The version control system preferences. ', lineno=1566, col_offset=4), lineno=1566, col_offset=4), Assign([Name('want', Store(), lineno=1567, col_offset=4)], Str('VCSs', lineno=1567, col_offset=11), lineno=1567, col_offset=4)], [], lineno=1565, col_offset=0), ClassDef('_Prop_Always_Prompt', [Attribute(Name('aetools', Load(), lineno=1568, col_offset=26), 'NProperty', Load(), lineno=1568, col_offset=26)], [Expr(Str('Always Prompt - Always show login dialog ', lineno=1569, col_offset=4), lineno=1569, col_offset=4), Assign([Name('which', Store(), lineno=1570, col_offset=4)], Str('VC07', lineno=1570, col_offset=12), lineno=1570, col_offset=4), Assign([Name('want', Store(), lineno=1571, col_offset=4)], Str('bool', lineno=1571, col_offset=11), lineno=1571, col_offset=4)], [], lineno=1568, col_offset=0), ClassDef('_Prop_Auto_Connect', [Attribute(Name('aetools', Load(), lineno=1572, col_offset=25), 'NProperty', Load(), lineno=1572, col_offset=25)], [Expr(Str('Auto Connect - Automatically connect to database when starting. ', lineno=1573, col_offset=4), lineno=1573, col_offset=4), Assign([Name('which', Store(), lineno=1574, col_offset=4)], Str('VC05', lineno=1574, col_offset=12), lineno=1574, col_offset=4), Assign([Name('want', Store(), lineno=1575, col_offset=4)], Str('bool', lineno=1575, col_offset=11), lineno=1575, col_offset=4)], [], lineno=1572, col_offset=0), ClassDef('_Prop_Connection_Method', [Attribute(Name('aetools', Load(), lineno=1576, col_offset=30), 'NProperty', Load(), lineno=1576, col_offset=30)], [Expr(Str('Connection Method - Name of Version Control System to use. ', lineno=1577, col_offset=4), lineno=1577, col_offset=4), Assign([Name('which', Store(), lineno=1578, col_offset=4)], Str('VC02', lineno=1578, col_offset=12), lineno=1578, col_offset=4), Assign([Name('want', Store(), lineno=1579, col_offset=4)], Str('TEXT', lineno=1579, col_offset=11), lineno=1579, col_offset=4)], [], lineno=1576, col_offset=0), ClassDef('_Prop_Database_Path', [Attribute(Name('aetools', Load(), lineno=1580, col_offset=26), 'NProperty', Load(), lineno=1580, col_offset=26)], [Expr(Str('Database Path - Path to the VCS database. ', lineno=1581, col_offset=4), lineno=1581, col_offset=4), Assign([Name('which', Store(), lineno=1582, col_offset=4)], Str('VC09', lineno=1582, col_offset=12), lineno=1582, col_offset=4), Assign([Name('want', Store(), lineno=1583, col_offset=4)], Str('RlPt', lineno=1583, col_offset=11), lineno=1583, col_offset=4)], [], lineno=1580, col_offset=0), ClassDef('_Prop_Local_Path', [Attribute(Name('aetools', Load(), lineno=1584, col_offset=23), 'NProperty', Load(), lineno=1584, col_offset=23)], [Expr(Str('Local Path - Path to the local root ', lineno=1585, col_offset=4), lineno=1585, col_offset=4), Assign([Name('which', Store(), lineno=1586, col_offset=4)], Str('VC10', lineno=1586, col_offset=12), lineno=1586, col_offset=4), Assign([Name('want', Store(), lineno=1587, col_offset=4)], Str('RlPt', lineno=1587, col_offset=11), lineno=1587, col_offset=4)], [], lineno=1584, col_offset=0), ClassDef('_Prop_Mount_Volume', [Attribute(Name('aetools', Load(), lineno=1588, col_offset=25), 'NProperty', Load(), lineno=1588, col_offset=25)], [Expr(Str("Mount Volume - Attempt to mount the database volume if it isn't available. ", lineno=1589, col_offset=4), lineno=1589, col_offset=4), Assign([Name('which', Store(), lineno=1590, col_offset=4)], Str('VC08', lineno=1590, col_offset=12), lineno=1590, col_offset=4), Assign([Name('want', Store(), lineno=1591, col_offset=4)], Str('bool', lineno=1591, col_offset=11), lineno=1591, col_offset=4)], [], lineno=1588, col_offset=0), ClassDef('_Prop_Password', [Attribute(Name('aetools', Load(), lineno=1592, col_offset=21), 'NProperty', Load(), lineno=1592, col_offset=21)], [Expr(Str('Password - The password for the VCS. ', lineno=1593, col_offset=4), lineno=1593, col_offset=4), Assign([Name('which', Store(), lineno=1594, col_offset=4)], Str('VC04', lineno=1594, col_offset=12), lineno=1594, col_offset=4), Assign([Name('want', Store(), lineno=1595, col_offset=4)], Str('TEXT', lineno=1595, col_offset=11), lineno=1595, col_offset=4)], [], lineno=1592, col_offset=0), ClassDef('_Prop_Store_Password', [Attribute(Name('aetools', Load(), lineno=1596, col_offset=27), 'NProperty', Load(), lineno=1596, col_offset=27)], [Expr(Str('Store Password - Store the password. ', lineno=1597, col_offset=4), lineno=1597, col_offset=4), Assign([Name('which', Store(), lineno=1598, col_offset=4)], Str('VC06', lineno=1598, col_offset=12), lineno=1598, col_offset=4), Assign([Name('want', Store(), lineno=1599, col_offset=4)], Str('bool', lineno=1599, col_offset=11), lineno=1599, col_offset=4)], [], lineno=1596, col_offset=0), ClassDef('_Prop_Use_Global_Settings', [Attribute(Name('aetools', Load(), lineno=1600, col_offset=32), 'NProperty', Load(), lineno=1600, col_offset=32)], [Expr(Str('Use Global Settings - Use the global VCS settings by default ', lineno=1601, col_offset=4), lineno=1601, col_offset=4), Assign([Name('which', Store(), lineno=1602, col_offset=4)], Str('VC11', lineno=1602, col_offset=12), lineno=1602, col_offset=4), Assign([Name('want', Store(), lineno=1603, col_offset=4)], Str('bool', lineno=1603, col_offset=11), lineno=1603, col_offset=4)], [], lineno=1600, col_offset=0), ClassDef('_Prop_Username', [Attribute(Name('aetools', Load(), lineno=1604, col_offset=21), 'NProperty', Load(), lineno=1604, col_offset=21)], [Expr(Str('Username - The user name for the VCS. ', lineno=1605, col_offset=4), lineno=1605, col_offset=4), Assign([Name('which', Store(), lineno=1606, col_offset=4)], Str('VC03', lineno=1606, col_offset=12), lineno=1606, col_offset=4), Assign([Name('want', Store(), lineno=1607, col_offset=4)], Str('TEXT', lineno=1607, col_offset=11), lineno=1607, col_offset=4)], [], lineno=1604, col_offset=0), ClassDef('_Prop_VCS_Active', [Attribute(Name('aetools', Load(), lineno=1608, col_offset=23), 'NProperty', Load(), lineno=1608, col_offset=23)], [Expr(Str('VCS Active - Use Version Control ', lineno=1609, col_offset=4), lineno=1609, col_offset=4), Assign([Name('which', Store(), lineno=1610, col_offset=4)], Str('VC01', lineno=1610, col_offset=12), lineno=1610, col_offset=4), Assign([Name('want', Store(), lineno=1611, col_offset=4)], Str('bool', lineno=1611, col_offset=11), lineno=1611, col_offset=4)], [], lineno=1608, col_offset=0), ClassDef('Font', [Attribute(Name('aetools', Load(), lineno=1613, col_offset=11), 'ComponentItem', Load(), lineno=1613, col_offset=11)], [Expr(Str('Font -  ', lineno=1614, col_offset=4), lineno=1614, col_offset=4), Assign([Name('want', Store(), lineno=1615, col_offset=4)], Str('mFNT', lineno=1615, col_offset=11), lineno=1615, col_offset=4)], [], lineno=1613, col_offset=0), ClassDef('_Prop_Auto_Indent', [Attribute(Name('aetools', Load(), lineno=1616, col_offset=24), 'NProperty', Load(), lineno=1616, col_offset=24)], [Expr(Str('Auto Indent - Indent new lines automatically. ', lineno=1617, col_offset=4), lineno=1617, col_offset=4), Assign([Name('which', Store(), lineno=1618, col_offset=4)], Str('FN01', lineno=1618, col_offset=12), lineno=1618, col_offset=4), Assign([Name('want', Store(), lineno=1619, col_offset=4)], Str('bool', lineno=1619, col_offset=11), lineno=1619, col_offset=4)], [], lineno=1616, col_offset=0), ClassDef('_Prop_Tab_Indents_Selection', [Attribute(Name('aetools', Load(), lineno=1620, col_offset=34), 'NProperty', Load(), lineno=1620, col_offset=34)], [Expr(Str('Tab Indents Selection - Tab indents selection when multiple lines are selected ', lineno=1621, col_offset=4), lineno=1621, col_offset=4), Assign([Name('which', Store(), lineno=1622, col_offset=4)], Str('FN03', lineno=1622, col_offset=12), lineno=1622, col_offset=4), Assign([Name('want', Store(), lineno=1623, col_offset=4)], Str('bool', lineno=1623, col_offset=11), lineno=1623, col_offset=4)], [], lineno=1620, col_offset=0), ClassDef('_Prop_Tab_Inserts_Spaces', [Attribute(Name('aetools', Load(), lineno=1624, col_offset=31), 'NProperty', Load(), lineno=1624, col_offset=31)], [Expr(Str('Tab Inserts Spaces - Insert spaces instead of tab character ', lineno=1625, col_offset=4), lineno=1625, col_offset=4), Assign([Name('which', Store(), lineno=1626, col_offset=4)], Str('FN04', lineno=1626, col_offset=12), lineno=1626, col_offset=4), Assign([Name('want', Store(), lineno=1627, col_offset=4)], Str('bool', lineno=1627, col_offset=11), lineno=1627, col_offset=4)], [], lineno=1624, col_offset=0), ClassDef('_Prop_Tab_Size', [Attribute(Name('aetools', Load(), lineno=1628, col_offset=21), 'NProperty', Load(), lineno=1628, col_offset=21)], [Expr(Str('Tab Size -  ', lineno=1629, col_offset=4), lineno=1629, col_offset=4), Assign([Name('which', Store(), lineno=1630, col_offset=4)], Str('FN02', lineno=1630, col_offset=12), lineno=1630, col_offset=4), Assign([Name('want', Store(), lineno=1631, col_offset=4)], Str('shor', lineno=1631, col_offset=11), lineno=1631, col_offset=4)], [], lineno=1628, col_offset=0), ClassDef('_Prop_Text_Font', [Attribute(Name('aetools', Load(), lineno=1632, col_offset=22), 'NProperty', Load(), lineno=1632, col_offset=22)], [Expr(Str('Text Font - The font used in editing windows. ', lineno=1633, col_offset=4), lineno=1633, col_offset=4), Assign([Name('which', Store(), lineno=1634, col_offset=4)], Str('ptxf', lineno=1634, col_offset=12), lineno=1634, col_offset=4), Assign([Name('want', Store(), lineno=1635, col_offset=4)], Str('TEXT', lineno=1635, col_offset=11), lineno=1635, col_offset=4)], [], lineno=1632, col_offset=0), ClassDef('_Prop_Text_Size', [Attribute(Name('aetools', Load(), lineno=1636, col_offset=22), 'NProperty', Load(), lineno=1636, col_offset=22)], [Expr(Str('Text Size - The size of the text in an editing window. ', lineno=1637, col_offset=4), lineno=1637, col_offset=4), Assign([Name('which', Store(), lineno=1638, col_offset=4)], Str('ptps', lineno=1638, col_offset=12), lineno=1638, col_offset=4), Assign([Name('want', Store(), lineno=1639, col_offset=4)], Str('shor', lineno=1639, col_offset=11), lineno=1639, col_offset=4)], [], lineno=1636, col_offset=0), Assign([Attribute(Name('Browser_Coloring', Load(), lineno=1640, col_offset=0), '_superclassnames', Store(), lineno=1640, col_offset=0)], List([], Load(), lineno=1640, col_offset=36), lineno=1640, col_offset=0), Assign([Attribute(Name('Browser_Coloring', Load(), lineno=1641, col_offset=0), '_privpropdict', Store(), lineno=1641, col_offset=0)], Dict([Str('Browser_Keywords', lineno=1642, col_offset=4), Str('Classes_Color', lineno=1643, col_offset=4), Str('Constants_Color', lineno=1644, col_offset=4), Str('Enums_Color', lineno=1645, col_offset=4), Str('Functions_Color', lineno=1646, col_offset=4), Str('Globals_Color', lineno=1647, col_offset=4), Str('Macros_Color', lineno=1648, col_offset=4), Str('Template_Commands_in_Menu', lineno=1649, col_offset=4), Str('Templates_Color', lineno=1650, col_offset=4), Str('Typedefs_Color', lineno=1651, col_offset=4)], [Name('_Prop_Browser_Keywords', Load(), lineno=1642, col_offset=25), Name('_Prop_Classes_Color', Load(), lineno=1643, col_offset=22), Name('_Prop_Constants_Color', Load(), lineno=1644, col_offset=24), Name('_Prop_Enums_Color', Load(), lineno=1645, col_offset=20), Name('_Prop_Functions_Color', Load(), lineno=1646, col_offset=24), Name('_Prop_Globals_Color', Load(), lineno=1647, col_offset=22), Name('_Prop_Macros_Color', Load(), lineno=1648, col_offset=21), Name('_Prop_Template_Commands_in_Menu', Load(), lineno=1649, col_offset=34), Name('_Prop_Templates_Color', Load(), lineno=1650, col_offset=24), Name('_Prop_Typedefs_Color', Load(), lineno=1651, col_offset=23)], lineno=1641, col_offset=33), lineno=1641, col_offset=0), Assign([Attribute(Name('Browser_Coloring', Load(), lineno=1653, col_offset=0), '_privelemdict', Store(), lineno=1653, col_offset=0)], Dict([], [], lineno=1653, col_offset=33), lineno=1653, col_offset=0), Assign([Attribute(Name('Build_Settings', Load(), lineno=1655, col_offset=0), '_superclassnames', Store(), lineno=1655, col_offset=0)], List([], Load(), lineno=1655, col_offset=34), lineno=1655, col_offset=0), Assign([Attribute(Name('Build_Settings', Load(), lineno=1656, col_offset=0), '_privpropdict', Store(), lineno=1656, col_offset=0)], Dict([Str('Build_Before_Running', lineno=1657, col_offset=4), Str('Compiler_Thread_Stack_Size', lineno=1658, col_offset=4), Str('Completion_Sound', lineno=1659, col_offset=4), Str('Failure_Sound', lineno=1660, col_offset=4), Str('Include_Cache_Size', lineno=1661, col_offset=4), Str('Save_Before_Building', lineno=1662, col_offset=4), Str('Success_Sound', lineno=1663, col_offset=4)], [Name('_Prop_Build_Before_Running', Load(), lineno=1657, col_offset=29), Name('_Prop_Compiler_Thread_Stack_Size', Load(), lineno=1658, col_offset=35), Name('_Prop_Completion_Sound', Load(), lineno=1659, col_offset=25), Name('_Prop_Failure_Sound', Load(), lineno=1660, col_offset=22), Name('_Prop_Include_Cache_Size', Load(), lineno=1661, col_offset=27), Name('_Prop_Save_Before_Building', Load(), lineno=1662, col_offset=29), Name('_Prop_Success_Sound', Load(), lineno=1663, col_offset=22)], lineno=1656, col_offset=31), lineno=1656, col_offset=0), Assign([Attribute(Name('Build_Settings', Load(), lineno=1665, col_offset=0), '_privelemdict', Store(), lineno=1665, col_offset=0)], Dict([], [], lineno=1665, col_offset=31), lineno=1665, col_offset=0), Assign([Attribute(Name('base_class', Load(), lineno=1667, col_offset=0), '_superclassnames', Store(), lineno=1667, col_offset=0)], List([], Load(), lineno=1667, col_offset=30), lineno=1667, col_offset=0), Assign([Attribute(Name('base_class', Load(), lineno=1668, col_offset=0), '_privpropdict', Store(), lineno=1668, col_offset=0)], Dict([Str('access', lineno=1669, col_offset=4), Str('class_', lineno=1670, col_offset=4), Str('virtual', lineno=1671, col_offset=4)], [Name('_Prop_access', Load(), lineno=1669, col_offset=15), Name('_Prop_class_', Load(), lineno=1670, col_offset=15), Name('_Prop_virtual', Load(), lineno=1671, col_offset=16)], lineno=1668, col_offset=27), lineno=1668, col_offset=0), Assign([Attribute(Name('base_class', Load(), lineno=1673, col_offset=0), '_privelemdict', Store(), lineno=1673, col_offset=0)], Dict([], [], lineno=1673, col_offset=27), lineno=1673, col_offset=0), Assign([Attribute(Name('Custom_Keywords', Load(), lineno=1675, col_offset=0), '_superclassnames', Store(), lineno=1675, col_offset=0)], List([], Load(), lineno=1675, col_offset=35), lineno=1675, col_offset=0), Assign([Attribute(Name('Custom_Keywords', Load(), lineno=1676, col_offset=0), '_privpropdict', Store(), lineno=1676, col_offset=0)], Dict([Str('Custom_Color_1', lineno=1677, col_offset=4), Str('Custom_Color_2', lineno=1678, col_offset=4), Str('Custom_Color_3', lineno=1679, col_offset=4), Str('Custom_Color_4', lineno=1680, col_offset=4)], [Name('_Prop_Custom_Color_1', Load(), lineno=1677, col_offset=23), Name('_Prop_Custom_Color_2', Load(), lineno=1678, col_offset=23), Name('_Prop_Custom_Color_3', Load(), lineno=1679, col_offset=23), Name('_Prop_Custom_Color_4', Load(), lineno=1680, col_offset=23)], lineno=1676, col_offset=32), lineno=1676, col_offset=0), Assign([Attribute(Name('Custom_Keywords', Load(), lineno=1682, col_offset=0), '_privelemdict', Store(), lineno=1682, col_offset=0)], Dict([], [], lineno=1682, col_offset=32), lineno=1682, col_offset=0), Assign([Attribute(Name('browser_catalog', Load(), lineno=1684, col_offset=0), '_superclassnames', Store(), lineno=1684, col_offset=0)], List([], Load(), lineno=1684, col_offset=35), lineno=1684, col_offset=0), Assign([Attribute(Name('browser_catalog', Load(), lineno=1685, col_offset=0), '_privpropdict', Store(), lineno=1685, col_offset=0)], Dict([], [], lineno=1685, col_offset=32), lineno=1685, col_offset=0), Assign([Attribute(Name('browser_catalog', Load(), lineno=1687, col_offset=0), '_privelemdict', Store(), lineno=1687, col_offset=0)], Dict([Str('class_', lineno=1688, col_offset=4)], [Name('class_', Load(), lineno=1688, col_offset=15)], lineno=1687, col_offset=32), lineno=1687, col_offset=0), Assign([Attribute(Name('class_', Load(), lineno=1690, col_offset=0), '_superclassnames', Store(), lineno=1690, col_offset=0)], List([], Load(), lineno=1690, col_offset=26), lineno=1690, col_offset=0), Assign([Attribute(Name('class_', Load(), lineno=1691, col_offset=0), '_privpropdict', Store(), lineno=1691, col_offset=0)], Dict([Str('all_subclasses', lineno=1692, col_offset=4), Str('declaration_end_offset', lineno=1693, col_offset=4), Str('declaration_file', lineno=1694, col_offset=4), Str('declaration_start_offset', lineno=1695, col_offset=4), Str('language', lineno=1696, col_offset=4), Str('name', lineno=1697, col_offset=4), Str('subclasses', lineno=1698, col_offset=4)], [Name('_Prop_all_subclasses', Load(), lineno=1692, col_offset=23), Name('_Prop_declaration_end_offset', Load(), lineno=1693, col_offset=31), Name('_Prop_declaration_file', Load(), lineno=1694, col_offset=25), Name('_Prop_declaration_start_offset', Load(), lineno=1695, col_offset=33), Name('_Prop_language', Load(), lineno=1696, col_offset=17), Name('_Prop_name', Load(), lineno=1697, col_offset=13), Name('_Prop_subclasses', Load(), lineno=1698, col_offset=19)], lineno=1691, col_offset=23), lineno=1691, col_offset=0), Assign([Attribute(Name('class_', Load(), lineno=1700, col_offset=0), '_privelemdict', Store(), lineno=1700, col_offset=0)], Dict([Str('base_class', lineno=1701, col_offset=4), Str('data_member', lineno=1702, col_offset=4), Str('member_function', lineno=1703, col_offset=4)], [Name('base_class', Load(), lineno=1701, col_offset=19), Name('data_member', Load(), lineno=1702, col_offset=20), Name('member_function', Load(), lineno=1703, col_offset=24)], lineno=1700, col_offset=23), lineno=1700, col_offset=0), Assign([Attribute(Name('Debugger_Display', Load(), lineno=1705, col_offset=0), '_superclassnames', Store(), lineno=1705, col_offset=0)], List([], Load(), lineno=1705, col_offset=36), lineno=1705, col_offset=0), Assign([Attribute(Name('Debugger_Display', Load(), lineno=1706, col_offset=0), '_privpropdict', Store(), lineno=1706, col_offset=0)], Dict([Str('Default_Array_Size', lineno=1707, col_offset=4), Str('Show_As_Decimal', lineno=1708, col_offset=4), Str('Show_Locals', lineno=1709, col_offset=4), Str('Show_Variable_Types', lineno=1710, col_offset=4), Str('Sort_By_Method', lineno=1711, col_offset=4), Str('Threads_in_Window', lineno=1712, col_offset=4), Str('Use_RTTI', lineno=1713, col_offset=4), Str('Variable_Changed_Hilite', lineno=1714, col_offset=4), Str('Variable_Hints', lineno=1715, col_offset=4), Str('Watchpoint_Hilite', lineno=1716, col_offset=4)], [Name('_Prop_Default_Array_Size', Load(), lineno=1707, col_offset=27), Name('_Prop_Show_As_Decimal', Load(), lineno=1708, col_offset=24), Name('_Prop_Show_Locals', Load(), lineno=1709, col_offset=20), Name('_Prop_Show_Variable_Types', Load(), lineno=1710, col_offset=28), Name('_Prop_Sort_By_Method', Load(), lineno=1711, col_offset=23), Name('_Prop_Threads_in_Window', Load(), lineno=1712, col_offset=26), Name('_Prop_Use_RTTI', Load(), lineno=1713, col_offset=17), Name('_Prop_Variable_Changed_Hilite', Load(), lineno=1714, col_offset=32), Name('_Prop_Variable_Hints', Load(), lineno=1715, col_offset=23), Name('_Prop_Watchpoint_Hilite', Load(), lineno=1716, col_offset=26)], lineno=1706, col_offset=33), lineno=1706, col_offset=0), Assign([Attribute(Name('Debugger_Display', Load(), lineno=1718, col_offset=0), '_privelemdict', Store(), lineno=1718, col_offset=0)], Dict([], [], lineno=1718, col_offset=33), lineno=1718, col_offset=0), Assign([Attribute(Name('Debugger_Global', Load(), lineno=1720, col_offset=0), '_superclassnames', Store(), lineno=1720, col_offset=0)], List([], Load(), lineno=1720, col_offset=35), lineno=1720, col_offset=0), Assign([Attribute(Name('Debugger_Global', Load(), lineno=1721, col_offset=0), '_privpropdict', Store(), lineno=1721, col_offset=0)], Dict([Str('Auto_Target_Libraries', lineno=1722, col_offset=4), Str('Cache_Edited_Files', lineno=1723, col_offset=4), Str('Confirm_Kill', lineno=1724, col_offset=4), Str('Dont_Step_in_Runtime', lineno=1725, col_offset=4), Str('File_Cache_Duration', lineno=1726, col_offset=4), Str('Ignore_Mod_Dates', lineno=1727, col_offset=4), Str('Launch_Apps_on_Open', lineno=1728, col_offset=4), Str('Open_All_Classes', lineno=1729, col_offset=4), Str('Select_Stack_Crawl', lineno=1730, col_offset=4), Str('Stop_at_Main', lineno=1731, col_offset=4)], [Name('_Prop_Auto_Target_Libraries', Load(), lineno=1722, col_offset=30), Name('_Prop_Cache_Edited_Files', Load(), lineno=1723, col_offset=27), Name('_Prop_Confirm_Kill', Load(), lineno=1724, col_offset=21), Name('_Prop_Dont_Step_in_Runtime', Load(), lineno=1725, col_offset=29), Name('_Prop_File_Cache_Duration', Load(), lineno=1726, col_offset=28), Name('_Prop_Ignore_Mod_Dates', Load(), lineno=1727, col_offset=25), Name('_Prop_Launch_Apps_on_Open', Load(), lineno=1728, col_offset=28), Name('_Prop_Open_All_Classes', Load(), lineno=1729, col_offset=25), Name('_Prop_Select_Stack_Crawl', Load(), lineno=1730, col_offset=27), Name('_Prop_Stop_at_Main', Load(), lineno=1731, col_offset=21)], lineno=1721, col_offset=32), lineno=1721, col_offset=0), Assign([Attribute(Name('Debugger_Global', Load(), lineno=1733, col_offset=0), '_privelemdict', Store(), lineno=1733, col_offset=0)], Dict([], [], lineno=1733, col_offset=32), lineno=1733, col_offset=0), Assign([Attribute(Name('Debugger_Target', Load(), lineno=1735, col_offset=0), '_superclassnames', Store(), lineno=1735, col_offset=0)], List([], Load(), lineno=1735, col_offset=35), lineno=1735, col_offset=0), Assign([Attribute(Name('Debugger_Target', Load(), lineno=1736, col_offset=0), '_privpropdict', Store(), lineno=1736, col_offset=0)], Dict([Str('Auto_Target_Libraries', lineno=1737, col_offset=4), Str('Cache_symbolics', lineno=1738, col_offset=4), Str('Data_Update_Interval', lineno=1739, col_offset=4), Str('Log_System_Messages', lineno=1740, col_offset=4), Str('Relocated_Executable_Path', lineno=1741, col_offset=4), Str('Stop_at_temp_breakpoint', lineno=1742, col_offset=4), Str('Temp_Breakpoint_Type', lineno=1743, col_offset=4), Str('Temp_breakpoint_names', lineno=1744, col_offset=4), Str('Update_Data_While_Running', lineno=1745, col_offset=4)], [Name('_Prop_Auto_Target_Libraries', Load(), lineno=1737, col_offset=30), Name('_Prop_Cache_symbolics', Load(), lineno=1738, col_offset=24), Name('_Prop_Data_Update_Interval', Load(), lineno=1739, col_offset=29), Name('_Prop_Log_System_Messages', Load(), lineno=1740, col_offset=28), Name('_Prop_Relocated_Executable_Path', Load(), lineno=1741, col_offset=34), Name('_Prop_Stop_at_temp_breakpoint', Load(), lineno=1742, col_offset=32), Name('_Prop_Temp_Breakpoint_Type', Load(), lineno=1743, col_offset=29), Name('_Prop_Temp_breakpoint_names', Load(), lineno=1744, col_offset=30), Name('_Prop_Update_Data_While_Running', Load(), lineno=1745, col_offset=34)], lineno=1736, col_offset=32), lineno=1736, col_offset=0), Assign([Attribute(Name('Debugger_Target', Load(), lineno=1747, col_offset=0), '_privelemdict', Store(), lineno=1747, col_offset=0)], Dict([], [], lineno=1747, col_offset=32), lineno=1747, col_offset=0), Assign([Attribute(Name('Debugger_Windowing', Load(), lineno=1749, col_offset=0), '_superclassnames', Store(), lineno=1749, col_offset=0)], List([], Load(), lineno=1749, col_offset=38), lineno=1749, col_offset=0), Assign([Attribute(Name('Debugger_Windowing', Load(), lineno=1750, col_offset=0), '_privpropdict', Store(), lineno=1750, col_offset=0)], Dict([Str('Debugging_Start_Action', lineno=1751, col_offset=4), Str('Do_Nothing_To_Projects', lineno=1752, col_offset=4)], [Name('_Prop_Debugging_Start_Action', Load(), lineno=1751, col_offset=31), Name('_Prop_Do_Nothing_To_Projects', Load(), lineno=1752, col_offset=31)], lineno=1750, col_offset=35), lineno=1750, col_offset=0), Assign([Attribute(Name('Debugger_Windowing', Load(), lineno=1754, col_offset=0), '_privelemdict', Store(), lineno=1754, col_offset=0)], Dict([], [], lineno=1754, col_offset=35), lineno=1754, col_offset=0), Assign([Attribute(Name('data_member', Load(), lineno=1756, col_offset=0), '_superclassnames', Store(), lineno=1756, col_offset=0)], List([], Load(), lineno=1756, col_offset=31), lineno=1756, col_offset=0), Assign([Attribute(Name('data_member', Load(), lineno=1757, col_offset=0), '_privpropdict', Store(), lineno=1757, col_offset=0)], Dict([Str('access', lineno=1758, col_offset=4), Str('declaration_end_offset', lineno=1759, col_offset=4), Str('declaration_start_offset', lineno=1760, col_offset=4), Str('name', lineno=1761, col_offset=4), Str('static', lineno=1762, col_offset=4)], [Name('_Prop_access', Load(), lineno=1758, col_offset=15), Name('_Prop_declaration_end_offset', Load(), lineno=1759, col_offset=31), Name('_Prop_declaration_start_offset', Load(), lineno=1760, col_offset=33), Name('_Prop_name', Load(), lineno=1761, col_offset=13), Name('_Prop_static', Load(), lineno=1762, col_offset=15)], lineno=1757, col_offset=28), lineno=1757, col_offset=0), Assign([Attribute(Name('data_member', Load(), lineno=1764, col_offset=0), '_privelemdict', Store(), lineno=1764, col_offset=0)], Dict([], [], lineno=1764, col_offset=28), lineno=1764, col_offset=0), Assign([Attribute(Name('Editor', Load(), lineno=1766, col_offset=0), '_superclassnames', Store(), lineno=1766, col_offset=0)], List([], Load(), lineno=1766, col_offset=26), lineno=1766, col_offset=0), Assign([Attribute(Name('Editor', Load(), lineno=1767, col_offset=0), '_privpropdict', Store(), lineno=1767, col_offset=0)], Dict([Str('Background_Color', lineno=1768, col_offset=4), Str('Balance', lineno=1769, col_offset=4), Str('Context_Popup_Delay', lineno=1770, col_offset=4), Str('Default_Text_File_Format', lineno=1771, col_offset=4), Str('Dynamic_Scroll', lineno=1772, col_offset=4), Str('Flash_Delay', lineno=1773, col_offset=4), Str('Left_Margin_Line_Select', lineno=1774, col_offset=4), Str('Main_Text_Color', lineno=1775, col_offset=4), Str('Relaxed_C_Popup_Parsing', lineno=1776, col_offset=4), Str('Remember_Font', lineno=1777, col_offset=4), Str('Remember_Selection', lineno=1778, col_offset=4), Str('Remember_Window', lineno=1779, col_offset=4), Str('Sort_Function_Popup', lineno=1780, col_offset=4), Str('Use_Drag__26__Drop_Editing', lineno=1781, col_offset=4), Str('Use_Multiple_Undo', lineno=1782, col_offset=4)], [Name('_Prop_Background_Color', Load(), lineno=1768, col_offset=25), Name('_Prop_Balance', Load(), lineno=1769, col_offset=16), Name('_Prop_Context_Popup_Delay', Load(), lineno=1770, col_offset=28), Name('_Prop_Default_Text_File_Format', Load(), lineno=1771, col_offset=33), Name('_Prop_Dynamic_Scroll', Load(), lineno=1772, col_offset=23), Name('_Prop_Flash_Delay', Load(), lineno=1773, col_offset=20), Name('_Prop_Left_Margin_Line_Select', Load(), lineno=1774, col_offset=32), Name('_Prop_Main_Text_Color', Load(), lineno=1775, col_offset=24), Name('_Prop_Relaxed_C_Popup_Parsing', Load(), lineno=1776, col_offset=32), Name('_Prop_Remember_Font', Load(), lineno=1777, col_offset=22), Name('_Prop_Remember_Selection', Load(), lineno=1778, col_offset=27), Name('_Prop_Remember_Window', Load(), lineno=1779, col_offset=24), Name('_Prop_Sort_Function_Popup', Load(), lineno=1780, col_offset=28), Name('_Prop_Use_Drag__26__Drop_Editing', Load(), lineno=1781, col_offset=35), Name('_Prop_Use_Multiple_Undo', Load(), lineno=1782, col_offset=26)], lineno=1767, col_offset=23), lineno=1767, col_offset=0), Assign([Attribute(Name('Editor', Load(), lineno=1784, col_offset=0), '_privelemdict', Store(), lineno=1784, col_offset=0)], Dict([], [], lineno=1784, col_offset=23), lineno=1784, col_offset=0), Assign([Attribute(Name('Environment_Variable', Load(), lineno=1786, col_offset=0), '_superclassnames', Store(), lineno=1786, col_offset=0)], List([], Load(), lineno=1786, col_offset=40), lineno=1786, col_offset=0), Assign([Attribute(Name('Environment_Variable', Load(), lineno=1787, col_offset=0), '_privpropdict', Store(), lineno=1787, col_offset=0)], Dict([Str('name', lineno=1788, col_offset=4), Str('value', lineno=1789, col_offset=4)], [Name('_Prop_name', Load(), lineno=1788, col_offset=13), Name('_Prop_value', Load(), lineno=1789, col_offset=14)], lineno=1787, col_offset=37), lineno=1787, col_offset=0), Assign([Attribute(Name('Environment_Variable', Load(), lineno=1791, col_offset=0), '_privelemdict', Store(), lineno=1791, col_offset=0)], Dict([], [], lineno=1791, col_offset=37), lineno=1791, col_offset=0), Assign([Attribute(Name('Error_Information', Load(), lineno=1793, col_offset=0), '_superclassnames', Store(), lineno=1793, col_offset=0)], List([], Load(), lineno=1793, col_offset=37), lineno=1793, col_offset=0), Assign([Attribute(Name('Error_Information', Load(), lineno=1794, col_offset=0), '_privpropdict', Store(), lineno=1794, col_offset=0)], Dict([Str('disk_file', lineno=1795, col_offset=4), Str('lineNumber', lineno=1796, col_offset=4), Str('message', lineno=1797, col_offset=4), Str('messageKind', lineno=1798, col_offset=4)], [Name('_Prop_disk_file', Load(), lineno=1795, col_offset=18), Name('_Prop_lineNumber', Load(), lineno=1796, col_offset=19), Name('_Prop_message', Load(), lineno=1797, col_offset=16), Name('_Prop_messageKind', Load(), lineno=1798, col_offset=20)], lineno=1794, col_offset=34), lineno=1794, col_offset=0), Assign([Attribute(Name('Error_Information', Load(), lineno=1800, col_offset=0), '_privelemdict', Store(), lineno=1800, col_offset=0)], Dict([], [], lineno=1800, col_offset=34), lineno=1800, col_offset=0), Assign([Attribute(Name('Function_Information', Load(), lineno=1802, col_offset=0), '_superclassnames', Store(), lineno=1802, col_offset=0)], List([], Load(), lineno=1802, col_offset=40), lineno=1802, col_offset=0), Assign([Attribute(Name('Function_Information', Load(), lineno=1803, col_offset=0), '_privpropdict', Store(), lineno=1803, col_offset=0)], Dict([Str('disk_file', lineno=1804, col_offset=4), Str('lineNumber', lineno=1805, col_offset=4)], [Name('_Prop_disk_file', Load(), lineno=1804, col_offset=18), Name('_Prop_lineNumber', Load(), lineno=1805, col_offset=19)], lineno=1803, col_offset=37), lineno=1803, col_offset=0), Assign([Attribute(Name('Function_Information', Load(), lineno=1807, col_offset=0), '_privelemdict', Store(), lineno=1807, col_offset=0)], Dict([], [], lineno=1807, col_offset=37), lineno=1807, col_offset=0), Assign([Attribute(Name('File_Mappings', Load(), lineno=1809, col_offset=0), '_superclassnames', Store(), lineno=1809, col_offset=0)], List([], Load(), lineno=1809, col_offset=33), lineno=1809, col_offset=0), Assign([Attribute(Name('File_Mappings', Load(), lineno=1810, col_offset=0), '_privpropdict', Store(), lineno=1810, col_offset=0)], Dict([Str('Mappings', lineno=1811, col_offset=4)], [Name('_Prop_Mappings', Load(), lineno=1811, col_offset=17)], lineno=1810, col_offset=30), lineno=1810, col_offset=0), Assign([Attribute(Name('File_Mappings', Load(), lineno=1813, col_offset=0), '_privelemdict', Store(), lineno=1813, col_offset=0)], Dict([], [], lineno=1813, col_offset=30), lineno=1813, col_offset=0), Assign([Attribute(Name('File_Mapping', Load(), lineno=1815, col_offset=0), '_superclassnames', Store(), lineno=1815, col_offset=0)], List([], Load(), lineno=1815, col_offset=32), lineno=1815, col_offset=0), Assign([Attribute(Name('File_Mapping', Load(), lineno=1816, col_offset=0), '_privpropdict', Store(), lineno=1816, col_offset=0)], Dict([Str('Compiler', lineno=1817, col_offset=4), Str('Extension', lineno=1818, col_offset=4), Str('File_Type', lineno=1819, col_offset=4), Str('Ignored_by_Make', lineno=1820, col_offset=4), Str('Launchable', lineno=1821, col_offset=4), Str('Precompiled', lineno=1822, col_offset=4), Str('Resource_File', lineno=1823, col_offset=4)], [Name('_Prop_Compiler', Load(), lineno=1817, col_offset=17), Name('_Prop_Extension', Load(), lineno=1818, col_offset=18), Name('_Prop_File_Type', Load(), lineno=1819, col_offset=18), Name('_Prop_Ignored_by_Make', Load(), lineno=1820, col_offset=24), Name('_Prop_Launchable', Load(), lineno=1821, col_offset=19), Name('_Prop_Precompiled', Load(), lineno=1822, col_offset=20), Name('_Prop_Resource_File', Load(), lineno=1823, col_offset=22)], lineno=1816, col_offset=29), lineno=1816, col_offset=0), Assign([Attribute(Name('File_Mapping', Load(), lineno=1825, col_offset=0), '_privelemdict', Store(), lineno=1825, col_offset=0)], Dict([], [], lineno=1825, col_offset=29), lineno=1825, col_offset=0), Assign([Attribute(Name('Global_Source_Trees', Load(), lineno=1827, col_offset=0), '_superclassnames', Store(), lineno=1827, col_offset=0)], List([], Load(), lineno=1827, col_offset=39), lineno=1827, col_offset=0), Assign([Attribute(Name('Global_Source_Trees', Load(), lineno=1828, col_offset=0), '_privpropdict', Store(), lineno=1828, col_offset=0)], Dict([Str('Source_Trees', lineno=1829, col_offset=4)], [Name('_Prop_Source_Trees', Load(), lineno=1829, col_offset=21)], lineno=1828, col_offset=36), lineno=1828, col_offset=0), Assign([Attribute(Name('Global_Source_Trees', Load(), lineno=1831, col_offset=0), '_privelemdict', Store(), lineno=1831, col_offset=0)], Dict([], [], lineno=1831, col_offset=36), lineno=1831, col_offset=0), Assign([Attribute(Name('Extras', Load(), lineno=1833, col_offset=0), '_superclassnames', Store(), lineno=1833, col_offset=0)], List([], Load(), lineno=1833, col_offset=26), lineno=1833, col_offset=0), Assign([Attribute(Name('Extras', Load(), lineno=1834, col_offset=0), '_privpropdict', Store(), lineno=1834, col_offset=0)], Dict([Str('Automatic_Toolbar_Help', lineno=1835, col_offset=4), Str('External_Reference', lineno=1836, col_offset=4), Str('Full_Screen_Zoom', lineno=1837, col_offset=4), Str('Recent_Editor_Count', lineno=1838, col_offset=4), Str('Recent_Project_Count', lineno=1839, col_offset=4), Str('Use_Editor_Extensions', lineno=1840, col_offset=4), Str('Use_External_Editor', lineno=1841, col_offset=4), Str('Use_Script_Menu', lineno=1842, col_offset=4), Str('Use_ToolServer_Menu', lineno=1843, col_offset=4)], [Name('_Prop_Automatic_Toolbar_Help', Load(), lineno=1835, col_offset=31), Name('_Prop_External_Reference', Load(), lineno=1836, col_offset=27), Name('_Prop_Full_Screen_Zoom', Load(), lineno=1837, col_offset=25), Name('_Prop_Recent_Editor_Count', Load(), lineno=1838, col_offset=28), Name('_Prop_Recent_Project_Count', Load(), lineno=1839, col_offset=29), Name('_Prop_Use_Editor_Extensions', Load(), lineno=1840, col_offset=30), Name('_Prop_Use_External_Editor', Load(), lineno=1841, col_offset=28), Name('_Prop_Use_Script_Menu', Load(), lineno=1842, col_offset=24), Name('_Prop_Use_ToolServer_Menu', Load(), lineno=1843, col_offset=28)], lineno=1834, col_offset=23), lineno=1834, col_offset=0), Assign([Attribute(Name('Extras', Load(), lineno=1845, col_offset=0), '_privelemdict', Store(), lineno=1845, col_offset=0)], Dict([], [], lineno=1845, col_offset=23), lineno=1845, col_offset=0), Assign([Attribute(Name('Build_Extras', Load(), lineno=1847, col_offset=0), '_superclassnames', Store(), lineno=1847, col_offset=0)], List([], Load(), lineno=1847, col_offset=32), lineno=1847, col_offset=0), Assign([Attribute(Name('Build_Extras', Load(), lineno=1848, col_offset=0), '_privpropdict', Store(), lineno=1848, col_offset=0)], Dict([Str('Browser_Active', lineno=1849, col_offset=4), Str('Cache_Subproject_Data', lineno=1850, col_offset=4), Str('Dump_Browser_Info', lineno=1851, col_offset=4), Str('Modification_Date_Caching', lineno=1852, col_offset=4)], [Name('_Prop_Browser_Active', Load(), lineno=1849, col_offset=23), Name('_Prop_Cache_Subproject_Data', Load(), lineno=1850, col_offset=30), Name('_Prop_Dump_Browser_Info', Load(), lineno=1851, col_offset=26), Name('_Prop_Modification_Date_Caching', Load(), lineno=1852, col_offset=34)], lineno=1848, col_offset=29), lineno=1848, col_offset=0), Assign([Attribute(Name('Build_Extras', Load(), lineno=1854, col_offset=0), '_privelemdict', Store(), lineno=1854, col_offset=0)], Dict([], [], lineno=1854, col_offset=29), lineno=1854, col_offset=0), Assign([Attribute(Name('member_function', Load(), lineno=1856, col_offset=0), '_superclassnames', Store(), lineno=1856, col_offset=0)], List([], Load(), lineno=1856, col_offset=35), lineno=1856, col_offset=0), Assign([Attribute(Name('member_function', Load(), lineno=1857, col_offset=0), '_privpropdict', Store(), lineno=1857, col_offset=0)], Dict([Str('access', lineno=1858, col_offset=4), Str('declaration_end_offset', lineno=1859, col_offset=4), Str('declaration_file', lineno=1860, col_offset=4), Str('declaration_start_offset', lineno=1861, col_offset=4), Str('implementation_end_offset', lineno=1862, col_offset=4), Str('implementation_file', lineno=1863, col_offset=4), Str('implementation_start_offset', lineno=1864, col_offset=4), Str('name', lineno=1865, col_offset=4), Str('static', lineno=1866, col_offset=4), Str('virtual', lineno=1867, col_offset=4)], [Name('_Prop_access', Load(), lineno=1858, col_offset=15), Name('_Prop_declaration_end_offset', Load(), lineno=1859, col_offset=31), Name('_Prop_declaration_file', Load(), lineno=1860, col_offset=25), Name('_Prop_declaration_start_offset', Load(), lineno=1861, col_offset=33), Name('_Prop_implementation_end_offset', Load(), lineno=1862, col_offset=34), Name('_Prop_implementation_file', Load(), lineno=1863, col_offset=28), Name('_Prop_implementation_start_offset', Load(), lineno=1864, col_offset=36), Name('_Prop_name', Load(), lineno=1865, col_offset=13), Name('_Prop_static', Load(), lineno=1866, col_offset=15), Name('_Prop_virtual', Load(), lineno=1867, col_offset=16)], lineno=1857, col_offset=32), lineno=1857, col_offset=0), Assign([Attribute(Name('member_function', Load(), lineno=1869, col_offset=0), '_privelemdict', Store(), lineno=1869, col_offset=0)], Dict([], [], lineno=1869, col_offset=32), lineno=1869, col_offset=0), Assign([Attribute(Name('Access_Paths', Load(), lineno=1871, col_offset=0), '_superclassnames', Store(), lineno=1871, col_offset=0)], List([], Load(), lineno=1871, col_offset=32), lineno=1871, col_offset=0), Assign([Attribute(Name('Access_Paths', Load(), lineno=1872, col_offset=0), '_privpropdict', Store(), lineno=1872, col_offset=0)], Dict([Str('Always_Full_Search', lineno=1873, col_offset=4), Str('Convert_Paths', lineno=1874, col_offset=4), Str('Require_Framework_Includes', lineno=1875, col_offset=4), Str('System_Paths', lineno=1876, col_offset=4), Str('User_Paths', lineno=1877, col_offset=4)], [Name('_Prop_Always_Full_Search', Load(), lineno=1873, col_offset=27), Name('_Prop_Convert_Paths', Load(), lineno=1874, col_offset=22), Name('_Prop_Require_Framework_Includes', Load(), lineno=1875, col_offset=35), Name('_Prop_System_Paths', Load(), lineno=1876, col_offset=21), Name('_Prop_User_Paths', Load(), lineno=1877, col_offset=19)], lineno=1872, col_offset=29), lineno=1872, col_offset=0), Assign([Attribute(Name('Access_Paths', Load(), lineno=1879, col_offset=0), '_privelemdict', Store(), lineno=1879, col_offset=0)], Dict([], [], lineno=1879, col_offset=29), lineno=1879, col_offset=0), Assign([Attribute(Name('Path_Information', Load(), lineno=1881, col_offset=0), '_superclassnames', Store(), lineno=1881, col_offset=0)], List([], Load(), lineno=1881, col_offset=36), lineno=1881, col_offset=0), Assign([Attribute(Name('Path_Information', Load(), lineno=1882, col_offset=0), '_privpropdict', Store(), lineno=1882, col_offset=0)], Dict([Str('format', lineno=1883, col_offset=4), Str('framework', lineno=1884, col_offset=4), Str('host_flags', lineno=1885, col_offset=4), Str('name', lineno=1886, col_offset=4), Str('origin', lineno=1887, col_offset=4), Str('recursive', lineno=1888, col_offset=4), Str('root', lineno=1889, col_offset=4)], [Name('_Prop_format', Load(), lineno=1883, col_offset=15), Name('_Prop_framework', Load(), lineno=1884, col_offset=18), Name('_Prop_host_flags', Load(), lineno=1885, col_offset=19), Name('_Prop_name', Load(), lineno=1886, col_offset=13), Name('_Prop_origin', Load(), lineno=1887, col_offset=15), Name('_Prop_recursive', Load(), lineno=1888, col_offset=18), Name('_Prop_root', Load(), lineno=1889, col_offset=13)], lineno=1882, col_offset=33), lineno=1882, col_offset=0), Assign([Attribute(Name('Path_Information', Load(), lineno=1891, col_offset=0), '_privelemdict', Store(), lineno=1891, col_offset=0)], Dict([], [], lineno=1891, col_offset=33), lineno=1891, col_offset=0), Assign([Attribute(Name('Plugin_Settings', Load(), lineno=1893, col_offset=0), '_superclassnames', Store(), lineno=1893, col_offset=0)], List([], Load(), lineno=1893, col_offset=35), lineno=1893, col_offset=0), Assign([Attribute(Name('Plugin_Settings', Load(), lineno=1894, col_offset=0), '_privpropdict', Store(), lineno=1894, col_offset=0)], Dict([Str('Disable_Third_Party_COM_Plugins', lineno=1895, col_offset=4), Str('Plugin_Diagnostics_Level', lineno=1896, col_offset=4)], [Name('_Prop_Disable_Third_Party_COM_Plugins', Load(), lineno=1895, col_offset=40), Name('_Prop_Plugin_Diagnostics_Level', Load(), lineno=1896, col_offset=33)], lineno=1894, col_offset=32), lineno=1894, col_offset=0), Assign([Attribute(Name('Plugin_Settings', Load(), lineno=1898, col_offset=0), '_privelemdict', Store(), lineno=1898, col_offset=0)], Dict([], [], lineno=1898, col_offset=32), lineno=1898, col_offset=0), Assign([Attribute(Name('Runtime_Settings', Load(), lineno=1900, col_offset=0), '_superclassnames', Store(), lineno=1900, col_offset=0)], List([], Load(), lineno=1900, col_offset=36), lineno=1900, col_offset=0), Assign([Attribute(Name('Runtime_Settings', Load(), lineno=1901, col_offset=0), '_privpropdict', Store(), lineno=1901, col_offset=0)], Dict([Str('Command_Line_Arguments', lineno=1902, col_offset=4), Str('Environment_Variables', lineno=1903, col_offset=4), Str('Host_Application', lineno=1904, col_offset=4), Str('Working_Directory', lineno=1905, col_offset=4)], [Name('_Prop_Command_Line_Arguments', Load(), lineno=1902, col_offset=31), Name('_Prop_Environment_Variables', Load(), lineno=1903, col_offset=30), Name('_Prop_Host_Application', Load(), lineno=1904, col_offset=25), Name('_Prop_Working_Directory', Load(), lineno=1905, col_offset=26)], lineno=1901, col_offset=33), lineno=1901, col_offset=0), Assign([Attribute(Name('Runtime_Settings', Load(), lineno=1907, col_offset=0), '_privelemdict', Store(), lineno=1907, col_offset=0)], Dict([], [], lineno=1907, col_offset=33), lineno=1907, col_offset=0), Assign([Attribute(Name('Relative_Path', Load(), lineno=1909, col_offset=0), '_superclassnames', Store(), lineno=1909, col_offset=0)], List([], Load(), lineno=1909, col_offset=33), lineno=1909, col_offset=0), Assign([Attribute(Name('Relative_Path', Load(), lineno=1910, col_offset=0), '_privpropdict', Store(), lineno=1910, col_offset=0)], Dict([Str('format', lineno=1911, col_offset=4), Str('name', lineno=1912, col_offset=4), Str('origin', lineno=1913, col_offset=4), Str('root', lineno=1914, col_offset=4)], [Name('_Prop_format', Load(), lineno=1911, col_offset=15), Name('_Prop_name', Load(), lineno=1912, col_offset=13), Name('_Prop_origin', Load(), lineno=1913, col_offset=15), Name('_Prop_root', Load(), lineno=1914, col_offset=13)], lineno=1910, col_offset=30), lineno=1910, col_offset=0), Assign([Attribute(Name('Relative_Path', Load(), lineno=1916, col_offset=0), '_privelemdict', Store(), lineno=1916, col_offset=0)], Dict([], [], lineno=1916, col_offset=30), lineno=1916, col_offset=0), Assign([Attribute(Name('Shielded_Folder', Load(), lineno=1918, col_offset=0), '_superclassnames', Store(), lineno=1918, col_offset=0)], List([], Load(), lineno=1918, col_offset=35), lineno=1918, col_offset=0), Assign([Attribute(Name('Shielded_Folder', Load(), lineno=1919, col_offset=0), '_privpropdict', Store(), lineno=1919, col_offset=0)], Dict([Str('Expression_To_Match', lineno=1920, col_offset=4), Str('Skip_Find_And_Compare_Operations', lineno=1921, col_offset=4), Str('Skip_Project_Operations', lineno=1922, col_offset=4)], [Name('_Prop_Expression_To_Match', Load(), lineno=1920, col_offset=28), Name('_Prop_Skip_Find_And_Compare_Operations', Load(), lineno=1921, col_offset=41), Name('_Prop_Skip_Project_Operations', Load(), lineno=1922, col_offset=32)], lineno=1919, col_offset=32), lineno=1919, col_offset=0), Assign([Attribute(Name('Shielded_Folder', Load(), lineno=1924, col_offset=0), '_privelemdict', Store(), lineno=1924, col_offset=0)], Dict([], [], lineno=1924, col_offset=32), lineno=1924, col_offset=0), Assign([Attribute(Name('Shielded_Folders', Load(), lineno=1926, col_offset=0), '_superclassnames', Store(), lineno=1926, col_offset=0)], List([], Load(), lineno=1926, col_offset=36), lineno=1926, col_offset=0), Assign([Attribute(Name('Shielded_Folders', Load(), lineno=1927, col_offset=0), '_privpropdict', Store(), lineno=1927, col_offset=0)], Dict([Str('Shielded_Items', lineno=1928, col_offset=4)], [Name('_Prop_Shielded_Items', Load(), lineno=1928, col_offset=23)], lineno=1927, col_offset=33), lineno=1927, col_offset=0), Assign([Attribute(Name('Shielded_Folders', Load(), lineno=1930, col_offset=0), '_privelemdict', Store(), lineno=1930, col_offset=0)], Dict([], [], lineno=1930, col_offset=33), lineno=1930, col_offset=0), Assign([Attribute(Name('Syntax_Coloring', Load(), lineno=1932, col_offset=0), '_superclassnames', Store(), lineno=1932, col_offset=0)], List([], Load(), lineno=1932, col_offset=35), lineno=1932, col_offset=0), Assign([Attribute(Name('Syntax_Coloring', Load(), lineno=1933, col_offset=0), '_privpropdict', Store(), lineno=1933, col_offset=0)], Dict([Str('Comment_Color', lineno=1934, col_offset=4), Str('Custom_Color_1', lineno=1935, col_offset=4), Str('Custom_Color_2', lineno=1936, col_offset=4), Str('Custom_Color_3', lineno=1937, col_offset=4), Str('Custom_Color_4', lineno=1938, col_offset=4), Str('Keyword_Color', lineno=1939, col_offset=4), Str('String_Color', lineno=1940, col_offset=4), Str('Syntax_Coloring', lineno=1941, col_offset=4)], [Name('_Prop_Comment_Color', Load(), lineno=1934, col_offset=22), Name('_Prop_Custom_Color_1', Load(), lineno=1935, col_offset=23), Name('_Prop_Custom_Color_2', Load(), lineno=1936, col_offset=23), Name('_Prop_Custom_Color_3', Load(), lineno=1937, col_offset=23), Name('_Prop_Custom_Color_4', Load(), lineno=1938, col_offset=23), Name('_Prop_Keyword_Color', Load(), lineno=1939, col_offset=22), Name('_Prop_String_Color', Load(), lineno=1940, col_offset=21), Name('_Prop_Syntax_Coloring', Load(), lineno=1941, col_offset=24)], lineno=1933, col_offset=32), lineno=1933, col_offset=0), Assign([Attribute(Name('Syntax_Coloring', Load(), lineno=1943, col_offset=0), '_privelemdict', Store(), lineno=1943, col_offset=0)], Dict([], [], lineno=1943, col_offset=32), lineno=1943, col_offset=0), Assign([Attribute(Name('Segment', Load(), lineno=1945, col_offset=0), '_superclassnames', Store(), lineno=1945, col_offset=0)], List([], Load(), lineno=1945, col_offset=27), lineno=1945, col_offset=0), Assign([Attribute(Name('Segment', Load(), lineno=1946, col_offset=0), '_privpropdict', Store(), lineno=1946, col_offset=0)], Dict([Str('filecount', lineno=1947, col_offset=4), Str('name', lineno=1948, col_offset=4), Str('seg_2d_locked', lineno=1949, col_offset=4), Str('seg_2d_preloaded', lineno=1950, col_offset=4), Str('seg_2d_protected', lineno=1951, col_offset=4), Str('seg_2d_purgeable', lineno=1952, col_offset=4), Str('seg_2d_system_heap', lineno=1953, col_offset=4)], [Name('_Prop_filecount', Load(), lineno=1947, col_offset=18), Name('_Prop_name', Load(), lineno=1948, col_offset=13), Name('_Prop_seg_2d_locked', Load(), lineno=1949, col_offset=22), Name('_Prop_seg_2d_preloaded', Load(), lineno=1950, col_offset=25), Name('_Prop_seg_2d_protected', Load(), lineno=1951, col_offset=25), Name('_Prop_seg_2d_purgeable', Load(), lineno=1952, col_offset=25), Name('_Prop_seg_2d_system_heap', Load(), lineno=1953, col_offset=27)], lineno=1946, col_offset=24), lineno=1946, col_offset=0), Assign([Attribute(Name('Segment', Load(), lineno=1955, col_offset=0), '_privelemdict', Store(), lineno=1955, col_offset=0)], Dict([], [], lineno=1955, col_offset=24), lineno=1955, col_offset=0), Assign([Attribute(Name('ProjectFile', Load(), lineno=1957, col_offset=0), '_superclassnames', Store(), lineno=1957, col_offset=0)], List([], Load(), lineno=1957, col_offset=31), lineno=1957, col_offset=0), Assign([Attribute(Name('ProjectFile', Load(), lineno=1958, col_offset=0), '_privpropdict', Store(), lineno=1958, col_offset=0)], Dict([Str('codesize', lineno=1959, col_offset=4), Str('datasize', lineno=1960, col_offset=4), Str('disk_file', lineno=1961, col_offset=4), Str('filetype', lineno=1962, col_offset=4), Str('includes', lineno=1963, col_offset=4), Str('initialize_before', lineno=1964, col_offset=4), Str('name', lineno=1965, col_offset=4), Str('symbols', lineno=1966, col_offset=4), Str('up_to_date', lineno=1967, col_offset=4), Str('weak_link', lineno=1968, col_offset=4)], [Name('_Prop_codesize', Load(), lineno=1959, col_offset=17), Name('_Prop_datasize', Load(), lineno=1960, col_offset=17), Name('_Prop_disk_file', Load(), lineno=1961, col_offset=18), Name('_Prop_filetype', Load(), lineno=1962, col_offset=17), Name('_Prop_includes', Load(), lineno=1963, col_offset=17), Name('_Prop_initialize_before', Load(), lineno=1964, col_offset=26), Name('_Prop_name', Load(), lineno=1965, col_offset=13), Name('_Prop_symbols', Load(), lineno=1966, col_offset=16), Name('_Prop_up_to_date', Load(), lineno=1967, col_offset=19), Name('_Prop_weak_link', Load(), lineno=1968, col_offset=18)], lineno=1958, col_offset=28), lineno=1958, col_offset=0), Assign([Attribute(Name('ProjectFile', Load(), lineno=1970, col_offset=0), '_privelemdict', Store(), lineno=1970, col_offset=0)], Dict([], [], lineno=1970, col_offset=28), lineno=1970, col_offset=0), Assign([Attribute(Name('Source_Tree', Load(), lineno=1972, col_offset=0), '_superclassnames', Store(), lineno=1972, col_offset=0)], List([], Load(), lineno=1972, col_offset=31), lineno=1972, col_offset=0), Assign([Attribute(Name('Source_Tree', Load(), lineno=1973, col_offset=0), '_privpropdict', Store(), lineno=1973, col_offset=0)], Dict([Str('format', lineno=1974, col_offset=4), Str('name', lineno=1975, col_offset=4), Str('path', lineno=1976, col_offset=4), Str('path_kind', lineno=1977, col_offset=4)], [Name('_Prop_format', Load(), lineno=1974, col_offset=15), Name('_Prop_name', Load(), lineno=1975, col_offset=13), Name('_Prop_path', Load(), lineno=1976, col_offset=13), Name('_Prop_path_kind', Load(), lineno=1977, col_offset=18)], lineno=1973, col_offset=28), lineno=1973, col_offset=0), Assign([Attribute(Name('Source_Tree', Load(), lineno=1979, col_offset=0), '_privelemdict', Store(), lineno=1979, col_offset=0)], Dict([], [], lineno=1979, col_offset=28), lineno=1979, col_offset=0), Assign([Attribute(Name('Target_Settings', Load(), lineno=1981, col_offset=0), '_superclassnames', Store(), lineno=1981, col_offset=0)], List([], Load(), lineno=1981, col_offset=35), lineno=1981, col_offset=0), Assign([Attribute(Name('Target_Settings', Load(), lineno=1982, col_offset=0), '_privpropdict', Store(), lineno=1982, col_offset=0)], Dict([Str('Linker', lineno=1983, col_offset=4), Str('Output_Directory_Location', lineno=1984, col_offset=4), Str('Output_Directory_Origin', lineno=1985, col_offset=4), Str('Output_Directory_Path', lineno=1986, col_offset=4), Str('Post_Linker', lineno=1987, col_offset=4), Str('Pre_Linker', lineno=1988, col_offset=4), Str('Target_Name', lineno=1989, col_offset=4), Str('Use_Relative_Paths', lineno=1990, col_offset=4)], [Name('_Prop_Linker', Load(), lineno=1983, col_offset=15), Name('_Prop_Output_Directory_Location', Load(), lineno=1984, col_offset=34), Name('_Prop_Output_Directory_Origin', Load(), lineno=1985, col_offset=32), Name('_Prop_Output_Directory_Path', Load(), lineno=1986, col_offset=30), Name('_Prop_Post_Linker', Load(), lineno=1987, col_offset=20), Name('_Prop_Pre_Linker', Load(), lineno=1988, col_offset=19), Name('_Prop_Target_Name', Load(), lineno=1989, col_offset=20), Name('_Prop_Use_Relative_Paths', Load(), lineno=1990, col_offset=27)], lineno=1982, col_offset=32), lineno=1982, col_offset=0), Assign([Attribute(Name('Target_Settings', Load(), lineno=1992, col_offset=0), '_privelemdict', Store(), lineno=1992, col_offset=0)], Dict([], [], lineno=1992, col_offset=32), lineno=1992, col_offset=0), Assign([Attribute(Name('Target_Source_Trees', Load(), lineno=1994, col_offset=0), '_superclassnames', Store(), lineno=1994, col_offset=0)], List([], Load(), lineno=1994, col_offset=39), lineno=1994, col_offset=0), Assign([Attribute(Name('Target_Source_Trees', Load(), lineno=1995, col_offset=0), '_privpropdict', Store(), lineno=1995, col_offset=0)], Dict([Str('Source_Trees', lineno=1996, col_offset=4)], [Name('_Prop_Source_Trees', Load(), lineno=1996, col_offset=21)], lineno=1995, col_offset=36), lineno=1995, col_offset=0), Assign([Attribute(Name('Target_Source_Trees', Load(), lineno=1998, col_offset=0), '_privelemdict', Store(), lineno=1998, col_offset=0)], Dict([], [], lineno=1998, col_offset=36), lineno=1998, col_offset=0), Assign([Attribute(Name('VCS_Setup', Load(), lineno=2000, col_offset=0), '_superclassnames', Store(), lineno=2000, col_offset=0)], List([], Load(), lineno=2000, col_offset=29), lineno=2000, col_offset=0), Assign([Attribute(Name('VCS_Setup', Load(), lineno=2001, col_offset=0), '_privpropdict', Store(), lineno=2001, col_offset=0)], Dict([Str('Always_Prompt', lineno=2002, col_offset=4), Str('Auto_Connect', lineno=2003, col_offset=4), Str('Connection_Method', lineno=2004, col_offset=4), Str('Database_Path', lineno=2005, col_offset=4), Str('Local_Path', lineno=2006, col_offset=4), Str('Mount_Volume', lineno=2007, col_offset=4), Str('Password', lineno=2008, col_offset=4), Str('Store_Password', lineno=2009, col_offset=4), Str('Use_Global_Settings', lineno=2010, col_offset=4), Str('Username', lineno=2011, col_offset=4), Str('VCS_Active', lineno=2012, col_offset=4)], [Name('_Prop_Always_Prompt', Load(), lineno=2002, col_offset=22), Name('_Prop_Auto_Connect', Load(), lineno=2003, col_offset=21), Name('_Prop_Connection_Method', Load(), lineno=2004, col_offset=26), Name('_Prop_Database_Path', Load(), lineno=2005, col_offset=22), Name('_Prop_Local_Path', Load(), lineno=2006, col_offset=19), Name('_Prop_Mount_Volume', Load(), lineno=2007, col_offset=21), Name('_Prop_Password', Load(), lineno=2008, col_offset=17), Name('_Prop_Store_Password', Load(), lineno=2009, col_offset=23), Name('_Prop_Use_Global_Settings', Load(), lineno=2010, col_offset=28), Name('_Prop_Username', Load(), lineno=2011, col_offset=17), Name('_Prop_VCS_Active', Load(), lineno=2012, col_offset=19)], lineno=2001, col_offset=26), lineno=2001, col_offset=0), Assign([Attribute(Name('VCS_Setup', Load(), lineno=2014, col_offset=0), '_privelemdict', Store(), lineno=2014, col_offset=0)], Dict([], [], lineno=2014, col_offset=26), lineno=2014, col_offset=0), Assign([Attribute(Name('Font', Load(), lineno=2016, col_offset=0), '_superclassnames', Store(), lineno=2016, col_offset=0)], List([], Load(), lineno=2016, col_offset=24), lineno=2016, col_offset=0), Assign([Attribute(Name('Font', Load(), lineno=2017, col_offset=0), '_privpropdict', Store(), lineno=2017, col_offset=0)], Dict([Str('Auto_Indent', lineno=2018, col_offset=4), Str('Tab_Indents_Selection', lineno=2019, col_offset=4), Str('Tab_Inserts_Spaces', lineno=2020, col_offset=4), Str('Tab_Size', lineno=2021, col_offset=4), Str('Text_Font', lineno=2022, col_offset=4), Str('Text_Size', lineno=2023, col_offset=4)], [Name('_Prop_Auto_Indent', Load(), lineno=2018, col_offset=20), Name('_Prop_Tab_Indents_Selection', Load(), lineno=2019, col_offset=30), Name('_Prop_Tab_Inserts_Spaces', Load(), lineno=2020, col_offset=27), Name('_Prop_Tab_Size', Load(), lineno=2021, col_offset=17), Name('_Prop_Text_Font', Load(), lineno=2022, col_offset=18), Name('_Prop_Text_Size', Load(), lineno=2023, col_offset=18)], lineno=2017, col_offset=21), lineno=2017, col_offset=0), Assign([Attribute(Name('Font', Load(), lineno=2025, col_offset=0), '_privelemdict', Store(), lineno=2025, col_offset=0)], Dict([], [], lineno=2025, col_offset=21), lineno=2025, col_offset=0), Assign([Name('_Enum_Acce', Store(), lineno=2027, col_offset=0)], Dict([Str('public', lineno=2028, col_offset=4), Str('protected', lineno=2029, col_offset=4), Str('private', lineno=2030, col_offset=4)], [Str('Publ', lineno=2028, col_offset=15), Str('Prot', lineno=2029, col_offset=18), Str('Priv', lineno=2030, col_offset=16)], lineno=2027, col_offset=13), lineno=2027, col_offset=0), Assign([Name('_Enum_BXbr', Store(), lineno=2033, col_offset=0)], Dict([Str('Always_Build', lineno=2034, col_offset=4), Str('Ask_Build', lineno=2035, col_offset=4), Str('Never_Build', lineno=2036, col_offset=4)], [Str('BXb1', lineno=2034, col_offset=21), Str('BXb2', lineno=2035, col_offset=18), Str('BXb3', lineno=2036, col_offset=20)], lineno=2033, col_offset=13), lineno=2033, col_offset=0), Assign([Name('_Enum_DbSA', Store(), lineno=2039, col_offset=0)], Dict([Str('No_Action', lineno=2040, col_offset=4), Str('Hide_Windows', lineno=2041, col_offset=4), Str('Collapse_Windows', lineno=2042, col_offset=4), Str('Close_Windows', lineno=2043, col_offset=4)], [Str('DSA1', lineno=2040, col_offset=18), Str('DSA2', lineno=2041, col_offset=21), Str('DSA3', lineno=2042, col_offset=25), Str('DSA4', lineno=2043, col_offset=22)], lineno=2039, col_offset=13), lineno=2039, col_offset=0), Assign([Name('_Enum_DgBL', Store(), lineno=2046, col_offset=0)], Dict([Str('Always', lineno=2047, col_offset=4), Str('Never', lineno=2048, col_offset=4), Str('Ask', lineno=2049, col_offset=4)], [Str('DgB0', lineno=2047, col_offset=15), Str('DgB1', lineno=2048, col_offset=14), Str('DgB2', lineno=2049, col_offset=12)], lineno=2046, col_offset=13), lineno=2046, col_offset=0), Assign([Name('_Enum_ErrT', Store(), lineno=2052, col_offset=0)], Dict([Str('information', lineno=2053, col_offset=4), Str('compiler_warning', lineno=2054, col_offset=4), Str('compiler_error', lineno=2055, col_offset=4), Str('definition', lineno=2056, col_offset=4), Str('linker_warning', lineno=2057, col_offset=4), Str('linker_error', lineno=2058, col_offset=4), Str('find_result', lineno=2059, col_offset=4), Str('generic_error', lineno=2060, col_offset=4)], [Str('ErIn', lineno=2053, col_offset=20), Str('ErCW', lineno=2054, col_offset=25), Str('ErCE', lineno=2055, col_offset=23), Str('ErDf', lineno=2056, col_offset=19), Str('ErLW', lineno=2057, col_offset=23), Str('ErLE', lineno=2058, col_offset=21), Str('ErFn', lineno=2059, col_offset=20), Str('ErGn', lineno=2060, col_offset=22)], lineno=2052, col_offset=13), lineno=2052, col_offset=0), Assign([Name('_Enum_Inte', Store(), lineno=2063, col_offset=0)], Dict([Str('never_interact', lineno=2064, col_offset=4), Str('interact_with_self', lineno=2065, col_offset=4), Str('interact_with_local', lineno=2066, col_offset=4), Str('interact_with_all', lineno=2067, col_offset=4)], [Str('eNvr', lineno=2064, col_offset=23), Str('eInS', lineno=2065, col_offset=27), Str('eInL', lineno=2066, col_offset=28), Str('eInA', lineno=2067, col_offset=26)], lineno=2063, col_offset=13), lineno=2063, col_offset=0), Assign([Name('_Enum_Lang', Store(), lineno=2070, col_offset=0)], Dict([Str('C', lineno=2071, col_offset=4), Str('C_2b__2b_', lineno=2072, col_offset=4), Str('Pascal', lineno=2073, col_offset=4), Str('Object_Pascal', lineno=2074, col_offset=4), Str('Java', lineno=2075, col_offset=4), Str('Assembler', lineno=2076, col_offset=4), Str('Unknown', lineno=2077, col_offset=4)], [Str('LC  ', lineno=2071, col_offset=10), Str('LC++', lineno=2072, col_offset=18), Str('LP  ', lineno=2073, col_offset=15), Str('LP++', lineno=2074, col_offset=22), Str('LJav', lineno=2075, col_offset=13), Str('LAsm', lineno=2076, col_offset=18), Str('L?  ', lineno=2077, col_offset=16)], lineno=2070, col_offset=13), lineno=2070, col_offset=0), Assign([Name('_Enum_PPrm', Store(), lineno=2080, col_offset=0)], Dict([Str('absolute', lineno=2081, col_offset=4), Str('project_relative', lineno=2082, col_offset=4), Str('shell_relative', lineno=2083, col_offset=4), Str('system_relative', lineno=2084, col_offset=4), Str('root_relative', lineno=2085, col_offset=4)], [Str('Abso', lineno=2081, col_offset=17), Str('PRel', lineno=2082, col_offset=25), Str('SRel', lineno=2083, col_offset=23), Str('YRel', lineno=2084, col_offset=24), Str('RRel', lineno=2085, col_offset=22)], lineno=2080, col_offset=13), lineno=2080, col_offset=0), Assign([Name('_Enum_PXdg', Store(), lineno=2088, col_offset=0)], Dict([Str('Diagnose_None', lineno=2089, col_offset=4), Str('Diagnose_Errors', lineno=2090, col_offset=4), Str('Diagnose_All', lineno=2091, col_offset=4)], [Str('PXd1', lineno=2089, col_offset=22), Str('PXd2', lineno=2090, col_offset=24), Str('PXd3', lineno=2091, col_offset=21)], lineno=2088, col_offset=13), lineno=2088, col_offset=0), Assign([Name('_Enum_PthF', Store(), lineno=2094, col_offset=0)], Dict([Str('Generic_Path', lineno=2095, col_offset=4), Str('MacOS_Path', lineno=2096, col_offset=4), Str('Windows_Path', lineno=2097, col_offset=4), Str('Unix_Path', lineno=2098, col_offset=4)], [Str('PFGn', lineno=2095, col_offset=21), Str('PFMc', lineno=2096, col_offset=19), Str('PFWn', lineno=2097, col_offset=21), Str('PFUx', lineno=2098, col_offset=18)], lineno=2094, col_offset=13), lineno=2094, col_offset=0), Assign([Name('_Enum_RefP', Store(), lineno=2101, col_offset=0)], Dict([Str('Think_Reference', lineno=2102, col_offset=4), Str('QuickView', lineno=2103, col_offset=4)], [Str('DanR', lineno=2102, col_offset=24), Str('ALTV', lineno=2103, col_offset=18)], lineno=2101, col_offset=13), lineno=2101, col_offset=0), Assign([Name('_Enum_STKd', Store(), lineno=2106, col_offset=0)], Dict([Str('Absolute_Path', lineno=2107, col_offset=4), Str('Registry_Key', lineno=2108, col_offset=4), Str('Environment_Variable', lineno=2109, col_offset=4)], [Str('STK0', lineno=2107, col_offset=22), Str('STK1', lineno=2108, col_offset=21), Str('STK2', lineno=2109, col_offset=29)], lineno=2106, col_offset=13), lineno=2106, col_offset=0), Assign([Name('_Enum_SrcT', Store(), lineno=2112, col_offset=0)], Dict([Str('source', lineno=2113, col_offset=4), Str('unknown', lineno=2114, col_offset=4)], [Str('FTxt', lineno=2113, col_offset=15), Str('FUnk', lineno=2114, col_offset=16)], lineno=2112, col_offset=13), lineno=2112, col_offset=0), Assign([Name('_Enum_TmpB', Store(), lineno=2117, col_offset=0)], Dict([Str('User_Specified', lineno=2118, col_offset=4), Str('Default', lineno=2119, col_offset=4)], [Str('Usrs', lineno=2118, col_offset=23), Str('Dflt', lineno=2119, col_offset=16)], lineno=2117, col_offset=13), lineno=2117, col_offset=0), Assign([Name('_Enum_TxtF', Store(), lineno=2122, col_offset=0)], Dict([Str('MacOS', lineno=2123, col_offset=4), Str('DOS', lineno=2124, col_offset=4), Str('Unix', lineno=2125, col_offset=4)], [Str('TxF0', lineno=2123, col_offset=14), Str('TxF1', lineno=2124, col_offset=12), Str('TxF2', lineno=2125, col_offset=13)], lineno=2122, col_offset=13), lineno=2122, col_offset=0), Assign([Name('_Enum_savo', Store(), lineno=2128, col_offset=0)], Dict([Str('yes', lineno=2129, col_offset=4), Str('no', lineno=2130, col_offset=4), Str('ask', lineno=2131, col_offset=4)], [Str('yes ', lineno=2129, col_offset=12), Str('no  ', lineno=2130, col_offset=11), Str('ask ', lineno=2131, col_offset=12)], lineno=2128, col_offset=13), lineno=2128, col_offset=0), Assign([Name('_classdeclarations', Store(), lineno=2138, col_offset=0)], Dict([Str('BRKW', lineno=2139, col_offset=4), Str('BSTG', lineno=2140, col_offset=4), Str('BsCl', lineno=2141, col_offset=4), Str('CUKW', lineno=2142, col_offset=4), Str('Cata', lineno=2143, col_offset=4), Str('Clas', lineno=2144, col_offset=4), Str('DbDS', lineno=2145, col_offset=4), Str('DbGL', lineno=2146, col_offset=4), Str('DbTG', lineno=2147, col_offset=4), Str('DbWN', lineno=2148, col_offset=4), Str('DtMb', lineno=2149, col_offset=4), Str('EDTR', lineno=2150, col_offset=4), Str('EnvV', lineno=2151, col_offset=4), Str('ErrM', lineno=2152, col_offset=4), Str('FDef', lineno=2153, col_offset=4), Str('FLMP', lineno=2154, col_offset=4), Str('FMap', lineno=2155, col_offset=4), Str('GSTs', lineno=2156, col_offset=4), Str('GXTR', lineno=2157, col_offset=4), Str('LXTR', lineno=2158, col_offset=4), Str('MbFn', lineno=2159, col_offset=4), Str('PATH', lineno=2160, col_offset=4), Str('PInf', lineno=2161, col_offset=4), Str('PSTG', lineno=2162, col_offset=4), Str('RSTG', lineno=2163, col_offset=4), Str('RlPt', lineno=2164, col_offset=4), Str('SFit', lineno=2165, col_offset=4), Str('SHFL', lineno=2166, col_offset=4), Str('SNTX', lineno=2167, col_offset=4), Str('Seg ', lineno=2168, col_offset=4), Str('SrcF', lineno=2169, col_offset=4), Str('SrcT', lineno=2170, col_offset=4), Str('TARG', lineno=2171, col_offset=4), Str('TSTs', lineno=2172, col_offset=4), Str('VCSs', lineno=2173, col_offset=4), Str('mFNT', lineno=2174, col_offset=4)], [Name('Browser_Coloring', Load(), lineno=2139, col_offset=13), Name('Build_Settings', Load(), lineno=2140, col_offset=13), Name('base_class', Load(), lineno=2141, col_offset=13), Name('Custom_Keywords', Load(), lineno=2142, col_offset=13), Name('browser_catalog', Load(), lineno=2143, col_offset=13), Name('class_', Load(), lineno=2144, col_offset=13), Name('Debugger_Display', Load(), lineno=2145, col_offset=13), Name('Debugger_Global', Load(), lineno=2146, col_offset=13), Name('Debugger_Target', Load(), lineno=2147, col_offset=13), Name('Debugger_Windowing', Load(), lineno=2148, col_offset=13), Name('data_member', Load(), lineno=2149, col_offset=13), Name('Editor', Load(), lineno=2150, col_offset=13), Name('Environment_Variable', Load(), lineno=2151, col_offset=13), Name('Error_Information', Load(), lineno=2152, col_offset=13), Name('Function_Information', Load(), lineno=2153, col_offset=13), Name('File_Mappings', Load(), lineno=2154, col_offset=13), Name('File_Mapping', Load(), lineno=2155, col_offset=13), Name('Global_Source_Trees', Load(), lineno=2156, col_offset=13), Name('Extras', Load(), lineno=2157, col_offset=13), Name('Build_Extras', Load(), lineno=2158, col_offset=13), Name('member_function', Load(), lineno=2159, col_offset=13), Name('Access_Paths', Load(), lineno=2160, col_offset=13), Name('Path_Information', Load(), lineno=2161, col_offset=13), Name('Plugin_Settings', Load(), lineno=2162, col_offset=13), Name('Runtime_Settings', Load(), lineno=2163, col_offset=13), Name('Relative_Path', Load(), lineno=2164, col_offset=13), Name('Shielded_Folder', Load(), lineno=2165, col_offset=13), Name('Shielded_Folders', Load(), lineno=2166, col_offset=13), Name('Syntax_Coloring', Load(), lineno=2167, col_offset=13), Name('Segment', Load(), lineno=2168, col_offset=13), Name('ProjectFile', Load(), lineno=2169, col_offset=13), Name('Source_Tree', Load(), lineno=2170, col_offset=13), Name('Target_Settings', Load(), lineno=2171, col_offset=13), Name('Target_Source_Trees', Load(), lineno=2172, col_offset=13), Name('VCS_Setup', Load(), lineno=2173, col_offset=13), Name('Font', Load(), lineno=2174, col_offset=13)], lineno=2138, col_offset=21), lineno=2138, col_offset=0), Assign([Name('_propdeclarations', Store(), lineno=2177, col_offset=0)], Dict([Str('Acce', lineno=2178, col_offset=4), Str('BW00', lineno=2179, col_offset=4), Str('BW01', lineno=2180, col_offset=4), Str('BW02', lineno=2181, col_offset=4), Str('BW03', lineno=2182, col_offset=4), Str('BW04', lineno=2183, col_offset=4), Str('BW05', lineno=2184, col_offset=4), Str('BW06', lineno=2185, col_offset=4), Str('BW07', lineno=2186, col_offset=4), Str('BW08', lineno=2187, col_offset=4), Str('BW10', lineno=2188, col_offset=4), Str('BX01', lineno=2189, col_offset=4), Str('BX02', lineno=2190, col_offset=4), Str('BX03', lineno=2191, col_offset=4), Str('BX04', lineno=2192, col_offset=4), Str('BX05', lineno=2193, col_offset=4), Str('BX06', lineno=2194, col_offset=4), Str('BX07', lineno=2195, col_offset=4), Str('Bfor', lineno=2196, col_offset=4), Str('CSiz', lineno=2197, col_offset=4), Str('Clas', lineno=2198, col_offset=4), Str('DSiz', lineno=2199, col_offset=4), Str('Db01', lineno=2200, col_offset=4), Str('Db02', lineno=2201, col_offset=4), Str('Db03', lineno=2202, col_offset=4), Str('Db04', lineno=2203, col_offset=4), Str('Db05', lineno=2204, col_offset=4), Str('Db06', lineno=2205, col_offset=4), Str('Db07', lineno=2206, col_offset=4), Str('Db08', lineno=2207, col_offset=4), Str('Db09', lineno=2208, col_offset=4), Str('Db10', lineno=2209, col_offset=4), Str('DcEn', lineno=2210, col_offset=4), Str('DcFl', lineno=2211, col_offset=4), Str('DcSt', lineno=2212, col_offset=4), Str('DfEn', lineno=2213, col_offset=4), Str('DfFl', lineno=2214, col_offset=4), Str('DfSt', lineno=2215, col_offset=4), Str('Dg01', lineno=2216, col_offset=4), Str('Dg02', lineno=2217, col_offset=4), Str('Dg03', lineno=2218, col_offset=4), Str('Dg04', lineno=2219, col_offset=4), Str('Dg05', lineno=2220, col_offset=4), Str('Dg06', lineno=2221, col_offset=4), Str('Dg07', lineno=2222, col_offset=4), Str('Dg11', lineno=2223, col_offset=4), Str('Dg12', lineno=2224, col_offset=4), Str('Dg13', lineno=2225, col_offset=4), Str('Dt02', lineno=2226, col_offset=4), Str('Dt08', lineno=2227, col_offset=4), Str('Dt09', lineno=2228, col_offset=4), Str('Dt10', lineno=2229, col_offset=4), Str('Dt13', lineno=2230, col_offset=4), Str('Dt14', lineno=2231, col_offset=4), Str('Dt15', lineno=2232, col_offset=4), Str('Dt16', lineno=2233, col_offset=4), Str('Dw01', lineno=2234, col_offset=4), Str('Dw02', lineno=2235, col_offset=4), Str('ED01', lineno=2236, col_offset=4), Str('ED02', lineno=2237, col_offset=4), Str('ED03', lineno=2238, col_offset=4), Str('ED04', lineno=2239, col_offset=4), Str('ED06', lineno=2240, col_offset=4), Str('ED07', lineno=2241, col_offset=4), Str('ED08', lineno=2242, col_offset=4), Str('ED09', lineno=2243, col_offset=4), Str('ED10', lineno=2244, col_offset=4), Str('ED12', lineno=2245, col_offset=4), Str('ED13', lineno=2246, col_offset=4), Str('ED14', lineno=2247, col_offset=4), Str('ED15', lineno=2248, col_offset=4), Str('ED16', lineno=2249, col_offset=4), Str('ED17', lineno=2250, col_offset=4), Str('EX04', lineno=2251, col_offset=4), Str('EX07', lineno=2252, col_offset=4), Str('EX08', lineno=2253, col_offset=4), Str('EX09', lineno=2254, col_offset=4), Str('EX10', lineno=2255, col_offset=4), Str('EX11', lineno=2256, col_offset=4), Str('EX12', lineno=2257, col_offset=4), Str('EX16', lineno=2258, col_offset=4), Str('EX17', lineno=2259, col_offset=4), Str('EX18', lineno=2260, col_offset=4), Str('EX19', lineno=2261, col_offset=4), Str('EX30', lineno=2262, col_offset=4), Str('EX31', lineno=2263, col_offset=4), Str('ErrL', lineno=2264, col_offset=4), Str('ErrS', lineno=2265, col_offset=4), Str('ErrT', lineno=2266, col_offset=4), Str('FMps', lineno=2267, col_offset=4), Str('FN01', lineno=2268, col_offset=4), Str('FN02', lineno=2269, col_offset=4), Str('FN03', lineno=2270, col_offset=4), Str('FN04', lineno=2271, col_offset=4), Str('Frmt', lineno=2272, col_offset=4), Str('Frmw', lineno=2273, col_offset=4), Str('GH01', lineno=2274, col_offset=4), Str('GH02', lineno=2275, col_offset=4), Str('GH03', lineno=2276, col_offset=4), Str('GH04', lineno=2277, col_offset=4), Str('GH05', lineno=2278, col_offset=4), Str('GH06', lineno=2279, col_offset=4), Str('GH07', lineno=2280, col_offset=4), Str('GH08', lineno=2281, col_offset=4), Str('HstF', lineno=2282, col_offset=4), Str('IncF', lineno=2283, col_offset=4), Str('Kind', lineno=2284, col_offset=4), Str('Lang', lineno=2285, col_offset=4), Str('NumF', lineno=2286, col_offset=4), Str('Orig', lineno=2287, col_offset=4), Str('PA01', lineno=2288, col_offset=4), Str('PA02', lineno=2289, col_offset=4), Str('PA03', lineno=2290, col_offset=4), Str('PA04', lineno=2291, col_offset=4), Str('PA05', lineno=2292, col_offset=4), Str('PLck', lineno=2293, col_offset=4), Str('PR04', lineno=2294, col_offset=4), Str('PX01', lineno=2295, col_offset=4), Str('PX02', lineno=2296, col_offset=4), Str('Path', lineno=2297, col_offset=4), Str('Prel', lineno=2298, col_offset=4), Str('Prot', lineno=2299, col_offset=4), Str('Purg', lineno=2300, col_offset=4), Str('RS01', lineno=2301, col_offset=4), Str('RS02', lineno=2302, col_offset=4), Str('RS03', lineno=2303, col_offset=4), Str('RS04', lineno=2304, col_offset=4), Str('Recu', lineno=2305, col_offset=4), Str('Root', lineno=2306, col_offset=4), Str('SF01', lineno=2307, col_offset=4), Str('SF02', lineno=2308, col_offset=4), Str('SF03', lineno=2309, col_offset=4), Str('SFis', lineno=2310, col_offset=4), Str('ST01', lineno=2311, col_offset=4), Str('SrcT', lineno=2312, col_offset=4), Str('Stat', lineno=2313, col_offset=4), Str('SubA', lineno=2314, col_offset=4), Str('SubC', lineno=2315, col_offset=4), Str('SymG', lineno=2316, col_offset=4), Str('SysH', lineno=2317, col_offset=4), Str('TA01', lineno=2318, col_offset=4), Str('TA02', lineno=2319, col_offset=4), Str('TA03', lineno=2320, col_offset=4), Str('TA04', lineno=2321, col_offset=4), Str('TA05', lineno=2322, col_offset=4), Str('TA06', lineno=2323, col_offset=4), Str('TA07', lineno=2324, col_offset=4), Str('TA09', lineno=2325, col_offset=4), Str('TA10', lineno=2326, col_offset=4), Str('TA11', lineno=2327, col_offset=4), Str('TA12', lineno=2328, col_offset=4), Str('TA13', lineno=2329, col_offset=4), Str('TA15', lineno=2330, col_offset=4), Str('TA16', lineno=2331, col_offset=4), Str('UpTD', lineno=2332, col_offset=4), Str('VC01', lineno=2333, col_offset=4), Str('VC02', lineno=2334, col_offset=4), Str('VC03', lineno=2335, col_offset=4), Str('VC04', lineno=2336, col_offset=4), Str('VC05', lineno=2337, col_offset=4), Str('VC06', lineno=2338, col_offset=4), Str('VC07', lineno=2339, col_offset=4), Str('VC08', lineno=2340, col_offset=4), Str('VC09', lineno=2341, col_offset=4), Str('VC10', lineno=2342, col_offset=4), Str('VC11', lineno=2343, col_offset=4), Str('Valu', lineno=2344, col_offset=4), Str('Virt', lineno=2345, col_offset=4), Str('Weak', lineno=2346, col_offset=4), Str('file', lineno=2347, col_offset=4), Str('pnam', lineno=2348, col_offset=4), Str('ptps', lineno=2349, col_offset=4), Str('ptxf', lineno=2350, col_offset=4)], [Name('_Prop_access', Load(), lineno=2178, col_offset=13), Name('_Prop_Browser_Keywords', Load(), lineno=2179, col_offset=13), Name('_Prop_Classes_Color', Load(), lineno=2180, col_offset=13), Name('_Prop_Constants_Color', Load(), lineno=2181, col_offset=13), Name('_Prop_Enums_Color', Load(), lineno=2182, col_offset=13), Name('_Prop_Functions_Color', Load(), lineno=2183, col_offset=13), Name('_Prop_Globals_Color', Load(), lineno=2184, col_offset=13), Name('_Prop_Macros_Color', Load(), lineno=2185, col_offset=13), Name('_Prop_Templates_Color', Load(), lineno=2186, col_offset=13), Name('_Prop_Typedefs_Color', Load(), lineno=2187, col_offset=13), Name('_Prop_Template_Commands_in_Menu', Load(), lineno=2188, col_offset=13), Name('_Prop_Completion_Sound', Load(), lineno=2189, col_offset=13), Name('_Prop_Success_Sound', Load(), lineno=2190, col_offset=13), Name('_Prop_Failure_Sound', Load(), lineno=2191, col_offset=13), Name('_Prop_Build_Before_Running', Load(), lineno=2192, col_offset=13), Name('_Prop_Include_Cache_Size', Load(), lineno=2193, col_offset=13), Name('_Prop_Compiler_Thread_Stack_Size', Load(), lineno=2194, col_offset=13), Name('_Prop_Save_Before_Building', Load(), lineno=2195, col_offset=13), Name('_Prop_initialize_before', Load(), lineno=2196, col_offset=13), Name('_Prop_codesize', Load(), lineno=2197, col_offset=13), Name('_Prop_class_', Load(), lineno=2198, col_offset=13), Name('_Prop_datasize', Load(), lineno=2199, col_offset=13), Name('_Prop_Show_Variable_Types', Load(), lineno=2200, col_offset=13), Name('_Prop_Sort_By_Method', Load(), lineno=2201, col_offset=13), Name('_Prop_Use_RTTI', Load(), lineno=2202, col_offset=13), Name('_Prop_Threads_in_Window', Load(), lineno=2203, col_offset=13), Name('_Prop_Variable_Hints', Load(), lineno=2204, col_offset=13), Name('_Prop_Watchpoint_Hilite', Load(), lineno=2205, col_offset=13), Name('_Prop_Variable_Changed_Hilite', Load(), lineno=2206, col_offset=13), Name('_Prop_Default_Array_Size', Load(), lineno=2207, col_offset=13), Name('_Prop_Show_Locals', Load(), lineno=2208, col_offset=13), Name('_Prop_Show_As_Decimal', Load(), lineno=2209, col_offset=13), Name('_Prop_declaration_end_offset', Load(), lineno=2210, col_offset=13), Name('_Prop_declaration_file', Load(), lineno=2211, col_offset=13), Name('_Prop_declaration_start_offset', Load(), lineno=2212, col_offset=13), Name('_Prop_implementation_end_offset', Load(), lineno=2213, col_offset=13), Name('_Prop_implementation_file', Load(), lineno=2214, col_offset=13), Name('_Prop_implementation_start_offset', Load(), lineno=2215, col_offset=13), Name('_Prop_Ignore_Mod_Dates', Load(), lineno=2216, col_offset=13), Name('_Prop_Open_All_Classes', Load(), lineno=2217, col_offset=13), Name('_Prop_Launch_Apps_on_Open', Load(), lineno=2218, col_offset=13), Name('_Prop_Confirm_Kill', Load(), lineno=2219, col_offset=13), Name('_Prop_Stop_at_Main', Load(), lineno=2220, col_offset=13), Name('_Prop_Select_Stack_Crawl', Load(), lineno=2221, col_offset=13), Name('_Prop_Dont_Step_in_Runtime', Load(), lineno=2222, col_offset=13), Name('_Prop_Auto_Target_Libraries', Load(), lineno=2223, col_offset=13), Name('_Prop_Cache_Edited_Files', Load(), lineno=2224, col_offset=13), Name('_Prop_File_Cache_Duration', Load(), lineno=2225, col_offset=13), Name('_Prop_Log_System_Messages', Load(), lineno=2226, col_offset=13), Name('_Prop_Update_Data_While_Running', Load(), lineno=2227, col_offset=13), Name('_Prop_Data_Update_Interval', Load(), lineno=2228, col_offset=13), Name('_Prop_Relocated_Executable_Path', Load(), lineno=2229, col_offset=13), Name('_Prop_Stop_at_temp_breakpoint', Load(), lineno=2230, col_offset=13), Name('_Prop_Temp_breakpoint_names', Load(), lineno=2231, col_offset=13), Name('_Prop_Cache_symbolics', Load(), lineno=2232, col_offset=13), Name('_Prop_Temp_Breakpoint_Type', Load(), lineno=2233, col_offset=13), Name('_Prop_Debugging_Start_Action', Load(), lineno=2234, col_offset=13), Name('_Prop_Do_Nothing_To_Projects', Load(), lineno=2235, col_offset=13), Name('_Prop_Flash_Delay', Load(), lineno=2236, col_offset=13), Name('_Prop_Dynamic_Scroll', Load(), lineno=2237, col_offset=13), Name('_Prop_Balance', Load(), lineno=2238, col_offset=13), Name('_Prop_Use_Drag__26__Drop_Editing', Load(), lineno=2239, col_offset=13), Name('_Prop_Sort_Function_Popup', Load(), lineno=2240, col_offset=13), Name('_Prop_Use_Multiple_Undo', Load(), lineno=2241, col_offset=13), Name('_Prop_Remember_Font', Load(), lineno=2242, col_offset=13), Name('_Prop_Remember_Selection', Load(), lineno=2243, col_offset=13), Name('_Prop_Remember_Window', Load(), lineno=2244, col_offset=13), Name('_Prop_Main_Text_Color', Load(), lineno=2245, col_offset=13), Name('_Prop_Background_Color', Load(), lineno=2246, col_offset=13), Name('_Prop_Context_Popup_Delay', Load(), lineno=2247, col_offset=13), Name('_Prop_Relaxed_C_Popup_Parsing', Load(), lineno=2248, col_offset=13), Name('_Prop_Left_Margin_Line_Select', Load(), lineno=2249, col_offset=13), Name('_Prop_Default_Text_File_Format', Load(), lineno=2250, col_offset=13), Name('_Prop_Modification_Date_Caching', Load(), lineno=2251, col_offset=13), Name('_Prop_Full_Screen_Zoom', Load(), lineno=2252, col_offset=13), Name('_Prop_External_Reference', Load(), lineno=2253, col_offset=13), Name('_Prop_Browser_Active', Load(), lineno=2254, col_offset=13), Name('_Prop_Use_Editor_Extensions', Load(), lineno=2255, col_offset=13), Name('_Prop_Use_External_Editor', Load(), lineno=2256, col_offset=13), Name('_Prop_Use_Script_Menu', Load(), lineno=2257, col_offset=13), Name('_Prop_Recent_Editor_Count', Load(), lineno=2258, col_offset=13), Name('_Prop_Recent_Project_Count', Load(), lineno=2259, col_offset=13), Name('_Prop_Use_ToolServer_Menu', Load(), lineno=2260, col_offset=13), Name('_Prop_Automatic_Toolbar_Help', Load(), lineno=2261, col_offset=13), Name('_Prop_Dump_Browser_Info', Load(), lineno=2262, col_offset=13), Name('_Prop_Cache_Subproject_Data', Load(), lineno=2263, col_offset=13), Name('_Prop_lineNumber', Load(), lineno=2264, col_offset=13), Name('_Prop_message', Load(), lineno=2265, col_offset=13), Name('_Prop_messageKind', Load(), lineno=2266, col_offset=13), Name('_Prop_Mappings', Load(), lineno=2267, col_offset=13), Name('_Prop_Auto_Indent', Load(), lineno=2268, col_offset=13), Name('_Prop_Tab_Size', Load(), lineno=2269, col_offset=13), Name('_Prop_Tab_Indents_Selection', Load(), lineno=2270, col_offset=13), Name('_Prop_Tab_Inserts_Spaces', Load(), lineno=2271, col_offset=13), Name('_Prop_format', Load(), lineno=2272, col_offset=13), Name('_Prop_framework', Load(), lineno=2273, col_offset=13), Name('_Prop_Syntax_Coloring', Load(), lineno=2274, col_offset=13), Name('_Prop_Comment_Color', Load(), lineno=2275, col_offset=13), Name('_Prop_Keyword_Color', Load(), lineno=2276, col_offset=13), Name('_Prop_String_Color', Load(), lineno=2277, col_offset=13), Name('_Prop_Custom_Color_1', Load(), lineno=2278, col_offset=13), Name('_Prop_Custom_Color_2', Load(), lineno=2279, col_offset=13), Name('_Prop_Custom_Color_3', Load(), lineno=2280, col_offset=13), Name('_Prop_Custom_Color_4', Load(), lineno=2281, col_offset=13), Name('_Prop_host_flags', Load(), lineno=2282, col_offset=13), Name('_Prop_includes', Load(), lineno=2283, col_offset=13), Name('_Prop_path_kind', Load(), lineno=2284, col_offset=13), Name('_Prop_language', Load(), lineno=2285, col_offset=13), Name('_Prop_filecount', Load(), lineno=2286, col_offset=13), Name('_Prop_origin', Load(), lineno=2287, col_offset=13), Name('_Prop_User_Paths', Load(), lineno=2288, col_offset=13), Name('_Prop_Always_Full_Search', Load(), lineno=2289, col_offset=13), Name('_Prop_System_Paths', Load(), lineno=2290, col_offset=13), Name('_Prop_Convert_Paths', Load(), lineno=2291, col_offset=13), Name('_Prop_Require_Framework_Includes', Load(), lineno=2292, col_offset=13), Name('_Prop_seg_2d_locked', Load(), lineno=2293, col_offset=13), Name('_Prop_File_Type', Load(), lineno=2294, col_offset=13), Name('_Prop_Plugin_Diagnostics_Level', Load(), lineno=2295, col_offset=13), Name('_Prop_Disable_Third_Party_COM_Plugins', Load(), lineno=2296, col_offset=13), Name('_Prop_path', Load(), lineno=2297, col_offset=13), Name('_Prop_seg_2d_preloaded', Load(), lineno=2298, col_offset=13), Name('_Prop_seg_2d_protected', Load(), lineno=2299, col_offset=13), Name('_Prop_seg_2d_purgeable', Load(), lineno=2300, col_offset=13), Name('_Prop_Host_Application', Load(), lineno=2301, col_offset=13), Name('_Prop_Command_Line_Arguments', Load(), lineno=2302, col_offset=13), Name('_Prop_Working_Directory', Load(), lineno=2303, col_offset=13), Name('_Prop_Environment_Variables', Load(), lineno=2304, col_offset=13), Name('_Prop_recursive', Load(), lineno=2305, col_offset=13), Name('_Prop_root', Load(), lineno=2306, col_offset=13), Name('_Prop_Expression_To_Match', Load(), lineno=2307, col_offset=13), Name('_Prop_Skip_Project_Operations', Load(), lineno=2308, col_offset=13), Name('_Prop_Skip_Find_And_Compare_Operations', Load(), lineno=2309, col_offset=13), Name('_Prop_Shielded_Items', Load(), lineno=2310, col_offset=13), Name('_Prop_Source_Trees', Load(), lineno=2311, col_offset=13), Name('_Prop_filetype', Load(), lineno=2312, col_offset=13), Name('_Prop_static', Load(), lineno=2313, col_offset=13), Name('_Prop_all_subclasses', Load(), lineno=2314, col_offset=13), Name('_Prop_subclasses', Load(), lineno=2315, col_offset=13), Name('_Prop_symbols', Load(), lineno=2316, col_offset=13), Name('_Prop_seg_2d_system_heap', Load(), lineno=2317, col_offset=13), Name('_Prop_Linker', Load(), lineno=2318, col_offset=13), Name('_Prop_Extension', Load(), lineno=2319, col_offset=13), Name('_Prop_Precompiled', Load(), lineno=2320, col_offset=13), Name('_Prop_Resource_File', Load(), lineno=2321, col_offset=13), Name('_Prop_Launchable', Load(), lineno=2322, col_offset=13), Name('_Prop_Ignored_by_Make', Load(), lineno=2323, col_offset=13), Name('_Prop_Compiler', Load(), lineno=2324, col_offset=13), Name('_Prop_Post_Linker', Load(), lineno=2325, col_offset=13), Name('_Prop_Target_Name', Load(), lineno=2326, col_offset=13), Name('_Prop_Output_Directory_Path', Load(), lineno=2327, col_offset=13), Name('_Prop_Output_Directory_Origin', Load(), lineno=2328, col_offset=13), Name('_Prop_Pre_Linker', Load(), lineno=2329, col_offset=13), Name('_Prop_Use_Relative_Paths', Load(), lineno=2330, col_offset=13), Name('_Prop_Output_Directory_Location', Load(), lineno=2331, col_offset=13), Name('_Prop_up_to_date', Load(), lineno=2332, col_offset=13), Name('_Prop_VCS_Active', Load(), lineno=2333, col_offset=13), Name('_Prop_Connection_Method', Load(), lineno=2334, col_offset=13), Name('_Prop_Username', Load(), lineno=2335, col_offset=13), Name('_Prop_Password', Load(), lineno=2336, col_offset=13), Name('_Prop_Auto_Connect', Load(), lineno=2337, col_offset=13), Name('_Prop_Store_Password', Load(), lineno=2338, col_offset=13), Name('_Prop_Always_Prompt', Load(), lineno=2339, col_offset=13), Name('_Prop_Mount_Volume', Load(), lineno=2340, col_offset=13), Name('_Prop_Database_Path', Load(), lineno=2341, col_offset=13), Name('_Prop_Local_Path', Load(), lineno=2342, col_offset=13), Name('_Prop_Use_Global_Settings', Load(), lineno=2343, col_offset=13), Name('_Prop_value', Load(), lineno=2344, col_offset=13), Name('_Prop_virtual', Load(), lineno=2345, col_offset=13), Name('_Prop_weak_link', Load(), lineno=2346, col_offset=13), Name('_Prop_disk_file', Load(), lineno=2347, col_offset=13), Name('_Prop_name', Load(), lineno=2348, col_offset=13), Name('_Prop_Text_Size', Load(), lineno=2349, col_offset=13), Name('_Prop_Text_Font', Load(), lineno=2350, col_offset=13)], lineno=2177, col_offset=20), lineno=2177, col_offset=0), Assign([Name('_compdeclarations', Store(), lineno=2353, col_offset=0)], Dict([], [], lineno=2353, col_offset=20), lineno=2353, col_offset=0), Assign([Name('_enumdeclarations', Store(), lineno=2356, col_offset=0)], Dict([Str('Acce', lineno=2357, col_offset=4), Str('BXbr', lineno=2358, col_offset=4), Str('DbSA', lineno=2359, col_offset=4), Str('DgBL', lineno=2360, col_offset=4), Str('ErrT', lineno=2361, col_offset=4), Str('Inte', lineno=2362, col_offset=4), Str('Lang', lineno=2363, col_offset=4), Str('PPrm', lineno=2364, col_offset=4), Str('PXdg', lineno=2365, col_offset=4), Str('PthF', lineno=2366, col_offset=4), Str('RefP', lineno=2367, col_offset=4), Str('STKd', lineno=2368, col_offset=4), Str('SrcT', lineno=2369, col_offset=4), Str('TmpB', lineno=2370, col_offset=4), Str('TxtF', lineno=2371, col_offset=4), Str('savo', lineno=2372, col_offset=4)], [Name('_Enum_Acce', Load(), lineno=2357, col_offset=13), Name('_Enum_BXbr', Load(), lineno=2358, col_offset=13), Name('_Enum_DbSA', Load(), lineno=2359, col_offset=13), Name('_Enum_DgBL', Load(), lineno=2360, col_offset=13), Name('_Enum_ErrT', Load(), lineno=2361, col_offset=13), Name('_Enum_Inte', Load(), lineno=2362, col_offset=13), Name('_Enum_Lang', Load(), lineno=2363, col_offset=13), Name('_Enum_PPrm', Load(), lineno=2364, col_offset=13), Name('_Enum_PXdg', Load(), lineno=2365, col_offset=13), Name('_Enum_PthF', Load(), lineno=2366, col_offset=13), Name('_Enum_RefP', Load(), lineno=2367, col_offset=13), Name('_Enum_STKd', Load(), lineno=2368, col_offset=13), Name('_Enum_SrcT', Load(), lineno=2369, col_offset=13), Name('_Enum_TmpB', Load(), lineno=2370, col_offset=13), Name('_Enum_TxtF', Load(), lineno=2371, col_offset=13), Name('_Enum_savo', Load(), lineno=2372, col_offset=13)], lineno=2356, col_offset=20), lineno=2356, col_offset=0)])
