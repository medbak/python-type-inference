Module([Expr(Str("distutils.command.install_lib\n\nImplements the Distutils 'install_lib' command\n(install all Python modules).", lineno=4, col_offset=-1), lineno=4, col_offset=-1), Assign([Name('__revision__', Store(), lineno=6, col_offset=0)], Str('$Id: install_lib.py 75671 2009-10-24 15:51:30Z tarek.ziade $', lineno=6, col_offset=15), lineno=6, col_offset=0), Import([alias('os', None)], lineno=8, col_offset=0), Import([alias('sys', None)], lineno=9, col_offset=0), ImportFrom('distutils.core', [alias('Command', None)], 0, lineno=11, col_offset=0), ImportFrom('distutils.errors', [alias('DistutilsOptionError', None)], 0, lineno=12, col_offset=0), If(Call(Name('hasattr', Load(), lineno=16, col_offset=3), [Name('os', Load(), lineno=16, col_offset=11), Str('extsep', lineno=16, col_offset=15)], [], None, None, lineno=16, col_offset=3), [Assign([Name('PYTHON_SOURCE_EXTENSION', Store(), lineno=17, col_offset=4)], BinOp(Attribute(Name('os', Load(), lineno=17, col_offset=30), 'extsep', Load(), lineno=17, col_offset=30), Add(), Str('py', lineno=17, col_offset=42), lineno=17, col_offset=30), lineno=17, col_offset=4)], [Assign([Name('PYTHON_SOURCE_EXTENSION', Store(), lineno=19, col_offset=4)], Str('.py', lineno=19, col_offset=30), lineno=19, col_offset=4)], lineno=16, col_offset=0), ClassDef('install_lib', [Name('Command', Load(), lineno=21, col_offset=18)], [Assign([Name('description', Store(), lineno=23, col_offset=4)], Str('install all Python modules (extensions and pure Python)', lineno=23, col_offset=18), lineno=23, col_offset=4), Assign([Name('user_options', Store(), lineno=40, col_offset=4)], List([Tuple([Str('install-dir=', lineno=41, col_offset=9), Str('d', lineno=41, col_offset=25), Str('directory to install to', lineno=41, col_offset=30)], Load(), lineno=41, col_offset=9), Tuple([Str('build-dir=', lineno=42, col_offset=9), Str('b', lineno=42, col_offset=22), Str('build directory (where to install from)', lineno=42, col_offset=27)], Load(), lineno=42, col_offset=9), Tuple([Str('force', lineno=43, col_offset=9), Str('f', lineno=43, col_offset=18), Str('force installation (overwrite existing files)', lineno=43, col_offset=23)], Load(), lineno=43, col_offset=9), Tuple([Str('compile', lineno=44, col_offset=9), Str('c', lineno=44, col_offset=20), Str('compile .py to .pyc [default]', lineno=44, col_offset=25)], Load(), lineno=44, col_offset=9), Tuple([Str('no-compile', lineno=45, col_offset=9), Name('None', Load(), lineno=45, col_offset=23), Str("don't compile .py files", lineno=45, col_offset=29)], Load(), lineno=45, col_offset=9), Tuple([Str('optimize=', lineno=46, col_offset=9), Str('O', lineno=46, col_offset=22), Str('also compile with optimization: -O1 for "python -O", -O2 for "python -OO", and -O0 to disable [default: -O0]', lineno=47, col_offset=9)], Load(), lineno=46, col_offset=9), Tuple([Str('skip-build', lineno=49, col_offset=9), Name('None', Load(), lineno=49, col_offset=23), Str('skip the build steps', lineno=49, col_offset=29)], Load(), lineno=49, col_offset=9)], Load(), lineno=40, col_offset=19), lineno=40, col_offset=4), Assign([Name('boolean_options', Store(), lineno=52, col_offset=4)], List([Str('force', lineno=52, col_offset=23), Str('compile', lineno=52, col_offset=32), Str('skip-build', lineno=52, col_offset=43)], Load(), lineno=52, col_offset=22), lineno=52, col_offset=4), Assign([Name('negative_opt', Store(), lineno=53, col_offset=4)], Dict([Str('no-compile', lineno=53, col_offset=20)], [Str('compile', lineno=53, col_offset=35)], lineno=53, col_offset=19), lineno=53, col_offset=4), FunctionDef('initialize_options', arguments([Name('self', Param(), lineno=55, col_offset=27)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=57, col_offset=8), 'install_dir', Store(), lineno=57, col_offset=8)], Name('None', Load(), lineno=57, col_offset=27), lineno=57, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=58, col_offset=8), 'build_dir', Store(), lineno=58, col_offset=8)], Name('None', Load(), lineno=58, col_offset=25), lineno=58, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=59, col_offset=8), 'force', Store(), lineno=59, col_offset=8)], Num(0, lineno=59, col_offset=21), lineno=59, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=60, col_offset=8), 'compile', Store(), lineno=60, col_offset=8)], Name('None', Load(), lineno=60, col_offset=23), lineno=60, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=61, col_offset=8), 'optimize', Store(), lineno=61, col_offset=8)], Name('None', Load(), lineno=61, col_offset=24), lineno=61, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=62, col_offset=8), 'skip_build', Store(), lineno=62, col_offset=8)], Name('None', Load(), lineno=62, col_offset=26), lineno=62, col_offset=8)], [], lineno=55, col_offset=4), FunctionDef('finalize_options', arguments([Name('self', Param(), lineno=64, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=68, col_offset=8), 'set_undefined_options', Load(), lineno=68, col_offset=8), [Str('install', lineno=68, col_offset=35), Tuple([Str('build_lib', lineno=69, col_offset=36), Str('build_dir', lineno=69, col_offset=49)], Load(), lineno=69, col_offset=36), Tuple([Str('install_lib', lineno=70, col_offset=36), Str('install_dir', lineno=70, col_offset=51)], Load(), lineno=70, col_offset=36), Tuple([Str('force', lineno=71, col_offset=36), Str('force', lineno=71, col_offset=45)], Load(), lineno=71, col_offset=36), Tuple([Str('compile', lineno=72, col_offset=36), Str('compile', lineno=72, col_offset=47)], Load(), lineno=72, col_offset=36), Tuple([Str('optimize', lineno=73, col_offset=36), Str('optimize', lineno=73, col_offset=48)], Load(), lineno=73, col_offset=36), Tuple([Str('skip_build', lineno=74, col_offset=36), Str('skip_build', lineno=74, col_offset=50)], Load(), lineno=74, col_offset=36)], [], None, None, lineno=68, col_offset=8), lineno=68, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=77, col_offset=11), 'compile', Load(), lineno=77, col_offset=11), [Is()], [Name('None', Load(), lineno=77, col_offset=27)], lineno=77, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=78, col_offset=12), 'compile', Store(), lineno=78, col_offset=12)], Num(1, lineno=78, col_offset=27), lineno=78, col_offset=12)], [], lineno=77, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=79, col_offset=11), 'optimize', Load(), lineno=79, col_offset=11), [Is()], [Name('None', Load(), lineno=79, col_offset=28)], lineno=79, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=80, col_offset=12), 'optimize', Store(), lineno=80, col_offset=12)], Num(0, lineno=80, col_offset=28), lineno=80, col_offset=12)], [], lineno=79, col_offset=8), If(UnaryOp(Not(), Call(Name('isinstance', Load(), lineno=82, col_offset=15), [Attribute(Name('self', Load(), lineno=82, col_offset=26), 'optimize', Load(), lineno=82, col_offset=26), Name('int', Load(), lineno=82, col_offset=41)], [], None, None, lineno=82, col_offset=15), lineno=82, col_offset=11), [TryExcept([Assign([Attribute(Name('self', Load(), lineno=84, col_offset=16), 'optimize', Store(), lineno=84, col_offset=16)], Call(Name('int', Load(), lineno=84, col_offset=32), [Attribute(Name('self', Load(), lineno=84, col_offset=36), 'optimize', Load(), lineno=84, col_offset=36)], [], None, None, lineno=84, col_offset=32), lineno=84, col_offset=16), If(Compare(Attribute(Name('self', Load(), lineno=85, col_offset=19), 'optimize', Load(), lineno=85, col_offset=19), [NotIn()], [Tuple([Num(0, lineno=85, col_offset=41), Num(1, lineno=85, col_offset=44), Num(2, lineno=85, col_offset=47)], Load(), lineno=85, col_offset=41)], lineno=85, col_offset=19), [Raise(Name('AssertionError', Load(), lineno=86, col_offset=26), None, None, lineno=86, col_offset=20)], [], lineno=85, col_offset=16)], [ExceptHandler(Tuple([Name('ValueError', Load(), lineno=87, col_offset=20), Name('AssertionError', Load(), lineno=87, col_offset=32)], Load(), lineno=87, col_offset=20), None, [Raise(Name('DistutilsOptionError', Load(), lineno=88, col_offset=22), Str('optimize must be 0, 1, or 2', lineno=88, col_offset=44), None, lineno=88, col_offset=16)], lineno=87, col_offset=12)], [], lineno=83, col_offset=12)], [], lineno=82, col_offset=8)], [], lineno=64, col_offset=4), FunctionDef('run', arguments([Name('self', Param(), lineno=90, col_offset=12)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=92, col_offset=8), 'build', Load(), lineno=92, col_offset=8), [], [], None, None, lineno=92, col_offset=8), lineno=92, col_offset=8), Assign([Name('outfiles', Store(), lineno=97, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=97, col_offset=19), 'install', Load(), lineno=97, col_offset=19), [], [], None, None, lineno=97, col_offset=19), lineno=97, col_offset=8), If(BoolOp(And(), [Compare(Name('outfiles', Load(), lineno=100, col_offset=11), [IsNot()], [Name('None', Load(), lineno=100, col_offset=27)], lineno=100, col_offset=11), Call(Attribute(Attribute(Name('self', Load(), lineno=100, col_offset=36), 'distribution', Load(), lineno=100, col_offset=36), 'has_pure_modules', Load(), lineno=100, col_offset=36), [], [], None, None, lineno=100, col_offset=36)], lineno=100, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=101, col_offset=12), 'byte_compile', Load(), lineno=101, col_offset=12), [Name('outfiles', Load(), lineno=101, col_offset=30)], [], None, None, lineno=101, col_offset=12), lineno=101, col_offset=12)], [], lineno=100, col_offset=8)], [], lineno=90, col_offset=4), FunctionDef('build', arguments([Name('self', Param(), lineno=106, col_offset=14)], None, None, []), [If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=107, col_offset=15), 'skip_build', Load(), lineno=107, col_offset=15), lineno=107, col_offset=11), [If(Call(Attribute(Attribute(Name('self', Load(), lineno=108, col_offset=15), 'distribution', Load(), lineno=108, col_offset=15), 'has_pure_modules', Load(), lineno=108, col_offset=15), [], [], None, None, lineno=108, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=109, col_offset=16), 'run_command', Load(), lineno=109, col_offset=16), [Str('build_py', lineno=109, col_offset=33)], [], None, None, lineno=109, col_offset=16), lineno=109, col_offset=16)], [], lineno=108, col_offset=12), If(Call(Attribute(Attribute(Name('self', Load(), lineno=110, col_offset=15), 'distribution', Load(), lineno=110, col_offset=15), 'has_ext_modules', Load(), lineno=110, col_offset=15), [], [], None, None, lineno=110, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=111, col_offset=16), 'run_command', Load(), lineno=111, col_offset=16), [Str('build_ext', lineno=111, col_offset=33)], [], None, None, lineno=111, col_offset=16), lineno=111, col_offset=16)], [], lineno=110, col_offset=12)], [], lineno=107, col_offset=8)], [], lineno=106, col_offset=4), FunctionDef('install', arguments([Name('self', Param(), lineno=113, col_offset=16)], None, None, []), [If(Call(Attribute(Attribute(Name('os', Load(), lineno=114, col_offset=11), 'path', Load(), lineno=114, col_offset=11), 'isdir', Load(), lineno=114, col_offset=11), [Attribute(Name('self', Load(), lineno=114, col_offset=25), 'build_dir', Load(), lineno=114, col_offset=25)], [], None, None, lineno=114, col_offset=11), [Assign([Name('outfiles', Store(), lineno=115, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=115, col_offset=23), 'copy_tree', Load(), lineno=115, col_offset=23), [Attribute(Name('self', Load(), lineno=115, col_offset=38), 'build_dir', Load(), lineno=115, col_offset=38), Attribute(Name('self', Load(), lineno=115, col_offset=54), 'install_dir', Load(), lineno=115, col_offset=54)], [], None, None, lineno=115, col_offset=23), lineno=115, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=117, col_offset=12), 'warn', Load(), lineno=117, col_offset=12), [BinOp(Str("'%s' does not exist -- no Python modules to install", lineno=117, col_offset=22), Mod(), Attribute(Name('self', Load(), lineno=118, col_offset=22), 'build_dir', Load(), lineno=118, col_offset=22), lineno=117, col_offset=22)], [], None, None, lineno=117, col_offset=12), lineno=117, col_offset=12), Return(None, lineno=119, col_offset=12)], lineno=114, col_offset=8), Return(Name('outfiles', Load(), lineno=120, col_offset=15), lineno=120, col_offset=8)], [], lineno=113, col_offset=4), FunctionDef('byte_compile', arguments([Name('self', Param(), lineno=122, col_offset=21), Name('files', Param(), lineno=122, col_offset=27)], None, None, []), [If(Attribute(Name('sys', Load(), lineno=123, col_offset=11), 'dont_write_bytecode', Load(), lineno=123, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=124, col_offset=12), 'warn', Load(), lineno=124, col_offset=12), [Str('byte-compiling is disabled, skipping.', lineno=124, col_offset=22)], [], None, None, lineno=124, col_offset=12), lineno=124, col_offset=12), Return(None, lineno=125, col_offset=12)], [], lineno=123, col_offset=8), ImportFrom('distutils.util', [alias('byte_compile', None)], 0, lineno=127, col_offset=8), Assign([Name('install_root', Store(), lineno=133, col_offset=8)], Attribute(Call(Attribute(Name('self', Load(), lineno=133, col_offset=23), 'get_finalized_command', Load(), lineno=133, col_offset=23), [Str('install', lineno=133, col_offset=50)], [], None, None, lineno=133, col_offset=23), 'root', Load(), lineno=133, col_offset=23), lineno=133, col_offset=8), If(Attribute(Name('self', Load(), lineno=135, col_offset=11), 'compile', Load(), lineno=135, col_offset=11), [Expr(Call(Name('byte_compile', Load(), lineno=136, col_offset=12), [Name('files', Load(), lineno=136, col_offset=25)], [keyword('optimize', Num(0, lineno=136, col_offset=41)), keyword('force', Attribute(Name('self', Load(), lineno=137, col_offset=31), 'force', Load(), lineno=137, col_offset=31)), keyword('prefix', Name('install_root', Load(), lineno=137, col_offset=50)), keyword('dry_run', Attribute(Name('self', Load(), lineno=138, col_offset=33), 'dry_run', Load(), lineno=138, col_offset=33))], None, None, lineno=136, col_offset=12), lineno=136, col_offset=12)], [], lineno=135, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=139, col_offset=11), 'optimize', Load(), lineno=139, col_offset=11), [Gt()], [Num(0, lineno=139, col_offset=27)], lineno=139, col_offset=11), [Expr(Call(Name('byte_compile', Load(), lineno=140, col_offset=12), [Name('files', Load(), lineno=140, col_offset=25)], [keyword('optimize', Attribute(Name('self', Load(), lineno=140, col_offset=41), 'optimize', Load(), lineno=140, col_offset=41)), keyword('force', Attribute(Name('self', Load(), lineno=141, col_offset=31), 'force', Load(), lineno=141, col_offset=31)), keyword('prefix', Name('install_root', Load(), lineno=141, col_offset=50)), keyword('verbose', Attribute(Name('self', Load(), lineno=142, col_offset=33), 'verbose', Load(), lineno=142, col_offset=33)), keyword('dry_run', Attribute(Name('self', Load(), lineno=142, col_offset=55), 'dry_run', Load(), lineno=142, col_offset=55))], None, None, lineno=140, col_offset=12), lineno=140, col_offset=12)], [], lineno=139, col_offset=8)], [], lineno=122, col_offset=4), FunctionDef('_mutate_outputs', arguments([Name('self', Param(), lineno=147, col_offset=24), Name('has_any', Param(), lineno=147, col_offset=30), Name('build_cmd', Param(), lineno=147, col_offset=39), Name('cmd_option', Param(), lineno=147, col_offset=50), Name('output_dir', Param(), lineno=147, col_offset=62)], None, None, []), [If(UnaryOp(Not(), Name('has_any', Load(), lineno=148, col_offset=15), lineno=148, col_offset=11), [Return(List([], Load(), lineno=149, col_offset=19), lineno=149, col_offset=12)], [], lineno=148, col_offset=8), Assign([Name('build_cmd', Store(), lineno=151, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=151, col_offset=20), 'get_finalized_command', Load(), lineno=151, col_offset=20), [Name('build_cmd', Load(), lineno=151, col_offset=47)], [], None, None, lineno=151, col_offset=20), lineno=151, col_offset=8), Assign([Name('build_files', Store(), lineno=152, col_offset=8)], Call(Attribute(Name('build_cmd', Load(), lineno=152, col_offset=22), 'get_outputs', Load(), lineno=152, col_offset=22), [], [], None, None, lineno=152, col_offset=22), lineno=152, col_offset=8), Assign([Name('build_dir', Store(), lineno=153, col_offset=8)], Call(Name('getattr', Load(), lineno=153, col_offset=20), [Name('build_cmd', Load(), lineno=153, col_offset=28), Name('cmd_option', Load(), lineno=153, col_offset=39)], [], None, None, lineno=153, col_offset=20), lineno=153, col_offset=8), Assign([Name('prefix_len', Store(), lineno=155, col_offset=8)], BinOp(Call(Name('len', Load(), lineno=155, col_offset=21), [Name('build_dir', Load(), lineno=155, col_offset=25)], [], None, None, lineno=155, col_offset=21), Add(), Call(Name('len', Load(), lineno=155, col_offset=38), [Attribute(Name('os', Load(), lineno=155, col_offset=42), 'sep', Load(), lineno=155, col_offset=42)], [], None, None, lineno=155, col_offset=38), lineno=155, col_offset=21), lineno=155, col_offset=8), Assign([Name('outputs', Store(), lineno=156, col_offset=8)], List([], Load(), lineno=156, col_offset=18), lineno=156, col_offset=8), For(Name('file', Store(), lineno=157, col_offset=12), Name('build_files', Load(), lineno=157, col_offset=20), [Expr(Call(Attribute(Name('outputs', Load(), lineno=158, col_offset=12), 'append', Load(), lineno=158, col_offset=12), [Call(Attribute(Attribute(Name('os', Load(), lineno=158, col_offset=27), 'path', Load(), lineno=158, col_offset=27), 'join', Load(), lineno=158, col_offset=27), [Name('output_dir', Load(), lineno=158, col_offset=40), Subscript(Name('file', Load(), lineno=158, col_offset=52), Slice(Name('prefix_len', Load(), lineno=158, col_offset=57), None, None), Load(), lineno=158, col_offset=52)], [], None, None, lineno=158, col_offset=27)], [], None, None, lineno=158, col_offset=12), lineno=158, col_offset=12)], [], lineno=157, col_offset=8), Return(Name('outputs', Load(), lineno=160, col_offset=15), lineno=160, col_offset=8)], [], lineno=147, col_offset=4), FunctionDef('_bytecode_filenames', arguments([Name('self', Param(), lineno=162, col_offset=28), Name('py_filenames', Param(), lineno=162, col_offset=34)], None, None, []), [Assign([Name('bytecode_files', Store(), lineno=163, col_offset=8)], List([], Load(), lineno=163, col_offset=25), lineno=163, col_offset=8), For(Name('py_file', Store(), lineno=164, col_offset=12), Name('py_filenames', Load(), lineno=164, col_offset=23), [Assign([Name('ext', Store(), lineno=168, col_offset=12)], Subscript(Call(Attribute(Attribute(Name('os', Load(), lineno=168, col_offset=18), 'path', Load(), lineno=168, col_offset=18), 'splitext', Load(), lineno=168, col_offset=18), [Call(Attribute(Attribute(Name('os', Load(), lineno=168, col_offset=35), 'path', Load(), lineno=168, col_offset=35), 'normcase', Load(), lineno=168, col_offset=35), [Name('py_file', Load(), lineno=168, col_offset=52)], [], None, None, lineno=168, col_offset=35)], [], None, None, lineno=168, col_offset=18), Index(Num(1, lineno=168, col_offset=62)), Load(), lineno=168, col_offset=18), lineno=168, col_offset=12), If(Compare(Name('ext', Load(), lineno=169, col_offset=15), [NotEq()], [Name('PYTHON_SOURCE_EXTENSION', Load(), lineno=169, col_offset=22)], lineno=169, col_offset=15), [Continue( lineno=170, col_offset=16)], [], lineno=169, col_offset=12), If(Attribute(Name('self', Load(), lineno=171, col_offset=15), 'compile', Load(), lineno=171, col_offset=15), [Expr(Call(Attribute(Name('bytecode_files', Load(), lineno=172, col_offset=16), 'append', Load(), lineno=172, col_offset=16), [BinOp(Name('py_file', Load(), lineno=172, col_offset=38), Add(), Str('c', lineno=172, col_offset=48), lineno=172, col_offset=38)], [], None, None, lineno=172, col_offset=16), lineno=172, col_offset=16)], [], lineno=171, col_offset=12), If(Compare(Attribute(Name('self', Load(), lineno=173, col_offset=15), 'optimize', Load(), lineno=173, col_offset=15), [Gt()], [Num(0, lineno=173, col_offset=31)], lineno=173, col_offset=15), [Expr(Call(Attribute(Name('bytecode_files', Load(), lineno=174, col_offset=16), 'append', Load(), lineno=174, col_offset=16), [BinOp(Name('py_file', Load(), lineno=174, col_offset=38), Add(), Str('o', lineno=174, col_offset=48), lineno=174, col_offset=38)], [], None, None, lineno=174, col_offset=16), lineno=174, col_offset=16)], [], lineno=173, col_offset=12)], [], lineno=164, col_offset=8), Return(Name('bytecode_files', Load(), lineno=176, col_offset=15), lineno=176, col_offset=8)], [], lineno=162, col_offset=4), FunctionDef('get_outputs', arguments([Name('self', Param(), lineno=182, col_offset=20)], None, None, []), [Expr(Str('Return the list of files that would be installed if this command\n        were actually run.  Not affected by the "dry-run" flag or whether\n        modules have actually been built yet.\n        ', lineno=186, col_offset=-1), lineno=186, col_offset=-1), Assign([Name('pure_outputs', Store(), lineno=187, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=188, col_offset=12), '_mutate_outputs', Load(), lineno=188, col_offset=12), [Call(Attribute(Attribute(Name('self', Load(), lineno=188, col_offset=33), 'distribution', Load(), lineno=188, col_offset=33), 'has_pure_modules', Load(), lineno=188, col_offset=33), [], [], None, None, lineno=188, col_offset=33), Str('build_py', lineno=189, col_offset=33), Str('build_lib', lineno=189, col_offset=45), Attribute(Name('self', Load(), lineno=190, col_offset=33), 'install_dir', Load(), lineno=190, col_offset=33)], [], None, None, lineno=188, col_offset=12), lineno=187, col_offset=8), If(Attribute(Name('self', Load(), lineno=191, col_offset=11), 'compile', Load(), lineno=191, col_offset=11), [Assign([Name('bytecode_outputs', Store(), lineno=192, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=192, col_offset=31), '_bytecode_filenames', Load(), lineno=192, col_offset=31), [Name('pure_outputs', Load(), lineno=192, col_offset=56)], [], None, None, lineno=192, col_offset=31), lineno=192, col_offset=12)], [Assign([Name('bytecode_outputs', Store(), lineno=194, col_offset=12)], List([], Load(), lineno=194, col_offset=31), lineno=194, col_offset=12)], lineno=191, col_offset=8), Assign([Name('ext_outputs', Store(), lineno=196, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=197, col_offset=12), '_mutate_outputs', Load(), lineno=197, col_offset=12), [Call(Attribute(Attribute(Name('self', Load(), lineno=197, col_offset=33), 'distribution', Load(), lineno=197, col_offset=33), 'has_ext_modules', Load(), lineno=197, col_offset=33), [], [], None, None, lineno=197, col_offset=33), Str('build_ext', lineno=198, col_offset=33), Str('build_lib', lineno=198, col_offset=46), Attribute(Name('self', Load(), lineno=199, col_offset=33), 'install_dir', Load(), lineno=199, col_offset=33)], [], None, None, lineno=197, col_offset=12), lineno=196, col_offset=8), Return(BinOp(BinOp(Name('pure_outputs', Load(), lineno=201, col_offset=15), Add(), Name('bytecode_outputs', Load(), lineno=201, col_offset=30), lineno=201, col_offset=15), Add(), Name('ext_outputs', Load(), lineno=201, col_offset=49), lineno=201, col_offset=47), lineno=201, col_offset=8)], [], lineno=182, col_offset=4), FunctionDef('get_inputs', arguments([Name('self', Param(), lineno=203, col_offset=19)], None, None, []), [Expr(Str("Get the list of files that are input to this command, ie. the\n        files that get installed as they are named in the build tree.\n        The files in this list correspond one-to-one to the output\n        filenames returned by 'get_outputs()'.\n        ", lineno=208, col_offset=-1), lineno=208, col_offset=-1), Assign([Name('inputs', Store(), lineno=209, col_offset=8)], List([], Load(), lineno=209, col_offset=17), lineno=209, col_offset=8), If(Call(Attribute(Attribute(Name('self', Load(), lineno=211, col_offset=11), 'distribution', Load(), lineno=211, col_offset=11), 'has_pure_modules', Load(), lineno=211, col_offset=11), [], [], None, None, lineno=211, col_offset=11), [Assign([Name('build_py', Store(), lineno=212, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=212, col_offset=23), 'get_finalized_command', Load(), lineno=212, col_offset=23), [Str('build_py', lineno=212, col_offset=50)], [], None, None, lineno=212, col_offset=23), lineno=212, col_offset=12), Expr(Call(Attribute(Name('inputs', Load(), lineno=213, col_offset=12), 'extend', Load(), lineno=213, col_offset=12), [Call(Attribute(Name('build_py', Load(), lineno=213, col_offset=26), 'get_outputs', Load(), lineno=213, col_offset=26), [], [], None, None, lineno=213, col_offset=26)], [], None, None, lineno=213, col_offset=12), lineno=213, col_offset=12)], [], lineno=211, col_offset=8), If(Call(Attribute(Attribute(Name('self', Load(), lineno=215, col_offset=11), 'distribution', Load(), lineno=215, col_offset=11), 'has_ext_modules', Load(), lineno=215, col_offset=11), [], [], None, None, lineno=215, col_offset=11), [Assign([Name('build_ext', Store(), lineno=216, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=216, col_offset=24), 'get_finalized_command', Load(), lineno=216, col_offset=24), [Str('build_ext', lineno=216, col_offset=51)], [], None, None, lineno=216, col_offset=24), lineno=216, col_offset=12), Expr(Call(Attribute(Name('inputs', Load(), lineno=217, col_offset=12), 'extend', Load(), lineno=217, col_offset=12), [Call(Attribute(Name('build_ext', Load(), lineno=217, col_offset=26), 'get_outputs', Load(), lineno=217, col_offset=26), [], [], None, None, lineno=217, col_offset=26)], [], None, None, lineno=217, col_offset=12), lineno=217, col_offset=12)], [], lineno=215, col_offset=8), Return(Name('inputs', Load(), lineno=219, col_offset=15), lineno=219, col_offset=8)], [], lineno=203, col_offset=4)], [], lineno=21, col_offset=0)])
