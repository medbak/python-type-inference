Module([Expr(Str('Generate C code from an ASDL description.', lineno=2, col_offset=0), lineno=2, col_offset=0), Import([alias('os', None), alias('sys', None)], lineno=7, col_offset=0), Import([alias('asdl', None)], lineno=9, col_offset=0), Assign([Name('TABSIZE', Store(), lineno=11, col_offset=0)], Num(8, lineno=11, col_offset=10), lineno=11, col_offset=0), Assign([Name('MAX_COL', Store(), lineno=12, col_offset=0)], Num(80, lineno=12, col_offset=10), lineno=12, col_offset=0), FunctionDef('get_c_type', arguments([Name('name', Param(), lineno=14, col_offset=15)], None, None, []), [Expr(Str('Return a string for the C name of the type.\n\n    This function special cases the default types provided by asdl:\n    identifier, string, int, bool.\n    ', lineno=19, col_offset=-1), lineno=19, col_offset=-1), If(Call(Name('isinstance', Load(), lineno=21, col_offset=7), [Name('name', Load(), lineno=21, col_offset=18), Attribute(Name('asdl', Load(), lineno=21, col_offset=24), 'Id', Load(), lineno=21, col_offset=24)], [], None, None, lineno=21, col_offset=7), [Assign([Name('name', Store(), lineno=22, col_offset=8)], Attribute(Name('name', Load(), lineno=22, col_offset=15), 'value', Load(), lineno=22, col_offset=15), lineno=22, col_offset=8)], [], lineno=21, col_offset=4), If(Compare(Name('name', Load(), lineno=23, col_offset=7), [In()], [Attribute(Name('asdl', Load(), lineno=23, col_offset=15), 'builtin_types', Load(), lineno=23, col_offset=15)], lineno=23, col_offset=7), [Return(Name('name', Load(), lineno=24, col_offset=15), lineno=24, col_offset=8)], [Return(BinOp(Str('%s_ty', lineno=26, col_offset=15), Mod(), Name('name', Load(), lineno=26, col_offset=25), lineno=26, col_offset=15), lineno=26, col_offset=8)], lineno=23, col_offset=4)], [], lineno=14, col_offset=0), FunctionDef('reflow_lines', arguments([Name('s', Param(), lineno=28, col_offset=17), Name('depth', Param(), lineno=28, col_offset=20)], None, None, []), [Expr(Str('Reflow the line s indented depth tabs.\n\n    Return a sequence of lines where no line extends beyond MAX_COL\n    when properly indented.  The first line is properly indented based\n    exclusively on depth * TABSIZE.  All following lines -- these are\n    the reflowed lines generated by this function -- start at the same\n    column as the first character beyond the opening { in the first\n    line.\n    ', lineno=37, col_offset=-1), lineno=37, col_offset=-1), Assign([Name('size', Store(), lineno=38, col_offset=4)], BinOp(Name('MAX_COL', Load(), lineno=38, col_offset=11), Sub(), BinOp(Name('depth', Load(), lineno=38, col_offset=21), Mult(), Name('TABSIZE', Load(), lineno=38, col_offset=29), lineno=38, col_offset=21), lineno=38, col_offset=11), lineno=38, col_offset=4), If(Compare(Call(Name('len', Load(), lineno=39, col_offset=7), [Name('s', Load(), lineno=39, col_offset=11)], [], None, None, lineno=39, col_offset=7), [Lt()], [Name('size', Load(), lineno=39, col_offset=16)], lineno=39, col_offset=7), [Return(List([Name('s', Load(), lineno=40, col_offset=16)], Load(), lineno=40, col_offset=15), lineno=40, col_offset=8)], [], lineno=39, col_offset=4), Assign([Name('lines', Store(), lineno=42, col_offset=4)], List([], Load(), lineno=42, col_offset=12), lineno=42, col_offset=4), Assign([Name('cur', Store(), lineno=43, col_offset=4)], Name('s', Load(), lineno=43, col_offset=10), lineno=43, col_offset=4), Assign([Name('padding', Store(), lineno=44, col_offset=4)], Str('', lineno=44, col_offset=14), lineno=44, col_offset=4), While(Compare(Call(Name('len', Load(), lineno=45, col_offset=10), [Name('cur', Load(), lineno=45, col_offset=14)], [], None, None, lineno=45, col_offset=10), [Gt()], [Name('size', Load(), lineno=45, col_offset=21)], lineno=45, col_offset=10), [Assign([Name('i', Store(), lineno=46, col_offset=8)], Call(Attribute(Name('cur', Load(), lineno=46, col_offset=12), 'rfind', Load(), lineno=46, col_offset=12), [Str(' ', lineno=46, col_offset=22), Num(0, lineno=46, col_offset=27), Name('size', Load(), lineno=46, col_offset=30)], [], None, None, lineno=46, col_offset=12), lineno=46, col_offset=8), If(BoolOp(And(), [Compare(Name('i', Load(), lineno=48, col_offset=11), [Eq()], [Num(-1, lineno=48, col_offset=17)], lineno=48, col_offset=11), Compare(Str('GeneratorExp', lineno=48, col_offset=23), [In()], [Name('cur', Load(), lineno=48, col_offset=41)], lineno=48, col_offset=23)], lineno=48, col_offset=11), [Assign([Name('i', Store(), lineno=49, col_offset=12)], BinOp(Name('size', Load(), lineno=49, col_offset=16), Add(), Num(3, lineno=49, col_offset=23), lineno=49, col_offset=16), lineno=49, col_offset=12)], [], lineno=48, col_offset=8), Assert(Compare(Name('i', Load(), lineno=50, col_offset=15), [NotEq()], [Num(-1, lineno=50, col_offset=21)], lineno=50, col_offset=15), BinOp(Str('Impossible line %d to reflow: %r', lineno=50, col_offset=24), Mod(), Tuple([Name('size', Load(), lineno=50, col_offset=62), Name('s', Load(), lineno=50, col_offset=68)], Load(), lineno=50, col_offset=62), lineno=50, col_offset=24), lineno=50, col_offset=8), Expr(Call(Attribute(Name('lines', Load(), lineno=51, col_offset=8), 'append', Load(), lineno=51, col_offset=8), [BinOp(Name('padding', Load(), lineno=51, col_offset=21), Add(), Subscript(Name('cur', Load(), lineno=51, col_offset=31), Slice(None, Name('i', Load(), lineno=51, col_offset=36), None), Load(), lineno=51, col_offset=31), lineno=51, col_offset=21)], [], None, None, lineno=51, col_offset=8), lineno=51, col_offset=8), If(Compare(Call(Name('len', Load(), lineno=52, col_offset=11), [Name('lines', Load(), lineno=52, col_offset=15)], [], None, None, lineno=52, col_offset=11), [Eq()], [Num(1, lineno=52, col_offset=25)], lineno=52, col_offset=11), [Assign([Name('j', Store(), lineno=54, col_offset=12)], Call(Attribute(Name('cur', Load(), lineno=54, col_offset=16), 'find', Load(), lineno=54, col_offset=16), [Str('{', lineno=54, col_offset=25), Num(0, lineno=54, col_offset=30), Name('i', Load(), lineno=54, col_offset=33)], [], None, None, lineno=54, col_offset=16), lineno=54, col_offset=12), If(Compare(Name('j', Load(), lineno=55, col_offset=15), [GtE()], [Num(0, lineno=55, col_offset=20)], lineno=55, col_offset=15), [AugAssign(Name('j', Store(), lineno=56, col_offset=16), Add(), Num(2, lineno=56, col_offset=21), lineno=56, col_offset=16), AugAssign(Name('size', Store(), lineno=57, col_offset=16), Sub(), Name('j', Load(), lineno=57, col_offset=24), lineno=57, col_offset=16), Assign([Name('padding', Store(), lineno=58, col_offset=16)], BinOp(Str(' ', lineno=58, col_offset=26), Mult(), Name('j', Load(), lineno=58, col_offset=32), lineno=58, col_offset=26), lineno=58, col_offset=16)], [Assign([Name('j', Store(), lineno=60, col_offset=16)], Call(Attribute(Name('cur', Load(), lineno=60, col_offset=20), 'find', Load(), lineno=60, col_offset=20), [Str('(', lineno=60, col_offset=29), Num(0, lineno=60, col_offset=34), Name('i', Load(), lineno=60, col_offset=37)], [], None, None, lineno=60, col_offset=20), lineno=60, col_offset=16), If(Compare(Name('j', Load(), lineno=61, col_offset=19), [GtE()], [Num(0, lineno=61, col_offset=24)], lineno=61, col_offset=19), [AugAssign(Name('j', Store(), lineno=62, col_offset=20), Add(), Num(1, lineno=62, col_offset=25), lineno=62, col_offset=20), AugAssign(Name('size', Store(), lineno=63, col_offset=20), Sub(), Name('j', Load(), lineno=63, col_offset=28), lineno=63, col_offset=20), Assign([Name('padding', Store(), lineno=64, col_offset=20)], BinOp(Str(' ', lineno=64, col_offset=30), Mult(), Name('j', Load(), lineno=64, col_offset=36), lineno=64, col_offset=30), lineno=64, col_offset=20)], [], lineno=61, col_offset=16)], lineno=55, col_offset=12)], [], lineno=52, col_offset=8), Assign([Name('cur', Store(), lineno=65, col_offset=8)], Subscript(Name('cur', Load(), lineno=65, col_offset=14), Slice(BinOp(Name('i', Load(), lineno=65, col_offset=18), Add(), Num(1, lineno=65, col_offset=20), lineno=65, col_offset=18), None, None), Load(), lineno=65, col_offset=14), lineno=65, col_offset=8)], [Expr(Call(Attribute(Name('lines', Load(), lineno=67, col_offset=8), 'append', Load(), lineno=67, col_offset=8), [BinOp(Name('padding', Load(), lineno=67, col_offset=21), Add(), Name('cur', Load(), lineno=67, col_offset=31), lineno=67, col_offset=21)], [], None, None, lineno=67, col_offset=8), lineno=67, col_offset=8)], lineno=45, col_offset=4), Return(Name('lines', Load(), lineno=68, col_offset=11), lineno=68, col_offset=4)], [], lineno=28, col_offset=0), FunctionDef('is_simple', arguments([Name('sum', Param(), lineno=70, col_offset=14)], None, None, []), [Expr(Str('Return True if a sum is a simple.\n\n    A sum is simple if its types have no fields, e.g.\n    unaryop = Invert | Not | UAdd | USub\n    ', lineno=75, col_offset=-1), lineno=75, col_offset=-1), For(Name('t', Store(), lineno=76, col_offset=8), Attribute(Name('sum', Load(), lineno=76, col_offset=13), 'types', Load(), lineno=76, col_offset=13), [If(Attribute(Name('t', Load(), lineno=77, col_offset=11), 'fields', Load(), lineno=77, col_offset=11), [Return(Name('False', Load(), lineno=78, col_offset=19), lineno=78, col_offset=12)], [], lineno=77, col_offset=8)], [], lineno=76, col_offset=4), Return(Name('True', Load(), lineno=79, col_offset=11), lineno=79, col_offset=4)], [], lineno=70, col_offset=0), ClassDef('EmitVisitor', [Attribute(Name('asdl', Load(), lineno=82, col_offset=18), 'VisitorBase', Load(), lineno=82, col_offset=18)], [Expr(Str('Visit that emits lines', lineno=83, col_offset=4), lineno=83, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=85, col_offset=17), Name('file', Param(), lineno=85, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=86, col_offset=8), 'file', Store(), lineno=86, col_offset=8)], Name('file', Load(), lineno=86, col_offset=20), lineno=86, col_offset=8), Expr(Call(Attribute(Call(Name('super', Load(), lineno=87, col_offset=8), [Name('EmitVisitor', Load(), lineno=87, col_offset=14), Name('self', Load(), lineno=87, col_offset=27)], [], None, None, lineno=87, col_offset=8), '__init__', Load(), lineno=87, col_offset=8), [], [], None, None, lineno=87, col_offset=8), lineno=87, col_offset=8)], [], lineno=85, col_offset=4), FunctionDef('emit', arguments([Name('self', Param(), lineno=89, col_offset=13), Name('s', Param(), lineno=89, col_offset=19), Name('depth', Param(), lineno=89, col_offset=22), Name('reflow', Param(), lineno=89, col_offset=29)], None, None, [Name('True', Load(), lineno=89, col_offset=36)]), [If(Name('reflow', Load(), lineno=91, col_offset=11), [Assign([Name('lines', Store(), lineno=92, col_offset=12)], Call(Name('reflow_lines', Load(), lineno=92, col_offset=20), [Name('s', Load(), lineno=92, col_offset=33), Name('depth', Load(), lineno=92, col_offset=36)], [], None, None, lineno=92, col_offset=20), lineno=92, col_offset=12)], [Assign([Name('lines', Store(), lineno=94, col_offset=12)], List([Name('s', Load(), lineno=94, col_offset=21)], Load(), lineno=94, col_offset=20), lineno=94, col_offset=12)], lineno=91, col_offset=8), For(Name('line', Store(), lineno=95, col_offset=12), Name('lines', Load(), lineno=95, col_offset=20), [Assign([Name('line', Store(), lineno=96, col_offset=12)], BinOp(BinOp(BinOp(BinOp(Str(' ', lineno=96, col_offset=20), Mult(), Name('TABSIZE', Load(), lineno=96, col_offset=26), lineno=96, col_offset=20), Mult(), Name('depth', Load(), lineno=96, col_offset=36), lineno=96, col_offset=34), Add(), Name('line', Load(), lineno=96, col_offset=45), lineno=96, col_offset=19), Add(), Str('\n', lineno=96, col_offset=52), lineno=96, col_offset=50), lineno=96, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=97, col_offset=12), 'file', Load(), lineno=97, col_offset=12), 'write', Load(), lineno=97, col_offset=12), [Name('line', Load(), lineno=97, col_offset=28)], [], None, None, lineno=97, col_offset=12), lineno=97, col_offset=12)], [], lineno=95, col_offset=8)], [], lineno=89, col_offset=4)], [], lineno=82, col_offset=0), ClassDef('TypeDefVisitor', [Name('EmitVisitor', Load(), lineno=100, col_offset=21)], [FunctionDef('visitModule', arguments([Name('self', Param(), lineno=101, col_offset=20), Name('mod', Param(), lineno=101, col_offset=26)], None, None, []), [For(Name('dfn', Store(), lineno=102, col_offset=12), Attribute(Name('mod', Load(), lineno=102, col_offset=19), 'dfns', Load(), lineno=102, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=103, col_offset=12), 'visit', Load(), lineno=103, col_offset=12), [Name('dfn', Load(), lineno=103, col_offset=23)], [], None, None, lineno=103, col_offset=12), lineno=103, col_offset=12)], [], lineno=102, col_offset=8)], [], lineno=101, col_offset=4), FunctionDef('visitType', arguments([Name('self', Param(), lineno=105, col_offset=18), Name('type', Param(), lineno=105, col_offset=24), Name('depth', Param(), lineno=105, col_offset=30)], None, None, [Num(0, lineno=105, col_offset=36)]), [Expr(Call(Attribute(Name('self', Load(), lineno=106, col_offset=8), 'visit', Load(), lineno=106, col_offset=8), [Attribute(Name('type', Load(), lineno=106, col_offset=19), 'value', Load(), lineno=106, col_offset=19), Attribute(Name('type', Load(), lineno=106, col_offset=31), 'name', Load(), lineno=106, col_offset=31), Name('depth', Load(), lineno=106, col_offset=42)], [], None, None, lineno=106, col_offset=8), lineno=106, col_offset=8)], [], lineno=105, col_offset=4), FunctionDef('visitSum', arguments([Name('self', Param(), lineno=108, col_offset=17), Name('sum', Param(), lineno=108, col_offset=23), Name('name', Param(), lineno=108, col_offset=28), Name('depth', Param(), lineno=108, col_offset=34)], None, None, []), [If(Call(Name('is_simple', Load(), lineno=109, col_offset=11), [Name('sum', Load(), lineno=109, col_offset=21)], [], None, None, lineno=109, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=110, col_offset=12), 'simple_sum', Load(), lineno=110, col_offset=12), [Name('sum', Load(), lineno=110, col_offset=28), Name('name', Load(), lineno=110, col_offset=33), Name('depth', Load(), lineno=110, col_offset=39)], [], None, None, lineno=110, col_offset=12), lineno=110, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=112, col_offset=12), 'sum_with_constructors', Load(), lineno=112, col_offset=12), [Name('sum', Load(), lineno=112, col_offset=39), Name('name', Load(), lineno=112, col_offset=44), Name('depth', Load(), lineno=112, col_offset=50)], [], None, None, lineno=112, col_offset=12), lineno=112, col_offset=12)], lineno=109, col_offset=8)], [], lineno=108, col_offset=4), FunctionDef('simple_sum', arguments([Name('self', Param(), lineno=114, col_offset=19), Name('sum', Param(), lineno=114, col_offset=25), Name('name', Param(), lineno=114, col_offset=30), Name('depth', Param(), lineno=114, col_offset=36)], None, None, []), [Assign([Name('enum', Store(), lineno=115, col_offset=8)], List([], Load(), lineno=115, col_offset=15), lineno=115, col_offset=8), For(Name('i', Store(), lineno=116, col_offset=12), Call(Name('range', Load(), lineno=116, col_offset=17), [Call(Name('len', Load(), lineno=116, col_offset=23), [Attribute(Name('sum', Load(), lineno=116, col_offset=27), 'types', Load(), lineno=116, col_offset=27)], [], None, None, lineno=116, col_offset=23)], [], None, None, lineno=116, col_offset=17), [Assign([Name('type', Store(), lineno=117, col_offset=12)], Subscript(Attribute(Name('sum', Load(), lineno=117, col_offset=19), 'types', Load(), lineno=117, col_offset=19), Index(Name('i', Load(), lineno=117, col_offset=29)), Load(), lineno=117, col_offset=19), lineno=117, col_offset=12), Expr(Call(Attribute(Name('enum', Load(), lineno=118, col_offset=12), 'append', Load(), lineno=118, col_offset=12), [BinOp(Str('%s=%d', lineno=118, col_offset=24), Mod(), Tuple([Attribute(Name('type', Load(), lineno=118, col_offset=35), 'name', Load(), lineno=118, col_offset=35), BinOp(Name('i', Load(), lineno=118, col_offset=46), Add(), Num(1, lineno=118, col_offset=50), lineno=118, col_offset=46)], Load(), lineno=118, col_offset=35), lineno=118, col_offset=24)], [], None, None, lineno=118, col_offset=12), lineno=118, col_offset=12)], [], lineno=116, col_offset=8), Assign([Name('enums', Store(), lineno=119, col_offset=8)], Call(Attribute(Str(', ', lineno=119, col_offset=16), 'join', Load(), lineno=119, col_offset=16), [Name('enum', Load(), lineno=119, col_offset=26)], [], None, None, lineno=119, col_offset=16), lineno=119, col_offset=8), Assign([Name('ctype', Store(), lineno=120, col_offset=8)], Call(Name('get_c_type', Load(), lineno=120, col_offset=16), [Name('name', Load(), lineno=120, col_offset=27)], [], None, None, lineno=120, col_offset=16), lineno=120, col_offset=8), Assign([Name('s', Store(), lineno=121, col_offset=8)], BinOp(Str('typedef enum _%s { %s } %s;', lineno=121, col_offset=12), Mod(), Tuple([Name('name', Load(), lineno=121, col_offset=45), Name('enums', Load(), lineno=121, col_offset=51), Name('ctype', Load(), lineno=121, col_offset=58)], Load(), lineno=121, col_offset=45), lineno=121, col_offset=12), lineno=121, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=122, col_offset=8), 'emit', Load(), lineno=122, col_offset=8), [Name('s', Load(), lineno=122, col_offset=18), Name('depth', Load(), lineno=122, col_offset=21)], [], None, None, lineno=122, col_offset=8), lineno=122, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=123, col_offset=8), 'emit', Load(), lineno=123, col_offset=8), [Str('', lineno=123, col_offset=18), Name('depth', Load(), lineno=123, col_offset=22)], [], None, None, lineno=123, col_offset=8), lineno=123, col_offset=8)], [], lineno=114, col_offset=4), FunctionDef('sum_with_constructors', arguments([Name('self', Param(), lineno=125, col_offset=30), Name('sum', Param(), lineno=125, col_offset=36), Name('name', Param(), lineno=125, col_offset=41), Name('depth', Param(), lineno=125, col_offset=47)], None, None, []), [Assign([Name('ctype', Store(), lineno=126, col_offset=8)], Call(Name('get_c_type', Load(), lineno=126, col_offset=16), [Name('name', Load(), lineno=126, col_offset=27)], [], None, None, lineno=126, col_offset=16), lineno=126, col_offset=8), Assign([Name('s', Store(), lineno=127, col_offset=8)], BinOp(Str('typedef struct _%(name)s *%(ctype)s;', lineno=127, col_offset=12), Mod(), Call(Name('locals', Load(), lineno=127, col_offset=53), [], [], None, None, lineno=127, col_offset=53), lineno=127, col_offset=12), lineno=127, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=128, col_offset=8), 'emit', Load(), lineno=128, col_offset=8), [Name('s', Load(), lineno=128, col_offset=18), Name('depth', Load(), lineno=128, col_offset=21)], [], None, None, lineno=128, col_offset=8), lineno=128, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=129, col_offset=8), 'emit', Load(), lineno=129, col_offset=8), [Str('', lineno=129, col_offset=18), Name('depth', Load(), lineno=129, col_offset=22)], [], None, None, lineno=129, col_offset=8), lineno=129, col_offset=8)], [], lineno=125, col_offset=4), FunctionDef('visitProduct', arguments([Name('self', Param(), lineno=131, col_offset=21), Name('product', Param(), lineno=131, col_offset=27), Name('name', Param(), lineno=131, col_offset=36), Name('depth', Param(), lineno=131, col_offset=42)], None, None, []), [Assign([Name('ctype', Store(), lineno=132, col_offset=8)], Call(Name('get_c_type', Load(), lineno=132, col_offset=16), [Name('name', Load(), lineno=132, col_offset=27)], [], None, None, lineno=132, col_offset=16), lineno=132, col_offset=8), Assign([Name('s', Store(), lineno=133, col_offset=8)], BinOp(Str('typedef struct _%(name)s *%(ctype)s;', lineno=133, col_offset=12), Mod(), Call(Name('locals', Load(), lineno=133, col_offset=53), [], [], None, None, lineno=133, col_offset=53), lineno=133, col_offset=12), lineno=133, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=134, col_offset=8), 'emit', Load(), lineno=134, col_offset=8), [Name('s', Load(), lineno=134, col_offset=18), Name('depth', Load(), lineno=134, col_offset=21)], [], None, None, lineno=134, col_offset=8), lineno=134, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=135, col_offset=8), 'emit', Load(), lineno=135, col_offset=8), [Str('', lineno=135, col_offset=18), Name('depth', Load(), lineno=135, col_offset=22)], [], None, None, lineno=135, col_offset=8), lineno=135, col_offset=8)], [], lineno=131, col_offset=4)], [], lineno=100, col_offset=0), ClassDef('StructVisitor', [Name('EmitVisitor', Load(), lineno=138, col_offset=20)], [Expr(Str('Visitor to generate typdefs for AST.', lineno=139, col_offset=4), lineno=139, col_offset=4), FunctionDef('visitModule', arguments([Name('self', Param(), lineno=141, col_offset=20), Name('mod', Param(), lineno=141, col_offset=26)], None, None, []), [For(Name('dfn', Store(), lineno=142, col_offset=12), Attribute(Name('mod', Load(), lineno=142, col_offset=19), 'dfns', Load(), lineno=142, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=143, col_offset=12), 'visit', Load(), lineno=143, col_offset=12), [Name('dfn', Load(), lineno=143, col_offset=23)], [], None, None, lineno=143, col_offset=12), lineno=143, col_offset=12)], [], lineno=142, col_offset=8)], [], lineno=141, col_offset=4), FunctionDef('visitType', arguments([Name('self', Param(), lineno=145, col_offset=18), Name('type', Param(), lineno=145, col_offset=24), Name('depth', Param(), lineno=145, col_offset=30)], None, None, [Num(0, lineno=145, col_offset=36)]), [Expr(Call(Attribute(Name('self', Load(), lineno=146, col_offset=8), 'visit', Load(), lineno=146, col_offset=8), [Attribute(Name('type', Load(), lineno=146, col_offset=19), 'value', Load(), lineno=146, col_offset=19), Attribute(Name('type', Load(), lineno=146, col_offset=31), 'name', Load(), lineno=146, col_offset=31), Name('depth', Load(), lineno=146, col_offset=42)], [], None, None, lineno=146, col_offset=8), lineno=146, col_offset=8)], [], lineno=145, col_offset=4), FunctionDef('visitSum', arguments([Name('self', Param(), lineno=148, col_offset=17), Name('sum', Param(), lineno=148, col_offset=23), Name('name', Param(), lineno=148, col_offset=28), Name('depth', Param(), lineno=148, col_offset=34)], None, None, []), [If(UnaryOp(Not(), Call(Name('is_simple', Load(), lineno=149, col_offset=15), [Name('sum', Load(), lineno=149, col_offset=25)], [], None, None, lineno=149, col_offset=15), lineno=149, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=150, col_offset=12), 'sum_with_constructors', Load(), lineno=150, col_offset=12), [Name('sum', Load(), lineno=150, col_offset=39), Name('name', Load(), lineno=150, col_offset=44), Name('depth', Load(), lineno=150, col_offset=50)], [], None, None, lineno=150, col_offset=12), lineno=150, col_offset=12)], [], lineno=149, col_offset=8)], [], lineno=148, col_offset=4), FunctionDef('sum_with_constructors', arguments([Name('self', Param(), lineno=152, col_offset=30), Name('sum', Param(), lineno=152, col_offset=36), Name('name', Param(), lineno=152, col_offset=41), Name('depth', Param(), lineno=152, col_offset=47)], None, None, []), [FunctionDef('emit', arguments([Name('s', Param(), lineno=153, col_offset=17), Name('depth', Param(), lineno=153, col_offset=20)], None, None, [Name('depth', Load(), lineno=153, col_offset=26)]), [Expr(Call(Attribute(Name('self', Load(), lineno=154, col_offset=12), 'emit', Load(), lineno=154, col_offset=12), [BinOp(Name('s', Load(), lineno=154, col_offset=22), Mod(), Attribute(Call(Attribute(Name('sys', Load(), lineno=154, col_offset=26), '_getframe', Load(), lineno=154, col_offset=26), [Num(1, lineno=154, col_offset=40)], [], None, None, lineno=154, col_offset=26), 'f_locals', Load(), lineno=154, col_offset=26), lineno=154, col_offset=22), Name('depth', Load(), lineno=154, col_offset=53)], [], None, None, lineno=154, col_offset=12), lineno=154, col_offset=12)], [], lineno=153, col_offset=8), Assign([Name('enum', Store(), lineno=155, col_offset=8)], List([], Load(), lineno=155, col_offset=15), lineno=155, col_offset=8), For(Name('i', Store(), lineno=156, col_offset=12), Call(Name('range', Load(), lineno=156, col_offset=17), [Call(Name('len', Load(), lineno=156, col_offset=23), [Attribute(Name('sum', Load(), lineno=156, col_offset=27), 'types', Load(), lineno=156, col_offset=27)], [], None, None, lineno=156, col_offset=23)], [], None, None, lineno=156, col_offset=17), [Assign([Name('type', Store(), lineno=157, col_offset=12)], Subscript(Attribute(Name('sum', Load(), lineno=157, col_offset=19), 'types', Load(), lineno=157, col_offset=19), Index(Name('i', Load(), lineno=157, col_offset=29)), Load(), lineno=157, col_offset=19), lineno=157, col_offset=12), Expr(Call(Attribute(Name('enum', Load(), lineno=158, col_offset=12), 'append', Load(), lineno=158, col_offset=12), [BinOp(Str('%s_kind=%d', lineno=158, col_offset=24), Mod(), Tuple([Attribute(Name('type', Load(), lineno=158, col_offset=40), 'name', Load(), lineno=158, col_offset=40), BinOp(Name('i', Load(), lineno=158, col_offset=51), Add(), Num(1, lineno=158, col_offset=55), lineno=158, col_offset=51)], Load(), lineno=158, col_offset=40), lineno=158, col_offset=24)], [], None, None, lineno=158, col_offset=12), lineno=158, col_offset=12)], [], lineno=156, col_offset=8), Expr(Call(Name('emit', Load(), lineno=160, col_offset=8), [BinOp(BinOp(Str('enum _%(name)s_kind {', lineno=160, col_offset=13), Add(), Call(Attribute(Str(', ', lineno=160, col_offset=39), 'join', Load(), lineno=160, col_offset=39), [Name('enum', Load(), lineno=160, col_offset=49)], [], None, None, lineno=160, col_offset=39), lineno=160, col_offset=13), Add(), Str('};', lineno=160, col_offset=57), lineno=160, col_offset=55)], [], None, None, lineno=160, col_offset=8), lineno=160, col_offset=8), Expr(Call(Name('emit', Load(), lineno=162, col_offset=8), [Str('struct _%(name)s {', lineno=162, col_offset=13)], [], None, None, lineno=162, col_offset=8), lineno=162, col_offset=8), Expr(Call(Name('emit', Load(), lineno=163, col_offset=8), [Str('enum _%(name)s_kind kind;', lineno=163, col_offset=13), BinOp(Name('depth', Load(), lineno=163, col_offset=42), Add(), Num(1, lineno=163, col_offset=50), lineno=163, col_offset=42)], [], None, None, lineno=163, col_offset=8), lineno=163, col_offset=8), Expr(Call(Name('emit', Load(), lineno=164, col_offset=8), [Str('union {', lineno=164, col_offset=13), BinOp(Name('depth', Load(), lineno=164, col_offset=24), Add(), Num(1, lineno=164, col_offset=32), lineno=164, col_offset=24)], [], None, None, lineno=164, col_offset=8), lineno=164, col_offset=8), For(Name('t', Store(), lineno=165, col_offset=12), Attribute(Name('sum', Load(), lineno=165, col_offset=17), 'types', Load(), lineno=165, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=166, col_offset=12), 'visit', Load(), lineno=166, col_offset=12), [Name('t', Load(), lineno=166, col_offset=23), BinOp(Name('depth', Load(), lineno=166, col_offset=26), Add(), Num(2, lineno=166, col_offset=34), lineno=166, col_offset=26)], [], None, None, lineno=166, col_offset=12), lineno=166, col_offset=12)], [], lineno=165, col_offset=8), Expr(Call(Name('emit', Load(), lineno=167, col_offset=8), [Str('} v;', lineno=167, col_offset=13), BinOp(Name('depth', Load(), lineno=167, col_offset=21), Add(), Num(1, lineno=167, col_offset=29), lineno=167, col_offset=21)], [], None, None, lineno=167, col_offset=8), lineno=167, col_offset=8), For(Name('field', Store(), lineno=168, col_offset=12), Attribute(Name('sum', Load(), lineno=168, col_offset=21), 'attributes', Load(), lineno=168, col_offset=21), [Assign([Name('type', Store(), lineno=170, col_offset=12)], Call(Name('str', Load(), lineno=170, col_offset=19), [Attribute(Name('field', Load(), lineno=170, col_offset=23), 'type', Load(), lineno=170, col_offset=23)], [], None, None, lineno=170, col_offset=19), lineno=170, col_offset=12), Assert(Compare(Name('type', Load(), lineno=171, col_offset=19), [In()], [Attribute(Name('asdl', Load(), lineno=171, col_offset=27), 'builtin_types', Load(), lineno=171, col_offset=27)], lineno=171, col_offset=19), Name('type', Load(), lineno=171, col_offset=47), lineno=171, col_offset=12), Expr(Call(Name('emit', Load(), lineno=172, col_offset=12), [BinOp(Str('%s %s;', lineno=172, col_offset=17), Mod(), Tuple([Name('type', Load(), lineno=172, col_offset=29), Attribute(Name('field', Load(), lineno=172, col_offset=35), 'name', Load(), lineno=172, col_offset=35)], Load(), lineno=172, col_offset=29), lineno=172, col_offset=17), BinOp(Name('depth', Load(), lineno=172, col_offset=48), Add(), Num(1, lineno=172, col_offset=56), lineno=172, col_offset=48)], [], None, None, lineno=172, col_offset=12), lineno=172, col_offset=12)], [], lineno=168, col_offset=8), Expr(Call(Name('emit', Load(), lineno=173, col_offset=8), [Str('};', lineno=173, col_offset=13)], [], None, None, lineno=173, col_offset=8), lineno=173, col_offset=8), Expr(Call(Name('emit', Load(), lineno=174, col_offset=8), [Str('', lineno=174, col_offset=13)], [], None, None, lineno=174, col_offset=8), lineno=174, col_offset=8)], [], lineno=152, col_offset=4), FunctionDef('visitConstructor', arguments([Name('self', Param(), lineno=176, col_offset=25), Name('cons', Param(), lineno=176, col_offset=31), Name('depth', Param(), lineno=176, col_offset=37)], None, None, []), [If(Attribute(Name('cons', Load(), lineno=177, col_offset=11), 'fields', Load(), lineno=177, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=178, col_offset=12), 'emit', Load(), lineno=178, col_offset=12), [Str('struct {', lineno=178, col_offset=22), Name('depth', Load(), lineno=178, col_offset=34)], [], None, None, lineno=178, col_offset=12), lineno=178, col_offset=12), For(Name('f', Store(), lineno=179, col_offset=16), Attribute(Name('cons', Load(), lineno=179, col_offset=21), 'fields', Load(), lineno=179, col_offset=21), [Expr(Call(Attribute(Name('self', Load(), lineno=180, col_offset=16), 'visit', Load(), lineno=180, col_offset=16), [Name('f', Load(), lineno=180, col_offset=27), BinOp(Name('depth', Load(), lineno=180, col_offset=30), Add(), Num(1, lineno=180, col_offset=38), lineno=180, col_offset=30)], [], None, None, lineno=180, col_offset=16), lineno=180, col_offset=16)], [], lineno=179, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=181, col_offset=12), 'emit', Load(), lineno=181, col_offset=12), [BinOp(Str('} %s;', lineno=181, col_offset=22), Mod(), Attribute(Name('cons', Load(), lineno=181, col_offset=32), 'name', Load(), lineno=181, col_offset=32), lineno=181, col_offset=22), Name('depth', Load(), lineno=181, col_offset=43)], [], None, None, lineno=181, col_offset=12), lineno=181, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=182, col_offset=12), 'emit', Load(), lineno=182, col_offset=12), [Str('', lineno=182, col_offset=22), Name('depth', Load(), lineno=182, col_offset=26)], [], None, None, lineno=182, col_offset=12), lineno=182, col_offset=12)], [Pass( lineno=185, col_offset=12)], lineno=177, col_offset=8)], [], lineno=176, col_offset=4), FunctionDef('visitField', arguments([Name('self', Param(), lineno=187, col_offset=19), Name('field', Param(), lineno=187, col_offset=25), Name('depth', Param(), lineno=187, col_offset=32)], None, None, []), [Assign([Name('ctype', Store(), lineno=190, col_offset=8)], Call(Name('get_c_type', Load(), lineno=190, col_offset=16), [Attribute(Name('field', Load(), lineno=190, col_offset=27), 'type', Load(), lineno=190, col_offset=27)], [], None, None, lineno=190, col_offset=16), lineno=190, col_offset=8), Assign([Name('name', Store(), lineno=191, col_offset=8)], Attribute(Name('field', Load(), lineno=191, col_offset=15), 'name', Load(), lineno=191, col_offset=15), lineno=191, col_offset=8), If(Attribute(Name('field', Load(), lineno=192, col_offset=11), 'seq', Load(), lineno=192, col_offset=11), [If(Compare(Attribute(Attribute(Name('field', Load(), lineno=193, col_offset=15), 'type', Load(), lineno=193, col_offset=15), 'value', Load(), lineno=193, col_offset=15), [In()], [Tuple([Str('cmpop', lineno=193, col_offset=36)], Load(), lineno=193, col_offset=36)], lineno=193, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=194, col_offset=16), 'emit', Load(), lineno=194, col_offset=16), [BinOp(Str('asdl_int_seq *%(name)s;', lineno=194, col_offset=26), Mod(), Call(Name('locals', Load(), lineno=194, col_offset=54), [], [], None, None, lineno=194, col_offset=54), lineno=194, col_offset=26), Name('depth', Load(), lineno=194, col_offset=64)], [], None, None, lineno=194, col_offset=16), lineno=194, col_offset=16)], [Expr(Call(Attribute(Name('self', Load(), lineno=196, col_offset=16), 'emit', Load(), lineno=196, col_offset=16), [BinOp(Str('asdl_seq *%(name)s;', lineno=196, col_offset=26), Mod(), Call(Name('locals', Load(), lineno=196, col_offset=50), [], [], None, None, lineno=196, col_offset=50), lineno=196, col_offset=26), Name('depth', Load(), lineno=196, col_offset=60)], [], None, None, lineno=196, col_offset=16), lineno=196, col_offset=16)], lineno=193, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=198, col_offset=12), 'emit', Load(), lineno=198, col_offset=12), [BinOp(Str('%(ctype)s %(name)s;', lineno=198, col_offset=22), Mod(), Call(Name('locals', Load(), lineno=198, col_offset=46), [], [], None, None, lineno=198, col_offset=46), lineno=198, col_offset=22), Name('depth', Load(), lineno=198, col_offset=56)], [], None, None, lineno=198, col_offset=12), lineno=198, col_offset=12)], lineno=192, col_offset=8)], [], lineno=187, col_offset=4), FunctionDef('visitProduct', arguments([Name('self', Param(), lineno=200, col_offset=21), Name('product', Param(), lineno=200, col_offset=27), Name('name', Param(), lineno=200, col_offset=36), Name('depth', Param(), lineno=200, col_offset=42)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=201, col_offset=8), 'emit', Load(), lineno=201, col_offset=8), [BinOp(Str('struct _%(name)s {', lineno=201, col_offset=18), Mod(), Call(Name('locals', Load(), lineno=201, col_offset=41), [], [], None, None, lineno=201, col_offset=41), lineno=201, col_offset=18), Name('depth', Load(), lineno=201, col_offset=51)], [], None, None, lineno=201, col_offset=8), lineno=201, col_offset=8), For(Name('f', Store(), lineno=202, col_offset=12), Attribute(Name('product', Load(), lineno=202, col_offset=17), 'fields', Load(), lineno=202, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=203, col_offset=12), 'visit', Load(), lineno=203, col_offset=12), [Name('f', Load(), lineno=203, col_offset=23), BinOp(Name('depth', Load(), lineno=203, col_offset=26), Add(), Num(1, lineno=203, col_offset=34), lineno=203, col_offset=26)], [], None, None, lineno=203, col_offset=12), lineno=203, col_offset=12)], [], lineno=202, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=204, col_offset=8), 'emit', Load(), lineno=204, col_offset=8), [Str('};', lineno=204, col_offset=18), Name('depth', Load(), lineno=204, col_offset=24)], [], None, None, lineno=204, col_offset=8), lineno=204, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=205, col_offset=8), 'emit', Load(), lineno=205, col_offset=8), [Str('', lineno=205, col_offset=18), Name('depth', Load(), lineno=205, col_offset=22)], [], None, None, lineno=205, col_offset=8), lineno=205, col_offset=8)], [], lineno=200, col_offset=4)], [], lineno=138, col_offset=0), ClassDef('PrototypeVisitor', [Name('EmitVisitor', Load(), lineno=208, col_offset=23)], [Expr(Str('Generate function prototypes for the .h file', lineno=209, col_offset=4), lineno=209, col_offset=4), FunctionDef('visitModule', arguments([Name('self', Param(), lineno=211, col_offset=20), Name('mod', Param(), lineno=211, col_offset=26)], None, None, []), [For(Name('dfn', Store(), lineno=212, col_offset=12), Attribute(Name('mod', Load(), lineno=212, col_offset=19), 'dfns', Load(), lineno=212, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=213, col_offset=12), 'visit', Load(), lineno=213, col_offset=12), [Name('dfn', Load(), lineno=213, col_offset=23)], [], None, None, lineno=213, col_offset=12), lineno=213, col_offset=12)], [], lineno=212, col_offset=8)], [], lineno=211, col_offset=4), FunctionDef('visitType', arguments([Name('self', Param(), lineno=215, col_offset=18), Name('type', Param(), lineno=215, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=216, col_offset=8), 'visit', Load(), lineno=216, col_offset=8), [Attribute(Name('type', Load(), lineno=216, col_offset=19), 'value', Load(), lineno=216, col_offset=19), Attribute(Name('type', Load(), lineno=216, col_offset=31), 'name', Load(), lineno=216, col_offset=31)], [], None, None, lineno=216, col_offset=8), lineno=216, col_offset=8)], [], lineno=215, col_offset=4), FunctionDef('visitSum', arguments([Name('self', Param(), lineno=218, col_offset=17), Name('sum', Param(), lineno=218, col_offset=23), Name('name', Param(), lineno=218, col_offset=28)], None, None, []), [If(Call(Name('is_simple', Load(), lineno=219, col_offset=11), [Name('sum', Load(), lineno=219, col_offset=21)], [], None, None, lineno=219, col_offset=11), [Pass( lineno=220, col_offset=12)], [For(Name('t', Store(), lineno=222, col_offset=16), Attribute(Name('sum', Load(), lineno=222, col_offset=21), 'types', Load(), lineno=222, col_offset=21), [Expr(Call(Attribute(Name('self', Load(), lineno=223, col_offset=16), 'visit', Load(), lineno=223, col_offset=16), [Name('t', Load(), lineno=223, col_offset=27), Name('name', Load(), lineno=223, col_offset=30), Attribute(Name('sum', Load(), lineno=223, col_offset=36), 'attributes', Load(), lineno=223, col_offset=36)], [], None, None, lineno=223, col_offset=16), lineno=223, col_offset=16)], [], lineno=222, col_offset=12)], lineno=219, col_offset=8)], [], lineno=218, col_offset=4), FunctionDef('get_args', arguments([Name('self', Param(), lineno=225, col_offset=17), Name('fields', Param(), lineno=225, col_offset=23)], None, None, []), [Expr(Str('Return list of C argument into, one for each field.\n\n        Argument info is 3-tuple of a C type, variable name, and flag\n        that is true if type can be NULL.\n        ', lineno=230, col_offset=-1), lineno=230, col_offset=-1), Assign([Name('args', Store(), lineno=231, col_offset=8)], List([], Load(), lineno=231, col_offset=15), lineno=231, col_offset=8), Assign([Name('unnamed', Store(), lineno=232, col_offset=8)], Dict([], [], lineno=232, col_offset=18), lineno=232, col_offset=8), For(Name('f', Store(), lineno=233, col_offset=12), Name('fields', Load(), lineno=233, col_offset=17), [If(Compare(Attribute(Name('f', Load(), lineno=234, col_offset=15), 'name', Load(), lineno=234, col_offset=15), [Is()], [Name('None', Load(), lineno=234, col_offset=25)], lineno=234, col_offset=15), [Assign([Name('name', Store(), lineno=235, col_offset=16)], Attribute(Name('f', Load(), lineno=235, col_offset=23), 'type', Load(), lineno=235, col_offset=23), lineno=235, col_offset=16), Assign([Name('c', Store(), lineno=236, col_offset=16), Subscript(Name('unnamed', Load(), lineno=236, col_offset=20), Index(Name('name', Load(), lineno=236, col_offset=28)), Store(), lineno=236, col_offset=20)], BinOp(Call(Attribute(Name('unnamed', Load(), lineno=236, col_offset=36), 'get', Load(), lineno=236, col_offset=36), [Name('name', Load(), lineno=236, col_offset=48), Num(0, lineno=236, col_offset=54)], [], None, None, lineno=236, col_offset=36), Add(), Num(1, lineno=236, col_offset=59), lineno=236, col_offset=36), lineno=236, col_offset=16), If(Compare(Name('c', Load(), lineno=237, col_offset=19), [Gt()], [Num(1, lineno=237, col_offset=23)], lineno=237, col_offset=19), [Assign([Name('name', Store(), lineno=238, col_offset=20)], BinOp(Str('name%d', lineno=238, col_offset=27), Mod(), BinOp(Name('c', Load(), lineno=238, col_offset=39), Sub(), Num(1, lineno=238, col_offset=43), lineno=238, col_offset=39), lineno=238, col_offset=27), lineno=238, col_offset=20)], [], lineno=237, col_offset=16)], [Assign([Name('name', Store(), lineno=240, col_offset=16)], Attribute(Name('f', Load(), lineno=240, col_offset=23), 'name', Load(), lineno=240, col_offset=23), lineno=240, col_offset=16)], lineno=234, col_offset=12), If(Attribute(Name('f', Load(), lineno=242, col_offset=15), 'seq', Load(), lineno=242, col_offset=15), [If(Compare(Attribute(Attribute(Name('f', Load(), lineno=243, col_offset=19), 'type', Load(), lineno=243, col_offset=19), 'value', Load(), lineno=243, col_offset=19), [In()], [Tuple([Str('cmpop', lineno=243, col_offset=36)], Load(), lineno=243, col_offset=36)], lineno=243, col_offset=19), [Assign([Name('ctype', Store(), lineno=244, col_offset=20)], Str('asdl_int_seq *', lineno=244, col_offset=28), lineno=244, col_offset=20)], [Assign([Name('ctype', Store(), lineno=246, col_offset=20)], Str('asdl_seq *', lineno=246, col_offset=28), lineno=246, col_offset=20)], lineno=243, col_offset=16)], [Assign([Name('ctype', Store(), lineno=248, col_offset=16)], Call(Name('get_c_type', Load(), lineno=248, col_offset=24), [Attribute(Name('f', Load(), lineno=248, col_offset=35), 'type', Load(), lineno=248, col_offset=35)], [], None, None, lineno=248, col_offset=24), lineno=248, col_offset=16)], lineno=242, col_offset=12), Expr(Call(Attribute(Name('args', Load(), lineno=249, col_offset=12), 'append', Load(), lineno=249, col_offset=12), [Tuple([Name('ctype', Load(), lineno=249, col_offset=25), Name('name', Load(), lineno=249, col_offset=32), BoolOp(Or(), [Attribute(Name('f', Load(), lineno=249, col_offset=38), 'opt', Load(), lineno=249, col_offset=38), Attribute(Name('f', Load(), lineno=249, col_offset=47), 'seq', Load(), lineno=249, col_offset=47)], lineno=249, col_offset=38)], Load(), lineno=249, col_offset=25)], [], None, None, lineno=249, col_offset=12), lineno=249, col_offset=12)], [], lineno=233, col_offset=8), Return(Name('args', Load(), lineno=250, col_offset=15), lineno=250, col_offset=8)], [], lineno=225, col_offset=4), FunctionDef('visitConstructor', arguments([Name('self', Param(), lineno=252, col_offset=25), Name('cons', Param(), lineno=252, col_offset=31), Name('type', Param(), lineno=252, col_offset=37), Name('attrs', Param(), lineno=252, col_offset=43)], None, None, []), [Assign([Name('args', Store(), lineno=253, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=253, col_offset=15), 'get_args', Load(), lineno=253, col_offset=15), [Attribute(Name('cons', Load(), lineno=253, col_offset=29), 'fields', Load(), lineno=253, col_offset=29)], [], None, None, lineno=253, col_offset=15), lineno=253, col_offset=8), Assign([Name('attrs', Store(), lineno=254, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=254, col_offset=16), 'get_args', Load(), lineno=254, col_offset=16), [Name('attrs', Load(), lineno=254, col_offset=30)], [], None, None, lineno=254, col_offset=16), lineno=254, col_offset=8), Assign([Name('ctype', Store(), lineno=255, col_offset=8)], Call(Name('get_c_type', Load(), lineno=255, col_offset=16), [Name('type', Load(), lineno=255, col_offset=27)], [], None, None, lineno=255, col_offset=16), lineno=255, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=256, col_offset=8), 'emit_function', Load(), lineno=256, col_offset=8), [Attribute(Name('cons', Load(), lineno=256, col_offset=27), 'name', Load(), lineno=256, col_offset=27), Name('ctype', Load(), lineno=256, col_offset=38), Name('args', Load(), lineno=256, col_offset=45), Name('attrs', Load(), lineno=256, col_offset=51)], [], None, None, lineno=256, col_offset=8), lineno=256, col_offset=8)], [], lineno=252, col_offset=4), FunctionDef('emit_function', arguments([Name('self', Param(), lineno=258, col_offset=22), Name('name', Param(), lineno=258, col_offset=28), Name('ctype', Param(), lineno=258, col_offset=34), Name('args', Param(), lineno=258, col_offset=41), Name('attrs', Param(), lineno=258, col_offset=47), Name('union', Param(), lineno=258, col_offset=54)], None, None, [Name('True', Load(), lineno=258, col_offset=60)]), [Assign([Name('args', Store(), lineno=259, col_offset=8)], BinOp(Name('args', Load(), lineno=259, col_offset=15), Add(), Name('attrs', Load(), lineno=259, col_offset=22), lineno=259, col_offset=15), lineno=259, col_offset=8), If(Name('args', Load(), lineno=260, col_offset=11), [Assign([Name('argstr', Store(), lineno=261, col_offset=12)], Call(Attribute(Str(', ', lineno=261, col_offset=21), 'join', Load(), lineno=261, col_offset=21), [ListComp(BinOp(Str('%s %s', lineno=261, col_offset=32), Mod(), Tuple([Name('atype', Load(), lineno=261, col_offset=43), Name('aname', Load(), lineno=261, col_offset=50)], Load(), lineno=261, col_offset=43), lineno=261, col_offset=32), [comprehension(Tuple([Name('atype', Store(), lineno=262, col_offset=36), Name('aname', Store(), lineno=262, col_offset=43), Name('opt', Store(), lineno=262, col_offset=50)], Store(), lineno=262, col_offset=36), Name('args', Load(), lineno=262, col_offset=57), [])], lineno=261, col_offset=32)], [], None, None, lineno=261, col_offset=21), lineno=261, col_offset=12), AugAssign(Name('argstr', Store(), lineno=263, col_offset=12), Add(), Str(', PyArena *arena', lineno=263, col_offset=22), lineno=263, col_offset=12)], [Assign([Name('argstr', Store(), lineno=265, col_offset=12)], Str('PyArena *arena', lineno=265, col_offset=21), lineno=265, col_offset=12)], lineno=260, col_offset=8), Assign([Name('margs', Store(), lineno=266, col_offset=8)], Str('a0', lineno=266, col_offset=16), lineno=266, col_offset=8), For(Name('i', Store(), lineno=267, col_offset=12), Call(Name('range', Load(), lineno=267, col_offset=17), [Num(1, lineno=267, col_offset=23), BinOp(Call(Name('len', Load(), lineno=267, col_offset=26), [Name('args', Load(), lineno=267, col_offset=30)], [], None, None, lineno=267, col_offset=26), Add(), Num(1, lineno=267, col_offset=36), lineno=267, col_offset=26)], [], None, None, lineno=267, col_offset=17), [AugAssign(Name('margs', Store(), lineno=268, col_offset=12), Add(), BinOp(Str(', a%d', lineno=268, col_offset=21), Mod(), Name('i', Load(), lineno=268, col_offset=31), lineno=268, col_offset=21), lineno=268, col_offset=12)], [], lineno=267, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=269, col_offset=8), 'emit', Load(), lineno=269, col_offset=8), [BinOp(Str('#define %s(%s) _Py_%s(%s)', lineno=269, col_offset=18), Mod(), Tuple([Name('name', Load(), lineno=269, col_offset=49), Name('margs', Load(), lineno=269, col_offset=55), Name('name', Load(), lineno=269, col_offset=62), Name('margs', Load(), lineno=269, col_offset=68)], Load(), lineno=269, col_offset=49), lineno=269, col_offset=18), Num(0, lineno=269, col_offset=76)], [keyword('reflow', Name('False', Load(), lineno=270, col_offset=23))], None, None, lineno=269, col_offset=8), lineno=269, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=271, col_offset=8), 'emit', Load(), lineno=271, col_offset=8), [BinOp(Str('%s _Py_%s(%s);', lineno=271, col_offset=18), Mod(), Tuple([Name('ctype', Load(), lineno=271, col_offset=38), Name('name', Load(), lineno=271, col_offset=45), Name('argstr', Load(), lineno=271, col_offset=51)], Load(), lineno=271, col_offset=38), lineno=271, col_offset=18), Name('False', Load(), lineno=271, col_offset=60)], [], None, None, lineno=271, col_offset=8), lineno=271, col_offset=8)], [], lineno=258, col_offset=4), FunctionDef('visitProduct', arguments([Name('self', Param(), lineno=273, col_offset=21), Name('prod', Param(), lineno=273, col_offset=27), Name('name', Param(), lineno=273, col_offset=33)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=274, col_offset=8), 'emit_function', Load(), lineno=274, col_offset=8), [Name('name', Load(), lineno=274, col_offset=27), Call(Name('get_c_type', Load(), lineno=274, col_offset=33), [Name('name', Load(), lineno=274, col_offset=44)], [], None, None, lineno=274, col_offset=33), Call(Attribute(Name('self', Load(), lineno=275, col_offset=27), 'get_args', Load(), lineno=275, col_offset=27), [Attribute(Name('prod', Load(), lineno=275, col_offset=41), 'fields', Load(), lineno=275, col_offset=41)], [], None, None, lineno=275, col_offset=27), List([], Load(), lineno=275, col_offset=55)], [keyword('union', Name('False', Load(), lineno=275, col_offset=65))], None, None, lineno=274, col_offset=8), lineno=274, col_offset=8)], [], lineno=273, col_offset=4)], [], lineno=208, col_offset=0), ClassDef('FunctionVisitor', [Name('PrototypeVisitor', Load(), lineno=278, col_offset=22)], [Expr(Str('Visitor to generate constructor functions for AST.', lineno=279, col_offset=4), lineno=279, col_offset=4), FunctionDef('emit_function', arguments([Name('self', Param(), lineno=281, col_offset=22), Name('name', Param(), lineno=281, col_offset=28), Name('ctype', Param(), lineno=281, col_offset=34), Name('args', Param(), lineno=281, col_offset=41), Name('attrs', Param(), lineno=281, col_offset=47), Name('union', Param(), lineno=281, col_offset=54)], None, None, [Name('True', Load(), lineno=281, col_offset=60)]), [FunctionDef('emit', arguments([Name('s', Param(), lineno=282, col_offset=17), Name('depth', Param(), lineno=282, col_offset=20), Name('reflow', Param(), lineno=282, col_offset=29)], None, None, [Num(0, lineno=282, col_offset=26), Name('True', Load(), lineno=282, col_offset=36)]), [Expr(Call(Attribute(Name('self', Load(), lineno=283, col_offset=12), 'emit', Load(), lineno=283, col_offset=12), [Name('s', Load(), lineno=283, col_offset=22), Name('depth', Load(), lineno=283, col_offset=25), Name('reflow', Load(), lineno=283, col_offset=32)], [], None, None, lineno=283, col_offset=12), lineno=283, col_offset=12)], [], lineno=282, col_offset=8), Assign([Name('argstr', Store(), lineno=284, col_offset=8)], Call(Attribute(Str(', ', lineno=284, col_offset=17), 'join', Load(), lineno=284, col_offset=17), [ListComp(BinOp(Str('%s %s', lineno=284, col_offset=28), Mod(), Tuple([Name('atype', Load(), lineno=284, col_offset=39), Name('aname', Load(), lineno=284, col_offset=46)], Load(), lineno=284, col_offset=39), lineno=284, col_offset=28), [comprehension(Tuple([Name('atype', Store(), lineno=285, col_offset=32), Name('aname', Store(), lineno=285, col_offset=39), Name('opt', Store(), lineno=285, col_offset=46)], Store(), lineno=285, col_offset=32), BinOp(Name('args', Load(), lineno=285, col_offset=53), Add(), Name('attrs', Load(), lineno=285, col_offset=60), lineno=285, col_offset=53), [])], lineno=284, col_offset=28)], [], None, None, lineno=284, col_offset=17), lineno=284, col_offset=8), If(Name('argstr', Load(), lineno=286, col_offset=11), [AugAssign(Name('argstr', Store(), lineno=287, col_offset=12), Add(), Str(', PyArena *arena', lineno=287, col_offset=22), lineno=287, col_offset=12)], [Assign([Name('argstr', Store(), lineno=289, col_offset=12)], Str('PyArena *arena', lineno=289, col_offset=21), lineno=289, col_offset=12)], lineno=286, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=290, col_offset=8), 'emit', Load(), lineno=290, col_offset=8), [BinOp(Str('%s', lineno=290, col_offset=18), Mod(), Name('ctype', Load(), lineno=290, col_offset=25), lineno=290, col_offset=18), Num(0, lineno=290, col_offset=32)], [], None, None, lineno=290, col_offset=8), lineno=290, col_offset=8), Expr(Call(Name('emit', Load(), lineno=291, col_offset=8), [BinOp(Str('%s(%s)', lineno=291, col_offset=13), Mod(), Tuple([Name('name', Load(), lineno=291, col_offset=25), Name('argstr', Load(), lineno=291, col_offset=31)], Load(), lineno=291, col_offset=25), lineno=291, col_offset=13)], [], None, None, lineno=291, col_offset=8), lineno=291, col_offset=8), Expr(Call(Name('emit', Load(), lineno=292, col_offset=8), [Str('{', lineno=292, col_offset=13)], [], None, None, lineno=292, col_offset=8), lineno=292, col_offset=8), Expr(Call(Name('emit', Load(), lineno=293, col_offset=8), [BinOp(Str('%s p;', lineno=293, col_offset=13), Mod(), Name('ctype', Load(), lineno=293, col_offset=23), lineno=293, col_offset=13), Num(1, lineno=293, col_offset=30)], [], None, None, lineno=293, col_offset=8), lineno=293, col_offset=8), For(Tuple([Name('argtype', Store(), lineno=294, col_offset=12), Name('argname', Store(), lineno=294, col_offset=21), Name('opt', Store(), lineno=294, col_offset=30)], Store(), lineno=294, col_offset=12), Name('args', Load(), lineno=294, col_offset=37), [If(BoolOp(And(), [UnaryOp(Not(), Name('opt', Load(), lineno=296, col_offset=19), lineno=296, col_offset=15), UnaryOp(Not(), BoolOp(Or(), [Compare(Name('argtype', Load(), lineno=296, col_offset=32), [Eq()], [Str('bool', lineno=296, col_offset=43)], lineno=296, col_offset=32), Compare(Name('argtype', Load(), lineno=296, col_offset=53), [Eq()], [Str('int', lineno=296, col_offset=64)], lineno=296, col_offset=53)], lineno=296, col_offset=32), lineno=296, col_offset=27)], lineno=296, col_offset=15), [Expr(Call(Name('emit', Load(), lineno=297, col_offset=16), [BinOp(Str('if (!%s) {', lineno=297, col_offset=21), Mod(), Name('argname', Load(), lineno=297, col_offset=36), lineno=297, col_offset=21), Num(1, lineno=297, col_offset=45)], [], None, None, lineno=297, col_offset=16), lineno=297, col_offset=16), Expr(Call(Name('emit', Load(), lineno=298, col_offset=16), [Str('PyErr_SetString(PyExc_ValueError,', lineno=298, col_offset=21), Num(2, lineno=298, col_offset=58)], [], None, None, lineno=298, col_offset=16), lineno=298, col_offset=16), Assign([Name('msg', Store(), lineno=299, col_offset=16)], BinOp(Str('field %s is required for %s', lineno=299, col_offset=22), Mod(), Tuple([Name('argname', Load(), lineno=299, col_offset=55), Name('name', Load(), lineno=299, col_offset=64)], Load(), lineno=299, col_offset=55), lineno=299, col_offset=22), lineno=299, col_offset=16), Expr(Call(Name('emit', Load(), lineno=300, col_offset=16), [BinOp(Str('                "%s");', lineno=300, col_offset=21), Mod(), Name('msg', Load(), lineno=300, col_offset=48), lineno=300, col_offset=21), Num(2, lineno=301, col_offset=21)], [keyword('reflow', Name('False', Load(), lineno=301, col_offset=31))], None, None, lineno=300, col_offset=16), lineno=300, col_offset=16), Expr(Call(Name('emit', Load(), lineno=302, col_offset=16), [Str('return NULL;', lineno=302, col_offset=21), Num(2, lineno=302, col_offset=37)], [], None, None, lineno=302, col_offset=16), lineno=302, col_offset=16), Expr(Call(Name('emit', Load(), lineno=303, col_offset=16), [Str('}', lineno=303, col_offset=21), Num(1, lineno=303, col_offset=26)], [], None, None, lineno=303, col_offset=16), lineno=303, col_offset=16)], [], lineno=296, col_offset=12)], [], lineno=294, col_offset=8), Expr(Call(Name('emit', Load(), lineno=305, col_offset=8), [BinOp(Str('p = (%s)PyArena_Malloc(arena, sizeof(*p));', lineno=305, col_offset=13), Mod(), Name('ctype', Load(), lineno=305, col_offset=60), lineno=305, col_offset=13), Num(1, lineno=305, col_offset=67)], [], None, None, lineno=305, col_offset=8), lineno=305, col_offset=8), Expr(Call(Name('emit', Load(), lineno=306, col_offset=8), [Str('if (!p)', lineno=306, col_offset=13), Num(1, lineno=306, col_offset=24)], [], None, None, lineno=306, col_offset=8), lineno=306, col_offset=8), Expr(Call(Name('emit', Load(), lineno=307, col_offset=8), [Str('return NULL;', lineno=307, col_offset=13), Num(2, lineno=307, col_offset=29)], [], None, None, lineno=307, col_offset=8), lineno=307, col_offset=8), If(Name('union', Load(), lineno=308, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=309, col_offset=12), 'emit_body_union', Load(), lineno=309, col_offset=12), [Name('name', Load(), lineno=309, col_offset=33), Name('args', Load(), lineno=309, col_offset=39), Name('attrs', Load(), lineno=309, col_offset=45)], [], None, None, lineno=309, col_offset=12), lineno=309, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=311, col_offset=12), 'emit_body_struct', Load(), lineno=311, col_offset=12), [Name('name', Load(), lineno=311, col_offset=34), Name('args', Load(), lineno=311, col_offset=40), Name('attrs', Load(), lineno=311, col_offset=46)], [], None, None, lineno=311, col_offset=12), lineno=311, col_offset=12)], lineno=308, col_offset=8), Expr(Call(Name('emit', Load(), lineno=312, col_offset=8), [Str('return p;', lineno=312, col_offset=13), Num(1, lineno=312, col_offset=26)], [], None, None, lineno=312, col_offset=8), lineno=312, col_offset=8), Expr(Call(Name('emit', Load(), lineno=313, col_offset=8), [Str('}', lineno=313, col_offset=13)], [], None, None, lineno=313, col_offset=8), lineno=313, col_offset=8), Expr(Call(Name('emit', Load(), lineno=314, col_offset=8), [Str('', lineno=314, col_offset=13)], [], None, None, lineno=314, col_offset=8), lineno=314, col_offset=8)], [], lineno=281, col_offset=4), FunctionDef('emit_body_union', arguments([Name('self', Param(), lineno=316, col_offset=24), Name('name', Param(), lineno=316, col_offset=30), Name('args', Param(), lineno=316, col_offset=36), Name('attrs', Param(), lineno=316, col_offset=42)], None, None, []), [FunctionDef('emit', arguments([Name('s', Param(), lineno=317, col_offset=17), Name('depth', Param(), lineno=317, col_offset=20), Name('reflow', Param(), lineno=317, col_offset=29)], None, None, [Num(0, lineno=317, col_offset=26), Name('True', Load(), lineno=317, col_offset=36)]), [Expr(Call(Attribute(Name('self', Load(), lineno=318, col_offset=12), 'emit', Load(), lineno=318, col_offset=12), [Name('s', Load(), lineno=318, col_offset=22), Name('depth', Load(), lineno=318, col_offset=25), Name('reflow', Load(), lineno=318, col_offset=32)], [], None, None, lineno=318, col_offset=12), lineno=318, col_offset=12)], [], lineno=317, col_offset=8), Expr(Call(Name('emit', Load(), lineno=319, col_offset=8), [BinOp(Str('p->kind = %s_kind;', lineno=319, col_offset=13), Mod(), Name('name', Load(), lineno=319, col_offset=36), lineno=319, col_offset=13), Num(1, lineno=319, col_offset=42)], [], None, None, lineno=319, col_offset=8), lineno=319, col_offset=8), For(Tuple([Name('argtype', Store(), lineno=320, col_offset=12), Name('argname', Store(), lineno=320, col_offset=21), Name('opt', Store(), lineno=320, col_offset=30)], Store(), lineno=320, col_offset=12), Name('args', Load(), lineno=320, col_offset=37), [Expr(Call(Name('emit', Load(), lineno=321, col_offset=12), [BinOp(Str('p->v.%s.%s = %s;', lineno=321, col_offset=17), Mod(), Tuple([Name('name', Load(), lineno=321, col_offset=39), Name('argname', Load(), lineno=321, col_offset=45), Name('argname', Load(), lineno=321, col_offset=54)], Load(), lineno=321, col_offset=39), lineno=321, col_offset=17), Num(1, lineno=321, col_offset=64)], [], None, None, lineno=321, col_offset=12), lineno=321, col_offset=12)], [], lineno=320, col_offset=8), For(Tuple([Name('argtype', Store(), lineno=322, col_offset=12), Name('argname', Store(), lineno=322, col_offset=21), Name('opt', Store(), lineno=322, col_offset=30)], Store(), lineno=322, col_offset=12), Name('attrs', Load(), lineno=322, col_offset=37), [Expr(Call(Name('emit', Load(), lineno=323, col_offset=12), [BinOp(Str('p->%s = %s;', lineno=323, col_offset=17), Mod(), Tuple([Name('argname', Load(), lineno=323, col_offset=34), Name('argname', Load(), lineno=323, col_offset=43)], Load(), lineno=323, col_offset=34), lineno=323, col_offset=17), Num(1, lineno=323, col_offset=53)], [], None, None, lineno=323, col_offset=12), lineno=323, col_offset=12)], [], lineno=322, col_offset=8)], [], lineno=316, col_offset=4), FunctionDef('emit_body_struct', arguments([Name('self', Param(), lineno=325, col_offset=25), Name('name', Param(), lineno=325, col_offset=31), Name('args', Param(), lineno=325, col_offset=37), Name('attrs', Param(), lineno=325, col_offset=43)], None, None, []), [FunctionDef('emit', arguments([Name('s', Param(), lineno=326, col_offset=17), Name('depth', Param(), lineno=326, col_offset=20), Name('reflow', Param(), lineno=326, col_offset=29)], None, None, [Num(0, lineno=326, col_offset=26), Name('True', Load(), lineno=326, col_offset=36)]), [Expr(Call(Attribute(Name('self', Load(), lineno=327, col_offset=12), 'emit', Load(), lineno=327, col_offset=12), [Name('s', Load(), lineno=327, col_offset=22), Name('depth', Load(), lineno=327, col_offset=25), Name('reflow', Load(), lineno=327, col_offset=32)], [], None, None, lineno=327, col_offset=12), lineno=327, col_offset=12)], [], lineno=326, col_offset=8), For(Tuple([Name('argtype', Store(), lineno=328, col_offset=12), Name('argname', Store(), lineno=328, col_offset=21), Name('opt', Store(), lineno=328, col_offset=30)], Store(), lineno=328, col_offset=12), Name('args', Load(), lineno=328, col_offset=37), [Expr(Call(Name('emit', Load(), lineno=329, col_offset=12), [BinOp(Str('p->%s = %s;', lineno=329, col_offset=17), Mod(), Tuple([Name('argname', Load(), lineno=329, col_offset=34), Name('argname', Load(), lineno=329, col_offset=43)], Load(), lineno=329, col_offset=34), lineno=329, col_offset=17), Num(1, lineno=329, col_offset=53)], [], None, None, lineno=329, col_offset=12), lineno=329, col_offset=12)], [], lineno=328, col_offset=8), Assert(UnaryOp(Not(), Name('attrs', Load(), lineno=330, col_offset=19), lineno=330, col_offset=15), None, lineno=330, col_offset=8)], [], lineno=325, col_offset=4)], [], lineno=278, col_offset=0), ClassDef('PickleVisitor', [Name('EmitVisitor', Load(), lineno=333, col_offset=20)], [FunctionDef('visitModule', arguments([Name('self', Param(), lineno=335, col_offset=20), Name('mod', Param(), lineno=335, col_offset=26)], None, None, []), [For(Name('dfn', Store(), lineno=336, col_offset=12), Attribute(Name('mod', Load(), lineno=336, col_offset=19), 'dfns', Load(), lineno=336, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=337, col_offset=12), 'visit', Load(), lineno=337, col_offset=12), [Name('dfn', Load(), lineno=337, col_offset=23)], [], None, None, lineno=337, col_offset=12), lineno=337, col_offset=12)], [], lineno=336, col_offset=8)], [], lineno=335, col_offset=4), FunctionDef('visitType', arguments([Name('self', Param(), lineno=339, col_offset=18), Name('type', Param(), lineno=339, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=340, col_offset=8), 'visit', Load(), lineno=340, col_offset=8), [Attribute(Name('type', Load(), lineno=340, col_offset=19), 'value', Load(), lineno=340, col_offset=19), Attribute(Name('type', Load(), lineno=340, col_offset=31), 'name', Load(), lineno=340, col_offset=31)], [], None, None, lineno=340, col_offset=8), lineno=340, col_offset=8)], [], lineno=339, col_offset=4), FunctionDef('visitSum', arguments([Name('self', Param(), lineno=342, col_offset=17), Name('sum', Param(), lineno=342, col_offset=23), Name('name', Param(), lineno=342, col_offset=28)], None, None, []), [Pass( lineno=343, col_offset=8)], [], lineno=342, col_offset=4), FunctionDef('visitProduct', arguments([Name('self', Param(), lineno=345, col_offset=21), Name('sum', Param(), lineno=345, col_offset=27), Name('name', Param(), lineno=345, col_offset=32)], None, None, []), [Pass( lineno=346, col_offset=8)], [], lineno=345, col_offset=4), FunctionDef('visitConstructor', arguments([Name('self', Param(), lineno=348, col_offset=25), Name('cons', Param(), lineno=348, col_offset=31), Name('name', Param(), lineno=348, col_offset=37)], None, None, []), [Pass( lineno=349, col_offset=8)], [], lineno=348, col_offset=4), FunctionDef('visitField', arguments([Name('self', Param(), lineno=351, col_offset=19), Name('sum', Param(), lineno=351, col_offset=25)], None, None, []), [Pass( lineno=352, col_offset=8)], [], lineno=351, col_offset=4)], [], lineno=333, col_offset=0), ClassDef('Obj2ModPrototypeVisitor', [Name('PickleVisitor', Load(), lineno=355, col_offset=30)], [FunctionDef('visitProduct', arguments([Name('self', Param(), lineno=356, col_offset=21), Name('prod', Param(), lineno=356, col_offset=27), Name('name', Param(), lineno=356, col_offset=33)], None, None, []), [Assign([Name('code', Store(), lineno=357, col_offset=8)], Str('static int obj2ast_%s(PyObject* obj, %s* out, PyArena* arena);', lineno=357, col_offset=15), lineno=357, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=358, col_offset=8), 'emit', Load(), lineno=358, col_offset=8), [BinOp(Name('code', Load(), lineno=358, col_offset=18), Mod(), Tuple([Name('name', Load(), lineno=358, col_offset=26), Call(Name('get_c_type', Load(), lineno=358, col_offset=32), [Name('name', Load(), lineno=358, col_offset=43)], [], None, None, lineno=358, col_offset=32)], Load(), lineno=358, col_offset=26), lineno=358, col_offset=18), Num(0, lineno=358, col_offset=51)], [], None, None, lineno=358, col_offset=8), lineno=358, col_offset=8)], [], lineno=356, col_offset=4), Assign([Name('visitSum', Store(), lineno=360, col_offset=4)], Name('visitProduct', Load(), lineno=360, col_offset=15), lineno=360, col_offset=4)], [], lineno=355, col_offset=0), ClassDef('Obj2ModVisitor', [Name('PickleVisitor', Load(), lineno=363, col_offset=21)], [FunctionDef('funcHeader', arguments([Name('self', Param(), lineno=364, col_offset=19), Name('name', Param(), lineno=364, col_offset=25)], None, None, []), [Assign([Name('ctype', Store(), lineno=365, col_offset=8)], Call(Name('get_c_type', Load(), lineno=365, col_offset=16), [Name('name', Load(), lineno=365, col_offset=27)], [], None, None, lineno=365, col_offset=16), lineno=365, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=366, col_offset=8), 'emit', Load(), lineno=366, col_offset=8), [Str('int', lineno=366, col_offset=18), Num(0, lineno=366, col_offset=25)], [], None, None, lineno=366, col_offset=8), lineno=366, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=367, col_offset=8), 'emit', Load(), lineno=367, col_offset=8), [BinOp(Str('obj2ast_%s(PyObject* obj, %s* out, PyArena* arena)', lineno=367, col_offset=18), Mod(), Tuple([Name('name', Load(), lineno=367, col_offset=74), Name('ctype', Load(), lineno=367, col_offset=80)], Load(), lineno=367, col_offset=74), lineno=367, col_offset=18), Num(0, lineno=367, col_offset=88)], [], None, None, lineno=367, col_offset=8), lineno=367, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=368, col_offset=8), 'emit', Load(), lineno=368, col_offset=8), [Str('{', lineno=368, col_offset=18), Num(0, lineno=368, col_offset=23)], [], None, None, lineno=368, col_offset=8), lineno=368, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=369, col_offset=8), 'emit', Load(), lineno=369, col_offset=8), [Str('PyObject* tmp = NULL;', lineno=369, col_offset=18), Num(1, lineno=369, col_offset=43)], [], None, None, lineno=369, col_offset=8), lineno=369, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=370, col_offset=8), 'emit', Load(), lineno=370, col_offset=8), [Str('int isinstance;', lineno=370, col_offset=18), Num(1, lineno=370, col_offset=37)], [], None, None, lineno=370, col_offset=8), lineno=370, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=371, col_offset=8), 'emit', Load(), lineno=371, col_offset=8), [Str('', lineno=371, col_offset=18), Num(0, lineno=371, col_offset=22)], [], None, None, lineno=371, col_offset=8), lineno=371, col_offset=8)], [], lineno=364, col_offset=4), FunctionDef('sumTrailer', arguments([Name('self', Param(), lineno=373, col_offset=19), Name('name', Param(), lineno=373, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=374, col_offset=8), 'emit', Load(), lineno=374, col_offset=8), [Str('', lineno=374, col_offset=18), Num(0, lineno=374, col_offset=22)], [], None, None, lineno=374, col_offset=8), lineno=374, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=375, col_offset=8), 'emit', Load(), lineno=375, col_offset=8), [Str('tmp = PyObject_Repr(obj);', lineno=375, col_offset=18), Num(1, lineno=375, col_offset=47)], [], None, None, lineno=375, col_offset=8), lineno=375, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=377, col_offset=8), 'emit', Load(), lineno=377, col_offset=8), [Str('if (tmp == NULL) goto failed;', lineno=377, col_offset=18), Num(1, lineno=377, col_offset=51)], [], None, None, lineno=377, col_offset=8), lineno=377, col_offset=8), Assign([Name('error', Store(), lineno=378, col_offset=8)], BinOp(Str('expected some sort of %s, but got %%.400s', lineno=378, col_offset=16), Mod(), Name('name', Load(), lineno=378, col_offset=62), lineno=378, col_offset=16), lineno=378, col_offset=8), Assign([Name('format', Store(), lineno=379, col_offset=8)], Str('PyErr_Format(PyExc_TypeError, "%s", PyString_AS_STRING(tmp));', lineno=379, col_offset=17), lineno=379, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=380, col_offset=8), 'emit', Load(), lineno=380, col_offset=8), [BinOp(Name('format', Load(), lineno=380, col_offset=18), Mod(), Name('error', Load(), lineno=380, col_offset=27), lineno=380, col_offset=18), Num(1, lineno=380, col_offset=34)], [keyword('reflow', Name('False', Load(), lineno=380, col_offset=44))], None, None, lineno=380, col_offset=8), lineno=380, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=381, col_offset=8), 'emit', Load(), lineno=381, col_offset=8), [Str('failed:', lineno=381, col_offset=18), Num(0, lineno=381, col_offset=29)], [], None, None, lineno=381, col_offset=8), lineno=381, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=382, col_offset=8), 'emit', Load(), lineno=382, col_offset=8), [Str('Py_XDECREF(tmp);', lineno=382, col_offset=18), Num(1, lineno=382, col_offset=38)], [], None, None, lineno=382, col_offset=8), lineno=382, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=383, col_offset=8), 'emit', Load(), lineno=383, col_offset=8), [Str('return 1;', lineno=383, col_offset=18), Num(1, lineno=383, col_offset=31)], [], None, None, lineno=383, col_offset=8), lineno=383, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=384, col_offset=8), 'emit', Load(), lineno=384, col_offset=8), [Str('}', lineno=384, col_offset=18), Num(0, lineno=384, col_offset=23)], [], None, None, lineno=384, col_offset=8), lineno=384, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=385, col_offset=8), 'emit', Load(), lineno=385, col_offset=8), [Str('', lineno=385, col_offset=18), Num(0, lineno=385, col_offset=22)], [], None, None, lineno=385, col_offset=8), lineno=385, col_offset=8)], [], lineno=373, col_offset=4), FunctionDef('simpleSum', arguments([Name('self', Param(), lineno=387, col_offset=18), Name('sum', Param(), lineno=387, col_offset=24), Name('name', Param(), lineno=387, col_offset=29)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=388, col_offset=8), 'funcHeader', Load(), lineno=388, col_offset=8), [Name('name', Load(), lineno=388, col_offset=24)], [], None, None, lineno=388, col_offset=8), lineno=388, col_offset=8), For(Name('t', Store(), lineno=389, col_offset=12), Attribute(Name('sum', Load(), lineno=389, col_offset=17), 'types', Load(), lineno=389, col_offset=17), [Assign([Name('line', Store(), lineno=390, col_offset=12)], Str('isinstance = PyObject_IsInstance(obj, (PyObject *)%s_type);', lineno=390, col_offset=20), lineno=390, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=392, col_offset=12), 'emit', Load(), lineno=392, col_offset=12), [BinOp(Name('line', Load(), lineno=392, col_offset=22), Mod(), Tuple([Attribute(Name('t', Load(), lineno=392, col_offset=30), 'name', Load(), lineno=392, col_offset=30)], Load(), lineno=392, col_offset=30), lineno=392, col_offset=22), Num(1, lineno=392, col_offset=40)], [], None, None, lineno=392, col_offset=12), lineno=392, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=393, col_offset=12), 'emit', Load(), lineno=393, col_offset=12), [Str('if (isinstance == -1) {', lineno=393, col_offset=22), Num(1, lineno=393, col_offset=49)], [], None, None, lineno=393, col_offset=12), lineno=393, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=394, col_offset=12), 'emit', Load(), lineno=394, col_offset=12), [Str('return 1;', lineno=394, col_offset=22), Num(2, lineno=394, col_offset=35)], [], None, None, lineno=394, col_offset=12), lineno=394, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=395, col_offset=12), 'emit', Load(), lineno=395, col_offset=12), [Str('}', lineno=395, col_offset=22), Num(1, lineno=395, col_offset=27)], [], None, None, lineno=395, col_offset=12), lineno=395, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=396, col_offset=12), 'emit', Load(), lineno=396, col_offset=12), [Str('if (isinstance) {', lineno=396, col_offset=22), Num(1, lineno=396, col_offset=43)], [], None, None, lineno=396, col_offset=12), lineno=396, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=397, col_offset=12), 'emit', Load(), lineno=397, col_offset=12), [BinOp(Str('*out = %s;', lineno=397, col_offset=22), Mod(), Attribute(Name('t', Load(), lineno=397, col_offset=37), 'name', Load(), lineno=397, col_offset=37), lineno=397, col_offset=22), Num(2, lineno=397, col_offset=45)], [], None, None, lineno=397, col_offset=12), lineno=397, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=398, col_offset=12), 'emit', Load(), lineno=398, col_offset=12), [Str('return 0;', lineno=398, col_offset=22), Num(2, lineno=398, col_offset=35)], [], None, None, lineno=398, col_offset=12), lineno=398, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=399, col_offset=12), 'emit', Load(), lineno=399, col_offset=12), [Str('}', lineno=399, col_offset=22), Num(1, lineno=399, col_offset=27)], [], None, None, lineno=399, col_offset=12), lineno=399, col_offset=12)], [], lineno=389, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=400, col_offset=8), 'sumTrailer', Load(), lineno=400, col_offset=8), [Name('name', Load(), lineno=400, col_offset=24)], [], None, None, lineno=400, col_offset=8), lineno=400, col_offset=8)], [], lineno=387, col_offset=4), FunctionDef('buildArgs', arguments([Name('self', Param(), lineno=402, col_offset=18), Name('fields', Param(), lineno=402, col_offset=24)], None, None, []), [Return(Call(Attribute(Str(', ', lineno=403, col_offset=15), 'join', Load(), lineno=403, col_offset=15), [BinOp(Name('fields', Load(), lineno=403, col_offset=25), Add(), List([Str('arena', lineno=403, col_offset=35)], Load(), lineno=403, col_offset=34), lineno=403, col_offset=25)], [], None, None, lineno=403, col_offset=15), lineno=403, col_offset=8)], [], lineno=402, col_offset=4), FunctionDef('complexSum', arguments([Name('self', Param(), lineno=405, col_offset=19), Name('sum', Param(), lineno=405, col_offset=25), Name('name', Param(), lineno=405, col_offset=30)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=406, col_offset=8), 'funcHeader', Load(), lineno=406, col_offset=8), [Name('name', Load(), lineno=406, col_offset=24)], [], None, None, lineno=406, col_offset=8), lineno=406, col_offset=8), For(Name('a', Store(), lineno=407, col_offset=12), Attribute(Name('sum', Load(), lineno=407, col_offset=17), 'attributes', Load(), lineno=407, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=408, col_offset=12), 'visitAttributeDeclaration', Load(), lineno=408, col_offset=12), [Name('a', Load(), lineno=408, col_offset=43), Name('name', Load(), lineno=408, col_offset=46)], [keyword('sum', Name('sum', Load(), lineno=408, col_offset=56))], None, None, lineno=408, col_offset=12), lineno=408, col_offset=12)], [], lineno=407, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=409, col_offset=8), 'emit', Load(), lineno=409, col_offset=8), [Str('', lineno=409, col_offset=18), Num(0, lineno=409, col_offset=22)], [], None, None, lineno=409, col_offset=8), lineno=409, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=411, col_offset=8), 'emit', Load(), lineno=411, col_offset=8), [Str('if (obj == Py_None) {', lineno=411, col_offset=18), Num(1, lineno=411, col_offset=43)], [], None, None, lineno=411, col_offset=8), lineno=411, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=412, col_offset=8), 'emit', Load(), lineno=412, col_offset=8), [Str('*out = NULL;', lineno=412, col_offset=18), Num(2, lineno=412, col_offset=34)], [], None, None, lineno=412, col_offset=8), lineno=412, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=413, col_offset=8), 'emit', Load(), lineno=413, col_offset=8), [Str('return 0;', lineno=413, col_offset=18), Num(2, lineno=413, col_offset=31)], [], None, None, lineno=413, col_offset=8), lineno=413, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=414, col_offset=8), 'emit', Load(), lineno=414, col_offset=8), [Str('}', lineno=414, col_offset=18), Num(1, lineno=414, col_offset=23)], [], None, None, lineno=414, col_offset=8), lineno=414, col_offset=8), For(Name('a', Store(), lineno=415, col_offset=12), Attribute(Name('sum', Load(), lineno=415, col_offset=17), 'attributes', Load(), lineno=415, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=416, col_offset=12), 'visitField', Load(), lineno=416, col_offset=12), [Name('a', Load(), lineno=416, col_offset=28), Name('name', Load(), lineno=416, col_offset=31)], [keyword('sum', Name('sum', Load(), lineno=416, col_offset=41)), keyword('depth', Num(1, lineno=416, col_offset=52))], None, None, lineno=416, col_offset=12), lineno=416, col_offset=12)], [], lineno=415, col_offset=8), For(Name('t', Store(), lineno=417, col_offset=12), Attribute(Name('sum', Load(), lineno=417, col_offset=17), 'types', Load(), lineno=417, col_offset=17), [Assign([Name('line', Store(), lineno=418, col_offset=12)], Str('isinstance = PyObject_IsInstance(obj, (PyObject*)%s_type);', lineno=418, col_offset=19), lineno=418, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=419, col_offset=12), 'emit', Load(), lineno=419, col_offset=12), [BinOp(Name('line', Load(), lineno=419, col_offset=22), Mod(), Tuple([Attribute(Name('t', Load(), lineno=419, col_offset=30), 'name', Load(), lineno=419, col_offset=30)], Load(), lineno=419, col_offset=30), lineno=419, col_offset=22), Num(1, lineno=419, col_offset=40)], [], None, None, lineno=419, col_offset=12), lineno=419, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=420, col_offset=12), 'emit', Load(), lineno=420, col_offset=12), [Str('if (isinstance == -1) {', lineno=420, col_offset=22), Num(1, lineno=420, col_offset=49)], [], None, None, lineno=420, col_offset=12), lineno=420, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=421, col_offset=12), 'emit', Load(), lineno=421, col_offset=12), [Str('return 1;', lineno=421, col_offset=22), Num(2, lineno=421, col_offset=35)], [], None, None, lineno=421, col_offset=12), lineno=421, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=422, col_offset=12), 'emit', Load(), lineno=422, col_offset=12), [Str('}', lineno=422, col_offset=22), Num(1, lineno=422, col_offset=27)], [], None, None, lineno=422, col_offset=12), lineno=422, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=423, col_offset=12), 'emit', Load(), lineno=423, col_offset=12), [Str('if (isinstance) {', lineno=423, col_offset=22), Num(1, lineno=423, col_offset=43)], [], None, None, lineno=423, col_offset=12), lineno=423, col_offset=12), For(Name('f', Store(), lineno=424, col_offset=16), Attribute(Name('t', Load(), lineno=424, col_offset=21), 'fields', Load(), lineno=424, col_offset=21), [Expr(Call(Attribute(Name('self', Load(), lineno=425, col_offset=16), 'visitFieldDeclaration', Load(), lineno=425, col_offset=16), [Name('f', Load(), lineno=425, col_offset=43), Attribute(Name('t', Load(), lineno=425, col_offset=46), 'name', Load(), lineno=425, col_offset=46)], [keyword('sum', Name('sum', Load(), lineno=425, col_offset=58)), keyword('depth', Num(2, lineno=425, col_offset=69))], None, None, lineno=425, col_offset=16), lineno=425, col_offset=16)], [], lineno=424, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=426, col_offset=12), 'emit', Load(), lineno=426, col_offset=12), [Str('', lineno=426, col_offset=22), Num(0, lineno=426, col_offset=26)], [], None, None, lineno=426, col_offset=12), lineno=426, col_offset=12), For(Name('f', Store(), lineno=427, col_offset=16), Attribute(Name('t', Load(), lineno=427, col_offset=21), 'fields', Load(), lineno=427, col_offset=21), [Expr(Call(Attribute(Name('self', Load(), lineno=428, col_offset=16), 'visitField', Load(), lineno=428, col_offset=16), [Name('f', Load(), lineno=428, col_offset=32), Attribute(Name('t', Load(), lineno=428, col_offset=35), 'name', Load(), lineno=428, col_offset=35)], [keyword('sum', Name('sum', Load(), lineno=428, col_offset=47)), keyword('depth', Num(2, lineno=428, col_offset=58))], None, None, lineno=428, col_offset=16), lineno=428, col_offset=16)], [], lineno=427, col_offset=12), Assign([Name('args', Store(), lineno=429, col_offset=12)], BinOp(ListComp(Attribute(Attribute(Name('f', Load(), lineno=429, col_offset=20), 'name', Load(), lineno=429, col_offset=20), 'value', Load(), lineno=429, col_offset=20), [comprehension(Name('f', Store(), lineno=429, col_offset=37), Attribute(Name('t', Load(), lineno=429, col_offset=42), 'fields', Load(), lineno=429, col_offset=42), [])], lineno=429, col_offset=20), Add(), ListComp(Attribute(Attribute(Name('a', Load(), lineno=429, col_offset=55), 'name', Load(), lineno=429, col_offset=55), 'value', Load(), lineno=429, col_offset=55), [comprehension(Name('a', Store(), lineno=429, col_offset=72), Attribute(Name('sum', Load(), lineno=429, col_offset=77), 'attributes', Load(), lineno=429, col_offset=77), [])], lineno=429, col_offset=55), lineno=429, col_offset=19), lineno=429, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=430, col_offset=12), 'emit', Load(), lineno=430, col_offset=12), [BinOp(Str('*out = %s(%s);', lineno=430, col_offset=22), Mod(), Tuple([Attribute(Name('t', Load(), lineno=430, col_offset=42), 'name', Load(), lineno=430, col_offset=42), Call(Attribute(Name('self', Load(), lineno=430, col_offset=50), 'buildArgs', Load(), lineno=430, col_offset=50), [Name('args', Load(), lineno=430, col_offset=65)], [], None, None, lineno=430, col_offset=50)], Load(), lineno=430, col_offset=42), lineno=430, col_offset=22), Num(2, lineno=430, col_offset=73)], [], None, None, lineno=430, col_offset=12), lineno=430, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=431, col_offset=12), 'emit', Load(), lineno=431, col_offset=12), [Str('if (*out == NULL) goto failed;', lineno=431, col_offset=22), Num(2, lineno=431, col_offset=56)], [], None, None, lineno=431, col_offset=12), lineno=431, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=432, col_offset=12), 'emit', Load(), lineno=432, col_offset=12), [Str('return 0;', lineno=432, col_offset=22), Num(2, lineno=432, col_offset=35)], [], None, None, lineno=432, col_offset=12), lineno=432, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=433, col_offset=12), 'emit', Load(), lineno=433, col_offset=12), [Str('}', lineno=433, col_offset=22), Num(1, lineno=433, col_offset=27)], [], None, None, lineno=433, col_offset=12), lineno=433, col_offset=12)], [], lineno=417, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=434, col_offset=8), 'sumTrailer', Load(), lineno=434, col_offset=8), [Name('name', Load(), lineno=434, col_offset=24)], [], None, None, lineno=434, col_offset=8), lineno=434, col_offset=8)], [], lineno=405, col_offset=4), FunctionDef('visitAttributeDeclaration', arguments([Name('self', Param(), lineno=436, col_offset=34), Name('a', Param(), lineno=436, col_offset=40), Name('name', Param(), lineno=436, col_offset=43), Name('sum', Param(), lineno=436, col_offset=49)], None, None, [Name('sum', Load(), lineno=436, col_offset=53)]), [Assign([Name('ctype', Store(), lineno=437, col_offset=8)], Call(Name('get_c_type', Load(), lineno=437, col_offset=16), [Attribute(Name('a', Load(), lineno=437, col_offset=27), 'type', Load(), lineno=437, col_offset=27)], [], None, None, lineno=437, col_offset=16), lineno=437, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=438, col_offset=8), 'emit', Load(), lineno=438, col_offset=8), [BinOp(Str('%s %s;', lineno=438, col_offset=18), Mod(), Tuple([Name('ctype', Load(), lineno=438, col_offset=30), Attribute(Name('a', Load(), lineno=438, col_offset=37), 'name', Load(), lineno=438, col_offset=37)], Load(), lineno=438, col_offset=30), lineno=438, col_offset=18), Num(1, lineno=438, col_offset=46)], [], None, None, lineno=438, col_offset=8), lineno=438, col_offset=8)], [], lineno=436, col_offset=4), FunctionDef('visitSum', arguments([Name('self', Param(), lineno=440, col_offset=17), Name('sum', Param(), lineno=440, col_offset=23), Name('name', Param(), lineno=440, col_offset=28)], None, None, []), [If(Call(Name('is_simple', Load(), lineno=441, col_offset=11), [Name('sum', Load(), lineno=441, col_offset=21)], [], None, None, lineno=441, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=442, col_offset=12), 'simpleSum', Load(), lineno=442, col_offset=12), [Name('sum', Load(), lineno=442, col_offset=27), Name('name', Load(), lineno=442, col_offset=32)], [], None, None, lineno=442, col_offset=12), lineno=442, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=444, col_offset=12), 'complexSum', Load(), lineno=444, col_offset=12), [Name('sum', Load(), lineno=444, col_offset=28), Name('name', Load(), lineno=444, col_offset=33)], [], None, None, lineno=444, col_offset=12), lineno=444, col_offset=12)], lineno=441, col_offset=8)], [], lineno=440, col_offset=4), FunctionDef('visitProduct', arguments([Name('self', Param(), lineno=446, col_offset=21), Name('prod', Param(), lineno=446, col_offset=27), Name('name', Param(), lineno=446, col_offset=33)], None, None, []), [Assign([Name('ctype', Store(), lineno=447, col_offset=8)], Call(Name('get_c_type', Load(), lineno=447, col_offset=16), [Name('name', Load(), lineno=447, col_offset=27)], [], None, None, lineno=447, col_offset=16), lineno=447, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=448, col_offset=8), 'emit', Load(), lineno=448, col_offset=8), [Str('int', lineno=448, col_offset=18), Num(0, lineno=448, col_offset=25)], [], None, None, lineno=448, col_offset=8), lineno=448, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=449, col_offset=8), 'emit', Load(), lineno=449, col_offset=8), [BinOp(Str('obj2ast_%s(PyObject* obj, %s* out, PyArena* arena)', lineno=449, col_offset=18), Mod(), Tuple([Name('name', Load(), lineno=449, col_offset=74), Name('ctype', Load(), lineno=449, col_offset=80)], Load(), lineno=449, col_offset=74), lineno=449, col_offset=18), Num(0, lineno=449, col_offset=88)], [], None, None, lineno=449, col_offset=8), lineno=449, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=450, col_offset=8), 'emit', Load(), lineno=450, col_offset=8), [Str('{', lineno=450, col_offset=18), Num(0, lineno=450, col_offset=23)], [], None, None, lineno=450, col_offset=8), lineno=450, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=451, col_offset=8), 'emit', Load(), lineno=451, col_offset=8), [Str('PyObject* tmp = NULL;', lineno=451, col_offset=18), Num(1, lineno=451, col_offset=43)], [], None, None, lineno=451, col_offset=8), lineno=451, col_offset=8), For(Name('f', Store(), lineno=452, col_offset=12), Attribute(Name('prod', Load(), lineno=452, col_offset=17), 'fields', Load(), lineno=452, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=453, col_offset=12), 'visitFieldDeclaration', Load(), lineno=453, col_offset=12), [Name('f', Load(), lineno=453, col_offset=39), Name('name', Load(), lineno=453, col_offset=42)], [keyword('prod', Name('prod', Load(), lineno=453, col_offset=53)), keyword('depth', Num(1, lineno=453, col_offset=65))], None, None, lineno=453, col_offset=12), lineno=453, col_offset=12)], [], lineno=452, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=454, col_offset=8), 'emit', Load(), lineno=454, col_offset=8), [Str('', lineno=454, col_offset=18), Num(0, lineno=454, col_offset=22)], [], None, None, lineno=454, col_offset=8), lineno=454, col_offset=8), For(Name('f', Store(), lineno=455, col_offset=12), Attribute(Name('prod', Load(), lineno=455, col_offset=17), 'fields', Load(), lineno=455, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=456, col_offset=12), 'visitField', Load(), lineno=456, col_offset=12), [Name('f', Load(), lineno=456, col_offset=28), Name('name', Load(), lineno=456, col_offset=31)], [keyword('prod', Name('prod', Load(), lineno=456, col_offset=42)), keyword('depth', Num(1, lineno=456, col_offset=54))], None, None, lineno=456, col_offset=12), lineno=456, col_offset=12)], [], lineno=455, col_offset=8), Assign([Name('args', Store(), lineno=457, col_offset=8)], ListComp(Attribute(Attribute(Name('f', Load(), lineno=457, col_offset=16), 'name', Load(), lineno=457, col_offset=16), 'value', Load(), lineno=457, col_offset=16), [comprehension(Name('f', Store(), lineno=457, col_offset=33), Attribute(Name('prod', Load(), lineno=457, col_offset=38), 'fields', Load(), lineno=457, col_offset=38), [])], lineno=457, col_offset=16), lineno=457, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=458, col_offset=8), 'emit', Load(), lineno=458, col_offset=8), [BinOp(Str('*out = %s(%s);', lineno=458, col_offset=18), Mod(), Tuple([Name('name', Load(), lineno=458, col_offset=38), Call(Attribute(Name('self', Load(), lineno=458, col_offset=44), 'buildArgs', Load(), lineno=458, col_offset=44), [Name('args', Load(), lineno=458, col_offset=59)], [], None, None, lineno=458, col_offset=44)], Load(), lineno=458, col_offset=38), lineno=458, col_offset=18), Num(1, lineno=458, col_offset=67)], [], None, None, lineno=458, col_offset=8), lineno=458, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=459, col_offset=8), 'emit', Load(), lineno=459, col_offset=8), [Str('return 0;', lineno=459, col_offset=18), Num(1, lineno=459, col_offset=31)], [], None, None, lineno=459, col_offset=8), lineno=459, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=460, col_offset=8), 'emit', Load(), lineno=460, col_offset=8), [Str('failed:', lineno=460, col_offset=18), Num(0, lineno=460, col_offset=29)], [], None, None, lineno=460, col_offset=8), lineno=460, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=461, col_offset=8), 'emit', Load(), lineno=461, col_offset=8), [Str('Py_XDECREF(tmp);', lineno=461, col_offset=18), Num(1, lineno=461, col_offset=38)], [], None, None, lineno=461, col_offset=8), lineno=461, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=462, col_offset=8), 'emit', Load(), lineno=462, col_offset=8), [Str('return 1;', lineno=462, col_offset=18), Num(1, lineno=462, col_offset=31)], [], None, None, lineno=462, col_offset=8), lineno=462, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=463, col_offset=8), 'emit', Load(), lineno=463, col_offset=8), [Str('}', lineno=463, col_offset=18), Num(0, lineno=463, col_offset=23)], [], None, None, lineno=463, col_offset=8), lineno=463, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=464, col_offset=8), 'emit', Load(), lineno=464, col_offset=8), [Str('', lineno=464, col_offset=18), Num(0, lineno=464, col_offset=22)], [], None, None, lineno=464, col_offset=8), lineno=464, col_offset=8)], [], lineno=446, col_offset=4), FunctionDef('visitFieldDeclaration', arguments([Name('self', Param(), lineno=466, col_offset=30), Name('field', Param(), lineno=466, col_offset=36), Name('name', Param(), lineno=466, col_offset=43), Name('sum', Param(), lineno=466, col_offset=49), Name('prod', Param(), lineno=466, col_offset=59), Name('depth', Param(), lineno=466, col_offset=70)], None, None, [Name('None', Load(), lineno=466, col_offset=53), Name('None', Load(), lineno=466, col_offset=64), Num(0, lineno=466, col_offset=76)]), [Assign([Name('ctype', Store(), lineno=467, col_offset=8)], Call(Name('get_c_type', Load(), lineno=467, col_offset=16), [Attribute(Name('field', Load(), lineno=467, col_offset=27), 'type', Load(), lineno=467, col_offset=27)], [], None, None, lineno=467, col_offset=16), lineno=467, col_offset=8), If(Attribute(Name('field', Load(), lineno=468, col_offset=11), 'seq', Load(), lineno=468, col_offset=11), [If(Call(Attribute(Name('self', Load(), lineno=469, col_offset=15), 'isSimpleType', Load(), lineno=469, col_offset=15), [Name('field', Load(), lineno=469, col_offset=33)], [], None, None, lineno=469, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=470, col_offset=16), 'emit', Load(), lineno=470, col_offset=16), [BinOp(Str('asdl_int_seq* %s;', lineno=470, col_offset=26), Mod(), Attribute(Name('field', Load(), lineno=470, col_offset=48), 'name', Load(), lineno=470, col_offset=48), lineno=470, col_offset=26), Name('depth', Load(), lineno=470, col_offset=60)], [], None, None, lineno=470, col_offset=16), lineno=470, col_offset=16)], [Expr(Call(Attribute(Name('self', Load(), lineno=472, col_offset=16), 'emit', Load(), lineno=472, col_offset=16), [BinOp(Str('asdl_seq* %s;', lineno=472, col_offset=26), Mod(), Attribute(Name('field', Load(), lineno=472, col_offset=44), 'name', Load(), lineno=472, col_offset=44), lineno=472, col_offset=26), Name('depth', Load(), lineno=472, col_offset=56)], [], None, None, lineno=472, col_offset=16), lineno=472, col_offset=16)], lineno=469, col_offset=12)], [Assign([Name('ctype', Store(), lineno=474, col_offset=12)], Call(Name('get_c_type', Load(), lineno=474, col_offset=20), [Attribute(Name('field', Load(), lineno=474, col_offset=31), 'type', Load(), lineno=474, col_offset=31)], [], None, None, lineno=474, col_offset=20), lineno=474, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=475, col_offset=12), 'emit', Load(), lineno=475, col_offset=12), [BinOp(Str('%s %s;', lineno=475, col_offset=22), Mod(), Tuple([Name('ctype', Load(), lineno=475, col_offset=34), Attribute(Name('field', Load(), lineno=475, col_offset=41), 'name', Load(), lineno=475, col_offset=41)], Load(), lineno=475, col_offset=34), lineno=475, col_offset=22), Name('depth', Load(), lineno=475, col_offset=54)], [], None, None, lineno=475, col_offset=12), lineno=475, col_offset=12)], lineno=468, col_offset=8)], [], lineno=466, col_offset=4), FunctionDef('isSimpleSum', arguments([Name('self', Param(), lineno=477, col_offset=20), Name('field', Param(), lineno=477, col_offset=26)], None, None, []), [Return(Compare(Attribute(Attribute(Name('field', Load(), lineno=479, col_offset=15), 'type', Load(), lineno=479, col_offset=15), 'value', Load(), lineno=479, col_offset=15), [In()], [Tuple([Str('expr_context', lineno=479, col_offset=36), Str('boolop', lineno=479, col_offset=52), Str('operator', lineno=479, col_offset=62), Str('unaryop', lineno=480, col_offset=36), Str('cmpop', lineno=480, col_offset=47)], Load(), lineno=479, col_offset=36)], lineno=479, col_offset=15), lineno=479, col_offset=8)], [], lineno=477, col_offset=4), FunctionDef('isNumeric', arguments([Name('self', Param(), lineno=482, col_offset=18), Name('field', Param(), lineno=482, col_offset=24)], None, None, []), [Return(Compare(Call(Name('get_c_type', Load(), lineno=483, col_offset=15), [Attribute(Name('field', Load(), lineno=483, col_offset=26), 'type', Load(), lineno=483, col_offset=26)], [], None, None, lineno=483, col_offset=15), [In()], [Tuple([Str('int', lineno=483, col_offset=42), Str('bool', lineno=483, col_offset=49)], Load(), lineno=483, col_offset=42)], lineno=483, col_offset=15), lineno=483, col_offset=8)], [], lineno=482, col_offset=4), FunctionDef('isSimpleType', arguments([Name('self', Param(), lineno=485, col_offset=21), Name('field', Param(), lineno=485, col_offset=27)], None, None, []), [Return(BoolOp(Or(), [Call(Attribute(Name('self', Load(), lineno=486, col_offset=15), 'isSimpleSum', Load(), lineno=486, col_offset=15), [Name('field', Load(), lineno=486, col_offset=32)], [], None, None, lineno=486, col_offset=15), Call(Attribute(Name('self', Load(), lineno=486, col_offset=42), 'isNumeric', Load(), lineno=486, col_offset=42), [Name('field', Load(), lineno=486, col_offset=57)], [], None, None, lineno=486, col_offset=42)], lineno=486, col_offset=15), lineno=486, col_offset=8)], [], lineno=485, col_offset=4), FunctionDef('visitField', arguments([Name('self', Param(), lineno=488, col_offset=19), Name('field', Param(), lineno=488, col_offset=25), Name('name', Param(), lineno=488, col_offset=32), Name('sum', Param(), lineno=488, col_offset=38), Name('prod', Param(), lineno=488, col_offset=48), Name('depth', Param(), lineno=488, col_offset=59)], None, None, [Name('None', Load(), lineno=488, col_offset=42), Name('None', Load(), lineno=488, col_offset=53), Num(0, lineno=488, col_offset=65)]), [Assign([Name('ctype', Store(), lineno=489, col_offset=8)], Call(Name('get_c_type', Load(), lineno=489, col_offset=16), [Attribute(Name('field', Load(), lineno=489, col_offset=27), 'type', Load(), lineno=489, col_offset=27)], [], None, None, lineno=489, col_offset=16), lineno=489, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=490, col_offset=8), 'emit', Load(), lineno=490, col_offset=8), [BinOp(Str('if (PyObject_HasAttrString(obj, "%s")) {', lineno=490, col_offset=18), Mod(), Attribute(Name('field', Load(), lineno=490, col_offset=65), 'name', Load(), lineno=490, col_offset=65), lineno=490, col_offset=18), Name('depth', Load(), lineno=490, col_offset=77)], [], None, None, lineno=490, col_offset=8), lineno=490, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=491, col_offset=8), 'emit', Load(), lineno=491, col_offset=8), [Str('int res;', lineno=491, col_offset=18), BinOp(Name('depth', Load(), lineno=491, col_offset=30), Add(), Num(1, lineno=491, col_offset=36), lineno=491, col_offset=30)], [], None, None, lineno=491, col_offset=8), lineno=491, col_offset=8), If(Attribute(Name('field', Load(), lineno=492, col_offset=11), 'seq', Load(), lineno=492, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=493, col_offset=12), 'emit', Load(), lineno=493, col_offset=12), [Str('Py_ssize_t len;', lineno=493, col_offset=22), BinOp(Name('depth', Load(), lineno=493, col_offset=41), Add(), Num(1, lineno=493, col_offset=47), lineno=493, col_offset=41)], [], None, None, lineno=493, col_offset=12), lineno=493, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=494, col_offset=12), 'emit', Load(), lineno=494, col_offset=12), [Str('Py_ssize_t i;', lineno=494, col_offset=22), BinOp(Name('depth', Load(), lineno=494, col_offset=39), Add(), Num(1, lineno=494, col_offset=45), lineno=494, col_offset=39)], [], None, None, lineno=494, col_offset=12), lineno=494, col_offset=12)], [], lineno=492, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=495, col_offset=8), 'emit', Load(), lineno=495, col_offset=8), [BinOp(Str('tmp = PyObject_GetAttrString(obj, "%s");', lineno=495, col_offset=18), Mod(), Attribute(Name('field', Load(), lineno=495, col_offset=65), 'name', Load(), lineno=495, col_offset=65), lineno=495, col_offset=18), BinOp(Name('depth', Load(), lineno=495, col_offset=77), Add(), Num(1, lineno=495, col_offset=83), lineno=495, col_offset=77)], [], None, None, lineno=495, col_offset=8), lineno=495, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=496, col_offset=8), 'emit', Load(), lineno=496, col_offset=8), [Str('if (tmp == NULL) goto failed;', lineno=496, col_offset=18), BinOp(Name('depth', Load(), lineno=496, col_offset=51), Add(), Num(1, lineno=496, col_offset=57), lineno=496, col_offset=51)], [], None, None, lineno=496, col_offset=8), lineno=496, col_offset=8), If(Attribute(Name('field', Load(), lineno=497, col_offset=11), 'seq', Load(), lineno=497, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=498, col_offset=12), 'emit', Load(), lineno=498, col_offset=12), [Str('if (!PyList_Check(tmp)) {', lineno=498, col_offset=22), BinOp(Name('depth', Load(), lineno=498, col_offset=51), Add(), Num(1, lineno=498, col_offset=57), lineno=498, col_offset=51)], [], None, None, lineno=498, col_offset=12), lineno=498, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=499, col_offset=12), 'emit', Load(), lineno=499, col_offset=12), [BinOp(Str('PyErr_Format(PyExc_TypeError, "%s field \\"%s\\" must be a list, not a %%.200s", tmp->ob_type->tp_name);', lineno=499, col_offset=22), Mod(), Tuple([Name('name', Load(), lineno=501, col_offset=23), Attribute(Name('field', Load(), lineno=501, col_offset=29), 'name', Load(), lineno=501, col_offset=29)], Load(), lineno=501, col_offset=23), lineno=499, col_offset=22), BinOp(Name('depth', Load(), lineno=502, col_offset=22), Add(), Num(2, lineno=502, col_offset=28), lineno=502, col_offset=22)], [keyword('reflow', Name('False', Load(), lineno=502, col_offset=38))], None, None, lineno=499, col_offset=12), lineno=499, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=503, col_offset=12), 'emit', Load(), lineno=503, col_offset=12), [Str('goto failed;', lineno=503, col_offset=22), BinOp(Name('depth', Load(), lineno=503, col_offset=38), Add(), Num(2, lineno=503, col_offset=44), lineno=503, col_offset=38)], [], None, None, lineno=503, col_offset=12), lineno=503, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=504, col_offset=12), 'emit', Load(), lineno=504, col_offset=12), [Str('}', lineno=504, col_offset=22), BinOp(Name('depth', Load(), lineno=504, col_offset=27), Add(), Num(1, lineno=504, col_offset=33), lineno=504, col_offset=27)], [], None, None, lineno=504, col_offset=12), lineno=504, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=505, col_offset=12), 'emit', Load(), lineno=505, col_offset=12), [Str('len = PyList_GET_SIZE(tmp);', lineno=505, col_offset=22), BinOp(Name('depth', Load(), lineno=505, col_offset=53), Add(), Num(1, lineno=505, col_offset=59), lineno=505, col_offset=53)], [], None, None, lineno=505, col_offset=12), lineno=505, col_offset=12), If(Call(Attribute(Name('self', Load(), lineno=506, col_offset=15), 'isSimpleType', Load(), lineno=506, col_offset=15), [Name('field', Load(), lineno=506, col_offset=33)], [], None, None, lineno=506, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=507, col_offset=16), 'emit', Load(), lineno=507, col_offset=16), [BinOp(Str('%s = asdl_int_seq_new(len, arena);', lineno=507, col_offset=26), Mod(), Attribute(Name('field', Load(), lineno=507, col_offset=65), 'name', Load(), lineno=507, col_offset=65), lineno=507, col_offset=26), BinOp(Name('depth', Load(), lineno=507, col_offset=77), Add(), Num(1, lineno=507, col_offset=83), lineno=507, col_offset=77)], [], None, None, lineno=507, col_offset=16), lineno=507, col_offset=16)], [Expr(Call(Attribute(Name('self', Load(), lineno=509, col_offset=16), 'emit', Load(), lineno=509, col_offset=16), [BinOp(Str('%s = asdl_seq_new(len, arena);', lineno=509, col_offset=26), Mod(), Attribute(Name('field', Load(), lineno=509, col_offset=61), 'name', Load(), lineno=509, col_offset=61), lineno=509, col_offset=26), BinOp(Name('depth', Load(), lineno=509, col_offset=73), Add(), Num(1, lineno=509, col_offset=79), lineno=509, col_offset=73)], [], None, None, lineno=509, col_offset=16), lineno=509, col_offset=16)], lineno=506, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=510, col_offset=12), 'emit', Load(), lineno=510, col_offset=12), [BinOp(Str('if (%s == NULL) goto failed;', lineno=510, col_offset=22), Mod(), Attribute(Name('field', Load(), lineno=510, col_offset=55), 'name', Load(), lineno=510, col_offset=55), lineno=510, col_offset=22), BinOp(Name('depth', Load(), lineno=510, col_offset=67), Add(), Num(1, lineno=510, col_offset=73), lineno=510, col_offset=67)], [], None, None, lineno=510, col_offset=12), lineno=510, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=511, col_offset=12), 'emit', Load(), lineno=511, col_offset=12), [Str('for (i = 0; i < len; i++) {', lineno=511, col_offset=22), BinOp(Name('depth', Load(), lineno=511, col_offset=53), Add(), Num(1, lineno=511, col_offset=59), lineno=511, col_offset=53)], [], None, None, lineno=511, col_offset=12), lineno=511, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=512, col_offset=12), 'emit', Load(), lineno=512, col_offset=12), [BinOp(Str('%s value;', lineno=512, col_offset=22), Mod(), Name('ctype', Load(), lineno=512, col_offset=36), lineno=512, col_offset=22), BinOp(Name('depth', Load(), lineno=512, col_offset=43), Add(), Num(2, lineno=512, col_offset=49), lineno=512, col_offset=43)], [], None, None, lineno=512, col_offset=12), lineno=512, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=513, col_offset=12), 'emit', Load(), lineno=513, col_offset=12), [BinOp(Str('res = obj2ast_%s(PyList_GET_ITEM(tmp, i), &value, arena);', lineno=513, col_offset=22), Mod(), Attribute(Name('field', Load(), lineno=514, col_offset=22), 'type', Load(), lineno=514, col_offset=22), lineno=513, col_offset=22), BinOp(Name('depth', Load(), lineno=514, col_offset=34), Add(), Num(2, lineno=514, col_offset=40), lineno=514, col_offset=34)], [keyword('reflow', Name('False', Load(), lineno=514, col_offset=50))], None, None, lineno=513, col_offset=12), lineno=513, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=515, col_offset=12), 'emit', Load(), lineno=515, col_offset=12), [Str('if (res != 0) goto failed;', lineno=515, col_offset=22), BinOp(Name('depth', Load(), lineno=515, col_offset=52), Add(), Num(2, lineno=515, col_offset=58), lineno=515, col_offset=52)], [], None, None, lineno=515, col_offset=12), lineno=515, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=516, col_offset=12), 'emit', Load(), lineno=516, col_offset=12), [BinOp(Str('asdl_seq_SET(%s, i, value);', lineno=516, col_offset=22), Mod(), Attribute(Name('field', Load(), lineno=516, col_offset=54), 'name', Load(), lineno=516, col_offset=54), lineno=516, col_offset=22), BinOp(Name('depth', Load(), lineno=516, col_offset=66), Add(), Num(2, lineno=516, col_offset=72), lineno=516, col_offset=66)], [], None, None, lineno=516, col_offset=12), lineno=516, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=517, col_offset=12), 'emit', Load(), lineno=517, col_offset=12), [Str('}', lineno=517, col_offset=22), BinOp(Name('depth', Load(), lineno=517, col_offset=27), Add(), Num(1, lineno=517, col_offset=33), lineno=517, col_offset=27)], [], None, None, lineno=517, col_offset=12), lineno=517, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=519, col_offset=12), 'emit', Load(), lineno=519, col_offset=12), [BinOp(Str('res = obj2ast_%s(tmp, &%s, arena);', lineno=519, col_offset=22), Mod(), Tuple([Attribute(Name('field', Load(), lineno=520, col_offset=23), 'type', Load(), lineno=520, col_offset=23), Attribute(Name('field', Load(), lineno=520, col_offset=35), 'name', Load(), lineno=520, col_offset=35)], Load(), lineno=520, col_offset=23), lineno=519, col_offset=22), BinOp(Name('depth', Load(), lineno=520, col_offset=48), Add(), Num(1, lineno=520, col_offset=54), lineno=520, col_offset=48)], [], None, None, lineno=519, col_offset=12), lineno=519, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=521, col_offset=12), 'emit', Load(), lineno=521, col_offset=12), [Str('if (res != 0) goto failed;', lineno=521, col_offset=22), BinOp(Name('depth', Load(), lineno=521, col_offset=52), Add(), Num(1, lineno=521, col_offset=58), lineno=521, col_offset=52)], [], None, None, lineno=521, col_offset=12), lineno=521, col_offset=12)], lineno=497, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=523, col_offset=8), 'emit', Load(), lineno=523, col_offset=8), [Str('Py_XDECREF(tmp);', lineno=523, col_offset=18), BinOp(Name('depth', Load(), lineno=523, col_offset=38), Add(), Num(1, lineno=523, col_offset=44), lineno=523, col_offset=38)], [], None, None, lineno=523, col_offset=8), lineno=523, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=524, col_offset=8), 'emit', Load(), lineno=524, col_offset=8), [Str('tmp = NULL;', lineno=524, col_offset=18), BinOp(Name('depth', Load(), lineno=524, col_offset=33), Add(), Num(1, lineno=524, col_offset=39), lineno=524, col_offset=33)], [], None, None, lineno=524, col_offset=8), lineno=524, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=525, col_offset=8), 'emit', Load(), lineno=525, col_offset=8), [Str('} else {', lineno=525, col_offset=18), Name('depth', Load(), lineno=525, col_offset=30)], [], None, None, lineno=525, col_offset=8), lineno=525, col_offset=8), If(UnaryOp(Not(), Attribute(Name('field', Load(), lineno=526, col_offset=15), 'opt', Load(), lineno=526, col_offset=15), lineno=526, col_offset=11), [Assign([Name('message', Store(), lineno=527, col_offset=12)], BinOp(Str('required field \\"%s\\" missing from %s', lineno=527, col_offset=22), Mod(), Tuple([Attribute(Name('field', Load(), lineno=527, col_offset=69), 'name', Load(), lineno=527, col_offset=69), Name('name', Load(), lineno=527, col_offset=81)], Load(), lineno=527, col_offset=69), lineno=527, col_offset=22), lineno=527, col_offset=12), Assign([Name('format', Store(), lineno=528, col_offset=12)], Str('PyErr_SetString(PyExc_TypeError, "%s");', lineno=528, col_offset=21), lineno=528, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=529, col_offset=12), 'emit', Load(), lineno=529, col_offset=12), [BinOp(Name('format', Load(), lineno=529, col_offset=22), Mod(), Name('message', Load(), lineno=529, col_offset=31), lineno=529, col_offset=22), BinOp(Name('depth', Load(), lineno=529, col_offset=40), Add(), Num(1, lineno=529, col_offset=46), lineno=529, col_offset=40)], [keyword('reflow', Name('False', Load(), lineno=529, col_offset=56))], None, None, lineno=529, col_offset=12), lineno=529, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=530, col_offset=12), 'emit', Load(), lineno=530, col_offset=12), [Str('return 1;', lineno=530, col_offset=22), BinOp(Name('depth', Load(), lineno=530, col_offset=35), Add(), Num(1, lineno=530, col_offset=41), lineno=530, col_offset=35)], [], None, None, lineno=530, col_offset=12), lineno=530, col_offset=12)], [If(Call(Attribute(Name('self', Load(), lineno=532, col_offset=15), 'isNumeric', Load(), lineno=532, col_offset=15), [Name('field', Load(), lineno=532, col_offset=30)], [], None, None, lineno=532, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=533, col_offset=16), 'emit', Load(), lineno=533, col_offset=16), [BinOp(Str('%s = 0;', lineno=533, col_offset=26), Mod(), Attribute(Name('field', Load(), lineno=533, col_offset=38), 'name', Load(), lineno=533, col_offset=38), lineno=533, col_offset=26), BinOp(Name('depth', Load(), lineno=533, col_offset=50), Add(), Num(1, lineno=533, col_offset=56), lineno=533, col_offset=50)], [], None, None, lineno=533, col_offset=16), lineno=533, col_offset=16)], [If(UnaryOp(Not(), Call(Attribute(Name('self', Load(), lineno=534, col_offset=21), 'isSimpleType', Load(), lineno=534, col_offset=21), [Name('field', Load(), lineno=534, col_offset=39)], [], None, None, lineno=534, col_offset=21), lineno=534, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=535, col_offset=16), 'emit', Load(), lineno=535, col_offset=16), [BinOp(Str('%s = NULL;', lineno=535, col_offset=26), Mod(), Attribute(Name('field', Load(), lineno=535, col_offset=41), 'name', Load(), lineno=535, col_offset=41), lineno=535, col_offset=26), BinOp(Name('depth', Load(), lineno=535, col_offset=53), Add(), Num(1, lineno=535, col_offset=59), lineno=535, col_offset=53)], [], None, None, lineno=535, col_offset=16), lineno=535, col_offset=16)], [Raise(Call(Name('TypeError', Load(), lineno=537, col_offset=22), [BinOp(Str('could not determine the default value for %s', lineno=537, col_offset=32), Mod(), Attribute(Name('field', Load(), lineno=537, col_offset=81), 'name', Load(), lineno=537, col_offset=81), lineno=537, col_offset=32)], [], None, None, lineno=537, col_offset=22), None, None, lineno=537, col_offset=16)], lineno=534, col_offset=17)], lineno=532, col_offset=12)], lineno=526, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=538, col_offset=8), 'emit', Load(), lineno=538, col_offset=8), [Str('}', lineno=538, col_offset=18), Name('depth', Load(), lineno=538, col_offset=23)], [], None, None, lineno=538, col_offset=8), lineno=538, col_offset=8)], [], lineno=488, col_offset=4)], [], lineno=363, col_offset=0), ClassDef('MarshalPrototypeVisitor', [Name('PickleVisitor', Load(), lineno=541, col_offset=30)], [FunctionDef('prototype', arguments([Name('self', Param(), lineno=543, col_offset=18), Name('sum', Param(), lineno=543, col_offset=24), Name('name', Param(), lineno=543, col_offset=29)], None, None, []), [Assign([Name('ctype', Store(), lineno=544, col_offset=8)], Call(Name('get_c_type', Load(), lineno=544, col_offset=16), [Name('name', Load(), lineno=544, col_offset=27)], [], None, None, lineno=544, col_offset=16), lineno=544, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=545, col_offset=8), 'emit', Load(), lineno=545, col_offset=8), [BinOp(Str('static int marshal_write_%s(PyObject **, int *, %s);', lineno=545, col_offset=18), Mod(), Tuple([Name('name', Load(), lineno=546, col_offset=21), Name('ctype', Load(), lineno=546, col_offset=27)], Load(), lineno=546, col_offset=21), lineno=545, col_offset=18), Num(0, lineno=546, col_offset=35)], [], None, None, lineno=545, col_offset=8), lineno=545, col_offset=8)], [], lineno=543, col_offset=4), Assign([Name('visitProduct', Store(), lineno=548, col_offset=4), Name('visitSum', Store(), lineno=548, col_offset=19)], Name('prototype', Load(), lineno=548, col_offset=30), lineno=548, col_offset=4)], [], lineno=541, col_offset=0), ClassDef('PyTypesDeclareVisitor', [Name('PickleVisitor', Load(), lineno=551, col_offset=28)], [FunctionDef('visitProduct', arguments([Name('self', Param(), lineno=553, col_offset=21), Name('prod', Param(), lineno=553, col_offset=27), Name('name', Param(), lineno=553, col_offset=33)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=554, col_offset=8), 'emit', Load(), lineno=554, col_offset=8), [BinOp(Str('static PyTypeObject *%s_type;', lineno=554, col_offset=18), Mod(), Name('name', Load(), lineno=554, col_offset=52), lineno=554, col_offset=18), Num(0, lineno=554, col_offset=58)], [], None, None, lineno=554, col_offset=8), lineno=554, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=555, col_offset=8), 'emit', Load(), lineno=555, col_offset=8), [BinOp(Str('static PyObject* ast2obj_%s(void*);', lineno=555, col_offset=18), Mod(), Name('name', Load(), lineno=555, col_offset=58), lineno=555, col_offset=18), Num(0, lineno=555, col_offset=64)], [], None, None, lineno=555, col_offset=8), lineno=555, col_offset=8), If(Attribute(Name('prod', Load(), lineno=556, col_offset=11), 'fields', Load(), lineno=556, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=557, col_offset=12), 'emit', Load(), lineno=557, col_offset=12), [BinOp(Str('static char *%s_fields[]={', lineno=557, col_offset=22), Mod(), Name('name', Load(), lineno=557, col_offset=53), lineno=557, col_offset=22), Num(0, lineno=557, col_offset=58)], [], None, None, lineno=557, col_offset=12), lineno=557, col_offset=12), For(Name('f', Store(), lineno=558, col_offset=16), Attribute(Name('prod', Load(), lineno=558, col_offset=21), 'fields', Load(), lineno=558, col_offset=21), [Expr(Call(Attribute(Name('self', Load(), lineno=559, col_offset=16), 'emit', Load(), lineno=559, col_offset=16), [BinOp(Str('"%s",', lineno=559, col_offset=26), Mod(), Attribute(Name('f', Load(), lineno=559, col_offset=36), 'name', Load(), lineno=559, col_offset=36), lineno=559, col_offset=26), Num(1, lineno=559, col_offset=44)], [], None, None, lineno=559, col_offset=16), lineno=559, col_offset=16)], [], lineno=558, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=560, col_offset=12), 'emit', Load(), lineno=560, col_offset=12), [Str('};', lineno=560, col_offset=22), Num(0, lineno=560, col_offset=28)], [], None, None, lineno=560, col_offset=12), lineno=560, col_offset=12)], [], lineno=556, col_offset=8)], [], lineno=553, col_offset=4), FunctionDef('visitSum', arguments([Name('self', Param(), lineno=562, col_offset=17), Name('sum', Param(), lineno=562, col_offset=23), Name('name', Param(), lineno=562, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=563, col_offset=8), 'emit', Load(), lineno=563, col_offset=8), [BinOp(Str('static PyTypeObject *%s_type;', lineno=563, col_offset=18), Mod(), Name('name', Load(), lineno=563, col_offset=52), lineno=563, col_offset=18), Num(0, lineno=563, col_offset=58)], [], None, None, lineno=563, col_offset=8), lineno=563, col_offset=8), If(Attribute(Name('sum', Load(), lineno=564, col_offset=11), 'attributes', Load(), lineno=564, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=565, col_offset=12), 'emit', Load(), lineno=565, col_offset=12), [BinOp(Str('static char *%s_attributes[] = {', lineno=565, col_offset=22), Mod(), Name('name', Load(), lineno=565, col_offset=59), lineno=565, col_offset=22), Num(0, lineno=565, col_offset=65)], [], None, None, lineno=565, col_offset=12), lineno=565, col_offset=12), For(Name('a', Store(), lineno=566, col_offset=16), Attribute(Name('sum', Load(), lineno=566, col_offset=21), 'attributes', Load(), lineno=566, col_offset=21), [Expr(Call(Attribute(Name('self', Load(), lineno=567, col_offset=16), 'emit', Load(), lineno=567, col_offset=16), [BinOp(Str('"%s",', lineno=567, col_offset=26), Mod(), Attribute(Name('a', Load(), lineno=567, col_offset=36), 'name', Load(), lineno=567, col_offset=36), lineno=567, col_offset=26), Num(1, lineno=567, col_offset=44)], [], None, None, lineno=567, col_offset=16), lineno=567, col_offset=16)], [], lineno=566, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=568, col_offset=12), 'emit', Load(), lineno=568, col_offset=12), [Str('};', lineno=568, col_offset=22), Num(0, lineno=568, col_offset=28)], [], None, None, lineno=568, col_offset=12), lineno=568, col_offset=12)], [], lineno=564, col_offset=8), Assign([Name('ptype', Store(), lineno=569, col_offset=8)], Str('void*', lineno=569, col_offset=16), lineno=569, col_offset=8), If(Call(Name('is_simple', Load(), lineno=570, col_offset=11), [Name('sum', Load(), lineno=570, col_offset=21)], [], None, None, lineno=570, col_offset=11), [Assign([Name('ptype', Store(), lineno=571, col_offset=12)], Call(Name('get_c_type', Load(), lineno=571, col_offset=20), [Name('name', Load(), lineno=571, col_offset=31)], [], None, None, lineno=571, col_offset=20), lineno=571, col_offset=12), Assign([Name('tnames', Store(), lineno=572, col_offset=12)], List([], Load(), lineno=572, col_offset=21), lineno=572, col_offset=12), For(Name('t', Store(), lineno=573, col_offset=16), Attribute(Name('sum', Load(), lineno=573, col_offset=21), 'types', Load(), lineno=573, col_offset=21), [Expr(Call(Attribute(Name('tnames', Load(), lineno=574, col_offset=16), 'append', Load(), lineno=574, col_offset=16), [BinOp(Call(Name('str', Load(), lineno=574, col_offset=30), [Attribute(Name('t', Load(), lineno=574, col_offset=34), 'name', Load(), lineno=574, col_offset=34)], [], None, None, lineno=574, col_offset=30), Add(), Str('_singleton', lineno=574, col_offset=42), lineno=574, col_offset=30)], [], None, None, lineno=574, col_offset=16), lineno=574, col_offset=16)], [], lineno=573, col_offset=12), Assign([Name('tnames', Store(), lineno=575, col_offset=12)], Call(Attribute(Str(', *', lineno=575, col_offset=21), 'join', Load(), lineno=575, col_offset=21), [Name('tnames', Load(), lineno=575, col_offset=32)], [], None, None, lineno=575, col_offset=21), lineno=575, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=576, col_offset=12), 'emit', Load(), lineno=576, col_offset=12), [BinOp(Str('static PyObject *%s;', lineno=576, col_offset=22), Mod(), Name('tnames', Load(), lineno=576, col_offset=47), lineno=576, col_offset=22), Num(0, lineno=576, col_offset=55)], [], None, None, lineno=576, col_offset=12), lineno=576, col_offset=12)], [], lineno=570, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=577, col_offset=8), 'emit', Load(), lineno=577, col_offset=8), [BinOp(Str('static PyObject* ast2obj_%s(%s);', lineno=577, col_offset=18), Mod(), Tuple([Name('name', Load(), lineno=577, col_offset=56), Name('ptype', Load(), lineno=577, col_offset=62)], Load(), lineno=577, col_offset=56), lineno=577, col_offset=18), Num(0, lineno=577, col_offset=70)], [], None, None, lineno=577, col_offset=8), lineno=577, col_offset=8), For(Name('t', Store(), lineno=578, col_offset=12), Attribute(Name('sum', Load(), lineno=578, col_offset=17), 'types', Load(), lineno=578, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=579, col_offset=12), 'visitConstructor', Load(), lineno=579, col_offset=12), [Name('t', Load(), lineno=579, col_offset=34), Name('name', Load(), lineno=579, col_offset=37)], [], None, None, lineno=579, col_offset=12), lineno=579, col_offset=12)], [], lineno=578, col_offset=8)], [], lineno=562, col_offset=4), FunctionDef('visitConstructor', arguments([Name('self', Param(), lineno=581, col_offset=25), Name('cons', Param(), lineno=581, col_offset=31), Name('name', Param(), lineno=581, col_offset=37)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=582, col_offset=8), 'emit', Load(), lineno=582, col_offset=8), [BinOp(Str('static PyTypeObject *%s_type;', lineno=582, col_offset=18), Mod(), Attribute(Name('cons', Load(), lineno=582, col_offset=52), 'name', Load(), lineno=582, col_offset=52), lineno=582, col_offset=18), Num(0, lineno=582, col_offset=63)], [], None, None, lineno=582, col_offset=8), lineno=582, col_offset=8), If(Attribute(Name('cons', Load(), lineno=583, col_offset=11), 'fields', Load(), lineno=583, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=584, col_offset=12), 'emit', Load(), lineno=584, col_offset=12), [BinOp(Str('static char *%s_fields[]={', lineno=584, col_offset=22), Mod(), Attribute(Name('cons', Load(), lineno=584, col_offset=53), 'name', Load(), lineno=584, col_offset=53), lineno=584, col_offset=22), Num(0, lineno=584, col_offset=64)], [], None, None, lineno=584, col_offset=12), lineno=584, col_offset=12), For(Name('t', Store(), lineno=585, col_offset=16), Attribute(Name('cons', Load(), lineno=585, col_offset=21), 'fields', Load(), lineno=585, col_offset=21), [Expr(Call(Attribute(Name('self', Load(), lineno=586, col_offset=16), 'emit', Load(), lineno=586, col_offset=16), [BinOp(Str('"%s",', lineno=586, col_offset=26), Mod(), Attribute(Name('t', Load(), lineno=586, col_offset=36), 'name', Load(), lineno=586, col_offset=36), lineno=586, col_offset=26), Num(1, lineno=586, col_offset=44)], [], None, None, lineno=586, col_offset=16), lineno=586, col_offset=16)], [], lineno=585, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=587, col_offset=12), 'emit', Load(), lineno=587, col_offset=12), [Str('};', lineno=587, col_offset=22), Num(0, lineno=587, col_offset=27)], [], None, None, lineno=587, col_offset=12), lineno=587, col_offset=12)], [], lineno=583, col_offset=8)], [], lineno=581, col_offset=4)], [], lineno=551, col_offset=0), ClassDef('PyTypesVisitor', [Name('PickleVisitor', Load(), lineno=589, col_offset=21)], [FunctionDef('visitModule', arguments([Name('self', Param(), lineno=591, col_offset=20), Name('mod', Param(), lineno=591, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=592, col_offset=8), 'emit', Load(), lineno=592, col_offset=8), [Str('\nstatic int\nast_type_init(PyObject *self, PyObject *args, PyObject *kw)\n{\n    Py_ssize_t i, numfields = 0;\n    int res = -1;\n    PyObject *key, *value, *fields;\n    fields = PyObject_GetAttrString((PyObject*)Py_TYPE(self), "_fields");\n    if (!fields)\n        PyErr_Clear();\n    if (fields) {\n        numfields = PySequence_Size(fields);\n        if (numfields == -1)\n            goto cleanup;\n    }\n    res = 0; /* if no error occurs, this stays 0 to the end */\n    if (PyTuple_GET_SIZE(args) > 0) {\n        if (numfields != PyTuple_GET_SIZE(args)) {\n            PyErr_Format(PyExc_TypeError, "%.400s constructor takes %s"\n                         "%zd positional argument%s",\n                         Py_TYPE(self)->tp_name,\n                         numfields == 0 ? "" : "either 0 or ",\n                         numfields, numfields == 1 ? "" : "s");\n            res = -1;\n            goto cleanup;\n        }\n        for (i = 0; i < PyTuple_GET_SIZE(args); i++) {\n            /* cannot be reached when fields is NULL */\n            PyObject *name = PySequence_GetItem(fields, i);\n            if (!name) {\n                res = -1;\n                goto cleanup;\n            }\n            res = PyObject_SetAttr(self, name, PyTuple_GET_ITEM(args, i));\n            Py_DECREF(name);\n            if (res < 0)\n                goto cleanup;\n        }\n    }\n    if (kw) {\n        i = 0;  /* needed by PyDict_Next */\n        while (PyDict_Next(kw, &i, &key, &value)) {\n            res = PyObject_SetAttr(self, key, value);\n            if (res < 0)\n                goto cleanup;\n        }\n    }\n  cleanup:\n    Py_XDECREF(fields);\n    return res;\n}\n\n/* Pickling support */\nstatic PyObject *\nast_type_reduce(PyObject *self, PyObject *unused)\n{\n    PyObject *res;\n    PyObject *dict = PyObject_GetAttrString(self, "__dict__");\n    if (dict == NULL) {\n        if (PyErr_ExceptionMatches(PyExc_AttributeError))\n            PyErr_Clear();\n        else\n            return NULL;\n    }\n    if (dict) {\n        res = Py_BuildValue("O()O", Py_TYPE(self), dict);\n        Py_DECREF(dict);\n        return res;\n    }\n    return Py_BuildValue("O()", Py_TYPE(self));\n}\n\nstatic PyMethodDef ast_type_methods[] = {\n    {"__reduce__", ast_type_reduce, METH_NOARGS, NULL},\n    {NULL}\n};\n\nstatic PyTypeObject AST_type = {\n    PyVarObject_HEAD_INIT(&PyType_Type, 0)\n    "_ast.AST",\n    sizeof(PyObject),\n    0,\n    0,                       /* tp_dealloc */\n    0,                       /* tp_print */\n    0,                       /* tp_getattr */\n    0,                       /* tp_setattr */\n    0,                       /* tp_compare */\n    0,                       /* tp_repr */\n    0,                       /* tp_as_number */\n    0,                       /* tp_as_sequence */\n    0,                       /* tp_as_mapping */\n    0,                       /* tp_hash */\n    0,                       /* tp_call */\n    0,                       /* tp_str */\n    PyObject_GenericGetAttr, /* tp_getattro */\n    PyObject_GenericSetAttr, /* tp_setattro */\n    0,                       /* tp_as_buffer */\n    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_BASETYPE, /* tp_flags */\n    0,                       /* tp_doc */\n    0,                       /* tp_traverse */\n    0,                       /* tp_clear */\n    0,                       /* tp_richcompare */\n    0,                       /* tp_weaklistoffset */\n    0,                       /* tp_iter */\n    0,                       /* tp_iternext */\n    ast_type_methods,        /* tp_methods */\n    0,                       /* tp_members */\n    0,                       /* tp_getset */\n    0,                       /* tp_base */\n    0,                       /* tp_dict */\n    0,                       /* tp_descr_get */\n    0,                       /* tp_descr_set */\n    0,                       /* tp_dictoffset */\n    (initproc)ast_type_init, /* tp_init */\n    PyType_GenericAlloc,     /* tp_alloc */\n    PyType_GenericNew,       /* tp_new */\n    PyObject_Del,            /* tp_free */\n};\n\n\nstatic PyTypeObject* make_type(char *type, PyTypeObject* base, char**fields, int num_fields)\n{\n    PyObject *fnames, *result;\n    int i;\n    fnames = PyTuple_New(num_fields);\n    if (!fnames) return NULL;\n    for (i = 0; i < num_fields; i++) {\n        PyObject *field = PyString_FromString(fields[i]);\n        if (!field) {\n            Py_DECREF(fnames);\n            return NULL;\n        }\n        PyTuple_SET_ITEM(fnames, i, field);\n    }\n    result = PyObject_CallFunction((PyObject*)&PyType_Type, "s(O){sOss}",\n                    type, base, "_fields", fnames, "__module__", "_ast");\n    Py_DECREF(fnames);\n    return (PyTypeObject*)result;\n}\n\nstatic int add_attributes(PyTypeObject* type, char**attrs, int num_fields)\n{\n    int i, result;\n    PyObject *s, *l = PyTuple_New(num_fields);\n    if (!l)\n        return 0;\n    for (i = 0; i < num_fields; i++) {\n        s = PyString_FromString(attrs[i]);\n        if (!s) {\n            Py_DECREF(l);\n            return 0;\n        }\n        PyTuple_SET_ITEM(l, i, s);\n    }\n    result = PyObject_SetAttrString((PyObject*)type, "_attributes", l) >= 0;\n    Py_DECREF(l);\n    return result;\n}\n\n/* Conversion AST -> Python */\n\nstatic PyObject* ast2obj_list(asdl_seq *seq, PyObject* (*func)(void*))\n{\n    int i, n = asdl_seq_LEN(seq);\n    PyObject *result = PyList_New(n);\n    PyObject *value;\n    if (!result)\n        return NULL;\n    for (i = 0; i < n; i++) {\n        value = func(asdl_seq_GET(seq, i));\n        if (!value) {\n            Py_DECREF(result);\n            return NULL;\n        }\n        PyList_SET_ITEM(result, i, value);\n    }\n    return result;\n}\n\nstatic PyObject* ast2obj_object(void *o)\n{\n    if (!o)\n        o = Py_None;\n    Py_INCREF((PyObject*)o);\n    return (PyObject*)o;\n}\n#define ast2obj_identifier ast2obj_object\n#define ast2obj_string ast2obj_object\nstatic PyObject* ast2obj_bool(bool b)\n{\n    return PyBool_FromLong(b);\n}\n\nstatic PyObject* ast2obj_int(long b)\n{\n    return PyInt_FromLong(b);\n}\n\n/* Conversion Python -> AST */\n\nstatic int obj2ast_object(PyObject* obj, PyObject** out, PyArena* arena)\n{\n    if (obj == Py_None)\n        obj = NULL;\n    if (obj)\n        PyArena_AddPyObject(arena, obj);\n    Py_XINCREF(obj);\n    *out = obj;\n    return 0;\n}\n\n#define obj2ast_identifier obj2ast_object\n#define obj2ast_string obj2ast_object\n\nstatic int obj2ast_int(PyObject* obj, int* out, PyArena* arena)\n{\n    int i;\n    if (!PyInt_Check(obj) && !PyLong_Check(obj)) {\n        PyObject *s = PyObject_Repr(obj);\n        if (s == NULL) return 1;\n        PyErr_Format(PyExc_ValueError, "invalid integer value: %.400s",\n                     PyString_AS_STRING(s));\n        Py_DECREF(s);\n        return 1;\n    }\n\n    i = (int)PyLong_AsLong(obj);\n    if (i == -1 && PyErr_Occurred())\n        return 1;\n    *out = i;\n    return 0;\n}\n\nstatic int obj2ast_bool(PyObject* obj, bool* out, PyArena* arena)\n{\n    if (!PyBool_Check(obj)) {\n        PyObject *s = PyObject_Repr(obj);\n        if (s == NULL) return 1;\n        PyErr_Format(PyExc_ValueError, "invalid boolean value: %.400s",\n                     PyString_AS_STRING(s));\n        Py_DECREF(s);\n        return 1;\n    }\n\n    *out = (obj == Py_True);\n    return 0;\n}\n\nstatic int add_ast_fields(void)\n{\n    PyObject *empty_tuple, *d;\n    if (PyType_Ready(&AST_type) < 0)\n        return -1;\n    d = AST_type.tp_dict;\n    empty_tuple = PyTuple_New(0);\n    if (!empty_tuple ||\n        PyDict_SetItemString(d, "_fields", empty_tuple) < 0 ||\n        PyDict_SetItemString(d, "_attributes", empty_tuple) < 0) {\n        Py_XDECREF(empty_tuple);\n        return -1;\n    }\n    Py_DECREF(empty_tuple);\n    return 0;\n}\n\n', lineno=857, col_offset=-1), Num(0, lineno=857, col_offset=5)], [keyword('reflow', Name('False', Load(), lineno=857, col_offset=15))], None, None, lineno=592, col_offset=8), lineno=592, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=859, col_offset=8), 'emit', Load(), lineno=859, col_offset=8), [Str('static int init_types(void)', lineno=859, col_offset=18), Num(0, lineno=859, col_offset=48)], [], None, None, lineno=859, col_offset=8), lineno=859, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=860, col_offset=8), 'emit', Load(), lineno=860, col_offset=8), [Str('{', lineno=860, col_offset=18), Num(0, lineno=860, col_offset=23)], [], None, None, lineno=860, col_offset=8), lineno=860, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=861, col_offset=8), 'emit', Load(), lineno=861, col_offset=8), [Str('static int initialized;', lineno=861, col_offset=18), Num(1, lineno=861, col_offset=45)], [], None, None, lineno=861, col_offset=8), lineno=861, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=862, col_offset=8), 'emit', Load(), lineno=862, col_offset=8), [Str('if (initialized) return 1;', lineno=862, col_offset=18), Num(1, lineno=862, col_offset=48)], [], None, None, lineno=862, col_offset=8), lineno=862, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=863, col_offset=8), 'emit', Load(), lineno=863, col_offset=8), [Str('if (add_ast_fields() < 0) return 0;', lineno=863, col_offset=18), Num(1, lineno=863, col_offset=57)], [], None, None, lineno=863, col_offset=8), lineno=863, col_offset=8), For(Name('dfn', Store(), lineno=864, col_offset=12), Attribute(Name('mod', Load(), lineno=864, col_offset=19), 'dfns', Load(), lineno=864, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=865, col_offset=12), 'visit', Load(), lineno=865, col_offset=12), [Name('dfn', Load(), lineno=865, col_offset=23)], [], None, None, lineno=865, col_offset=12), lineno=865, col_offset=12)], [], lineno=864, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=866, col_offset=8), 'emit', Load(), lineno=866, col_offset=8), [Str('initialized = 1;', lineno=866, col_offset=18), Num(1, lineno=866, col_offset=38)], [], None, None, lineno=866, col_offset=8), lineno=866, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=867, col_offset=8), 'emit', Load(), lineno=867, col_offset=8), [Str('return 1;', lineno=867, col_offset=18), Num(1, lineno=867, col_offset=31)], [], None, None, lineno=867, col_offset=8), lineno=867, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=868, col_offset=8), 'emit', Load(), lineno=868, col_offset=8), [Str('}', lineno=868, col_offset=18), Num(0, lineno=868, col_offset=23)], [], None, None, lineno=868, col_offset=8), lineno=868, col_offset=8)], [], lineno=591, col_offset=4), FunctionDef('visitProduct', arguments([Name('self', Param(), lineno=870, col_offset=21), Name('prod', Param(), lineno=870, col_offset=27), Name('name', Param(), lineno=870, col_offset=33)], None, None, []), [If(Attribute(Name('prod', Load(), lineno=871, col_offset=11), 'fields', Load(), lineno=871, col_offset=11), [Assign([Name('fields', Store(), lineno=872, col_offset=12)], BinOp(Attribute(Name('name', Load(), lineno=872, col_offset=21), 'value', Load(), lineno=872, col_offset=21), Add(), Str('_fields', lineno=872, col_offset=32), lineno=872, col_offset=21), lineno=872, col_offset=12)], [Assign([Name('fields', Store(), lineno=874, col_offset=12)], Str('NULL', lineno=874, col_offset=21), lineno=874, col_offset=12)], lineno=871, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=875, col_offset=8), 'emit', Load(), lineno=875, col_offset=8), [BinOp(Str('%s_type = make_type("%s", &AST_type, %s, %d);', lineno=875, col_offset=18), Mod(), Tuple([Name('name', Load(), lineno=876, col_offset=25), Name('name', Load(), lineno=876, col_offset=31), Name('fields', Load(), lineno=876, col_offset=37), Call(Name('len', Load(), lineno=876, col_offset=45), [Attribute(Name('prod', Load(), lineno=876, col_offset=49), 'fields', Load(), lineno=876, col_offset=49)], [], None, None, lineno=876, col_offset=45)], Load(), lineno=876, col_offset=25), lineno=875, col_offset=18), Num(1, lineno=876, col_offset=64)], [], None, None, lineno=875, col_offset=8), lineno=875, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=877, col_offset=8), 'emit', Load(), lineno=877, col_offset=8), [BinOp(Str('if (!%s_type) return 0;', lineno=877, col_offset=18), Mod(), Name('name', Load(), lineno=877, col_offset=46), lineno=877, col_offset=18), Num(1, lineno=877, col_offset=52)], [], None, None, lineno=877, col_offset=8), lineno=877, col_offset=8)], [], lineno=870, col_offset=4), FunctionDef('visitSum', arguments([Name('self', Param(), lineno=879, col_offset=17), Name('sum', Param(), lineno=879, col_offset=23), Name('name', Param(), lineno=879, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=880, col_offset=8), 'emit', Load(), lineno=880, col_offset=8), [BinOp(Str('%s_type = make_type("%s", &AST_type, NULL, 0);', lineno=880, col_offset=18), Mod(), Tuple([Name('name', Load(), lineno=881, col_offset=19), Name('name', Load(), lineno=881, col_offset=25)], Load(), lineno=881, col_offset=19), lineno=880, col_offset=18), Num(1, lineno=881, col_offset=32)], [], None, None, lineno=880, col_offset=8), lineno=880, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=882, col_offset=8), 'emit', Load(), lineno=882, col_offset=8), [BinOp(Str('if (!%s_type) return 0;', lineno=882, col_offset=18), Mod(), Name('name', Load(), lineno=882, col_offset=46), lineno=882, col_offset=18), Num(1, lineno=882, col_offset=52)], [], None, None, lineno=882, col_offset=8), lineno=882, col_offset=8), If(Attribute(Name('sum', Load(), lineno=883, col_offset=11), 'attributes', Load(), lineno=883, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=884, col_offset=12), 'emit', Load(), lineno=884, col_offset=12), [BinOp(Str('if (!add_attributes(%s_type, %s_attributes, %d)) return 0;', lineno=884, col_offset=22), Mod(), Tuple([Name('name', Load(), lineno=885, col_offset=29), Name('name', Load(), lineno=885, col_offset=35), Call(Name('len', Load(), lineno=885, col_offset=41), [Attribute(Name('sum', Load(), lineno=885, col_offset=45), 'attributes', Load(), lineno=885, col_offset=45)], [], None, None, lineno=885, col_offset=41)], Load(), lineno=885, col_offset=29), lineno=884, col_offset=22), Num(1, lineno=885, col_offset=63)], [], None, None, lineno=884, col_offset=12), lineno=884, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=887, col_offset=12), 'emit', Load(), lineno=887, col_offset=12), [BinOp(Str('if (!add_attributes(%s_type, NULL, 0)) return 0;', lineno=887, col_offset=22), Mod(), Name('name', Load(), lineno=887, col_offset=75), lineno=887, col_offset=22), Num(1, lineno=887, col_offset=81)], [], None, None, lineno=887, col_offset=12), lineno=887, col_offset=12)], lineno=883, col_offset=8), Assign([Name('simple', Store(), lineno=888, col_offset=8)], Call(Name('is_simple', Load(), lineno=888, col_offset=17), [Name('sum', Load(), lineno=888, col_offset=27)], [], None, None, lineno=888, col_offset=17), lineno=888, col_offset=8), For(Name('t', Store(), lineno=889, col_offset=12), Attribute(Name('sum', Load(), lineno=889, col_offset=17), 'types', Load(), lineno=889, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=890, col_offset=12), 'visitConstructor', Load(), lineno=890, col_offset=12), [Name('t', Load(), lineno=890, col_offset=34), Name('name', Load(), lineno=890, col_offset=37), Name('simple', Load(), lineno=890, col_offset=43)], [], None, None, lineno=890, col_offset=12), lineno=890, col_offset=12)], [], lineno=889, col_offset=8)], [], lineno=879, col_offset=4), FunctionDef('visitConstructor', arguments([Name('self', Param(), lineno=892, col_offset=25), Name('cons', Param(), lineno=892, col_offset=31), Name('name', Param(), lineno=892, col_offset=37), Name('simple', Param(), lineno=892, col_offset=43)], None, None, []), [If(Attribute(Name('cons', Load(), lineno=893, col_offset=11), 'fields', Load(), lineno=893, col_offset=11), [Assign([Name('fields', Store(), lineno=894, col_offset=12)], BinOp(Attribute(Attribute(Name('cons', Load(), lineno=894, col_offset=21), 'name', Load(), lineno=894, col_offset=21), 'value', Load(), lineno=894, col_offset=21), Add(), Str('_fields', lineno=894, col_offset=37), lineno=894, col_offset=21), lineno=894, col_offset=12)], [Assign([Name('fields', Store(), lineno=896, col_offset=12)], Str('NULL', lineno=896, col_offset=21), lineno=896, col_offset=12)], lineno=893, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=897, col_offset=8), 'emit', Load(), lineno=897, col_offset=8), [BinOp(Str('%s_type = make_type("%s", %s_type, %s, %d);', lineno=897, col_offset=18), Mod(), Tuple([Attribute(Name('cons', Load(), lineno=898, col_offset=29), 'name', Load(), lineno=898, col_offset=29), Attribute(Name('cons', Load(), lineno=898, col_offset=40), 'name', Load(), lineno=898, col_offset=40), Name('name', Load(), lineno=898, col_offset=51), Name('fields', Load(), lineno=898, col_offset=57), Call(Name('len', Load(), lineno=898, col_offset=65), [Attribute(Name('cons', Load(), lineno=898, col_offset=69), 'fields', Load(), lineno=898, col_offset=69)], [], None, None, lineno=898, col_offset=65)], Load(), lineno=898, col_offset=29), lineno=897, col_offset=18), Num(1, lineno=898, col_offset=84)], [], None, None, lineno=897, col_offset=8), lineno=897, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=899, col_offset=8), 'emit', Load(), lineno=899, col_offset=8), [BinOp(Str('if (!%s_type) return 0;', lineno=899, col_offset=18), Mod(), Attribute(Name('cons', Load(), lineno=899, col_offset=46), 'name', Load(), lineno=899, col_offset=46), lineno=899, col_offset=18), Num(1, lineno=899, col_offset=57)], [], None, None, lineno=899, col_offset=8), lineno=899, col_offset=8), If(Name('simple', Load(), lineno=900, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=901, col_offset=12), 'emit', Load(), lineno=901, col_offset=12), [BinOp(Str('%s_singleton = PyType_GenericNew(%s_type, NULL, NULL);', lineno=901, col_offset=22), Mod(), Tuple([Attribute(Name('cons', Load(), lineno=902, col_offset=30), 'name', Load(), lineno=902, col_offset=30), Attribute(Name('cons', Load(), lineno=902, col_offset=41), 'name', Load(), lineno=902, col_offset=41)], Load(), lineno=902, col_offset=30), lineno=901, col_offset=22), Num(1, lineno=902, col_offset=53)], [], None, None, lineno=901, col_offset=12), lineno=901, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=903, col_offset=12), 'emit', Load(), lineno=903, col_offset=12), [BinOp(Str('if (!%s_singleton) return 0;', lineno=903, col_offset=22), Mod(), Attribute(Name('cons', Load(), lineno=903, col_offset=55), 'name', Load(), lineno=903, col_offset=55), lineno=903, col_offset=22), Num(1, lineno=903, col_offset=66)], [], None, None, lineno=903, col_offset=12), lineno=903, col_offset=12)], [], lineno=900, col_offset=8)], [], lineno=892, col_offset=4)], [], lineno=589, col_offset=0), FunctionDef('parse_version', arguments([Name('mod', Param(), lineno=906, col_offset=18)], None, None, []), [Return(Subscript(Attribute(Attribute(Name('mod', Load(), lineno=907, col_offset=11), 'version', Load(), lineno=907, col_offset=11), 'value', Load(), lineno=907, col_offset=11), Slice(Num(12, lineno=907, col_offset=29), Num(-3, lineno=907, col_offset=33), None), Load(), lineno=907, col_offset=11), lineno=907, col_offset=4)], [], lineno=906, col_offset=0), ClassDef('ASTModuleVisitor', [Name('PickleVisitor', Load(), lineno=909, col_offset=23)], [FunctionDef('visitModule', arguments([Name('self', Param(), lineno=911, col_offset=20), Name('mod', Param(), lineno=911, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=912, col_offset=8), 'emit', Load(), lineno=912, col_offset=8), [Str('PyMODINIT_FUNC', lineno=912, col_offset=18), Num(0, lineno=912, col_offset=36)], [], None, None, lineno=912, col_offset=8), lineno=912, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=913, col_offset=8), 'emit', Load(), lineno=913, col_offset=8), [Str('init_ast(void)', lineno=913, col_offset=18), Num(0, lineno=913, col_offset=36)], [], None, None, lineno=913, col_offset=8), lineno=913, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=914, col_offset=8), 'emit', Load(), lineno=914, col_offset=8), [Str('{', lineno=914, col_offset=18), Num(0, lineno=914, col_offset=23)], [], None, None, lineno=914, col_offset=8), lineno=914, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=915, col_offset=8), 'emit', Load(), lineno=915, col_offset=8), [Str('PyObject *m, *d;', lineno=915, col_offset=18), Num(1, lineno=915, col_offset=38)], [], None, None, lineno=915, col_offset=8), lineno=915, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=916, col_offset=8), 'emit', Load(), lineno=916, col_offset=8), [Str('if (!init_types()) return;', lineno=916, col_offset=18), Num(1, lineno=916, col_offset=48)], [], None, None, lineno=916, col_offset=8), lineno=916, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=917, col_offset=8), 'emit', Load(), lineno=917, col_offset=8), [Str('m = Py_InitModule3("_ast", NULL, NULL);', lineno=917, col_offset=18), Num(1, lineno=917, col_offset=61)], [], None, None, lineno=917, col_offset=8), lineno=917, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=918, col_offset=8), 'emit', Load(), lineno=918, col_offset=8), [Str('if (!m) return;', lineno=918, col_offset=18), Num(1, lineno=918, col_offset=37)], [], None, None, lineno=918, col_offset=8), lineno=918, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=919, col_offset=8), 'emit', Load(), lineno=919, col_offset=8), [Str('d = PyModule_GetDict(m);', lineno=919, col_offset=18), Num(1, lineno=919, col_offset=46)], [], None, None, lineno=919, col_offset=8), lineno=919, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=920, col_offset=8), 'emit', Load(), lineno=920, col_offset=8), [Str('if (PyDict_SetItemString(d, "AST", (PyObject*)&AST_type) < 0) return;', lineno=920, col_offset=18), Num(1, lineno=920, col_offset=91)], [], None, None, lineno=920, col_offset=8), lineno=920, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=921, col_offset=8), 'emit', Load(), lineno=921, col_offset=8), [Str('if (PyModule_AddIntConstant(m, "PyCF_ONLY_AST", PyCF_ONLY_AST) < 0)', lineno=921, col_offset=18), Num(1, lineno=921, col_offset=89)], [], None, None, lineno=921, col_offset=8), lineno=921, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=922, col_offset=8), 'emit', Load(), lineno=922, col_offset=8), [Str('return;', lineno=922, col_offset=18), Num(2, lineno=922, col_offset=29)], [], None, None, lineno=922, col_offset=8), lineno=922, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=924, col_offset=8), 'emit', Load(), lineno=924, col_offset=8), [BinOp(Str('if (PyModule_AddStringConstant(m, "__version__", "%s") < 0)', lineno=924, col_offset=18), Mod(), Call(Name('parse_version', Load(), lineno=925, col_offset=18), [Name('mod', Load(), lineno=925, col_offset=32)], [], None, None, lineno=925, col_offset=18), lineno=924, col_offset=18), Num(1, lineno=925, col_offset=38)], [], None, None, lineno=924, col_offset=8), lineno=924, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=926, col_offset=8), 'emit', Load(), lineno=926, col_offset=8), [Str('return;', lineno=926, col_offset=18), Num(2, lineno=926, col_offset=29)], [], None, None, lineno=926, col_offset=8), lineno=926, col_offset=8), For(Name('dfn', Store(), lineno=927, col_offset=12), Attribute(Name('mod', Load(), lineno=927, col_offset=19), 'dfns', Load(), lineno=927, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=928, col_offset=12), 'visit', Load(), lineno=928, col_offset=12), [Name('dfn', Load(), lineno=928, col_offset=23)], [], None, None, lineno=928, col_offset=12), lineno=928, col_offset=12)], [], lineno=927, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=929, col_offset=8), 'emit', Load(), lineno=929, col_offset=8), [Str('}', lineno=929, col_offset=18), Num(0, lineno=929, col_offset=23)], [], None, None, lineno=929, col_offset=8), lineno=929, col_offset=8)], [], lineno=911, col_offset=4), FunctionDef('visitProduct', arguments([Name('self', Param(), lineno=931, col_offset=21), Name('prod', Param(), lineno=931, col_offset=27), Name('name', Param(), lineno=931, col_offset=33)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=932, col_offset=8), 'addObj', Load(), lineno=932, col_offset=8), [Name('name', Load(), lineno=932, col_offset=20)], [], None, None, lineno=932, col_offset=8), lineno=932, col_offset=8)], [], lineno=931, col_offset=4), FunctionDef('visitSum', arguments([Name('self', Param(), lineno=934, col_offset=17), Name('sum', Param(), lineno=934, col_offset=23), Name('name', Param(), lineno=934, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=935, col_offset=8), 'addObj', Load(), lineno=935, col_offset=8), [Name('name', Load(), lineno=935, col_offset=20)], [], None, None, lineno=935, col_offset=8), lineno=935, col_offset=8), For(Name('t', Store(), lineno=936, col_offset=12), Attribute(Name('sum', Load(), lineno=936, col_offset=17), 'types', Load(), lineno=936, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=937, col_offset=12), 'visitConstructor', Load(), lineno=937, col_offset=12), [Name('t', Load(), lineno=937, col_offset=34), Name('name', Load(), lineno=937, col_offset=37)], [], None, None, lineno=937, col_offset=12), lineno=937, col_offset=12)], [], lineno=936, col_offset=8)], [], lineno=934, col_offset=4), FunctionDef('visitConstructor', arguments([Name('self', Param(), lineno=939, col_offset=25), Name('cons', Param(), lineno=939, col_offset=31), Name('name', Param(), lineno=939, col_offset=37)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=940, col_offset=8), 'addObj', Load(), lineno=940, col_offset=8), [Attribute(Name('cons', Load(), lineno=940, col_offset=20), 'name', Load(), lineno=940, col_offset=20)], [], None, None, lineno=940, col_offset=8), lineno=940, col_offset=8)], [], lineno=939, col_offset=4), FunctionDef('addObj', arguments([Name('self', Param(), lineno=942, col_offset=15), Name('name', Param(), lineno=942, col_offset=21)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=943, col_offset=8), 'emit', Load(), lineno=943, col_offset=8), [BinOp(Str('if (PyDict_SetItemString(d, "%s", (PyObject*)%s_type) < 0) return;', lineno=943, col_offset=18), Mod(), Tuple([Name('name', Load(), lineno=943, col_offset=90), Name('name', Load(), lineno=943, col_offset=96)], Load(), lineno=943, col_offset=90), lineno=943, col_offset=18), Num(1, lineno=943, col_offset=103)], [], None, None, lineno=943, col_offset=8), lineno=943, col_offset=8)], [], lineno=942, col_offset=4)], [], lineno=909, col_offset=0), Assign([Name('_SPECIALIZED_SEQUENCES', Store(), lineno=946, col_offset=0)], Tuple([Str('stmt', lineno=946, col_offset=26), Str('expr', lineno=946, col_offset=34)], Load(), lineno=946, col_offset=26), lineno=946, col_offset=0), FunctionDef('find_sequence', arguments([Name('fields', Param(), lineno=948, col_offset=18), Name('doing_specialization', Param(), lineno=948, col_offset=26)], None, None, []), [Expr(Str('Return True if any field uses a sequence.', lineno=949, col_offset=4), lineno=949, col_offset=4), For(Name('f', Store(), lineno=950, col_offset=8), Name('fields', Load(), lineno=950, col_offset=13), [If(Attribute(Name('f', Load(), lineno=951, col_offset=11), 'seq', Load(), lineno=951, col_offset=11), [If(UnaryOp(Not(), Name('doing_specialization', Load(), lineno=952, col_offset=19), lineno=952, col_offset=15), [Return(Name('True', Load(), lineno=953, col_offset=23), lineno=953, col_offset=16)], [], lineno=952, col_offset=12), If(Compare(Call(Name('str', Load(), lineno=954, col_offset=15), [Attribute(Name('f', Load(), lineno=954, col_offset=19), 'type', Load(), lineno=954, col_offset=19)], [], None, None, lineno=954, col_offset=15), [NotIn()], [Name('_SPECIALIZED_SEQUENCES', Load(), lineno=954, col_offset=34)], lineno=954, col_offset=15), [Return(Name('True', Load(), lineno=955, col_offset=23), lineno=955, col_offset=16)], [], lineno=954, col_offset=12)], [], lineno=951, col_offset=8)], [], lineno=950, col_offset=4), Return(Name('False', Load(), lineno=956, col_offset=11), lineno=956, col_offset=4)], [], lineno=948, col_offset=0), FunctionDef('has_sequence', arguments([Name('types', Param(), lineno=958, col_offset=17), Name('doing_specialization', Param(), lineno=958, col_offset=24)], None, None, []), [For(Name('t', Store(), lineno=959, col_offset=8), Name('types', Load(), lineno=959, col_offset=13), [If(Call(Name('find_sequence', Load(), lineno=960, col_offset=11), [Attribute(Name('t', Load(), lineno=960, col_offset=25), 'fields', Load(), lineno=960, col_offset=25), Name('doing_specialization', Load(), lineno=960, col_offset=35)], [], None, None, lineno=960, col_offset=11), [Return(Name('True', Load(), lineno=961, col_offset=19), lineno=961, col_offset=12)], [], lineno=960, col_offset=8)], [], lineno=959, col_offset=4), Return(Name('False', Load(), lineno=962, col_offset=11), lineno=962, col_offset=4)], [], lineno=958, col_offset=0), ClassDef('StaticVisitor', [Name('PickleVisitor', Load(), lineno=965, col_offset=20)], [Assign([Name('CODE', Store(), lineno=966, col_offset=4)], Str('Very simple, always emit this static code.  Overide CODE', lineno=966, col_offset=11), lineno=966, col_offset=4), FunctionDef('visit', arguments([Name('self', Param(), lineno=968, col_offset=14), Name('object', Param(), lineno=968, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=969, col_offset=8), 'emit', Load(), lineno=969, col_offset=8), [Attribute(Name('self', Load(), lineno=969, col_offset=18), 'CODE', Load(), lineno=969, col_offset=18), Num(0, lineno=969, col_offset=29)], [keyword('reflow', Name('False', Load(), lineno=969, col_offset=39))], None, None, lineno=969, col_offset=8), lineno=969, col_offset=8)], [], lineno=968, col_offset=4)], [], lineno=965, col_offset=0), ClassDef('ObjVisitor', [Name('PickleVisitor', Load(), lineno=972, col_offset=17)], [FunctionDef('func_begin', arguments([Name('self', Param(), lineno=974, col_offset=19), Name('name', Param(), lineno=974, col_offset=25)], None, None, []), [Assign([Name('ctype', Store(), lineno=975, col_offset=8)], Call(Name('get_c_type', Load(), lineno=975, col_offset=16), [Name('name', Load(), lineno=975, col_offset=27)], [], None, None, lineno=975, col_offset=16), lineno=975, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=976, col_offset=8), 'emit', Load(), lineno=976, col_offset=8), [Str('PyObject*', lineno=976, col_offset=18), Num(0, lineno=976, col_offset=31)], [], None, None, lineno=976, col_offset=8), lineno=976, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=977, col_offset=8), 'emit', Load(), lineno=977, col_offset=8), [BinOp(Str('ast2obj_%s(void* _o)', lineno=977, col_offset=18), Mod(), Name('name', Load(), lineno=977, col_offset=44), lineno=977, col_offset=18), Num(0, lineno=977, col_offset=51)], [], None, None, lineno=977, col_offset=8), lineno=977, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=978, col_offset=8), 'emit', Load(), lineno=978, col_offset=8), [Str('{', lineno=978, col_offset=18), Num(0, lineno=978, col_offset=23)], [], None, None, lineno=978, col_offset=8), lineno=978, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=979, col_offset=8), 'emit', Load(), lineno=979, col_offset=8), [BinOp(Str('%s o = (%s)_o;', lineno=979, col_offset=18), Mod(), Tuple([Name('ctype', Load(), lineno=979, col_offset=38), Name('ctype', Load(), lineno=979, col_offset=45)], Load(), lineno=979, col_offset=38), lineno=979, col_offset=18), Num(1, lineno=979, col_offset=53)], [], None, None, lineno=979, col_offset=8), lineno=979, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=980, col_offset=8), 'emit', Load(), lineno=980, col_offset=8), [Str('PyObject *result = NULL, *value = NULL;', lineno=980, col_offset=18), Num(1, lineno=980, col_offset=61)], [], None, None, lineno=980, col_offset=8), lineno=980, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=981, col_offset=8), 'emit', Load(), lineno=981, col_offset=8), [Str('if (!o) {', lineno=981, col_offset=18), Num(1, lineno=981, col_offset=31)], [], None, None, lineno=981, col_offset=8), lineno=981, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=982, col_offset=8), 'emit', Load(), lineno=982, col_offset=8), [Str('Py_INCREF(Py_None);', lineno=982, col_offset=18), Num(2, lineno=982, col_offset=41)], [], None, None, lineno=982, col_offset=8), lineno=982, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=983, col_offset=8), 'emit', Load(), lineno=983, col_offset=8), [Str('return Py_None;', lineno=983, col_offset=18), Num(2, lineno=983, col_offset=37)], [], None, None, lineno=983, col_offset=8), lineno=983, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=984, col_offset=8), 'emit', Load(), lineno=984, col_offset=8), [Str('}', lineno=984, col_offset=18), Num(1, lineno=984, col_offset=23)], [], None, None, lineno=984, col_offset=8), lineno=984, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=985, col_offset=8), 'emit', Load(), lineno=985, col_offset=8), [Str('', lineno=985, col_offset=18), Num(0, lineno=985, col_offset=22)], [], None, None, lineno=985, col_offset=8), lineno=985, col_offset=8)], [], lineno=974, col_offset=4), FunctionDef('func_end', arguments([Name('self', Param(), lineno=987, col_offset=17)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=988, col_offset=8), 'emit', Load(), lineno=988, col_offset=8), [Str('return result;', lineno=988, col_offset=18), Num(1, lineno=988, col_offset=36)], [], None, None, lineno=988, col_offset=8), lineno=988, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=989, col_offset=8), 'emit', Load(), lineno=989, col_offset=8), [Str('failed:', lineno=989, col_offset=18), Num(0, lineno=989, col_offset=29)], [], None, None, lineno=989, col_offset=8), lineno=989, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=990, col_offset=8), 'emit', Load(), lineno=990, col_offset=8), [Str('Py_XDECREF(value);', lineno=990, col_offset=18), Num(1, lineno=990, col_offset=40)], [], None, None, lineno=990, col_offset=8), lineno=990, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=991, col_offset=8), 'emit', Load(), lineno=991, col_offset=8), [Str('Py_XDECREF(result);', lineno=991, col_offset=18), Num(1, lineno=991, col_offset=41)], [], None, None, lineno=991, col_offset=8), lineno=991, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=992, col_offset=8), 'emit', Load(), lineno=992, col_offset=8), [Str('return NULL;', lineno=992, col_offset=18), Num(1, lineno=992, col_offset=34)], [], None, None, lineno=992, col_offset=8), lineno=992, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=993, col_offset=8), 'emit', Load(), lineno=993, col_offset=8), [Str('}', lineno=993, col_offset=18), Num(0, lineno=993, col_offset=23)], [], None, None, lineno=993, col_offset=8), lineno=993, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=994, col_offset=8), 'emit', Load(), lineno=994, col_offset=8), [Str('', lineno=994, col_offset=18), Num(0, lineno=994, col_offset=22)], [], None, None, lineno=994, col_offset=8), lineno=994, col_offset=8)], [], lineno=987, col_offset=4), FunctionDef('visitSum', arguments([Name('self', Param(), lineno=996, col_offset=17), Name('sum', Param(), lineno=996, col_offset=23), Name('name', Param(), lineno=996, col_offset=28)], None, None, []), [If(Call(Name('is_simple', Load(), lineno=997, col_offset=11), [Name('sum', Load(), lineno=997, col_offset=21)], [], None, None, lineno=997, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=998, col_offset=12), 'simpleSum', Load(), lineno=998, col_offset=12), [Name('sum', Load(), lineno=998, col_offset=27), Name('name', Load(), lineno=998, col_offset=32)], [], None, None, lineno=998, col_offset=12), lineno=998, col_offset=12), Return(None, lineno=999, col_offset=12)], [], lineno=997, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1000, col_offset=8), 'func_begin', Load(), lineno=1000, col_offset=8), [Name('name', Load(), lineno=1000, col_offset=24)], [], None, None, lineno=1000, col_offset=8), lineno=1000, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1001, col_offset=8), 'emit', Load(), lineno=1001, col_offset=8), [Str('switch (o->kind) {', lineno=1001, col_offset=18), Num(1, lineno=1001, col_offset=40)], [], None, None, lineno=1001, col_offset=8), lineno=1001, col_offset=8), For(Name('i', Store(), lineno=1002, col_offset=12), Call(Name('range', Load(), lineno=1002, col_offset=17), [Call(Name('len', Load(), lineno=1002, col_offset=23), [Attribute(Name('sum', Load(), lineno=1002, col_offset=27), 'types', Load(), lineno=1002, col_offset=27)], [], None, None, lineno=1002, col_offset=23)], [], None, None, lineno=1002, col_offset=17), [Assign([Name('t', Store(), lineno=1003, col_offset=12)], Subscript(Attribute(Name('sum', Load(), lineno=1003, col_offset=16), 'types', Load(), lineno=1003, col_offset=16), Index(Name('i', Load(), lineno=1003, col_offset=26)), Load(), lineno=1003, col_offset=16), lineno=1003, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1004, col_offset=12), 'visitConstructor', Load(), lineno=1004, col_offset=12), [Name('t', Load(), lineno=1004, col_offset=34), BinOp(Name('i', Load(), lineno=1004, col_offset=37), Add(), Num(1, lineno=1004, col_offset=41), lineno=1004, col_offset=37), Name('name', Load(), lineno=1004, col_offset=44)], [], None, None, lineno=1004, col_offset=12), lineno=1004, col_offset=12)], [], lineno=1002, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1005, col_offset=8), 'emit', Load(), lineno=1005, col_offset=8), [Str('}', lineno=1005, col_offset=18), Num(1, lineno=1005, col_offset=23)], [], None, None, lineno=1005, col_offset=8), lineno=1005, col_offset=8), For(Name('a', Store(), lineno=1006, col_offset=12), Attribute(Name('sum', Load(), lineno=1006, col_offset=17), 'attributes', Load(), lineno=1006, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=1007, col_offset=12), 'emit', Load(), lineno=1007, col_offset=12), [BinOp(Str('value = ast2obj_%s(o->%s);', lineno=1007, col_offset=22), Mod(), Tuple([Attribute(Name('a', Load(), lineno=1007, col_offset=54), 'type', Load(), lineno=1007, col_offset=54), Attribute(Name('a', Load(), lineno=1007, col_offset=62), 'name', Load(), lineno=1007, col_offset=62)], Load(), lineno=1007, col_offset=54), lineno=1007, col_offset=22), Num(1, lineno=1007, col_offset=71)], [], None, None, lineno=1007, col_offset=12), lineno=1007, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1008, col_offset=12), 'emit', Load(), lineno=1008, col_offset=12), [Str('if (!value) goto failed;', lineno=1008, col_offset=22), Num(1, lineno=1008, col_offset=50)], [], None, None, lineno=1008, col_offset=12), lineno=1008, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1009, col_offset=12), 'emit', Load(), lineno=1009, col_offset=12), [BinOp(Str('if (PyObject_SetAttrString(result, "%s", value) < 0)', lineno=1009, col_offset=22), Mod(), Attribute(Name('a', Load(), lineno=1009, col_offset=79), 'name', Load(), lineno=1009, col_offset=79), lineno=1009, col_offset=22), Num(1, lineno=1009, col_offset=87)], [], None, None, lineno=1009, col_offset=12), lineno=1009, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1010, col_offset=12), 'emit', Load(), lineno=1010, col_offset=12), [Str('goto failed;', lineno=1010, col_offset=22), Num(2, lineno=1010, col_offset=38)], [], None, None, lineno=1010, col_offset=12), lineno=1010, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1011, col_offset=12), 'emit', Load(), lineno=1011, col_offset=12), [Str('Py_DECREF(value);', lineno=1011, col_offset=22), Num(1, lineno=1011, col_offset=43)], [], None, None, lineno=1011, col_offset=12), lineno=1011, col_offset=12)], [], lineno=1006, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1012, col_offset=8), 'func_end', Load(), lineno=1012, col_offset=8), [], [], None, None, lineno=1012, col_offset=8), lineno=1012, col_offset=8)], [], lineno=996, col_offset=4), FunctionDef('simpleSum', arguments([Name('self', Param(), lineno=1014, col_offset=18), Name('sum', Param(), lineno=1014, col_offset=24), Name('name', Param(), lineno=1014, col_offset=29)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1015, col_offset=8), 'emit', Load(), lineno=1015, col_offset=8), [BinOp(Str('PyObject* ast2obj_%s(%s_ty o)', lineno=1015, col_offset=18), Mod(), Tuple([Name('name', Load(), lineno=1015, col_offset=53), Name('name', Load(), lineno=1015, col_offset=59)], Load(), lineno=1015, col_offset=53), lineno=1015, col_offset=18), Num(0, lineno=1015, col_offset=66)], [], None, None, lineno=1015, col_offset=8), lineno=1015, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1016, col_offset=8), 'emit', Load(), lineno=1016, col_offset=8), [Str('{', lineno=1016, col_offset=18), Num(0, lineno=1016, col_offset=23)], [], None, None, lineno=1016, col_offset=8), lineno=1016, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1017, col_offset=8), 'emit', Load(), lineno=1017, col_offset=8), [Str('switch(o) {', lineno=1017, col_offset=18), Num(1, lineno=1017, col_offset=33)], [], None, None, lineno=1017, col_offset=8), lineno=1017, col_offset=8), For(Name('t', Store(), lineno=1018, col_offset=12), Attribute(Name('sum', Load(), lineno=1018, col_offset=17), 'types', Load(), lineno=1018, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=1019, col_offset=12), 'emit', Load(), lineno=1019, col_offset=12), [BinOp(Str('case %s:', lineno=1019, col_offset=22), Mod(), Attribute(Name('t', Load(), lineno=1019, col_offset=35), 'name', Load(), lineno=1019, col_offset=35), lineno=1019, col_offset=22), Num(2, lineno=1019, col_offset=43)], [], None, None, lineno=1019, col_offset=12), lineno=1019, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1020, col_offset=12), 'emit', Load(), lineno=1020, col_offset=12), [BinOp(Str('Py_INCREF(%s_singleton);', lineno=1020, col_offset=22), Mod(), Attribute(Name('t', Load(), lineno=1020, col_offset=51), 'name', Load(), lineno=1020, col_offset=51), lineno=1020, col_offset=22), Num(3, lineno=1020, col_offset=59)], [], None, None, lineno=1020, col_offset=12), lineno=1020, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1021, col_offset=12), 'emit', Load(), lineno=1021, col_offset=12), [BinOp(Str('return %s_singleton;', lineno=1021, col_offset=22), Mod(), Attribute(Name('t', Load(), lineno=1021, col_offset=47), 'name', Load(), lineno=1021, col_offset=47), lineno=1021, col_offset=22), Num(3, lineno=1021, col_offset=55)], [], None, None, lineno=1021, col_offset=12), lineno=1021, col_offset=12)], [], lineno=1018, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1022, col_offset=8), 'emit', Load(), lineno=1022, col_offset=8), [BinOp(Str('default:', lineno=1022, col_offset=18), Mod(), Name('name', Load(), lineno=1022, col_offset=31), lineno=1022, col_offset=18), Num(2, lineno=1022, col_offset=37)], [], None, None, lineno=1022, col_offset=8), lineno=1022, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1023, col_offset=8), 'emit', Load(), lineno=1023, col_offset=8), [Str('/* should never happen, but just in case ... */', lineno=1023, col_offset=18), Num(3, lineno=1023, col_offset=69)], [], None, None, lineno=1023, col_offset=8), lineno=1023, col_offset=8), Assign([Name('code', Store(), lineno=1024, col_offset=8)], BinOp(Str('PyErr_Format(PyExc_SystemError, "unknown %s found");', lineno=1024, col_offset=15), Mod(), Name('name', Load(), lineno=1024, col_offset=74), lineno=1024, col_offset=15), lineno=1024, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1025, col_offset=8), 'emit', Load(), lineno=1025, col_offset=8), [Name('code', Load(), lineno=1025, col_offset=18), Num(3, lineno=1025, col_offset=24)], [keyword('reflow', Name('False', Load(), lineno=1025, col_offset=34))], None, None, lineno=1025, col_offset=8), lineno=1025, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1026, col_offset=8), 'emit', Load(), lineno=1026, col_offset=8), [Str('return NULL;', lineno=1026, col_offset=18), Num(3, lineno=1026, col_offset=34)], [], None, None, lineno=1026, col_offset=8), lineno=1026, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1027, col_offset=8), 'emit', Load(), lineno=1027, col_offset=8), [Str('}', lineno=1027, col_offset=18), Num(1, lineno=1027, col_offset=23)], [], None, None, lineno=1027, col_offset=8), lineno=1027, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1028, col_offset=8), 'emit', Load(), lineno=1028, col_offset=8), [Str('}', lineno=1028, col_offset=18), Num(0, lineno=1028, col_offset=23)], [], None, None, lineno=1028, col_offset=8), lineno=1028, col_offset=8)], [], lineno=1014, col_offset=4), FunctionDef('visitProduct', arguments([Name('self', Param(), lineno=1030, col_offset=21), Name('prod', Param(), lineno=1030, col_offset=27), Name('name', Param(), lineno=1030, col_offset=33)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1031, col_offset=8), 'func_begin', Load(), lineno=1031, col_offset=8), [Name('name', Load(), lineno=1031, col_offset=24)], [], None, None, lineno=1031, col_offset=8), lineno=1031, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1032, col_offset=8), 'emit', Load(), lineno=1032, col_offset=8), [BinOp(Str('result = PyType_GenericNew(%s_type, NULL, NULL);', lineno=1032, col_offset=18), Mod(), Name('name', Load(), lineno=1032, col_offset=71), lineno=1032, col_offset=18), Num(1, lineno=1032, col_offset=77)], [], None, None, lineno=1032, col_offset=8), lineno=1032, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1033, col_offset=8), 'emit', Load(), lineno=1033, col_offset=8), [Str('if (!result) return NULL;', lineno=1033, col_offset=18), Num(1, lineno=1033, col_offset=47)], [], None, None, lineno=1033, col_offset=8), lineno=1033, col_offset=8), For(Name('field', Store(), lineno=1034, col_offset=12), Attribute(Name('prod', Load(), lineno=1034, col_offset=21), 'fields', Load(), lineno=1034, col_offset=21), [Expr(Call(Attribute(Name('self', Load(), lineno=1035, col_offset=12), 'visitField', Load(), lineno=1035, col_offset=12), [Name('field', Load(), lineno=1035, col_offset=28), Name('name', Load(), lineno=1035, col_offset=35), Num(1, lineno=1035, col_offset=41), Name('True', Load(), lineno=1035, col_offset=44)], [], None, None, lineno=1035, col_offset=12), lineno=1035, col_offset=12)], [], lineno=1034, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1036, col_offset=8), 'func_end', Load(), lineno=1036, col_offset=8), [], [], None, None, lineno=1036, col_offset=8), lineno=1036, col_offset=8)], [], lineno=1030, col_offset=4), FunctionDef('visitConstructor', arguments([Name('self', Param(), lineno=1038, col_offset=25), Name('cons', Param(), lineno=1038, col_offset=31), Name('enum', Param(), lineno=1038, col_offset=37), Name('name', Param(), lineno=1038, col_offset=43)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1039, col_offset=8), 'emit', Load(), lineno=1039, col_offset=8), [BinOp(Str('case %s_kind:', lineno=1039, col_offset=18), Mod(), Attribute(Name('cons', Load(), lineno=1039, col_offset=36), 'name', Load(), lineno=1039, col_offset=36), lineno=1039, col_offset=18), Num(1, lineno=1039, col_offset=47)], [], None, None, lineno=1039, col_offset=8), lineno=1039, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1040, col_offset=8), 'emit', Load(), lineno=1040, col_offset=8), [BinOp(Str('result = PyType_GenericNew(%s_type, NULL, NULL);', lineno=1040, col_offset=18), Mod(), Attribute(Name('cons', Load(), lineno=1040, col_offset=71), 'name', Load(), lineno=1040, col_offset=71), lineno=1040, col_offset=18), Num(2, lineno=1040, col_offset=82)], [], None, None, lineno=1040, col_offset=8), lineno=1040, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1041, col_offset=8), 'emit', Load(), lineno=1041, col_offset=8), [Str('if (!result) goto failed;', lineno=1041, col_offset=18), Num(2, lineno=1041, col_offset=47)], [], None, None, lineno=1041, col_offset=8), lineno=1041, col_offset=8), For(Name('f', Store(), lineno=1042, col_offset=12), Attribute(Name('cons', Load(), lineno=1042, col_offset=17), 'fields', Load(), lineno=1042, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=1043, col_offset=12), 'visitField', Load(), lineno=1043, col_offset=12), [Name('f', Load(), lineno=1043, col_offset=28), Attribute(Name('cons', Load(), lineno=1043, col_offset=31), 'name', Load(), lineno=1043, col_offset=31), Num(2, lineno=1043, col_offset=42), Name('False', Load(), lineno=1043, col_offset=45)], [], None, None, lineno=1043, col_offset=12), lineno=1043, col_offset=12)], [], lineno=1042, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1044, col_offset=8), 'emit', Load(), lineno=1044, col_offset=8), [Str('break;', lineno=1044, col_offset=18), Num(2, lineno=1044, col_offset=28)], [], None, None, lineno=1044, col_offset=8), lineno=1044, col_offset=8)], [], lineno=1038, col_offset=4), FunctionDef('visitField', arguments([Name('self', Param(), lineno=1046, col_offset=19), Name('field', Param(), lineno=1046, col_offset=25), Name('name', Param(), lineno=1046, col_offset=32), Name('depth', Param(), lineno=1046, col_offset=38), Name('product', Param(), lineno=1046, col_offset=45)], None, None, []), [FunctionDef('emit', arguments([Name('s', Param(), lineno=1047, col_offset=17), Name('d', Param(), lineno=1047, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1048, col_offset=12), 'emit', Load(), lineno=1048, col_offset=12), [Name('s', Load(), lineno=1048, col_offset=22), BinOp(Name('depth', Load(), lineno=1048, col_offset=25), Add(), Name('d', Load(), lineno=1048, col_offset=33), lineno=1048, col_offset=25)], [], None, None, lineno=1048, col_offset=12), lineno=1048, col_offset=12)], [], lineno=1047, col_offset=8), If(Name('product', Load(), lineno=1049, col_offset=11), [Assign([Name('value', Store(), lineno=1050, col_offset=12)], BinOp(Str('o->%s', lineno=1050, col_offset=20), Mod(), Attribute(Name('field', Load(), lineno=1050, col_offset=30), 'name', Load(), lineno=1050, col_offset=30), lineno=1050, col_offset=20), lineno=1050, col_offset=12)], [Assign([Name('value', Store(), lineno=1052, col_offset=12)], BinOp(Str('o->v.%s.%s', lineno=1052, col_offset=20), Mod(), Tuple([Name('name', Load(), lineno=1052, col_offset=36), Attribute(Name('field', Load(), lineno=1052, col_offset=42), 'name', Load(), lineno=1052, col_offset=42)], Load(), lineno=1052, col_offset=36), lineno=1052, col_offset=20), lineno=1052, col_offset=12)], lineno=1049, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1053, col_offset=8), 'set', Load(), lineno=1053, col_offset=8), [Name('field', Load(), lineno=1053, col_offset=17), Name('value', Load(), lineno=1053, col_offset=24), Name('depth', Load(), lineno=1053, col_offset=31)], [], None, None, lineno=1053, col_offset=8), lineno=1053, col_offset=8), Expr(Call(Name('emit', Load(), lineno=1054, col_offset=8), [Str('if (!value) goto failed;', lineno=1054, col_offset=13), Num(0, lineno=1054, col_offset=41)], [], None, None, lineno=1054, col_offset=8), lineno=1054, col_offset=8), Expr(Call(Name('emit', Load(), lineno=1055, col_offset=8), [BinOp(Str('if (PyObject_SetAttrString(result, "%s", value) == -1)', lineno=1055, col_offset=13), Mod(), Attribute(Name('field', Load(), lineno=1055, col_offset=72), 'name', Load(), lineno=1055, col_offset=72), lineno=1055, col_offset=13), Num(0, lineno=1055, col_offset=84)], [], None, None, lineno=1055, col_offset=8), lineno=1055, col_offset=8), Expr(Call(Name('emit', Load(), lineno=1056, col_offset=8), [Str('goto failed;', lineno=1056, col_offset=13), Num(1, lineno=1056, col_offset=29)], [], None, None, lineno=1056, col_offset=8), lineno=1056, col_offset=8), Expr(Call(Name('emit', Load(), lineno=1057, col_offset=8), [Str('Py_DECREF(value);', lineno=1057, col_offset=13), Num(0, lineno=1057, col_offset=34)], [], None, None, lineno=1057, col_offset=8), lineno=1057, col_offset=8)], [], lineno=1046, col_offset=4), FunctionDef('emitSeq', arguments([Name('self', Param(), lineno=1059, col_offset=16), Name('field', Param(), lineno=1059, col_offset=22), Name('value', Param(), lineno=1059, col_offset=29), Name('depth', Param(), lineno=1059, col_offset=36), Name('emit', Param(), lineno=1059, col_offset=43)], None, None, []), [Expr(Call(Name('emit', Load(), lineno=1060, col_offset=8), [BinOp(Str('seq = %s;', lineno=1060, col_offset=13), Mod(), Name('value', Load(), lineno=1060, col_offset=27), lineno=1060, col_offset=13), Num(0, lineno=1060, col_offset=34)], [], None, None, lineno=1060, col_offset=8), lineno=1060, col_offset=8), Expr(Call(Name('emit', Load(), lineno=1061, col_offset=8), [Str('n = asdl_seq_LEN(seq);', lineno=1061, col_offset=13), Num(0, lineno=1061, col_offset=39)], [], None, None, lineno=1061, col_offset=8), lineno=1061, col_offset=8), Expr(Call(Name('emit', Load(), lineno=1062, col_offset=8), [Str('value = PyList_New(n);', lineno=1062, col_offset=13), Num(0, lineno=1062, col_offset=39)], [], None, None, lineno=1062, col_offset=8), lineno=1062, col_offset=8), Expr(Call(Name('emit', Load(), lineno=1063, col_offset=8), [Str('if (!value) goto failed;', lineno=1063, col_offset=13), Num(0, lineno=1063, col_offset=41)], [], None, None, lineno=1063, col_offset=8), lineno=1063, col_offset=8), Expr(Call(Name('emit', Load(), lineno=1064, col_offset=8), [Str('for (i = 0; i < n; i++) {', lineno=1064, col_offset=13), Num(0, lineno=1064, col_offset=42)], [], None, None, lineno=1064, col_offset=8), lineno=1064, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1065, col_offset=8), 'set', Load(), lineno=1065, col_offset=8), [Str('value', lineno=1065, col_offset=17), Name('field', Load(), lineno=1065, col_offset=26), Str('asdl_seq_GET(seq, i)', lineno=1065, col_offset=33), BinOp(Name('depth', Load(), lineno=1065, col_offset=57), Add(), Num(1, lineno=1065, col_offset=65), lineno=1065, col_offset=57)], [], None, None, lineno=1065, col_offset=8), lineno=1065, col_offset=8), Expr(Call(Name('emit', Load(), lineno=1066, col_offset=8), [Str('if (!value1) goto failed;', lineno=1066, col_offset=13), Num(1, lineno=1066, col_offset=42)], [], None, None, lineno=1066, col_offset=8), lineno=1066, col_offset=8), Expr(Call(Name('emit', Load(), lineno=1067, col_offset=8), [Str('PyList_SET_ITEM(value, i, value1);', lineno=1067, col_offset=13), Num(1, lineno=1067, col_offset=51)], [], None, None, lineno=1067, col_offset=8), lineno=1067, col_offset=8), Expr(Call(Name('emit', Load(), lineno=1068, col_offset=8), [Str('value1 = NULL;', lineno=1068, col_offset=13), Num(1, lineno=1068, col_offset=31)], [], None, None, lineno=1068, col_offset=8), lineno=1068, col_offset=8), Expr(Call(Name('emit', Load(), lineno=1069, col_offset=8), [Str('}', lineno=1069, col_offset=13), Num(0, lineno=1069, col_offset=18)], [], None, None, lineno=1069, col_offset=8), lineno=1069, col_offset=8)], [], lineno=1059, col_offset=4), FunctionDef('set', arguments([Name('self', Param(), lineno=1071, col_offset=12), Name('field', Param(), lineno=1071, col_offset=18), Name('value', Param(), lineno=1071, col_offset=25), Name('depth', Param(), lineno=1071, col_offset=32)], None, None, []), [If(Attribute(Name('field', Load(), lineno=1072, col_offset=11), 'seq', Load(), lineno=1072, col_offset=11), [If(Compare(Attribute(Attribute(Name('field', Load(), lineno=1074, col_offset=15), 'type', Load(), lineno=1074, col_offset=15), 'value', Load(), lineno=1074, col_offset=15), [Eq()], [Str('cmpop', lineno=1074, col_offset=35)], lineno=1074, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=1077, col_offset=16), 'emit', Load(), lineno=1077, col_offset=16), [Str('{', lineno=1077, col_offset=26), Name('depth', Load(), lineno=1077, col_offset=31)], [], None, None, lineno=1077, col_offset=16), lineno=1077, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=1078, col_offset=16), 'emit', Load(), lineno=1078, col_offset=16), [BinOp(Str('int i, n = asdl_seq_LEN(%s);', lineno=1078, col_offset=26), Mod(), Name('value', Load(), lineno=1078, col_offset=59), lineno=1078, col_offset=26), BinOp(Name('depth', Load(), lineno=1078, col_offset=66), Add(), Num(1, lineno=1078, col_offset=72), lineno=1078, col_offset=66)], [], None, None, lineno=1078, col_offset=16), lineno=1078, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=1079, col_offset=16), 'emit', Load(), lineno=1079, col_offset=16), [Str('value = PyList_New(n);', lineno=1079, col_offset=26), BinOp(Name('depth', Load(), lineno=1079, col_offset=52), Add(), Num(1, lineno=1079, col_offset=58), lineno=1079, col_offset=52)], [], None, None, lineno=1079, col_offset=16), lineno=1079, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=1080, col_offset=16), 'emit', Load(), lineno=1080, col_offset=16), [Str('if (!value) goto failed;', lineno=1080, col_offset=26), BinOp(Name('depth', Load(), lineno=1080, col_offset=54), Add(), Num(1, lineno=1080, col_offset=60), lineno=1080, col_offset=54)], [], None, None, lineno=1080, col_offset=16), lineno=1080, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=1081, col_offset=16), 'emit', Load(), lineno=1081, col_offset=16), [Str('for(i = 0; i < n; i++)', lineno=1081, col_offset=26), BinOp(Name('depth', Load(), lineno=1081, col_offset=52), Add(), Num(1, lineno=1081, col_offset=58), lineno=1081, col_offset=52)], [], None, None, lineno=1081, col_offset=16), lineno=1081, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=1083, col_offset=16), 'emit', Load(), lineno=1083, col_offset=16), [BinOp(Str('PyList_SET_ITEM(value, i, ast2obj_cmpop((cmpop_ty)asdl_seq_GET(%s, i)));', lineno=1083, col_offset=26), Mod(), Name('value', Load(), lineno=1083, col_offset=103), lineno=1083, col_offset=26), BinOp(Name('depth', Load(), lineno=1084, col_offset=26), Add(), Num(2, lineno=1084, col_offset=32), lineno=1084, col_offset=26)], [keyword('reflow', Name('False', Load(), lineno=1084, col_offset=42))], None, None, lineno=1083, col_offset=16), lineno=1083, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=1085, col_offset=16), 'emit', Load(), lineno=1085, col_offset=16), [Str('}', lineno=1085, col_offset=26), Name('depth', Load(), lineno=1085, col_offset=31)], [], None, None, lineno=1085, col_offset=16), lineno=1085, col_offset=16)], [Expr(Call(Attribute(Name('self', Load(), lineno=1087, col_offset=16), 'emit', Load(), lineno=1087, col_offset=16), [BinOp(Str('value = ast2obj_list(%s, ast2obj_%s);', lineno=1087, col_offset=26), Mod(), Tuple([Name('value', Load(), lineno=1087, col_offset=69), Attribute(Name('field', Load(), lineno=1087, col_offset=76), 'type', Load(), lineno=1087, col_offset=76)], Load(), lineno=1087, col_offset=69), lineno=1087, col_offset=26), Name('depth', Load(), lineno=1087, col_offset=89)], [], None, None, lineno=1087, col_offset=16), lineno=1087, col_offset=16)], lineno=1074, col_offset=12)], [Assign([Name('ctype', Store(), lineno=1089, col_offset=12)], Call(Name('get_c_type', Load(), lineno=1089, col_offset=20), [Attribute(Name('field', Load(), lineno=1089, col_offset=31), 'type', Load(), lineno=1089, col_offset=31)], [], None, None, lineno=1089, col_offset=20), lineno=1089, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1090, col_offset=12), 'emit', Load(), lineno=1090, col_offset=12), [BinOp(Str('value = ast2obj_%s(%s);', lineno=1090, col_offset=22), Mod(), Tuple([Attribute(Name('field', Load(), lineno=1090, col_offset=51), 'type', Load(), lineno=1090, col_offset=51), Name('value', Load(), lineno=1090, col_offset=63)], Load(), lineno=1090, col_offset=51), lineno=1090, col_offset=22), Name('depth', Load(), lineno=1090, col_offset=71)], [keyword('reflow', Name('False', Load(), lineno=1090, col_offset=85))], None, None, lineno=1090, col_offset=12), lineno=1090, col_offset=12)], lineno=1072, col_offset=8)], [], lineno=1071, col_offset=4)], [], lineno=972, col_offset=0), ClassDef('PartingShots', [Name('StaticVisitor', Load(), lineno=1093, col_offset=19)], [Assign([Name('CODE', Store(), lineno=1095, col_offset=4)], Str('\nPyObject* PyAST_mod2obj(mod_ty t)\n{\n    init_types();\n    return ast2obj_mod(t);\n}\n\n/* mode is 0 for "exec", 1 for "eval" and 2 for "single" input */\nmod_ty PyAST_obj2mod(PyObject* ast, PyArena* arena, int mode)\n{\n    mod_ty res;\n    PyObject *req_type[] = {(PyObject*)Module_type, (PyObject*)Expression_type,\n                            (PyObject*)Interactive_type};\n    char *req_name[] = {"Module", "Expression", "Interactive"};\n    int isinstance;\n    assert(0 <= mode && mode <= 2);\n\n    init_types();\n\n    isinstance = PyObject_IsInstance(ast, req_type[mode]);\n    if (isinstance == -1)\n        return NULL;\n    if (!isinstance) {\n        PyErr_Format(PyExc_TypeError, "expected %s node, got %.400s",\n                     req_name[mode], Py_TYPE(ast)->tp_name);\n        return NULL;\n    }\n    if (obj2ast_mod(ast, &res, arena) != 0)\n        return NULL;\n    else\n        return res;\n}\n\nint PyAST_Check(PyObject* obj)\n{\n    init_types();\n    return PyObject_IsInstance(obj, (PyObject*)&AST_type);\n}\n', lineno=1133, col_offset=-1), lineno=1095, col_offset=4)], [], lineno=1093, col_offset=0), ClassDef('ChainOfVisitors', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=1136, col_offset=17)], 'visitors', None, []), [Assign([Attribute(Name('self', Load(), lineno=1137, col_offset=8), 'visitors', Store(), lineno=1137, col_offset=8)], Name('visitors', Load(), lineno=1137, col_offset=24), lineno=1137, col_offset=8)], [], lineno=1136, col_offset=4), FunctionDef('visit', arguments([Name('self', Param(), lineno=1139, col_offset=14), Name('object', Param(), lineno=1139, col_offset=20)], None, None, []), [For(Name('v', Store(), lineno=1140, col_offset=12), Attribute(Name('self', Load(), lineno=1140, col_offset=17), 'visitors', Load(), lineno=1140, col_offset=17), [Expr(Call(Attribute(Name('v', Load(), lineno=1141, col_offset=12), 'visit', Load(), lineno=1141, col_offset=12), [Name('object', Load(), lineno=1141, col_offset=20)], [], None, None, lineno=1141, col_offset=12), lineno=1141, col_offset=12), Expr(Call(Attribute(Name('v', Load(), lineno=1142, col_offset=12), 'emit', Load(), lineno=1142, col_offset=12), [Str('', lineno=1142, col_offset=19), Num(0, lineno=1142, col_offset=23)], [], None, None, lineno=1142, col_offset=12), lineno=1142, col_offset=12)], [], lineno=1140, col_offset=8)], [], lineno=1139, col_offset=4)], [], lineno=1135, col_offset=0), Assign([Name('common_msg', Store(), lineno=1144, col_offset=0)], Str('/* File automatically generated by %s. */\n\n', lineno=1144, col_offset=13), lineno=1144, col_offset=0), Assign([Name('c_file_msg', Store(), lineno=1146, col_offset=0)], Str('\n/*\n   __version__ %s.\n\n   This module must be committed separately after each AST grammar change;\n   The __version__ number is set to the revision number of the commit\n   containing the grammar change.\n*/\n\n', lineno=1155, col_offset=-1), lineno=1146, col_offset=0), FunctionDef('main', arguments([Name('srcfile', Param(), lineno=1157, col_offset=9)], None, None, []), [Assign([Name('argv0', Store(), lineno=1158, col_offset=4)], Subscript(Attribute(Name('sys', Load(), lineno=1158, col_offset=12), 'argv', Load(), lineno=1158, col_offset=12), Index(Num(0, lineno=1158, col_offset=21)), Load(), lineno=1158, col_offset=12), lineno=1158, col_offset=4), Assign([Name('components', Store(), lineno=1159, col_offset=4)], Call(Attribute(Name('argv0', Load(), lineno=1159, col_offset=17), 'split', Load(), lineno=1159, col_offset=17), [Attribute(Name('os', Load(), lineno=1159, col_offset=29), 'sep', Load(), lineno=1159, col_offset=29)], [], None, None, lineno=1159, col_offset=17), lineno=1159, col_offset=4), Assign([Name('argv0', Store(), lineno=1160, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=1160, col_offset=12), 'sep', Load(), lineno=1160, col_offset=12), 'join', Load(), lineno=1160, col_offset=12), [Subscript(Name('components', Load(), lineno=1160, col_offset=24), Slice(Num(-2, lineno=1160, col_offset=36), None, None), Load(), lineno=1160, col_offset=24)], [], None, None, lineno=1160, col_offset=12), lineno=1160, col_offset=4), Assign([Name('auto_gen_msg', Store(), lineno=1161, col_offset=4)], BinOp(Name('common_msg', Load(), lineno=1161, col_offset=19), Mod(), Name('argv0', Load(), lineno=1161, col_offset=32), lineno=1161, col_offset=19), lineno=1161, col_offset=4), Assign([Name('mod', Store(), lineno=1162, col_offset=4)], Call(Attribute(Name('asdl', Load(), lineno=1162, col_offset=10), 'parse', Load(), lineno=1162, col_offset=10), [Name('srcfile', Load(), lineno=1162, col_offset=21)], [], None, None, lineno=1162, col_offset=10), lineno=1162, col_offset=4), If(UnaryOp(Not(), Call(Attribute(Name('asdl', Load(), lineno=1163, col_offset=11), 'check', Load(), lineno=1163, col_offset=11), [Name('mod', Load(), lineno=1163, col_offset=22)], [], None, None, lineno=1163, col_offset=11), lineno=1163, col_offset=7), [Expr(Call(Attribute(Name('sys', Load(), lineno=1164, col_offset=8), 'exit', Load(), lineno=1164, col_offset=8), [Num(1, lineno=1164, col_offset=17)], [], None, None, lineno=1164, col_offset=8), lineno=1164, col_offset=8)], [], lineno=1163, col_offset=4), If(Name('INC_DIR', Load(), lineno=1165, col_offset=7), [Assign([Name('p', Store(), lineno=1166, col_offset=8)], BinOp(Str('%s/%s-ast.h', lineno=1166, col_offset=12), Mod(), Tuple([Name('INC_DIR', Load(), lineno=1166, col_offset=29), Attribute(Name('mod', Load(), lineno=1166, col_offset=38), 'name', Load(), lineno=1166, col_offset=38)], Load(), lineno=1166, col_offset=29), lineno=1166, col_offset=12), lineno=1166, col_offset=8), Assign([Name('f', Store(), lineno=1167, col_offset=8)], Call(Name('open', Load(), lineno=1167, col_offset=12), [Name('p', Load(), lineno=1167, col_offset=17), Str('wb', lineno=1167, col_offset=20)], [], None, None, lineno=1167, col_offset=12), lineno=1167, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=1168, col_offset=8), 'write', Load(), lineno=1168, col_offset=8), [Name('auto_gen_msg', Load(), lineno=1168, col_offset=16)], [], None, None, lineno=1168, col_offset=8), lineno=1168, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=1169, col_offset=8), 'write', Load(), lineno=1169, col_offset=8), [Str('#include "asdl.h"\n\n', lineno=1169, col_offset=16)], [], None, None, lineno=1169, col_offset=8), lineno=1169, col_offset=8), Assign([Name('c', Store(), lineno=1170, col_offset=8)], Call(Name('ChainOfVisitors', Load(), lineno=1170, col_offset=12), [Call(Name('TypeDefVisitor', Load(), lineno=1170, col_offset=28), [Name('f', Load(), lineno=1170, col_offset=43)], [], None, None, lineno=1170, col_offset=28), Call(Name('StructVisitor', Load(), lineno=1171, col_offset=28), [Name('f', Load(), lineno=1171, col_offset=42)], [], None, None, lineno=1171, col_offset=28), Call(Name('PrototypeVisitor', Load(), lineno=1172, col_offset=28), [Name('f', Load(), lineno=1172, col_offset=45)], [], None, None, lineno=1172, col_offset=28)], [], None, None, lineno=1170, col_offset=12), lineno=1170, col_offset=8), Expr(Call(Attribute(Name('c', Load(), lineno=1174, col_offset=8), 'visit', Load(), lineno=1174, col_offset=8), [Name('mod', Load(), lineno=1174, col_offset=16)], [], None, None, lineno=1174, col_offset=8), lineno=1174, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=1175, col_offset=8), 'write', Load(), lineno=1175, col_offset=8), [Str('PyObject* PyAST_mod2obj(mod_ty t);\n', lineno=1175, col_offset=16)], [], None, None, lineno=1175, col_offset=8), lineno=1175, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=1176, col_offset=8), 'write', Load(), lineno=1176, col_offset=8), [Str('mod_ty PyAST_obj2mod(PyObject* ast, PyArena* arena, int mode);\n', lineno=1176, col_offset=16)], [], None, None, lineno=1176, col_offset=8), lineno=1176, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=1177, col_offset=8), 'write', Load(), lineno=1177, col_offset=8), [Str('int PyAST_Check(PyObject* obj);\n', lineno=1177, col_offset=16)], [], None, None, lineno=1177, col_offset=8), lineno=1177, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=1178, col_offset=8), 'close', Load(), lineno=1178, col_offset=8), [], [], None, None, lineno=1178, col_offset=8), lineno=1178, col_offset=8)], [], lineno=1165, col_offset=4), If(Name('SRC_DIR', Load(), lineno=1180, col_offset=7), [Assign([Name('p', Store(), lineno=1181, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=1181, col_offset=12), 'path', Load(), lineno=1181, col_offset=12), 'join', Load(), lineno=1181, col_offset=12), [Name('SRC_DIR', Load(), lineno=1181, col_offset=25), BinOp(Call(Name('str', Load(), lineno=1181, col_offset=34), [Attribute(Name('mod', Load(), lineno=1181, col_offset=38), 'name', Load(), lineno=1181, col_offset=38)], [], None, None, lineno=1181, col_offset=34), Add(), Str('-ast.c', lineno=1181, col_offset=50), lineno=1181, col_offset=34)], [], None, None, lineno=1181, col_offset=12), lineno=1181, col_offset=8), Assign([Name('f', Store(), lineno=1182, col_offset=8)], Call(Name('open', Load(), lineno=1182, col_offset=12), [Name('p', Load(), lineno=1182, col_offset=17), Str('wb', lineno=1182, col_offset=20)], [], None, None, lineno=1182, col_offset=12), lineno=1182, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=1183, col_offset=8), 'write', Load(), lineno=1183, col_offset=8), [Name('auto_gen_msg', Load(), lineno=1183, col_offset=16)], [], None, None, lineno=1183, col_offset=8), lineno=1183, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=1184, col_offset=8), 'write', Load(), lineno=1184, col_offset=8), [BinOp(Name('c_file_msg', Load(), lineno=1184, col_offset=16), Mod(), Call(Name('parse_version', Load(), lineno=1184, col_offset=29), [Name('mod', Load(), lineno=1184, col_offset=43)], [], None, None, lineno=1184, col_offset=29), lineno=1184, col_offset=16)], [], None, None, lineno=1184, col_offset=8), lineno=1184, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=1185, col_offset=8), 'write', Load(), lineno=1185, col_offset=8), [Str('#include "Python.h"\n', lineno=1185, col_offset=16)], [], None, None, lineno=1185, col_offset=8), lineno=1185, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=1186, col_offset=8), 'write', Load(), lineno=1186, col_offset=8), [BinOp(Str('#include "%s-ast.h"\n', lineno=1186, col_offset=16), Mod(), Attribute(Name('mod', Load(), lineno=1186, col_offset=42), 'name', Load(), lineno=1186, col_offset=42), lineno=1186, col_offset=16)], [], None, None, lineno=1186, col_offset=8), lineno=1186, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=1187, col_offset=8), 'write', Load(), lineno=1187, col_offset=8), [Str('\n', lineno=1187, col_offset=16)], [], None, None, lineno=1187, col_offset=8), lineno=1187, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=1188, col_offset=8), 'write', Load(), lineno=1188, col_offset=8), [Str('static PyTypeObject AST_type;\n', lineno=1188, col_offset=16)], [], None, None, lineno=1188, col_offset=8), lineno=1188, col_offset=8), Assign([Name('v', Store(), lineno=1189, col_offset=8)], Call(Name('ChainOfVisitors', Load(), lineno=1189, col_offset=12), [Call(Name('PyTypesDeclareVisitor', Load(), lineno=1190, col_offset=12), [Name('f', Load(), lineno=1190, col_offset=34)], [], None, None, lineno=1190, col_offset=12), Call(Name('PyTypesVisitor', Load(), lineno=1191, col_offset=12), [Name('f', Load(), lineno=1191, col_offset=27)], [], None, None, lineno=1191, col_offset=12), Call(Name('Obj2ModPrototypeVisitor', Load(), lineno=1192, col_offset=12), [Name('f', Load(), lineno=1192, col_offset=36)], [], None, None, lineno=1192, col_offset=12), Call(Name('FunctionVisitor', Load(), lineno=1193, col_offset=12), [Name('f', Load(), lineno=1193, col_offset=28)], [], None, None, lineno=1193, col_offset=12), Call(Name('ObjVisitor', Load(), lineno=1194, col_offset=12), [Name('f', Load(), lineno=1194, col_offset=23)], [], None, None, lineno=1194, col_offset=12), Call(Name('Obj2ModVisitor', Load(), lineno=1195, col_offset=12), [Name('f', Load(), lineno=1195, col_offset=27)], [], None, None, lineno=1195, col_offset=12), Call(Name('ASTModuleVisitor', Load(), lineno=1196, col_offset=12), [Name('f', Load(), lineno=1196, col_offset=29)], [], None, None, lineno=1196, col_offset=12), Call(Name('PartingShots', Load(), lineno=1197, col_offset=12), [Name('f', Load(), lineno=1197, col_offset=25)], [], None, None, lineno=1197, col_offset=12)], [], None, None, lineno=1189, col_offset=12), lineno=1189, col_offset=8), Expr(Call(Attribute(Name('v', Load(), lineno=1199, col_offset=8), 'visit', Load(), lineno=1199, col_offset=8), [Name('mod', Load(), lineno=1199, col_offset=16)], [], None, None, lineno=1199, col_offset=8), lineno=1199, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=1200, col_offset=8), 'close', Load(), lineno=1200, col_offset=8), [], [], None, None, lineno=1200, col_offset=8), lineno=1200, col_offset=8)], [], lineno=1180, col_offset=4)], [], lineno=1157, col_offset=0), If(Compare(Name('__name__', Load(), lineno=1202, col_offset=3), [Eq()], [Str('__main__', lineno=1202, col_offset=15)], lineno=1202, col_offset=3), [Import([alias('sys', None)], lineno=1203, col_offset=4), Import([alias('getopt', None)], lineno=1204, col_offset=4), Assign([Name('INC_DIR', Store(), lineno=1206, col_offset=4)], Str('', lineno=1206, col_offset=14), lineno=1206, col_offset=4), Assign([Name('SRC_DIR', Store(), lineno=1207, col_offset=4)], Str('', lineno=1207, col_offset=14), lineno=1207, col_offset=4), Assign([Tuple([Name('opts', Store(), lineno=1208, col_offset=4), Name('args', Store(), lineno=1208, col_offset=10)], Store(), lineno=1208, col_offset=4)], Call(Attribute(Name('getopt', Load(), lineno=1208, col_offset=17), 'getopt', Load(), lineno=1208, col_offset=17), [Subscript(Attribute(Name('sys', Load(), lineno=1208, col_offset=31), 'argv', Load(), lineno=1208, col_offset=31), Slice(Num(1, lineno=1208, col_offset=40), None, None), Load(), lineno=1208, col_offset=31), Str('h:c:', lineno=1208, col_offset=45)], [], None, None, lineno=1208, col_offset=17), lineno=1208, col_offset=4), If(Compare(Call(Name('len', Load(), lineno=1209, col_offset=7), [Name('opts', Load(), lineno=1209, col_offset=11)], [], None, None, lineno=1209, col_offset=7), [NotEq()], [Num(1, lineno=1209, col_offset=20)], lineno=1209, col_offset=7), [Print(None, [Str('Must specify exactly one output file', lineno=1210, col_offset=14)], True, lineno=1210, col_offset=8), Expr(Call(Attribute(Name('sys', Load(), lineno=1211, col_offset=8), 'exit', Load(), lineno=1211, col_offset=8), [Num(1, lineno=1211, col_offset=17)], [], None, None, lineno=1211, col_offset=8), lineno=1211, col_offset=8)], [], lineno=1209, col_offset=4), For(Tuple([Name('o', Store(), lineno=1212, col_offset=8), Name('v', Store(), lineno=1212, col_offset=11)], Store(), lineno=1212, col_offset=8), Name('opts', Load(), lineno=1212, col_offset=16), [If(Compare(Name('o', Load(), lineno=1213, col_offset=11), [Eq()], [Str('-h', lineno=1213, col_offset=16)], lineno=1213, col_offset=11), [Assign([Name('INC_DIR', Store(), lineno=1214, col_offset=12)], Name('v', Load(), lineno=1214, col_offset=22), lineno=1214, col_offset=12)], [], lineno=1213, col_offset=8), If(Compare(Name('o', Load(), lineno=1215, col_offset=11), [Eq()], [Str('-c', lineno=1215, col_offset=16)], lineno=1215, col_offset=11), [Assign([Name('SRC_DIR', Store(), lineno=1216, col_offset=12)], Name('v', Load(), lineno=1216, col_offset=22), lineno=1216, col_offset=12)], [], lineno=1215, col_offset=8)], [], lineno=1212, col_offset=4), If(Compare(Call(Name('len', Load(), lineno=1217, col_offset=7), [Name('args', Load(), lineno=1217, col_offset=11)], [], None, None, lineno=1217, col_offset=7), [NotEq()], [Num(1, lineno=1217, col_offset=20)], lineno=1217, col_offset=7), [Print(None, [Str('Must specify single input file', lineno=1218, col_offset=14)], True, lineno=1218, col_offset=8), Expr(Call(Attribute(Name('sys', Load(), lineno=1219, col_offset=8), 'exit', Load(), lineno=1219, col_offset=8), [Num(1, lineno=1219, col_offset=17)], [], None, None, lineno=1219, col_offset=8), lineno=1219, col_offset=8)], [], lineno=1217, col_offset=4), Expr(Call(Name('main', Load(), lineno=1220, col_offset=4), [Subscript(Name('args', Load(), lineno=1220, col_offset=9), Index(Num(0, lineno=1220, col_offset=14)), Load(), lineno=1220, col_offset=9)], [], None, None, lineno=1220, col_offset=4), lineno=1220, col_offset=4)], [], lineno=1202, col_offset=0)])
