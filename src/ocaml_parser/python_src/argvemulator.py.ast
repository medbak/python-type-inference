Module([Expr(Str('argvemulator - create sys.argv from OSA events. Used by applets that\nwant unix-style arguments.\n', lineno=3, col_offset=-1), lineno=3, col_offset=-1), ImportFrom('warnings', [alias('warnpy3k', None)], 0, lineno=5, col_offset=0), Expr(Call(Name('warnpy3k', Load(), lineno=6, col_offset=0), [Str('In 3.x, the argvemulator module is removed.', lineno=6, col_offset=9)], [keyword('stacklevel', Num(2, lineno=6, col_offset=67))], None, None, lineno=6, col_offset=0), lineno=6, col_offset=0), Import([alias('sys', None)], lineno=8, col_offset=0), Import([alias('traceback', None)], lineno=9, col_offset=0), ImportFrom('Carbon', [alias('AE', None)], 0, lineno=10, col_offset=0), ImportFrom('Carbon.AppleEvents', [alias('*', None)], 0, lineno=11, col_offset=0), ImportFrom('Carbon', [alias('Evt', None)], 0, lineno=12, col_offset=0), ImportFrom('Carbon', [alias('File', None)], 0, lineno=13, col_offset=0), ImportFrom('Carbon.Events', [alias('*', None)], 0, lineno=14, col_offset=0), Import([alias('aetools', None)], lineno=15, col_offset=0), ClassDef('ArgvCollector', [], [Expr(Str('A minimal FrameWork.Application-like class', lineno=19, col_offset=4), lineno=19, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=21, col_offset=17)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=22, col_offset=8), 'quitting', Store(), lineno=22, col_offset=8)], Num(0, lineno=22, col_offset=24), lineno=22, col_offset=8), If(BoolOp(And(), [Compare(Call(Name('len', Load(), lineno=24, col_offset=11), [Attribute(Name('sys', Load(), lineno=24, col_offset=15), 'argv', Load(), lineno=24, col_offset=15)], [], None, None, lineno=24, col_offset=11), [Gt()], [Num(1, lineno=24, col_offset=27)], lineno=24, col_offset=11), Compare(Subscript(Subscript(Attribute(Name('sys', Load(), lineno=24, col_offset=33), 'argv', Load(), lineno=24, col_offset=33), Index(Num(1, lineno=24, col_offset=42)), Load(), lineno=24, col_offset=33), Slice(None, Num(4, lineno=24, col_offset=46), None), Load(), lineno=24, col_offset=33), [Eq()], [Str('-psn', lineno=24, col_offset=52)], lineno=24, col_offset=33)], lineno=24, col_offset=11), [Delete([Subscript(Attribute(Name('sys', Load(), lineno=25, col_offset=16), 'argv', Load(), lineno=25, col_offset=16), Index(Num(1, lineno=25, col_offset=25)), Del(), lineno=25, col_offset=16)], lineno=25, col_offset=12)], [], lineno=24, col_offset=8), Expr(Call(Attribute(Name('AE', Load(), lineno=27, col_offset=8), 'AEInstallEventHandler', Load(), lineno=27, col_offset=8), [Name('kCoreEventClass', Load(), lineno=27, col_offset=33), Name('kAEOpenApplication', Load(), lineno=27, col_offset=50), Attribute(Name('self', Load(), lineno=27, col_offset=70), '__runapp', Load(), lineno=27, col_offset=70)], [], None, None, lineno=27, col_offset=8), lineno=27, col_offset=8), Expr(Call(Attribute(Name('AE', Load(), lineno=28, col_offset=8), 'AEInstallEventHandler', Load(), lineno=28, col_offset=8), [Name('kCoreEventClass', Load(), lineno=28, col_offset=33), Name('kAEOpenDocuments', Load(), lineno=28, col_offset=50), Attribute(Name('self', Load(), lineno=28, col_offset=68), '__openfiles', Load(), lineno=28, col_offset=68)], [], None, None, lineno=28, col_offset=8), lineno=28, col_offset=8)], [], lineno=21, col_offset=4), FunctionDef('close', arguments([Name('self', Param(), lineno=30, col_offset=14)], None, None, []), [Expr(Call(Attribute(Name('AE', Load(), lineno=31, col_offset=8), 'AERemoveEventHandler', Load(), lineno=31, col_offset=8), [Name('kCoreEventClass', Load(), lineno=31, col_offset=32), Name('kAEOpenApplication', Load(), lineno=31, col_offset=49)], [], None, None, lineno=31, col_offset=8), lineno=31, col_offset=8), Expr(Call(Attribute(Name('AE', Load(), lineno=32, col_offset=8), 'AERemoveEventHandler', Load(), lineno=32, col_offset=8), [Name('kCoreEventClass', Load(), lineno=32, col_offset=32), Name('kAEOpenDocuments', Load(), lineno=32, col_offset=49)], [], None, None, lineno=32, col_offset=8), lineno=32, col_offset=8)], [], lineno=30, col_offset=4), FunctionDef('mainloop', arguments([Name('self', Param(), lineno=34, col_offset=17), Name('mask', Param(), lineno=34, col_offset=23), Name('timeout', Param(), lineno=34, col_offset=50)], None, None, [Name('highLevelEventMask', Load(), lineno=34, col_offset=30), BinOp(Num(1, lineno=34, col_offset=60), Mult(), Num(60, lineno=34, col_offset=62), lineno=34, col_offset=60)]), [Assign([Name('stoptime', Store(), lineno=38, col_offset=8)], BinOp(Call(Attribute(Name('Evt', Load(), lineno=38, col_offset=19), 'TickCount', Load(), lineno=38, col_offset=19), [], [], None, None, lineno=38, col_offset=19), Add(), Name('timeout', Load(), lineno=38, col_offset=37), lineno=38, col_offset=19), lineno=38, col_offset=8), While(BoolOp(And(), [UnaryOp(Not(), Attribute(Name('self', Load(), lineno=39, col_offset=18), 'quitting', Load(), lineno=39, col_offset=18), lineno=39, col_offset=14), Compare(Call(Attribute(Name('Evt', Load(), lineno=39, col_offset=36), 'TickCount', Load(), lineno=39, col_offset=36), [], [], None, None, lineno=39, col_offset=36), [Lt()], [Name('stoptime', Load(), lineno=39, col_offset=54)], lineno=39, col_offset=36)], lineno=39, col_offset=14), [Expr(Call(Attribute(Name('self', Load(), lineno=40, col_offset=12), '_dooneevent', Load(), lineno=40, col_offset=12), [Name('mask', Load(), lineno=40, col_offset=29), Name('timeout', Load(), lineno=40, col_offset=35)], [], None, None, lineno=40, col_offset=12), lineno=40, col_offset=12)], [], lineno=39, col_offset=8), If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=42, col_offset=15), 'quitting', Load(), lineno=42, col_offset=15), lineno=42, col_offset=11), [Print(None, [Str('argvemulator: timeout waiting for arguments', lineno=43, col_offset=18)], True, lineno=43, col_offset=12)], [], lineno=42, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=45, col_offset=8), 'close', Load(), lineno=45, col_offset=8), [], [], None, None, lineno=45, col_offset=8), lineno=45, col_offset=8)], [], lineno=34, col_offset=4), FunctionDef('_dooneevent', arguments([Name('self', Param(), lineno=47, col_offset=20), Name('mask', Param(), lineno=47, col_offset=26), Name('timeout', Param(), lineno=47, col_offset=53)], None, None, [Name('highLevelEventMask', Load(), lineno=47, col_offset=33), BinOp(Num(1, lineno=47, col_offset=63), Mult(), Num(60, lineno=47, col_offset=65), lineno=47, col_offset=63)]), [Assign([Tuple([Name('got', Store(), lineno=48, col_offset=8), Name('event', Store(), lineno=48, col_offset=13)], Store(), lineno=48, col_offset=8)], Call(Attribute(Name('Evt', Load(), lineno=48, col_offset=21), 'WaitNextEvent', Load(), lineno=48, col_offset=21), [Name('mask', Load(), lineno=48, col_offset=39), Name('timeout', Load(), lineno=48, col_offset=45)], [], None, None, lineno=48, col_offset=21), lineno=48, col_offset=8), If(Name('got', Load(), lineno=49, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=50, col_offset=12), '_lowlevelhandler', Load(), lineno=50, col_offset=12), [Name('event', Load(), lineno=50, col_offset=34)], [], None, None, lineno=50, col_offset=12), lineno=50, col_offset=12)], [], lineno=49, col_offset=8)], [], lineno=47, col_offset=4), FunctionDef('_lowlevelhandler', arguments([Name('self', Param(), lineno=52, col_offset=25), Name('event', Param(), lineno=52, col_offset=31)], None, None, []), [Assign([Tuple([Name('what', Store(), lineno=53, col_offset=8), Name('message', Store(), lineno=53, col_offset=14), Name('when', Store(), lineno=53, col_offset=23), Name('where', Store(), lineno=53, col_offset=29), Name('modifiers', Store(), lineno=53, col_offset=36)], Store(), lineno=53, col_offset=8)], Name('event', Load(), lineno=53, col_offset=48), lineno=53, col_offset=8), Assign([Tuple([Name('h', Store(), lineno=54, col_offset=8), Name('v', Store(), lineno=54, col_offset=11)], Store(), lineno=54, col_offset=8)], Name('where', Load(), lineno=54, col_offset=15), lineno=54, col_offset=8), If(Compare(Name('what', Load(), lineno=55, col_offset=11), [Eq()], [Name('kHighLevelEvent', Load(), lineno=55, col_offset=19)], lineno=55, col_offset=11), [TryExcept([Expr(Call(Attribute(Name('AE', Load(), lineno=57, col_offset=16), 'AEProcessAppleEvent', Load(), lineno=57, col_offset=16), [Name('event', Load(), lineno=57, col_offset=39)], [], None, None, lineno=57, col_offset=16), lineno=57, col_offset=16)], [ExceptHandler(Attribute(Name('AE', Load(), lineno=58, col_offset=19), 'Error', Load(), lineno=58, col_offset=19), Name('err', Store(), lineno=58, col_offset=29), [Assign([Name('msg', Store(), lineno=59, col_offset=16)], BinOp(Str('High Level Event: %r %r', lineno=59, col_offset=22), Mod(), Tuple([Call(Name('hex', Load(), lineno=59, col_offset=51), [Name('message', Load(), lineno=59, col_offset=55)], [], None, None, lineno=59, col_offset=51), Call(Name('hex', Load(), lineno=59, col_offset=65), [BinOp(Name('h', Load(), lineno=59, col_offset=69), BitOr(), BinOp(Name('v', Load(), lineno=59, col_offset=74), LShift(), Num(16, lineno=59, col_offset=77), lineno=59, col_offset=74), lineno=59, col_offset=69)], [], None, None, lineno=59, col_offset=65)], Load(), lineno=59, col_offset=51), lineno=59, col_offset=22), lineno=59, col_offset=16), Print(None, [Str('AE error: ', lineno=60, col_offset=22), Name('err', Load(), lineno=60, col_offset=36)], True, lineno=60, col_offset=16), Print(None, [Str('in', lineno=61, col_offset=22), Name('msg', Load(), lineno=61, col_offset=28)], True, lineno=61, col_offset=16), Expr(Call(Attribute(Name('traceback', Load(), lineno=62, col_offset=16), 'print_exc', Load(), lineno=62, col_offset=16), [], [], None, None, lineno=62, col_offset=16), lineno=62, col_offset=16)], lineno=58, col_offset=12)], [], lineno=56, col_offset=12), Return(None, lineno=63, col_offset=12)], [Print(None, [Str('Unhandled event:', lineno=65, col_offset=18), Name('event', Load(), lineno=65, col_offset=38)], True, lineno=65, col_offset=12)], lineno=55, col_offset=8)], [], lineno=52, col_offset=4), FunctionDef('_quit', arguments([Name('self', Param(), lineno=68, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=69, col_offset=8), 'quitting', Store(), lineno=69, col_offset=8)], Num(1, lineno=69, col_offset=24), lineno=69, col_offset=8)], [], lineno=68, col_offset=4), FunctionDef('__runapp', arguments([Name('self', Param(), lineno=71, col_offset=17), Name('requestevent', Param(), lineno=71, col_offset=23), Name('replyevent', Param(), lineno=71, col_offset=37)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=72, col_offset=8), '_quit', Load(), lineno=72, col_offset=8), [], [], None, None, lineno=72, col_offset=8), lineno=72, col_offset=8)], [], lineno=71, col_offset=4), FunctionDef('__openfiles', arguments([Name('self', Param(), lineno=74, col_offset=20), Name('requestevent', Param(), lineno=74, col_offset=26), Name('replyevent', Param(), lineno=74, col_offset=40)], None, None, []), [TryExcept([Assign([Name('listdesc', Store(), lineno=76, col_offset=12)], Call(Attribute(Name('requestevent', Load(), lineno=76, col_offset=23), 'AEGetParamDesc', Load(), lineno=76, col_offset=23), [Name('keyDirectObject', Load(), lineno=76, col_offset=51), Name('typeAEList', Load(), lineno=76, col_offset=68)], [], None, None, lineno=76, col_offset=23), lineno=76, col_offset=12), For(Name('i', Store(), lineno=77, col_offset=16), Call(Name('range', Load(), lineno=77, col_offset=21), [Call(Attribute(Name('listdesc', Load(), lineno=77, col_offset=27), 'AECountItems', Load(), lineno=77, col_offset=27), [], [], None, None, lineno=77, col_offset=27)], [], None, None, lineno=77, col_offset=21), [Assign([Name('aliasdesc', Store(), lineno=78, col_offset=16)], Subscript(Call(Attribute(Name('listdesc', Load(), lineno=78, col_offset=28), 'AEGetNthDesc', Load(), lineno=78, col_offset=28), [BinOp(Name('i', Load(), lineno=78, col_offset=50), Add(), Num(1, lineno=78, col_offset=52), lineno=78, col_offset=50), Name('typeAlias', Load(), lineno=78, col_offset=55)], [], None, None, lineno=78, col_offset=28), Index(Num(1, lineno=78, col_offset=66)), Load(), lineno=78, col_offset=28), lineno=78, col_offset=16), Assign([Name('alias', Store(), lineno=79, col_offset=16)], Call(Attribute(Name('File', Load(), lineno=79, col_offset=24), 'Alias', Load(), lineno=79, col_offset=24), [], [keyword('rawdata', Attribute(Name('aliasdesc', Load(), lineno=79, col_offset=43), 'data', Load(), lineno=79, col_offset=43))], None, None, lineno=79, col_offset=24), lineno=79, col_offset=16), Assign([Name('fsref', Store(), lineno=80, col_offset=16)], Subscript(Call(Attribute(Name('alias', Load(), lineno=80, col_offset=24), 'FSResolveAlias', Load(), lineno=80, col_offset=24), [Name('None', Load(), lineno=80, col_offset=45)], [], None, None, lineno=80, col_offset=24), Index(Num(0, lineno=80, col_offset=51)), Load(), lineno=80, col_offset=24), lineno=80, col_offset=16), Assign([Name('pathname', Store(), lineno=81, col_offset=16)], Call(Attribute(Name('fsref', Load(), lineno=81, col_offset=27), 'as_pathname', Load(), lineno=81, col_offset=27), [], [], None, None, lineno=81, col_offset=27), lineno=81, col_offset=16), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=82, col_offset=16), 'argv', Load(), lineno=82, col_offset=16), 'append', Load(), lineno=82, col_offset=16), [Name('pathname', Load(), lineno=82, col_offset=32)], [], None, None, lineno=82, col_offset=16), lineno=82, col_offset=16)], [], lineno=77, col_offset=12)], [ExceptHandler(Name('Exception', Load(), lineno=83, col_offset=16), Name('e', Store(), lineno=83, col_offset=27), [Print(None, [Str("argvemulator.py warning: can't unpack an open document event", lineno=84, col_offset=18)], True, lineno=84, col_offset=12), Import([alias('traceback', None)], lineno=85, col_offset=12), Expr(Call(Attribute(Name('traceback', Load(), lineno=86, col_offset=12), 'print_exc', Load(), lineno=86, col_offset=12), [], [], None, None, lineno=86, col_offset=12), lineno=86, col_offset=12)], lineno=83, col_offset=8)], [], lineno=75, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=88, col_offset=8), '_quit', Load(), lineno=88, col_offset=8), [], [], None, None, lineno=88, col_offset=8), lineno=88, col_offset=8)], [], lineno=74, col_offset=4)], [], lineno=17, col_offset=0), If(Compare(Name('__name__', Load(), lineno=90, col_offset=3), [Eq()], [Str('__main__', lineno=90, col_offset=15)], lineno=90, col_offset=3), [Expr(Call(Attribute(Call(Name('ArgvCollector', Load(), lineno=91, col_offset=4), [], [], None, None, lineno=91, col_offset=4), 'mainloop', Load(), lineno=91, col_offset=4), [], [], None, None, lineno=91, col_offset=4), lineno=91, col_offset=4), Print(None, [Str('sys.argv=', lineno=92, col_offset=10), Attribute(Name('sys', Load(), lineno=92, col_offset=23), 'argv', Load(), lineno=92, col_offset=23)], True, lineno=92, col_offset=4)], [], lineno=90, col_offset=0)])
