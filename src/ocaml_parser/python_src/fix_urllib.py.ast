Module([Expr(Str('Fix changes imports of urllib which are now incompatible.\n   This is rather similar to fix_imports, but because of the more\n   complex nature of the fixing for urllib, it has its own fixer.\n', lineno=4, col_offset=-1), lineno=4, col_offset=-1), ImportFrom('lib2to3.fixes.fix_imports', [alias('alternates', None), alias('FixImports', None)], 0, lineno=8, col_offset=0), ImportFrom('lib2to3', [alias('fixer_base', None)], 0, lineno=9, col_offset=0), ImportFrom('lib2to3.fixer_util', [alias('Name', None), alias('Comma', None), alias('FromImport', None), alias('Newline', None), alias('find_indentation', None), alias('Node', None), alias('syms', None)], 0, lineno=10, col_offset=0), Assign([Name('MAPPING', Store(), lineno=13, col_offset=0)], Dict([Str('urllib', lineno=13, col_offset=11), Str('urllib2', lineno=25, col_offset=11)], [List([Tuple([Str('urllib.request', lineno=14, col_offset=17), List([Str('URLOpener', lineno=15, col_offset=21), Str('FancyURLOpener', lineno=15, col_offset=34), Str('urlretrieve', lineno=15, col_offset=52), Str('_urlopener', lineno=16, col_offset=21), Str('urlopen', lineno=16, col_offset=35), Str('urlcleanup', lineno=16, col_offset=46), Str('pathname2url', lineno=17, col_offset=21), Str('url2pathname', lineno=17, col_offset=37)], Load(), lineno=15, col_offset=20)], Load(), lineno=14, col_offset=17), Tuple([Str('urllib.parse', lineno=18, col_offset=17), List([Str('quote', lineno=19, col_offset=21), Str('quote_plus', lineno=19, col_offset=30), Str('unquote', lineno=19, col_offset=44), Str('unquote_plus', lineno=19, col_offset=55), Str('urlencode', lineno=20, col_offset=21), Str('splitattr', lineno=20, col_offset=34), Str('splithost', lineno=20, col_offset=47), Str('splitnport', lineno=20, col_offset=60), Str('splitpasswd', lineno=21, col_offset=21), Str('splitport', lineno=21, col_offset=36), Str('splitquery', lineno=21, col_offset=49), Str('splittag', lineno=21, col_offset=63), Str('splittype', lineno=22, col_offset=21), Str('splituser', lineno=22, col_offset=34), Str('splitvalue', lineno=22, col_offset=47)], Load(), lineno=19, col_offset=20)], Load(), lineno=18, col_offset=17), Tuple([Str('urllib.error', lineno=23, col_offset=17), List([Str('ContentTooShortError', lineno=24, col_offset=21)], Load(), lineno=24, col_offset=20)], Load(), lineno=23, col_offset=17)], Load(), lineno=13, col_offset=22), List([Tuple([Str('urllib.request', lineno=26, col_offset=17), List([Str('urlopen', lineno=27, col_offset=21), Str('install_opener', lineno=27, col_offset=32), Str('build_opener', lineno=27, col_offset=50), Str('Request', lineno=28, col_offset=21), Str('OpenerDirector', lineno=28, col_offset=32), Str('BaseHandler', lineno=28, col_offset=50), Str('HTTPDefaultErrorHandler', lineno=29, col_offset=21), Str('HTTPRedirectHandler', lineno=29, col_offset=48), Str('HTTPCookieProcessor', lineno=30, col_offset=21), Str('ProxyHandler', lineno=30, col_offset=44), Str('HTTPPasswordMgr', lineno=31, col_offset=21), Str('HTTPPasswordMgrWithDefaultRealm', lineno=32, col_offset=21), Str('AbstractBasicAuthHandler', lineno=33, col_offset=21), Str('HTTPBasicAuthHandler', lineno=34, col_offset=21), Str('ProxyBasicAuthHandler', lineno=34, col_offset=45), Str('AbstractDigestAuthHandler', lineno=35, col_offset=21), Str('HTTPDigestAuthHandler', lineno=36, col_offset=21), Str('ProxyDigestAuthHandler', lineno=36, col_offset=46), Str('HTTPHandler', lineno=37, col_offset=21), Str('HTTPSHandler', lineno=37, col_offset=36), Str('FileHandler', lineno=37, col_offset=52), Str('FTPHandler', lineno=38, col_offset=21), Str('CacheFTPHandler', lineno=38, col_offset=35), Str('UnknownHandler', lineno=39, col_offset=21)], Load(), lineno=27, col_offset=20)], Load(), lineno=26, col_offset=17), Tuple([Str('urllib.error', lineno=40, col_offset=17), List([Str('URLError', lineno=41, col_offset=21), Str('HTTPError', lineno=41, col_offset=33)], Load(), lineno=41, col_offset=20)], Load(), lineno=40, col_offset=17)], Load(), lineno=25, col_offset=23)], lineno=13, col_offset=10), lineno=13, col_offset=0), Expr(Call(Attribute(Subscript(Name('MAPPING', Load(), lineno=46, col_offset=0), Index(Str('urllib2', lineno=46, col_offset=8)), Load(), lineno=46, col_offset=0), 'append', Load(), lineno=46, col_offset=0), [Subscript(Subscript(Name('MAPPING', Load(), lineno=46, col_offset=26), Index(Str('urllib', lineno=46, col_offset=34)), Load(), lineno=46, col_offset=26), Index(Num(1, lineno=46, col_offset=44)), Load(), lineno=46, col_offset=26)], [], None, None, lineno=46, col_offset=0), lineno=46, col_offset=0), FunctionDef('build_pattern', arguments([], None, None, []), [Assign([Name('bare', Store(), lineno=50, col_offset=4)], Call(Name('set', Load(), lineno=50, col_offset=11), [], [], None, None, lineno=50, col_offset=11), lineno=50, col_offset=4), For(Tuple([Name('old_module', Store(), lineno=51, col_offset=8), Name('changes', Store(), lineno=51, col_offset=20)], Store(), lineno=51, col_offset=8), Call(Attribute(Name('MAPPING', Load(), lineno=51, col_offset=31), 'items', Load(), lineno=51, col_offset=31), [], [], None, None, lineno=51, col_offset=31), [For(Name('change', Store(), lineno=52, col_offset=12), Name('changes', Load(), lineno=52, col_offset=22), [Assign([Tuple([Name('new_module', Store(), lineno=53, col_offset=12), Name('members', Store(), lineno=53, col_offset=24)], Store(), lineno=53, col_offset=12)], Name('change', Load(), lineno=53, col_offset=34), lineno=53, col_offset=12), Assign([Name('members', Store(), lineno=54, col_offset=12)], Call(Name('alternates', Load(), lineno=54, col_offset=22), [Name('members', Load(), lineno=54, col_offset=33)], [], None, None, lineno=54, col_offset=22), lineno=54, col_offset=12), Expr(Yield(BinOp(Str("import_name< 'import' (module=%r\n                                  | dotted_as_names< any* module=%r any* >) >\n                  ", lineno=57, col_offset=-1), Mod(), Tuple([Name('old_module', Load(), lineno=57, col_offset=25), Name('old_module', Load(), lineno=57, col_offset=37)], Load(), lineno=57, col_offset=25), lineno=57, col_offset=-1), lineno=55, col_offset=12), lineno=55, col_offset=12), Expr(Yield(BinOp(Str("import_from< 'from' mod_member=%r 'import'\n                       ( member=%s | import_as_name< member=%s 'as' any > |\n                         import_as_names< members=any*  >) >\n                  ", lineno=61, col_offset=-1), Mod(), Tuple([Name('old_module', Load(), lineno=61, col_offset=25), Name('members', Load(), lineno=61, col_offset=37), Name('members', Load(), lineno=61, col_offset=46)], Load(), lineno=61, col_offset=25), lineno=61, col_offset=-1), lineno=58, col_offset=12), lineno=58, col_offset=12), Expr(Yield(BinOp(Str("import_from< 'from' module_star=%r 'import' star='*' >\n                  ", lineno=63, col_offset=-1), Mod(), Name('old_module', Load(), lineno=63, col_offset=24), lineno=63, col_offset=-1), lineno=62, col_offset=12), lineno=62, col_offset=12), Expr(Yield(BinOp(Str("import_name< 'import'\n                                  dotted_as_name< module_as=%r 'as' any > >\n                  ", lineno=66, col_offset=-1), Mod(), Name('old_module', Load(), lineno=66, col_offset=24), lineno=66, col_offset=-1), lineno=64, col_offset=12), lineno=64, col_offset=12), Expr(Yield(BinOp(Str("power< bare_with_attr=%r trailer< '.' member=%s > any* >\n                  ", lineno=69, col_offset=-1), Mod(), Tuple([Name('old_module', Load(), lineno=69, col_offset=25), Name('members', Load(), lineno=69, col_offset=37)], Load(), lineno=69, col_offset=25), lineno=69, col_offset=-1), lineno=68, col_offset=12), lineno=68, col_offset=12)], [], lineno=52, col_offset=8)], [], lineno=51, col_offset=4)], [], lineno=49, col_offset=0), ClassDef('FixUrllib', [Name('FixImports', Load(), lineno=72, col_offset=16)], [FunctionDef('build_pattern', arguments([Name('self', Param(), lineno=74, col_offset=22)], None, None, []), [Return(Call(Attribute(Str('|', lineno=75, col_offset=15), 'join', Load(), lineno=75, col_offset=15), [Call(Name('build_pattern', Load(), lineno=75, col_offset=24), [], [], None, None, lineno=75, col_offset=24)], [], None, None, lineno=75, col_offset=15), lineno=75, col_offset=8)], [], lineno=74, col_offset=4), FunctionDef('transform_import', arguments([Name('self', Param(), lineno=77, col_offset=25), Name('node', Param(), lineno=77, col_offset=31), Name('results', Param(), lineno=77, col_offset=37)], None, None, []), [Expr(Str('Transform for the basic import case. Replaces the old\n           import name with a comma separated list of its\n           replacements.\n        ', lineno=81, col_offset=-1), lineno=81, col_offset=-1), Assign([Name('import_mod', Store(), lineno=82, col_offset=8)], Call(Attribute(Name('results', Load(), lineno=82, col_offset=21), 'get', Load(), lineno=82, col_offset=21), [Str('module', lineno=82, col_offset=33)], [], None, None, lineno=82, col_offset=21), lineno=82, col_offset=8), Assign([Name('pref', Store(), lineno=83, col_offset=8)], Attribute(Name('import_mod', Load(), lineno=83, col_offset=15), 'prefix', Load(), lineno=83, col_offset=15), lineno=83, col_offset=8), Assign([Name('names', Store(), lineno=85, col_offset=8)], List([], Load(), lineno=85, col_offset=16), lineno=85, col_offset=8), For(Name('name', Store(), lineno=88, col_offset=12), Subscript(Subscript(Name('MAPPING', Load(), lineno=88, col_offset=20), Index(Attribute(Name('import_mod', Load(), lineno=88, col_offset=28), 'value', Load(), lineno=88, col_offset=28)), Load(), lineno=88, col_offset=20), Slice(None, Num(-1, lineno=88, col_offset=48), None), Load(), lineno=88, col_offset=20), [Expr(Call(Attribute(Name('names', Load(), lineno=89, col_offset=12), 'extend', Load(), lineno=89, col_offset=12), [List([Call(Name('Name', Load(), lineno=89, col_offset=26), [Subscript(Name('name', Load(), lineno=89, col_offset=31), Index(Num(0, lineno=89, col_offset=36)), Load(), lineno=89, col_offset=31)], [keyword('prefix', Name('pref', Load(), lineno=89, col_offset=47))], None, None, lineno=89, col_offset=26), Call(Name('Comma', Load(), lineno=89, col_offset=54), [], [], None, None, lineno=89, col_offset=54)], Load(), lineno=89, col_offset=25)], [], None, None, lineno=89, col_offset=12), lineno=89, col_offset=12)], [], lineno=88, col_offset=8), Expr(Call(Attribute(Name('names', Load(), lineno=90, col_offset=8), 'append', Load(), lineno=90, col_offset=8), [Call(Name('Name', Load(), lineno=90, col_offset=21), [Subscript(Subscript(Subscript(Name('MAPPING', Load(), lineno=90, col_offset=26), Index(Attribute(Name('import_mod', Load(), lineno=90, col_offset=34), 'value', Load(), lineno=90, col_offset=34)), Load(), lineno=90, col_offset=26), Index(Num(-1, lineno=90, col_offset=53)), Load(), lineno=90, col_offset=26), Index(Num(0, lineno=90, col_offset=56)), Load(), lineno=90, col_offset=26)], [keyword('prefix', Name('pref', Load(), lineno=90, col_offset=67))], None, None, lineno=90, col_offset=21)], [], None, None, lineno=90, col_offset=8), lineno=90, col_offset=8), Expr(Call(Attribute(Name('import_mod', Load(), lineno=91, col_offset=8), 'replace', Load(), lineno=91, col_offset=8), [Name('names', Load(), lineno=91, col_offset=27)], [], None, None, lineno=91, col_offset=8), lineno=91, col_offset=8)], [], lineno=77, col_offset=4), FunctionDef('transform_member', arguments([Name('self', Param(), lineno=93, col_offset=25), Name('node', Param(), lineno=93, col_offset=31), Name('results', Param(), lineno=93, col_offset=37)], None, None, []), [Expr(Str('Transform for imports of specific module elements. Replaces\n           the module to be imported from with the appropriate new\n           module.\n        ', lineno=97, col_offset=-1), lineno=97, col_offset=-1), Assign([Name('mod_member', Store(), lineno=98, col_offset=8)], Call(Attribute(Name('results', Load(), lineno=98, col_offset=21), 'get', Load(), lineno=98, col_offset=21), [Str('mod_member', lineno=98, col_offset=33)], [], None, None, lineno=98, col_offset=21), lineno=98, col_offset=8), Assign([Name('pref', Store(), lineno=99, col_offset=8)], Attribute(Name('mod_member', Load(), lineno=99, col_offset=15), 'prefix', Load(), lineno=99, col_offset=15), lineno=99, col_offset=8), Assign([Name('member', Store(), lineno=100, col_offset=8)], Call(Attribute(Name('results', Load(), lineno=100, col_offset=17), 'get', Load(), lineno=100, col_offset=17), [Str('member', lineno=100, col_offset=29)], [], None, None, lineno=100, col_offset=17), lineno=100, col_offset=8), If(Name('member', Load(), lineno=103, col_offset=11), [If(Call(Name('isinstance', Load(), lineno=105, col_offset=15), [Name('member', Load(), lineno=105, col_offset=26), Name('list', Load(), lineno=105, col_offset=34)], [], None, None, lineno=105, col_offset=15), [Assign([Name('member', Store(), lineno=106, col_offset=16)], Subscript(Name('member', Load(), lineno=106, col_offset=25), Index(Num(0, lineno=106, col_offset=32)), Load(), lineno=106, col_offset=25), lineno=106, col_offset=16)], [], lineno=105, col_offset=12), Assign([Name('new_name', Store(), lineno=107, col_offset=12)], Name('None', Load(), lineno=107, col_offset=23), lineno=107, col_offset=12), For(Name('change', Store(), lineno=108, col_offset=16), Subscript(Name('MAPPING', Load(), lineno=108, col_offset=26), Index(Attribute(Name('mod_member', Load(), lineno=108, col_offset=34), 'value', Load(), lineno=108, col_offset=34)), Load(), lineno=108, col_offset=26), [If(Compare(Attribute(Name('member', Load(), lineno=109, col_offset=19), 'value', Load(), lineno=109, col_offset=19), [In()], [Subscript(Name('change', Load(), lineno=109, col_offset=35), Index(Num(1, lineno=109, col_offset=42)), Load(), lineno=109, col_offset=35)], lineno=109, col_offset=19), [Assign([Name('new_name', Store(), lineno=110, col_offset=20)], Subscript(Name('change', Load(), lineno=110, col_offset=31), Index(Num(0, lineno=110, col_offset=38)), Load(), lineno=110, col_offset=31), lineno=110, col_offset=20), Break( lineno=111, col_offset=20)], [], lineno=109, col_offset=16)], [], lineno=108, col_offset=12), If(Name('new_name', Load(), lineno=112, col_offset=15), [Expr(Call(Attribute(Name('mod_member', Load(), lineno=113, col_offset=16), 'replace', Load(), lineno=113, col_offset=16), [Call(Name('Name', Load(), lineno=113, col_offset=35), [Name('new_name', Load(), lineno=113, col_offset=40)], [keyword('prefix', Name('pref', Load(), lineno=113, col_offset=57))], None, None, lineno=113, col_offset=35)], [], None, None, lineno=113, col_offset=16), lineno=113, col_offset=16)], [Expr(Call(Attribute(Name('self', Load(), lineno=115, col_offset=16), 'cannot_convert', Load(), lineno=115, col_offset=16), [Name('node', Load(), lineno=115, col_offset=36), Str('This is an invalid module element', lineno=115, col_offset=42)], [], None, None, lineno=115, col_offset=16), lineno=115, col_offset=16)], lineno=112, col_offset=12)], [Assign([Name('modules', Store(), lineno=120, col_offset=12)], List([], Load(), lineno=120, col_offset=22), lineno=120, col_offset=12), Assign([Name('mod_dict', Store(), lineno=121, col_offset=12)], Dict([], [], lineno=121, col_offset=23), lineno=121, col_offset=12), Assign([Name('members', Store(), lineno=122, col_offset=12)], Subscript(Name('results', Load(), lineno=122, col_offset=22), Index(Str('members', lineno=122, col_offset=30)), Load(), lineno=122, col_offset=22), lineno=122, col_offset=12), For(Name('member', Store(), lineno=123, col_offset=16), Name('members', Load(), lineno=123, col_offset=26), [If(Compare(Attribute(Name('member', Load(), lineno=125, col_offset=19), 'type', Load(), lineno=125, col_offset=19), [Eq()], [Attribute(Name('syms', Load(), lineno=125, col_offset=34), 'import_as_name', Load(), lineno=125, col_offset=34)], lineno=125, col_offset=19), [Assign([Name('as_name', Store(), lineno=126, col_offset=20)], Attribute(Subscript(Attribute(Name('member', Load(), lineno=126, col_offset=30), 'children', Load(), lineno=126, col_offset=30), Index(Num(2, lineno=126, col_offset=46)), Load(), lineno=126, col_offset=30), 'value', Load(), lineno=126, col_offset=30), lineno=126, col_offset=20), Assign([Name('member_name', Store(), lineno=127, col_offset=20)], Attribute(Subscript(Attribute(Name('member', Load(), lineno=127, col_offset=34), 'children', Load(), lineno=127, col_offset=34), Index(Num(0, lineno=127, col_offset=50)), Load(), lineno=127, col_offset=34), 'value', Load(), lineno=127, col_offset=34), lineno=127, col_offset=20)], [Assign([Name('member_name', Store(), lineno=129, col_offset=20)], Attribute(Name('member', Load(), lineno=129, col_offset=34), 'value', Load(), lineno=129, col_offset=34), lineno=129, col_offset=20), Assign([Name('as_name', Store(), lineno=130, col_offset=20)], Name('None', Load(), lineno=130, col_offset=30), lineno=130, col_offset=20)], lineno=125, col_offset=16), If(Compare(Name('member_name', Load(), lineno=131, col_offset=19), [NotEq()], [Str(u',', lineno=131, col_offset=34)], lineno=131, col_offset=19), [For(Name('change', Store(), lineno=132, col_offset=24), Subscript(Name('MAPPING', Load(), lineno=132, col_offset=34), Index(Attribute(Name('mod_member', Load(), lineno=132, col_offset=42), 'value', Load(), lineno=132, col_offset=42)), Load(), lineno=132, col_offset=34), [If(Compare(Name('member_name', Load(), lineno=133, col_offset=27), [In()], [Subscript(Name('change', Load(), lineno=133, col_offset=42), Index(Num(1, lineno=133, col_offset=49)), Load(), lineno=133, col_offset=42)], lineno=133, col_offset=27), [If(Compare(Subscript(Name('change', Load(), lineno=134, col_offset=31), Index(Num(0, lineno=134, col_offset=38)), Load(), lineno=134, col_offset=31), [NotIn()], [Name('mod_dict', Load(), lineno=134, col_offset=48)], lineno=134, col_offset=31), [Expr(Call(Attribute(Name('modules', Load(), lineno=135, col_offset=32), 'append', Load(), lineno=135, col_offset=32), [Subscript(Name('change', Load(), lineno=135, col_offset=47), Index(Num(0, lineno=135, col_offset=54)), Load(), lineno=135, col_offset=47)], [], None, None, lineno=135, col_offset=32), lineno=135, col_offset=32)], [], lineno=134, col_offset=28), Expr(Call(Attribute(Call(Attribute(Name('mod_dict', Load(), lineno=136, col_offset=28), 'setdefault', Load(), lineno=136, col_offset=28), [Subscript(Name('change', Load(), lineno=136, col_offset=48), Index(Num(0, lineno=136, col_offset=55)), Load(), lineno=136, col_offset=48), List([], Load(), lineno=136, col_offset=59)], [], None, None, lineno=136, col_offset=28), 'append', Load(), lineno=136, col_offset=28), [Name('member', Load(), lineno=136, col_offset=70)], [], None, None, lineno=136, col_offset=28), lineno=136, col_offset=28)], [], lineno=133, col_offset=24)], [], lineno=132, col_offset=20)], [], lineno=131, col_offset=16)], [], lineno=123, col_offset=12), Assign([Name('new_nodes', Store(), lineno=138, col_offset=12)], List([], Load(), lineno=138, col_offset=24), lineno=138, col_offset=12), Assign([Name('indentation', Store(), lineno=139, col_offset=12)], Call(Name('find_indentation', Load(), lineno=139, col_offset=26), [Name('node', Load(), lineno=139, col_offset=43)], [], None, None, lineno=139, col_offset=26), lineno=139, col_offset=12), Assign([Name('first', Store(), lineno=140, col_offset=12)], Name('True', Load(), lineno=140, col_offset=20), lineno=140, col_offset=12), FunctionDef('handle_name', arguments([Name('name', Param(), lineno=141, col_offset=28), Name('prefix', Param(), lineno=141, col_offset=34)], None, None, []), [If(Compare(Attribute(Name('name', Load(), lineno=142, col_offset=19), 'type', Load(), lineno=142, col_offset=19), [Eq()], [Attribute(Name('syms', Load(), lineno=142, col_offset=32), 'import_as_name', Load(), lineno=142, col_offset=32)], lineno=142, col_offset=19), [Assign([Name('kids', Store(), lineno=143, col_offset=20)], List([Call(Name('Name', Load(), lineno=143, col_offset=28), [Attribute(Subscript(Attribute(Name('name', Load(), lineno=143, col_offset=33), 'children', Load(), lineno=143, col_offset=33), Index(Num(0, lineno=143, col_offset=47)), Load(), lineno=143, col_offset=33), 'value', Load(), lineno=143, col_offset=33)], [keyword('prefix', Name('prefix', Load(), lineno=143, col_offset=64))], None, None, lineno=143, col_offset=28), Call(Attribute(Subscript(Attribute(Name('name', Load(), lineno=144, col_offset=28), 'children', Load(), lineno=144, col_offset=28), Index(Num(1, lineno=144, col_offset=42)), Load(), lineno=144, col_offset=28), 'clone', Load(), lineno=144, col_offset=28), [], [], None, None, lineno=144, col_offset=28), Call(Attribute(Subscript(Attribute(Name('name', Load(), lineno=145, col_offset=28), 'children', Load(), lineno=145, col_offset=28), Index(Num(2, lineno=145, col_offset=42)), Load(), lineno=145, col_offset=28), 'clone', Load(), lineno=145, col_offset=28), [], [], None, None, lineno=145, col_offset=28)], Load(), lineno=143, col_offset=27), lineno=143, col_offset=20), Return(List([Call(Name('Node', Load(), lineno=146, col_offset=28), [Attribute(Name('syms', Load(), lineno=146, col_offset=33), 'import_as_name', Load(), lineno=146, col_offset=33), Name('kids', Load(), lineno=146, col_offset=54)], [], None, None, lineno=146, col_offset=28)], Load(), lineno=146, col_offset=27), lineno=146, col_offset=20)], [], lineno=142, col_offset=16), Return(List([Call(Name('Name', Load(), lineno=147, col_offset=24), [Attribute(Name('name', Load(), lineno=147, col_offset=29), 'value', Load(), lineno=147, col_offset=29)], [keyword('prefix', Name('prefix', Load(), lineno=147, col_offset=48))], None, None, lineno=147, col_offset=24)], Load(), lineno=147, col_offset=23), lineno=147, col_offset=16)], [], lineno=141, col_offset=12), For(Name('module', Store(), lineno=148, col_offset=16), Name('modules', Load(), lineno=148, col_offset=26), [Assign([Name('elts', Store(), lineno=149, col_offset=16)], Subscript(Name('mod_dict', Load(), lineno=149, col_offset=23), Index(Name('module', Load(), lineno=149, col_offset=32)), Load(), lineno=149, col_offset=23), lineno=149, col_offset=16), Assign([Name('names', Store(), lineno=150, col_offset=16)], List([], Load(), lineno=150, col_offset=24), lineno=150, col_offset=16), For(Name('elt', Store(), lineno=151, col_offset=20), Subscript(Name('elts', Load(), lineno=151, col_offset=27), Slice(None, Num(-1, lineno=151, col_offset=34), None), Load(), lineno=151, col_offset=27), [Expr(Call(Attribute(Name('names', Load(), lineno=152, col_offset=20), 'extend', Load(), lineno=152, col_offset=20), [Call(Name('handle_name', Load(), lineno=152, col_offset=33), [Name('elt', Load(), lineno=152, col_offset=45), Name('pref', Load(), lineno=152, col_offset=50)], [], None, None, lineno=152, col_offset=33)], [], None, None, lineno=152, col_offset=20), lineno=152, col_offset=20), Expr(Call(Attribute(Name('names', Load(), lineno=153, col_offset=20), 'append', Load(), lineno=153, col_offset=20), [Call(Name('Comma', Load(), lineno=153, col_offset=33), [], [], None, None, lineno=153, col_offset=33)], [], None, None, lineno=153, col_offset=20), lineno=153, col_offset=20)], [], lineno=151, col_offset=16), Expr(Call(Attribute(Name('names', Load(), lineno=154, col_offset=16), 'extend', Load(), lineno=154, col_offset=16), [Call(Name('handle_name', Load(), lineno=154, col_offset=29), [Subscript(Name('elts', Load(), lineno=154, col_offset=41), Index(Num(-1, lineno=154, col_offset=47)), Load(), lineno=154, col_offset=41), Name('pref', Load(), lineno=154, col_offset=51)], [], None, None, lineno=154, col_offset=29)], [], None, None, lineno=154, col_offset=16), lineno=154, col_offset=16), Assign([Name('new', Store(), lineno=155, col_offset=16)], Call(Name('FromImport', Load(), lineno=155, col_offset=22), [Name('module', Load(), lineno=155, col_offset=33), Name('names', Load(), lineno=155, col_offset=41)], [], None, None, lineno=155, col_offset=22), lineno=155, col_offset=16), If(BoolOp(Or(), [UnaryOp(Not(), Name('first', Load(), lineno=156, col_offset=23), lineno=156, col_offset=19), Call(Attribute(Attribute(Attribute(Name('node', Load(), lineno=156, col_offset=32), 'parent', Load(), lineno=156, col_offset=32), 'prefix', Load(), lineno=156, col_offset=32), 'endswith', Load(), lineno=156, col_offset=32), [Name('indentation', Load(), lineno=156, col_offset=60)], [], None, None, lineno=156, col_offset=32)], lineno=156, col_offset=19), [Assign([Attribute(Name('new', Load(), lineno=157, col_offset=20), 'prefix', Store(), lineno=157, col_offset=20)], Name('indentation', Load(), lineno=157, col_offset=33), lineno=157, col_offset=20)], [], lineno=156, col_offset=16), Expr(Call(Attribute(Name('new_nodes', Load(), lineno=158, col_offset=16), 'append', Load(), lineno=158, col_offset=16), [Name('new', Load(), lineno=158, col_offset=33)], [], None, None, lineno=158, col_offset=16), lineno=158, col_offset=16), Assign([Name('first', Store(), lineno=159, col_offset=16)], Name('False', Load(), lineno=159, col_offset=24), lineno=159, col_offset=16)], [], lineno=148, col_offset=12), If(Name('new_nodes', Load(), lineno=160, col_offset=15), [Assign([Name('nodes', Store(), lineno=161, col_offset=16)], List([], Load(), lineno=161, col_offset=24), lineno=161, col_offset=16), For(Name('new_node', Store(), lineno=162, col_offset=20), Subscript(Name('new_nodes', Load(), lineno=162, col_offset=32), Slice(None, Num(-1, lineno=162, col_offset=44), None), Load(), lineno=162, col_offset=32), [Expr(Call(Attribute(Name('nodes', Load(), lineno=163, col_offset=20), 'extend', Load(), lineno=163, col_offset=20), [List([Name('new_node', Load(), lineno=163, col_offset=34), Call(Name('Newline', Load(), lineno=163, col_offset=44), [], [], None, None, lineno=163, col_offset=44)], Load(), lineno=163, col_offset=33)], [], None, None, lineno=163, col_offset=20), lineno=163, col_offset=20)], [], lineno=162, col_offset=16), Expr(Call(Attribute(Name('nodes', Load(), lineno=164, col_offset=16), 'append', Load(), lineno=164, col_offset=16), [Subscript(Name('new_nodes', Load(), lineno=164, col_offset=29), Index(Num(-1, lineno=164, col_offset=40)), Load(), lineno=164, col_offset=29)], [], None, None, lineno=164, col_offset=16), lineno=164, col_offset=16), Expr(Call(Attribute(Name('node', Load(), lineno=165, col_offset=16), 'replace', Load(), lineno=165, col_offset=16), [Name('nodes', Load(), lineno=165, col_offset=29)], [], None, None, lineno=165, col_offset=16), lineno=165, col_offset=16)], [Expr(Call(Attribute(Name('self', Load(), lineno=167, col_offset=16), 'cannot_convert', Load(), lineno=167, col_offset=16), [Name('node', Load(), lineno=167, col_offset=36), Str('All module elements are invalid', lineno=167, col_offset=42)], [], None, None, lineno=167, col_offset=16), lineno=167, col_offset=16)], lineno=160, col_offset=12)], lineno=103, col_offset=8)], [], lineno=93, col_offset=4), FunctionDef('transform_dot', arguments([Name('self', Param(), lineno=169, col_offset=22), Name('node', Param(), lineno=169, col_offset=28), Name('results', Param(), lineno=169, col_offset=34)], None, None, []), [Expr(Str('Transform for calls to module members in code.', lineno=170, col_offset=8), lineno=170, col_offset=8), Assign([Name('module_dot', Store(), lineno=171, col_offset=8)], Call(Attribute(Name('results', Load(), lineno=171, col_offset=21), 'get', Load(), lineno=171, col_offset=21), [Str('bare_with_attr', lineno=171, col_offset=33)], [], None, None, lineno=171, col_offset=21), lineno=171, col_offset=8), Assign([Name('member', Store(), lineno=172, col_offset=8)], Call(Attribute(Name('results', Load(), lineno=172, col_offset=17), 'get', Load(), lineno=172, col_offset=17), [Str('member', lineno=172, col_offset=29)], [], None, None, lineno=172, col_offset=17), lineno=172, col_offset=8), Assign([Name('new_name', Store(), lineno=173, col_offset=8)], Name('None', Load(), lineno=173, col_offset=19), lineno=173, col_offset=8), If(Call(Name('isinstance', Load(), lineno=174, col_offset=11), [Name('member', Load(), lineno=174, col_offset=22), Name('list', Load(), lineno=174, col_offset=30)], [], None, None, lineno=174, col_offset=11), [Assign([Name('member', Store(), lineno=175, col_offset=12)], Subscript(Name('member', Load(), lineno=175, col_offset=21), Index(Num(0, lineno=175, col_offset=28)), Load(), lineno=175, col_offset=21), lineno=175, col_offset=12)], [], lineno=174, col_offset=8), For(Name('change', Store(), lineno=176, col_offset=12), Subscript(Name('MAPPING', Load(), lineno=176, col_offset=22), Index(Attribute(Name('module_dot', Load(), lineno=176, col_offset=30), 'value', Load(), lineno=176, col_offset=30)), Load(), lineno=176, col_offset=22), [If(Compare(Attribute(Name('member', Load(), lineno=177, col_offset=15), 'value', Load(), lineno=177, col_offset=15), [In()], [Subscript(Name('change', Load(), lineno=177, col_offset=31), Index(Num(1, lineno=177, col_offset=38)), Load(), lineno=177, col_offset=31)], lineno=177, col_offset=15), [Assign([Name('new_name', Store(), lineno=178, col_offset=16)], Subscript(Name('change', Load(), lineno=178, col_offset=27), Index(Num(0, lineno=178, col_offset=34)), Load(), lineno=178, col_offset=27), lineno=178, col_offset=16), Break( lineno=179, col_offset=16)], [], lineno=177, col_offset=12)], [], lineno=176, col_offset=8), If(Name('new_name', Load(), lineno=180, col_offset=11), [Expr(Call(Attribute(Name('module_dot', Load(), lineno=181, col_offset=12), 'replace', Load(), lineno=181, col_offset=12), [Call(Name('Name', Load(), lineno=181, col_offset=31), [Name('new_name', Load(), lineno=181, col_offset=36)], [keyword('prefix', Attribute(Name('module_dot', Load(), lineno=182, col_offset=43), 'prefix', Load(), lineno=182, col_offset=43))], None, None, lineno=181, col_offset=31)], [], None, None, lineno=181, col_offset=12), lineno=181, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=184, col_offset=12), 'cannot_convert', Load(), lineno=184, col_offset=12), [Name('node', Load(), lineno=184, col_offset=32), Str('This is an invalid module element', lineno=184, col_offset=38)], [], None, None, lineno=184, col_offset=12), lineno=184, col_offset=12)], lineno=180, col_offset=8)], [], lineno=169, col_offset=4), FunctionDef('transform', arguments([Name('self', Param(), lineno=186, col_offset=18), Name('node', Param(), lineno=186, col_offset=24), Name('results', Param(), lineno=186, col_offset=30)], None, None, []), [If(Call(Attribute(Name('results', Load(), lineno=187, col_offset=11), 'get', Load(), lineno=187, col_offset=11), [Str('module', lineno=187, col_offset=23)], [], None, None, lineno=187, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=188, col_offset=12), 'transform_import', Load(), lineno=188, col_offset=12), [Name('node', Load(), lineno=188, col_offset=34), Name('results', Load(), lineno=188, col_offset=40)], [], None, None, lineno=188, col_offset=12), lineno=188, col_offset=12)], [If(Call(Attribute(Name('results', Load(), lineno=189, col_offset=13), 'get', Load(), lineno=189, col_offset=13), [Str('mod_member', lineno=189, col_offset=25)], [], None, None, lineno=189, col_offset=13), [Expr(Call(Attribute(Name('self', Load(), lineno=190, col_offset=12), 'transform_member', Load(), lineno=190, col_offset=12), [Name('node', Load(), lineno=190, col_offset=34), Name('results', Load(), lineno=190, col_offset=40)], [], None, None, lineno=190, col_offset=12), lineno=190, col_offset=12)], [If(Call(Attribute(Name('results', Load(), lineno=191, col_offset=13), 'get', Load(), lineno=191, col_offset=13), [Str('bare_with_attr', lineno=191, col_offset=25)], [], None, None, lineno=191, col_offset=13), [Expr(Call(Attribute(Name('self', Load(), lineno=192, col_offset=12), 'transform_dot', Load(), lineno=192, col_offset=12), [Name('node', Load(), lineno=192, col_offset=31), Name('results', Load(), lineno=192, col_offset=37)], [], None, None, lineno=192, col_offset=12), lineno=192, col_offset=12)], [If(Call(Attribute(Name('results', Load(), lineno=194, col_offset=13), 'get', Load(), lineno=194, col_offset=13), [Str('module_star', lineno=194, col_offset=25)], [], None, None, lineno=194, col_offset=13), [Expr(Call(Attribute(Name('self', Load(), lineno=195, col_offset=12), 'cannot_convert', Load(), lineno=195, col_offset=12), [Name('node', Load(), lineno=195, col_offset=32), Str('Cannot handle star imports.', lineno=195, col_offset=38)], [], None, None, lineno=195, col_offset=12), lineno=195, col_offset=12)], [If(Call(Attribute(Name('results', Load(), lineno=196, col_offset=13), 'get', Load(), lineno=196, col_offset=13), [Str('module_as', lineno=196, col_offset=25)], [], None, None, lineno=196, col_offset=13), [Expr(Call(Attribute(Name('self', Load(), lineno=197, col_offset=12), 'cannot_convert', Load(), lineno=197, col_offset=12), [Name('node', Load(), lineno=197, col_offset=32), Str('This module is now multiple modules', lineno=197, col_offset=38)], [], None, None, lineno=197, col_offset=12), lineno=197, col_offset=12)], [], lineno=196, col_offset=13)], lineno=194, col_offset=13)], lineno=191, col_offset=13)], lineno=189, col_offset=13)], lineno=187, col_offset=8)], [], lineno=186, col_offset=4)], [], lineno=72, col_offset=0)])
