Module([Expr(Str('Something just to look at via pydoc.', lineno=1, col_offset=0), lineno=1, col_offset=0), Import([alias('types', None)], lineno=3, col_offset=0), ClassDef('A_classic', [], [Expr(Str('A classic class.', lineno=6, col_offset=4), lineno=6, col_offset=4), FunctionDef('A_method', arguments([Name('self', Param(), lineno=7, col_offset=17)], None, None, []), [Expr(Str('Method defined in A.', lineno=8, col_offset=8), lineno=8, col_offset=8)], [], lineno=7, col_offset=4), FunctionDef('AB_method', arguments([Name('self', Param(), lineno=9, col_offset=18)], None, None, []), [Expr(Str('Method defined in A and B.', lineno=10, col_offset=8), lineno=10, col_offset=8)], [], lineno=9, col_offset=4), FunctionDef('AC_method', arguments([Name('self', Param(), lineno=11, col_offset=18)], None, None, []), [Expr(Str('Method defined in A and C.', lineno=12, col_offset=8), lineno=12, col_offset=8)], [], lineno=11, col_offset=4), FunctionDef('AD_method', arguments([Name('self', Param(), lineno=13, col_offset=18)], None, None, []), [Expr(Str('Method defined in A and D.', lineno=14, col_offset=8), lineno=14, col_offset=8)], [], lineno=13, col_offset=4), FunctionDef('ABC_method', arguments([Name('self', Param(), lineno=15, col_offset=19)], None, None, []), [Expr(Str('Method defined in A, B and C.', lineno=16, col_offset=8), lineno=16, col_offset=8)], [], lineno=15, col_offset=4), FunctionDef('ABD_method', arguments([Name('self', Param(), lineno=17, col_offset=19)], None, None, []), [Expr(Str('Method defined in A, B and D.', lineno=18, col_offset=8), lineno=18, col_offset=8)], [], lineno=17, col_offset=4), FunctionDef('ACD_method', arguments([Name('self', Param(), lineno=19, col_offset=19)], None, None, []), [Expr(Str('Method defined in A, C and D.', lineno=20, col_offset=8), lineno=20, col_offset=8)], [], lineno=19, col_offset=4), FunctionDef('ABCD_method', arguments([Name('self', Param(), lineno=21, col_offset=20)], None, None, []), [Expr(Str('Method defined in A, B, C and D.', lineno=22, col_offset=8), lineno=22, col_offset=8)], [], lineno=21, col_offset=4)], [], lineno=5, col_offset=0), ClassDef('B_classic', [Name('A_classic', Load(), lineno=25, col_offset=16)], [Expr(Str('A classic class, derived from A_classic.', lineno=26, col_offset=4), lineno=26, col_offset=4), FunctionDef('AB_method', arguments([Name('self', Param(), lineno=27, col_offset=18)], None, None, []), [Expr(Str('Method defined in A and B.', lineno=28, col_offset=8), lineno=28, col_offset=8)], [], lineno=27, col_offset=4), FunctionDef('ABC_method', arguments([Name('self', Param(), lineno=29, col_offset=19)], None, None, []), [Expr(Str('Method defined in A, B and C.', lineno=30, col_offset=8), lineno=30, col_offset=8)], [], lineno=29, col_offset=4), FunctionDef('ABD_method', arguments([Name('self', Param(), lineno=31, col_offset=19)], None, None, []), [Expr(Str('Method defined in A, B and D.', lineno=32, col_offset=8), lineno=32, col_offset=8)], [], lineno=31, col_offset=4), FunctionDef('ABCD_method', arguments([Name('self', Param(), lineno=33, col_offset=20)], None, None, []), [Expr(Str('Method defined in A, B, C and D.', lineno=34, col_offset=8), lineno=34, col_offset=8)], [], lineno=33, col_offset=4), FunctionDef('B_method', arguments([Name('self', Param(), lineno=35, col_offset=17)], None, None, []), [Expr(Str('Method defined in B.', lineno=36, col_offset=8), lineno=36, col_offset=8)], [], lineno=35, col_offset=4), FunctionDef('BC_method', arguments([Name('self', Param(), lineno=37, col_offset=18)], None, None, []), [Expr(Str('Method defined in B and C.', lineno=38, col_offset=8), lineno=38, col_offset=8)], [], lineno=37, col_offset=4), FunctionDef('BD_method', arguments([Name('self', Param(), lineno=39, col_offset=18)], None, None, []), [Expr(Str('Method defined in B and D.', lineno=40, col_offset=8), lineno=40, col_offset=8)], [], lineno=39, col_offset=4), FunctionDef('BCD_method', arguments([Name('self', Param(), lineno=41, col_offset=19)], None, None, []), [Expr(Str('Method defined in B, C and D.', lineno=42, col_offset=8), lineno=42, col_offset=8)], [], lineno=41, col_offset=4)], [], lineno=25, col_offset=0), ClassDef('C_classic', [Name('A_classic', Load(), lineno=44, col_offset=16)], [Expr(Str('A classic class, derived from A_classic.', lineno=45, col_offset=4), lineno=45, col_offset=4), FunctionDef('AC_method', arguments([Name('self', Param(), lineno=46, col_offset=18)], None, None, []), [Expr(Str('Method defined in A and C.', lineno=47, col_offset=8), lineno=47, col_offset=8)], [], lineno=46, col_offset=4), FunctionDef('ABC_method', arguments([Name('self', Param(), lineno=48, col_offset=19)], None, None, []), [Expr(Str('Method defined in A, B and C.', lineno=49, col_offset=8), lineno=49, col_offset=8)], [], lineno=48, col_offset=4), FunctionDef('ACD_method', arguments([Name('self', Param(), lineno=50, col_offset=19)], None, None, []), [Expr(Str('Method defined in A, C and D.', lineno=51, col_offset=8), lineno=51, col_offset=8)], [], lineno=50, col_offset=4), FunctionDef('ABCD_method', arguments([Name('self', Param(), lineno=52, col_offset=20)], None, None, []), [Expr(Str('Method defined in A, B, C and D.', lineno=53, col_offset=8), lineno=53, col_offset=8)], [], lineno=52, col_offset=4), FunctionDef('BC_method', arguments([Name('self', Param(), lineno=54, col_offset=18)], None, None, []), [Expr(Str('Method defined in B and C.', lineno=55, col_offset=8), lineno=55, col_offset=8)], [], lineno=54, col_offset=4), FunctionDef('BCD_method', arguments([Name('self', Param(), lineno=56, col_offset=19)], None, None, []), [Expr(Str('Method defined in B, C and D.', lineno=57, col_offset=8), lineno=57, col_offset=8)], [], lineno=56, col_offset=4), FunctionDef('C_method', arguments([Name('self', Param(), lineno=58, col_offset=17)], None, None, []), [Expr(Str('Method defined in C.', lineno=59, col_offset=8), lineno=59, col_offset=8)], [], lineno=58, col_offset=4), FunctionDef('CD_method', arguments([Name('self', Param(), lineno=60, col_offset=18)], None, None, []), [Expr(Str('Method defined in C and D.', lineno=61, col_offset=8), lineno=61, col_offset=8)], [], lineno=60, col_offset=4)], [], lineno=44, col_offset=0), ClassDef('D_classic', [Name('B_classic', Load(), lineno=63, col_offset=16), Name('C_classic', Load(), lineno=63, col_offset=27)], [Expr(Str('A classic class, derived from B_classic and C_classic.', lineno=64, col_offset=4), lineno=64, col_offset=4), FunctionDef('AD_method', arguments([Name('self', Param(), lineno=65, col_offset=18)], None, None, []), [Expr(Str('Method defined in A and D.', lineno=66, col_offset=8), lineno=66, col_offset=8)], [], lineno=65, col_offset=4), FunctionDef('ABD_method', arguments([Name('self', Param(), lineno=67, col_offset=19)], None, None, []), [Expr(Str('Method defined in A, B and D.', lineno=68, col_offset=8), lineno=68, col_offset=8)], [], lineno=67, col_offset=4), FunctionDef('ACD_method', arguments([Name('self', Param(), lineno=69, col_offset=19)], None, None, []), [Expr(Str('Method defined in A, C and D.', lineno=70, col_offset=8), lineno=70, col_offset=8)], [], lineno=69, col_offset=4), FunctionDef('ABCD_method', arguments([Name('self', Param(), lineno=71, col_offset=20)], None, None, []), [Expr(Str('Method defined in A, B, C and D.', lineno=72, col_offset=8), lineno=72, col_offset=8)], [], lineno=71, col_offset=4), FunctionDef('BD_method', arguments([Name('self', Param(), lineno=73, col_offset=18)], None, None, []), [Expr(Str('Method defined in B and D.', lineno=74, col_offset=8), lineno=74, col_offset=8)], [], lineno=73, col_offset=4), FunctionDef('BCD_method', arguments([Name('self', Param(), lineno=75, col_offset=19)], None, None, []), [Expr(Str('Method defined in B, C and D.', lineno=76, col_offset=8), lineno=76, col_offset=8)], [], lineno=75, col_offset=4), FunctionDef('CD_method', arguments([Name('self', Param(), lineno=77, col_offset=18)], None, None, []), [Expr(Str('Method defined in C and D.', lineno=78, col_offset=8), lineno=78, col_offset=8)], [], lineno=77, col_offset=4), FunctionDef('D_method', arguments([Name('self', Param(), lineno=79, col_offset=17)], None, None, []), [Expr(Str('Method defined in D.', lineno=80, col_offset=8), lineno=80, col_offset=8)], [], lineno=79, col_offset=4)], [], lineno=63, col_offset=0), ClassDef('A_new', [Name('object', Load(), lineno=83, col_offset=12)], [Expr(Str('A new-style class.', lineno=84, col_offset=4), lineno=84, col_offset=4), FunctionDef('A_method', arguments([Name('self', Param(), lineno=86, col_offset=17)], None, None, []), [Expr(Str('Method defined in A.', lineno=87, col_offset=8), lineno=87, col_offset=8)], [], lineno=86, col_offset=4), FunctionDef('AB_method', arguments([Name('self', Param(), lineno=88, col_offset=18)], None, None, []), [Expr(Str('Method defined in A and B.', lineno=89, col_offset=8), lineno=89, col_offset=8)], [], lineno=88, col_offset=4), FunctionDef('AC_method', arguments([Name('self', Param(), lineno=90, col_offset=18)], None, None, []), [Expr(Str('Method defined in A and C.', lineno=91, col_offset=8), lineno=91, col_offset=8)], [], lineno=90, col_offset=4), FunctionDef('AD_method', arguments([Name('self', Param(), lineno=92, col_offset=18)], None, None, []), [Expr(Str('Method defined in A and D.', lineno=93, col_offset=8), lineno=93, col_offset=8)], [], lineno=92, col_offset=4), FunctionDef('ABC_method', arguments([Name('self', Param(), lineno=94, col_offset=19)], None, None, []), [Expr(Str('Method defined in A, B and C.', lineno=95, col_offset=8), lineno=95, col_offset=8)], [], lineno=94, col_offset=4), FunctionDef('ABD_method', arguments([Name('self', Param(), lineno=96, col_offset=19)], None, None, []), [Expr(Str('Method defined in A, B and D.', lineno=97, col_offset=8), lineno=97, col_offset=8)], [], lineno=96, col_offset=4), FunctionDef('ACD_method', arguments([Name('self', Param(), lineno=98, col_offset=19)], None, None, []), [Expr(Str('Method defined in A, C and D.', lineno=99, col_offset=8), lineno=99, col_offset=8)], [], lineno=98, col_offset=4), FunctionDef('ABCD_method', arguments([Name('self', Param(), lineno=100, col_offset=20)], None, None, []), [Expr(Str('Method defined in A, B, C and D.', lineno=101, col_offset=8), lineno=101, col_offset=8)], [], lineno=100, col_offset=4), FunctionDef('A_classmethod', arguments([Name('cls', Param(), lineno=103, col_offset=22), Name('x', Param(), lineno=103, col_offset=27)], None, None, []), [Expr(Str('A class method defined in A.', lineno=104, col_offset=8), lineno=104, col_offset=8)], [], lineno=103, col_offset=4), Assign([Name('A_classmethod', Store(), lineno=105, col_offset=4)], Call(Name('classmethod', Load(), lineno=105, col_offset=20), [Name('A_classmethod', Load(), lineno=105, col_offset=32)], [], None, None, lineno=105, col_offset=20), lineno=105, col_offset=4), FunctionDef('A_staticmethod', arguments([], None, None, []), [Expr(Str('A static method defined in A.', lineno=108, col_offset=8), lineno=108, col_offset=8)], [], lineno=107, col_offset=4), Assign([Name('A_staticmethod', Store(), lineno=109, col_offset=4)], Call(Name('staticmethod', Load(), lineno=109, col_offset=21), [Name('A_staticmethod', Load(), lineno=109, col_offset=34)], [], None, None, lineno=109, col_offset=21), lineno=109, col_offset=4), FunctionDef('_getx', arguments([Name('self', Param(), lineno=111, col_offset=14)], None, None, []), [Expr(Str('A property getter function.', lineno=112, col_offset=8), lineno=112, col_offset=8)], [], lineno=111, col_offset=4), FunctionDef('_setx', arguments([Name('self', Param(), lineno=113, col_offset=14), Name('value', Param(), lineno=113, col_offset=20)], None, None, []), [Expr(Str('A property setter function.', lineno=114, col_offset=8), lineno=114, col_offset=8)], [], lineno=113, col_offset=4), FunctionDef('_delx', arguments([Name('self', Param(), lineno=115, col_offset=14)], None, None, []), [Expr(Str('A property deleter function.', lineno=116, col_offset=8), lineno=116, col_offset=8)], [], lineno=115, col_offset=4), Assign([Name('A_property', Store(), lineno=117, col_offset=4)], Call(Name('property', Load(), lineno=117, col_offset=17), [], [keyword('fdel', Name('_delx', Load(), lineno=117, col_offset=31)), keyword('fget', Name('_getx', Load(), lineno=117, col_offset=43)), keyword('fset', Name('_setx', Load(), lineno=117, col_offset=55)), keyword('doc', Str('A sample property defined in A.', lineno=118, col_offset=30))], None, None, lineno=117, col_offset=17), lineno=117, col_offset=4), Assign([Name('A_int_alias', Store(), lineno=120, col_offset=4)], Name('int', Load(), lineno=120, col_offset=18), lineno=120, col_offset=4)], [], lineno=83, col_offset=0), ClassDef('B_new', [Name('A_new', Load(), lineno=122, col_offset=12)], [Expr(Str('A new-style class, derived from A_new.', lineno=123, col_offset=4), lineno=123, col_offset=4), FunctionDef('AB_method', arguments([Name('self', Param(), lineno=125, col_offset=18)], None, None, []), [Expr(Str('Method defined in A and B.', lineno=126, col_offset=8), lineno=126, col_offset=8)], [], lineno=125, col_offset=4), FunctionDef('ABC_method', arguments([Name('self', Param(), lineno=127, col_offset=19)], None, None, []), [Expr(Str('Method defined in A, B and C.', lineno=128, col_offset=8), lineno=128, col_offset=8)], [], lineno=127, col_offset=4), FunctionDef('ABD_method', arguments([Name('self', Param(), lineno=129, col_offset=19)], None, None, []), [Expr(Str('Method defined in A, B and D.', lineno=130, col_offset=8), lineno=130, col_offset=8)], [], lineno=129, col_offset=4), FunctionDef('ABCD_method', arguments([Name('self', Param(), lineno=131, col_offset=20)], None, None, []), [Expr(Str('Method defined in A, B, C and D.', lineno=132, col_offset=8), lineno=132, col_offset=8)], [], lineno=131, col_offset=4), FunctionDef('B_method', arguments([Name('self', Param(), lineno=133, col_offset=17)], None, None, []), [Expr(Str('Method defined in B.', lineno=134, col_offset=8), lineno=134, col_offset=8)], [], lineno=133, col_offset=4), FunctionDef('BC_method', arguments([Name('self', Param(), lineno=135, col_offset=18)], None, None, []), [Expr(Str('Method defined in B and C.', lineno=136, col_offset=8), lineno=136, col_offset=8)], [], lineno=135, col_offset=4), FunctionDef('BD_method', arguments([Name('self', Param(), lineno=137, col_offset=18)], None, None, []), [Expr(Str('Method defined in B and D.', lineno=138, col_offset=8), lineno=138, col_offset=8)], [], lineno=137, col_offset=4), FunctionDef('BCD_method', arguments([Name('self', Param(), lineno=139, col_offset=19)], None, None, []), [Expr(Str('Method defined in B, C and D.', lineno=140, col_offset=8), lineno=140, col_offset=8)], [], lineno=139, col_offset=4)], [], lineno=122, col_offset=0), ClassDef('C_new', [Name('A_new', Load(), lineno=142, col_offset=12)], [Expr(Str('A new-style class, derived from A_new.', lineno=143, col_offset=4), lineno=143, col_offset=4), FunctionDef('AC_method', arguments([Name('self', Param(), lineno=145, col_offset=18)], None, None, []), [Expr(Str('Method defined in A and C.', lineno=146, col_offset=8), lineno=146, col_offset=8)], [], lineno=145, col_offset=4), FunctionDef('ABC_method', arguments([Name('self', Param(), lineno=147, col_offset=19)], None, None, []), [Expr(Str('Method defined in A, B and C.', lineno=148, col_offset=8), lineno=148, col_offset=8)], [], lineno=147, col_offset=4), FunctionDef('ACD_method', arguments([Name('self', Param(), lineno=149, col_offset=19)], None, None, []), [Expr(Str('Method defined in A, C and D.', lineno=150, col_offset=8), lineno=150, col_offset=8)], [], lineno=149, col_offset=4), FunctionDef('ABCD_method', arguments([Name('self', Param(), lineno=151, col_offset=20)], None, None, []), [Expr(Str('Method defined in A, B, C and D.', lineno=152, col_offset=8), lineno=152, col_offset=8)], [], lineno=151, col_offset=4), FunctionDef('BC_method', arguments([Name('self', Param(), lineno=153, col_offset=18)], None, None, []), [Expr(Str('Method defined in B and C.', lineno=154, col_offset=8), lineno=154, col_offset=8)], [], lineno=153, col_offset=4), FunctionDef('BCD_method', arguments([Name('self', Param(), lineno=155, col_offset=19)], None, None, []), [Expr(Str('Method defined in B, C and D.', lineno=156, col_offset=8), lineno=156, col_offset=8)], [], lineno=155, col_offset=4), FunctionDef('C_method', arguments([Name('self', Param(), lineno=157, col_offset=17)], None, None, []), [Expr(Str('Method defined in C.', lineno=158, col_offset=8), lineno=158, col_offset=8)], [], lineno=157, col_offset=4), FunctionDef('CD_method', arguments([Name('self', Param(), lineno=159, col_offset=18)], None, None, []), [Expr(Str('Method defined in C and D.', lineno=160, col_offset=8), lineno=160, col_offset=8)], [], lineno=159, col_offset=4)], [], lineno=142, col_offset=0), ClassDef('D_new', [Name('B_new', Load(), lineno=162, col_offset=12), Name('C_new', Load(), lineno=162, col_offset=19)], [Expr(Str('A new-style class, derived from B_new and C_new.\n    ', lineno=164, col_offset=-1), lineno=164, col_offset=-1), FunctionDef('AD_method', arguments([Name('self', Param(), lineno=166, col_offset=18)], None, None, []), [Expr(Str('Method defined in A and D.', lineno=167, col_offset=8), lineno=167, col_offset=8)], [], lineno=166, col_offset=4), FunctionDef('ABD_method', arguments([Name('self', Param(), lineno=168, col_offset=19)], None, None, []), [Expr(Str('Method defined in A, B and D.', lineno=169, col_offset=8), lineno=169, col_offset=8)], [], lineno=168, col_offset=4), FunctionDef('ACD_method', arguments([Name('self', Param(), lineno=170, col_offset=19)], None, None, []), [Expr(Str('Method defined in A, C and D.', lineno=171, col_offset=8), lineno=171, col_offset=8)], [], lineno=170, col_offset=4), FunctionDef('ABCD_method', arguments([Name('self', Param(), lineno=172, col_offset=20)], None, None, []), [Expr(Str('Method defined in A, B, C and D.', lineno=173, col_offset=8), lineno=173, col_offset=8)], [], lineno=172, col_offset=4), FunctionDef('BD_method', arguments([Name('self', Param(), lineno=174, col_offset=18)], None, None, []), [Expr(Str('Method defined in B and D.', lineno=175, col_offset=8), lineno=175, col_offset=8)], [], lineno=174, col_offset=4), FunctionDef('BCD_method', arguments([Name('self', Param(), lineno=176, col_offset=19)], None, None, []), [Expr(Str('Method defined in B, C and D.', lineno=177, col_offset=8), lineno=177, col_offset=8)], [], lineno=176, col_offset=4), FunctionDef('CD_method', arguments([Name('self', Param(), lineno=178, col_offset=18)], None, None, []), [Expr(Str('Method defined in C and D.', lineno=179, col_offset=8), lineno=179, col_offset=8)], [], lineno=178, col_offset=4), FunctionDef('D_method', arguments([Name('self', Param(), lineno=180, col_offset=17)], None, None, []), [Expr(Str('Method defined in D.', lineno=181, col_offset=8), lineno=181, col_offset=8)], [], lineno=180, col_offset=4)], [], lineno=162, col_offset=0), ClassDef('FunkyProperties', [Name('object', Load(), lineno=183, col_offset=22)], [Expr(Str('From SF bug 472347, by Roeland Rengelink.\n\n    Property getters etc may not be vanilla functions or methods,\n    and this used to make GUI pydoc blow up.\n    ', lineno=188, col_offset=-1), lineno=188, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=190, col_offset=17)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=191, col_offset=8), 'desc', Store(), lineno=191, col_offset=8)], Dict([Str('x', lineno=191, col_offset=21)], [Num(0, lineno=191, col_offset=25)], lineno=191, col_offset=20), lineno=191, col_offset=8)], [], lineno=190, col_offset=4), ClassDef('get_desc', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=194, col_offset=21), Name('attr', Param(), lineno=194, col_offset=27)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=195, col_offset=12), 'attr', Store(), lineno=195, col_offset=12)], Name('attr', Load(), lineno=195, col_offset=24), lineno=195, col_offset=12)], [], lineno=194, col_offset=8), FunctionDef('__call__', arguments([Name('self', Param(), lineno=196, col_offset=21), Name('inst', Param(), lineno=196, col_offset=27)], None, None, []), [Print(None, [Str('Get called', lineno=197, col_offset=18), Name('self', Load(), lineno=197, col_offset=32), Name('inst', Load(), lineno=197, col_offset=38)], True, lineno=197, col_offset=12), Return(Subscript(Attribute(Name('inst', Load(), lineno=198, col_offset=19), 'desc', Load(), lineno=198, col_offset=19), Index(Attribute(Name('self', Load(), lineno=198, col_offset=29), 'attr', Load(), lineno=198, col_offset=29)), Load(), lineno=198, col_offset=19), lineno=198, col_offset=12)], [], lineno=196, col_offset=8)], [], lineno=193, col_offset=4), ClassDef('set_desc', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=200, col_offset=21), Name('attr', Param(), lineno=200, col_offset=27)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=201, col_offset=12), 'attr', Store(), lineno=201, col_offset=12)], Name('attr', Load(), lineno=201, col_offset=24), lineno=201, col_offset=12)], [], lineno=200, col_offset=8), FunctionDef('__call__', arguments([Name('self', Param(), lineno=202, col_offset=21), Name('inst', Param(), lineno=202, col_offset=27), Name('val', Param(), lineno=202, col_offset=33)], None, None, []), [Print(None, [Str('Set called', lineno=203, col_offset=18), Name('self', Load(), lineno=203, col_offset=32), Name('inst', Load(), lineno=203, col_offset=38), Name('val', Load(), lineno=203, col_offset=44)], True, lineno=203, col_offset=12), Assign([Subscript(Attribute(Name('inst', Load(), lineno=204, col_offset=12), 'desc', Load(), lineno=204, col_offset=12), Index(Attribute(Name('self', Load(), lineno=204, col_offset=22), 'attr', Load(), lineno=204, col_offset=22)), Store(), lineno=204, col_offset=12)], Name('val', Load(), lineno=204, col_offset=35), lineno=204, col_offset=12)], [], lineno=202, col_offset=8)], [], lineno=199, col_offset=4), ClassDef('del_desc', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=206, col_offset=21), Name('attr', Param(), lineno=206, col_offset=27)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=207, col_offset=12), 'attr', Store(), lineno=207, col_offset=12)], Name('attr', Load(), lineno=207, col_offset=24), lineno=207, col_offset=12)], [], lineno=206, col_offset=8), FunctionDef('__call__', arguments([Name('self', Param(), lineno=208, col_offset=21), Name('inst', Param(), lineno=208, col_offset=27)], None, None, []), [Print(None, [Str('Del called', lineno=209, col_offset=18), Name('self', Load(), lineno=209, col_offset=32), Name('inst', Load(), lineno=209, col_offset=38)], True, lineno=209, col_offset=12), Delete([Subscript(Attribute(Name('inst', Load(), lineno=210, col_offset=16), 'desc', Load(), lineno=210, col_offset=16), Index(Attribute(Name('self', Load(), lineno=210, col_offset=26), 'attr', Load(), lineno=210, col_offset=26)), Del(), lineno=210, col_offset=16)], lineno=210, col_offset=12)], [], lineno=208, col_offset=8)], [], lineno=205, col_offset=4), Assign([Name('x', Store(), lineno=212, col_offset=4)], Call(Name('property', Load(), lineno=212, col_offset=8), [Call(Name('get_desc', Load(), lineno=212, col_offset=17), [Str('x', lineno=212, col_offset=26)], [], None, None, lineno=212, col_offset=17), Call(Name('set_desc', Load(), lineno=212, col_offset=32), [Str('x', lineno=212, col_offset=41)], [], None, None, lineno=212, col_offset=32), Call(Name('del_desc', Load(), lineno=212, col_offset=47), [Str('x', lineno=212, col_offset=56)], [], None, None, lineno=212, col_offset=47), Str('prop x', lineno=212, col_offset=62)], [], None, None, lineno=212, col_offset=8), lineno=212, col_offset=4)], [], lineno=183, col_offset=0), Assign([Name('submodule', Store(), lineno=215, col_offset=0)], Call(Attribute(Name('types', Load(), lineno=215, col_offset=12), 'ModuleType', Load(), lineno=215, col_offset=12), [BinOp(Name('__name__', Load(), lineno=215, col_offset=29), Add(), Str('.submodule', lineno=215, col_offset=40), lineno=215, col_offset=29), Str("A submodule, which should appear in its parent's summary", lineno=216, col_offset=4)], [], None, None, lineno=215, col_offset=12), lineno=215, col_offset=0)])
