Module([Expr(Str('Test module to thest the xmllib module.\n   Sjoerd Mullender\n', lineno=3, col_offset=-1), lineno=3, col_offset=-1), Assign([Name('testdoc', Store(), lineno=5, col_offset=0)], Str('<?xml version="1.0" encoding="UTF-8" standalone=\'yes\' ?>\n<!-- comments aren\'t allowed before the <?xml?> tag,\n     but they are allowed before the <!DOCTYPE> tag -->\n<?processing instructions are allowed in the same places as comments ?>\n<!DOCTYPE greeting [\n  <!ELEMENT greeting (#PCDATA)>\n]>\n<greeting>Hello, world!</greeting>\n', lineno=14, col_offset=-1), lineno=5, col_offset=0), Assign([Name('nsdoc', Store(), lineno=16, col_offset=0)], Str("<foo xmlns='URI' attr='val'/>", lineno=16, col_offset=8), lineno=16, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=18, col_offset=0), Import([alias('unittest', None)], lineno=19, col_offset=0), Assign([Name('xmllib', Store(), lineno=21, col_offset=0)], Call(Attribute(Name('test_support', Load(), lineno=21, col_offset=9), 'import_module', Load(), lineno=21, col_offset=9), [Str('xmllib', lineno=21, col_offset=36)], [keyword('deprecated', Name('True', Load(), lineno=21, col_offset=57))], None, None, lineno=21, col_offset=9), lineno=21, col_offset=0), ClassDef('XMLParserTestCase', [Attribute(Name('unittest', Load(), lineno=23, col_offset=24), 'TestCase', Load(), lineno=23, col_offset=24)], [FunctionDef('test_simple', arguments([Name('self', Param(), lineno=25, col_offset=20)], None, None, []), [Assign([Name('parser', Store(), lineno=26, col_offset=8)], Call(Attribute(Name('xmllib', Load(), lineno=26, col_offset=17), 'XMLParser', Load(), lineno=26, col_offset=17), [], [], None, None, lineno=26, col_offset=17), lineno=26, col_offset=8), For(Name('c', Store(), lineno=27, col_offset=12), Name('testdoc', Load(), lineno=27, col_offset=17), [Expr(Call(Attribute(Name('parser', Load(), lineno=28, col_offset=12), 'feed', Load(), lineno=28, col_offset=12), [Name('c', Load(), lineno=28, col_offset=24)], [], None, None, lineno=28, col_offset=12), lineno=28, col_offset=12)], [], lineno=27, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=29, col_offset=8), 'close', Load(), lineno=29, col_offset=8), [], [], None, None, lineno=29, col_offset=8), lineno=29, col_offset=8)], [], lineno=25, col_offset=4), FunctionDef('test_default_namespace', arguments([Name('self', Param(), lineno=31, col_offset=31)], None, None, []), [ClassDef('H', [Attribute(Name('xmllib', Load(), lineno=32, col_offset=16), 'XMLParser', Load(), lineno=32, col_offset=16)], [FunctionDef('unknown_starttag', arguments([Name('self', Param(), lineno=33, col_offset=33), Name('name', Param(), lineno=33, col_offset=39), Name('attr', Param(), lineno=33, col_offset=45)], None, None, []), [Assign([Tuple([Attribute(Name('self', Load(), lineno=34, col_offset=16), 'name', Store(), lineno=34, col_offset=16), Attribute(Name('self', Load(), lineno=34, col_offset=27), 'attr', Store(), lineno=34, col_offset=27)], Store(), lineno=34, col_offset=16)], Tuple([Name('name', Load(), lineno=34, col_offset=39), Name('attr', Load(), lineno=34, col_offset=45)], Load(), lineno=34, col_offset=39), lineno=34, col_offset=16)], [], lineno=33, col_offset=12)], [], lineno=32, col_offset=8), Assign([Name('h', Store(), lineno=35, col_offset=8)], Call(Name('H', Load(), lineno=35, col_offset=10), [], [], None, None, lineno=35, col_offset=10), lineno=35, col_offset=8), Expr(Call(Attribute(Name('h', Load(), lineno=36, col_offset=8), 'feed', Load(), lineno=36, col_offset=8), [Name('nsdoc', Load(), lineno=36, col_offset=15)], [], None, None, lineno=36, col_offset=8), lineno=36, col_offset=8), Expr(Call(Attribute(Name('h', Load(), lineno=37, col_offset=8), 'close', Load(), lineno=37, col_offset=8), [], [], None, None, lineno=37, col_offset=8), lineno=37, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=39, col_offset=8), 'assertEqual', Load(), lineno=39, col_offset=8), [Attribute(Name('h', Load(), lineno=39, col_offset=25), 'name', Load(), lineno=39, col_offset=25), Str('URI foo', lineno=39, col_offset=33)], [], None, None, lineno=39, col_offset=8), lineno=39, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=41, col_offset=8), 'assertEqual', Load(), lineno=41, col_offset=8), [Attribute(Name('h', Load(), lineno=41, col_offset=25), 'attr', Load(), lineno=41, col_offset=25), Dict([Str('attr', lineno=41, col_offset=34)], [Str('val', lineno=41, col_offset=41)], lineno=41, col_offset=33)], [], None, None, lineno=41, col_offset=8), lineno=41, col_offset=8)], [], lineno=31, col_offset=4)], [], lineno=23, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=45, col_offset=4), 'run_unittest', Load(), lineno=45, col_offset=4), [Name('XMLParserTestCase', Load(), lineno=45, col_offset=30)], [], None, None, lineno=45, col_offset=4), lineno=45, col_offset=4)], [], lineno=44, col_offset=0), If(Compare(Name('__name__', Load(), lineno=47, col_offset=3), [Eq()], [Str('__main__', lineno=47, col_offset=15)], lineno=47, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=48, col_offset=4), [], [], None, None, lineno=48, col_offset=4), lineno=48, col_offset=4)], [], lineno=47, col_offset=0)])
