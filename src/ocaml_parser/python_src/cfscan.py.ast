Module([Import([alias('sys', None)], lineno=3, col_offset=0), ImportFrom('bgenlocations', [alias('TOOLBOXDIR', None), alias('BGENDIR', None)], 0, lineno=4, col_offset=0), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=5, col_offset=0), 'path', Load(), lineno=5, col_offset=0), 'append', Load(), lineno=5, col_offset=0), [Name('BGENDIR', Load(), lineno=5, col_offset=16)], [], None, None, lineno=5, col_offset=0), lineno=5, col_offset=0), ImportFrom('scantools', [alias('Scanner_OSX', None)], 0, lineno=6, col_offset=0), Assign([Name('LONG', Store(), lineno=8, col_offset=0)], Str('CoreFoundation', lineno=8, col_offset=7), lineno=8, col_offset=0), Assign([Name('SHORT', Store(), lineno=9, col_offset=0)], Str('cf', lineno=9, col_offset=8), lineno=9, col_offset=0), Assign([Name('OBJECTS', Store(), lineno=10, col_offset=0)], Tuple([Str('CFTypeRef', lineno=10, col_offset=11), Str('CFArrayRef', lineno=11, col_offset=16), Str('CFMutableArrayRef', lineno=11, col_offset=30), Str('CFDataRef', lineno=12, col_offset=16), Str('CFMutableDataRef', lineno=12, col_offset=29), Str('CFDictionaryRef', lineno=13, col_offset=16), Str('CFMutableDictionaryRef', lineno=13, col_offset=35), Str('CFStringRef', lineno=14, col_offset=16), Str('CFMutableStringRef', lineno=14, col_offset=31), Str('CFURLRef', lineno=15, col_offset=16)], Load(), lineno=10, col_offset=11), lineno=10, col_offset=0), FunctionDef('main', arguments([], None, None, []), [Assign([Name('input', Store(), lineno=21, col_offset=4)], List([Str('CFBase.h', lineno=22, col_offset=12), Str('CFArray.h', lineno=23, col_offset=12), Str('CFData.h', lineno=27, col_offset=12), Str('CFDictionary.h', lineno=29, col_offset=12), Str('CFPreferences.h', lineno=32, col_offset=12), Str('CFPropertyList.h', lineno=33, col_offset=12), Str('CFString.h', lineno=35, col_offset=12), Str('CFURL.h', lineno=38, col_offset=12)], Load(), lineno=21, col_offset=12), lineno=21, col_offset=4), Assign([Name('output', Store(), lineno=40, col_offset=4)], BinOp(Name('SHORT', Load(), lineno=40, col_offset=13), Add(), Str('gen.py', lineno=40, col_offset=21), lineno=40, col_offset=13), lineno=40, col_offset=4), Assign([Name('defsoutput', Store(), lineno=41, col_offset=4)], BinOp(BinOp(Name('TOOLBOXDIR', Load(), lineno=41, col_offset=17), Add(), Name('LONG', Load(), lineno=41, col_offset=30), lineno=41, col_offset=17), Add(), Str('.py', lineno=41, col_offset=37), lineno=41, col_offset=35), lineno=41, col_offset=4), Assign([Name('scanner', Store(), lineno=42, col_offset=4)], Call(Name('MyScanner', Load(), lineno=42, col_offset=14), [Name('input', Load(), lineno=42, col_offset=24), Name('output', Load(), lineno=42, col_offset=31), Name('defsoutput', Load(), lineno=42, col_offset=39)], [], None, None, lineno=42, col_offset=14), lineno=42, col_offset=4), Expr(Call(Attribute(Name('scanner', Load(), lineno=43, col_offset=4), 'scan', Load(), lineno=43, col_offset=4), [], [], None, None, lineno=43, col_offset=4), lineno=43, col_offset=4), Expr(Call(Attribute(Name('scanner', Load(), lineno=44, col_offset=4), 'gentypetest', Load(), lineno=44, col_offset=4), [BinOp(Name('SHORT', Load(), lineno=44, col_offset=24), Add(), Str('typetest.py', lineno=44, col_offset=30), lineno=44, col_offset=24)], [], None, None, lineno=44, col_offset=4), lineno=44, col_offset=4), Expr(Call(Attribute(Name('scanner', Load(), lineno=45, col_offset=4), 'close', Load(), lineno=45, col_offset=4), [], [], None, None, lineno=45, col_offset=4), lineno=45, col_offset=4), Print(None, [Str('=== Testing definitions output code ===', lineno=46, col_offset=10)], True, lineno=46, col_offset=4), Expr(Call(Name('execfile', Load(), lineno=47, col_offset=4), [Name('defsoutput', Load(), lineno=47, col_offset=13), Dict([], [], lineno=47, col_offset=25), Dict([], [], lineno=47, col_offset=29)], [], None, None, lineno=47, col_offset=4), lineno=47, col_offset=4), Print(None, [Str('=== Done scanning and generating, now importing the generated code... ===', lineno=48, col_offset=10)], True, lineno=48, col_offset=4), Exec(BinOp(BinOp(Str('import ', lineno=49, col_offset=9), Add(), Name('SHORT', Load(), lineno=49, col_offset=21), lineno=49, col_offset=9), Add(), Str('support', lineno=49, col_offset=29), lineno=49, col_offset=27), None, None, lineno=49, col_offset=4), Print(None, [Str("=== Done.  It's up to you to compile it now! ===", lineno=50, col_offset=10)], True, lineno=50, col_offset=4)], [], lineno=20, col_offset=0), ClassDef('MyScanner', [Name('Scanner_OSX', Load(), lineno=52, col_offset=16)], [FunctionDef('destination', arguments([Name('self', Param(), lineno=54, col_offset=20), Name('type', Param(), lineno=54, col_offset=26), Name('name', Param(), lineno=54, col_offset=32), Name('arglist', Param(), lineno=54, col_offset=38)], None, None, []), [Assign([Name('classname', Store(), lineno=55, col_offset=8)], Str('Function', lineno=55, col_offset=20), lineno=55, col_offset=8), Assign([Name('listname', Store(), lineno=56, col_offset=8)], Str('functions', lineno=56, col_offset=19), lineno=56, col_offset=8), If(BoolOp(And(), [Name('arglist', Load(), lineno=57, col_offset=11), Compare(Subscript(Name('name', Load(), lineno=57, col_offset=23), Slice(None, Num(13, lineno=57, col_offset=29), None), Load(), lineno=57, col_offset=23), [NotEq()], [Str('CFPreferences', lineno=57, col_offset=36)], lineno=57, col_offset=23)], lineno=57, col_offset=11), [Assign([Tuple([Name('t', Store(), lineno=58, col_offset=12), Name('n', Store(), lineno=58, col_offset=15), Name('m', Store(), lineno=58, col_offset=18)], Store(), lineno=58, col_offset=12)], Subscript(Name('arglist', Load(), lineno=58, col_offset=22), Index(Num(0, lineno=58, col_offset=30)), Load(), lineno=58, col_offset=22), lineno=58, col_offset=12), If(BoolOp(And(), [Compare(Name('t', Load(), lineno=59, col_offset=15), [In()], [Name('OBJECTS', Load(), lineno=59, col_offset=20)], lineno=59, col_offset=15), Compare(Name('m', Load(), lineno=59, col_offset=32), [Eq()], [Str('InMode', lineno=59, col_offset=37)], lineno=59, col_offset=32)], lineno=59, col_offset=15), [Assign([Name('classname', Store(), lineno=60, col_offset=16)], Str('Method', lineno=60, col_offset=28), lineno=60, col_offset=16), Assign([Name('listname', Store(), lineno=61, col_offset=16)], BinOp(Name('t', Load(), lineno=61, col_offset=27), Add(), Str('_methods', lineno=61, col_offset=31), lineno=61, col_offset=27), lineno=61, col_offset=16)], [], lineno=59, col_offset=12), If(BoolOp(And(), [Compare(Name('t', Load(), lineno=63, col_offset=15), [Eq()], [Str('CFAllocatorRef', lineno=63, col_offset=20)], lineno=63, col_offset=15), Compare(Name('m', Load(), lineno=63, col_offset=41), [Eq()], [Str('InMode', lineno=63, col_offset=46)], lineno=63, col_offset=41), Compare(Call(Name('len', Load(), lineno=63, col_offset=59), [Name('arglist', Load(), lineno=63, col_offset=63)], [], None, None, lineno=63, col_offset=59), [Gt()], [Num(1, lineno=63, col_offset=74)], lineno=63, col_offset=59)], lineno=63, col_offset=15), [Assign([Tuple([Name('t', Store(), lineno=64, col_offset=16), Name('n', Store(), lineno=64, col_offset=19), Name('m', Store(), lineno=64, col_offset=22)], Store(), lineno=64, col_offset=16)], Subscript(Name('arglist', Load(), lineno=64, col_offset=26), Index(Num(1, lineno=64, col_offset=34)), Load(), lineno=64, col_offset=26), lineno=64, col_offset=16), If(BoolOp(And(), [Compare(Name('t', Load(), lineno=65, col_offset=19), [In()], [Name('OBJECTS', Load(), lineno=65, col_offset=24)], lineno=65, col_offset=19), Compare(Name('m', Load(), lineno=65, col_offset=36), [Eq()], [Str('InMode', lineno=65, col_offset=41)], lineno=65, col_offset=36)], lineno=65, col_offset=19), [Assign([Name('classname', Store(), lineno=66, col_offset=20)], Str('MethodSkipArg1', lineno=66, col_offset=32), lineno=66, col_offset=20), Assign([Name('listname', Store(), lineno=67, col_offset=20)], BinOp(Name('t', Load(), lineno=67, col_offset=31), Add(), Str('_methods', lineno=67, col_offset=35), lineno=67, col_offset=31), lineno=67, col_offset=20)], [], lineno=65, col_offset=16)], [], lineno=63, col_offset=12)], [], lineno=57, col_offset=8), Return(Tuple([Name('classname', Load(), lineno=68, col_offset=15), Name('listname', Load(), lineno=68, col_offset=26)], Load(), lineno=68, col_offset=15), lineno=68, col_offset=8)], [], lineno=54, col_offset=4), FunctionDef('writeinitialdefs', arguments([Name('self', Param(), lineno=70, col_offset=25)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=71, col_offset=8), 'defsfile', Load(), lineno=71, col_offset=8), 'write', Load(), lineno=71, col_offset=8), [Str('def FOUR_CHAR_CODE(x): return x\n', lineno=71, col_offset=28)], [], None, None, lineno=71, col_offset=8), lineno=71, col_offset=8)], [], lineno=70, col_offset=4), FunctionDef('makeblacklistnames', arguments([Name('self', Param(), lineno=73, col_offset=27)], None, None, []), [Return(List([Str('CFAllocatorGetDefault', lineno=76, col_offset=16), Str('CFAllocatorSetDefault', lineno=77, col_offset=16), Str('CFAllocatorAllocate', lineno=78, col_offset=16), Str('CFAllocatorReallocate', lineno=79, col_offset=16), Str('CFAllocatorDeallocate', lineno=80, col_offset=16), Str('CFGetAllocator', lineno=81, col_offset=16), Str('CFArrayGetValueAtIndex', lineno=83, col_offset=16), Str('CFDataGetBytePtr', lineno=85, col_offset=16), Str('CFDataGetMutableBytePtr', lineno=86, col_offset=16), Str('CFDataGetBytes', lineno=87, col_offset=16), Str('CFStringGetPascalString', lineno=89, col_offset=16), Str('CFStringGetPascalStringPtr', lineno=90, col_offset=16), Str('CFStringGetCStringPtr', lineno=91, col_offset=16), Str('CFStringGetCharactersPtr', lineno=92, col_offset=16), Str('CFStringGetCString', lineno=93, col_offset=16), Str('CFStringGetCharacters', lineno=94, col_offset=16), Str('CFURLCreateStringWithFileSystemPath', lineno=95, col_offset=16), Str('CFStringCreateMutableWithExternalCharactersNoCopy', lineno=96, col_offset=16), Str('CFStringSetExternalCharactersNoCopy', lineno=97, col_offset=16), Str('CFStringGetCharacterAtIndex', lineno=98, col_offset=16), Str('kCFStringEncodingInvalidId', lineno=99, col_offset=16), Str('CFPropertyListCreateFromXMLData', lineno=100, col_offset=16)], Load(), lineno=74, col_offset=15), lineno=74, col_offset=8)], [], lineno=73, col_offset=4), FunctionDef('makegreylist', arguments([Name('self', Param(), lineno=103, col_offset=21)], None, None, []), [Return(List([], Load(), lineno=104, col_offset=15), lineno=104, col_offset=8)], [], lineno=103, col_offset=4), FunctionDef('makeblacklisttypes', arguments([Name('self', Param(), lineno=106, col_offset=27)], None, None, []), [Return(List([Str('CFComparatorFunction', lineno=108, col_offset=16), Str('CFAllocatorContext', lineno=109, col_offset=16), Str('void_ptr_ptr', lineno=110, col_offset=16), Str('void_ptr', lineno=111, col_offset=16), Str('CFArrayApplierFunction', lineno=112, col_offset=16), Str('CFDictionaryApplierFunction', lineno=113, col_offset=16), Str('va_list', lineno=114, col_offset=16), Str('const_CFStringEncoding_ptr', lineno=115, col_offset=16)], Load(), lineno=107, col_offset=15), lineno=107, col_offset=8)], [], lineno=106, col_offset=4), FunctionDef('makerepairinstructions', arguments([Name('self', Param(), lineno=118, col_offset=31)], None, None, []), [Return(List([Tuple([List([Tuple([Str('UInt8_ptr', lineno=121, col_offset=19), Str('*', lineno=121, col_offset=32), Str('InMode', lineno=121, col_offset=37)], Load(), lineno=121, col_offset=19), Tuple([Str('CFIndex', lineno=121, col_offset=49), Str('*', lineno=121, col_offset=60), Str('InMode', lineno=121, col_offset=65)], Load(), lineno=121, col_offset=49)], Load(), lineno=121, col_offset=17), List([Tuple([Str('UcharInBuffer', lineno=122, col_offset=19), Str('*', lineno=122, col_offset=36), Str('*', lineno=122, col_offset=41)], Load(), lineno=122, col_offset=19)], Load(), lineno=122, col_offset=17)], Load(), lineno=121, col_offset=17), Tuple([List([Tuple([Str('UniChar_ptr', lineno=124, col_offset=19), Str('*', lineno=124, col_offset=34), Str('InMode', lineno=124, col_offset=39)], Load(), lineno=124, col_offset=19), Tuple([Str('CFIndex', lineno=124, col_offset=51), Str('*', lineno=124, col_offset=62), Str('InMode', lineno=124, col_offset=67)], Load(), lineno=124, col_offset=51)], Load(), lineno=124, col_offset=17), List([Tuple([Str('UnicodeInBuffer', lineno=125, col_offset=19), Str('*', lineno=125, col_offset=38), Str('*', lineno=125, col_offset=43)], Load(), lineno=125, col_offset=19)], Load(), lineno=125, col_offset=17)], Load(), lineno=124, col_offset=17), Tuple([List([Tuple([Str('const_char_ptr', lineno=128, col_offset=19), Str('*', lineno=128, col_offset=37), Str('ReturnMode', lineno=128, col_offset=42)], Load(), lineno=128, col_offset=19)], Load(), lineno=128, col_offset=17), List([Tuple([Str('return_stringptr', lineno=129, col_offset=19), Str('*', lineno=129, col_offset=39), Str('*', lineno=129, col_offset=44)], Load(), lineno=129, col_offset=19)], Load(), lineno=129, col_offset=17)], Load(), lineno=128, col_offset=17), Tuple([List([Tuple([Str('CFURLRef', lineno=132, col_offset=19), Str('baseURL', lineno=132, col_offset=31), Str('InMode', lineno=132, col_offset=42)], Load(), lineno=132, col_offset=19)], Load(), lineno=132, col_offset=17), List([Tuple([Str('OptionalCFURLRef', lineno=133, col_offset=19), Str('*', lineno=133, col_offset=39), Str('*', lineno=133, col_offset=44)], Load(), lineno=133, col_offset=19)], Load(), lineno=133, col_offset=17)], Load(), lineno=132, col_offset=17), Tuple([List([Tuple([Str('CFPropertyListRef', lineno=136, col_offset=19), Str('*', lineno=136, col_offset=40), Str('*', lineno=136, col_offset=45)], Load(), lineno=136, col_offset=19)], Load(), lineno=136, col_offset=17), List([Tuple([Str('CFTypeRef', lineno=137, col_offset=19), Str('*', lineno=137, col_offset=32), Str('*', lineno=137, col_offset=37)], Load(), lineno=137, col_offset=19)], Load(), lineno=137, col_offset=17)], Load(), lineno=136, col_offset=17)], Load(), lineno=119, col_offset=15), lineno=119, col_offset=8)], [], lineno=118, col_offset=4)], [], lineno=52, col_offset=0), If(Compare(Name('__name__', Load(), lineno=140, col_offset=3), [Eq()], [Str('__main__', lineno=140, col_offset=15)], lineno=140, col_offset=3), [Expr(Call(Name('main', Load(), lineno=141, col_offset=4), [], [], None, None, lineno=141, col_offset=4), lineno=141, col_offset=4)], [], lineno=140, col_offset=0)])
