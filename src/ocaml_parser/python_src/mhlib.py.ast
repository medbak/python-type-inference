Module([Expr(Str("MH interface -- purely object-oriented (well, almost)\n\nExecutive summary:\n\nimport mhlib\n\nmh = mhlib.MH()         # use default mailbox directory and profile\nmh = mhlib.MH(mailbox)  # override mailbox location (default from profile)\nmh = mhlib.MH(mailbox, profile) # override mailbox and profile\n\nmh.error(format, ...)   # print error message -- can be overridden\ns = mh.getprofile(key)  # profile entry (None if not set)\npath = mh.getpath()     # mailbox pathname\nname = mh.getcontext()  # name of current folder\nmh.setcontext(name)     # set name of current folder\n\nlist = mh.listfolders() # names of top-level folders\nlist = mh.listallfolders() # names of all folders, including subfolders\nlist = mh.listsubfolders(name) # direct subfolders of given folder\nlist = mh.listallsubfolders(name) # all subfolders of given folder\n\nmh.makefolder(name)     # create new folder\nmh.deletefolder(name)   # delete folder -- must have no subfolders\n\nf = mh.openfolder(name) # new open folder object\n\nf.error(format, ...)    # same as mh.error(format, ...)\npath = f.getfullname()  # folder's full pathname\npath = f.getsequencesfilename() # full pathname of folder's sequences file\npath = f.getmessagefilename(n)  # full pathname of message n in folder\n\nlist = f.listmessages() # list of messages in folder (as numbers)\nn = f.getcurrent()      # get current message\nf.setcurrent(n)         # set current message\nlist = f.parsesequence(seq)     # parse msgs syntax into list of messages\nn = f.getlast()         # get last message (0 if no messagse)\nf.setlast(n)            # set last message (internal use only)\n\ndict = f.getsequences() # dictionary of sequences in folder {name: list}\nf.putsequences(dict)    # write sequences back to folder\n\nf.createmessage(n, fp)  # add message from file f as number n\nf.removemessages(list)  # remove messages in list from folder\nf.refilemessages(list, tofolder) # move messages in list to other folder\nf.movemessage(n, tofolder, ton)  # move one message to a given destination\nf.copymessage(n, tofolder, ton)  # copy one message to a given destination\n\nm = f.openmessage(n)    # new open message object (costs a file descriptor)\nm is a derived class of mimetools.Message(rfc822.Message), with:\ns = m.getheadertext()   # text of message's headers\ns = m.getheadertext(pred) # text of message's headers, filtered by pred\ns = m.getbodytext()     # text of message's body, decoded\ns = m.getbodytext(0)    # text of message's body, not decoded\n", lineno=54, col_offset=-1), lineno=54, col_offset=-1), ImportFrom('warnings', [alias('warnpy3k', None)], 0, lineno=55, col_offset=0), Expr(Call(Name('warnpy3k', Load(), lineno=56, col_offset=0), [Str('the mhlib module has been removed in Python 3.0; use the mailbox module instead', lineno=56, col_offset=9)], [keyword('stacklevel', Num(2, lineno=57, col_offset=41))], None, None, lineno=56, col_offset=0), lineno=56, col_offset=0), Delete([Name('warnpy3k', Del(), lineno=58, col_offset=4)], lineno=58, col_offset=0), Assign([Name('MH_PROFILE', Store(), lineno=71, col_offset=0)], Str('~/.mh_profile', lineno=71, col_offset=13), lineno=71, col_offset=0), Assign([Name('PATH', Store(), lineno=72, col_offset=0)], Str('~/Mail', lineno=72, col_offset=7), lineno=72, col_offset=0), Assign([Name('MH_SEQUENCES', Store(), lineno=73, col_offset=0)], Str('.mh_sequences', lineno=73, col_offset=15), lineno=73, col_offset=0), Assign([Name('FOLDER_PROTECT', Store(), lineno=74, col_offset=0)], Num(448, lineno=74, col_offset=17), lineno=74, col_offset=0), Import([alias('os', None)], lineno=79, col_offset=0), Import([alias('sys', None)], lineno=80, col_offset=0), Import([alias('re', None)], lineno=81, col_offset=0), Import([alias('mimetools', None)], lineno=82, col_offset=0), Import([alias('multifile', None)], lineno=83, col_offset=0), Import([alias('shutil', None)], lineno=84, col_offset=0), ImportFrom('bisect', [alias('bisect', None)], 0, lineno=85, col_offset=0), Assign([Name('__all__', Store(), lineno=87, col_offset=0)], List([Str('MH', lineno=87, col_offset=11), Str('Error', lineno=87, col_offset=16), Str('Folder', lineno=87, col_offset=24), Str('Message', lineno=87, col_offset=33)], Load(), lineno=87, col_offset=10), lineno=87, col_offset=0), ClassDef('Error', [Name('Exception', Load(), lineno=91, col_offset=12)], [Pass( lineno=92, col_offset=4)], [], lineno=91, col_offset=0), ClassDef('MH', [], [Expr(Str('Class representing a particular collection of folders.\n    Optional constructor arguments are the pathname for the directory\n    containing the collection, and the MH profile to use.\n    If either is omitted or empty a default is used; the default\n    directory is taken from the MH profile if it is specified there.', lineno=100, col_offset=-1), lineno=100, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=102, col_offset=17), Name('path', Param(), lineno=102, col_offset=23), Name('profile', Param(), lineno=102, col_offset=36)], None, None, [Name('None', Load(), lineno=102, col_offset=30), Name('None', Load(), lineno=102, col_offset=46)]), [Expr(Str('Constructor.', lineno=103, col_offset=8), lineno=103, col_offset=8), If(Compare(Name('profile', Load(), lineno=104, col_offset=11), [Is()], [Name('None', Load(), lineno=104, col_offset=22)], lineno=104, col_offset=11), [Assign([Name('profile', Store(), lineno=104, col_offset=28)], Name('MH_PROFILE', Load(), lineno=104, col_offset=38), lineno=104, col_offset=28)], [], lineno=104, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=105, col_offset=8), 'profile', Store(), lineno=105, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=105, col_offset=23), 'path', Load(), lineno=105, col_offset=23), 'expanduser', Load(), lineno=105, col_offset=23), [Name('profile', Load(), lineno=105, col_offset=42)], [], None, None, lineno=105, col_offset=23), lineno=105, col_offset=8), If(Compare(Name('path', Load(), lineno=106, col_offset=11), [Is()], [Name('None', Load(), lineno=106, col_offset=19)], lineno=106, col_offset=11), [Assign([Name('path', Store(), lineno=106, col_offset=25)], Call(Attribute(Name('self', Load(), lineno=106, col_offset=32), 'getprofile', Load(), lineno=106, col_offset=32), [Str('Path', lineno=106, col_offset=48)], [], None, None, lineno=106, col_offset=32), lineno=106, col_offset=25)], [], lineno=106, col_offset=8), If(UnaryOp(Not(), Name('path', Load(), lineno=107, col_offset=15), lineno=107, col_offset=11), [Assign([Name('path', Store(), lineno=107, col_offset=21)], Name('PATH', Load(), lineno=107, col_offset=28), lineno=107, col_offset=21)], [], lineno=107, col_offset=8), If(BoolOp(And(), [UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=108, col_offset=15), 'path', Load(), lineno=108, col_offset=15), 'isabs', Load(), lineno=108, col_offset=15), [Name('path', Load(), lineno=108, col_offset=29)], [], None, None, lineno=108, col_offset=15), lineno=108, col_offset=11), Compare(Subscript(Name('path', Load(), lineno=108, col_offset=39), Index(Num(0, lineno=108, col_offset=44)), Load(), lineno=108, col_offset=39), [NotEq()], [Str('~', lineno=108, col_offset=50)], lineno=108, col_offset=39)], lineno=108, col_offset=11), [Assign([Name('path', Store(), lineno=109, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=109, col_offset=19), 'path', Load(), lineno=109, col_offset=19), 'join', Load(), lineno=109, col_offset=19), [Str('~', lineno=109, col_offset=32), Name('path', Load(), lineno=109, col_offset=37)], [], None, None, lineno=109, col_offset=19), lineno=109, col_offset=12)], [], lineno=108, col_offset=8), Assign([Name('path', Store(), lineno=110, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=110, col_offset=15), 'path', Load(), lineno=110, col_offset=15), 'expanduser', Load(), lineno=110, col_offset=15), [Name('path', Load(), lineno=110, col_offset=34)], [], None, None, lineno=110, col_offset=15), lineno=110, col_offset=8), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=111, col_offset=15), 'path', Load(), lineno=111, col_offset=15), 'isdir', Load(), lineno=111, col_offset=15), [Name('path', Load(), lineno=111, col_offset=29)], [], None, None, lineno=111, col_offset=15), lineno=111, col_offset=11), [Raise(Name('Error', Load(), lineno=111, col_offset=42), Str('MH() path not found', lineno=111, col_offset=49), None, lineno=111, col_offset=36)], [], lineno=111, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=112, col_offset=8), 'path', Store(), lineno=112, col_offset=8)], Name('path', Load(), lineno=112, col_offset=20), lineno=112, col_offset=8)], [], lineno=102, col_offset=4), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=114, col_offset=17)], None, None, []), [Expr(Str('String representation.', lineno=115, col_offset=8), lineno=115, col_offset=8), Return(BinOp(Str('MH(%r, %r)', lineno=116, col_offset=15), Mod(), Tuple([Attribute(Name('self', Load(), lineno=116, col_offset=31), 'path', Load(), lineno=116, col_offset=31), Attribute(Name('self', Load(), lineno=116, col_offset=42), 'profile', Load(), lineno=116, col_offset=42)], Load(), lineno=116, col_offset=31), lineno=116, col_offset=15), lineno=116, col_offset=8)], [], lineno=114, col_offset=4), FunctionDef('error', arguments([Name('self', Param(), lineno=118, col_offset=14), Name('msg', Param(), lineno=118, col_offset=20)], 'args', None, []), [Expr(Str('Routine to print an error.  May be overridden by a derived class.', lineno=119, col_offset=8), lineno=119, col_offset=8), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=120, col_offset=8), 'stderr', Load(), lineno=120, col_offset=8), 'write', Load(), lineno=120, col_offset=8), [BinOp(Str('MH error: %s\n', lineno=120, col_offset=25), Mod(), BinOp(Name('msg', Load(), lineno=120, col_offset=45), Mod(), Name('args', Load(), lineno=120, col_offset=51), lineno=120, col_offset=45), lineno=120, col_offset=25)], [], None, None, lineno=120, col_offset=8), lineno=120, col_offset=8)], [], lineno=118, col_offset=4), FunctionDef('getprofile', arguments([Name('self', Param(), lineno=122, col_offset=19), Name('key', Param(), lineno=122, col_offset=25)], None, None, []), [Expr(Str('Return a profile entry, None if not found.', lineno=123, col_offset=8), lineno=123, col_offset=8), Return(Call(Name('pickline', Load(), lineno=124, col_offset=15), [Attribute(Name('self', Load(), lineno=124, col_offset=24), 'profile', Load(), lineno=124, col_offset=24), Name('key', Load(), lineno=124, col_offset=38)], [], None, None, lineno=124, col_offset=15), lineno=124, col_offset=8)], [], lineno=122, col_offset=4), FunctionDef('getpath', arguments([Name('self', Param(), lineno=126, col_offset=16)], None, None, []), [Expr(Str("Return the path (the name of the collection's directory).", lineno=127, col_offset=8), lineno=127, col_offset=8), Return(Attribute(Name('self', Load(), lineno=128, col_offset=15), 'path', Load(), lineno=128, col_offset=15), lineno=128, col_offset=8)], [], lineno=126, col_offset=4), FunctionDef('getcontext', arguments([Name('self', Param(), lineno=130, col_offset=19)], None, None, []), [Expr(Str('Return the name of the current folder.', lineno=131, col_offset=8), lineno=131, col_offset=8), Assign([Name('context', Store(), lineno=132, col_offset=8)], Call(Name('pickline', Load(), lineno=132, col_offset=18), [Call(Attribute(Attribute(Name('os', Load(), lineno=132, col_offset=27), 'path', Load(), lineno=132, col_offset=27), 'join', Load(), lineno=132, col_offset=27), [Call(Attribute(Name('self', Load(), lineno=132, col_offset=40), 'getpath', Load(), lineno=132, col_offset=40), [], [], None, None, lineno=132, col_offset=40), Str('context', lineno=132, col_offset=56)], [], None, None, lineno=132, col_offset=27), Str('Current-Folder', lineno=133, col_offset=18)], [], None, None, lineno=132, col_offset=18), lineno=132, col_offset=8), If(UnaryOp(Not(), Name('context', Load(), lineno=134, col_offset=15), lineno=134, col_offset=11), [Assign([Name('context', Store(), lineno=134, col_offset=24)], Str('inbox', lineno=134, col_offset=34), lineno=134, col_offset=24)], [], lineno=134, col_offset=8), Return(Name('context', Load(), lineno=135, col_offset=15), lineno=135, col_offset=8)], [], lineno=130, col_offset=4), FunctionDef('setcontext', arguments([Name('self', Param(), lineno=137, col_offset=19), Name('context', Param(), lineno=137, col_offset=25)], None, None, []), [Expr(Str('Set the name of the current folder.', lineno=138, col_offset=8), lineno=138, col_offset=8), Assign([Name('fn', Store(), lineno=139, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=139, col_offset=13), 'path', Load(), lineno=139, col_offset=13), 'join', Load(), lineno=139, col_offset=13), [Call(Attribute(Name('self', Load(), lineno=139, col_offset=26), 'getpath', Load(), lineno=139, col_offset=26), [], [], None, None, lineno=139, col_offset=26), Str('context', lineno=139, col_offset=42)], [], None, None, lineno=139, col_offset=13), lineno=139, col_offset=8), Assign([Name('f', Store(), lineno=140, col_offset=8)], Call(Name('open', Load(), lineno=140, col_offset=12), [Name('fn', Load(), lineno=140, col_offset=17), Str('w', lineno=140, col_offset=21)], [], None, None, lineno=140, col_offset=12), lineno=140, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=141, col_offset=8), 'write', Load(), lineno=141, col_offset=8), [BinOp(Str('Current-Folder: %s\n', lineno=141, col_offset=16), Mod(), Name('context', Load(), lineno=141, col_offset=41), lineno=141, col_offset=16)], [], None, None, lineno=141, col_offset=8), lineno=141, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=142, col_offset=8), 'close', Load(), lineno=142, col_offset=8), [], [], None, None, lineno=142, col_offset=8), lineno=142, col_offset=8)], [], lineno=137, col_offset=4), FunctionDef('listfolders', arguments([Name('self', Param(), lineno=144, col_offset=20)], None, None, []), [Expr(Str('Return the names of the top-level folders.', lineno=145, col_offset=8), lineno=145, col_offset=8), Assign([Name('folders', Store(), lineno=146, col_offset=8)], List([], Load(), lineno=146, col_offset=18), lineno=146, col_offset=8), Assign([Name('path', Store(), lineno=147, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=147, col_offset=15), 'getpath', Load(), lineno=147, col_offset=15), [], [], None, None, lineno=147, col_offset=15), lineno=147, col_offset=8), For(Name('name', Store(), lineno=148, col_offset=12), Call(Attribute(Name('os', Load(), lineno=148, col_offset=20), 'listdir', Load(), lineno=148, col_offset=20), [Name('path', Load(), lineno=148, col_offset=31)], [], None, None, lineno=148, col_offset=20), [Assign([Name('fullname', Store(), lineno=149, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=149, col_offset=23), 'path', Load(), lineno=149, col_offset=23), 'join', Load(), lineno=149, col_offset=23), [Name('path', Load(), lineno=149, col_offset=36), Name('name', Load(), lineno=149, col_offset=42)], [], None, None, lineno=149, col_offset=23), lineno=149, col_offset=12), If(Call(Attribute(Attribute(Name('os', Load(), lineno=150, col_offset=15), 'path', Load(), lineno=150, col_offset=15), 'isdir', Load(), lineno=150, col_offset=15), [Name('fullname', Load(), lineno=150, col_offset=29)], [], None, None, lineno=150, col_offset=15), [Expr(Call(Attribute(Name('folders', Load(), lineno=151, col_offset=16), 'append', Load(), lineno=151, col_offset=16), [Name('name', Load(), lineno=151, col_offset=31)], [], None, None, lineno=151, col_offset=16), lineno=151, col_offset=16)], [], lineno=150, col_offset=12)], [], lineno=148, col_offset=8), Expr(Call(Attribute(Name('folders', Load(), lineno=152, col_offset=8), 'sort', Load(), lineno=152, col_offset=8), [], [], None, None, lineno=152, col_offset=8), lineno=152, col_offset=8), Return(Name('folders', Load(), lineno=153, col_offset=15), lineno=153, col_offset=8)], [], lineno=144, col_offset=4), FunctionDef('listsubfolders', arguments([Name('self', Param(), lineno=155, col_offset=23), Name('name', Param(), lineno=155, col_offset=29)], None, None, []), [Expr(Str('Return the names of the subfolders in a given folder\n        (prefixed with the given folder name).', lineno=157, col_offset=-1), lineno=157, col_offset=-1), Assign([Name('fullname', Store(), lineno=158, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=158, col_offset=19), 'path', Load(), lineno=158, col_offset=19), 'join', Load(), lineno=158, col_offset=19), [Attribute(Name('self', Load(), lineno=158, col_offset=32), 'path', Load(), lineno=158, col_offset=32), Name('name', Load(), lineno=158, col_offset=43)], [], None, None, lineno=158, col_offset=19), lineno=158, col_offset=8), Assign([Name('nlinks', Store(), lineno=161, col_offset=8)], Attribute(Call(Attribute(Name('os', Load(), lineno=161, col_offset=17), 'stat', Load(), lineno=161, col_offset=17), [Name('fullname', Load(), lineno=161, col_offset=25)], [], None, None, lineno=161, col_offset=17), 'st_nlink', Load(), lineno=161, col_offset=17), lineno=161, col_offset=8), If(Compare(Name('nlinks', Load(), lineno=162, col_offset=11), [LtE()], [Num(2, lineno=162, col_offset=21)], lineno=162, col_offset=11), [Return(List([], Load(), lineno=163, col_offset=19), lineno=163, col_offset=12)], [], lineno=162, col_offset=8), Assign([Name('subfolders', Store(), lineno=164, col_offset=8)], List([], Load(), lineno=164, col_offset=21), lineno=164, col_offset=8), Assign([Name('subnames', Store(), lineno=165, col_offset=8)], Call(Attribute(Name('os', Load(), lineno=165, col_offset=19), 'listdir', Load(), lineno=165, col_offset=19), [Name('fullname', Load(), lineno=165, col_offset=30)], [], None, None, lineno=165, col_offset=19), lineno=165, col_offset=8), For(Name('subname', Store(), lineno=166, col_offset=12), Name('subnames', Load(), lineno=166, col_offset=23), [Assign([Name('fullsubname', Store(), lineno=167, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=167, col_offset=26), 'path', Load(), lineno=167, col_offset=26), 'join', Load(), lineno=167, col_offset=26), [Name('fullname', Load(), lineno=167, col_offset=39), Name('subname', Load(), lineno=167, col_offset=49)], [], None, None, lineno=167, col_offset=26), lineno=167, col_offset=12), If(Call(Attribute(Attribute(Name('os', Load(), lineno=168, col_offset=15), 'path', Load(), lineno=168, col_offset=15), 'isdir', Load(), lineno=168, col_offset=15), [Name('fullsubname', Load(), lineno=168, col_offset=29)], [], None, None, lineno=168, col_offset=15), [Assign([Name('name_subname', Store(), lineno=169, col_offset=16)], Call(Attribute(Attribute(Name('os', Load(), lineno=169, col_offset=31), 'path', Load(), lineno=169, col_offset=31), 'join', Load(), lineno=169, col_offset=31), [Name('name', Load(), lineno=169, col_offset=44), Name('subname', Load(), lineno=169, col_offset=50)], [], None, None, lineno=169, col_offset=31), lineno=169, col_offset=16), Expr(Call(Attribute(Name('subfolders', Load(), lineno=170, col_offset=16), 'append', Load(), lineno=170, col_offset=16), [Name('name_subname', Load(), lineno=170, col_offset=34)], [], None, None, lineno=170, col_offset=16), lineno=170, col_offset=16), Assign([Name('nlinks', Store(), lineno=173, col_offset=16)], BinOp(Name('nlinks', Load(), lineno=173, col_offset=25), Sub(), Num(1, lineno=173, col_offset=34), lineno=173, col_offset=25), lineno=173, col_offset=16), If(Compare(Name('nlinks', Load(), lineno=174, col_offset=19), [LtE()], [Num(2, lineno=174, col_offset=29)], lineno=174, col_offset=19), [Break( lineno=175, col_offset=20)], [], lineno=174, col_offset=16)], [], lineno=168, col_offset=12)], [], lineno=166, col_offset=8), Expr(Call(Attribute(Name('subfolders', Load(), lineno=176, col_offset=8), 'sort', Load(), lineno=176, col_offset=8), [], [], None, None, lineno=176, col_offset=8), lineno=176, col_offset=8), Return(Name('subfolders', Load(), lineno=177, col_offset=15), lineno=177, col_offset=8)], [], lineno=155, col_offset=4), FunctionDef('listallfolders', arguments([Name('self', Param(), lineno=179, col_offset=23)], None, None, []), [Expr(Str('Return the names of all folders and subfolders, recursively.', lineno=180, col_offset=8), lineno=180, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=181, col_offset=15), 'listallsubfolders', Load(), lineno=181, col_offset=15), [Str('', lineno=181, col_offset=38)], [], None, None, lineno=181, col_offset=15), lineno=181, col_offset=8)], [], lineno=179, col_offset=4), FunctionDef('listallsubfolders', arguments([Name('self', Param(), lineno=183, col_offset=26), Name('name', Param(), lineno=183, col_offset=32)], None, None, []), [Expr(Str('Return the names of subfolders in a given folder, recursively.', lineno=184, col_offset=8), lineno=184, col_offset=8), Assign([Name('fullname', Store(), lineno=185, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=185, col_offset=19), 'path', Load(), lineno=185, col_offset=19), 'join', Load(), lineno=185, col_offset=19), [Attribute(Name('self', Load(), lineno=185, col_offset=32), 'path', Load(), lineno=185, col_offset=32), Name('name', Load(), lineno=185, col_offset=43)], [], None, None, lineno=185, col_offset=19), lineno=185, col_offset=8), Assign([Name('nlinks', Store(), lineno=188, col_offset=8)], Attribute(Call(Attribute(Name('os', Load(), lineno=188, col_offset=17), 'stat', Load(), lineno=188, col_offset=17), [Name('fullname', Load(), lineno=188, col_offset=25)], [], None, None, lineno=188, col_offset=17), 'st_nlink', Load(), lineno=188, col_offset=17), lineno=188, col_offset=8), If(Compare(Name('nlinks', Load(), lineno=189, col_offset=11), [LtE()], [Num(2, lineno=189, col_offset=21)], lineno=189, col_offset=11), [Return(List([], Load(), lineno=190, col_offset=19), lineno=190, col_offset=12)], [], lineno=189, col_offset=8), Assign([Name('subfolders', Store(), lineno=191, col_offset=8)], List([], Load(), lineno=191, col_offset=21), lineno=191, col_offset=8), Assign([Name('subnames', Store(), lineno=192, col_offset=8)], Call(Attribute(Name('os', Load(), lineno=192, col_offset=19), 'listdir', Load(), lineno=192, col_offset=19), [Name('fullname', Load(), lineno=192, col_offset=30)], [], None, None, lineno=192, col_offset=19), lineno=192, col_offset=8), For(Name('subname', Store(), lineno=193, col_offset=12), Name('subnames', Load(), lineno=193, col_offset=23), [If(BoolOp(Or(), [Compare(Subscript(Name('subname', Load(), lineno=194, col_offset=15), Index(Num(0, lineno=194, col_offset=23)), Load(), lineno=194, col_offset=15), [Eq()], [Str(',', lineno=194, col_offset=29)], lineno=194, col_offset=15), Call(Name('isnumeric', Load(), lineno=194, col_offset=36), [Name('subname', Load(), lineno=194, col_offset=46)], [], None, None, lineno=194, col_offset=36)], lineno=194, col_offset=15), [Continue( lineno=194, col_offset=56)], [], lineno=194, col_offset=12), Assign([Name('fullsubname', Store(), lineno=195, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=195, col_offset=26), 'path', Load(), lineno=195, col_offset=26), 'join', Load(), lineno=195, col_offset=26), [Name('fullname', Load(), lineno=195, col_offset=39), Name('subname', Load(), lineno=195, col_offset=49)], [], None, None, lineno=195, col_offset=26), lineno=195, col_offset=12), If(Call(Attribute(Attribute(Name('os', Load(), lineno=196, col_offset=15), 'path', Load(), lineno=196, col_offset=15), 'isdir', Load(), lineno=196, col_offset=15), [Name('fullsubname', Load(), lineno=196, col_offset=29)], [], None, None, lineno=196, col_offset=15), [Assign([Name('name_subname', Store(), lineno=197, col_offset=16)], Call(Attribute(Attribute(Name('os', Load(), lineno=197, col_offset=31), 'path', Load(), lineno=197, col_offset=31), 'join', Load(), lineno=197, col_offset=31), [Name('name', Load(), lineno=197, col_offset=44), Name('subname', Load(), lineno=197, col_offset=50)], [], None, None, lineno=197, col_offset=31), lineno=197, col_offset=16), Expr(Call(Attribute(Name('subfolders', Load(), lineno=198, col_offset=16), 'append', Load(), lineno=198, col_offset=16), [Name('name_subname', Load(), lineno=198, col_offset=34)], [], None, None, lineno=198, col_offset=16), lineno=198, col_offset=16), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=199, col_offset=23), 'path', Load(), lineno=199, col_offset=23), 'islink', Load(), lineno=199, col_offset=23), [Name('fullsubname', Load(), lineno=199, col_offset=38)], [], None, None, lineno=199, col_offset=23), lineno=199, col_offset=19), [Assign([Name('subsubfolders', Store(), lineno=200, col_offset=20)], Call(Attribute(Name('self', Load(), lineno=200, col_offset=36), 'listallsubfolders', Load(), lineno=200, col_offset=36), [Name('name_subname', Load(), lineno=201, col_offset=30)], [], None, None, lineno=200, col_offset=36), lineno=200, col_offset=20), Assign([Name('subfolders', Store(), lineno=202, col_offset=20)], BinOp(Name('subfolders', Load(), lineno=202, col_offset=33), Add(), Name('subsubfolders', Load(), lineno=202, col_offset=46), lineno=202, col_offset=33), lineno=202, col_offset=20)], [], lineno=199, col_offset=16), Assign([Name('nlinks', Store(), lineno=205, col_offset=16)], BinOp(Name('nlinks', Load(), lineno=205, col_offset=25), Sub(), Num(1, lineno=205, col_offset=34), lineno=205, col_offset=25), lineno=205, col_offset=16), If(Compare(Name('nlinks', Load(), lineno=206, col_offset=19), [LtE()], [Num(2, lineno=206, col_offset=29)], lineno=206, col_offset=19), [Break( lineno=207, col_offset=20)], [], lineno=206, col_offset=16)], [], lineno=196, col_offset=12)], [], lineno=193, col_offset=8), Expr(Call(Attribute(Name('subfolders', Load(), lineno=208, col_offset=8), 'sort', Load(), lineno=208, col_offset=8), [], [], None, None, lineno=208, col_offset=8), lineno=208, col_offset=8), Return(Name('subfolders', Load(), lineno=209, col_offset=15), lineno=209, col_offset=8)], [], lineno=183, col_offset=4), FunctionDef('openfolder', arguments([Name('self', Param(), lineno=211, col_offset=19), Name('name', Param(), lineno=211, col_offset=25)], None, None, []), [Expr(Str('Return a new Folder object for the named folder.', lineno=212, col_offset=8), lineno=212, col_offset=8), Return(Call(Name('Folder', Load(), lineno=213, col_offset=15), [Name('self', Load(), lineno=213, col_offset=22), Name('name', Load(), lineno=213, col_offset=28)], [], None, None, lineno=213, col_offset=15), lineno=213, col_offset=8)], [], lineno=211, col_offset=4), FunctionDef('makefolder', arguments([Name('self', Param(), lineno=215, col_offset=19), Name('name', Param(), lineno=215, col_offset=25)], None, None, []), [Expr(Str('Create a new folder (or raise os.error if it cannot be created).', lineno=216, col_offset=8), lineno=216, col_offset=8), Assign([Name('protect', Store(), lineno=217, col_offset=8)], Call(Name('pickline', Load(), lineno=217, col_offset=18), [Attribute(Name('self', Load(), lineno=217, col_offset=27), 'profile', Load(), lineno=217, col_offset=27), Str('Folder-Protect', lineno=217, col_offset=41)], [], None, None, lineno=217, col_offset=18), lineno=217, col_offset=8), If(BoolOp(And(), [Name('protect', Load(), lineno=218, col_offset=11), Call(Name('isnumeric', Load(), lineno=218, col_offset=23), [Name('protect', Load(), lineno=218, col_offset=33)], [], None, None, lineno=218, col_offset=23)], lineno=218, col_offset=11), [Assign([Name('mode', Store(), lineno=219, col_offset=12)], Call(Name('int', Load(), lineno=219, col_offset=19), [Name('protect', Load(), lineno=219, col_offset=23), Num(8, lineno=219, col_offset=32)], [], None, None, lineno=219, col_offset=19), lineno=219, col_offset=12)], [Assign([Name('mode', Store(), lineno=221, col_offset=12)], Name('FOLDER_PROTECT', Load(), lineno=221, col_offset=19), lineno=221, col_offset=12)], lineno=218, col_offset=8), Expr(Call(Attribute(Name('os', Load(), lineno=222, col_offset=8), 'mkdir', Load(), lineno=222, col_offset=8), [Call(Attribute(Attribute(Name('os', Load(), lineno=222, col_offset=17), 'path', Load(), lineno=222, col_offset=17), 'join', Load(), lineno=222, col_offset=17), [Call(Attribute(Name('self', Load(), lineno=222, col_offset=30), 'getpath', Load(), lineno=222, col_offset=30), [], [], None, None, lineno=222, col_offset=30), Name('name', Load(), lineno=222, col_offset=46)], [], None, None, lineno=222, col_offset=17), Name('mode', Load(), lineno=222, col_offset=53)], [], None, None, lineno=222, col_offset=8), lineno=222, col_offset=8)], [], lineno=215, col_offset=4), FunctionDef('deletefolder', arguments([Name('self', Param(), lineno=224, col_offset=21), Name('name', Param(), lineno=224, col_offset=27)], None, None, []), [Expr(Str('Delete a folder.  This removes files in the folder but not\n        subdirectories.  Raise os.error if deleting the folder itself fails.', lineno=226, col_offset=-1), lineno=226, col_offset=-1), Assign([Name('fullname', Store(), lineno=227, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=227, col_offset=19), 'path', Load(), lineno=227, col_offset=19), 'join', Load(), lineno=227, col_offset=19), [Call(Attribute(Name('self', Load(), lineno=227, col_offset=32), 'getpath', Load(), lineno=227, col_offset=32), [], [], None, None, lineno=227, col_offset=32), Name('name', Load(), lineno=227, col_offset=48)], [], None, None, lineno=227, col_offset=19), lineno=227, col_offset=8), For(Name('subname', Store(), lineno=228, col_offset=12), Call(Attribute(Name('os', Load(), lineno=228, col_offset=23), 'listdir', Load(), lineno=228, col_offset=23), [Name('fullname', Load(), lineno=228, col_offset=34)], [], None, None, lineno=228, col_offset=23), [Assign([Name('fullsubname', Store(), lineno=229, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=229, col_offset=26), 'path', Load(), lineno=229, col_offset=26), 'join', Load(), lineno=229, col_offset=26), [Name('fullname', Load(), lineno=229, col_offset=39), Name('subname', Load(), lineno=229, col_offset=49)], [], None, None, lineno=229, col_offset=26), lineno=229, col_offset=12), TryExcept([Expr(Call(Attribute(Name('os', Load(), lineno=231, col_offset=16), 'unlink', Load(), lineno=231, col_offset=16), [Name('fullsubname', Load(), lineno=231, col_offset=26)], [], None, None, lineno=231, col_offset=16), lineno=231, col_offset=16)], [ExceptHandler(Attribute(Name('os', Load(), lineno=232, col_offset=19), 'error', Load(), lineno=232, col_offset=19), None, [Expr(Call(Attribute(Name('self', Load(), lineno=233, col_offset=16), 'error', Load(), lineno=233, col_offset=16), [BinOp(Str('%s not deleted, continuing...', lineno=233, col_offset=27), Mod(), Name('fullsubname', Load(), lineno=234, col_offset=26), lineno=233, col_offset=27)], [], None, None, lineno=233, col_offset=16), lineno=233, col_offset=16)], lineno=232, col_offset=12)], [], lineno=230, col_offset=12)], [], lineno=228, col_offset=8), Expr(Call(Attribute(Name('os', Load(), lineno=235, col_offset=8), 'rmdir', Load(), lineno=235, col_offset=8), [Name('fullname', Load(), lineno=235, col_offset=17)], [], None, None, lineno=235, col_offset=8), lineno=235, col_offset=8)], [], lineno=224, col_offset=4)], [], lineno=95, col_offset=0), Assign([Name('numericprog', Store(), lineno=238, col_offset=0)], Call(Attribute(Name('re', Load(), lineno=238, col_offset=14), 'compile', Load(), lineno=238, col_offset=14), [Str('^[1-9][0-9]*$', lineno=238, col_offset=25)], [], None, None, lineno=238, col_offset=14), lineno=238, col_offset=0), FunctionDef('isnumeric', arguments([Name('str', Param(), lineno=239, col_offset=14)], None, None, []), [Return(Compare(Call(Attribute(Name('numericprog', Load(), lineno=240, col_offset=11), 'match', Load(), lineno=240, col_offset=11), [Name('str', Load(), lineno=240, col_offset=29)], [], None, None, lineno=240, col_offset=11), [IsNot()], [Name('None', Load(), lineno=240, col_offset=41)], lineno=240, col_offset=11), lineno=240, col_offset=4)], [], lineno=239, col_offset=0), ClassDef('Folder', [], [Expr(Str('Class representing a particular folder.', lineno=243, col_offset=4), lineno=243, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=245, col_offset=17), Name('mh', Param(), lineno=245, col_offset=23), Name('name', Param(), lineno=245, col_offset=27)], None, None, []), [Expr(Str('Constructor.', lineno=246, col_offset=8), lineno=246, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=247, col_offset=8), 'mh', Store(), lineno=247, col_offset=8)], Name('mh', Load(), lineno=247, col_offset=18), lineno=247, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=248, col_offset=8), 'name', Store(), lineno=248, col_offset=8)], Name('name', Load(), lineno=248, col_offset=20), lineno=248, col_offset=8), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=249, col_offset=15), 'path', Load(), lineno=249, col_offset=15), 'isdir', Load(), lineno=249, col_offset=15), [Call(Attribute(Name('self', Load(), lineno=249, col_offset=29), 'getfullname', Load(), lineno=249, col_offset=29), [], [], None, None, lineno=249, col_offset=29)], [], None, None, lineno=249, col_offset=15), lineno=249, col_offset=11), [Raise(Name('Error', Load(), lineno=250, col_offset=18), BinOp(Str('no folder %s', lineno=250, col_offset=25), Mod(), Name('name', Load(), lineno=250, col_offset=42), lineno=250, col_offset=25), None, lineno=250, col_offset=12)], [], lineno=249, col_offset=8)], [], lineno=245, col_offset=4), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=252, col_offset=17)], None, None, []), [Expr(Str('String representation.', lineno=253, col_offset=8), lineno=253, col_offset=8), Return(BinOp(Str('Folder(%r, %r)', lineno=254, col_offset=15), Mod(), Tuple([Attribute(Name('self', Load(), lineno=254, col_offset=35), 'mh', Load(), lineno=254, col_offset=35), Attribute(Name('self', Load(), lineno=254, col_offset=44), 'name', Load(), lineno=254, col_offset=44)], Load(), lineno=254, col_offset=35), lineno=254, col_offset=15), lineno=254, col_offset=8)], [], lineno=252, col_offset=4), FunctionDef('error', arguments([Name('self', Param(), lineno=256, col_offset=14)], 'args', None, []), [Expr(Str('Error message handler.', lineno=257, col_offset=8), lineno=257, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=258, col_offset=8), 'mh', Load(), lineno=258, col_offset=8), 'error', Load(), lineno=258, col_offset=8), [], [], Name('args', Load(), lineno=258, col_offset=23), None, lineno=258, col_offset=8), lineno=258, col_offset=8)], [], lineno=256, col_offset=4), FunctionDef('getfullname', arguments([Name('self', Param(), lineno=260, col_offset=20)], None, None, []), [Expr(Str('Return the full pathname of the folder.', lineno=261, col_offset=8), lineno=261, col_offset=8), Return(Call(Attribute(Attribute(Name('os', Load(), lineno=262, col_offset=15), 'path', Load(), lineno=262, col_offset=15), 'join', Load(), lineno=262, col_offset=15), [Attribute(Attribute(Name('self', Load(), lineno=262, col_offset=28), 'mh', Load(), lineno=262, col_offset=28), 'path', Load(), lineno=262, col_offset=28), Attribute(Name('self', Load(), lineno=262, col_offset=42), 'name', Load(), lineno=262, col_offset=42)], [], None, None, lineno=262, col_offset=15), lineno=262, col_offset=8)], [], lineno=260, col_offset=4), FunctionDef('getsequencesfilename', arguments([Name('self', Param(), lineno=264, col_offset=29)], None, None, []), [Expr(Str("Return the full pathname of the folder's sequences file.", lineno=265, col_offset=8), lineno=265, col_offset=8), Return(Call(Attribute(Attribute(Name('os', Load(), lineno=266, col_offset=15), 'path', Load(), lineno=266, col_offset=15), 'join', Load(), lineno=266, col_offset=15), [Call(Attribute(Name('self', Load(), lineno=266, col_offset=28), 'getfullname', Load(), lineno=266, col_offset=28), [], [], None, None, lineno=266, col_offset=28), Name('MH_SEQUENCES', Load(), lineno=266, col_offset=48)], [], None, None, lineno=266, col_offset=15), lineno=266, col_offset=8)], [], lineno=264, col_offset=4), FunctionDef('getmessagefilename', arguments([Name('self', Param(), lineno=268, col_offset=27), Name('n', Param(), lineno=268, col_offset=33)], None, None, []), [Expr(Str('Return the full pathname of a message in the folder.', lineno=269, col_offset=8), lineno=269, col_offset=8), Return(Call(Attribute(Attribute(Name('os', Load(), lineno=270, col_offset=15), 'path', Load(), lineno=270, col_offset=15), 'join', Load(), lineno=270, col_offset=15), [Call(Attribute(Name('self', Load(), lineno=270, col_offset=28), 'getfullname', Load(), lineno=270, col_offset=28), [], [], None, None, lineno=270, col_offset=28), Call(Name('str', Load(), lineno=270, col_offset=48), [Name('n', Load(), lineno=270, col_offset=52)], [], None, None, lineno=270, col_offset=48)], [], None, None, lineno=270, col_offset=15), lineno=270, col_offset=8)], [], lineno=268, col_offset=4), FunctionDef('listsubfolders', arguments([Name('self', Param(), lineno=272, col_offset=23)], None, None, []), [Expr(Str('Return list of direct subfolders.', lineno=273, col_offset=8), lineno=273, col_offset=8), Return(Call(Attribute(Attribute(Name('self', Load(), lineno=274, col_offset=15), 'mh', Load(), lineno=274, col_offset=15), 'listsubfolders', Load(), lineno=274, col_offset=15), [Attribute(Name('self', Load(), lineno=274, col_offset=38), 'name', Load(), lineno=274, col_offset=38)], [], None, None, lineno=274, col_offset=15), lineno=274, col_offset=8)], [], lineno=272, col_offset=4), FunctionDef('listallsubfolders', arguments([Name('self', Param(), lineno=276, col_offset=26)], None, None, []), [Expr(Str('Return list of all subfolders.', lineno=277, col_offset=8), lineno=277, col_offset=8), Return(Call(Attribute(Attribute(Name('self', Load(), lineno=278, col_offset=15), 'mh', Load(), lineno=278, col_offset=15), 'listallsubfolders', Load(), lineno=278, col_offset=15), [Attribute(Name('self', Load(), lineno=278, col_offset=41), 'name', Load(), lineno=278, col_offset=41)], [], None, None, lineno=278, col_offset=15), lineno=278, col_offset=8)], [], lineno=276, col_offset=4), FunctionDef('listmessages', arguments([Name('self', Param(), lineno=280, col_offset=21)], None, None, []), [Expr(Str('Return the list of messages currently present in the folder.\n        As a side effect, set self.last to the last message (or 0).', lineno=282, col_offset=-1), lineno=282, col_offset=-1), Assign([Name('messages', Store(), lineno=283, col_offset=8)], List([], Load(), lineno=283, col_offset=19), lineno=283, col_offset=8), Assign([Name('match', Store(), lineno=284, col_offset=8)], Attribute(Name('numericprog', Load(), lineno=284, col_offset=16), 'match', Load(), lineno=284, col_offset=16), lineno=284, col_offset=8), Assign([Name('append', Store(), lineno=285, col_offset=8)], Attribute(Name('messages', Load(), lineno=285, col_offset=17), 'append', Load(), lineno=285, col_offset=17), lineno=285, col_offset=8), For(Name('name', Store(), lineno=286, col_offset=12), Call(Attribute(Name('os', Load(), lineno=286, col_offset=20), 'listdir', Load(), lineno=286, col_offset=20), [Call(Attribute(Name('self', Load(), lineno=286, col_offset=31), 'getfullname', Load(), lineno=286, col_offset=31), [], [], None, None, lineno=286, col_offset=31)], [], None, None, lineno=286, col_offset=20), [If(Call(Name('match', Load(), lineno=287, col_offset=15), [Name('name', Load(), lineno=287, col_offset=21)], [], None, None, lineno=287, col_offset=15), [Expr(Call(Name('append', Load(), lineno=288, col_offset=16), [Name('name', Load(), lineno=288, col_offset=23)], [], None, None, lineno=288, col_offset=16), lineno=288, col_offset=16)], [], lineno=287, col_offset=12)], [], lineno=286, col_offset=8), Assign([Name('messages', Store(), lineno=289, col_offset=8)], Call(Name('map', Load(), lineno=289, col_offset=19), [Name('int', Load(), lineno=289, col_offset=23), Name('messages', Load(), lineno=289, col_offset=28)], [], None, None, lineno=289, col_offset=19), lineno=289, col_offset=8), Expr(Call(Attribute(Name('messages', Load(), lineno=290, col_offset=8), 'sort', Load(), lineno=290, col_offset=8), [], [], None, None, lineno=290, col_offset=8), lineno=290, col_offset=8), If(Name('messages', Load(), lineno=291, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=292, col_offset=12), 'last', Store(), lineno=292, col_offset=12)], Subscript(Name('messages', Load(), lineno=292, col_offset=24), Index(Num(-1, lineno=292, col_offset=34)), Load(), lineno=292, col_offset=24), lineno=292, col_offset=12)], [Assign([Attribute(Name('self', Load(), lineno=294, col_offset=12), 'last', Store(), lineno=294, col_offset=12)], Num(0, lineno=294, col_offset=24), lineno=294, col_offset=12)], lineno=291, col_offset=8), Return(Name('messages', Load(), lineno=295, col_offset=15), lineno=295, col_offset=8)], [], lineno=280, col_offset=4), FunctionDef('getsequences', arguments([Name('self', Param(), lineno=297, col_offset=21)], None, None, []), [Expr(Str('Return the set of sequences for the folder.', lineno=298, col_offset=8), lineno=298, col_offset=8), Assign([Name('sequences', Store(), lineno=299, col_offset=8)], Dict([], [], lineno=299, col_offset=20), lineno=299, col_offset=8), Assign([Name('fullname', Store(), lineno=300, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=300, col_offset=19), 'getsequencesfilename', Load(), lineno=300, col_offset=19), [], [], None, None, lineno=300, col_offset=19), lineno=300, col_offset=8), TryExcept([Assign([Name('f', Store(), lineno=302, col_offset=12)], Call(Name('open', Load(), lineno=302, col_offset=16), [Name('fullname', Load(), lineno=302, col_offset=21), Str('r', lineno=302, col_offset=31)], [], None, None, lineno=302, col_offset=16), lineno=302, col_offset=12)], [ExceptHandler(Name('IOError', Load(), lineno=303, col_offset=15), None, [Return(Name('sequences', Load(), lineno=304, col_offset=19), lineno=304, col_offset=12)], lineno=303, col_offset=8)], [], lineno=301, col_offset=8), While(Num(1, lineno=305, col_offset=14), [Assign([Name('line', Store(), lineno=306, col_offset=12)], Call(Attribute(Name('f', Load(), lineno=306, col_offset=19), 'readline', Load(), lineno=306, col_offset=19), [], [], None, None, lineno=306, col_offset=19), lineno=306, col_offset=12), If(UnaryOp(Not(), Name('line', Load(), lineno=307, col_offset=19), lineno=307, col_offset=15), [Break( lineno=307, col_offset=25)], [], lineno=307, col_offset=12), Assign([Name('fields', Store(), lineno=308, col_offset=12)], Call(Attribute(Name('line', Load(), lineno=308, col_offset=21), 'split', Load(), lineno=308, col_offset=21), [Str(':', lineno=308, col_offset=32)], [], None, None, lineno=308, col_offset=21), lineno=308, col_offset=12), If(Compare(Call(Name('len', Load(), lineno=309, col_offset=15), [Name('fields', Load(), lineno=309, col_offset=19)], [], None, None, lineno=309, col_offset=15), [NotEq()], [Num(2, lineno=309, col_offset=30)], lineno=309, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=310, col_offset=16), 'error', Load(), lineno=310, col_offset=16), [BinOp(Str('bad sequence in %s: %s', lineno=310, col_offset=27), Mod(), Tuple([Name('fullname', Load(), lineno=311, col_offset=27), Call(Attribute(Name('line', Load(), lineno=311, col_offset=37), 'strip', Load(), lineno=311, col_offset=37), [], [], None, None, lineno=311, col_offset=37)], Load(), lineno=311, col_offset=27), lineno=310, col_offset=27)], [], None, None, lineno=310, col_offset=16), lineno=310, col_offset=16)], [], lineno=309, col_offset=12), Assign([Name('key', Store(), lineno=312, col_offset=12)], Call(Attribute(Subscript(Name('fields', Load(), lineno=312, col_offset=18), Index(Num(0, lineno=312, col_offset=25)), Load(), lineno=312, col_offset=18), 'strip', Load(), lineno=312, col_offset=18), [], [], None, None, lineno=312, col_offset=18), lineno=312, col_offset=12), Assign([Name('value', Store(), lineno=313, col_offset=12)], Call(Attribute(Call(Name('IntSet', Load(), lineno=313, col_offset=20), [Call(Attribute(Subscript(Name('fields', Load(), lineno=313, col_offset=27), Index(Num(1, lineno=313, col_offset=34)), Load(), lineno=313, col_offset=27), 'strip', Load(), lineno=313, col_offset=27), [], [], None, None, lineno=313, col_offset=27), Str(' ', lineno=313, col_offset=46)], [], None, None, lineno=313, col_offset=20), 'tolist', Load(), lineno=313, col_offset=20), [], [], None, None, lineno=313, col_offset=20), lineno=313, col_offset=12), Assign([Subscript(Name('sequences', Load(), lineno=314, col_offset=12), Index(Name('key', Load(), lineno=314, col_offset=22)), Store(), lineno=314, col_offset=12)], Name('value', Load(), lineno=314, col_offset=29), lineno=314, col_offset=12)], [], lineno=305, col_offset=8), Return(Name('sequences', Load(), lineno=315, col_offset=15), lineno=315, col_offset=8)], [], lineno=297, col_offset=4), FunctionDef('putsequences', arguments([Name('self', Param(), lineno=317, col_offset=21), Name('sequences', Param(), lineno=317, col_offset=27)], None, None, []), [Expr(Str('Write the set of sequences back to the folder.', lineno=318, col_offset=8), lineno=318, col_offset=8), Assign([Name('fullname', Store(), lineno=319, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=319, col_offset=19), 'getsequencesfilename', Load(), lineno=319, col_offset=19), [], [], None, None, lineno=319, col_offset=19), lineno=319, col_offset=8), Assign([Name('f', Store(), lineno=320, col_offset=8)], Name('None', Load(), lineno=320, col_offset=12), lineno=320, col_offset=8), For(Tuple([Name('key', Store(), lineno=321, col_offset=12), Name('seq', Store(), lineno=321, col_offset=17)], Store(), lineno=321, col_offset=12), Call(Attribute(Name('sequences', Load(), lineno=321, col_offset=24), 'iteritems', Load(), lineno=321, col_offset=24), [], [], None, None, lineno=321, col_offset=24), [Assign([Name('s', Store(), lineno=322, col_offset=12)], Call(Name('IntSet', Load(), lineno=322, col_offset=16), [Str('', lineno=322, col_offset=23), Str(' ', lineno=322, col_offset=27)], [], None, None, lineno=322, col_offset=16), lineno=322, col_offset=12), Expr(Call(Attribute(Name('s', Load(), lineno=323, col_offset=12), 'fromlist', Load(), lineno=323, col_offset=12), [Name('seq', Load(), lineno=323, col_offset=23)], [], None, None, lineno=323, col_offset=12), lineno=323, col_offset=12), If(UnaryOp(Not(), Name('f', Load(), lineno=324, col_offset=19), lineno=324, col_offset=15), [Assign([Name('f', Store(), lineno=324, col_offset=22)], Call(Name('open', Load(), lineno=324, col_offset=26), [Name('fullname', Load(), lineno=324, col_offset=31), Str('w', lineno=324, col_offset=41)], [], None, None, lineno=324, col_offset=26), lineno=324, col_offset=22)], [], lineno=324, col_offset=12), Expr(Call(Attribute(Name('f', Load(), lineno=325, col_offset=12), 'write', Load(), lineno=325, col_offset=12), [BinOp(Str('%s: %s\n', lineno=325, col_offset=20), Mod(), Tuple([Name('key', Load(), lineno=325, col_offset=34), Call(Attribute(Name('s', Load(), lineno=325, col_offset=39), 'tostring', Load(), lineno=325, col_offset=39), [], [], None, None, lineno=325, col_offset=39)], Load(), lineno=325, col_offset=34), lineno=325, col_offset=20)], [], None, None, lineno=325, col_offset=12), lineno=325, col_offset=12)], [], lineno=321, col_offset=8), If(UnaryOp(Not(), Name('f', Load(), lineno=326, col_offset=15), lineno=326, col_offset=11), [TryExcept([Expr(Call(Attribute(Name('os', Load(), lineno=328, col_offset=16), 'unlink', Load(), lineno=328, col_offset=16), [Name('fullname', Load(), lineno=328, col_offset=26)], [], None, None, lineno=328, col_offset=16), lineno=328, col_offset=16)], [ExceptHandler(Attribute(Name('os', Load(), lineno=329, col_offset=19), 'error', Load(), lineno=329, col_offset=19), None, [Pass( lineno=330, col_offset=16)], lineno=329, col_offset=12)], [], lineno=327, col_offset=12)], [Expr(Call(Attribute(Name('f', Load(), lineno=332, col_offset=12), 'close', Load(), lineno=332, col_offset=12), [], [], None, None, lineno=332, col_offset=12), lineno=332, col_offset=12)], lineno=326, col_offset=8)], [], lineno=317, col_offset=4), FunctionDef('getcurrent', arguments([Name('self', Param(), lineno=334, col_offset=19)], None, None, []), [Expr(Str('Return the current message.  Raise Error when there is none.', lineno=335, col_offset=8), lineno=335, col_offset=8), Assign([Name('seqs', Store(), lineno=336, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=336, col_offset=15), 'getsequences', Load(), lineno=336, col_offset=15), [], [], None, None, lineno=336, col_offset=15), lineno=336, col_offset=8), TryExcept([Return(Call(Name('max', Load(), lineno=338, col_offset=19), [Subscript(Name('seqs', Load(), lineno=338, col_offset=23), Index(Str('cur', lineno=338, col_offset=28)), Load(), lineno=338, col_offset=23)], [], None, None, lineno=338, col_offset=19), lineno=338, col_offset=12)], [ExceptHandler(Tuple([Name('ValueError', Load(), lineno=339, col_offset=16), Name('KeyError', Load(), lineno=339, col_offset=28)], Load(), lineno=339, col_offset=16), None, [Raise(Name('Error', Load(), lineno=340, col_offset=18), Str('no cur message', lineno=340, col_offset=25), None, lineno=340, col_offset=12)], lineno=339, col_offset=8)], [], lineno=337, col_offset=8)], [], lineno=334, col_offset=4), FunctionDef('setcurrent', arguments([Name('self', Param(), lineno=342, col_offset=19), Name('n', Param(), lineno=342, col_offset=25)], None, None, []), [Expr(Str('Set the current message.', lineno=343, col_offset=8), lineno=343, col_offset=8), Expr(Call(Name('updateline', Load(), lineno=344, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=344, col_offset=19), 'getsequencesfilename', Load(), lineno=344, col_offset=19), [], [], None, None, lineno=344, col_offset=19), Str('cur', lineno=344, col_offset=48), Call(Name('str', Load(), lineno=344, col_offset=55), [Name('n', Load(), lineno=344, col_offset=59)], [], None, None, lineno=344, col_offset=55), Num(0, lineno=344, col_offset=63)], [], None, None, lineno=344, col_offset=8), lineno=344, col_offset=8)], [], lineno=342, col_offset=4), FunctionDef('parsesequence', arguments([Name('self', Param(), lineno=346, col_offset=22), Name('seq', Param(), lineno=346, col_offset=28)], None, None, []), [Expr(Str('Parse an MH sequence specification into a message list.\n        Attempt to mimic mh-sequence(5) as close as possible.\n        Also attempt to mimic observed behavior regarding which\n        conditions cause which error messages.', lineno=350, col_offset=-1), lineno=350, col_offset=-1), Assign([Name('all', Store(), lineno=355, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=355, col_offset=14), 'listmessages', Load(), lineno=355, col_offset=14), [], [], None, None, lineno=355, col_offset=14), lineno=355, col_offset=8), If(UnaryOp(Not(), Name('all', Load(), lineno=357, col_offset=15), lineno=357, col_offset=11), [Raise(Name('Error', Load(), lineno=358, col_offset=18), BinOp(Str('no messages in %s', lineno=358, col_offset=25), Mod(), Attribute(Name('self', Load(), lineno=358, col_offset=47), 'name', Load(), lineno=358, col_offset=47), lineno=358, col_offset=25), None, lineno=358, col_offset=12)], [], lineno=357, col_offset=8), If(Compare(Name('seq', Load(), lineno=360, col_offset=11), [Eq()], [Str('all', lineno=360, col_offset=18)], lineno=360, col_offset=11), [Return(Name('all', Load(), lineno=361, col_offset=19), lineno=361, col_offset=12)], [], lineno=360, col_offset=8), Assign([Name('i', Store(), lineno=363, col_offset=8)], Call(Attribute(Name('seq', Load(), lineno=363, col_offset=12), 'find', Load(), lineno=363, col_offset=12), [Str(':', lineno=363, col_offset=21)], [], None, None, lineno=363, col_offset=12), lineno=363, col_offset=8), If(Compare(Name('i', Load(), lineno=364, col_offset=11), [GtE()], [Num(0, lineno=364, col_offset=16)], lineno=364, col_offset=11), [Assign([Tuple([Name('head', Store(), lineno=365, col_offset=12), Name('dir', Store(), lineno=365, col_offset=18), Name('tail', Store(), lineno=365, col_offset=23)], Store(), lineno=365, col_offset=12)], Tuple([Subscript(Name('seq', Load(), lineno=365, col_offset=30), Slice(None, Name('i', Load(), lineno=365, col_offset=35), None), Load(), lineno=365, col_offset=30), Str('', lineno=365, col_offset=39), Subscript(Name('seq', Load(), lineno=365, col_offset=43), Slice(BinOp(Name('i', Load(), lineno=365, col_offset=47), Add(), Num(1, lineno=365, col_offset=49), lineno=365, col_offset=47), None, None), Load(), lineno=365, col_offset=43)], Load(), lineno=365, col_offset=30), lineno=365, col_offset=12), If(Compare(Subscript(Name('tail', Load(), lineno=366, col_offset=15), Slice(None, Num(1, lineno=366, col_offset=21), None), Load(), lineno=366, col_offset=15), [In()], [Str('-+', lineno=366, col_offset=27)], lineno=366, col_offset=15), [Assign([Tuple([Name('dir', Store(), lineno=367, col_offset=16), Name('tail', Store(), lineno=367, col_offset=21)], Store(), lineno=367, col_offset=16)], Tuple([Subscript(Name('tail', Load(), lineno=367, col_offset=28), Slice(None, Num(1, lineno=367, col_offset=34), None), Load(), lineno=367, col_offset=28), Subscript(Name('tail', Load(), lineno=367, col_offset=38), Slice(Num(1, lineno=367, col_offset=43), None, None), Load(), lineno=367, col_offset=38)], Load(), lineno=367, col_offset=28), lineno=367, col_offset=16)], [], lineno=366, col_offset=12), If(UnaryOp(Not(), Call(Name('isnumeric', Load(), lineno=368, col_offset=19), [Name('tail', Load(), lineno=368, col_offset=29)], [], None, None, lineno=368, col_offset=19), lineno=368, col_offset=15), [Raise(Name('Error', Load(), lineno=369, col_offset=22), BinOp(Str('bad message list %s', lineno=369, col_offset=29), Mod(), Name('seq', Load(), lineno=369, col_offset=53), lineno=369, col_offset=29), None, lineno=369, col_offset=16)], [], lineno=368, col_offset=12), TryExcept([Assign([Name('count', Store(), lineno=371, col_offset=16)], Call(Name('int', Load(), lineno=371, col_offset=24), [Name('tail', Load(), lineno=371, col_offset=28)], [], None, None, lineno=371, col_offset=24), lineno=371, col_offset=16)], [ExceptHandler(Tuple([Name('ValueError', Load(), lineno=372, col_offset=20), Name('OverflowError', Load(), lineno=372, col_offset=32)], Load(), lineno=372, col_offset=20), None, [Assign([Name('count', Store(), lineno=374, col_offset=16)], Call(Name('len', Load(), lineno=374, col_offset=24), [Name('all', Load(), lineno=374, col_offset=28)], [], None, None, lineno=374, col_offset=24), lineno=374, col_offset=16)], lineno=372, col_offset=12)], [], lineno=370, col_offset=12), TryExcept([Assign([Name('anchor', Store(), lineno=376, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=376, col_offset=25), '_parseindex', Load(), lineno=376, col_offset=25), [Name('head', Load(), lineno=376, col_offset=42), Name('all', Load(), lineno=376, col_offset=48)], [], None, None, lineno=376, col_offset=25), lineno=376, col_offset=16)], [ExceptHandler(Name('Error', Load(), lineno=377, col_offset=19), Name('msg', Store(), lineno=377, col_offset=26), [Assign([Name('seqs', Store(), lineno=378, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=378, col_offset=23), 'getsequences', Load(), lineno=378, col_offset=23), [], [], None, None, lineno=378, col_offset=23), lineno=378, col_offset=16), If(UnaryOp(Not(), Compare(Name('head', Load(), lineno=379, col_offset=23), [In()], [Name('seqs', Load(), lineno=379, col_offset=31)], lineno=379, col_offset=23), lineno=379, col_offset=19), [If(UnaryOp(Not(), Name('msg', Load(), lineno=380, col_offset=27), lineno=380, col_offset=23), [Assign([Name('msg', Store(), lineno=381, col_offset=24)], BinOp(Str('bad message list %s', lineno=381, col_offset=30), Mod(), Name('seq', Load(), lineno=381, col_offset=54), lineno=381, col_offset=30), lineno=381, col_offset=24)], [], lineno=380, col_offset=20), Raise(Name('Error', Load(), lineno=382, col_offset=26), Name('msg', Load(), lineno=382, col_offset=33), Subscript(Call(Attribute(Name('sys', Load(), lineno=382, col_offset=38), 'exc_info', Load(), lineno=382, col_offset=38), [], [], None, None, lineno=382, col_offset=38), Index(Num(2, lineno=382, col_offset=53)), Load(), lineno=382, col_offset=38), lineno=382, col_offset=20)], [], lineno=379, col_offset=16), Assign([Name('msgs', Store(), lineno=383, col_offset=16)], Subscript(Name('seqs', Load(), lineno=383, col_offset=23), Index(Name('head', Load(), lineno=383, col_offset=28)), Load(), lineno=383, col_offset=23), lineno=383, col_offset=16), If(UnaryOp(Not(), Name('msgs', Load(), lineno=384, col_offset=23), lineno=384, col_offset=19), [Raise(Name('Error', Load(), lineno=385, col_offset=26), BinOp(Str('sequence %s empty', lineno=385, col_offset=33), Mod(), Name('head', Load(), lineno=385, col_offset=55), lineno=385, col_offset=33), None, lineno=385, col_offset=20)], [], lineno=384, col_offset=16), If(Compare(Name('dir', Load(), lineno=386, col_offset=19), [Eq()], [Str('-', lineno=386, col_offset=26)], lineno=386, col_offset=19), [Return(Subscript(Name('msgs', Load(), lineno=387, col_offset=27), Slice(UnaryOp(USub(), Name('count', Load(), lineno=387, col_offset=33), lineno=387, col_offset=32), None, None), Load(), lineno=387, col_offset=27), lineno=387, col_offset=20)], [Return(Subscript(Name('msgs', Load(), lineno=389, col_offset=27), Slice(None, Name('count', Load(), lineno=389, col_offset=33), None), Load(), lineno=389, col_offset=27), lineno=389, col_offset=20)], lineno=386, col_offset=16)], lineno=377, col_offset=12)], [If(UnaryOp(Not(), Name('dir', Load(), lineno=391, col_offset=23), lineno=391, col_offset=19), [If(Compare(Name('head', Load(), lineno=392, col_offset=23), [In()], [Tuple([Str('prev', lineno=392, col_offset=32), Str('last', lineno=392, col_offset=40)], Load(), lineno=392, col_offset=32)], lineno=392, col_offset=23), [Assign([Name('dir', Store(), lineno=393, col_offset=24)], Str('-', lineno=393, col_offset=30), lineno=393, col_offset=24)], [], lineno=392, col_offset=20)], [], lineno=391, col_offset=16), If(Compare(Name('dir', Load(), lineno=394, col_offset=19), [Eq()], [Str('-', lineno=394, col_offset=26)], lineno=394, col_offset=19), [Assign([Name('i', Store(), lineno=395, col_offset=20)], Call(Name('bisect', Load(), lineno=395, col_offset=24), [Name('all', Load(), lineno=395, col_offset=31), Name('anchor', Load(), lineno=395, col_offset=36)], [], None, None, lineno=395, col_offset=24), lineno=395, col_offset=20), Return(Subscript(Name('all', Load(), lineno=396, col_offset=27), Slice(Call(Name('max', Load(), lineno=396, col_offset=31), [Num(0, lineno=396, col_offset=35), BinOp(Name('i', Load(), lineno=396, col_offset=38), Sub(), Name('count', Load(), lineno=396, col_offset=40), lineno=396, col_offset=38)], [], None, None, lineno=396, col_offset=31), Name('i', Load(), lineno=396, col_offset=47), None), Load(), lineno=396, col_offset=27), lineno=396, col_offset=20)], [Assign([Name('i', Store(), lineno=398, col_offset=20)], Call(Name('bisect', Load(), lineno=398, col_offset=24), [Name('all', Load(), lineno=398, col_offset=31), BinOp(Name('anchor', Load(), lineno=398, col_offset=36), Sub(), Num(1, lineno=398, col_offset=43), lineno=398, col_offset=36)], [], None, None, lineno=398, col_offset=24), lineno=398, col_offset=20), Return(Subscript(Name('all', Load(), lineno=399, col_offset=27), Slice(Name('i', Load(), lineno=399, col_offset=31), BinOp(Name('i', Load(), lineno=399, col_offset=33), Add(), Name('count', Load(), lineno=399, col_offset=35), lineno=399, col_offset=33), None), Load(), lineno=399, col_offset=27), lineno=399, col_offset=20)], lineno=394, col_offset=16)], lineno=375, col_offset=12)], [], lineno=364, col_offset=8), Assign([Name('i', Store(), lineno=401, col_offset=8)], Call(Attribute(Name('seq', Load(), lineno=401, col_offset=12), 'find', Load(), lineno=401, col_offset=12), [Str('-', lineno=401, col_offset=21)], [], None, None, lineno=401, col_offset=12), lineno=401, col_offset=8), If(Compare(Name('i', Load(), lineno=402, col_offset=11), [GtE()], [Num(0, lineno=402, col_offset=16)], lineno=402, col_offset=11), [Assign([Name('begin', Store(), lineno=403, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=403, col_offset=20), '_parseindex', Load(), lineno=403, col_offset=20), [Subscript(Name('seq', Load(), lineno=403, col_offset=37), Slice(None, Name('i', Load(), lineno=403, col_offset=42), None), Load(), lineno=403, col_offset=37), Name('all', Load(), lineno=403, col_offset=46)], [], None, None, lineno=403, col_offset=20), lineno=403, col_offset=12), Assign([Name('end', Store(), lineno=404, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=404, col_offset=18), '_parseindex', Load(), lineno=404, col_offset=18), [Subscript(Name('seq', Load(), lineno=404, col_offset=35), Slice(BinOp(Name('i', Load(), lineno=404, col_offset=39), Add(), Num(1, lineno=404, col_offset=41), lineno=404, col_offset=39), None, None), Load(), lineno=404, col_offset=35), Name('all', Load(), lineno=404, col_offset=46)], [], None, None, lineno=404, col_offset=18), lineno=404, col_offset=12), Assign([Name('i', Store(), lineno=405, col_offset=12)], Call(Name('bisect', Load(), lineno=405, col_offset=16), [Name('all', Load(), lineno=405, col_offset=23), BinOp(Name('begin', Load(), lineno=405, col_offset=28), Sub(), Num(1, lineno=405, col_offset=34), lineno=405, col_offset=28)], [], None, None, lineno=405, col_offset=16), lineno=405, col_offset=12), Assign([Name('j', Store(), lineno=406, col_offset=12)], Call(Name('bisect', Load(), lineno=406, col_offset=16), [Name('all', Load(), lineno=406, col_offset=23), Name('end', Load(), lineno=406, col_offset=28)], [], None, None, lineno=406, col_offset=16), lineno=406, col_offset=12), Assign([Name('r', Store(), lineno=407, col_offset=12)], Subscript(Name('all', Load(), lineno=407, col_offset=16), Slice(Name('i', Load(), lineno=407, col_offset=20), Name('j', Load(), lineno=407, col_offset=22), None), Load(), lineno=407, col_offset=16), lineno=407, col_offset=12), If(UnaryOp(Not(), Name('r', Load(), lineno=408, col_offset=19), lineno=408, col_offset=15), [Raise(Name('Error', Load(), lineno=409, col_offset=22), BinOp(Str('bad message list %s', lineno=409, col_offset=29), Mod(), Name('seq', Load(), lineno=409, col_offset=53), lineno=409, col_offset=29), None, lineno=409, col_offset=16)], [], lineno=408, col_offset=12), Return(Name('r', Load(), lineno=410, col_offset=19), lineno=410, col_offset=12)], [], lineno=402, col_offset=8), TryExcept([Assign([Name('n', Store(), lineno=413, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=413, col_offset=16), '_parseindex', Load(), lineno=413, col_offset=16), [Name('seq', Load(), lineno=413, col_offset=33), Name('all', Load(), lineno=413, col_offset=38)], [], None, None, lineno=413, col_offset=16), lineno=413, col_offset=12)], [ExceptHandler(Name('Error', Load(), lineno=414, col_offset=15), Name('msg', Store(), lineno=414, col_offset=22), [Assign([Name('seqs', Store(), lineno=415, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=415, col_offset=19), 'getsequences', Load(), lineno=415, col_offset=19), [], [], None, None, lineno=415, col_offset=19), lineno=415, col_offset=12), If(UnaryOp(Not(), Compare(Name('seq', Load(), lineno=416, col_offset=19), [In()], [Name('seqs', Load(), lineno=416, col_offset=26)], lineno=416, col_offset=19), lineno=416, col_offset=15), [If(UnaryOp(Not(), Name('msg', Load(), lineno=417, col_offset=23), lineno=417, col_offset=19), [Assign([Name('msg', Store(), lineno=418, col_offset=20)], BinOp(Str('bad message list %s', lineno=418, col_offset=26), Mod(), Name('seq', Load(), lineno=418, col_offset=50), lineno=418, col_offset=26), lineno=418, col_offset=20)], [], lineno=417, col_offset=16), Raise(Name('Error', Load(), lineno=419, col_offset=22), Name('msg', Load(), lineno=419, col_offset=29), None, lineno=419, col_offset=16)], [], lineno=416, col_offset=12), Return(Subscript(Name('seqs', Load(), lineno=420, col_offset=19), Index(Name('seq', Load(), lineno=420, col_offset=24)), Load(), lineno=420, col_offset=19), lineno=420, col_offset=12)], lineno=414, col_offset=8)], [If(Compare(Name('n', Load(), lineno=422, col_offset=15), [NotIn()], [Name('all', Load(), lineno=422, col_offset=24)], lineno=422, col_offset=15), [If(Call(Name('isnumeric', Load(), lineno=423, col_offset=19), [Name('seq', Load(), lineno=423, col_offset=29)], [], None, None, lineno=423, col_offset=19), [Raise(Name('Error', Load(), lineno=424, col_offset=26), BinOp(Str("message %d doesn't exist", lineno=424, col_offset=33), Mod(), Name('n', Load(), lineno=424, col_offset=62), lineno=424, col_offset=33), None, lineno=424, col_offset=20)], [Raise(Name('Error', Load(), lineno=426, col_offset=26), BinOp(Str('no %s message', lineno=426, col_offset=33), Mod(), Name('seq', Load(), lineno=426, col_offset=51), lineno=426, col_offset=33), None, lineno=426, col_offset=20)], lineno=423, col_offset=16)], [Return(List([Name('n', Load(), lineno=428, col_offset=24)], Load(), lineno=428, col_offset=23), lineno=428, col_offset=16)], lineno=422, col_offset=12)], lineno=412, col_offset=8)], [], lineno=346, col_offset=4), FunctionDef('_parseindex', arguments([Name('self', Param(), lineno=430, col_offset=20), Name('seq', Param(), lineno=430, col_offset=26), Name('all', Param(), lineno=430, col_offset=31)], None, None, []), [Expr(Str('Internal: parse a message number (or cur, first, etc.).', lineno=431, col_offset=8), lineno=431, col_offset=8), If(Call(Name('isnumeric', Load(), lineno=432, col_offset=11), [Name('seq', Load(), lineno=432, col_offset=21)], [], None, None, lineno=432, col_offset=11), [TryExcept([Return(Call(Name('int', Load(), lineno=434, col_offset=23), [Name('seq', Load(), lineno=434, col_offset=27)], [], None, None, lineno=434, col_offset=23), lineno=434, col_offset=16)], [ExceptHandler(Tuple([Name('OverflowError', Load(), lineno=435, col_offset=20), Name('ValueError', Load(), lineno=435, col_offset=35)], Load(), lineno=435, col_offset=20), None, [Return(Attribute(Name('sys', Load(), lineno=436, col_offset=23), 'maxint', Load(), lineno=436, col_offset=23), lineno=436, col_offset=16)], lineno=435, col_offset=12)], [], lineno=433, col_offset=12)], [], lineno=432, col_offset=8), If(Compare(Name('seq', Load(), lineno=437, col_offset=11), [In()], [Tuple([Str('cur', lineno=437, col_offset=19), Str('.', lineno=437, col_offset=26)], Load(), lineno=437, col_offset=19)], lineno=437, col_offset=11), [Return(Call(Attribute(Name('self', Load(), lineno=438, col_offset=19), 'getcurrent', Load(), lineno=438, col_offset=19), [], [], None, None, lineno=438, col_offset=19), lineno=438, col_offset=12)], [], lineno=437, col_offset=8), If(Compare(Name('seq', Load(), lineno=439, col_offset=11), [Eq()], [Str('first', lineno=439, col_offset=18)], lineno=439, col_offset=11), [Return(Subscript(Name('all', Load(), lineno=440, col_offset=19), Index(Num(0, lineno=440, col_offset=23)), Load(), lineno=440, col_offset=19), lineno=440, col_offset=12)], [], lineno=439, col_offset=8), If(Compare(Name('seq', Load(), lineno=441, col_offset=11), [Eq()], [Str('last', lineno=441, col_offset=18)], lineno=441, col_offset=11), [Return(Subscript(Name('all', Load(), lineno=442, col_offset=19), Index(Num(-1, lineno=442, col_offset=24)), Load(), lineno=442, col_offset=19), lineno=442, col_offset=12)], [], lineno=441, col_offset=8), If(Compare(Name('seq', Load(), lineno=443, col_offset=11), [Eq()], [Str('next', lineno=443, col_offset=18)], lineno=443, col_offset=11), [Assign([Name('n', Store(), lineno=444, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=444, col_offset=16), 'getcurrent', Load(), lineno=444, col_offset=16), [], [], None, None, lineno=444, col_offset=16), lineno=444, col_offset=12), Assign([Name('i', Store(), lineno=445, col_offset=12)], Call(Name('bisect', Load(), lineno=445, col_offset=16), [Name('all', Load(), lineno=445, col_offset=23), Name('n', Load(), lineno=445, col_offset=28)], [], None, None, lineno=445, col_offset=16), lineno=445, col_offset=12), TryExcept([Return(Subscript(Name('all', Load(), lineno=447, col_offset=23), Index(Name('i', Load(), lineno=447, col_offset=27)), Load(), lineno=447, col_offset=23), lineno=447, col_offset=16)], [ExceptHandler(Name('IndexError', Load(), lineno=448, col_offset=19), None, [Raise(Name('Error', Load(), lineno=449, col_offset=22), Str('no next message', lineno=449, col_offset=29), None, lineno=449, col_offset=16)], lineno=448, col_offset=12)], [], lineno=446, col_offset=12)], [], lineno=443, col_offset=8), If(Compare(Name('seq', Load(), lineno=450, col_offset=11), [Eq()], [Str('prev', lineno=450, col_offset=18)], lineno=450, col_offset=11), [Assign([Name('n', Store(), lineno=451, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=451, col_offset=16), 'getcurrent', Load(), lineno=451, col_offset=16), [], [], None, None, lineno=451, col_offset=16), lineno=451, col_offset=12), Assign([Name('i', Store(), lineno=452, col_offset=12)], Call(Name('bisect', Load(), lineno=452, col_offset=16), [Name('all', Load(), lineno=452, col_offset=23), BinOp(Name('n', Load(), lineno=452, col_offset=28), Sub(), Num(1, lineno=452, col_offset=30), lineno=452, col_offset=28)], [], None, None, lineno=452, col_offset=16), lineno=452, col_offset=12), If(Compare(Name('i', Load(), lineno=453, col_offset=15), [Eq()], [Num(0, lineno=453, col_offset=20)], lineno=453, col_offset=15), [Raise(Name('Error', Load(), lineno=454, col_offset=22), Str('no prev message', lineno=454, col_offset=29), None, lineno=454, col_offset=16)], [], lineno=453, col_offset=12), TryExcept([Return(Subscript(Name('all', Load(), lineno=456, col_offset=23), Index(BinOp(Name('i', Load(), lineno=456, col_offset=27), Sub(), Num(1, lineno=456, col_offset=29), lineno=456, col_offset=27)), Load(), lineno=456, col_offset=23), lineno=456, col_offset=16)], [ExceptHandler(Name('IndexError', Load(), lineno=457, col_offset=19), None, [Raise(Name('Error', Load(), lineno=458, col_offset=22), Str('no prev message', lineno=458, col_offset=29), None, lineno=458, col_offset=16)], lineno=457, col_offset=12)], [], lineno=455, col_offset=12)], [], lineno=450, col_offset=8), Raise(Name('Error', Load(), lineno=459, col_offset=14), Name('None', Load(), lineno=459, col_offset=21), None, lineno=459, col_offset=8)], [], lineno=430, col_offset=4), FunctionDef('openmessage', arguments([Name('self', Param(), lineno=461, col_offset=20), Name('n', Param(), lineno=461, col_offset=26)], None, None, []), [Expr(Str('Open a message -- returns a Message object.', lineno=462, col_offset=8), lineno=462, col_offset=8), Return(Call(Name('Message', Load(), lineno=463, col_offset=15), [Name('self', Load(), lineno=463, col_offset=23), Name('n', Load(), lineno=463, col_offset=29)], [], None, None, lineno=463, col_offset=15), lineno=463, col_offset=8)], [], lineno=461, col_offset=4), FunctionDef('removemessages', arguments([Name('self', Param(), lineno=465, col_offset=23), Name('list', Param(), lineno=465, col_offset=29)], None, None, []), [Expr(Str('Remove one or more messages -- may raise os.error.', lineno=466, col_offset=8), lineno=466, col_offset=8), Assign([Name('errors', Store(), lineno=467, col_offset=8)], List([], Load(), lineno=467, col_offset=17), lineno=467, col_offset=8), Assign([Name('deleted', Store(), lineno=468, col_offset=8)], List([], Load(), lineno=468, col_offset=18), lineno=468, col_offset=8), For(Name('n', Store(), lineno=469, col_offset=12), Name('list', Load(), lineno=469, col_offset=17), [Assign([Name('path', Store(), lineno=470, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=470, col_offset=19), 'getmessagefilename', Load(), lineno=470, col_offset=19), [Name('n', Load(), lineno=470, col_offset=43)], [], None, None, lineno=470, col_offset=19), lineno=470, col_offset=12), Assign([Name('commapath', Store(), lineno=471, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=471, col_offset=24), 'getmessagefilename', Load(), lineno=471, col_offset=24), [BinOp(Str(',', lineno=471, col_offset=48), Add(), Call(Name('str', Load(), lineno=471, col_offset=54), [Name('n', Load(), lineno=471, col_offset=58)], [], None, None, lineno=471, col_offset=54), lineno=471, col_offset=48)], [], None, None, lineno=471, col_offset=24), lineno=471, col_offset=12), TryExcept([Expr(Call(Attribute(Name('os', Load(), lineno=473, col_offset=16), 'unlink', Load(), lineno=473, col_offset=16), [Name('commapath', Load(), lineno=473, col_offset=26)], [], None, None, lineno=473, col_offset=16), lineno=473, col_offset=16)], [ExceptHandler(Attribute(Name('os', Load(), lineno=474, col_offset=19), 'error', Load(), lineno=474, col_offset=19), None, [Pass( lineno=475, col_offset=16)], lineno=474, col_offset=12)], [], lineno=472, col_offset=12), TryExcept([Expr(Call(Attribute(Name('os', Load(), lineno=477, col_offset=16), 'rename', Load(), lineno=477, col_offset=16), [Name('path', Load(), lineno=477, col_offset=26), Name('commapath', Load(), lineno=477, col_offset=32)], [], None, None, lineno=477, col_offset=16), lineno=477, col_offset=16)], [ExceptHandler(Attribute(Name('os', Load(), lineno=478, col_offset=19), 'error', Load(), lineno=478, col_offset=19), Name('msg', Store(), lineno=478, col_offset=29), [Expr(Call(Attribute(Name('errors', Load(), lineno=479, col_offset=16), 'append', Load(), lineno=479, col_offset=16), [Name('msg', Load(), lineno=479, col_offset=30)], [], None, None, lineno=479, col_offset=16), lineno=479, col_offset=16)], lineno=478, col_offset=12)], [Expr(Call(Attribute(Name('deleted', Load(), lineno=481, col_offset=16), 'append', Load(), lineno=481, col_offset=16), [Name('n', Load(), lineno=481, col_offset=31)], [], None, None, lineno=481, col_offset=16), lineno=481, col_offset=16)], lineno=476, col_offset=12)], [], lineno=469, col_offset=8), If(Name('deleted', Load(), lineno=482, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=483, col_offset=12), 'removefromallsequences', Load(), lineno=483, col_offset=12), [Name('deleted', Load(), lineno=483, col_offset=40)], [], None, None, lineno=483, col_offset=12), lineno=483, col_offset=12)], [], lineno=482, col_offset=8), If(Name('errors', Load(), lineno=484, col_offset=11), [If(Compare(Call(Name('len', Load(), lineno=485, col_offset=15), [Name('errors', Load(), lineno=485, col_offset=19)], [], None, None, lineno=485, col_offset=15), [Eq()], [Num(1, lineno=485, col_offset=30)], lineno=485, col_offset=15), [Raise(Attribute(Name('os', Load(), lineno=486, col_offset=22), 'error', Load(), lineno=486, col_offset=22), Subscript(Name('errors', Load(), lineno=486, col_offset=32), Index(Num(0, lineno=486, col_offset=39)), Load(), lineno=486, col_offset=32), None, lineno=486, col_offset=16)], [Raise(Attribute(Name('os', Load(), lineno=488, col_offset=22), 'error', Load(), lineno=488, col_offset=22), Tuple([Str('multiple errors:', lineno=488, col_offset=33), Name('errors', Load(), lineno=488, col_offset=53)], Load(), lineno=488, col_offset=33), None, lineno=488, col_offset=16)], lineno=485, col_offset=12)], [], lineno=484, col_offset=8)], [], lineno=465, col_offset=4), FunctionDef('refilemessages', arguments([Name('self', Param(), lineno=490, col_offset=23), Name('list', Param(), lineno=490, col_offset=29), Name('tofolder', Param(), lineno=490, col_offset=35), Name('keepsequences', Param(), lineno=490, col_offset=45)], None, None, [Num(0, lineno=490, col_offset=59)]), [Expr(Str("Refile one or more messages -- may raise os.error.\n        'tofolder' is an open folder object.", lineno=492, col_offset=-1), lineno=492, col_offset=-1), Assign([Name('errors', Store(), lineno=493, col_offset=8)], List([], Load(), lineno=493, col_offset=17), lineno=493, col_offset=8), Assign([Name('refiled', Store(), lineno=494, col_offset=8)], Dict([], [], lineno=494, col_offset=18), lineno=494, col_offset=8), For(Name('n', Store(), lineno=495, col_offset=12), Name('list', Load(), lineno=495, col_offset=17), [Assign([Name('ton', Store(), lineno=496, col_offset=12)], BinOp(Call(Attribute(Name('tofolder', Load(), lineno=496, col_offset=18), 'getlast', Load(), lineno=496, col_offset=18), [], [], None, None, lineno=496, col_offset=18), Add(), Num(1, lineno=496, col_offset=39), lineno=496, col_offset=18), lineno=496, col_offset=12), Assign([Name('path', Store(), lineno=497, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=497, col_offset=19), 'getmessagefilename', Load(), lineno=497, col_offset=19), [Name('n', Load(), lineno=497, col_offset=43)], [], None, None, lineno=497, col_offset=19), lineno=497, col_offset=12), Assign([Name('topath', Store(), lineno=498, col_offset=12)], Call(Attribute(Name('tofolder', Load(), lineno=498, col_offset=21), 'getmessagefilename', Load(), lineno=498, col_offset=21), [Name('ton', Load(), lineno=498, col_offset=49)], [], None, None, lineno=498, col_offset=21), lineno=498, col_offset=12), TryExcept([Expr(Call(Attribute(Name('os', Load(), lineno=500, col_offset=16), 'rename', Load(), lineno=500, col_offset=16), [Name('path', Load(), lineno=500, col_offset=26), Name('topath', Load(), lineno=500, col_offset=32)], [], None, None, lineno=500, col_offset=16), lineno=500, col_offset=16)], [ExceptHandler(Attribute(Name('os', Load(), lineno=501, col_offset=19), 'error', Load(), lineno=501, col_offset=19), None, [TryExcept([Expr(Call(Attribute(Name('shutil', Load(), lineno=504, col_offset=20), 'copy2', Load(), lineno=504, col_offset=20), [Name('path', Load(), lineno=504, col_offset=33), Name('topath', Load(), lineno=504, col_offset=39)], [], None, None, lineno=504, col_offset=20), lineno=504, col_offset=20), Expr(Call(Attribute(Name('os', Load(), lineno=505, col_offset=20), 'unlink', Load(), lineno=505, col_offset=20), [Name('path', Load(), lineno=505, col_offset=30)], [], None, None, lineno=505, col_offset=20), lineno=505, col_offset=20)], [ExceptHandler(Tuple([Name('IOError', Load(), lineno=506, col_offset=24), Attribute(Name('os', Load(), lineno=506, col_offset=33), 'error', Load(), lineno=506, col_offset=33)], Load(), lineno=506, col_offset=24), Name('msg', Store(), lineno=506, col_offset=44), [Expr(Call(Attribute(Name('errors', Load(), lineno=507, col_offset=20), 'append', Load(), lineno=507, col_offset=20), [Name('msg', Load(), lineno=507, col_offset=34)], [], None, None, lineno=507, col_offset=20), lineno=507, col_offset=20), TryExcept([Expr(Call(Attribute(Name('os', Load(), lineno=509, col_offset=24), 'unlink', Load(), lineno=509, col_offset=24), [Name('topath', Load(), lineno=509, col_offset=34)], [], None, None, lineno=509, col_offset=24), lineno=509, col_offset=24)], [ExceptHandler(Attribute(Name('os', Load(), lineno=510, col_offset=27), 'error', Load(), lineno=510, col_offset=27), None, [Pass( lineno=511, col_offset=24)], lineno=510, col_offset=20)], [], lineno=508, col_offset=20), Continue( lineno=512, col_offset=20)], lineno=506, col_offset=16)], [], lineno=503, col_offset=16)], lineno=501, col_offset=12)], [], lineno=499, col_offset=12), Expr(Call(Attribute(Name('tofolder', Load(), lineno=513, col_offset=12), 'setlast', Load(), lineno=513, col_offset=12), [Name('ton', Load(), lineno=513, col_offset=29)], [], None, None, lineno=513, col_offset=12), lineno=513, col_offset=12), Assign([Subscript(Name('refiled', Load(), lineno=514, col_offset=12), Index(Name('n', Load(), lineno=514, col_offset=20)), Store(), lineno=514, col_offset=12)], Name('ton', Load(), lineno=514, col_offset=25), lineno=514, col_offset=12)], [], lineno=495, col_offset=8), If(Name('refiled', Load(), lineno=515, col_offset=11), [If(Name('keepsequences', Load(), lineno=516, col_offset=15), [Expr(Call(Attribute(Name('tofolder', Load(), lineno=517, col_offset=16), '_copysequences', Load(), lineno=517, col_offset=16), [Name('self', Load(), lineno=517, col_offset=40), Call(Attribute(Name('refiled', Load(), lineno=517, col_offset=46), 'items', Load(), lineno=517, col_offset=46), [], [], None, None, lineno=517, col_offset=46)], [], None, None, lineno=517, col_offset=16), lineno=517, col_offset=16)], [], lineno=516, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=518, col_offset=12), 'removefromallsequences', Load(), lineno=518, col_offset=12), [Call(Attribute(Name('refiled', Load(), lineno=518, col_offset=40), 'keys', Load(), lineno=518, col_offset=40), [], [], None, None, lineno=518, col_offset=40)], [], None, None, lineno=518, col_offset=12), lineno=518, col_offset=12)], [], lineno=515, col_offset=8), If(Name('errors', Load(), lineno=519, col_offset=11), [If(Compare(Call(Name('len', Load(), lineno=520, col_offset=15), [Name('errors', Load(), lineno=520, col_offset=19)], [], None, None, lineno=520, col_offset=15), [Eq()], [Num(1, lineno=520, col_offset=30)], lineno=520, col_offset=15), [Raise(Attribute(Name('os', Load(), lineno=521, col_offset=22), 'error', Load(), lineno=521, col_offset=22), Subscript(Name('errors', Load(), lineno=521, col_offset=32), Index(Num(0, lineno=521, col_offset=39)), Load(), lineno=521, col_offset=32), None, lineno=521, col_offset=16)], [Raise(Attribute(Name('os', Load(), lineno=523, col_offset=22), 'error', Load(), lineno=523, col_offset=22), Tuple([Str('multiple errors:', lineno=523, col_offset=33), Name('errors', Load(), lineno=523, col_offset=53)], Load(), lineno=523, col_offset=33), None, lineno=523, col_offset=16)], lineno=520, col_offset=12)], [], lineno=519, col_offset=8)], [], lineno=490, col_offset=4), FunctionDef('_copysequences', arguments([Name('self', Param(), lineno=525, col_offset=23), Name('fromfolder', Param(), lineno=525, col_offset=29), Name('refileditems', Param(), lineno=525, col_offset=41)], None, None, []), [Expr(Str('Helper for refilemessages() to copy sequences.', lineno=526, col_offset=8), lineno=526, col_offset=8), Assign([Name('fromsequences', Store(), lineno=527, col_offset=8)], Call(Attribute(Name('fromfolder', Load(), lineno=527, col_offset=24), 'getsequences', Load(), lineno=527, col_offset=24), [], [], None, None, lineno=527, col_offset=24), lineno=527, col_offset=8), Assign([Name('tosequences', Store(), lineno=528, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=528, col_offset=22), 'getsequences', Load(), lineno=528, col_offset=22), [], [], None, None, lineno=528, col_offset=22), lineno=528, col_offset=8), Assign([Name('changed', Store(), lineno=529, col_offset=8)], Num(0, lineno=529, col_offset=18), lineno=529, col_offset=8), For(Tuple([Name('name', Store(), lineno=530, col_offset=12), Name('seq', Store(), lineno=530, col_offset=18)], Store(), lineno=530, col_offset=12), Call(Attribute(Name('fromsequences', Load(), lineno=530, col_offset=25), 'items', Load(), lineno=530, col_offset=25), [], [], None, None, lineno=530, col_offset=25), [TryExcept([Assign([Name('toseq', Store(), lineno=532, col_offset=16)], Subscript(Name('tosequences', Load(), lineno=532, col_offset=24), Index(Name('name', Load(), lineno=532, col_offset=36)), Load(), lineno=532, col_offset=24), lineno=532, col_offset=16), Assign([Name('new', Store(), lineno=533, col_offset=16)], Num(0, lineno=533, col_offset=22), lineno=533, col_offset=16)], [ExceptHandler(Name('KeyError', Load(), lineno=534, col_offset=19), None, [Assign([Name('toseq', Store(), lineno=535, col_offset=16)], List([], Load(), lineno=535, col_offset=24), lineno=535, col_offset=16), Assign([Name('new', Store(), lineno=536, col_offset=16)], Num(1, lineno=536, col_offset=22), lineno=536, col_offset=16)], lineno=534, col_offset=12)], [], lineno=531, col_offset=12), For(Tuple([Name('fromn', Store(), lineno=537, col_offset=16), Name('ton', Store(), lineno=537, col_offset=23)], Store(), lineno=537, col_offset=16), Name('refileditems', Load(), lineno=537, col_offset=30), [If(Compare(Name('fromn', Load(), lineno=538, col_offset=19), [In()], [Name('seq', Load(), lineno=538, col_offset=28)], lineno=538, col_offset=19), [Expr(Call(Attribute(Name('toseq', Load(), lineno=539, col_offset=20), 'append', Load(), lineno=539, col_offset=20), [Name('ton', Load(), lineno=539, col_offset=33)], [], None, None, lineno=539, col_offset=20), lineno=539, col_offset=20), Assign([Name('changed', Store(), lineno=540, col_offset=20)], Num(1, lineno=540, col_offset=30), lineno=540, col_offset=20)], [], lineno=538, col_offset=16)], [], lineno=537, col_offset=12), If(BoolOp(And(), [Name('new', Load(), lineno=541, col_offset=15), Name('toseq', Load(), lineno=541, col_offset=23)], lineno=541, col_offset=15), [Assign([Subscript(Name('tosequences', Load(), lineno=542, col_offset=16), Index(Name('name', Load(), lineno=542, col_offset=28)), Store(), lineno=542, col_offset=16)], Name('toseq', Load(), lineno=542, col_offset=36), lineno=542, col_offset=16)], [], lineno=541, col_offset=12)], [], lineno=530, col_offset=8), If(Name('changed', Load(), lineno=543, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=544, col_offset=12), 'putsequences', Load(), lineno=544, col_offset=12), [Name('tosequences', Load(), lineno=544, col_offset=30)], [], None, None, lineno=544, col_offset=12), lineno=544, col_offset=12)], [], lineno=543, col_offset=8)], [], lineno=525, col_offset=4), FunctionDef('movemessage', arguments([Name('self', Param(), lineno=546, col_offset=20), Name('n', Param(), lineno=546, col_offset=26), Name('tofolder', Param(), lineno=546, col_offset=29), Name('ton', Param(), lineno=546, col_offset=39)], None, None, []), [Expr(Str('Move one message over a specific destination message,\n        which may or may not already exist.', lineno=548, col_offset=-1), lineno=548, col_offset=-1), Assign([Name('path', Store(), lineno=549, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=549, col_offset=15), 'getmessagefilename', Load(), lineno=549, col_offset=15), [Name('n', Load(), lineno=549, col_offset=39)], [], None, None, lineno=549, col_offset=15), lineno=549, col_offset=8), Assign([Name('f', Store(), lineno=551, col_offset=8)], Call(Name('open', Load(), lineno=551, col_offset=12), [Name('path', Load(), lineno=551, col_offset=17)], [], None, None, lineno=551, col_offset=12), lineno=551, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=552, col_offset=8), 'close', Load(), lineno=552, col_offset=8), [], [], None, None, lineno=552, col_offset=8), lineno=552, col_offset=8), Delete([Name('f', Del(), lineno=553, col_offset=12)], lineno=553, col_offset=8), Assign([Name('topath', Store(), lineno=554, col_offset=8)], Call(Attribute(Name('tofolder', Load(), lineno=554, col_offset=17), 'getmessagefilename', Load(), lineno=554, col_offset=17), [Name('ton', Load(), lineno=554, col_offset=45)], [], None, None, lineno=554, col_offset=17), lineno=554, col_offset=8), Assign([Name('backuptopath', Store(), lineno=555, col_offset=8)], Call(Attribute(Name('tofolder', Load(), lineno=555, col_offset=23), 'getmessagefilename', Load(), lineno=555, col_offset=23), [BinOp(Str(',%d', lineno=555, col_offset=51), Mod(), Name('ton', Load(), lineno=555, col_offset=59), lineno=555, col_offset=51)], [], None, None, lineno=555, col_offset=23), lineno=555, col_offset=8), TryExcept([Expr(Call(Attribute(Name('os', Load(), lineno=557, col_offset=12), 'rename', Load(), lineno=557, col_offset=12), [Name('topath', Load(), lineno=557, col_offset=22), Name('backuptopath', Load(), lineno=557, col_offset=30)], [], None, None, lineno=557, col_offset=12), lineno=557, col_offset=12)], [ExceptHandler(Attribute(Name('os', Load(), lineno=558, col_offset=15), 'error', Load(), lineno=558, col_offset=15), None, [Pass( lineno=559, col_offset=12)], lineno=558, col_offset=8)], [], lineno=556, col_offset=8), TryExcept([Expr(Call(Attribute(Name('os', Load(), lineno=561, col_offset=12), 'rename', Load(), lineno=561, col_offset=12), [Name('path', Load(), lineno=561, col_offset=22), Name('topath', Load(), lineno=561, col_offset=28)], [], None, None, lineno=561, col_offset=12), lineno=561, col_offset=12)], [ExceptHandler(Attribute(Name('os', Load(), lineno=562, col_offset=15), 'error', Load(), lineno=562, col_offset=15), None, [Assign([Name('ok', Store(), lineno=564, col_offset=12)], Num(0, lineno=564, col_offset=17), lineno=564, col_offset=12), TryFinally([Expr(Call(Attribute(Name('tofolder', Load(), lineno=566, col_offset=16), 'setlast', Load(), lineno=566, col_offset=16), [Name('None', Load(), lineno=566, col_offset=33)], [], None, None, lineno=566, col_offset=16), lineno=566, col_offset=16), Expr(Call(Attribute(Name('shutil', Load(), lineno=567, col_offset=16), 'copy2', Load(), lineno=567, col_offset=16), [Name('path', Load(), lineno=567, col_offset=29), Name('topath', Load(), lineno=567, col_offset=35)], [], None, None, lineno=567, col_offset=16), lineno=567, col_offset=16), Assign([Name('ok', Store(), lineno=568, col_offset=16)], Num(1, lineno=568, col_offset=21), lineno=568, col_offset=16)], [If(UnaryOp(Not(), Name('ok', Load(), lineno=570, col_offset=23), lineno=570, col_offset=19), [TryExcept([Expr(Call(Attribute(Name('os', Load(), lineno=572, col_offset=24), 'unlink', Load(), lineno=572, col_offset=24), [Name('topath', Load(), lineno=572, col_offset=34)], [], None, None, lineno=572, col_offset=24), lineno=572, col_offset=24)], [ExceptHandler(Attribute(Name('os', Load(), lineno=573, col_offset=27), 'error', Load(), lineno=573, col_offset=27), None, [Pass( lineno=574, col_offset=24)], lineno=573, col_offset=20)], [], lineno=571, col_offset=20)], [], lineno=570, col_offset=16)], lineno=565, col_offset=12), Expr(Call(Attribute(Name('os', Load(), lineno=575, col_offset=12), 'unlink', Load(), lineno=575, col_offset=12), [Name('path', Load(), lineno=575, col_offset=22)], [], None, None, lineno=575, col_offset=12), lineno=575, col_offset=12)], lineno=562, col_offset=8)], [], lineno=560, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=576, col_offset=8), 'removefromallsequences', Load(), lineno=576, col_offset=8), [List([Name('n', Load(), lineno=576, col_offset=37)], Load(), lineno=576, col_offset=36)], [], None, None, lineno=576, col_offset=8), lineno=576, col_offset=8)], [], lineno=546, col_offset=4), FunctionDef('copymessage', arguments([Name('self', Param(), lineno=578, col_offset=20), Name('n', Param(), lineno=578, col_offset=26), Name('tofolder', Param(), lineno=578, col_offset=29), Name('ton', Param(), lineno=578, col_offset=39)], None, None, []), [Expr(Str('Copy one message over a specific destination message,\n        which may or may not already exist.', lineno=580, col_offset=-1), lineno=580, col_offset=-1), Assign([Name('path', Store(), lineno=581, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=581, col_offset=15), 'getmessagefilename', Load(), lineno=581, col_offset=15), [Name('n', Load(), lineno=581, col_offset=39)], [], None, None, lineno=581, col_offset=15), lineno=581, col_offset=8), Assign([Name('f', Store(), lineno=583, col_offset=8)], Call(Name('open', Load(), lineno=583, col_offset=12), [Name('path', Load(), lineno=583, col_offset=17)], [], None, None, lineno=583, col_offset=12), lineno=583, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=584, col_offset=8), 'close', Load(), lineno=584, col_offset=8), [], [], None, None, lineno=584, col_offset=8), lineno=584, col_offset=8), Delete([Name('f', Del(), lineno=585, col_offset=12)], lineno=585, col_offset=8), Assign([Name('topath', Store(), lineno=586, col_offset=8)], Call(Attribute(Name('tofolder', Load(), lineno=586, col_offset=17), 'getmessagefilename', Load(), lineno=586, col_offset=17), [Name('ton', Load(), lineno=586, col_offset=45)], [], None, None, lineno=586, col_offset=17), lineno=586, col_offset=8), Assign([Name('backuptopath', Store(), lineno=587, col_offset=8)], Call(Attribute(Name('tofolder', Load(), lineno=587, col_offset=23), 'getmessagefilename', Load(), lineno=587, col_offset=23), [BinOp(Str(',%d', lineno=587, col_offset=51), Mod(), Name('ton', Load(), lineno=587, col_offset=59), lineno=587, col_offset=51)], [], None, None, lineno=587, col_offset=23), lineno=587, col_offset=8), TryExcept([Expr(Call(Attribute(Name('os', Load(), lineno=589, col_offset=12), 'rename', Load(), lineno=589, col_offset=12), [Name('topath', Load(), lineno=589, col_offset=22), Name('backuptopath', Load(), lineno=589, col_offset=30)], [], None, None, lineno=589, col_offset=12), lineno=589, col_offset=12)], [ExceptHandler(Attribute(Name('os', Load(), lineno=590, col_offset=15), 'error', Load(), lineno=590, col_offset=15), None, [Pass( lineno=591, col_offset=12)], lineno=590, col_offset=8)], [], lineno=588, col_offset=8), Assign([Name('ok', Store(), lineno=592, col_offset=8)], Num(0, lineno=592, col_offset=13), lineno=592, col_offset=8), TryFinally([Expr(Call(Attribute(Name('tofolder', Load(), lineno=594, col_offset=12), 'setlast', Load(), lineno=594, col_offset=12), [Name('None', Load(), lineno=594, col_offset=29)], [], None, None, lineno=594, col_offset=12), lineno=594, col_offset=12), Expr(Call(Attribute(Name('shutil', Load(), lineno=595, col_offset=12), 'copy2', Load(), lineno=595, col_offset=12), [Name('path', Load(), lineno=595, col_offset=25), Name('topath', Load(), lineno=595, col_offset=31)], [], None, None, lineno=595, col_offset=12), lineno=595, col_offset=12), Assign([Name('ok', Store(), lineno=596, col_offset=12)], Num(1, lineno=596, col_offset=17), lineno=596, col_offset=12)], [If(UnaryOp(Not(), Name('ok', Load(), lineno=598, col_offset=19), lineno=598, col_offset=15), [TryExcept([Expr(Call(Attribute(Name('os', Load(), lineno=600, col_offset=20), 'unlink', Load(), lineno=600, col_offset=20), [Name('topath', Load(), lineno=600, col_offset=30)], [], None, None, lineno=600, col_offset=20), lineno=600, col_offset=20)], [ExceptHandler(Attribute(Name('os', Load(), lineno=601, col_offset=23), 'error', Load(), lineno=601, col_offset=23), None, [Pass( lineno=602, col_offset=20)], lineno=601, col_offset=16)], [], lineno=599, col_offset=16)], [], lineno=598, col_offset=12)], lineno=593, col_offset=8)], [], lineno=578, col_offset=4), FunctionDef('createmessage', arguments([Name('self', Param(), lineno=604, col_offset=22), Name('n', Param(), lineno=604, col_offset=28), Name('txt', Param(), lineno=604, col_offset=31)], None, None, []), [Expr(Str('Create a message, with text from the open file txt.', lineno=605, col_offset=8), lineno=605, col_offset=8), Assign([Name('path', Store(), lineno=606, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=606, col_offset=15), 'getmessagefilename', Load(), lineno=606, col_offset=15), [Name('n', Load(), lineno=606, col_offset=39)], [], None, None, lineno=606, col_offset=15), lineno=606, col_offset=8), Assign([Name('backuppath', Store(), lineno=607, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=607, col_offset=21), 'getmessagefilename', Load(), lineno=607, col_offset=21), [BinOp(Str(',%d', lineno=607, col_offset=45), Mod(), Name('n', Load(), lineno=607, col_offset=53), lineno=607, col_offset=45)], [], None, None, lineno=607, col_offset=21), lineno=607, col_offset=8), TryExcept([Expr(Call(Attribute(Name('os', Load(), lineno=609, col_offset=12), 'rename', Load(), lineno=609, col_offset=12), [Name('path', Load(), lineno=609, col_offset=22), Name('backuppath', Load(), lineno=609, col_offset=28)], [], None, None, lineno=609, col_offset=12), lineno=609, col_offset=12)], [ExceptHandler(Attribute(Name('os', Load(), lineno=610, col_offset=15), 'error', Load(), lineno=610, col_offset=15), None, [Pass( lineno=611, col_offset=12)], lineno=610, col_offset=8)], [], lineno=608, col_offset=8), Assign([Name('ok', Store(), lineno=612, col_offset=8)], Num(0, lineno=612, col_offset=13), lineno=612, col_offset=8), Assign([Name('BUFSIZE', Store(), lineno=613, col_offset=8)], BinOp(Num(16, lineno=613, col_offset=18), Mult(), Num(1024, lineno=613, col_offset=21), lineno=613, col_offset=18), lineno=613, col_offset=8), TryFinally([Assign([Name('f', Store(), lineno=615, col_offset=12)], Call(Name('open', Load(), lineno=615, col_offset=16), [Name('path', Load(), lineno=615, col_offset=21), Str('w', lineno=615, col_offset=27)], [], None, None, lineno=615, col_offset=16), lineno=615, col_offset=12), While(Num(1, lineno=616, col_offset=18), [Assign([Name('buf', Store(), lineno=617, col_offset=16)], Call(Attribute(Name('txt', Load(), lineno=617, col_offset=22), 'read', Load(), lineno=617, col_offset=22), [Name('BUFSIZE', Load(), lineno=617, col_offset=31)], [], None, None, lineno=617, col_offset=22), lineno=617, col_offset=16), If(UnaryOp(Not(), Name('buf', Load(), lineno=618, col_offset=23), lineno=618, col_offset=19), [Break( lineno=619, col_offset=20)], [], lineno=618, col_offset=16), Expr(Call(Attribute(Name('f', Load(), lineno=620, col_offset=16), 'write', Load(), lineno=620, col_offset=16), [Name('buf', Load(), lineno=620, col_offset=24)], [], None, None, lineno=620, col_offset=16), lineno=620, col_offset=16)], [], lineno=616, col_offset=12), Expr(Call(Attribute(Name('f', Load(), lineno=621, col_offset=12), 'close', Load(), lineno=621, col_offset=12), [], [], None, None, lineno=621, col_offset=12), lineno=621, col_offset=12), Assign([Name('ok', Store(), lineno=622, col_offset=12)], Num(1, lineno=622, col_offset=17), lineno=622, col_offset=12)], [If(UnaryOp(Not(), Name('ok', Load(), lineno=624, col_offset=19), lineno=624, col_offset=15), [TryExcept([Expr(Call(Attribute(Name('os', Load(), lineno=626, col_offset=20), 'unlink', Load(), lineno=626, col_offset=20), [Name('path', Load(), lineno=626, col_offset=30)], [], None, None, lineno=626, col_offset=20), lineno=626, col_offset=20)], [ExceptHandler(Attribute(Name('os', Load(), lineno=627, col_offset=23), 'error', Load(), lineno=627, col_offset=23), None, [Pass( lineno=628, col_offset=20)], lineno=627, col_offset=16)], [], lineno=625, col_offset=16)], [], lineno=624, col_offset=12)], lineno=614, col_offset=8)], [], lineno=604, col_offset=4), FunctionDef('removefromallsequences', arguments([Name('self', Param(), lineno=630, col_offset=31), Name('list', Param(), lineno=630, col_offset=37)], None, None, []), [Expr(Str("Remove one or more messages from all sequences (including last)\n        -- but not from 'cur'!!!", lineno=632, col_offset=-1), lineno=632, col_offset=-1), If(BoolOp(And(), [Call(Name('hasattr', Load(), lineno=633, col_offset=11), [Name('self', Load(), lineno=633, col_offset=19), Str('last', lineno=633, col_offset=25)], [], None, None, lineno=633, col_offset=11), Compare(Attribute(Name('self', Load(), lineno=633, col_offset=37), 'last', Load(), lineno=633, col_offset=37), [In()], [Name('list', Load(), lineno=633, col_offset=50)], lineno=633, col_offset=37)], lineno=633, col_offset=11), [Delete([Attribute(Name('self', Load(), lineno=634, col_offset=16), 'last', Del(), lineno=634, col_offset=16)], lineno=634, col_offset=12)], [], lineno=633, col_offset=8), Assign([Name('sequences', Store(), lineno=635, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=635, col_offset=20), 'getsequences', Load(), lineno=635, col_offset=20), [], [], None, None, lineno=635, col_offset=20), lineno=635, col_offset=8), Assign([Name('changed', Store(), lineno=636, col_offset=8)], Num(0, lineno=636, col_offset=18), lineno=636, col_offset=8), For(Tuple([Name('name', Store(), lineno=637, col_offset=12), Name('seq', Store(), lineno=637, col_offset=18)], Store(), lineno=637, col_offset=12), Call(Attribute(Name('sequences', Load(), lineno=637, col_offset=25), 'items', Load(), lineno=637, col_offset=25), [], [], None, None, lineno=637, col_offset=25), [If(Compare(Name('name', Load(), lineno=638, col_offset=15), [Eq()], [Str('cur', lineno=638, col_offset=23)], lineno=638, col_offset=15), [Continue( lineno=639, col_offset=16)], [], lineno=638, col_offset=12), For(Name('n', Store(), lineno=640, col_offset=16), Name('list', Load(), lineno=640, col_offset=21), [If(Compare(Name('n', Load(), lineno=641, col_offset=19), [In()], [Name('seq', Load(), lineno=641, col_offset=24)], lineno=641, col_offset=19), [Expr(Call(Attribute(Name('seq', Load(), lineno=642, col_offset=20), 'remove', Load(), lineno=642, col_offset=20), [Name('n', Load(), lineno=642, col_offset=31)], [], None, None, lineno=642, col_offset=20), lineno=642, col_offset=20), Assign([Name('changed', Store(), lineno=643, col_offset=20)], Num(1, lineno=643, col_offset=30), lineno=643, col_offset=20), If(UnaryOp(Not(), Name('seq', Load(), lineno=644, col_offset=27), lineno=644, col_offset=23), [Delete([Subscript(Name('sequences', Load(), lineno=645, col_offset=28), Index(Name('name', Load(), lineno=645, col_offset=38)), Del(), lineno=645, col_offset=28)], lineno=645, col_offset=24)], [], lineno=644, col_offset=20)], [], lineno=641, col_offset=16)], [], lineno=640, col_offset=12)], [], lineno=637, col_offset=8), If(Name('changed', Load(), lineno=646, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=647, col_offset=12), 'putsequences', Load(), lineno=647, col_offset=12), [Name('sequences', Load(), lineno=647, col_offset=30)], [], None, None, lineno=647, col_offset=12), lineno=647, col_offset=12)], [], lineno=646, col_offset=8)], [], lineno=630, col_offset=4), FunctionDef('getlast', arguments([Name('self', Param(), lineno=649, col_offset=16)], None, None, []), [Expr(Str('Return the last message number.', lineno=650, col_offset=8), lineno=650, col_offset=8), If(UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=651, col_offset=15), [Name('self', Load(), lineno=651, col_offset=23), Str('last', lineno=651, col_offset=29)], [], None, None, lineno=651, col_offset=15), lineno=651, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=652, col_offset=12), 'listmessages', Load(), lineno=652, col_offset=12), [], [], None, None, lineno=652, col_offset=12), lineno=652, col_offset=12)], [], lineno=651, col_offset=8), Return(Attribute(Name('self', Load(), lineno=653, col_offset=15), 'last', Load(), lineno=653, col_offset=15), lineno=653, col_offset=8)], [], lineno=649, col_offset=4), FunctionDef('setlast', arguments([Name('self', Param(), lineno=655, col_offset=16), Name('last', Param(), lineno=655, col_offset=22)], None, None, []), [Expr(Str('Set the last message number.', lineno=656, col_offset=8), lineno=656, col_offset=8), If(Compare(Name('last', Load(), lineno=657, col_offset=11), [Is()], [Name('None', Load(), lineno=657, col_offset=19)], lineno=657, col_offset=11), [If(Call(Name('hasattr', Load(), lineno=658, col_offset=15), [Name('self', Load(), lineno=658, col_offset=23), Str('last', lineno=658, col_offset=29)], [], None, None, lineno=658, col_offset=15), [Delete([Attribute(Name('self', Load(), lineno=659, col_offset=20), 'last', Del(), lineno=659, col_offset=20)], lineno=659, col_offset=16)], [], lineno=658, col_offset=12)], [Assign([Attribute(Name('self', Load(), lineno=661, col_offset=12), 'last', Store(), lineno=661, col_offset=12)], Name('last', Load(), lineno=661, col_offset=24), lineno=661, col_offset=12)], lineno=657, col_offset=8)], [], lineno=655, col_offset=4)], [], lineno=242, col_offset=0), ClassDef('Message', [Attribute(Name('mimetools', Load(), lineno=663, col_offset=14), 'Message', Load(), lineno=663, col_offset=14)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=665, col_offset=17), Name('f', Param(), lineno=665, col_offset=23), Name('n', Param(), lineno=665, col_offset=26), Name('fp', Param(), lineno=665, col_offset=29)], None, None, [Name('None', Load(), lineno=665, col_offset=34)]), [Expr(Str('Constructor.', lineno=666, col_offset=8), lineno=666, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=667, col_offset=8), 'folder', Store(), lineno=667, col_offset=8)], Name('f', Load(), lineno=667, col_offset=22), lineno=667, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=668, col_offset=8), 'number', Store(), lineno=668, col_offset=8)], Name('n', Load(), lineno=668, col_offset=22), lineno=668, col_offset=8), If(Compare(Name('fp', Load(), lineno=669, col_offset=11), [Is()], [Name('None', Load(), lineno=669, col_offset=17)], lineno=669, col_offset=11), [Assign([Name('path', Store(), lineno=670, col_offset=12)], Call(Attribute(Name('f', Load(), lineno=670, col_offset=19), 'getmessagefilename', Load(), lineno=670, col_offset=19), [Name('n', Load(), lineno=670, col_offset=40)], [], None, None, lineno=670, col_offset=19), lineno=670, col_offset=12), Assign([Name('fp', Store(), lineno=671, col_offset=12)], Call(Name('open', Load(), lineno=671, col_offset=17), [Name('path', Load(), lineno=671, col_offset=22), Str('r', lineno=671, col_offset=28)], [], None, None, lineno=671, col_offset=17), lineno=671, col_offset=12)], [], lineno=669, col_offset=8), Expr(Call(Attribute(Attribute(Name('mimetools', Load(), lineno=672, col_offset=8), 'Message', Load(), lineno=672, col_offset=8), '__init__', Load(), lineno=672, col_offset=8), [Name('self', Load(), lineno=672, col_offset=35), Name('fp', Load(), lineno=672, col_offset=41)], [], None, None, lineno=672, col_offset=8), lineno=672, col_offset=8)], [], lineno=665, col_offset=4), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=674, col_offset=17)], None, None, []), [Expr(Str('String representation.', lineno=675, col_offset=8), lineno=675, col_offset=8), Return(BinOp(Str('Message(%s, %s)', lineno=676, col_offset=15), Mod(), Tuple([Call(Name('repr', Load(), lineno=676, col_offset=36), [Attribute(Name('self', Load(), lineno=676, col_offset=41), 'folder', Load(), lineno=676, col_offset=41)], [], None, None, lineno=676, col_offset=36), Attribute(Name('self', Load(), lineno=676, col_offset=55), 'number', Load(), lineno=676, col_offset=55)], Load(), lineno=676, col_offset=36), lineno=676, col_offset=15), lineno=676, col_offset=8)], [], lineno=674, col_offset=4), FunctionDef('getheadertext', arguments([Name('self', Param(), lineno=678, col_offset=22), Name('pred', Param(), lineno=678, col_offset=28)], None, None, [Name('None', Load(), lineno=678, col_offset=35)]), [Expr(Str("Return the message's header text as a string.  If an\n        argument is specified, it is used as a filter predicate to\n        decide which headers to return (its argument is the header\n        name converted to lower case).", lineno=682, col_offset=-1), lineno=682, col_offset=-1), If(Compare(Name('pred', Load(), lineno=683, col_offset=11), [Is()], [Name('None', Load(), lineno=683, col_offset=19)], lineno=683, col_offset=11), [Return(Call(Attribute(Str('', lineno=684, col_offset=19), 'join', Load(), lineno=684, col_offset=19), [Attribute(Name('self', Load(), lineno=684, col_offset=27), 'headers', Load(), lineno=684, col_offset=27)], [], None, None, lineno=684, col_offset=19), lineno=684, col_offset=12)], [], lineno=683, col_offset=8), Assign([Name('headers', Store(), lineno=685, col_offset=8)], List([], Load(), lineno=685, col_offset=18), lineno=685, col_offset=8), Assign([Name('hit', Store(), lineno=686, col_offset=8)], Num(0, lineno=686, col_offset=14), lineno=686, col_offset=8), For(Name('line', Store(), lineno=687, col_offset=12), Attribute(Name('self', Load(), lineno=687, col_offset=20), 'headers', Load(), lineno=687, col_offset=20), [If(UnaryOp(Not(), Call(Attribute(Subscript(Name('line', Load(), lineno=688, col_offset=19), Index(Num(0, lineno=688, col_offset=24)), Load(), lineno=688, col_offset=19), 'isspace', Load(), lineno=688, col_offset=19), [], [], None, None, lineno=688, col_offset=19), lineno=688, col_offset=15), [Assign([Name('i', Store(), lineno=689, col_offset=16)], Call(Attribute(Name('line', Load(), lineno=689, col_offset=20), 'find', Load(), lineno=689, col_offset=20), [Str(':', lineno=689, col_offset=30)], [], None, None, lineno=689, col_offset=20), lineno=689, col_offset=16), If(Compare(Name('i', Load(), lineno=690, col_offset=19), [Gt()], [Num(0, lineno=690, col_offset=23)], lineno=690, col_offset=19), [Assign([Name('hit', Store(), lineno=691, col_offset=20)], Call(Name('pred', Load(), lineno=691, col_offset=26), [Call(Attribute(Subscript(Name('line', Load(), lineno=691, col_offset=31), Slice(None, Name('i', Load(), lineno=691, col_offset=37), None), Load(), lineno=691, col_offset=31), 'lower', Load(), lineno=691, col_offset=31), [], [], None, None, lineno=691, col_offset=31)], [], None, None, lineno=691, col_offset=26), lineno=691, col_offset=20)], [], lineno=690, col_offset=16)], [], lineno=688, col_offset=12), If(Name('hit', Load(), lineno=692, col_offset=15), [Expr(Call(Attribute(Name('headers', Load(), lineno=692, col_offset=20), 'append', Load(), lineno=692, col_offset=20), [Name('line', Load(), lineno=692, col_offset=35)], [], None, None, lineno=692, col_offset=20), lineno=692, col_offset=20)], [], lineno=692, col_offset=12)], [], lineno=687, col_offset=8), Return(Call(Attribute(Str('', lineno=693, col_offset=15), 'join', Load(), lineno=693, col_offset=15), [Name('headers', Load(), lineno=693, col_offset=23)], [], None, None, lineno=693, col_offset=15), lineno=693, col_offset=8)], [], lineno=678, col_offset=4), FunctionDef('getbodytext', arguments([Name('self', Param(), lineno=695, col_offset=20), Name('decode', Param(), lineno=695, col_offset=26)], None, None, [Num(1, lineno=695, col_offset=35)]), [Expr(Str("Return the message's body text as string.  This undoes a\n        Content-Transfer-Encoding, but does not interpret other MIME\n        features (e.g. multipart messages).  To suppress decoding,\n        pass 0 as an argument.", lineno=699, col_offset=-1), lineno=699, col_offset=-1), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=700, col_offset=8), 'fp', Load(), lineno=700, col_offset=8), 'seek', Load(), lineno=700, col_offset=8), [Attribute(Name('self', Load(), lineno=700, col_offset=21), 'startofbody', Load(), lineno=700, col_offset=21)], [], None, None, lineno=700, col_offset=8), lineno=700, col_offset=8), Assign([Name('encoding', Store(), lineno=701, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=701, col_offset=19), 'getencoding', Load(), lineno=701, col_offset=19), [], [], None, None, lineno=701, col_offset=19), lineno=701, col_offset=8), If(BoolOp(Or(), [UnaryOp(Not(), Name('decode', Load(), lineno=702, col_offset=15), lineno=702, col_offset=11), Compare(Name('encoding', Load(), lineno=702, col_offset=25), [In()], [Tuple([Str('', lineno=702, col_offset=38), Str('7bit', lineno=702, col_offset=42), Str('8bit', lineno=702, col_offset=50), Str('binary', lineno=702, col_offset=58)], Load(), lineno=702, col_offset=38)], lineno=702, col_offset=25)], lineno=702, col_offset=11), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=703, col_offset=19), 'fp', Load(), lineno=703, col_offset=19), 'read', Load(), lineno=703, col_offset=19), [], [], None, None, lineno=703, col_offset=19), lineno=703, col_offset=12)], [], lineno=702, col_offset=8), TryExcept([ImportFrom('cStringIO', [alias('StringIO', None)], 0, lineno=705, col_offset=12)], [ExceptHandler(Name('ImportError', Load(), lineno=706, col_offset=15), None, [ImportFrom('StringIO', [alias('StringIO', None)], 0, lineno=707, col_offset=12)], lineno=706, col_offset=8)], [], lineno=704, col_offset=8), Assign([Name('output', Store(), lineno=708, col_offset=8)], Call(Name('StringIO', Load(), lineno=708, col_offset=17), [], [], None, None, lineno=708, col_offset=17), lineno=708, col_offset=8), Expr(Call(Attribute(Name('mimetools', Load(), lineno=709, col_offset=8), 'decode', Load(), lineno=709, col_offset=8), [Attribute(Name('self', Load(), lineno=709, col_offset=25), 'fp', Load(), lineno=709, col_offset=25), Name('output', Load(), lineno=709, col_offset=34), Name('encoding', Load(), lineno=709, col_offset=42)], [], None, None, lineno=709, col_offset=8), lineno=709, col_offset=8), Return(Call(Attribute(Name('output', Load(), lineno=710, col_offset=15), 'getvalue', Load(), lineno=710, col_offset=15), [], [], None, None, lineno=710, col_offset=15), lineno=710, col_offset=8)], [], lineno=695, col_offset=4), FunctionDef('getbodyparts', arguments([Name('self', Param(), lineno=712, col_offset=21)], None, None, []), [Expr(Str("Only for multipart messages: return the message's body as a\n        list of SubMessage objects.  Each submessage object behaves\n        (almost) as a Message object.", lineno=715, col_offset=-1), lineno=715, col_offset=-1), If(Compare(Call(Attribute(Name('self', Load(), lineno=716, col_offset=11), 'getmaintype', Load(), lineno=716, col_offset=11), [], [], None, None, lineno=716, col_offset=11), [NotEq()], [Str('multipart', lineno=716, col_offset=33)], lineno=716, col_offset=11), [Raise(Name('Error', Load(), lineno=717, col_offset=18), Str('Content-Type is not multipart/*', lineno=717, col_offset=25), None, lineno=717, col_offset=12)], [], lineno=716, col_offset=8), Assign([Name('bdry', Store(), lineno=718, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=718, col_offset=15), 'getparam', Load(), lineno=718, col_offset=15), [Str('boundary', lineno=718, col_offset=29)], [], None, None, lineno=718, col_offset=15), lineno=718, col_offset=8), If(UnaryOp(Not(), Name('bdry', Load(), lineno=719, col_offset=15), lineno=719, col_offset=11), [Raise(Name('Error', Load(), lineno=720, col_offset=18), Str('multipart/* without boundary param', lineno=720, col_offset=25), None, lineno=720, col_offset=12)], [], lineno=719, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=721, col_offset=8), 'fp', Load(), lineno=721, col_offset=8), 'seek', Load(), lineno=721, col_offset=8), [Attribute(Name('self', Load(), lineno=721, col_offset=21), 'startofbody', Load(), lineno=721, col_offset=21)], [], None, None, lineno=721, col_offset=8), lineno=721, col_offset=8), Assign([Name('mf', Store(), lineno=722, col_offset=8)], Call(Attribute(Name('multifile', Load(), lineno=722, col_offset=13), 'MultiFile', Load(), lineno=722, col_offset=13), [Attribute(Name('self', Load(), lineno=722, col_offset=33), 'fp', Load(), lineno=722, col_offset=33)], [], None, None, lineno=722, col_offset=13), lineno=722, col_offset=8), Expr(Call(Attribute(Name('mf', Load(), lineno=723, col_offset=8), 'push', Load(), lineno=723, col_offset=8), [Name('bdry', Load(), lineno=723, col_offset=16)], [], None, None, lineno=723, col_offset=8), lineno=723, col_offset=8), Assign([Name('parts', Store(), lineno=724, col_offset=8)], List([], Load(), lineno=724, col_offset=16), lineno=724, col_offset=8), While(Call(Attribute(Name('mf', Load(), lineno=725, col_offset=14), 'next', Load(), lineno=725, col_offset=14), [], [], None, None, lineno=725, col_offset=14), [Assign([Name('n', Store(), lineno=726, col_offset=12)], BinOp(Str('%s.%r', lineno=726, col_offset=16), Mod(), Tuple([Attribute(Name('self', Load(), lineno=726, col_offset=27), 'number', Load(), lineno=726, col_offset=27), BinOp(Num(1, lineno=726, col_offset=40), Add(), Call(Name('len', Load(), lineno=726, col_offset=44), [Name('parts', Load(), lineno=726, col_offset=48)], [], None, None, lineno=726, col_offset=44), lineno=726, col_offset=40)], Load(), lineno=726, col_offset=27), lineno=726, col_offset=16), lineno=726, col_offset=12), Assign([Name('part', Store(), lineno=727, col_offset=12)], Call(Name('SubMessage', Load(), lineno=727, col_offset=19), [Attribute(Name('self', Load(), lineno=727, col_offset=30), 'folder', Load(), lineno=727, col_offset=30), Name('n', Load(), lineno=727, col_offset=43), Name('mf', Load(), lineno=727, col_offset=46)], [], None, None, lineno=727, col_offset=19), lineno=727, col_offset=12), Expr(Call(Attribute(Name('parts', Load(), lineno=728, col_offset=12), 'append', Load(), lineno=728, col_offset=12), [Name('part', Load(), lineno=728, col_offset=25)], [], None, None, lineno=728, col_offset=12), lineno=728, col_offset=12)], [], lineno=725, col_offset=8), Expr(Call(Attribute(Name('mf', Load(), lineno=729, col_offset=8), 'pop', Load(), lineno=729, col_offset=8), [], [], None, None, lineno=729, col_offset=8), lineno=729, col_offset=8), Return(Name('parts', Load(), lineno=730, col_offset=15), lineno=730, col_offset=8)], [], lineno=712, col_offset=4), FunctionDef('getbody', arguments([Name('self', Param(), lineno=732, col_offset=16)], None, None, []), [Expr(Str('Return body, either a string or a list of messages.', lineno=733, col_offset=8), lineno=733, col_offset=8), If(Compare(Call(Attribute(Name('self', Load(), lineno=734, col_offset=11), 'getmaintype', Load(), lineno=734, col_offset=11), [], [], None, None, lineno=734, col_offset=11), [Eq()], [Str('multipart', lineno=734, col_offset=33)], lineno=734, col_offset=11), [Return(Call(Attribute(Name('self', Load(), lineno=735, col_offset=19), 'getbodyparts', Load(), lineno=735, col_offset=19), [], [], None, None, lineno=735, col_offset=19), lineno=735, col_offset=12)], [Return(Call(Attribute(Name('self', Load(), lineno=737, col_offset=19), 'getbodytext', Load(), lineno=737, col_offset=19), [], [], None, None, lineno=737, col_offset=19), lineno=737, col_offset=12)], lineno=734, col_offset=8)], [], lineno=732, col_offset=4)], [], lineno=663, col_offset=0), ClassDef('SubMessage', [Name('Message', Load(), lineno=740, col_offset=17)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=742, col_offset=17), Name('f', Param(), lineno=742, col_offset=23), Name('n', Param(), lineno=742, col_offset=26), Name('fp', Param(), lineno=742, col_offset=29)], None, None, []), [Expr(Str('Constructor.', lineno=743, col_offset=8), lineno=743, col_offset=8), Expr(Call(Attribute(Name('Message', Load(), lineno=744, col_offset=8), '__init__', Load(), lineno=744, col_offset=8), [Name('self', Load(), lineno=744, col_offset=25), Name('f', Load(), lineno=744, col_offset=31), Name('n', Load(), lineno=744, col_offset=34), Name('fp', Load(), lineno=744, col_offset=37)], [], None, None, lineno=744, col_offset=8), lineno=744, col_offset=8), If(Compare(Call(Attribute(Name('self', Load(), lineno=745, col_offset=11), 'getmaintype', Load(), lineno=745, col_offset=11), [], [], None, None, lineno=745, col_offset=11), [Eq()], [Str('multipart', lineno=745, col_offset=33)], lineno=745, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=746, col_offset=12), 'body', Store(), lineno=746, col_offset=12)], Call(Attribute(Name('Message', Load(), lineno=746, col_offset=24), 'getbodyparts', Load(), lineno=746, col_offset=24), [Name('self', Load(), lineno=746, col_offset=45)], [], None, None, lineno=746, col_offset=24), lineno=746, col_offset=12)], [Assign([Attribute(Name('self', Load(), lineno=748, col_offset=12), 'body', Store(), lineno=748, col_offset=12)], Call(Attribute(Name('Message', Load(), lineno=748, col_offset=24), 'getbodytext', Load(), lineno=748, col_offset=24), [Name('self', Load(), lineno=748, col_offset=44)], [], None, None, lineno=748, col_offset=24), lineno=748, col_offset=12)], lineno=745, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=749, col_offset=8), 'bodyencoded', Store(), lineno=749, col_offset=8)], Call(Attribute(Name('Message', Load(), lineno=749, col_offset=27), 'getbodytext', Load(), lineno=749, col_offset=27), [Name('self', Load(), lineno=749, col_offset=47)], [keyword('decode', Num(0, lineno=749, col_offset=60))], None, None, lineno=749, col_offset=27), lineno=749, col_offset=8)], [], lineno=742, col_offset=4), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=752, col_offset=17)], None, None, []), [Expr(Str('String representation.', lineno=753, col_offset=8), lineno=753, col_offset=8), Assign([Tuple([Name('f', Store(), lineno=754, col_offset=8), Name('n', Store(), lineno=754, col_offset=11), Name('fp', Store(), lineno=754, col_offset=14)], Store(), lineno=754, col_offset=8)], Tuple([Attribute(Name('self', Load(), lineno=754, col_offset=19), 'folder', Load(), lineno=754, col_offset=19), Attribute(Name('self', Load(), lineno=754, col_offset=32), 'number', Load(), lineno=754, col_offset=32), Attribute(Name('self', Load(), lineno=754, col_offset=45), 'fp', Load(), lineno=754, col_offset=45)], Load(), lineno=754, col_offset=19), lineno=754, col_offset=8), Return(BinOp(Str('SubMessage(%s, %s, %s)', lineno=755, col_offset=15), Mod(), Tuple([Name('f', Load(), lineno=755, col_offset=43), Name('n', Load(), lineno=755, col_offset=46), Name('fp', Load(), lineno=755, col_offset=49)], Load(), lineno=755, col_offset=43), lineno=755, col_offset=15), lineno=755, col_offset=8)], [], lineno=752, col_offset=4), FunctionDef('getbodytext', arguments([Name('self', Param(), lineno=757, col_offset=20), Name('decode', Param(), lineno=757, col_offset=26)], None, None, [Num(1, lineno=757, col_offset=35)]), [If(UnaryOp(Not(), Name('decode', Load(), lineno=758, col_offset=15), lineno=758, col_offset=11), [Return(Attribute(Name('self', Load(), lineno=759, col_offset=19), 'bodyencoded', Load(), lineno=759, col_offset=19), lineno=759, col_offset=12)], [], lineno=758, col_offset=8), If(Compare(Call(Name('type', Load(), lineno=760, col_offset=11), [Attribute(Name('self', Load(), lineno=760, col_offset=16), 'body', Load(), lineno=760, col_offset=16)], [], None, None, lineno=760, col_offset=11), [Eq()], [Call(Name('type', Load(), lineno=760, col_offset=30), [Str('', lineno=760, col_offset=35)], [], None, None, lineno=760, col_offset=30)], lineno=760, col_offset=11), [Return(Attribute(Name('self', Load(), lineno=761, col_offset=19), 'body', Load(), lineno=761, col_offset=19), lineno=761, col_offset=12)], [], lineno=760, col_offset=8)], [], lineno=757, col_offset=4), FunctionDef('getbodyparts', arguments([Name('self', Param(), lineno=763, col_offset=21)], None, None, []), [If(Compare(Call(Name('type', Load(), lineno=764, col_offset=11), [Attribute(Name('self', Load(), lineno=764, col_offset=16), 'body', Load(), lineno=764, col_offset=16)], [], None, None, lineno=764, col_offset=11), [Eq()], [Call(Name('type', Load(), lineno=764, col_offset=30), [List([], Load(), lineno=764, col_offset=35)], [], None, None, lineno=764, col_offset=30)], lineno=764, col_offset=11), [Return(Attribute(Name('self', Load(), lineno=765, col_offset=19), 'body', Load(), lineno=765, col_offset=19), lineno=765, col_offset=12)], [], lineno=764, col_offset=8)], [], lineno=763, col_offset=4), FunctionDef('getbody', arguments([Name('self', Param(), lineno=767, col_offset=16)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=768, col_offset=15), 'body', Load(), lineno=768, col_offset=15), lineno=768, col_offset=8)], [], lineno=767, col_offset=4)], [], lineno=740, col_offset=0), ClassDef('IntSet', [], [Expr(Str("Class implementing sets of integers.\n\n    This is an efficient representation for sets consisting of several\n    continuous ranges, e.g. 1-100,200-400,402-1000 is represented\n    internally as a list of three pairs: [(1,100), (200,400),\n    (402,1000)].  The internal representation is always kept normalized.\n\n    The constructor has up to three arguments:\n    - the string used to initialize the set (default ''),\n    - the separator between ranges (default ',')\n    - the separator between begin and end of a range (default '-')\n    The separators must be strings (not regexprs) and should be different.\n\n    The tostring() function yields a string that can be passed to another\n    IntSet constructor; __repr__() is a valid IntSet constructor itself.\n    ", lineno=787, col_offset=-1), lineno=787, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=794, col_offset=17), Name('data', Param(), lineno=794, col_offset=23), Name('sep', Param(), lineno=794, col_offset=36), Name('rng', Param(), lineno=794, col_offset=47)], None, None, [Name('None', Load(), lineno=794, col_offset=30), Str(',', lineno=794, col_offset=42), Str('-', lineno=794, col_offset=53)]), [Assign([Attribute(Name('self', Load(), lineno=795, col_offset=8), 'pairs', Store(), lineno=795, col_offset=8)], List([], Load(), lineno=795, col_offset=21), lineno=795, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=796, col_offset=8), 'sep', Store(), lineno=796, col_offset=8)], Name('sep', Load(), lineno=796, col_offset=19), lineno=796, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=797, col_offset=8), 'rng', Store(), lineno=797, col_offset=8)], Name('rng', Load(), lineno=797, col_offset=19), lineno=797, col_offset=8), If(Name('data', Load(), lineno=798, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=798, col_offset=17), 'fromstring', Load(), lineno=798, col_offset=17), [Name('data', Load(), lineno=798, col_offset=33)], [], None, None, lineno=798, col_offset=17), lineno=798, col_offset=17)], [], lineno=798, col_offset=8)], [], lineno=794, col_offset=4), FunctionDef('reset', arguments([Name('self', Param(), lineno=800, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=801, col_offset=8), 'pairs', Store(), lineno=801, col_offset=8)], List([], Load(), lineno=801, col_offset=21), lineno=801, col_offset=8)], [], lineno=800, col_offset=4), FunctionDef('__cmp__', arguments([Name('self', Param(), lineno=803, col_offset=16), Name('other', Param(), lineno=803, col_offset=22)], None, None, []), [Return(Call(Name('cmp', Load(), lineno=804, col_offset=15), [Attribute(Name('self', Load(), lineno=804, col_offset=19), 'pairs', Load(), lineno=804, col_offset=19), Attribute(Name('other', Load(), lineno=804, col_offset=31), 'pairs', Load(), lineno=804, col_offset=31)], [], None, None, lineno=804, col_offset=15), lineno=804, col_offset=8)], [], lineno=803, col_offset=4), FunctionDef('__hash__', arguments([Name('self', Param(), lineno=806, col_offset=17)], None, None, []), [Return(Call(Name('hash', Load(), lineno=807, col_offset=15), [Attribute(Name('self', Load(), lineno=807, col_offset=20), 'pairs', Load(), lineno=807, col_offset=20)], [], None, None, lineno=807, col_offset=15), lineno=807, col_offset=8)], [], lineno=806, col_offset=4), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=809, col_offset=17)], None, None, []), [Return(BinOp(Str('IntSet(%r, %r, %r)', lineno=810, col_offset=15), Mod(), Tuple([Call(Attribute(Name('self', Load(), lineno=810, col_offset=39), 'tostring', Load(), lineno=810, col_offset=39), [], [], None, None, lineno=810, col_offset=39), Attribute(Name('self', Load(), lineno=810, col_offset=56), 'sep', Load(), lineno=810, col_offset=56), Attribute(Name('self', Load(), lineno=810, col_offset=66), 'rng', Load(), lineno=810, col_offset=66)], Load(), lineno=810, col_offset=39), lineno=810, col_offset=15), lineno=810, col_offset=8)], [], lineno=809, col_offset=4), FunctionDef('normalize', arguments([Name('self', Param(), lineno=812, col_offset=18)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=813, col_offset=8), 'pairs', Load(), lineno=813, col_offset=8), 'sort', Load(), lineno=813, col_offset=8), [], [], None, None, lineno=813, col_offset=8), lineno=813, col_offset=8), Assign([Name('i', Store(), lineno=814, col_offset=8)], Num(1, lineno=814, col_offset=12), lineno=814, col_offset=8), While(Compare(Name('i', Load(), lineno=815, col_offset=14), [Lt()], [Call(Name('len', Load(), lineno=815, col_offset=18), [Attribute(Name('self', Load(), lineno=815, col_offset=22), 'pairs', Load(), lineno=815, col_offset=22)], [], None, None, lineno=815, col_offset=18)], lineno=815, col_offset=14), [Assign([Tuple([Name('alo', Store(), lineno=816, col_offset=12), Name('ahi', Store(), lineno=816, col_offset=17)], Store(), lineno=816, col_offset=12)], Subscript(Attribute(Name('self', Load(), lineno=816, col_offset=23), 'pairs', Load(), lineno=816, col_offset=23), Index(BinOp(Name('i', Load(), lineno=816, col_offset=34), Sub(), Num(1, lineno=816, col_offset=36), lineno=816, col_offset=34)), Load(), lineno=816, col_offset=23), lineno=816, col_offset=12), Assign([Tuple([Name('blo', Store(), lineno=817, col_offset=12), Name('bhi', Store(), lineno=817, col_offset=17)], Store(), lineno=817, col_offset=12)], Subscript(Attribute(Name('self', Load(), lineno=817, col_offset=23), 'pairs', Load(), lineno=817, col_offset=23), Index(Name('i', Load(), lineno=817, col_offset=34)), Load(), lineno=817, col_offset=23), lineno=817, col_offset=12), If(Compare(Name('ahi', Load(), lineno=818, col_offset=15), [GtE()], [BinOp(Name('blo', Load(), lineno=818, col_offset=22), Sub(), Num(1, lineno=818, col_offset=26), lineno=818, col_offset=22)], lineno=818, col_offset=15), [Assign([Subscript(Attribute(Name('self', Load(), lineno=819, col_offset=16), 'pairs', Load(), lineno=819, col_offset=16), Slice(BinOp(Name('i', Load(), lineno=819, col_offset=27), Sub(), Num(1, lineno=819, col_offset=29), lineno=819, col_offset=27), BinOp(Name('i', Load(), lineno=819, col_offset=31), Add(), Num(1, lineno=819, col_offset=33), lineno=819, col_offset=31), None), Store(), lineno=819, col_offset=16)], List([Tuple([Name('alo', Load(), lineno=819, col_offset=40), Call(Name('max', Load(), lineno=819, col_offset=45), [Name('ahi', Load(), lineno=819, col_offset=49), Name('bhi', Load(), lineno=819, col_offset=54)], [], None, None, lineno=819, col_offset=45)], Load(), lineno=819, col_offset=40)], Load(), lineno=819, col_offset=38), lineno=819, col_offset=16)], [Assign([Name('i', Store(), lineno=821, col_offset=16)], BinOp(Name('i', Load(), lineno=821, col_offset=20), Add(), Num(1, lineno=821, col_offset=22), lineno=821, col_offset=20), lineno=821, col_offset=16)], lineno=818, col_offset=12)], [], lineno=815, col_offset=8)], [], lineno=812, col_offset=4), FunctionDef('tostring', arguments([Name('self', Param(), lineno=823, col_offset=17)], None, None, []), [Assign([Name('s', Store(), lineno=824, col_offset=8)], Str('', lineno=824, col_offset=12), lineno=824, col_offset=8), For(Tuple([Name('lo', Store(), lineno=825, col_offset=12), Name('hi', Store(), lineno=825, col_offset=16)], Store(), lineno=825, col_offset=12), Attribute(Name('self', Load(), lineno=825, col_offset=22), 'pairs', Load(), lineno=825, col_offset=22), [If(Compare(Name('lo', Load(), lineno=826, col_offset=15), [Eq()], [Name('hi', Load(), lineno=826, col_offset=21)], lineno=826, col_offset=15), [Assign([Name('t', Store(), lineno=826, col_offset=25)], Call(Name('repr', Load(), lineno=826, col_offset=29), [Name('lo', Load(), lineno=826, col_offset=34)], [], None, None, lineno=826, col_offset=29), lineno=826, col_offset=25)], [Assign([Name('t', Store(), lineno=827, col_offset=18)], BinOp(BinOp(Call(Name('repr', Load(), lineno=827, col_offset=22), [Name('lo', Load(), lineno=827, col_offset=27)], [], None, None, lineno=827, col_offset=22), Add(), Attribute(Name('self', Load(), lineno=827, col_offset=33), 'rng', Load(), lineno=827, col_offset=33), lineno=827, col_offset=22), Add(), Call(Name('repr', Load(), lineno=827, col_offset=44), [Name('hi', Load(), lineno=827, col_offset=49)], [], None, None, lineno=827, col_offset=44), lineno=827, col_offset=42), lineno=827, col_offset=18)], lineno=826, col_offset=12), If(Name('s', Load(), lineno=828, col_offset=15), [Assign([Name('s', Store(), lineno=828, col_offset=18)], BinOp(Name('s', Load(), lineno=828, col_offset=22), Add(), BinOp(Attribute(Name('self', Load(), lineno=828, col_offset=27), 'sep', Load(), lineno=828, col_offset=27), Add(), Name('t', Load(), lineno=828, col_offset=38), lineno=828, col_offset=27), lineno=828, col_offset=22), lineno=828, col_offset=18)], [Assign([Name('s', Store(), lineno=829, col_offset=18)], Name('t', Load(), lineno=829, col_offset=22), lineno=829, col_offset=18)], lineno=828, col_offset=12)], [], lineno=825, col_offset=8), Return(Name('s', Load(), lineno=830, col_offset=15), lineno=830, col_offset=8)], [], lineno=823, col_offset=4), FunctionDef('tolist', arguments([Name('self', Param(), lineno=832, col_offset=15)], None, None, []), [Assign([Name('l', Store(), lineno=833, col_offset=8)], List([], Load(), lineno=833, col_offset=12), lineno=833, col_offset=8), For(Tuple([Name('lo', Store(), lineno=834, col_offset=12), Name('hi', Store(), lineno=834, col_offset=16)], Store(), lineno=834, col_offset=12), Attribute(Name('self', Load(), lineno=834, col_offset=22), 'pairs', Load(), lineno=834, col_offset=22), [Assign([Name('m', Store(), lineno=835, col_offset=12)], Call(Name('range', Load(), lineno=835, col_offset=16), [Name('lo', Load(), lineno=835, col_offset=22), BinOp(Name('hi', Load(), lineno=835, col_offset=26), Add(), Num(1, lineno=835, col_offset=29), lineno=835, col_offset=26)], [], None, None, lineno=835, col_offset=16), lineno=835, col_offset=12), Assign([Name('l', Store(), lineno=836, col_offset=12)], BinOp(Name('l', Load(), lineno=836, col_offset=16), Add(), Name('m', Load(), lineno=836, col_offset=20), lineno=836, col_offset=16), lineno=836, col_offset=12)], [], lineno=834, col_offset=8), Return(Name('l', Load(), lineno=837, col_offset=15), lineno=837, col_offset=8)], [], lineno=832, col_offset=4), FunctionDef('fromlist', arguments([Name('self', Param(), lineno=839, col_offset=17), Name('list', Param(), lineno=839, col_offset=23)], None, None, []), [For(Name('i', Store(), lineno=840, col_offset=12), Name('list', Load(), lineno=840, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=841, col_offset=12), 'append', Load(), lineno=841, col_offset=12), [Name('i', Load(), lineno=841, col_offset=24)], [], None, None, lineno=841, col_offset=12), lineno=841, col_offset=12)], [], lineno=840, col_offset=8)], [], lineno=839, col_offset=4), FunctionDef('clone', arguments([Name('self', Param(), lineno=843, col_offset=14)], None, None, []), [Assign([Name('new', Store(), lineno=844, col_offset=8)], Call(Name('IntSet', Load(), lineno=844, col_offset=14), [], [], None, None, lineno=844, col_offset=14), lineno=844, col_offset=8), Assign([Attribute(Name('new', Load(), lineno=845, col_offset=8), 'pairs', Store(), lineno=845, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=845, col_offset=20), 'pairs', Load(), lineno=845, col_offset=20), Slice(None, None, None), Load(), lineno=845, col_offset=20), lineno=845, col_offset=8), Return(Name('new', Load(), lineno=846, col_offset=15), lineno=846, col_offset=8)], [], lineno=843, col_offset=4), FunctionDef('min', arguments([Name('self', Param(), lineno=848, col_offset=12)], None, None, []), [Return(Subscript(Subscript(Attribute(Name('self', Load(), lineno=849, col_offset=15), 'pairs', Load(), lineno=849, col_offset=15), Index(Num(0, lineno=849, col_offset=26)), Load(), lineno=849, col_offset=15), Index(Num(0, lineno=849, col_offset=29)), Load(), lineno=849, col_offset=15), lineno=849, col_offset=8)], [], lineno=848, col_offset=4), FunctionDef('max', arguments([Name('self', Param(), lineno=851, col_offset=12)], None, None, []), [Return(Subscript(Subscript(Attribute(Name('self', Load(), lineno=852, col_offset=15), 'pairs', Load(), lineno=852, col_offset=15), Index(Num(-1, lineno=852, col_offset=27)), Load(), lineno=852, col_offset=15), Index(Num(-1, lineno=852, col_offset=31)), Load(), lineno=852, col_offset=15), lineno=852, col_offset=8)], [], lineno=851, col_offset=4), FunctionDef('contains', arguments([Name('self', Param(), lineno=854, col_offset=17), Name('x', Param(), lineno=854, col_offset=23)], None, None, []), [For(Tuple([Name('lo', Store(), lineno=855, col_offset=12), Name('hi', Store(), lineno=855, col_offset=16)], Store(), lineno=855, col_offset=12), Attribute(Name('self', Load(), lineno=855, col_offset=22), 'pairs', Load(), lineno=855, col_offset=22), [If(Compare(Name('lo', Load(), lineno=856, col_offset=15), [LtE(), LtE()], [Name('x', Load(), lineno=856, col_offset=21), Name('hi', Load(), lineno=856, col_offset=26)], lineno=856, col_offset=15), [Return(Name('True', Load(), lineno=856, col_offset=37), lineno=856, col_offset=30)], [], lineno=856, col_offset=12)], [], lineno=855, col_offset=8), Return(Name('False', Load(), lineno=857, col_offset=15), lineno=857, col_offset=8)], [], lineno=854, col_offset=4), FunctionDef('append', arguments([Name('self', Param(), lineno=859, col_offset=15), Name('x', Param(), lineno=859, col_offset=21)], None, None, []), [For(Name('i', Store(), lineno=860, col_offset=12), Call(Name('range', Load(), lineno=860, col_offset=17), [Call(Name('len', Load(), lineno=860, col_offset=23), [Attribute(Name('self', Load(), lineno=860, col_offset=27), 'pairs', Load(), lineno=860, col_offset=27)], [], None, None, lineno=860, col_offset=23)], [], None, None, lineno=860, col_offset=17), [Assign([Tuple([Name('lo', Store(), lineno=861, col_offset=12), Name('hi', Store(), lineno=861, col_offset=16)], Store(), lineno=861, col_offset=12)], Subscript(Attribute(Name('self', Load(), lineno=861, col_offset=21), 'pairs', Load(), lineno=861, col_offset=21), Index(Name('i', Load(), lineno=861, col_offset=32)), Load(), lineno=861, col_offset=21), lineno=861, col_offset=12), If(Compare(Name('x', Load(), lineno=862, col_offset=15), [Lt()], [Name('lo', Load(), lineno=862, col_offset=19)], lineno=862, col_offset=15), [If(Compare(BinOp(Name('x', Load(), lineno=863, col_offset=19), Add(), Num(1, lineno=863, col_offset=21), lineno=863, col_offset=19), [Eq()], [Name('lo', Load(), lineno=863, col_offset=26)], lineno=863, col_offset=19), [Assign([Subscript(Attribute(Name('self', Load(), lineno=864, col_offset=20), 'pairs', Load(), lineno=864, col_offset=20), Index(Name('i', Load(), lineno=864, col_offset=31)), Store(), lineno=864, col_offset=20)], Tuple([Name('x', Load(), lineno=864, col_offset=37), Name('hi', Load(), lineno=864, col_offset=40)], Load(), lineno=864, col_offset=37), lineno=864, col_offset=20)], [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=866, col_offset=20), 'pairs', Load(), lineno=866, col_offset=20), 'insert', Load(), lineno=866, col_offset=20), [Name('i', Load(), lineno=866, col_offset=38), Tuple([Name('x', Load(), lineno=866, col_offset=42), Name('x', Load(), lineno=866, col_offset=45)], Load(), lineno=866, col_offset=42)], [], None, None, lineno=866, col_offset=20), lineno=866, col_offset=20)], lineno=863, col_offset=16), If(BoolOp(And(), [Compare(Name('i', Load(), lineno=867, col_offset=19), [Gt()], [Num(0, lineno=867, col_offset=23)], lineno=867, col_offset=19), Compare(BinOp(Name('x', Load(), lineno=867, col_offset=29), Sub(), Num(1, lineno=867, col_offset=31), lineno=867, col_offset=29), [Eq()], [Subscript(Subscript(Attribute(Name('self', Load(), lineno=867, col_offset=36), 'pairs', Load(), lineno=867, col_offset=36), Index(BinOp(Name('i', Load(), lineno=867, col_offset=47), Sub(), Num(1, lineno=867, col_offset=49), lineno=867, col_offset=47)), Load(), lineno=867, col_offset=36), Index(Num(1, lineno=867, col_offset=52)), Load(), lineno=867, col_offset=36)], lineno=867, col_offset=29)], lineno=867, col_offset=19), [Assign([Subscript(Attribute(Name('self', Load(), lineno=869, col_offset=20), 'pairs', Load(), lineno=869, col_offset=20), Slice(BinOp(Name('i', Load(), lineno=869, col_offset=31), Sub(), Num(1, lineno=869, col_offset=33), lineno=869, col_offset=31), BinOp(Name('i', Load(), lineno=869, col_offset=35), Add(), Num(1, lineno=869, col_offset=37), lineno=869, col_offset=35), None), Store(), lineno=869, col_offset=20)], List([Tuple([Subscript(Subscript(Attribute(Name('self', Load(), lineno=870, col_offset=29), 'pairs', Load(), lineno=870, col_offset=29), Index(BinOp(Name('i', Load(), lineno=870, col_offset=40), Sub(), Num(1, lineno=870, col_offset=42), lineno=870, col_offset=40)), Load(), lineno=870, col_offset=29), Index(Num(0, lineno=870, col_offset=45)), Load(), lineno=870, col_offset=29), Subscript(Subscript(Attribute(Name('self', Load(), lineno=871, col_offset=29), 'pairs', Load(), lineno=871, col_offset=29), Index(Name('i', Load(), lineno=871, col_offset=40)), Load(), lineno=871, col_offset=29), Index(Num(1, lineno=871, col_offset=43)), Load(), lineno=871, col_offset=29)], Load(), lineno=870, col_offset=29)], Load(), lineno=869, col_offset=42), lineno=869, col_offset=20)], [], lineno=867, col_offset=16), Return(None, lineno=873, col_offset=16)], [], lineno=862, col_offset=12), If(Compare(Name('x', Load(), lineno=874, col_offset=15), [LtE()], [Name('hi', Load(), lineno=874, col_offset=20)], lineno=874, col_offset=15), [Return(None, lineno=875, col_offset=16)], [], lineno=874, col_offset=12)], [], lineno=860, col_offset=8), Assign([Name('i', Store(), lineno=876, col_offset=8)], BinOp(Call(Name('len', Load(), lineno=876, col_offset=12), [Attribute(Name('self', Load(), lineno=876, col_offset=16), 'pairs', Load(), lineno=876, col_offset=16)], [], None, None, lineno=876, col_offset=12), Sub(), Num(1, lineno=876, col_offset=30), lineno=876, col_offset=12), lineno=876, col_offset=8), If(Compare(Name('i', Load(), lineno=877, col_offset=11), [GtE()], [Num(0, lineno=877, col_offset=16)], lineno=877, col_offset=11), [Assign([Tuple([Name('lo', Store(), lineno=878, col_offset=12), Name('hi', Store(), lineno=878, col_offset=16)], Store(), lineno=878, col_offset=12)], Subscript(Attribute(Name('self', Load(), lineno=878, col_offset=21), 'pairs', Load(), lineno=878, col_offset=21), Index(Name('i', Load(), lineno=878, col_offset=32)), Load(), lineno=878, col_offset=21), lineno=878, col_offset=12), If(Compare(BinOp(Name('x', Load(), lineno=879, col_offset=15), Sub(), Num(1, lineno=879, col_offset=17), lineno=879, col_offset=15), [Eq()], [Name('hi', Load(), lineno=879, col_offset=22)], lineno=879, col_offset=15), [Assign([Subscript(Attribute(Name('self', Load(), lineno=880, col_offset=16), 'pairs', Load(), lineno=880, col_offset=16), Index(Name('i', Load(), lineno=880, col_offset=27)), Store(), lineno=880, col_offset=16)], Tuple([Name('lo', Load(), lineno=880, col_offset=32), Name('x', Load(), lineno=880, col_offset=36)], Load(), lineno=880, col_offset=32), lineno=880, col_offset=16), Return(None, lineno=881, col_offset=16)], [], lineno=879, col_offset=12)], [], lineno=877, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=882, col_offset=8), 'pairs', Load(), lineno=882, col_offset=8), 'append', Load(), lineno=882, col_offset=8), [Tuple([Name('x', Load(), lineno=882, col_offset=27), Name('x', Load(), lineno=882, col_offset=30)], Load(), lineno=882, col_offset=27)], [], None, None, lineno=882, col_offset=8), lineno=882, col_offset=8)], [], lineno=859, col_offset=4), FunctionDef('addpair', arguments([Name('self', Param(), lineno=884, col_offset=16), Name('xlo', Param(), lineno=884, col_offset=22), Name('xhi', Param(), lineno=884, col_offset=27)], None, None, []), [If(Compare(Name('xlo', Load(), lineno=885, col_offset=11), [Gt()], [Name('xhi', Load(), lineno=885, col_offset=17)], lineno=885, col_offset=11), [Return(None, lineno=885, col_offset=22)], [], lineno=885, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=886, col_offset=8), 'pairs', Load(), lineno=886, col_offset=8), 'append', Load(), lineno=886, col_offset=8), [Tuple([Name('xlo', Load(), lineno=886, col_offset=27), Name('xhi', Load(), lineno=886, col_offset=32)], Load(), lineno=886, col_offset=27)], [], None, None, lineno=886, col_offset=8), lineno=886, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=887, col_offset=8), 'normalize', Load(), lineno=887, col_offset=8), [], [], None, None, lineno=887, col_offset=8), lineno=887, col_offset=8)], [], lineno=884, col_offset=4), FunctionDef('fromstring', arguments([Name('self', Param(), lineno=889, col_offset=19), Name('data', Param(), lineno=889, col_offset=25)], None, None, []), [Assign([Name('new', Store(), lineno=890, col_offset=8)], List([], Load(), lineno=890, col_offset=14), lineno=890, col_offset=8), For(Name('part', Store(), lineno=891, col_offset=12), Call(Attribute(Name('data', Load(), lineno=891, col_offset=20), 'split', Load(), lineno=891, col_offset=20), [Attribute(Name('self', Load(), lineno=891, col_offset=31), 'sep', Load(), lineno=891, col_offset=31)], [], None, None, lineno=891, col_offset=20), [Assign([Name('list', Store(), lineno=892, col_offset=12)], List([], Load(), lineno=892, col_offset=19), lineno=892, col_offset=12), For(Name('subp', Store(), lineno=893, col_offset=16), Call(Attribute(Name('part', Load(), lineno=893, col_offset=24), 'split', Load(), lineno=893, col_offset=24), [Attribute(Name('self', Load(), lineno=893, col_offset=35), 'rng', Load(), lineno=893, col_offset=35)], [], None, None, lineno=893, col_offset=24), [Assign([Name('s', Store(), lineno=894, col_offset=16)], Call(Attribute(Name('subp', Load(), lineno=894, col_offset=20), 'strip', Load(), lineno=894, col_offset=20), [], [], None, None, lineno=894, col_offset=20), lineno=894, col_offset=16), Expr(Call(Attribute(Name('list', Load(), lineno=895, col_offset=16), 'append', Load(), lineno=895, col_offset=16), [Call(Name('int', Load(), lineno=895, col_offset=28), [Name('s', Load(), lineno=895, col_offset=32)], [], None, None, lineno=895, col_offset=28)], [], None, None, lineno=895, col_offset=16), lineno=895, col_offset=16)], [], lineno=893, col_offset=12), If(Compare(Call(Name('len', Load(), lineno=896, col_offset=15), [Name('list', Load(), lineno=896, col_offset=19)], [], None, None, lineno=896, col_offset=15), [Eq()], [Num(1, lineno=896, col_offset=28)], lineno=896, col_offset=15), [Expr(Call(Attribute(Name('new', Load(), lineno=897, col_offset=16), 'append', Load(), lineno=897, col_offset=16), [Tuple([Subscript(Name('list', Load(), lineno=897, col_offset=28), Index(Num(0, lineno=897, col_offset=33)), Load(), lineno=897, col_offset=28), Subscript(Name('list', Load(), lineno=897, col_offset=37), Index(Num(0, lineno=897, col_offset=42)), Load(), lineno=897, col_offset=37)], Load(), lineno=897, col_offset=28)], [], None, None, lineno=897, col_offset=16), lineno=897, col_offset=16)], [If(BoolOp(And(), [Compare(Call(Name('len', Load(), lineno=898, col_offset=17), [Name('list', Load(), lineno=898, col_offset=21)], [], None, None, lineno=898, col_offset=17), [Eq()], [Num(2, lineno=898, col_offset=30)], lineno=898, col_offset=17), Compare(Subscript(Name('list', Load(), lineno=898, col_offset=36), Index(Num(0, lineno=898, col_offset=41)), Load(), lineno=898, col_offset=36), [LtE()], [Subscript(Name('list', Load(), lineno=898, col_offset=47), Index(Num(1, lineno=898, col_offset=52)), Load(), lineno=898, col_offset=47)], lineno=898, col_offset=36)], lineno=898, col_offset=17), [Expr(Call(Attribute(Name('new', Load(), lineno=899, col_offset=16), 'append', Load(), lineno=899, col_offset=16), [Tuple([Subscript(Name('list', Load(), lineno=899, col_offset=28), Index(Num(0, lineno=899, col_offset=33)), Load(), lineno=899, col_offset=28), Subscript(Name('list', Load(), lineno=899, col_offset=37), Index(Num(1, lineno=899, col_offset=42)), Load(), lineno=899, col_offset=37)], Load(), lineno=899, col_offset=28)], [], None, None, lineno=899, col_offset=16), lineno=899, col_offset=16)], [Raise(Name('ValueError', Load(), lineno=901, col_offset=22), Str('bad data passed to IntSet', lineno=901, col_offset=34), None, lineno=901, col_offset=16)], lineno=898, col_offset=17)], lineno=896, col_offset=12)], [], lineno=891, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=902, col_offset=8), 'pairs', Store(), lineno=902, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=902, col_offset=21), 'pairs', Load(), lineno=902, col_offset=21), Add(), Name('new', Load(), lineno=902, col_offset=34), lineno=902, col_offset=21), lineno=902, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=903, col_offset=8), 'normalize', Load(), lineno=903, col_offset=8), [], [], None, None, lineno=903, col_offset=8), lineno=903, col_offset=8)], [], lineno=889, col_offset=4)], [], lineno=771, col_offset=0), FunctionDef('pickline', arguments([Name('file', Param(), lineno=908, col_offset=13), Name('key', Param(), lineno=908, col_offset=19), Name('casefold', Param(), lineno=908, col_offset=24)], None, None, [Num(1, lineno=908, col_offset=35)]), [TryExcept([Assign([Name('f', Store(), lineno=910, col_offset=8)], Call(Name('open', Load(), lineno=910, col_offset=12), [Name('file', Load(), lineno=910, col_offset=17), Str('r', lineno=910, col_offset=23)], [], None, None, lineno=910, col_offset=12), lineno=910, col_offset=8)], [ExceptHandler(Name('IOError', Load(), lineno=911, col_offset=11), None, [Return(Name('None', Load(), lineno=912, col_offset=15), lineno=912, col_offset=8)], lineno=911, col_offset=4)], [], lineno=909, col_offset=4), Assign([Name('pat', Store(), lineno=913, col_offset=4)], BinOp(Call(Attribute(Name('re', Load(), lineno=913, col_offset=10), 'escape', Load(), lineno=913, col_offset=10), [Name('key', Load(), lineno=913, col_offset=20)], [], None, None, lineno=913, col_offset=10), Add(), Str(':', lineno=913, col_offset=27), lineno=913, col_offset=10), lineno=913, col_offset=4), Assign([Name('prog', Store(), lineno=914, col_offset=4)], Call(Attribute(Name('re', Load(), lineno=914, col_offset=11), 'compile', Load(), lineno=914, col_offset=11), [Name('pat', Load(), lineno=914, col_offset=22), BoolOp(And(), [Name('casefold', Load(), lineno=914, col_offset=27), Attribute(Name('re', Load(), lineno=914, col_offset=40), 'IGNORECASE', Load(), lineno=914, col_offset=40)], lineno=914, col_offset=27)], [], None, None, lineno=914, col_offset=11), lineno=914, col_offset=4), While(Num(1, lineno=915, col_offset=10), [Assign([Name('line', Store(), lineno=916, col_offset=8)], Call(Attribute(Name('f', Load(), lineno=916, col_offset=15), 'readline', Load(), lineno=916, col_offset=15), [], [], None, None, lineno=916, col_offset=15), lineno=916, col_offset=8), If(UnaryOp(Not(), Name('line', Load(), lineno=917, col_offset=15), lineno=917, col_offset=11), [Break( lineno=917, col_offset=21)], [], lineno=917, col_offset=8), If(Call(Attribute(Name('prog', Load(), lineno=918, col_offset=11), 'match', Load(), lineno=918, col_offset=11), [Name('line', Load(), lineno=918, col_offset=22)], [], None, None, lineno=918, col_offset=11), [Assign([Name('text', Store(), lineno=919, col_offset=12)], Subscript(Name('line', Load(), lineno=919, col_offset=19), Slice(BinOp(Call(Name('len', Load(), lineno=919, col_offset=24), [Name('key', Load(), lineno=919, col_offset=28)], [], None, None, lineno=919, col_offset=24), Add(), Num(1, lineno=919, col_offset=33), lineno=919, col_offset=24), None, None), Load(), lineno=919, col_offset=19), lineno=919, col_offset=12), While(Num(1, lineno=920, col_offset=18), [Assign([Name('line', Store(), lineno=921, col_offset=16)], Call(Attribute(Name('f', Load(), lineno=921, col_offset=23), 'readline', Load(), lineno=921, col_offset=23), [], [], None, None, lineno=921, col_offset=23), lineno=921, col_offset=16), If(BoolOp(Or(), [UnaryOp(Not(), Name('line', Load(), lineno=922, col_offset=23), lineno=922, col_offset=19), UnaryOp(Not(), Call(Attribute(Subscript(Name('line', Load(), lineno=922, col_offset=35), Index(Num(0, lineno=922, col_offset=40)), Load(), lineno=922, col_offset=35), 'isspace', Load(), lineno=922, col_offset=35), [], [], None, None, lineno=922, col_offset=35), lineno=922, col_offset=31)], lineno=922, col_offset=19), [Break( lineno=923, col_offset=20)], [], lineno=922, col_offset=16), Assign([Name('text', Store(), lineno=924, col_offset=16)], BinOp(Name('text', Load(), lineno=924, col_offset=23), Add(), Name('line', Load(), lineno=924, col_offset=30), lineno=924, col_offset=23), lineno=924, col_offset=16)], [], lineno=920, col_offset=12), Return(Call(Attribute(Name('text', Load(), lineno=925, col_offset=19), 'strip', Load(), lineno=925, col_offset=19), [], [], None, None, lineno=925, col_offset=19), lineno=925, col_offset=12)], [], lineno=918, col_offset=8)], [], lineno=915, col_offset=4), Return(Name('None', Load(), lineno=926, col_offset=11), lineno=926, col_offset=4)], [], lineno=908, col_offset=0), FunctionDef('updateline', arguments([Name('file', Param(), lineno=928, col_offset=15), Name('key', Param(), lineno=928, col_offset=21), Name('value', Param(), lineno=928, col_offset=26), Name('casefold', Param(), lineno=928, col_offset=33)], None, None, [Num(1, lineno=928, col_offset=44)]), [TryExcept([Assign([Name('f', Store(), lineno=930, col_offset=8)], Call(Name('open', Load(), lineno=930, col_offset=12), [Name('file', Load(), lineno=930, col_offset=17), Str('r', lineno=930, col_offset=23)], [], None, None, lineno=930, col_offset=12), lineno=930, col_offset=8), Assign([Name('lines', Store(), lineno=931, col_offset=8)], Call(Attribute(Name('f', Load(), lineno=931, col_offset=16), 'readlines', Load(), lineno=931, col_offset=16), [], [], None, None, lineno=931, col_offset=16), lineno=931, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=932, col_offset=8), 'close', Load(), lineno=932, col_offset=8), [], [], None, None, lineno=932, col_offset=8), lineno=932, col_offset=8)], [ExceptHandler(Name('IOError', Load(), lineno=933, col_offset=11), None, [Assign([Name('lines', Store(), lineno=934, col_offset=8)], List([], Load(), lineno=934, col_offset=16), lineno=934, col_offset=8)], lineno=933, col_offset=4)], [], lineno=929, col_offset=4), Assign([Name('pat', Store(), lineno=935, col_offset=4)], BinOp(Call(Attribute(Name('re', Load(), lineno=935, col_offset=10), 'escape', Load(), lineno=935, col_offset=10), [Name('key', Load(), lineno=935, col_offset=20)], [], None, None, lineno=935, col_offset=10), Add(), Str(':(.*)\n', lineno=935, col_offset=27), lineno=935, col_offset=10), lineno=935, col_offset=4), Assign([Name('prog', Store(), lineno=936, col_offset=4)], Call(Attribute(Name('re', Load(), lineno=936, col_offset=11), 'compile', Load(), lineno=936, col_offset=11), [Name('pat', Load(), lineno=936, col_offset=22), BoolOp(And(), [Name('casefold', Load(), lineno=936, col_offset=27), Attribute(Name('re', Load(), lineno=936, col_offset=40), 'IGNORECASE', Load(), lineno=936, col_offset=40)], lineno=936, col_offset=27)], [], None, None, lineno=936, col_offset=11), lineno=936, col_offset=4), If(Compare(Name('value', Load(), lineno=937, col_offset=7), [Is()], [Name('None', Load(), lineno=937, col_offset=16)], lineno=937, col_offset=7), [Assign([Name('newline', Store(), lineno=938, col_offset=8)], Name('None', Load(), lineno=938, col_offset=18), lineno=938, col_offset=8)], [Assign([Name('newline', Store(), lineno=940, col_offset=8)], BinOp(Str('%s: %s\n', lineno=940, col_offset=18), Mod(), Tuple([Name('key', Load(), lineno=940, col_offset=32), Name('value', Load(), lineno=940, col_offset=37)], Load(), lineno=940, col_offset=32), lineno=940, col_offset=18), lineno=940, col_offset=8)], lineno=937, col_offset=4), For(Name('i', Store(), lineno=941, col_offset=8), Call(Name('range', Load(), lineno=941, col_offset=13), [Call(Name('len', Load(), lineno=941, col_offset=19), [Name('lines', Load(), lineno=941, col_offset=23)], [], None, None, lineno=941, col_offset=19)], [], None, None, lineno=941, col_offset=13), [Assign([Name('line', Store(), lineno=942, col_offset=8)], Subscript(Name('lines', Load(), lineno=942, col_offset=15), Index(Name('i', Load(), lineno=942, col_offset=21)), Load(), lineno=942, col_offset=15), lineno=942, col_offset=8), If(Call(Attribute(Name('prog', Load(), lineno=943, col_offset=11), 'match', Load(), lineno=943, col_offset=11), [Name('line', Load(), lineno=943, col_offset=22)], [], None, None, lineno=943, col_offset=11), [If(Compare(Name('newline', Load(), lineno=944, col_offset=15), [Is()], [Name('None', Load(), lineno=944, col_offset=26)], lineno=944, col_offset=15), [Delete([Subscript(Name('lines', Load(), lineno=945, col_offset=20), Index(Name('i', Load(), lineno=945, col_offset=26)), Del(), lineno=945, col_offset=20)], lineno=945, col_offset=16)], [Assign([Subscript(Name('lines', Load(), lineno=947, col_offset=16), Index(Name('i', Load(), lineno=947, col_offset=22)), Store(), lineno=947, col_offset=16)], Name('newline', Load(), lineno=947, col_offset=27), lineno=947, col_offset=16)], lineno=944, col_offset=12), Break( lineno=948, col_offset=12)], [], lineno=943, col_offset=8)], [If(Compare(Name('newline', Load(), lineno=950, col_offset=11), [IsNot()], [Name('None', Load(), lineno=950, col_offset=26)], lineno=950, col_offset=11), [Expr(Call(Attribute(Name('lines', Load(), lineno=951, col_offset=12), 'append', Load(), lineno=951, col_offset=12), [Name('newline', Load(), lineno=951, col_offset=25)], [], None, None, lineno=951, col_offset=12), lineno=951, col_offset=12)], [], lineno=950, col_offset=8)], lineno=941, col_offset=4), Assign([Name('tempfile', Store(), lineno=952, col_offset=4)], BinOp(Name('file', Load(), lineno=952, col_offset=15), Add(), Str('~', lineno=952, col_offset=22), lineno=952, col_offset=15), lineno=952, col_offset=4), Assign([Name('f', Store(), lineno=953, col_offset=4)], Call(Name('open', Load(), lineno=953, col_offset=8), [Name('tempfile', Load(), lineno=953, col_offset=13), Str('w', lineno=953, col_offset=23)], [], None, None, lineno=953, col_offset=8), lineno=953, col_offset=4), For(Name('line', Store(), lineno=954, col_offset=8), Name('lines', Load(), lineno=954, col_offset=16), [Expr(Call(Attribute(Name('f', Load(), lineno=955, col_offset=8), 'write', Load(), lineno=955, col_offset=8), [Name('line', Load(), lineno=955, col_offset=16)], [], None, None, lineno=955, col_offset=8), lineno=955, col_offset=8)], [], lineno=954, col_offset=4), Expr(Call(Attribute(Name('f', Load(), lineno=956, col_offset=4), 'close', Load(), lineno=956, col_offset=4), [], [], None, None, lineno=956, col_offset=4), lineno=956, col_offset=4), Expr(Call(Attribute(Name('os', Load(), lineno=957, col_offset=4), 'rename', Load(), lineno=957, col_offset=4), [Name('tempfile', Load(), lineno=957, col_offset=14), Name('file', Load(), lineno=957, col_offset=24)], [], None, None, lineno=957, col_offset=4), lineno=957, col_offset=4)], [], lineno=928, col_offset=0), FunctionDef('test', arguments([], None, None, []), [Global(['mh', 'f'], lineno=963, col_offset=4), Expr(Call(Attribute(Name('os', Load(), lineno=964, col_offset=4), 'system', Load(), lineno=964, col_offset=4), [Str('rm -rf $HOME/Mail/@test', lineno=964, col_offset=14)], [], None, None, lineno=964, col_offset=4), lineno=964, col_offset=4), Assign([Name('mh', Store(), lineno=965, col_offset=4)], Call(Name('MH', Load(), lineno=965, col_offset=9), [], [], None, None, lineno=965, col_offset=9), lineno=965, col_offset=4), FunctionDef('do', arguments([Name('s', Param(), lineno=966, col_offset=11)], None, None, []), [Print(None, [Name('s', Load(), lineno=966, col_offset=21)], True, lineno=966, col_offset=15), Print(None, [Call(Name('eval', Load(), lineno=966, col_offset=30), [Name('s', Load(), lineno=966, col_offset=35)], [], None, None, lineno=966, col_offset=30)], True, lineno=966, col_offset=24)], [], lineno=966, col_offset=4), Expr(Call(Name('do', Load(), lineno=967, col_offset=4), [Str('mh.listfolders()', lineno=967, col_offset=7)], [], None, None, lineno=967, col_offset=4), lineno=967, col_offset=4), Expr(Call(Name('do', Load(), lineno=968, col_offset=4), [Str('mh.listallfolders()', lineno=968, col_offset=7)], [], None, None, lineno=968, col_offset=4), lineno=968, col_offset=4), Assign([Name('testfolders', Store(), lineno=969, col_offset=4)], List([Str('@test', lineno=969, col_offset=19), Str('@test/test1', lineno=969, col_offset=28), Str('@test/test2', lineno=969, col_offset=43), Str('@test/test1/test11', lineno=970, col_offset=19), Str('@test/test1/test12', lineno=970, col_offset=41), Str('@test/test1/test11/test111', lineno=971, col_offset=19)], Load(), lineno=969, col_offset=18), lineno=969, col_offset=4), For(Name('t', Store(), lineno=972, col_offset=8), Name('testfolders', Load(), lineno=972, col_offset=13), [Expr(Call(Name('do', Load(), lineno=972, col_offset=26), [BinOp(Str('mh.makefolder(%r)', lineno=972, col_offset=29), Mod(), Tuple([Name('t', Load(), lineno=972, col_offset=52)], Load(), lineno=972, col_offset=52), lineno=972, col_offset=29)], [], None, None, lineno=972, col_offset=26), lineno=972, col_offset=26)], [], lineno=972, col_offset=4), Expr(Call(Name('do', Load(), lineno=973, col_offset=4), [Str("mh.listsubfolders('@test')", lineno=973, col_offset=7)], [], None, None, lineno=973, col_offset=4), lineno=973, col_offset=4), Expr(Call(Name('do', Load(), lineno=974, col_offset=4), [Str("mh.listallsubfolders('@test')", lineno=974, col_offset=7)], [], None, None, lineno=974, col_offset=4), lineno=974, col_offset=4), Assign([Name('f', Store(), lineno=975, col_offset=4)], Call(Attribute(Name('mh', Load(), lineno=975, col_offset=8), 'openfolder', Load(), lineno=975, col_offset=8), [Str('@test', lineno=975, col_offset=22)], [], None, None, lineno=975, col_offset=8), lineno=975, col_offset=4), Expr(Call(Name('do', Load(), lineno=976, col_offset=4), [Str('f.listsubfolders()', lineno=976, col_offset=7)], [], None, None, lineno=976, col_offset=4), lineno=976, col_offset=4), Expr(Call(Name('do', Load(), lineno=977, col_offset=4), [Str('f.listallsubfolders()', lineno=977, col_offset=7)], [], None, None, lineno=977, col_offset=4), lineno=977, col_offset=4), Expr(Call(Name('do', Load(), lineno=978, col_offset=4), [Str('f.getsequences()', lineno=978, col_offset=7)], [], None, None, lineno=978, col_offset=4), lineno=978, col_offset=4), Assign([Name('seqs', Store(), lineno=979, col_offset=4)], Call(Attribute(Name('f', Load(), lineno=979, col_offset=11), 'getsequences', Load(), lineno=979, col_offset=11), [], [], None, None, lineno=979, col_offset=11), lineno=979, col_offset=4), Assign([Subscript(Name('seqs', Load(), lineno=980, col_offset=4), Index(Str('foo', lineno=980, col_offset=9)), Store(), lineno=980, col_offset=4)], Call(Attribute(Call(Name('IntSet', Load(), lineno=980, col_offset=18), [Str('1-10 12-20', lineno=980, col_offset=25), Str(' ', lineno=980, col_offset=39)], [], None, None, lineno=980, col_offset=18), 'tolist', Load(), lineno=980, col_offset=18), [], [], None, None, lineno=980, col_offset=18), lineno=980, col_offset=4), Print(None, [Name('seqs', Load(), lineno=981, col_offset=10)], True, lineno=981, col_offset=4), Expr(Call(Attribute(Name('f', Load(), lineno=982, col_offset=4), 'putsequences', Load(), lineno=982, col_offset=4), [Name('seqs', Load(), lineno=982, col_offset=19)], [], None, None, lineno=982, col_offset=4), lineno=982, col_offset=4), Expr(Call(Name('do', Load(), lineno=983, col_offset=4), [Str('f.getsequences()', lineno=983, col_offset=7)], [], None, None, lineno=983, col_offset=4), lineno=983, col_offset=4), For(Name('t', Store(), lineno=984, col_offset=8), Call(Name('reversed', Load(), lineno=984, col_offset=13), [Name('testfolders', Load(), lineno=984, col_offset=22)], [], None, None, lineno=984, col_offset=13), [Expr(Call(Name('do', Load(), lineno=984, col_offset=36), [BinOp(Str('mh.deletefolder(%r)', lineno=984, col_offset=39), Mod(), Tuple([Name('t', Load(), lineno=984, col_offset=64)], Load(), lineno=984, col_offset=64), lineno=984, col_offset=39)], [], None, None, lineno=984, col_offset=36), lineno=984, col_offset=36)], [], lineno=984, col_offset=4), Expr(Call(Name('do', Load(), lineno=985, col_offset=4), [Str('mh.getcontext()', lineno=985, col_offset=7)], [], None, None, lineno=985, col_offset=4), lineno=985, col_offset=4), Assign([Name('context', Store(), lineno=986, col_offset=4)], Call(Attribute(Name('mh', Load(), lineno=986, col_offset=14), 'getcontext', Load(), lineno=986, col_offset=14), [], [], None, None, lineno=986, col_offset=14), lineno=986, col_offset=4), Assign([Name('f', Store(), lineno=987, col_offset=4)], Call(Attribute(Name('mh', Load(), lineno=987, col_offset=8), 'openfolder', Load(), lineno=987, col_offset=8), [Name('context', Load(), lineno=987, col_offset=22)], [], None, None, lineno=987, col_offset=8), lineno=987, col_offset=4), Expr(Call(Name('do', Load(), lineno=988, col_offset=4), [Str('f.getcurrent()', lineno=988, col_offset=7)], [], None, None, lineno=988, col_offset=4), lineno=988, col_offset=4), For(Name('seq', Store(), lineno=989, col_offset=8), Tuple([Str('first', lineno=989, col_offset=16), Str('last', lineno=989, col_offset=25), Str('cur', lineno=989, col_offset=33), Str('.', lineno=989, col_offset=40), Str('prev', lineno=989, col_offset=45), Str('next', lineno=989, col_offset=53), Str('first:3', lineno=990, col_offset=16), Str('last:3', lineno=990, col_offset=27), Str('cur:3', lineno=990, col_offset=37), Str('cur:-3', lineno=990, col_offset=46), Str('prev:3', lineno=991, col_offset=16), Str('next:3', lineno=991, col_offset=26), Str('1:3', lineno=992, col_offset=16), Str('1:-3', lineno=992, col_offset=23), Str('100:3', lineno=992, col_offset=31), Str('100:-3', lineno=992, col_offset=40), Str('10000:3', lineno=992, col_offset=50), Str('10000:-3', lineno=992, col_offset=61), Str('all', lineno=993, col_offset=16)], Load(), lineno=989, col_offset=16), [TryExcept([Expr(Call(Name('do', Load(), lineno=995, col_offset=12), [BinOp(Str('f.parsesequence(%r)', lineno=995, col_offset=15), Mod(), Tuple([Name('seq', Load(), lineno=995, col_offset=40)], Load(), lineno=995, col_offset=40), lineno=995, col_offset=15)], [], None, None, lineno=995, col_offset=12), lineno=995, col_offset=12)], [ExceptHandler(Name('Error', Load(), lineno=996, col_offset=15), Name('msg', Store(), lineno=996, col_offset=22), [Print(None, [Str('Error:', lineno=997, col_offset=18), Name('msg', Load(), lineno=997, col_offset=28)], True, lineno=997, col_offset=12)], lineno=996, col_offset=8)], [], lineno=994, col_offset=8), Assign([Name('stuff', Store(), lineno=998, col_offset=8)], Call(Attribute(Call(Attribute(Name('os', Load(), lineno=998, col_offset=16), 'popen', Load(), lineno=998, col_offset=16), [BinOp(Str('pick %r 2>/dev/null', lineno=998, col_offset=25), Mod(), Tuple([Name('seq', Load(), lineno=998, col_offset=50)], Load(), lineno=998, col_offset=50), lineno=998, col_offset=25)], [], None, None, lineno=998, col_offset=16), 'read', Load(), lineno=998, col_offset=16), [], [], None, None, lineno=998, col_offset=16), lineno=998, col_offset=8), Assign([Name('list', Store(), lineno=999, col_offset=8)], Call(Name('map', Load(), lineno=999, col_offset=15), [Name('int', Load(), lineno=999, col_offset=19), Call(Attribute(Name('stuff', Load(), lineno=999, col_offset=24), 'split', Load(), lineno=999, col_offset=24), [], [], None, None, lineno=999, col_offset=24)], [], None, None, lineno=999, col_offset=15), lineno=999, col_offset=8), Print(None, [Name('list', Load(), lineno=1000, col_offset=14), Str('<-- pick', lineno=1000, col_offset=20)], True, lineno=1000, col_offset=8)], [], lineno=989, col_offset=4), Expr(Call(Name('do', Load(), lineno=1001, col_offset=4), [Str('f.listmessages()', lineno=1001, col_offset=7)], [], None, None, lineno=1001, col_offset=4), lineno=1001, col_offset=4)], [], lineno=962, col_offset=0), If(Compare(Name('__name__', Load(), lineno=1004, col_offset=3), [Eq()], [Str('__main__', lineno=1004, col_offset=15)], lineno=1004, col_offset=3), [Expr(Call(Name('test', Load(), lineno=1005, col_offset=4), [], [], None, None, lineno=1005, col_offset=4), lineno=1005, col_offset=4)], [], lineno=1004, col_offset=0)])
