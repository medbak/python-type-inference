Module([Expr(Str('finddiv - a grep-like tool that looks for division operators.\n\nUsage: finddiv [-l] file_or_directory ...\n\nFor directory arguments, all files in the directory whose name ends in\n.py are processed, and subdirectories are processed recursively.\n\nThis actually tokenizes the files to avoid false hits in comments or\nstrings literals.\n\nBy default, this prints all lines containing a / or /= operator, in\ngrep -n style.  With the -l option specified, it prints the filename\nof files that contain at least one / or /= operator.\n', lineno=16, col_offset=-1), lineno=16, col_offset=-1), Import([alias('os', None)], lineno=18, col_offset=0), Import([alias('sys', None)], lineno=19, col_offset=0), Import([alias('getopt', None)], lineno=20, col_offset=0), Import([alias('tokenize', None)], lineno=21, col_offset=0), FunctionDef('main', arguments([], None, None, []), [TryExcept([Assign([Tuple([Name('opts', Store(), lineno=25, col_offset=8), Name('args', Store(), lineno=25, col_offset=14)], Store(), lineno=25, col_offset=8)], Call(Attribute(Name('getopt', Load(), lineno=25, col_offset=21), 'getopt', Load(), lineno=25, col_offset=21), [Subscript(Attribute(Name('sys', Load(), lineno=25, col_offset=35), 'argv', Load(), lineno=25, col_offset=35), Slice(Num(1, lineno=25, col_offset=44), None, None), Load(), lineno=25, col_offset=35), Str('lh', lineno=25, col_offset=49)], [], None, None, lineno=25, col_offset=21), lineno=25, col_offset=8)], [ExceptHandler(Attribute(Name('getopt', Load(), lineno=26, col_offset=11), 'error', Load(), lineno=26, col_offset=11), Name('msg', Store(), lineno=26, col_offset=25), [Expr(Call(Name('usage', Load(), lineno=27, col_offset=8), [Name('msg', Load(), lineno=27, col_offset=14)], [], None, None, lineno=27, col_offset=8), lineno=27, col_offset=8), Return(Num(2, lineno=28, col_offset=15), lineno=28, col_offset=8)], lineno=26, col_offset=4)], [], lineno=24, col_offset=4), If(UnaryOp(Not(), Name('args', Load(), lineno=29, col_offset=11), lineno=29, col_offset=7), [Expr(Call(Name('usage', Load(), lineno=30, col_offset=8), [Str('at least one file argument is required', lineno=30, col_offset=14)], [], None, None, lineno=30, col_offset=8), lineno=30, col_offset=8), Return(Num(2, lineno=31, col_offset=15), lineno=31, col_offset=8)], [], lineno=29, col_offset=4), Assign([Name('listnames', Store(), lineno=32, col_offset=4)], Num(0, lineno=32, col_offset=16), lineno=32, col_offset=4), For(Tuple([Name('o', Store(), lineno=33, col_offset=8), Name('a', Store(), lineno=33, col_offset=11)], Store(), lineno=33, col_offset=8), Name('opts', Load(), lineno=33, col_offset=16), [If(Compare(Name('o', Load(), lineno=34, col_offset=11), [Eq()], [Str('-h', lineno=34, col_offset=16)], lineno=34, col_offset=11), [Print(None, [Name('__doc__', Load(), lineno=35, col_offset=18)], True, lineno=35, col_offset=12), Return(None, lineno=36, col_offset=12)], [], lineno=34, col_offset=8), If(Compare(Name('o', Load(), lineno=37, col_offset=11), [Eq()], [Str('-l', lineno=37, col_offset=16)], lineno=37, col_offset=11), [Assign([Name('listnames', Store(), lineno=38, col_offset=12)], Num(1, lineno=38, col_offset=24), lineno=38, col_offset=12)], [], lineno=37, col_offset=8)], [], lineno=33, col_offset=4), Assign([Name('exit', Store(), lineno=39, col_offset=4)], Name('None', Load(), lineno=39, col_offset=11), lineno=39, col_offset=4), For(Name('filename', Store(), lineno=40, col_offset=8), Name('args', Load(), lineno=40, col_offset=20), [Assign([Name('x', Store(), lineno=41, col_offset=8)], Call(Name('process', Load(), lineno=41, col_offset=12), [Name('filename', Load(), lineno=41, col_offset=20), Name('listnames', Load(), lineno=41, col_offset=30)], [], None, None, lineno=41, col_offset=12), lineno=41, col_offset=8), Assign([Name('exit', Store(), lineno=42, col_offset=8)], BoolOp(Or(), [Name('exit', Load(), lineno=42, col_offset=15), Name('x', Load(), lineno=42, col_offset=23)], lineno=42, col_offset=15), lineno=42, col_offset=8)], [], lineno=40, col_offset=4), Return(Name('exit', Load(), lineno=43, col_offset=11), lineno=43, col_offset=4)], [], lineno=23, col_offset=0), FunctionDef('usage', arguments([Name('msg', Param(), lineno=45, col_offset=10)], None, None, []), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=46, col_offset=4), 'stderr', Load(), lineno=46, col_offset=4), 'write', Load(), lineno=46, col_offset=4), [BinOp(Str('%s: %s\n', lineno=46, col_offset=21), Mod(), Tuple([Subscript(Attribute(Name('sys', Load(), lineno=46, col_offset=35), 'argv', Load(), lineno=46, col_offset=35), Index(Num(0, lineno=46, col_offset=44)), Load(), lineno=46, col_offset=35), Name('msg', Load(), lineno=46, col_offset=48)], Load(), lineno=46, col_offset=35), lineno=46, col_offset=21)], [], None, None, lineno=46, col_offset=4), lineno=46, col_offset=4), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=47, col_offset=4), 'stderr', Load(), lineno=47, col_offset=4), 'write', Load(), lineno=47, col_offset=4), [BinOp(Str('Usage: %s [-l] file ...\n', lineno=47, col_offset=21), Mod(), Subscript(Attribute(Name('sys', Load(), lineno=47, col_offset=51), 'argv', Load(), lineno=47, col_offset=51), Index(Num(0, lineno=47, col_offset=60)), Load(), lineno=47, col_offset=51), lineno=47, col_offset=21)], [], None, None, lineno=47, col_offset=4), lineno=47, col_offset=4), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=48, col_offset=4), 'stderr', Load(), lineno=48, col_offset=4), 'write', Load(), lineno=48, col_offset=4), [BinOp(Str("Try `%s -h' for more information.\n", lineno=48, col_offset=21), Mod(), Subscript(Attribute(Name('sys', Load(), lineno=48, col_offset=61), 'argv', Load(), lineno=48, col_offset=61), Index(Num(0, lineno=48, col_offset=70)), Load(), lineno=48, col_offset=61), lineno=48, col_offset=21)], [], None, None, lineno=48, col_offset=4), lineno=48, col_offset=4)], [], lineno=45, col_offset=0), FunctionDef('process', arguments([Name('filename', Param(), lineno=50, col_offset=12), Name('listnames', Param(), lineno=50, col_offset=22)], None, None, []), [If(Call(Attribute(Attribute(Name('os', Load(), lineno=51, col_offset=7), 'path', Load(), lineno=51, col_offset=7), 'isdir', Load(), lineno=51, col_offset=7), [Name('filename', Load(), lineno=51, col_offset=21)], [], None, None, lineno=51, col_offset=7), [Return(Call(Name('processdir', Load(), lineno=52, col_offset=15), [Name('filename', Load(), lineno=52, col_offset=26), Name('listnames', Load(), lineno=52, col_offset=36)], [], None, None, lineno=52, col_offset=15), lineno=52, col_offset=8)], [], lineno=51, col_offset=4), TryExcept([Assign([Name('fp', Store(), lineno=54, col_offset=8)], Call(Name('open', Load(), lineno=54, col_offset=13), [Name('filename', Load(), lineno=54, col_offset=18)], [], None, None, lineno=54, col_offset=13), lineno=54, col_offset=8)], [ExceptHandler(Name('IOError', Load(), lineno=55, col_offset=11), Name('msg', Store(), lineno=55, col_offset=20), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=56, col_offset=8), 'stderr', Load(), lineno=56, col_offset=8), 'write', Load(), lineno=56, col_offset=8), [BinOp(Str("Can't open: %s\n", lineno=56, col_offset=25), Mod(), Name('msg', Load(), lineno=56, col_offset=46), lineno=56, col_offset=25)], [], None, None, lineno=56, col_offset=8), lineno=56, col_offset=8), Return(Num(1, lineno=57, col_offset=15), lineno=57, col_offset=8)], lineno=55, col_offset=4)], [], lineno=53, col_offset=4), Assign([Name('g', Store(), lineno=58, col_offset=4)], Call(Attribute(Name('tokenize', Load(), lineno=58, col_offset=8), 'generate_tokens', Load(), lineno=58, col_offset=8), [Attribute(Name('fp', Load(), lineno=58, col_offset=33), 'readline', Load(), lineno=58, col_offset=33)], [], None, None, lineno=58, col_offset=8), lineno=58, col_offset=4), Assign([Name('lastrow', Store(), lineno=59, col_offset=4)], Name('None', Load(), lineno=59, col_offset=14), lineno=59, col_offset=4), For(Tuple([Name('type', Store(), lineno=60, col_offset=8), Name('token', Store(), lineno=60, col_offset=14), Tuple([Name('row', Store(), lineno=60, col_offset=22), Name('col', Store(), lineno=60, col_offset=27)], Store(), lineno=60, col_offset=22), Name('end', Store(), lineno=60, col_offset=33), Name('line', Store(), lineno=60, col_offset=38)], Store(), lineno=60, col_offset=8), Name('g', Load(), lineno=60, col_offset=46), [If(Compare(Name('token', Load(), lineno=61, col_offset=11), [In()], [Tuple([Str('/', lineno=61, col_offset=21), Str('/=', lineno=61, col_offset=26)], Load(), lineno=61, col_offset=21)], lineno=61, col_offset=11), [If(Name('listnames', Load(), lineno=62, col_offset=15), [Print(None, [Name('filename', Load(), lineno=63, col_offset=22)], True, lineno=63, col_offset=16), Break( lineno=64, col_offset=16)], [], lineno=62, col_offset=12), If(Compare(Name('row', Load(), lineno=65, col_offset=15), [NotEq()], [Name('lastrow', Load(), lineno=65, col_offset=22)], lineno=65, col_offset=15), [Assign([Name('lastrow', Store(), lineno=66, col_offset=16)], Name('row', Load(), lineno=66, col_offset=26), lineno=66, col_offset=16), Print(None, [BinOp(Str('%s:%d:%s', lineno=67, col_offset=22), Mod(), Tuple([Name('filename', Load(), lineno=67, col_offset=36), Name('row', Load(), lineno=67, col_offset=46), Name('line', Load(), lineno=67, col_offset=51)], Load(), lineno=67, col_offset=36), lineno=67, col_offset=22)], False, lineno=67, col_offset=16)], [], lineno=65, col_offset=12)], [], lineno=61, col_offset=8)], [], lineno=60, col_offset=4), Expr(Call(Attribute(Name('fp', Load(), lineno=68, col_offset=4), 'close', Load(), lineno=68, col_offset=4), [], [], None, None, lineno=68, col_offset=4), lineno=68, col_offset=4)], [], lineno=50, col_offset=0), FunctionDef('processdir', arguments([Name('dir', Param(), lineno=70, col_offset=15), Name('listnames', Param(), lineno=70, col_offset=20)], None, None, []), [TryExcept([Assign([Name('names', Store(), lineno=72, col_offset=8)], Call(Attribute(Name('os', Load(), lineno=72, col_offset=16), 'listdir', Load(), lineno=72, col_offset=16), [Name('dir', Load(), lineno=72, col_offset=27)], [], None, None, lineno=72, col_offset=16), lineno=72, col_offset=8)], [ExceptHandler(Attribute(Name('os', Load(), lineno=73, col_offset=11), 'error', Load(), lineno=73, col_offset=11), Name('msg', Store(), lineno=73, col_offset=21), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=74, col_offset=8), 'stderr', Load(), lineno=74, col_offset=8), 'write', Load(), lineno=74, col_offset=8), [BinOp(Str("Can't list directory: %s\n", lineno=74, col_offset=25), Mod(), Name('dir', Load(), lineno=74, col_offset=56), lineno=74, col_offset=25)], [], None, None, lineno=74, col_offset=8), lineno=74, col_offset=8), Return(Num(1, lineno=75, col_offset=15), lineno=75, col_offset=8)], lineno=73, col_offset=4)], [], lineno=71, col_offset=4), Assign([Name('files', Store(), lineno=76, col_offset=4)], List([], Load(), lineno=76, col_offset=12), lineno=76, col_offset=4), For(Name('name', Store(), lineno=77, col_offset=8), Name('names', Load(), lineno=77, col_offset=16), [Assign([Name('fn', Store(), lineno=78, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=78, col_offset=13), 'path', Load(), lineno=78, col_offset=13), 'join', Load(), lineno=78, col_offset=13), [Name('dir', Load(), lineno=78, col_offset=26), Name('name', Load(), lineno=78, col_offset=31)], [], None, None, lineno=78, col_offset=13), lineno=78, col_offset=8), If(BoolOp(Or(), [Call(Attribute(Call(Attribute(Attribute(Name('os', Load(), lineno=79, col_offset=11), 'path', Load(), lineno=79, col_offset=11), 'normcase', Load(), lineno=79, col_offset=11), [Name('fn', Load(), lineno=79, col_offset=28)], [], None, None, lineno=79, col_offset=11), 'endswith', Load(), lineno=79, col_offset=11), [Str('.py', lineno=79, col_offset=41)], [], None, None, lineno=79, col_offset=11), Call(Attribute(Attribute(Name('os', Load(), lineno=79, col_offset=51), 'path', Load(), lineno=79, col_offset=51), 'isdir', Load(), lineno=79, col_offset=51), [Name('fn', Load(), lineno=79, col_offset=65)], [], None, None, lineno=79, col_offset=51)], lineno=79, col_offset=11), [Expr(Call(Attribute(Name('files', Load(), lineno=80, col_offset=12), 'append', Load(), lineno=80, col_offset=12), [Name('fn', Load(), lineno=80, col_offset=25)], [], None, None, lineno=80, col_offset=12), lineno=80, col_offset=12)], [], lineno=79, col_offset=8)], [], lineno=77, col_offset=4), Expr(Call(Attribute(Name('files', Load(), lineno=81, col_offset=4), 'sort', Load(), lineno=81, col_offset=4), [Lambda(arguments([Name('a', Param(), lineno=81, col_offset=22), Name('b', Param(), lineno=81, col_offset=25)], None, None, []), Call(Name('cmp', Load(), lineno=81, col_offset=28), [Call(Attribute(Attribute(Name('os', Load(), lineno=81, col_offset=32), 'path', Load(), lineno=81, col_offset=32), 'normcase', Load(), lineno=81, col_offset=32), [Name('a', Load(), lineno=81, col_offset=49)], [], None, None, lineno=81, col_offset=32), Call(Attribute(Attribute(Name('os', Load(), lineno=81, col_offset=53), 'path', Load(), lineno=81, col_offset=53), 'normcase', Load(), lineno=81, col_offset=53), [Name('b', Load(), lineno=81, col_offset=70)], [], None, None, lineno=81, col_offset=53)], [], None, None, lineno=81, col_offset=28), lineno=81, col_offset=15)], [], None, None, lineno=81, col_offset=4), lineno=81, col_offset=4), Assign([Name('exit', Store(), lineno=82, col_offset=4)], Name('None', Load(), lineno=82, col_offset=11), lineno=82, col_offset=4), For(Name('fn', Store(), lineno=83, col_offset=8), Name('files', Load(), lineno=83, col_offset=14), [Assign([Name('x', Store(), lineno=84, col_offset=8)], Call(Name('process', Load(), lineno=84, col_offset=12), [Name('fn', Load(), lineno=84, col_offset=20), Name('listnames', Load(), lineno=84, col_offset=24)], [], None, None, lineno=84, col_offset=12), lineno=84, col_offset=8), Assign([Name('exit', Store(), lineno=85, col_offset=8)], BoolOp(Or(), [Name('exit', Load(), lineno=85, col_offset=15), Name('x', Load(), lineno=85, col_offset=23)], lineno=85, col_offset=15), lineno=85, col_offset=8)], [], lineno=83, col_offset=4), Return(Name('exit', Load(), lineno=86, col_offset=11), lineno=86, col_offset=4)], [], lineno=70, col_offset=0), If(Compare(Name('__name__', Load(), lineno=88, col_offset=3), [Eq()], [Str('__main__', lineno=88, col_offset=15)], lineno=88, col_offset=3), [Expr(Call(Attribute(Name('sys', Load(), lineno=89, col_offset=4), 'exit', Load(), lineno=89, col_offset=4), [Call(Name('main', Load(), lineno=89, col_offset=13), [], [], None, None, lineno=89, col_offset=13)], [], None, None, lineno=89, col_offset=4), lineno=89, col_offset=4)], [], lineno=88, col_offset=0)])
