Module([Expr(Str("distutils.command.build\n\nImplements the Distutils 'build' command.", lineno=3, col_offset=-1), lineno=3, col_offset=-1), Assign([Name('__revision__', Store(), lineno=5, col_offset=0)], Str('$Id: build.py 77761 2010-01-26 22:46:15Z tarek.ziade $', lineno=5, col_offset=15), lineno=5, col_offset=0), Import([alias('sys', None), alias('os', None)], lineno=7, col_offset=0), ImportFrom('distutils.util', [alias('get_platform', None)], 0, lineno=9, col_offset=0), ImportFrom('distutils.core', [alias('Command', None)], 0, lineno=10, col_offset=0), ImportFrom('distutils.errors', [alias('DistutilsOptionError', None)], 0, lineno=11, col_offset=0), FunctionDef('show_compilers', arguments([], None, None, []), [ImportFrom('distutils.ccompiler', [alias('show_compilers', None)], 0, lineno=14, col_offset=4), Expr(Call(Name('show_compilers', Load(), lineno=15, col_offset=4), [], [], None, None, lineno=15, col_offset=4), lineno=15, col_offset=4)], [], lineno=13, col_offset=0), ClassDef('build', [Name('Command', Load(), lineno=17, col_offset=12)], [Assign([Name('description', Store(), lineno=19, col_offset=4)], Str('build everything needed to install', lineno=19, col_offset=18), lineno=19, col_offset=4), Assign([Name('user_options', Store(), lineno=21, col_offset=4)], List([Tuple([Str('build-base=', lineno=22, col_offset=9), Str('b', lineno=22, col_offset=24), Str('base directory for build library', lineno=23, col_offset=9)], Load(), lineno=22, col_offset=9), Tuple([Str('build-purelib=', lineno=24, col_offset=9), Name('None', Load(), lineno=24, col_offset=27), Str('build directory for platform-neutral distributions', lineno=25, col_offset=9)], Load(), lineno=24, col_offset=9), Tuple([Str('build-platlib=', lineno=26, col_offset=9), Name('None', Load(), lineno=26, col_offset=27), Str('build directory for platform-specific distributions', lineno=27, col_offset=9)], Load(), lineno=26, col_offset=9), Tuple([Str('build-lib=', lineno=28, col_offset=9), Name('None', Load(), lineno=28, col_offset=23), BinOp(Str('build directory for all distribution (defaults to either ', lineno=29, col_offset=9), Add(), Str('build-purelib or build-platlib', lineno=30, col_offset=9), lineno=29, col_offset=9)], Load(), lineno=28, col_offset=9), Tuple([Str('build-scripts=', lineno=31, col_offset=9), Name('None', Load(), lineno=31, col_offset=27), Str('build directory for scripts', lineno=32, col_offset=9)], Load(), lineno=31, col_offset=9), Tuple([Str('build-temp=', lineno=33, col_offset=9), Str('t', lineno=33, col_offset=24), Str('temporary build directory', lineno=34, col_offset=9)], Load(), lineno=33, col_offset=9), Tuple([Str('plat-name=', lineno=35, col_offset=9), Str('p', lineno=35, col_offset=23), BinOp(Str('platform name to build for, if supported (default: %s)', lineno=36, col_offset=9), Mod(), Call(Name('get_platform', Load(), lineno=37, col_offset=27), [], [], None, None, lineno=37, col_offset=27), lineno=36, col_offset=9)], Load(), lineno=35, col_offset=9), Tuple([Str('compiler=', lineno=38, col_offset=9), Str('c', lineno=38, col_offset=22), Str('specify the compiler type', lineno=39, col_offset=9)], Load(), lineno=38, col_offset=9), Tuple([Str('debug', lineno=40, col_offset=9), Str('g', lineno=40, col_offset=18), Str('compile extensions and libraries with debugging information', lineno=41, col_offset=9)], Load(), lineno=40, col_offset=9), Tuple([Str('force', lineno=42, col_offset=9), Str('f', lineno=42, col_offset=18), Str('forcibly build everything (ignore file timestamps)', lineno=43, col_offset=9)], Load(), lineno=42, col_offset=9), Tuple([Str('executable=', lineno=44, col_offset=9), Str('e', lineno=44, col_offset=24), Str('specify final destination interpreter path (build.py)', lineno=45, col_offset=9)], Load(), lineno=44, col_offset=9)], Load(), lineno=21, col_offset=19), lineno=21, col_offset=4), Assign([Name('boolean_options', Store(), lineno=48, col_offset=4)], List([Str('debug', lineno=48, col_offset=23), Str('force', lineno=48, col_offset=32)], Load(), lineno=48, col_offset=22), lineno=48, col_offset=4), Assign([Name('help_options', Store(), lineno=50, col_offset=4)], List([Tuple([Str('help-compiler', lineno=51, col_offset=9), Name('None', Load(), lineno=51, col_offset=26), Str('list available compilers', lineno=52, col_offset=9), Name('show_compilers', Load(), lineno=52, col_offset=37)], Load(), lineno=51, col_offset=9)], Load(), lineno=50, col_offset=19), lineno=50, col_offset=4), FunctionDef('initialize_options', arguments([Name('self', Param(), lineno=55, col_offset=27)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=56, col_offset=8), 'build_base', Store(), lineno=56, col_offset=8)], Str('build', lineno=56, col_offset=26), lineno=56, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=59, col_offset=8), 'build_purelib', Store(), lineno=59, col_offset=8)], Name('None', Load(), lineno=59, col_offset=29), lineno=59, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=60, col_offset=8), 'build_platlib', Store(), lineno=60, col_offset=8)], Name('None', Load(), lineno=60, col_offset=29), lineno=60, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=61, col_offset=8), 'build_lib', Store(), lineno=61, col_offset=8)], Name('None', Load(), lineno=61, col_offset=25), lineno=61, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=62, col_offset=8), 'build_temp', Store(), lineno=62, col_offset=8)], Name('None', Load(), lineno=62, col_offset=26), lineno=62, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=63, col_offset=8), 'build_scripts', Store(), lineno=63, col_offset=8)], Name('None', Load(), lineno=63, col_offset=29), lineno=63, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=64, col_offset=8), 'compiler', Store(), lineno=64, col_offset=8)], Name('None', Load(), lineno=64, col_offset=24), lineno=64, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=65, col_offset=8), 'plat_name', Store(), lineno=65, col_offset=8)], Name('None', Load(), lineno=65, col_offset=25), lineno=65, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=66, col_offset=8), 'debug', Store(), lineno=66, col_offset=8)], Name('None', Load(), lineno=66, col_offset=21), lineno=66, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=67, col_offset=8), 'force', Store(), lineno=67, col_offset=8)], Num(0, lineno=67, col_offset=21), lineno=67, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=68, col_offset=8), 'executable', Store(), lineno=68, col_offset=8)], Name('None', Load(), lineno=68, col_offset=26), lineno=68, col_offset=8)], [], lineno=55, col_offset=4), FunctionDef('finalize_options', arguments([Name('self', Param(), lineno=70, col_offset=25)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=71, col_offset=11), 'plat_name', Load(), lineno=71, col_offset=11), [Is()], [Name('None', Load(), lineno=71, col_offset=29)], lineno=71, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=72, col_offset=12), 'plat_name', Store(), lineno=72, col_offset=12)], Call(Name('get_platform', Load(), lineno=72, col_offset=29), [], [], None, None, lineno=72, col_offset=29), lineno=72, col_offset=12)], [If(Compare(Attribute(Name('os', Load(), lineno=77, col_offset=15), 'name', Load(), lineno=77, col_offset=15), [NotEq()], [Str('nt', lineno=77, col_offset=26)], lineno=77, col_offset=15), [Raise(Call(Name('DistutilsOptionError', Load(), lineno=78, col_offset=22), [Str("--plat-name only supported on Windows (try using './configure --help' on your platform)", lineno=79, col_offset=28)], [], None, None, lineno=78, col_offset=22), None, None, lineno=78, col_offset=16)], [], lineno=77, col_offset=12)], lineno=71, col_offset=8), Assign([Name('plat_specifier', Store(), lineno=82, col_offset=8)], BinOp(Str('.%s-%s', lineno=82, col_offset=25), Mod(), Tuple([Attribute(Name('self', Load(), lineno=82, col_offset=37), 'plat_name', Load(), lineno=82, col_offset=37), Subscript(Attribute(Name('sys', Load(), lineno=82, col_offset=53), 'version', Load(), lineno=82, col_offset=53), Slice(Num(0, lineno=82, col_offset=65), Num(3, lineno=82, col_offset=67), None), Load(), lineno=82, col_offset=53)], Load(), lineno=82, col_offset=37), lineno=82, col_offset=25), lineno=82, col_offset=8), If(Call(Name('hasattr', Load(), lineno=87, col_offset=11), [Name('sys', Load(), lineno=87, col_offset=19), Str('gettotalrefcount', lineno=87, col_offset=24)], [], None, None, lineno=87, col_offset=11), [AugAssign(Name('plat_specifier', Store(), lineno=88, col_offset=12), Add(), Str('-pydebug', lineno=88, col_offset=30), lineno=88, col_offset=12)], [], lineno=87, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=93, col_offset=11), 'build_purelib', Load(), lineno=93, col_offset=11), [Is()], [Name('None', Load(), lineno=93, col_offset=33)], lineno=93, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=94, col_offset=12), 'build_purelib', Store(), lineno=94, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=94, col_offset=33), 'path', Load(), lineno=94, col_offset=33), 'join', Load(), lineno=94, col_offset=33), [Attribute(Name('self', Load(), lineno=94, col_offset=46), 'build_base', Load(), lineno=94, col_offset=46), Str('lib', lineno=94, col_offset=63)], [], None, None, lineno=94, col_offset=33), lineno=94, col_offset=12)], [], lineno=93, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=95, col_offset=11), 'build_platlib', Load(), lineno=95, col_offset=11), [Is()], [Name('None', Load(), lineno=95, col_offset=33)], lineno=95, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=96, col_offset=12), 'build_platlib', Store(), lineno=96, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=96, col_offset=33), 'path', Load(), lineno=96, col_offset=33), 'join', Load(), lineno=96, col_offset=33), [Attribute(Name('self', Load(), lineno=96, col_offset=46), 'build_base', Load(), lineno=96, col_offset=46), BinOp(Str('lib', lineno=97, col_offset=46), Add(), Name('plat_specifier', Load(), lineno=97, col_offset=54), lineno=97, col_offset=46)], [], None, None, lineno=96, col_offset=33), lineno=96, col_offset=12)], [], lineno=95, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=102, col_offset=11), 'build_lib', Load(), lineno=102, col_offset=11), [Is()], [Name('None', Load(), lineno=102, col_offset=29)], lineno=102, col_offset=11), [If(Attribute(Attribute(Name('self', Load(), lineno=103, col_offset=15), 'distribution', Load(), lineno=103, col_offset=15), 'ext_modules', Load(), lineno=103, col_offset=15), [Assign([Attribute(Name('self', Load(), lineno=104, col_offset=16), 'build_lib', Store(), lineno=104, col_offset=16)], Attribute(Name('self', Load(), lineno=104, col_offset=33), 'build_platlib', Load(), lineno=104, col_offset=33), lineno=104, col_offset=16)], [Assign([Attribute(Name('self', Load(), lineno=106, col_offset=16), 'build_lib', Store(), lineno=106, col_offset=16)], Attribute(Name('self', Load(), lineno=106, col_offset=33), 'build_purelib', Load(), lineno=106, col_offset=33), lineno=106, col_offset=16)], lineno=103, col_offset=12)], [], lineno=102, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=110, col_offset=11), 'build_temp', Load(), lineno=110, col_offset=11), [Is()], [Name('None', Load(), lineno=110, col_offset=30)], lineno=110, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=111, col_offset=12), 'build_temp', Store(), lineno=111, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=111, col_offset=30), 'path', Load(), lineno=111, col_offset=30), 'join', Load(), lineno=111, col_offset=30), [Attribute(Name('self', Load(), lineno=111, col_offset=43), 'build_base', Load(), lineno=111, col_offset=43), BinOp(Str('temp', lineno=112, col_offset=43), Add(), Name('plat_specifier', Load(), lineno=112, col_offset=52), lineno=112, col_offset=43)], [], None, None, lineno=111, col_offset=30), lineno=111, col_offset=12)], [], lineno=110, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=113, col_offset=11), 'build_scripts', Load(), lineno=113, col_offset=11), [Is()], [Name('None', Load(), lineno=113, col_offset=33)], lineno=113, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=114, col_offset=12), 'build_scripts', Store(), lineno=114, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=114, col_offset=33), 'path', Load(), lineno=114, col_offset=33), 'join', Load(), lineno=114, col_offset=33), [Attribute(Name('self', Load(), lineno=114, col_offset=46), 'build_base', Load(), lineno=114, col_offset=46), BinOp(Str('scripts-', lineno=115, col_offset=46), Add(), Subscript(Attribute(Name('sys', Load(), lineno=115, col_offset=59), 'version', Load(), lineno=115, col_offset=59), Slice(Num(0, lineno=115, col_offset=71), Num(3, lineno=115, col_offset=73), None), Load(), lineno=115, col_offset=59), lineno=115, col_offset=46)], [], None, None, lineno=114, col_offset=33), lineno=114, col_offset=12)], [], lineno=113, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=117, col_offset=11), 'executable', Load(), lineno=117, col_offset=11), [Is()], [Name('None', Load(), lineno=117, col_offset=30)], lineno=117, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=118, col_offset=12), 'executable', Store(), lineno=118, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=118, col_offset=30), 'path', Load(), lineno=118, col_offset=30), 'normpath', Load(), lineno=118, col_offset=30), [Attribute(Name('sys', Load(), lineno=118, col_offset=47), 'executable', Load(), lineno=118, col_offset=47)], [], None, None, lineno=118, col_offset=30), lineno=118, col_offset=12)], [], lineno=117, col_offset=8)], [], lineno=70, col_offset=4), FunctionDef('run', arguments([Name('self', Param(), lineno=120, col_offset=12)], None, None, []), [For(Name('cmd_name', Store(), lineno=126, col_offset=12), Call(Attribute(Name('self', Load(), lineno=126, col_offset=24), 'get_sub_commands', Load(), lineno=126, col_offset=24), [], [], None, None, lineno=126, col_offset=24), [Expr(Call(Attribute(Name('self', Load(), lineno=127, col_offset=12), 'run_command', Load(), lineno=127, col_offset=12), [Name('cmd_name', Load(), lineno=127, col_offset=29)], [], None, None, lineno=127, col_offset=12), lineno=127, col_offset=12)], [], lineno=126, col_offset=8)], [], lineno=120, col_offset=4), FunctionDef('has_pure_modules', arguments([Name('self', Param(), lineno=131, col_offset=26)], None, None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=132, col_offset=15), 'distribution', Load(), lineno=132, col_offset=15), 'has_pure_modules', Load(), lineno=132, col_offset=15), [], [], None, None, lineno=132, col_offset=15), lineno=132, col_offset=8)], [], lineno=131, col_offset=4), FunctionDef('has_c_libraries', arguments([Name('self', Param(), lineno=134, col_offset=25)], None, None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=135, col_offset=15), 'distribution', Load(), lineno=135, col_offset=15), 'has_c_libraries', Load(), lineno=135, col_offset=15), [], [], None, None, lineno=135, col_offset=15), lineno=135, col_offset=8)], [], lineno=134, col_offset=4), FunctionDef('has_ext_modules', arguments([Name('self', Param(), lineno=137, col_offset=25)], None, None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=138, col_offset=15), 'distribution', Load(), lineno=138, col_offset=15), 'has_ext_modules', Load(), lineno=138, col_offset=15), [], [], None, None, lineno=138, col_offset=15), lineno=138, col_offset=8)], [], lineno=137, col_offset=4), FunctionDef('has_scripts', arguments([Name('self', Param(), lineno=140, col_offset=21)], None, None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=141, col_offset=15), 'distribution', Load(), lineno=141, col_offset=15), 'has_scripts', Load(), lineno=141, col_offset=15), [], [], None, None, lineno=141, col_offset=15), lineno=141, col_offset=8)], [], lineno=140, col_offset=4), Assign([Name('sub_commands', Store(), lineno=143, col_offset=4)], List([Tuple([Str('build_py', lineno=143, col_offset=21), Name('has_pure_modules', Load(), lineno=143, col_offset=38)], Load(), lineno=143, col_offset=21), Tuple([Str('build_clib', lineno=144, col_offset=21), Name('has_c_libraries', Load(), lineno=144, col_offset=38)], Load(), lineno=144, col_offset=21), Tuple([Str('build_ext', lineno=145, col_offset=21), Name('has_ext_modules', Load(), lineno=145, col_offset=38)], Load(), lineno=145, col_offset=21), Tuple([Str('build_scripts', lineno=146, col_offset=21), Name('has_scripts', Load(), lineno=146, col_offset=38)], Load(), lineno=146, col_offset=21)], Load(), lineno=143, col_offset=19), lineno=143, col_offset=4)], [], lineno=17, col_offset=0)])
