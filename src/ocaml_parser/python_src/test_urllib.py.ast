Module([Expr(Str('Regresssion tests for urllib', lineno=1, col_offset=0), lineno=1, col_offset=0), Import([alias('urllib', None)], lineno=3, col_offset=0), Import([alias('httplib', None)], lineno=4, col_offset=0), Import([alias('unittest', None)], lineno=5, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=6, col_offset=0), Import([alias('os', None)], lineno=7, col_offset=0), Import([alias('mimetools', None)], lineno=8, col_offset=0), Import([alias('tempfile', None)], lineno=9, col_offset=0), Import([alias('StringIO', None)], lineno=10, col_offset=0), FunctionDef('hexescape', arguments([Name('char', Param(), lineno=12, col_offset=14)], None, None, []), [Expr(Str('Escape char as RFC 2396 specifies', lineno=13, col_offset=4), lineno=13, col_offset=4), Assign([Name('hex_repr', Store(), lineno=14, col_offset=4)], Call(Attribute(Subscript(Call(Name('hex', Load(), lineno=14, col_offset=15), [Call(Name('ord', Load(), lineno=14, col_offset=19), [Name('char', Load(), lineno=14, col_offset=23)], [], None, None, lineno=14, col_offset=19)], [], None, None, lineno=14, col_offset=15), Slice(Num(2, lineno=14, col_offset=30), None, None), Load(), lineno=14, col_offset=15), 'upper', Load(), lineno=14, col_offset=15), [], [], None, None, lineno=14, col_offset=15), lineno=14, col_offset=4), If(Compare(Call(Name('len', Load(), lineno=15, col_offset=7), [Name('hex_repr', Load(), lineno=15, col_offset=11)], [], None, None, lineno=15, col_offset=7), [Eq()], [Num(1, lineno=15, col_offset=24)], lineno=15, col_offset=7), [Assign([Name('hex_repr', Store(), lineno=16, col_offset=8)], BinOp(Str('0%s', lineno=16, col_offset=19), Mod(), Name('hex_repr', Load(), lineno=16, col_offset=27), lineno=16, col_offset=19), lineno=16, col_offset=8)], [], lineno=15, col_offset=4), Return(BinOp(Str('%', lineno=17, col_offset=11), Add(), Name('hex_repr', Load(), lineno=17, col_offset=17), lineno=17, col_offset=11), lineno=17, col_offset=4)], [], lineno=12, col_offset=0), ClassDef('urlopen_FileTests', [Attribute(Name('unittest', Load(), lineno=19, col_offset=24), 'TestCase', Load(), lineno=19, col_offset=24)], [Expr(Str('Test urlopen() opening a temporary file.\n\n    Try to test as much functionality as possible so as to cut down on reliance\n    on connecting to the Net for testing.\n\n    ', lineno=25, col_offset=-1), lineno=25, col_offset=-1), FunctionDef('setUp', arguments([Name('self', Param(), lineno=27, col_offset=14)], None, None, []), [Expr(Str('Setup of a temp file to use for testing', lineno=28, col_offset=8), lineno=28, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=29, col_offset=8), 'text', Store(), lineno=29, col_offset=8)], BinOp(Str('test_urllib: %s\n', lineno=29, col_offset=20), Mod(), Attribute(Attribute(Name('self', Load(), lineno=29, col_offset=42), '__class__', Load(), lineno=29, col_offset=42), '__name__', Load(), lineno=29, col_offset=42), lineno=29, col_offset=20), lineno=29, col_offset=8), Assign([Name('FILE', Store(), lineno=30, col_offset=8)], Call(Name('file', Load(), lineno=30, col_offset=15), [Attribute(Name('test_support', Load(), lineno=30, col_offset=20), 'TESTFN', Load(), lineno=30, col_offset=20), Str('wb', lineno=30, col_offset=41)], [], None, None, lineno=30, col_offset=15), lineno=30, col_offset=8), TryFinally([Expr(Call(Attribute(Name('FILE', Load(), lineno=32, col_offset=12), 'write', Load(), lineno=32, col_offset=12), [Attribute(Name('self', Load(), lineno=32, col_offset=23), 'text', Load(), lineno=32, col_offset=23)], [], None, None, lineno=32, col_offset=12), lineno=32, col_offset=12)], [Expr(Call(Attribute(Name('FILE', Load(), lineno=34, col_offset=12), 'close', Load(), lineno=34, col_offset=12), [], [], None, None, lineno=34, col_offset=12), lineno=34, col_offset=12)], lineno=31, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=35, col_offset=8), 'pathname', Store(), lineno=35, col_offset=8)], Attribute(Name('test_support', Load(), lineno=35, col_offset=24), 'TESTFN', Load(), lineno=35, col_offset=24), lineno=35, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=36, col_offset=8), 'returned_obj', Store(), lineno=36, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=36, col_offset=28), 'urlopen', Load(), lineno=36, col_offset=28), [BinOp(Str('file:%s', lineno=36, col_offset=43), Mod(), Attribute(Name('self', Load(), lineno=36, col_offset=55), 'pathname', Load(), lineno=36, col_offset=55), lineno=36, col_offset=43)], [], None, None, lineno=36, col_offset=28), lineno=36, col_offset=8)], [], lineno=27, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=38, col_offset=17)], None, None, []), [Expr(Str('Shut down the open object', lineno=39, col_offset=8), lineno=39, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=40, col_offset=8), 'returned_obj', Load(), lineno=40, col_offset=8), 'close', Load(), lineno=40, col_offset=8), [], [], None, None, lineno=40, col_offset=8), lineno=40, col_offset=8), Expr(Call(Attribute(Name('os', Load(), lineno=41, col_offset=8), 'remove', Load(), lineno=41, col_offset=8), [Attribute(Name('test_support', Load(), lineno=41, col_offset=18), 'TESTFN', Load(), lineno=41, col_offset=18)], [], None, None, lineno=41, col_offset=8), lineno=41, col_offset=8)], [], lineno=38, col_offset=4), FunctionDef('test_interface', arguments([Name('self', Param(), lineno=43, col_offset=23)], None, None, []), [For(Name('attr', Store(), lineno=45, col_offset=12), Tuple([Str('read', lineno=45, col_offset=21), Str('readline', lineno=45, col_offset=29), Str('readlines', lineno=45, col_offset=41), Str('fileno', lineno=45, col_offset=54), Str('close', lineno=46, col_offset=21), Str('info', lineno=46, col_offset=30), Str('geturl', lineno=46, col_offset=38), Str('getcode', lineno=46, col_offset=48), Str('__iter__', lineno=46, col_offset=59)], Load(), lineno=45, col_offset=21), [Expr(Call(Attribute(Name('self', Load(), lineno=47, col_offset=12), 'assertTrue', Load(), lineno=47, col_offset=12), [Call(Name('hasattr', Load(), lineno=47, col_offset=28), [Attribute(Name('self', Load(), lineno=47, col_offset=36), 'returned_obj', Load(), lineno=47, col_offset=36), Name('attr', Load(), lineno=47, col_offset=55)], [], None, None, lineno=47, col_offset=28), BinOp(Str('object returned by urlopen() lacks %s attribute', lineno=48, col_offset=25), Mod(), Name('attr', Load(), lineno=49, col_offset=25), lineno=48, col_offset=25)], [], None, None, lineno=47, col_offset=12), lineno=47, col_offset=12)], [], lineno=45, col_offset=8)], [], lineno=43, col_offset=4), FunctionDef('test_read', arguments([Name('self', Param(), lineno=51, col_offset=18)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=52, col_offset=8), 'assertEqual', Load(), lineno=52, col_offset=8), [Attribute(Name('self', Load(), lineno=52, col_offset=25), 'text', Load(), lineno=52, col_offset=25), Call(Attribute(Attribute(Name('self', Load(), lineno=52, col_offset=36), 'returned_obj', Load(), lineno=52, col_offset=36), 'read', Load(), lineno=52, col_offset=36), [], [], None, None, lineno=52, col_offset=36)], [], None, None, lineno=52, col_offset=8), lineno=52, col_offset=8)], [], lineno=51, col_offset=4), FunctionDef('test_readline', arguments([Name('self', Param(), lineno=54, col_offset=22)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=55, col_offset=8), 'assertEqual', Load(), lineno=55, col_offset=8), [Attribute(Name('self', Load(), lineno=55, col_offset=25), 'text', Load(), lineno=55, col_offset=25), Call(Attribute(Attribute(Name('self', Load(), lineno=55, col_offset=36), 'returned_obj', Load(), lineno=55, col_offset=36), 'readline', Load(), lineno=55, col_offset=36), [], [], None, None, lineno=55, col_offset=36)], [], None, None, lineno=55, col_offset=8), lineno=55, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=56, col_offset=8), 'assertEqual', Load(), lineno=56, col_offset=8), [Str('', lineno=56, col_offset=25), Call(Attribute(Attribute(Name('self', Load(), lineno=56, col_offset=29), 'returned_obj', Load(), lineno=56, col_offset=29), 'readline', Load(), lineno=56, col_offset=29), [], [], None, None, lineno=56, col_offset=29), Str('calling readline() after exhausting the file did not return an empty string', lineno=57, col_offset=25)], [], None, None, lineno=56, col_offset=8), lineno=56, col_offset=8)], [], lineno=54, col_offset=4), FunctionDef('test_readlines', arguments([Name('self', Param(), lineno=60, col_offset=23)], None, None, []), [Assign([Name('lines_list', Store(), lineno=61, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=61, col_offset=21), 'returned_obj', Load(), lineno=61, col_offset=21), 'readlines', Load(), lineno=61, col_offset=21), [], [], None, None, lineno=61, col_offset=21), lineno=61, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=62, col_offset=8), 'assertEqual', Load(), lineno=62, col_offset=8), [Call(Name('len', Load(), lineno=62, col_offset=25), [Name('lines_list', Load(), lineno=62, col_offset=29)], [], None, None, lineno=62, col_offset=25), Num(1, lineno=62, col_offset=42), Str('readlines() returned the wrong number of lines', lineno=63, col_offset=25)], [], None, None, lineno=62, col_offset=8), lineno=62, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=64, col_offset=8), 'assertEqual', Load(), lineno=64, col_offset=8), [Subscript(Name('lines_list', Load(), lineno=64, col_offset=25), Index(Num(0, lineno=64, col_offset=36)), Load(), lineno=64, col_offset=25), Attribute(Name('self', Load(), lineno=64, col_offset=40), 'text', Load(), lineno=64, col_offset=40), Str('readlines() returned improper text', lineno=65, col_offset=25)], [], None, None, lineno=64, col_offset=8), lineno=64, col_offset=8)], [], lineno=60, col_offset=4), FunctionDef('test_fileno', arguments([Name('self', Param(), lineno=67, col_offset=20)], None, None, []), [Assign([Name('file_num', Store(), lineno=68, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=68, col_offset=19), 'returned_obj', Load(), lineno=68, col_offset=19), 'fileno', Load(), lineno=68, col_offset=19), [], [], None, None, lineno=68, col_offset=19), lineno=68, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=69, col_offset=8), 'assertIsInstance', Load(), lineno=69, col_offset=8), [Name('file_num', Load(), lineno=69, col_offset=30), Name('int', Load(), lineno=69, col_offset=40), Str('fileno() did not return an int', lineno=69, col_offset=45)], [], None, None, lineno=69, col_offset=8), lineno=69, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=70, col_offset=8), 'assertEqual', Load(), lineno=70, col_offset=8), [Call(Attribute(Name('os', Load(), lineno=70, col_offset=25), 'read', Load(), lineno=70, col_offset=25), [Name('file_num', Load(), lineno=70, col_offset=33), Call(Name('len', Load(), lineno=70, col_offset=43), [Attribute(Name('self', Load(), lineno=70, col_offset=47), 'text', Load(), lineno=70, col_offset=47)], [], None, None, lineno=70, col_offset=43)], [], None, None, lineno=70, col_offset=25), Attribute(Name('self', Load(), lineno=70, col_offset=60), 'text', Load(), lineno=70, col_offset=60), Str('Reading on the file descriptor returned by fileno() did not return the expected text', lineno=71, col_offset=25)], [], None, None, lineno=70, col_offset=8), lineno=70, col_offset=8)], [], lineno=67, col_offset=4), FunctionDef('test_close', arguments([Name('self', Param(), lineno=74, col_offset=19)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=77, col_offset=8), 'returned_obj', Load(), lineno=77, col_offset=8), 'close', Load(), lineno=77, col_offset=8), [], [], None, None, lineno=77, col_offset=8), lineno=77, col_offset=8)], [], lineno=74, col_offset=4), FunctionDef('test_info', arguments([Name('self', Param(), lineno=79, col_offset=18)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=80, col_offset=8), 'assertIsInstance', Load(), lineno=80, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=80, col_offset=30), 'returned_obj', Load(), lineno=80, col_offset=30), 'info', Load(), lineno=80, col_offset=30), [], [], None, None, lineno=80, col_offset=30), Attribute(Name('mimetools', Load(), lineno=80, col_offset=56), 'Message', Load(), lineno=80, col_offset=56)], [], None, None, lineno=80, col_offset=8), lineno=80, col_offset=8)], [], lineno=79, col_offset=4), FunctionDef('test_geturl', arguments([Name('self', Param(), lineno=82, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=83, col_offset=8), 'assertEqual', Load(), lineno=83, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=83, col_offset=25), 'returned_obj', Load(), lineno=83, col_offset=25), 'geturl', Load(), lineno=83, col_offset=25), [], [], None, None, lineno=83, col_offset=25), Attribute(Name('self', Load(), lineno=83, col_offset=53), 'pathname', Load(), lineno=83, col_offset=53)], [], None, None, lineno=83, col_offset=8), lineno=83, col_offset=8)], [], lineno=82, col_offset=4), FunctionDef('test_getcode', arguments([Name('self', Param(), lineno=85, col_offset=21)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=86, col_offset=8), 'assertEqual', Load(), lineno=86, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=86, col_offset=25), 'returned_obj', Load(), lineno=86, col_offset=25), 'getcode', Load(), lineno=86, col_offset=25), [], [], None, None, lineno=86, col_offset=25), Name('None', Load(), lineno=86, col_offset=54)], [], None, None, lineno=86, col_offset=8), lineno=86, col_offset=8)], [], lineno=85, col_offset=4), FunctionDef('test_iter', arguments([Name('self', Param(), lineno=88, col_offset=18)], None, None, []), [For(Name('line', Store(), lineno=93, col_offset=12), Call(Attribute(Attribute(Name('self', Load(), lineno=93, col_offset=20), 'returned_obj', Load(), lineno=93, col_offset=20), '__iter__', Load(), lineno=93, col_offset=20), [], [], None, None, lineno=93, col_offset=20), [Expr(Call(Attribute(Name('self', Load(), lineno=94, col_offset=12), 'assertEqual', Load(), lineno=94, col_offset=12), [Name('line', Load(), lineno=94, col_offset=29), Attribute(Name('self', Load(), lineno=94, col_offset=35), 'text', Load(), lineno=94, col_offset=35)], [], None, None, lineno=94, col_offset=12), lineno=94, col_offset=12)], [], lineno=93, col_offset=8)], [], lineno=88, col_offset=4)], [], lineno=19, col_offset=0), ClassDef('ProxyTests', [Attribute(Name('unittest', Load(), lineno=96, col_offset=17), 'TestCase', Load(), lineno=96, col_offset=17)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=98, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=100, col_offset=8), 'env', Store(), lineno=100, col_offset=8)], Call(Attribute(Name('test_support', Load(), lineno=100, col_offset=19), 'EnvironmentVarGuard', Load(), lineno=100, col_offset=19), [], [], None, None, lineno=100, col_offset=19), lineno=100, col_offset=8), For(Name('k', Store(), lineno=102, col_offset=12), Call(Attribute(Attribute(Name('os', Load(), lineno=102, col_offset=17), 'environ', Load(), lineno=102, col_offset=17), 'keys', Load(), lineno=102, col_offset=17), [], [], None, None, lineno=102, col_offset=17), [If(Compare(Str('proxy', lineno=103, col_offset=15), [In()], [Call(Attribute(Name('k', Load(), lineno=103, col_offset=26), 'lower', Load(), lineno=103, col_offset=26), [], [], None, None, lineno=103, col_offset=26)], lineno=103, col_offset=15), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=104, col_offset=16), 'env', Load(), lineno=104, col_offset=16), 'unset', Load(), lineno=104, col_offset=16), [Name('k', Load(), lineno=104, col_offset=31)], [], None, None, lineno=104, col_offset=16), lineno=104, col_offset=16)], [], lineno=103, col_offset=12)], [], lineno=102, col_offset=8)], [], lineno=98, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=106, col_offset=17)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=108, col_offset=8), 'env', Load(), lineno=108, col_offset=8), '__exit__', Load(), lineno=108, col_offset=8), [], [], None, None, lineno=108, col_offset=8), lineno=108, col_offset=8), Delete([Attribute(Name('self', Load(), lineno=109, col_offset=12), 'env', Del(), lineno=109, col_offset=12)], lineno=109, col_offset=8)], [], lineno=106, col_offset=4), FunctionDef('test_getproxies_environment_keep_no_proxies', arguments([Name('self', Param(), lineno=111, col_offset=52)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=112, col_offset=8), 'env', Load(), lineno=112, col_offset=8), 'set', Load(), lineno=112, col_offset=8), [Str('NO_PROXY', lineno=112, col_offset=21), Str('localhost', lineno=112, col_offset=33)], [], None, None, lineno=112, col_offset=8), lineno=112, col_offset=8), Assign([Name('proxies', Store(), lineno=113, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=113, col_offset=18), 'getproxies_environment', Load(), lineno=113, col_offset=18), [], [], None, None, lineno=113, col_offset=18), lineno=113, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=115, col_offset=8), 'assertEqual', Load(), lineno=115, col_offset=8), [Str('localhost', lineno=115, col_offset=25), Subscript(Name('proxies', Load(), lineno=115, col_offset=38), Index(Str('no', lineno=115, col_offset=46)), Load(), lineno=115, col_offset=38)], [], None, None, lineno=115, col_offset=8), lineno=115, col_offset=8)], [], lineno=111, col_offset=4)], [], lineno=96, col_offset=0), ClassDef('urlopen_HttpTests', [Attribute(Name('unittest', Load(), lineno=118, col_offset=24), 'TestCase', Load(), lineno=118, col_offset=24)], [Expr(Str('Test urlopen() opening a fake http connection.', lineno=119, col_offset=4), lineno=119, col_offset=4), FunctionDef('fakehttp', arguments([Name('self', Param(), lineno=121, col_offset=17), Name('fakedata', Param(), lineno=121, col_offset=23)], None, None, []), [ClassDef('FakeSocket', [Attribute(Name('StringIO', Load(), lineno=122, col_offset=25), 'StringIO', Load(), lineno=122, col_offset=25)], [FunctionDef('sendall', arguments([Name('self', Param(), lineno=123, col_offset=24), Name('str', Param(), lineno=123, col_offset=30)], None, None, []), [Pass( lineno=123, col_offset=36)], [], lineno=123, col_offset=12), FunctionDef('makefile', arguments([Name('self', Param(), lineno=124, col_offset=25), Name('mode', Param(), lineno=124, col_offset=31), Name('name', Param(), lineno=124, col_offset=37)], None, None, []), [Return(Name('self', Load(), lineno=124, col_offset=51), lineno=124, col_offset=44)], [], lineno=124, col_offset=12), FunctionDef('read', arguments([Name('self', Param(), lineno=125, col_offset=21), Name('amt', Param(), lineno=125, col_offset=27)], None, None, [Name('None', Load(), lineno=125, col_offset=31)]), [If(Attribute(Name('self', Load(), lineno=126, col_offset=19), 'closed', Load(), lineno=126, col_offset=19), [Return(Str('', lineno=126, col_offset=39), lineno=126, col_offset=32)], [], lineno=126, col_offset=16), Return(Call(Attribute(Attribute(Name('StringIO', Load(), lineno=127, col_offset=23), 'StringIO', Load(), lineno=127, col_offset=23), 'read', Load(), lineno=127, col_offset=23), [Name('self', Load(), lineno=127, col_offset=46), Name('amt', Load(), lineno=127, col_offset=52)], [], None, None, lineno=127, col_offset=23), lineno=127, col_offset=16)], [], lineno=125, col_offset=12), FunctionDef('readline', arguments([Name('self', Param(), lineno=128, col_offset=25), Name('length', Param(), lineno=128, col_offset=31)], None, None, [Name('None', Load(), lineno=128, col_offset=38)]), [If(Attribute(Name('self', Load(), lineno=129, col_offset=19), 'closed', Load(), lineno=129, col_offset=19), [Return(Str('', lineno=129, col_offset=39), lineno=129, col_offset=32)], [], lineno=129, col_offset=16), Return(Call(Attribute(Attribute(Name('StringIO', Load(), lineno=130, col_offset=23), 'StringIO', Load(), lineno=130, col_offset=23), 'readline', Load(), lineno=130, col_offset=23), [Name('self', Load(), lineno=130, col_offset=50), Name('length', Load(), lineno=130, col_offset=56)], [], None, None, lineno=130, col_offset=23), lineno=130, col_offset=16)], [], lineno=128, col_offset=12)], [], lineno=122, col_offset=8), ClassDef('FakeHTTPConnection', [Attribute(Name('httplib', Load(), lineno=131, col_offset=33), 'HTTPConnection', Load(), lineno=131, col_offset=33)], [FunctionDef('connect', arguments([Name('self', Param(), lineno=132, col_offset=24)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=133, col_offset=16), 'sock', Store(), lineno=133, col_offset=16)], Call(Name('FakeSocket', Load(), lineno=133, col_offset=28), [Name('fakedata', Load(), lineno=133, col_offset=39)], [], None, None, lineno=133, col_offset=28), lineno=133, col_offset=16)], [], lineno=132, col_offset=12)], [], lineno=131, col_offset=8), Assert(Compare(Attribute(Attribute(Name('httplib', Load(), lineno=134, col_offset=15), 'HTTP', Load(), lineno=134, col_offset=15), '_connection_class', Load(), lineno=134, col_offset=15), [Eq()], [Attribute(Name('httplib', Load(), lineno=134, col_offset=49), 'HTTPConnection', Load(), lineno=134, col_offset=49)], lineno=134, col_offset=15), None, lineno=134, col_offset=8), Assign([Attribute(Attribute(Name('httplib', Load(), lineno=135, col_offset=8), 'HTTP', Load(), lineno=135, col_offset=8), '_connection_class', Store(), lineno=135, col_offset=8)], Name('FakeHTTPConnection', Load(), lineno=135, col_offset=41), lineno=135, col_offset=8)], [], lineno=121, col_offset=4), FunctionDef('unfakehttp', arguments([Name('self', Param(), lineno=137, col_offset=19)], None, None, []), [Assign([Attribute(Attribute(Name('httplib', Load(), lineno=138, col_offset=8), 'HTTP', Load(), lineno=138, col_offset=8), '_connection_class', Store(), lineno=138, col_offset=8)], Attribute(Name('httplib', Load(), lineno=138, col_offset=41), 'HTTPConnection', Load(), lineno=138, col_offset=41), lineno=138, col_offset=8)], [], lineno=137, col_offset=4), FunctionDef('test_read', arguments([Name('self', Param(), lineno=140, col_offset=18)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=141, col_offset=8), 'fakehttp', Load(), lineno=141, col_offset=8), [Str('Hello!', lineno=141, col_offset=22)], [], None, None, lineno=141, col_offset=8), lineno=141, col_offset=8), TryFinally([Assign([Name('fp', Store(), lineno=143, col_offset=12)], Call(Attribute(Name('urllib', Load(), lineno=143, col_offset=17), 'urlopen', Load(), lineno=143, col_offset=17), [Str('http://python.org/', lineno=143, col_offset=32)], [], None, None, lineno=143, col_offset=17), lineno=143, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=144, col_offset=12), 'assertEqual', Load(), lineno=144, col_offset=12), [Call(Attribute(Name('fp', Load(), lineno=144, col_offset=29), 'readline', Load(), lineno=144, col_offset=29), [], [], None, None, lineno=144, col_offset=29), Str('Hello!', lineno=144, col_offset=44)], [], None, None, lineno=144, col_offset=12), lineno=144, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=145, col_offset=12), 'assertEqual', Load(), lineno=145, col_offset=12), [Call(Attribute(Name('fp', Load(), lineno=145, col_offset=29), 'readline', Load(), lineno=145, col_offset=29), [], [], None, None, lineno=145, col_offset=29), Str('', lineno=145, col_offset=44)], [], None, None, lineno=145, col_offset=12), lineno=145, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=146, col_offset=12), 'assertEqual', Load(), lineno=146, col_offset=12), [Call(Attribute(Name('fp', Load(), lineno=146, col_offset=29), 'geturl', Load(), lineno=146, col_offset=29), [], [], None, None, lineno=146, col_offset=29), Str('http://python.org/', lineno=146, col_offset=42)], [], None, None, lineno=146, col_offset=12), lineno=146, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=147, col_offset=12), 'assertEqual', Load(), lineno=147, col_offset=12), [Call(Attribute(Name('fp', Load(), lineno=147, col_offset=29), 'getcode', Load(), lineno=147, col_offset=29), [], [], None, None, lineno=147, col_offset=29), Num(200, lineno=147, col_offset=43)], [], None, None, lineno=147, col_offset=12), lineno=147, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=149, col_offset=12), 'unfakehttp', Load(), lineno=149, col_offset=12), [], [], None, None, lineno=149, col_offset=12), lineno=149, col_offset=12)], lineno=142, col_offset=8)], [], lineno=140, col_offset=4), FunctionDef('test_read_bogus', arguments([Name('self', Param(), lineno=151, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=153, col_offset=8), 'fakehttp', Load(), lineno=153, col_offset=8), [Str('HTTP/1.1 401 Authentication Required\nDate: Wed, 02 Jan 2008 03:03:54 GMT\nServer: Apache/1.3.33 (Debian GNU/Linux) mod_ssl/2.8.22 OpenSSL/0.9.7e\nConnection: close\nContent-Type: text/html; charset=iso-8859-1\n', lineno=158, col_offset=-1)], [], None, None, lineno=153, col_offset=8), lineno=153, col_offset=8), TryFinally([Expr(Call(Attribute(Name('self', Load(), lineno=160, col_offset=12), 'assertRaises', Load(), lineno=160, col_offset=12), [Name('IOError', Load(), lineno=160, col_offset=30), Attribute(Name('urllib', Load(), lineno=160, col_offset=39), 'urlopen', Load(), lineno=160, col_offset=39), Str('http://python.org/', lineno=160, col_offset=55)], [], None, None, lineno=160, col_offset=12), lineno=160, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=162, col_offset=12), 'unfakehttp', Load(), lineno=162, col_offset=12), [], [], None, None, lineno=162, col_offset=12), lineno=162, col_offset=12)], lineno=159, col_offset=8)], [], lineno=151, col_offset=4), FunctionDef('test_empty_socket', arguments([Name('self', Param(), lineno=164, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=167, col_offset=8), 'fakehttp', Load(), lineno=167, col_offset=8), [Str('', lineno=167, col_offset=22)], [], None, None, lineno=167, col_offset=8), lineno=167, col_offset=8), TryFinally([Expr(Call(Attribute(Name('self', Load(), lineno=169, col_offset=12), 'assertRaises', Load(), lineno=169, col_offset=12), [Name('IOError', Load(), lineno=169, col_offset=30), Attribute(Name('urllib', Load(), lineno=169, col_offset=39), 'urlopen', Load(), lineno=169, col_offset=39), Str('http://something', lineno=169, col_offset=55)], [], None, None, lineno=169, col_offset=12), lineno=169, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=171, col_offset=12), 'unfakehttp', Load(), lineno=171, col_offset=12), [], [], None, None, lineno=171, col_offset=12), lineno=171, col_offset=12)], lineno=168, col_offset=8)], [], lineno=164, col_offset=4)], [], lineno=118, col_offset=0), ClassDef('urlretrieve_FileTests', [Attribute(Name('unittest', Load(), lineno=173, col_offset=28), 'TestCase', Load(), lineno=173, col_offset=28)], [Expr(Str('Test urllib.urlretrieve() on local files', lineno=174, col_offset=4), lineno=174, col_offset=4), FunctionDef('setUp', arguments([Name('self', Param(), lineno=176, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=184, col_offset=8), 'tempFiles', Store(), lineno=184, col_offset=8)], List([], Load(), lineno=184, col_offset=25), lineno=184, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=187, col_offset=8), 'registerFileForCleanUp', Load(), lineno=187, col_offset=8), [Attribute(Name('test_support', Load(), lineno=187, col_offset=36), 'TESTFN', Load(), lineno=187, col_offset=36)], [], None, None, lineno=187, col_offset=8), lineno=187, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=188, col_offset=8), 'text', Store(), lineno=188, col_offset=8)], Str('testing urllib.urlretrieve', lineno=188, col_offset=20), lineno=188, col_offset=8), TryFinally([Assign([Name('FILE', Store(), lineno=190, col_offset=12)], Call(Name('file', Load(), lineno=190, col_offset=19), [Attribute(Name('test_support', Load(), lineno=190, col_offset=24), 'TESTFN', Load(), lineno=190, col_offset=24), Str('wb', lineno=190, col_offset=45)], [], None, None, lineno=190, col_offset=19), lineno=190, col_offset=12), Expr(Call(Attribute(Name('FILE', Load(), lineno=191, col_offset=12), 'write', Load(), lineno=191, col_offset=12), [Attribute(Name('self', Load(), lineno=191, col_offset=23), 'text', Load(), lineno=191, col_offset=23)], [], None, None, lineno=191, col_offset=12), lineno=191, col_offset=12), Expr(Call(Attribute(Name('FILE', Load(), lineno=192, col_offset=12), 'close', Load(), lineno=192, col_offset=12), [], [], None, None, lineno=192, col_offset=12), lineno=192, col_offset=12)], [TryExcept([Expr(Call(Attribute(Name('FILE', Load(), lineno=194, col_offset=17), 'close', Load(), lineno=194, col_offset=17), [], [], None, None, lineno=194, col_offset=17), lineno=194, col_offset=17)], [ExceptHandler(None, None, [Pass( lineno=195, col_offset=20)], lineno=195, col_offset=12)], [], lineno=194, col_offset=12)], lineno=189, col_offset=8)], [], lineno=176, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=197, col_offset=17)], None, None, []), [For(Name('each', Store(), lineno=199, col_offset=12), Attribute(Name('self', Load(), lineno=199, col_offset=20), 'tempFiles', Load(), lineno=199, col_offset=20), [TryExcept([Expr(Call(Attribute(Name('os', Load(), lineno=200, col_offset=17), 'remove', Load(), lineno=200, col_offset=17), [Name('each', Load(), lineno=200, col_offset=27)], [], None, None, lineno=200, col_offset=17), lineno=200, col_offset=17)], [ExceptHandler(None, None, [Pass( lineno=201, col_offset=20)], lineno=201, col_offset=12)], [], lineno=200, col_offset=12)], [], lineno=199, col_offset=8)], [], lineno=197, col_offset=4), FunctionDef('constructLocalFileUrl', arguments([Name('self', Param(), lineno=203, col_offset=30), Name('filePath', Param(), lineno=203, col_offset=36)], None, None, []), [Return(BinOp(Str('file://%s', lineno=204, col_offset=15), Mod(), Call(Attribute(Name('urllib', Load(), lineno=204, col_offset=29), 'pathname2url', Load(), lineno=204, col_offset=29), [Call(Attribute(Attribute(Name('os', Load(), lineno=204, col_offset=49), 'path', Load(), lineno=204, col_offset=49), 'abspath', Load(), lineno=204, col_offset=49), [Name('filePath', Load(), lineno=204, col_offset=65)], [], None, None, lineno=204, col_offset=49)], [], None, None, lineno=204, col_offset=29), lineno=204, col_offset=15), lineno=204, col_offset=8)], [], lineno=203, col_offset=4), FunctionDef('createNewTempFile', arguments([Name('self', Param(), lineno=206, col_offset=26), Name('data', Param(), lineno=206, col_offset=32)], None, None, [Str('', lineno=206, col_offset=37)]), [Expr(Str('Creates a new temporary file containing the specified data,\n        registers the file for deletion during the test fixture tear down, and\n        returns the absolute path of the file.', lineno=209, col_offset=-1), lineno=209, col_offset=-1), Assign([Tuple([Name('newFd', Store(), lineno=211, col_offset=8), Name('newFilePath', Store(), lineno=211, col_offset=15)], Store(), lineno=211, col_offset=8)], Call(Attribute(Name('tempfile', Load(), lineno=211, col_offset=29), 'mkstemp', Load(), lineno=211, col_offset=29), [], [], None, None, lineno=211, col_offset=29), lineno=211, col_offset=8), TryFinally([Expr(Call(Attribute(Name('self', Load(), lineno=213, col_offset=12), 'registerFileForCleanUp', Load(), lineno=213, col_offset=12), [Name('newFilePath', Load(), lineno=213, col_offset=40)], [], None, None, lineno=213, col_offset=12), lineno=213, col_offset=12), Assign([Name('newFile', Store(), lineno=214, col_offset=12)], Call(Attribute(Name('os', Load(), lineno=214, col_offset=22), 'fdopen', Load(), lineno=214, col_offset=22), [Name('newFd', Load(), lineno=214, col_offset=32), Str('wb', lineno=214, col_offset=39)], [], None, None, lineno=214, col_offset=22), lineno=214, col_offset=12), Expr(Call(Attribute(Name('newFile', Load(), lineno=215, col_offset=12), 'write', Load(), lineno=215, col_offset=12), [Name('data', Load(), lineno=215, col_offset=26)], [], None, None, lineno=215, col_offset=12), lineno=215, col_offset=12), Expr(Call(Attribute(Name('newFile', Load(), lineno=216, col_offset=12), 'close', Load(), lineno=216, col_offset=12), [], [], None, None, lineno=216, col_offset=12), lineno=216, col_offset=12)], [TryExcept([Expr(Call(Attribute(Name('newFile', Load(), lineno=218, col_offset=17), 'close', Load(), lineno=218, col_offset=17), [], [], None, None, lineno=218, col_offset=17), lineno=218, col_offset=17)], [ExceptHandler(None, None, [Pass( lineno=219, col_offset=20)], lineno=219, col_offset=12)], [], lineno=218, col_offset=12)], lineno=212, col_offset=8), Return(Name('newFilePath', Load(), lineno=220, col_offset=15), lineno=220, col_offset=8)], [], lineno=206, col_offset=4), FunctionDef('registerFileForCleanUp', arguments([Name('self', Param(), lineno=222, col_offset=31), Name('fileName', Param(), lineno=222, col_offset=37)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=223, col_offset=8), 'tempFiles', Load(), lineno=223, col_offset=8), 'append', Load(), lineno=223, col_offset=8), [Name('fileName', Load(), lineno=223, col_offset=30)], [], None, None, lineno=223, col_offset=8), lineno=223, col_offset=8)], [], lineno=222, col_offset=4), FunctionDef('test_basic', arguments([Name('self', Param(), lineno=225, col_offset=19)], None, None, []), [Assign([Name('result', Store(), lineno=228, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=228, col_offset=17), 'urlretrieve', Load(), lineno=228, col_offset=17), [BinOp(Str('file:%s', lineno=228, col_offset=36), Mod(), Attribute(Name('test_support', Load(), lineno=228, col_offset=48), 'TESTFN', Load(), lineno=228, col_offset=48), lineno=228, col_offset=36)], [], None, None, lineno=228, col_offset=17), lineno=228, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=229, col_offset=8), 'assertEqual', Load(), lineno=229, col_offset=8), [Subscript(Name('result', Load(), lineno=229, col_offset=25), Index(Num(0, lineno=229, col_offset=32)), Load(), lineno=229, col_offset=25), Attribute(Name('test_support', Load(), lineno=229, col_offset=36), 'TESTFN', Load(), lineno=229, col_offset=36)], [], None, None, lineno=229, col_offset=8), lineno=229, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=230, col_offset=8), 'assertIsInstance', Load(), lineno=230, col_offset=8), [Subscript(Name('result', Load(), lineno=230, col_offset=30), Index(Num(1, lineno=230, col_offset=37)), Load(), lineno=230, col_offset=30), Attribute(Name('mimetools', Load(), lineno=230, col_offset=41), 'Message', Load(), lineno=230, col_offset=41), Str('did not get a mimetools.Message instance as second returned value', lineno=231, col_offset=30)], [], None, None, lineno=230, col_offset=8), lineno=230, col_offset=8)], [], lineno=225, col_offset=4), FunctionDef('test_copy', arguments([Name('self', Param(), lineno=234, col_offset=18)], None, None, []), [Assign([Name('second_temp', Store(), lineno=236, col_offset=8)], BinOp(Str('%s.2', lineno=236, col_offset=22), Mod(), Attribute(Name('test_support', Load(), lineno=236, col_offset=31), 'TESTFN', Load(), lineno=236, col_offset=31), lineno=236, col_offset=22), lineno=236, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=237, col_offset=8), 'registerFileForCleanUp', Load(), lineno=237, col_offset=8), [Name('second_temp', Load(), lineno=237, col_offset=36)], [], None, None, lineno=237, col_offset=8), lineno=237, col_offset=8), Assign([Name('result', Store(), lineno=238, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=238, col_offset=17), 'urlretrieve', Load(), lineno=238, col_offset=17), [Call(Attribute(Name('self', Load(), lineno=238, col_offset=36), 'constructLocalFileUrl', Load(), lineno=238, col_offset=36), [Attribute(Name('test_support', Load(), lineno=239, col_offset=12), 'TESTFN', Load(), lineno=239, col_offset=12)], [], None, None, lineno=238, col_offset=36), Name('second_temp', Load(), lineno=239, col_offset=34)], [], None, None, lineno=238, col_offset=17), lineno=238, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=240, col_offset=8), 'assertEqual', Load(), lineno=240, col_offset=8), [Name('second_temp', Load(), lineno=240, col_offset=25), Subscript(Name('result', Load(), lineno=240, col_offset=38), Index(Num(0, lineno=240, col_offset=45)), Load(), lineno=240, col_offset=38)], [], None, None, lineno=240, col_offset=8), lineno=240, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=241, col_offset=8), 'assertTrue', Load(), lineno=241, col_offset=8), [Call(Attribute(Attribute(Name('os', Load(), lineno=241, col_offset=24), 'path', Load(), lineno=241, col_offset=24), 'exists', Load(), lineno=241, col_offset=24), [Name('second_temp', Load(), lineno=241, col_offset=39)], [], None, None, lineno=241, col_offset=24), Str('copy of the file was not made', lineno=241, col_offset=53)], [], None, None, lineno=241, col_offset=8), lineno=241, col_offset=8), Assign([Name('FILE', Store(), lineno=243, col_offset=8)], Call(Name('file', Load(), lineno=243, col_offset=15), [Name('second_temp', Load(), lineno=243, col_offset=20), Str('rb', lineno=243, col_offset=33)], [], None, None, lineno=243, col_offset=15), lineno=243, col_offset=8), TryFinally([Assign([Name('text', Store(), lineno=245, col_offset=12)], Call(Attribute(Name('FILE', Load(), lineno=245, col_offset=19), 'read', Load(), lineno=245, col_offset=19), [], [], None, None, lineno=245, col_offset=19), lineno=245, col_offset=12), Expr(Call(Attribute(Name('FILE', Load(), lineno=246, col_offset=12), 'close', Load(), lineno=246, col_offset=12), [], [], None, None, lineno=246, col_offset=12), lineno=246, col_offset=12)], [TryExcept([Expr(Call(Attribute(Name('FILE', Load(), lineno=248, col_offset=17), 'close', Load(), lineno=248, col_offset=17), [], [], None, None, lineno=248, col_offset=17), lineno=248, col_offset=17)], [ExceptHandler(None, None, [Pass( lineno=249, col_offset=20)], lineno=249, col_offset=12)], [], lineno=248, col_offset=12)], lineno=244, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=250, col_offset=8), 'assertEqual', Load(), lineno=250, col_offset=8), [Attribute(Name('self', Load(), lineno=250, col_offset=25), 'text', Load(), lineno=250, col_offset=25), Name('text', Load(), lineno=250, col_offset=36)], [], None, None, lineno=250, col_offset=8), lineno=250, col_offset=8)], [], lineno=234, col_offset=4), FunctionDef('test_reporthook', arguments([Name('self', Param(), lineno=252, col_offset=24)], None, None, []), [FunctionDef('hooktester', arguments([Name('count', Param(), lineno=254, col_offset=23), Name('block_size', Param(), lineno=254, col_offset=30), Name('total_size', Param(), lineno=254, col_offset=42), Name('count_holder', Param(), lineno=254, col_offset=54)], None, None, [List([Num(0, lineno=254, col_offset=68)], Load(), lineno=254, col_offset=67)]), [Expr(Call(Attribute(Name('self', Load(), lineno=255, col_offset=12), 'assertIsInstance', Load(), lineno=255, col_offset=12), [Name('count', Load(), lineno=255, col_offset=34), Name('int', Load(), lineno=255, col_offset=41)], [], None, None, lineno=255, col_offset=12), lineno=255, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=256, col_offset=12), 'assertIsInstance', Load(), lineno=256, col_offset=12), [Name('block_size', Load(), lineno=256, col_offset=34), Name('int', Load(), lineno=256, col_offset=46)], [], None, None, lineno=256, col_offset=12), lineno=256, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=257, col_offset=12), 'assertIsInstance', Load(), lineno=257, col_offset=12), [Name('total_size', Load(), lineno=257, col_offset=34), Name('int', Load(), lineno=257, col_offset=46)], [], None, None, lineno=257, col_offset=12), lineno=257, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=258, col_offset=12), 'assertEqual', Load(), lineno=258, col_offset=12), [Name('count', Load(), lineno=258, col_offset=29), Subscript(Name('count_holder', Load(), lineno=258, col_offset=36), Index(Num(0, lineno=258, col_offset=49)), Load(), lineno=258, col_offset=36)], [], None, None, lineno=258, col_offset=12), lineno=258, col_offset=12), Assign([Subscript(Name('count_holder', Load(), lineno=259, col_offset=12), Index(Num(0, lineno=259, col_offset=25)), Store(), lineno=259, col_offset=12)], BinOp(Subscript(Name('count_holder', Load(), lineno=259, col_offset=30), Index(Num(0, lineno=259, col_offset=43)), Load(), lineno=259, col_offset=30), Add(), Num(1, lineno=259, col_offset=48), lineno=259, col_offset=30), lineno=259, col_offset=12)], [], lineno=254, col_offset=8), Assign([Name('second_temp', Store(), lineno=260, col_offset=8)], BinOp(Str('%s.2', lineno=260, col_offset=22), Mod(), Attribute(Name('test_support', Load(), lineno=260, col_offset=31), 'TESTFN', Load(), lineno=260, col_offset=31), lineno=260, col_offset=22), lineno=260, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=261, col_offset=8), 'registerFileForCleanUp', Load(), lineno=261, col_offset=8), [Name('second_temp', Load(), lineno=261, col_offset=36)], [], None, None, lineno=261, col_offset=8), lineno=261, col_offset=8), Expr(Call(Attribute(Name('urllib', Load(), lineno=262, col_offset=8), 'urlretrieve', Load(), lineno=262, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=262, col_offset=27), 'constructLocalFileUrl', Load(), lineno=262, col_offset=27), [Attribute(Name('test_support', Load(), lineno=262, col_offset=54), 'TESTFN', Load(), lineno=262, col_offset=54)], [], None, None, lineno=262, col_offset=27), Name('second_temp', Load(), lineno=263, col_offset=12), Name('hooktester', Load(), lineno=263, col_offset=25)], [], None, None, lineno=262, col_offset=8), lineno=262, col_offset=8)], [], lineno=252, col_offset=4), FunctionDef('test_reporthook_0_bytes', arguments([Name('self', Param(), lineno=265, col_offset=32)], None, None, []), [Assign([Name('report', Store(), lineno=267, col_offset=8)], List([], Load(), lineno=267, col_offset=17), lineno=267, col_offset=8), FunctionDef('hooktester', arguments([Name('count', Param(), lineno=268, col_offset=23), Name('block_size', Param(), lineno=268, col_offset=30), Name('total_size', Param(), lineno=268, col_offset=42), Name('_report', Param(), lineno=268, col_offset=54)], None, None, [Name('report', Load(), lineno=268, col_offset=62)]), [Expr(Call(Attribute(Name('_report', Load(), lineno=269, col_offset=12), 'append', Load(), lineno=269, col_offset=12), [Tuple([Name('count', Load(), lineno=269, col_offset=28), Name('block_size', Load(), lineno=269, col_offset=35), Name('total_size', Load(), lineno=269, col_offset=47)], Load(), lineno=269, col_offset=28)], [], None, None, lineno=269, col_offset=12), lineno=269, col_offset=12)], [], lineno=268, col_offset=8), Assign([Name('srcFileName', Store(), lineno=270, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=270, col_offset=22), 'createNewTempFile', Load(), lineno=270, col_offset=22), [], [], None, None, lineno=270, col_offset=22), lineno=270, col_offset=8), Expr(Call(Attribute(Name('urllib', Load(), lineno=271, col_offset=8), 'urlretrieve', Load(), lineno=271, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=271, col_offset=27), 'constructLocalFileUrl', Load(), lineno=271, col_offset=27), [Name('srcFileName', Load(), lineno=271, col_offset=54)], [], None, None, lineno=271, col_offset=27), Attribute(Name('test_support', Load(), lineno=272, col_offset=12), 'TESTFN', Load(), lineno=272, col_offset=12), Name('hooktester', Load(), lineno=272, col_offset=33)], [], None, None, lineno=271, col_offset=8), lineno=271, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=273, col_offset=8), 'assertEqual', Load(), lineno=273, col_offset=8), [Call(Name('len', Load(), lineno=273, col_offset=25), [Name('report', Load(), lineno=273, col_offset=29)], [], None, None, lineno=273, col_offset=25), Num(1, lineno=273, col_offset=38)], [], None, None, lineno=273, col_offset=8), lineno=273, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=274, col_offset=8), 'assertEqual', Load(), lineno=274, col_offset=8), [Subscript(Subscript(Name('report', Load(), lineno=274, col_offset=25), Index(Num(0, lineno=274, col_offset=32)), Load(), lineno=274, col_offset=25), Index(Num(2, lineno=274, col_offset=35)), Load(), lineno=274, col_offset=25), Num(0, lineno=274, col_offset=39)], [], None, None, lineno=274, col_offset=8), lineno=274, col_offset=8)], [], lineno=265, col_offset=4), FunctionDef('test_reporthook_5_bytes', arguments([Name('self', Param(), lineno=276, col_offset=32)], None, None, []), [Assign([Name('report', Store(), lineno=281, col_offset=8)], List([], Load(), lineno=281, col_offset=17), lineno=281, col_offset=8), FunctionDef('hooktester', arguments([Name('count', Param(), lineno=282, col_offset=23), Name('block_size', Param(), lineno=282, col_offset=30), Name('total_size', Param(), lineno=282, col_offset=42), Name('_report', Param(), lineno=282, col_offset=54)], None, None, [Name('report', Load(), lineno=282, col_offset=62)]), [Expr(Call(Attribute(Name('_report', Load(), lineno=283, col_offset=12), 'append', Load(), lineno=283, col_offset=12), [Tuple([Name('count', Load(), lineno=283, col_offset=28), Name('block_size', Load(), lineno=283, col_offset=35), Name('total_size', Load(), lineno=283, col_offset=47)], Load(), lineno=283, col_offset=28)], [], None, None, lineno=283, col_offset=12), lineno=283, col_offset=12)], [], lineno=282, col_offset=8), Assign([Name('srcFileName', Store(), lineno=284, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=284, col_offset=22), 'createNewTempFile', Load(), lineno=284, col_offset=22), [BinOp(Str('x', lineno=284, col_offset=45), Mult(), Num(5, lineno=284, col_offset=51), lineno=284, col_offset=45)], [], None, None, lineno=284, col_offset=22), lineno=284, col_offset=8), Expr(Call(Attribute(Name('urllib', Load(), lineno=285, col_offset=8), 'urlretrieve', Load(), lineno=285, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=285, col_offset=27), 'constructLocalFileUrl', Load(), lineno=285, col_offset=27), [Name('srcFileName', Load(), lineno=285, col_offset=54)], [], None, None, lineno=285, col_offset=27), Attribute(Name('test_support', Load(), lineno=286, col_offset=12), 'TESTFN', Load(), lineno=286, col_offset=12), Name('hooktester', Load(), lineno=286, col_offset=33)], [], None, None, lineno=285, col_offset=8), lineno=285, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=287, col_offset=8), 'assertEqual', Load(), lineno=287, col_offset=8), [Call(Name('len', Load(), lineno=287, col_offset=25), [Name('report', Load(), lineno=287, col_offset=29)], [], None, None, lineno=287, col_offset=25), Num(2, lineno=287, col_offset=38)], [], None, None, lineno=287, col_offset=8), lineno=287, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=288, col_offset=8), 'assertEqual', Load(), lineno=288, col_offset=8), [Subscript(Subscript(Name('report', Load(), lineno=288, col_offset=25), Index(Num(0, lineno=288, col_offset=32)), Load(), lineno=288, col_offset=25), Index(Num(1, lineno=288, col_offset=35)), Load(), lineno=288, col_offset=25), Num(8192, lineno=288, col_offset=39)], [], None, None, lineno=288, col_offset=8), lineno=288, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=289, col_offset=8), 'assertEqual', Load(), lineno=289, col_offset=8), [Subscript(Subscript(Name('report', Load(), lineno=289, col_offset=25), Index(Num(0, lineno=289, col_offset=32)), Load(), lineno=289, col_offset=25), Index(Num(2, lineno=289, col_offset=35)), Load(), lineno=289, col_offset=25), Num(5, lineno=289, col_offset=39)], [], None, None, lineno=289, col_offset=8), lineno=289, col_offset=8)], [], lineno=276, col_offset=4), FunctionDef('test_reporthook_8193_bytes', arguments([Name('self', Param(), lineno=291, col_offset=35)], None, None, []), [Assign([Name('report', Store(), lineno=295, col_offset=8)], List([], Load(), lineno=295, col_offset=17), lineno=295, col_offset=8), FunctionDef('hooktester', arguments([Name('count', Param(), lineno=296, col_offset=23), Name('block_size', Param(), lineno=296, col_offset=30), Name('total_size', Param(), lineno=296, col_offset=42), Name('_report', Param(), lineno=296, col_offset=54)], None, None, [Name('report', Load(), lineno=296, col_offset=62)]), [Expr(Call(Attribute(Name('_report', Load(), lineno=297, col_offset=12), 'append', Load(), lineno=297, col_offset=12), [Tuple([Name('count', Load(), lineno=297, col_offset=28), Name('block_size', Load(), lineno=297, col_offset=35), Name('total_size', Load(), lineno=297, col_offset=47)], Load(), lineno=297, col_offset=28)], [], None, None, lineno=297, col_offset=12), lineno=297, col_offset=12)], [], lineno=296, col_offset=8), Assign([Name('srcFileName', Store(), lineno=298, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=298, col_offset=22), 'createNewTempFile', Load(), lineno=298, col_offset=22), [BinOp(Str('x', lineno=298, col_offset=45), Mult(), Num(8193, lineno=298, col_offset=51), lineno=298, col_offset=45)], [], None, None, lineno=298, col_offset=22), lineno=298, col_offset=8), Expr(Call(Attribute(Name('urllib', Load(), lineno=299, col_offset=8), 'urlretrieve', Load(), lineno=299, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=299, col_offset=27), 'constructLocalFileUrl', Load(), lineno=299, col_offset=27), [Name('srcFileName', Load(), lineno=299, col_offset=54)], [], None, None, lineno=299, col_offset=27), Attribute(Name('test_support', Load(), lineno=300, col_offset=12), 'TESTFN', Load(), lineno=300, col_offset=12), Name('hooktester', Load(), lineno=300, col_offset=33)], [], None, None, lineno=299, col_offset=8), lineno=299, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=301, col_offset=8), 'assertEqual', Load(), lineno=301, col_offset=8), [Call(Name('len', Load(), lineno=301, col_offset=25), [Name('report', Load(), lineno=301, col_offset=29)], [], None, None, lineno=301, col_offset=25), Num(3, lineno=301, col_offset=38)], [], None, None, lineno=301, col_offset=8), lineno=301, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=302, col_offset=8), 'assertEqual', Load(), lineno=302, col_offset=8), [Subscript(Subscript(Name('report', Load(), lineno=302, col_offset=25), Index(Num(0, lineno=302, col_offset=32)), Load(), lineno=302, col_offset=25), Index(Num(1, lineno=302, col_offset=35)), Load(), lineno=302, col_offset=25), Num(8192, lineno=302, col_offset=39)], [], None, None, lineno=302, col_offset=8), lineno=302, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=303, col_offset=8), 'assertEqual', Load(), lineno=303, col_offset=8), [Subscript(Subscript(Name('report', Load(), lineno=303, col_offset=25), Index(Num(0, lineno=303, col_offset=32)), Load(), lineno=303, col_offset=25), Index(Num(2, lineno=303, col_offset=35)), Load(), lineno=303, col_offset=25), Num(8193, lineno=303, col_offset=39)], [], None, None, lineno=303, col_offset=8), lineno=303, col_offset=8)], [], lineno=291, col_offset=4)], [], lineno=173, col_offset=0), ClassDef('QuotingTests', [Attribute(Name('unittest', Load(), lineno=305, col_offset=19), 'TestCase', Load(), lineno=305, col_offset=19)], [Expr(Str('Tests for urllib.quote() and urllib.quote_plus()\n\n    According to RFC 2396 ("Uniform Resource Identifiers), to escape a\n    character you write it as \'%\' + <2 character US-ASCII hex value>.  The Python\n    code of ``\'%\' + hex(ord(<character>))[2:]`` escapes a character properly.\n    Case does not matter on the hex letters.\n\n    The various character sets specified are:\n\n    Reserved characters : ";/?:@&=+$,"\n        Have special meaning in URIs and must be escaped if not being used for\n        their special meaning\n    Data characters : letters, digits, and "-_.!~*\'()"\n        Unreserved and do not need to be escaped; can be, though, if desired\n    Control characters : 0x00 - 0x1F, 0x7F\n        Have no use in URIs so must be escaped\n    space : 0x20\n        Must be escaped\n    Delimiters : \'<>#%"\'\n        Must be escaped\n    Unwise : "{}|\\^[]`"\n        Must be escaped\n\n    ', lineno=329, col_offset=-1), lineno=329, col_offset=-1), FunctionDef('test_never_quote', arguments([Name('self', Param(), lineno=331, col_offset=25)], None, None, []), [Assign([Name('do_not_quote', Store(), lineno=333, col_offset=8)], Call(Attribute(Str('', lineno=333, col_offset=23), 'join', Load(), lineno=333, col_offset=23), [List([Str('ABCDEFGHIJKLMNOPQRSTUVWXYZ', lineno=333, col_offset=33), Str('abcdefghijklmnopqrstuvwxyz', lineno=334, col_offset=33), Str('0123456789', lineno=335, col_offset=33), Str('_.-', lineno=336, col_offset=33)], Load(), lineno=333, col_offset=32)], [], None, None, lineno=333, col_offset=23), lineno=333, col_offset=8), Assign([Name('result', Store(), lineno=337, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=337, col_offset=17), 'quote', Load(), lineno=337, col_offset=17), [Name('do_not_quote', Load(), lineno=337, col_offset=30)], [], None, None, lineno=337, col_offset=17), lineno=337, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=338, col_offset=8), 'assertEqual', Load(), lineno=338, col_offset=8), [Name('do_not_quote', Load(), lineno=338, col_offset=25), Name('result', Load(), lineno=338, col_offset=39), BinOp(Str('using quote(): %s != %s', lineno=339, col_offset=25), Mod(), Tuple([Name('do_not_quote', Load(), lineno=339, col_offset=54), Name('result', Load(), lineno=339, col_offset=68)], Load(), lineno=339, col_offset=54), lineno=339, col_offset=25)], [], None, None, lineno=338, col_offset=8), lineno=338, col_offset=8), Assign([Name('result', Store(), lineno=340, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=340, col_offset=17), 'quote_plus', Load(), lineno=340, col_offset=17), [Name('do_not_quote', Load(), lineno=340, col_offset=35)], [], None, None, lineno=340, col_offset=17), lineno=340, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=341, col_offset=8), 'assertEqual', Load(), lineno=341, col_offset=8), [Name('do_not_quote', Load(), lineno=341, col_offset=25), Name('result', Load(), lineno=341, col_offset=39), BinOp(Str('using quote_plus(): %s != %s', lineno=342, col_offset=24), Mod(), Tuple([Name('do_not_quote', Load(), lineno=342, col_offset=58), Name('result', Load(), lineno=342, col_offset=72)], Load(), lineno=342, col_offset=58), lineno=342, col_offset=24)], [], None, None, lineno=341, col_offset=8), lineno=341, col_offset=8)], [], lineno=331, col_offset=4), FunctionDef('test_default_safe', arguments([Name('self', Param(), lineno=344, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=346, col_offset=8), 'assertEqual', Load(), lineno=346, col_offset=8), [Subscript(Attribute(Attribute(Name('urllib', Load(), lineno=346, col_offset=25), 'quote', Load(), lineno=346, col_offset=25), 'func_defaults', Load(), lineno=346, col_offset=25), Index(Num(0, lineno=346, col_offset=52)), Load(), lineno=346, col_offset=25), Str('/', lineno=346, col_offset=56)], [], None, None, lineno=346, col_offset=8), lineno=346, col_offset=8)], [], lineno=344, col_offset=4), FunctionDef('test_safe', arguments([Name('self', Param(), lineno=348, col_offset=18)], None, None, []), [Assign([Name('quote_by_default', Store(), lineno=350, col_offset=8)], Str('<>', lineno=350, col_offset=27), lineno=350, col_offset=8), Assign([Name('result', Store(), lineno=351, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=351, col_offset=17), 'quote', Load(), lineno=351, col_offset=17), [Name('quote_by_default', Load(), lineno=351, col_offset=30)], [keyword('safe', Name('quote_by_default', Load(), lineno=351, col_offset=53))], None, None, lineno=351, col_offset=17), lineno=351, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=352, col_offset=8), 'assertEqual', Load(), lineno=352, col_offset=8), [Name('quote_by_default', Load(), lineno=352, col_offset=25), Name('result', Load(), lineno=352, col_offset=43), BinOp(Str('using quote(): %s != %s', lineno=353, col_offset=25), Mod(), Tuple([Name('quote_by_default', Load(), lineno=353, col_offset=54), Name('result', Load(), lineno=353, col_offset=72)], Load(), lineno=353, col_offset=54), lineno=353, col_offset=25)], [], None, None, lineno=352, col_offset=8), lineno=352, col_offset=8), Assign([Name('result', Store(), lineno=354, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=354, col_offset=17), 'quote_plus', Load(), lineno=354, col_offset=17), [Name('quote_by_default', Load(), lineno=354, col_offset=35)], [keyword('safe', Name('quote_by_default', Load(), lineno=354, col_offset=58))], None, None, lineno=354, col_offset=17), lineno=354, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=355, col_offset=8), 'assertEqual', Load(), lineno=355, col_offset=8), [Name('quote_by_default', Load(), lineno=355, col_offset=25), Name('result', Load(), lineno=355, col_offset=43), BinOp(Str('using quote_plus(): %s != %s', lineno=356, col_offset=25), Mod(), Tuple([Name('quote_by_default', Load(), lineno=357, col_offset=26), Name('result', Load(), lineno=357, col_offset=44)], Load(), lineno=357, col_offset=26), lineno=356, col_offset=25)], [], None, None, lineno=355, col_offset=8), lineno=355, col_offset=8)], [], lineno=348, col_offset=4), FunctionDef('test_default_quoting', arguments([Name('self', Param(), lineno=359, col_offset=29)], None, None, []), [Assign([Name('should_quote', Store(), lineno=362, col_offset=8)], ListComp(Call(Name('chr', Load(), lineno=362, col_offset=24), [Name('num', Load(), lineno=362, col_offset=28)], [], None, None, lineno=362, col_offset=24), [comprehension(Name('num', Store(), lineno=362, col_offset=37), Call(Name('range', Load(), lineno=362, col_offset=44), [Num(32, lineno=362, col_offset=50)], [], None, None, lineno=362, col_offset=44), [])], lineno=362, col_offset=24), lineno=362, col_offset=8), Expr(Call(Attribute(Name('should_quote', Load(), lineno=363, col_offset=8), 'append', Load(), lineno=363, col_offset=8), [Str('<>#%"{}|\\^[]`', lineno=363, col_offset=28)], [], None, None, lineno=363, col_offset=8), lineno=363, col_offset=8), Expr(Call(Attribute(Name('should_quote', Load(), lineno=364, col_offset=8), 'append', Load(), lineno=364, col_offset=8), [Call(Name('chr', Load(), lineno=364, col_offset=28), [Num(127, lineno=364, col_offset=32)], [], None, None, lineno=364, col_offset=28)], [], None, None, lineno=364, col_offset=8), lineno=364, col_offset=8), Assign([Name('should_quote', Store(), lineno=365, col_offset=8)], Call(Attribute(Str('', lineno=365, col_offset=23), 'join', Load(), lineno=365, col_offset=23), [Name('should_quote', Load(), lineno=365, col_offset=31)], [], None, None, lineno=365, col_offset=23), lineno=365, col_offset=8), For(Name('char', Store(), lineno=366, col_offset=12), Name('should_quote', Load(), lineno=366, col_offset=20), [Assign([Name('result', Store(), lineno=367, col_offset=12)], Call(Attribute(Name('urllib', Load(), lineno=367, col_offset=21), 'quote', Load(), lineno=367, col_offset=21), [Name('char', Load(), lineno=367, col_offset=34)], [], None, None, lineno=367, col_offset=21), lineno=367, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=368, col_offset=12), 'assertEqual', Load(), lineno=368, col_offset=12), [Call(Name('hexescape', Load(), lineno=368, col_offset=29), [Name('char', Load(), lineno=368, col_offset=39)], [], None, None, lineno=368, col_offset=29), Name('result', Load(), lineno=368, col_offset=46), BinOp(Str('using quote(): %s should be escaped to %s, not %s', lineno=369, col_offset=29), Mod(), Tuple([Name('char', Load(), lineno=370, col_offset=30), Call(Name('hexescape', Load(), lineno=370, col_offset=36), [Name('char', Load(), lineno=370, col_offset=46)], [], None, None, lineno=370, col_offset=36), Name('result', Load(), lineno=370, col_offset=53)], Load(), lineno=370, col_offset=30), lineno=369, col_offset=29)], [], None, None, lineno=368, col_offset=12), lineno=368, col_offset=12), Assign([Name('result', Store(), lineno=371, col_offset=12)], Call(Attribute(Name('urllib', Load(), lineno=371, col_offset=21), 'quote_plus', Load(), lineno=371, col_offset=21), [Name('char', Load(), lineno=371, col_offset=39)], [], None, None, lineno=371, col_offset=21), lineno=371, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=372, col_offset=12), 'assertEqual', Load(), lineno=372, col_offset=12), [Call(Name('hexescape', Load(), lineno=372, col_offset=29), [Name('char', Load(), lineno=372, col_offset=39)], [], None, None, lineno=372, col_offset=29), Name('result', Load(), lineno=372, col_offset=46), BinOp(Str('using quote_plus(): %s should be escapes to %s, not %s', lineno=373, col_offset=29), Mod(), Tuple([Name('char', Load(), lineno=375, col_offset=30), Call(Name('hexescape', Load(), lineno=375, col_offset=36), [Name('char', Load(), lineno=375, col_offset=46)], [], None, None, lineno=375, col_offset=36), Name('result', Load(), lineno=375, col_offset=53)], Load(), lineno=375, col_offset=30), lineno=373, col_offset=29)], [], None, None, lineno=372, col_offset=12), lineno=372, col_offset=12)], [], lineno=366, col_offset=8), Delete([Name('should_quote', Del(), lineno=376, col_offset=12)], lineno=376, col_offset=8), Assign([Name('partial_quote', Store(), lineno=377, col_offset=8)], Str('ab[]cd', lineno=377, col_offset=24), lineno=377, col_offset=8), Assign([Name('expected', Store(), lineno=378, col_offset=8)], Str('ab%5B%5Dcd', lineno=378, col_offset=19), lineno=378, col_offset=8), Assign([Name('result', Store(), lineno=379, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=379, col_offset=17), 'quote', Load(), lineno=379, col_offset=17), [Name('partial_quote', Load(), lineno=379, col_offset=30)], [], None, None, lineno=379, col_offset=17), lineno=379, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=380, col_offset=8), 'assertEqual', Load(), lineno=380, col_offset=8), [Name('expected', Load(), lineno=380, col_offset=25), Name('result', Load(), lineno=380, col_offset=35), BinOp(Str('using quote(): %s != %s', lineno=381, col_offset=25), Mod(), Tuple([Name('expected', Load(), lineno=381, col_offset=54), Name('result', Load(), lineno=381, col_offset=64)], Load(), lineno=381, col_offset=54), lineno=381, col_offset=25)], [], None, None, lineno=380, col_offset=8), lineno=380, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=382, col_offset=8), 'assertEqual', Load(), lineno=382, col_offset=8), [Name('expected', Load(), lineno=382, col_offset=25), Name('result', Load(), lineno=382, col_offset=35), BinOp(Str('using quote_plus(): %s != %s', lineno=383, col_offset=25), Mod(), Tuple([Name('expected', Load(), lineno=383, col_offset=59), Name('result', Load(), lineno=383, col_offset=69)], Load(), lineno=383, col_offset=59), lineno=383, col_offset=25)], [], None, None, lineno=382, col_offset=8), lineno=382, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=384, col_offset=8), 'assertRaises', Load(), lineno=384, col_offset=8), [Name('TypeError', Load(), lineno=384, col_offset=26), Attribute(Name('urllib', Load(), lineno=384, col_offset=37), 'quote', Load(), lineno=384, col_offset=37), Name('None', Load(), lineno=384, col_offset=51)], [], None, None, lineno=384, col_offset=8), lineno=384, col_offset=8)], [], lineno=359, col_offset=4), FunctionDef('test_quoting_space', arguments([Name('self', Param(), lineno=386, col_offset=27)], None, None, []), [Assign([Name('result', Store(), lineno=389, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=389, col_offset=17), 'quote', Load(), lineno=389, col_offset=17), [Str(' ', lineno=389, col_offset=30)], [], None, None, lineno=389, col_offset=17), lineno=389, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=390, col_offset=8), 'assertEqual', Load(), lineno=390, col_offset=8), [Name('result', Load(), lineno=390, col_offset=25), Call(Name('hexescape', Load(), lineno=390, col_offset=33), [Str(' ', lineno=390, col_offset=43)], [], None, None, lineno=390, col_offset=33), BinOp(Str('using quote(): %s != %s', lineno=391, col_offset=25), Mod(), Tuple([Name('result', Load(), lineno=391, col_offset=54), Call(Name('hexescape', Load(), lineno=391, col_offset=62), [Str(' ', lineno=391, col_offset=72)], [], None, None, lineno=391, col_offset=62)], Load(), lineno=391, col_offset=54), lineno=391, col_offset=25)], [], None, None, lineno=390, col_offset=8), lineno=390, col_offset=8), Assign([Name('result', Store(), lineno=392, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=392, col_offset=17), 'quote_plus', Load(), lineno=392, col_offset=17), [Str(' ', lineno=392, col_offset=35)], [], None, None, lineno=392, col_offset=17), lineno=392, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=393, col_offset=8), 'assertEqual', Load(), lineno=393, col_offset=8), [Name('result', Load(), lineno=393, col_offset=25), Str('+', lineno=393, col_offset=33), BinOp(Str('using quote_plus(): %s != +', lineno=394, col_offset=25), Mod(), Name('result', Load(), lineno=394, col_offset=57), lineno=394, col_offset=25)], [], None, None, lineno=393, col_offset=8), lineno=393, col_offset=8), Assign([Name('given', Store(), lineno=395, col_offset=8)], Str('a b cd e f', lineno=395, col_offset=16), lineno=395, col_offset=8), Assign([Name('expect', Store(), lineno=396, col_offset=8)], Call(Attribute(Name('given', Load(), lineno=396, col_offset=17), 'replace', Load(), lineno=396, col_offset=17), [Str(' ', lineno=396, col_offset=31), Call(Name('hexescape', Load(), lineno=396, col_offset=36), [Str(' ', lineno=396, col_offset=46)], [], None, None, lineno=396, col_offset=36)], [], None, None, lineno=396, col_offset=17), lineno=396, col_offset=8), Assign([Name('result', Store(), lineno=397, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=397, col_offset=17), 'quote', Load(), lineno=397, col_offset=17), [Name('given', Load(), lineno=397, col_offset=30)], [], None, None, lineno=397, col_offset=17), lineno=397, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=398, col_offset=8), 'assertEqual', Load(), lineno=398, col_offset=8), [Name('expect', Load(), lineno=398, col_offset=25), Name('result', Load(), lineno=398, col_offset=33), BinOp(Str('using quote(): %s != %s', lineno=399, col_offset=25), Mod(), Tuple([Name('expect', Load(), lineno=399, col_offset=54), Name('result', Load(), lineno=399, col_offset=62)], Load(), lineno=399, col_offset=54), lineno=399, col_offset=25)], [], None, None, lineno=398, col_offset=8), lineno=398, col_offset=8), Assign([Name('expect', Store(), lineno=400, col_offset=8)], Call(Attribute(Name('given', Load(), lineno=400, col_offset=17), 'replace', Load(), lineno=400, col_offset=17), [Str(' ', lineno=400, col_offset=31), Str('+', lineno=400, col_offset=36)], [], None, None, lineno=400, col_offset=17), lineno=400, col_offset=8), Assign([Name('result', Store(), lineno=401, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=401, col_offset=17), 'quote_plus', Load(), lineno=401, col_offset=17), [Name('given', Load(), lineno=401, col_offset=35)], [], None, None, lineno=401, col_offset=17), lineno=401, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=402, col_offset=8), 'assertEqual', Load(), lineno=402, col_offset=8), [Name('expect', Load(), lineno=402, col_offset=25), Name('result', Load(), lineno=402, col_offset=33), BinOp(Str('using quote_plus(): %s != %s', lineno=403, col_offset=25), Mod(), Tuple([Name('expect', Load(), lineno=403, col_offset=59), Name('result', Load(), lineno=403, col_offset=67)], Load(), lineno=403, col_offset=59), lineno=403, col_offset=25)], [], None, None, lineno=402, col_offset=8), lineno=402, col_offset=8)], [], lineno=386, col_offset=4), FunctionDef('test_quoting_plus', arguments([Name('self', Param(), lineno=405, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=406, col_offset=8), 'assertEqual', Load(), lineno=406, col_offset=8), [Call(Attribute(Name('urllib', Load(), lineno=406, col_offset=25), 'quote_plus', Load(), lineno=406, col_offset=25), [Str('alpha+beta gamma', lineno=406, col_offset=43)], [], None, None, lineno=406, col_offset=25), Str('alpha%2Bbeta+gamma', lineno=407, col_offset=25)], [], None, None, lineno=406, col_offset=8), lineno=406, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=408, col_offset=8), 'assertEqual', Load(), lineno=408, col_offset=8), [Call(Attribute(Name('urllib', Load(), lineno=408, col_offset=25), 'quote_plus', Load(), lineno=408, col_offset=25), [Str('alpha+beta gamma', lineno=408, col_offset=43), Str('+', lineno=408, col_offset=63)], [], None, None, lineno=408, col_offset=25), Str('alpha+beta+gamma', lineno=409, col_offset=25)], [], None, None, lineno=408, col_offset=8), lineno=408, col_offset=8)], [], lineno=405, col_offset=4)], [], lineno=305, col_offset=0), ClassDef('UnquotingTests', [Attribute(Name('unittest', Load(), lineno=411, col_offset=21), 'TestCase', Load(), lineno=411, col_offset=21)], [Expr(Str('Tests for unquote() and unquote_plus()\n\n    See the doc string for quoting_Tests for details on quoting and such.\n\n    ', lineno=416, col_offset=-1), lineno=416, col_offset=-1), FunctionDef('test_unquoting', arguments([Name('self', Param(), lineno=418, col_offset=23)], None, None, []), [Assign([Name('escape_list', Store(), lineno=420, col_offset=8)], List([], Load(), lineno=420, col_offset=22), lineno=420, col_offset=8), For(Name('num', Store(), lineno=421, col_offset=12), Call(Name('range', Load(), lineno=421, col_offset=19), [Num(128, lineno=421, col_offset=25)], [], None, None, lineno=421, col_offset=19), [Assign([Name('given', Store(), lineno=422, col_offset=12)], Call(Name('hexescape', Load(), lineno=422, col_offset=20), [Call(Name('chr', Load(), lineno=422, col_offset=30), [Name('num', Load(), lineno=422, col_offset=34)], [], None, None, lineno=422, col_offset=30)], [], None, None, lineno=422, col_offset=20), lineno=422, col_offset=12), Assign([Name('expect', Store(), lineno=423, col_offset=12)], Call(Name('chr', Load(), lineno=423, col_offset=21), [Name('num', Load(), lineno=423, col_offset=25)], [], None, None, lineno=423, col_offset=21), lineno=423, col_offset=12), Assign([Name('result', Store(), lineno=424, col_offset=12)], Call(Attribute(Name('urllib', Load(), lineno=424, col_offset=21), 'unquote', Load(), lineno=424, col_offset=21), [Name('given', Load(), lineno=424, col_offset=36)], [], None, None, lineno=424, col_offset=21), lineno=424, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=425, col_offset=12), 'assertEqual', Load(), lineno=425, col_offset=12), [Name('expect', Load(), lineno=425, col_offset=29), Name('result', Load(), lineno=425, col_offset=37), BinOp(Str('using unquote(): %s != %s', lineno=426, col_offset=29), Mod(), Tuple([Name('expect', Load(), lineno=426, col_offset=60), Name('result', Load(), lineno=426, col_offset=68)], Load(), lineno=426, col_offset=60), lineno=426, col_offset=29)], [], None, None, lineno=425, col_offset=12), lineno=425, col_offset=12), Assign([Name('result', Store(), lineno=427, col_offset=12)], Call(Attribute(Name('urllib', Load(), lineno=427, col_offset=21), 'unquote_plus', Load(), lineno=427, col_offset=21), [Name('given', Load(), lineno=427, col_offset=41)], [], None, None, lineno=427, col_offset=21), lineno=427, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=428, col_offset=12), 'assertEqual', Load(), lineno=428, col_offset=12), [Name('expect', Load(), lineno=428, col_offset=29), Name('result', Load(), lineno=428, col_offset=37), BinOp(Str('using unquote_plus(): %s != %s', lineno=429, col_offset=29), Mod(), Tuple([Name('expect', Load(), lineno=430, col_offset=30), Name('result', Load(), lineno=430, col_offset=38)], Load(), lineno=430, col_offset=30), lineno=429, col_offset=29)], [], None, None, lineno=428, col_offset=12), lineno=428, col_offset=12), Expr(Call(Attribute(Name('escape_list', Load(), lineno=431, col_offset=12), 'append', Load(), lineno=431, col_offset=12), [Name('given', Load(), lineno=431, col_offset=31)], [], None, None, lineno=431, col_offset=12), lineno=431, col_offset=12)], [], lineno=421, col_offset=8), Assign([Name('escape_string', Store(), lineno=432, col_offset=8)], Call(Attribute(Str('', lineno=432, col_offset=24), 'join', Load(), lineno=432, col_offset=24), [Name('escape_list', Load(), lineno=432, col_offset=32)], [], None, None, lineno=432, col_offset=24), lineno=432, col_offset=8), Delete([Name('escape_list', Del(), lineno=433, col_offset=12)], lineno=433, col_offset=8), Assign([Name('result', Store(), lineno=434, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=434, col_offset=17), 'unquote', Load(), lineno=434, col_offset=17), [Name('escape_string', Load(), lineno=434, col_offset=32)], [], None, None, lineno=434, col_offset=17), lineno=434, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=435, col_offset=8), 'assertEqual', Load(), lineno=435, col_offset=8), [Call(Attribute(Name('result', Load(), lineno=435, col_offset=25), 'count', Load(), lineno=435, col_offset=25), [Str('%', lineno=435, col_offset=38)], [], None, None, lineno=435, col_offset=25), Num(1, lineno=435, col_offset=44), BinOp(Str('using quote(): not all characters escaped; %s', lineno=436, col_offset=25), Mod(), Name('result', Load(), lineno=437, col_offset=25), lineno=436, col_offset=25)], [], None, None, lineno=435, col_offset=8), lineno=435, col_offset=8), Assign([Name('result', Store(), lineno=438, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=438, col_offset=17), 'unquote', Load(), lineno=438, col_offset=17), [Name('escape_string', Load(), lineno=438, col_offset=32)], [], None, None, lineno=438, col_offset=17), lineno=438, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=439, col_offset=8), 'assertEqual', Load(), lineno=439, col_offset=8), [Call(Attribute(Name('result', Load(), lineno=439, col_offset=25), 'count', Load(), lineno=439, col_offset=25), [Str('%', lineno=439, col_offset=38)], [], None, None, lineno=439, col_offset=25), Num(1, lineno=439, col_offset=44), BinOp(Str('using unquote(): not all characters escaped: %s', lineno=440, col_offset=25), Mod(), Name('result', Load(), lineno=441, col_offset=32), lineno=440, col_offset=25)], [], None, None, lineno=439, col_offset=8), lineno=439, col_offset=8)], [], lineno=418, col_offset=4), FunctionDef('test_unquoting_badpercent', arguments([Name('self', Param(), lineno=443, col_offset=34)], None, None, []), [Assign([Name('given', Store(), lineno=445, col_offset=8)], Str('%xab', lineno=445, col_offset=16), lineno=445, col_offset=8), Assign([Name('expect', Store(), lineno=446, col_offset=8)], Name('given', Load(), lineno=446, col_offset=17), lineno=446, col_offset=8), Assign([Name('result', Store(), lineno=447, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=447, col_offset=17), 'unquote', Load(), lineno=447, col_offset=17), [Name('given', Load(), lineno=447, col_offset=32)], [], None, None, lineno=447, col_offset=17), lineno=447, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=448, col_offset=8), 'assertEqual', Load(), lineno=448, col_offset=8), [Name('expect', Load(), lineno=448, col_offset=25), Name('result', Load(), lineno=448, col_offset=33), BinOp(Str('using unquote(): %r != %r', lineno=448, col_offset=41), Mod(), Tuple([Name('expect', Load(), lineno=449, col_offset=28), Name('result', Load(), lineno=449, col_offset=36)], Load(), lineno=449, col_offset=28), lineno=448, col_offset=41)], [], None, None, lineno=448, col_offset=8), lineno=448, col_offset=8), Assign([Name('given', Store(), lineno=450, col_offset=8)], Str('%x', lineno=450, col_offset=16), lineno=450, col_offset=8), Assign([Name('expect', Store(), lineno=451, col_offset=8)], Name('given', Load(), lineno=451, col_offset=17), lineno=451, col_offset=8), Assign([Name('result', Store(), lineno=452, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=452, col_offset=17), 'unquote', Load(), lineno=452, col_offset=17), [Name('given', Load(), lineno=452, col_offset=32)], [], None, None, lineno=452, col_offset=17), lineno=452, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=453, col_offset=8), 'assertEqual', Load(), lineno=453, col_offset=8), [Name('expect', Load(), lineno=453, col_offset=25), Name('result', Load(), lineno=453, col_offset=33), BinOp(Str('using unquote(): %r != %r', lineno=453, col_offset=41), Mod(), Tuple([Name('expect', Load(), lineno=454, col_offset=28), Name('result', Load(), lineno=454, col_offset=36)], Load(), lineno=454, col_offset=28), lineno=453, col_offset=41)], [], None, None, lineno=453, col_offset=8), lineno=453, col_offset=8), Assign([Name('given', Store(), lineno=455, col_offset=8)], Str('%', lineno=455, col_offset=16), lineno=455, col_offset=8), Assign([Name('expect', Store(), lineno=456, col_offset=8)], Name('given', Load(), lineno=456, col_offset=17), lineno=456, col_offset=8), Assign([Name('result', Store(), lineno=457, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=457, col_offset=17), 'unquote', Load(), lineno=457, col_offset=17), [Name('given', Load(), lineno=457, col_offset=32)], [], None, None, lineno=457, col_offset=17), lineno=457, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=458, col_offset=8), 'assertEqual', Load(), lineno=458, col_offset=8), [Name('expect', Load(), lineno=458, col_offset=25), Name('result', Load(), lineno=458, col_offset=33), BinOp(Str('using unquote(): %r != %r', lineno=458, col_offset=41), Mod(), Tuple([Name('expect', Load(), lineno=459, col_offset=28), Name('result', Load(), lineno=459, col_offset=36)], Load(), lineno=459, col_offset=28), lineno=458, col_offset=41)], [], None, None, lineno=458, col_offset=8), lineno=458, col_offset=8)], [], lineno=443, col_offset=4), FunctionDef('test_unquoting_mixed_case', arguments([Name('self', Param(), lineno=461, col_offset=34)], None, None, []), [Assign([Name('given', Store(), lineno=463, col_offset=8)], Str('%Ab%eA', lineno=463, col_offset=16), lineno=463, col_offset=8), Assign([Name('expect', Store(), lineno=464, col_offset=8)], Str('\xab\xea', lineno=464, col_offset=17), lineno=464, col_offset=8), Assign([Name('result', Store(), lineno=465, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=465, col_offset=17), 'unquote', Load(), lineno=465, col_offset=17), [Name('given', Load(), lineno=465, col_offset=32)], [], None, None, lineno=465, col_offset=17), lineno=465, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=466, col_offset=8), 'assertEqual', Load(), lineno=466, col_offset=8), [Name('expect', Load(), lineno=466, col_offset=25), Name('result', Load(), lineno=466, col_offset=33), BinOp(Str('using unquote(): %r != %r', lineno=466, col_offset=41), Mod(), Tuple([Name('expect', Load(), lineno=467, col_offset=28), Name('result', Load(), lineno=467, col_offset=36)], Load(), lineno=467, col_offset=28), lineno=466, col_offset=41)], [], None, None, lineno=466, col_offset=8), lineno=466, col_offset=8)], [], lineno=461, col_offset=4), FunctionDef('test_unquoting_parts', arguments([Name('self', Param(), lineno=469, col_offset=29)], None, None, []), [Assign([Name('given', Store(), lineno=472, col_offset=8)], BinOp(Str('ab%sd', lineno=472, col_offset=16), Mod(), Call(Name('hexescape', Load(), lineno=472, col_offset=26), [Str('c', lineno=472, col_offset=36)], [], None, None, lineno=472, col_offset=26), lineno=472, col_offset=16), lineno=472, col_offset=8), Assign([Name('expect', Store(), lineno=473, col_offset=8)], Str('abcd', lineno=473, col_offset=17), lineno=473, col_offset=8), Assign([Name('result', Store(), lineno=474, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=474, col_offset=17), 'unquote', Load(), lineno=474, col_offset=17), [Name('given', Load(), lineno=474, col_offset=32)], [], None, None, lineno=474, col_offset=17), lineno=474, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=475, col_offset=8), 'assertEqual', Load(), lineno=475, col_offset=8), [Name('expect', Load(), lineno=475, col_offset=25), Name('result', Load(), lineno=475, col_offset=33), BinOp(Str('using quote(): %s != %s', lineno=476, col_offset=25), Mod(), Tuple([Name('expect', Load(), lineno=476, col_offset=54), Name('result', Load(), lineno=476, col_offset=62)], Load(), lineno=476, col_offset=54), lineno=476, col_offset=25)], [], None, None, lineno=475, col_offset=8), lineno=475, col_offset=8), Assign([Name('result', Store(), lineno=477, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=477, col_offset=17), 'unquote_plus', Load(), lineno=477, col_offset=17), [Name('given', Load(), lineno=477, col_offset=37)], [], None, None, lineno=477, col_offset=17), lineno=477, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=478, col_offset=8), 'assertEqual', Load(), lineno=478, col_offset=8), [Name('expect', Load(), lineno=478, col_offset=25), Name('result', Load(), lineno=478, col_offset=33), BinOp(Str('using unquote_plus(): %s != %s', lineno=479, col_offset=25), Mod(), Tuple([Name('expect', Load(), lineno=479, col_offset=61), Name('result', Load(), lineno=479, col_offset=69)], Load(), lineno=479, col_offset=61), lineno=479, col_offset=25)], [], None, None, lineno=478, col_offset=8), lineno=478, col_offset=8)], [], lineno=469, col_offset=4), FunctionDef('test_unquoting_plus', arguments([Name('self', Param(), lineno=481, col_offset=28)], None, None, []), [Assign([Name('given', Store(), lineno=483, col_offset=8)], Str('are+there+spaces...', lineno=483, col_offset=16), lineno=483, col_offset=8), Assign([Name('expect', Store(), lineno=484, col_offset=8)], Name('given', Load(), lineno=484, col_offset=17), lineno=484, col_offset=8), Assign([Name('result', Store(), lineno=485, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=485, col_offset=17), 'unquote', Load(), lineno=485, col_offset=17), [Name('given', Load(), lineno=485, col_offset=32)], [], None, None, lineno=485, col_offset=17), lineno=485, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=486, col_offset=8), 'assertEqual', Load(), lineno=486, col_offset=8), [Name('expect', Load(), lineno=486, col_offset=25), Name('result', Load(), lineno=486, col_offset=33), BinOp(Str('using unquote(): %s != %s', lineno=487, col_offset=25), Mod(), Tuple([Name('expect', Load(), lineno=487, col_offset=56), Name('result', Load(), lineno=487, col_offset=64)], Load(), lineno=487, col_offset=56), lineno=487, col_offset=25)], [], None, None, lineno=486, col_offset=8), lineno=486, col_offset=8), Assign([Name('expect', Store(), lineno=488, col_offset=8)], Call(Attribute(Name('given', Load(), lineno=488, col_offset=17), 'replace', Load(), lineno=488, col_offset=17), [Str('+', lineno=488, col_offset=31), Str(' ', lineno=488, col_offset=36)], [], None, None, lineno=488, col_offset=17), lineno=488, col_offset=8), Assign([Name('result', Store(), lineno=489, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=489, col_offset=17), 'unquote_plus', Load(), lineno=489, col_offset=17), [Name('given', Load(), lineno=489, col_offset=37)], [], None, None, lineno=489, col_offset=17), lineno=489, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=490, col_offset=8), 'assertEqual', Load(), lineno=490, col_offset=8), [Name('expect', Load(), lineno=490, col_offset=25), Name('result', Load(), lineno=490, col_offset=33), BinOp(Str('using unquote_plus(): %s != %s', lineno=491, col_offset=25), Mod(), Tuple([Name('expect', Load(), lineno=491, col_offset=61), Name('result', Load(), lineno=491, col_offset=69)], Load(), lineno=491, col_offset=61), lineno=491, col_offset=25)], [], None, None, lineno=490, col_offset=8), lineno=490, col_offset=8)], [], lineno=481, col_offset=4), FunctionDef('test_unquote_with_unicode', arguments([Name('self', Param(), lineno=493, col_offset=34)], None, None, []), [Assign([Name('r', Store(), lineno=494, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=494, col_offset=12), 'unquote', Load(), lineno=494, col_offset=12), [Str(u'br%C3%BCckner_sapporo_20050930.doc', lineno=494, col_offset=27)], [], None, None, lineno=494, col_offset=12), lineno=494, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=495, col_offset=8), 'assertEqual', Load(), lineno=495, col_offset=8), [Name('r', Load(), lineno=495, col_offset=25), Str(u'br\xc3\xbcckner_sapporo_20050930.doc', lineno=495, col_offset=28)], [], None, None, lineno=495, col_offset=8), lineno=495, col_offset=8)], [], lineno=493, col_offset=4)], [], lineno=411, col_offset=0), ClassDef('urlencode_Tests', [Attribute(Name('unittest', Load(), lineno=497, col_offset=22), 'TestCase', Load(), lineno=497, col_offset=22)], [Expr(Str('Tests for urlencode()', lineno=498, col_offset=4), lineno=498, col_offset=4), FunctionDef('help_inputtype', arguments([Name('self', Param(), lineno=500, col_offset=23), Name('given', Param(), lineno=500, col_offset=29), Name('test_type', Param(), lineno=500, col_offset=36)], None, None, []), [Expr(Str("Helper method for testing different input types.\n\n        'given' must lead to only the pairs:\n            * 1st, 1\n            * 2nd, 2\n            * 3rd, 3\n\n        Test cannot assume anything about order.  Docs make no guarantee and\n        have possible dictionary input.\n\n        ", lineno=511, col_offset=-1), lineno=511, col_offset=-1), Assign([Name('expect_somewhere', Store(), lineno=512, col_offset=8)], List([Str('1st=1', lineno=512, col_offset=28), Str('2nd=2', lineno=512, col_offset=37), Str('3rd=3', lineno=512, col_offset=46)], Load(), lineno=512, col_offset=27), lineno=512, col_offset=8), Assign([Name('result', Store(), lineno=513, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=513, col_offset=17), 'urlencode', Load(), lineno=513, col_offset=17), [Name('given', Load(), lineno=513, col_offset=34)], [], None, None, lineno=513, col_offset=17), lineno=513, col_offset=8), For(Name('expected', Store(), lineno=514, col_offset=12), Name('expect_somewhere', Load(), lineno=514, col_offset=24), [Expr(Call(Attribute(Name('self', Load(), lineno=515, col_offset=12), 'assertIn', Load(), lineno=515, col_offset=12), [Name('expected', Load(), lineno=515, col_offset=26), Name('result', Load(), lineno=515, col_offset=36), BinOp(Str('testing %s: %s not found in %s', lineno=516, col_offset=25), Mod(), Tuple([Name('test_type', Load(), lineno=517, col_offset=26), Name('expected', Load(), lineno=517, col_offset=37), Name('result', Load(), lineno=517, col_offset=47)], Load(), lineno=517, col_offset=26), lineno=516, col_offset=25)], [], None, None, lineno=515, col_offset=12), lineno=515, col_offset=12)], [], lineno=514, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=518, col_offset=8), 'assertEqual', Load(), lineno=518, col_offset=8), [Call(Attribute(Name('result', Load(), lineno=518, col_offset=25), 'count', Load(), lineno=518, col_offset=25), [Str('&', lineno=518, col_offset=38)], [], None, None, lineno=518, col_offset=25), Num(2, lineno=518, col_offset=44), BinOp(Str("testing %s: expected 2 '&'s; got %s", lineno=519, col_offset=25), Mod(), Tuple([Name('test_type', Load(), lineno=520, col_offset=26), Call(Attribute(Name('result', Load(), lineno=520, col_offset=37), 'count', Load(), lineno=520, col_offset=37), [Str('&', lineno=520, col_offset=50)], [], None, None, lineno=520, col_offset=37)], Load(), lineno=520, col_offset=26), lineno=519, col_offset=25)], [], None, None, lineno=518, col_offset=8), lineno=518, col_offset=8), Assign([Name('amp_location', Store(), lineno=521, col_offset=8)], Call(Attribute(Name('result', Load(), lineno=521, col_offset=23), 'index', Load(), lineno=521, col_offset=23), [Str('&', lineno=521, col_offset=36)], [], None, None, lineno=521, col_offset=23), lineno=521, col_offset=8), Assign([Name('on_amp_left', Store(), lineno=522, col_offset=8)], Subscript(Name('result', Load(), lineno=522, col_offset=22), Index(BinOp(Name('amp_location', Load(), lineno=522, col_offset=29), Sub(), Num(1, lineno=522, col_offset=44), lineno=522, col_offset=29)), Load(), lineno=522, col_offset=22), lineno=522, col_offset=8), Assign([Name('on_amp_right', Store(), lineno=523, col_offset=8)], Subscript(Name('result', Load(), lineno=523, col_offset=23), Index(BinOp(Name('amp_location', Load(), lineno=523, col_offset=30), Add(), Num(1, lineno=523, col_offset=45), lineno=523, col_offset=30)), Load(), lineno=523, col_offset=23), lineno=523, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=524, col_offset=8), 'assertTrue', Load(), lineno=524, col_offset=8), [BoolOp(And(), [Call(Attribute(Name('on_amp_left', Load(), lineno=524, col_offset=24), 'isdigit', Load(), lineno=524, col_offset=24), [], [], None, None, lineno=524, col_offset=24), Call(Attribute(Name('on_amp_right', Load(), lineno=524, col_offset=50), 'isdigit', Load(), lineno=524, col_offset=50), [], [], None, None, lineno=524, col_offset=50)], lineno=524, col_offset=24), BinOp(Str("testing %s: '&' not located in proper place in %s", lineno=525, col_offset=21), Mod(), Tuple([Name('test_type', Load(), lineno=526, col_offset=22), Name('result', Load(), lineno=526, col_offset=33)], Load(), lineno=526, col_offset=22), lineno=525, col_offset=21)], [], None, None, lineno=524, col_offset=8), lineno=524, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=527, col_offset=8), 'assertEqual', Load(), lineno=527, col_offset=8), [Call(Name('len', Load(), lineno=527, col_offset=25), [Name('result', Load(), lineno=527, col_offset=29)], [], None, None, lineno=527, col_offset=25), BinOp(BinOp(Num(5, lineno=527, col_offset=39), Mult(), Num(3, lineno=527, col_offset=43), lineno=527, col_offset=39), Add(), Num(2, lineno=527, col_offset=48), lineno=527, col_offset=38), BinOp(Str('testing %s: unexpected number of characters: %s != %s', lineno=528, col_offset=25), Mod(), Tuple([Name('test_type', Load(), lineno=530, col_offset=26), Call(Name('len', Load(), lineno=530, col_offset=37), [Name('result', Load(), lineno=530, col_offset=41)], [], None, None, lineno=530, col_offset=37), BinOp(BinOp(Num(5, lineno=530, col_offset=51), Mult(), Num(3, lineno=530, col_offset=55), lineno=530, col_offset=51), Add(), Num(2, lineno=530, col_offset=60), lineno=530, col_offset=50)], Load(), lineno=530, col_offset=26), lineno=528, col_offset=25)], [], None, None, lineno=527, col_offset=8), lineno=527, col_offset=8)], [], lineno=500, col_offset=4), FunctionDef('test_using_mapping', arguments([Name('self', Param(), lineno=532, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=534, col_offset=8), 'help_inputtype', Load(), lineno=534, col_offset=8), [Dict([Str('1st', lineno=534, col_offset=29), Str('2nd', lineno=534, col_offset=40), Str('3rd', lineno=534, col_offset=51)], [Str('1', lineno=534, col_offset=35), Str('2', lineno=534, col_offset=46), Str('3', lineno=534, col_offset=57)], lineno=534, col_offset=28), Str('using dict as input type', lineno=535, col_offset=28)], [], None, None, lineno=534, col_offset=8), lineno=534, col_offset=8)], [], lineno=532, col_offset=4), FunctionDef('test_using_sequence', arguments([Name('self', Param(), lineno=537, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=539, col_offset=8), 'help_inputtype', Load(), lineno=539, col_offset=8), [List([Tuple([Str('1st', lineno=539, col_offset=30), Str('1', lineno=539, col_offset=37)], Load(), lineno=539, col_offset=30), Tuple([Str('2nd', lineno=539, col_offset=44), Str('2', lineno=539, col_offset=51)], Load(), lineno=539, col_offset=44), Tuple([Str('3rd', lineno=539, col_offset=58), Str('3', lineno=539, col_offset=65)], Load(), lineno=539, col_offset=58)], Load(), lineno=539, col_offset=28), Str('using sequence of two-item tuples as input', lineno=540, col_offset=28)], [], None, None, lineno=539, col_offset=8), lineno=539, col_offset=8)], [], lineno=537, col_offset=4), FunctionDef('test_quoting', arguments([Name('self', Param(), lineno=542, col_offset=21)], None, None, []), [Assign([Name('given', Store(), lineno=544, col_offset=8)], Dict([Str('&', lineno=544, col_offset=17)], [Str('=', lineno=544, col_offset=21)], lineno=544, col_offset=16), lineno=544, col_offset=8), Assign([Name('expect', Store(), lineno=545, col_offset=8)], BinOp(Str('%s=%s', lineno=545, col_offset=17), Mod(), Tuple([Call(Name('hexescape', Load(), lineno=545, col_offset=28), [Str('&', lineno=545, col_offset=38)], [], None, None, lineno=545, col_offset=28), Call(Name('hexescape', Load(), lineno=545, col_offset=44), [Str('=', lineno=545, col_offset=54)], [], None, None, lineno=545, col_offset=44)], Load(), lineno=545, col_offset=28), lineno=545, col_offset=17), lineno=545, col_offset=8), Assign([Name('result', Store(), lineno=546, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=546, col_offset=17), 'urlencode', Load(), lineno=546, col_offset=17), [Name('given', Load(), lineno=546, col_offset=34)], [], None, None, lineno=546, col_offset=17), lineno=546, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=547, col_offset=8), 'assertEqual', Load(), lineno=547, col_offset=8), [Name('expect', Load(), lineno=547, col_offset=25), Name('result', Load(), lineno=547, col_offset=33)], [], None, None, lineno=547, col_offset=8), lineno=547, col_offset=8), Assign([Name('given', Store(), lineno=548, col_offset=8)], Dict([Str('key name', lineno=548, col_offset=17)], [Str('A bunch of pluses', lineno=548, col_offset=28)], lineno=548, col_offset=16), lineno=548, col_offset=8), Assign([Name('expect', Store(), lineno=549, col_offset=8)], Str('key+name=A+bunch+of+pluses', lineno=549, col_offset=17), lineno=549, col_offset=8), Assign([Name('result', Store(), lineno=550, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=550, col_offset=17), 'urlencode', Load(), lineno=550, col_offset=17), [Name('given', Load(), lineno=550, col_offset=34)], [], None, None, lineno=550, col_offset=17), lineno=550, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=551, col_offset=8), 'assertEqual', Load(), lineno=551, col_offset=8), [Name('expect', Load(), lineno=551, col_offset=25), Name('result', Load(), lineno=551, col_offset=33)], [], None, None, lineno=551, col_offset=8), lineno=551, col_offset=8)], [], lineno=542, col_offset=4), FunctionDef('test_doseq', arguments([Name('self', Param(), lineno=553, col_offset=19)], None, None, []), [Assign([Name('given', Store(), lineno=555, col_offset=8)], Dict([Str('sequence', lineno=555, col_offset=17)], [List([Str('1', lineno=555, col_offset=29), Str('2', lineno=555, col_offset=34), Str('3', lineno=555, col_offset=39)], Load(), lineno=555, col_offset=28)], lineno=555, col_offset=16), lineno=555, col_offset=8), Assign([Name('expect', Store(), lineno=556, col_offset=8)], BinOp(Str('sequence=%s', lineno=556, col_offset=17), Mod(), Call(Attribute(Name('urllib', Load(), lineno=556, col_offset=33), 'quote_plus', Load(), lineno=556, col_offset=33), [Call(Name('str', Load(), lineno=556, col_offset=51), [List([Str('1', lineno=556, col_offset=56), Str('2', lineno=556, col_offset=61), Str('3', lineno=556, col_offset=66)], Load(), lineno=556, col_offset=55)], [], None, None, lineno=556, col_offset=51)], [], None, None, lineno=556, col_offset=33), lineno=556, col_offset=17), lineno=556, col_offset=8), Assign([Name('result', Store(), lineno=557, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=557, col_offset=17), 'urlencode', Load(), lineno=557, col_offset=17), [Name('given', Load(), lineno=557, col_offset=34)], [], None, None, lineno=557, col_offset=17), lineno=557, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=558, col_offset=8), 'assertEqual', Load(), lineno=558, col_offset=8), [Name('expect', Load(), lineno=558, col_offset=25), Name('result', Load(), lineno=558, col_offset=33)], [], None, None, lineno=558, col_offset=8), lineno=558, col_offset=8), Assign([Name('result', Store(), lineno=559, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=559, col_offset=17), 'urlencode', Load(), lineno=559, col_offset=17), [Name('given', Load(), lineno=559, col_offset=34), Name('True', Load(), lineno=559, col_offset=41)], [], None, None, lineno=559, col_offset=17), lineno=559, col_offset=8), For(Name('value', Store(), lineno=560, col_offset=12), Subscript(Name('given', Load(), lineno=560, col_offset=21), Index(Str('sequence', lineno=560, col_offset=27)), Load(), lineno=560, col_offset=21), [Assign([Name('expect', Store(), lineno=561, col_offset=12)], BinOp(Str('sequence=%s', lineno=561, col_offset=21), Mod(), Name('value', Load(), lineno=561, col_offset=37), lineno=561, col_offset=21), lineno=561, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=562, col_offset=12), 'assertIn', Load(), lineno=562, col_offset=12), [Name('expect', Load(), lineno=562, col_offset=26), Name('result', Load(), lineno=562, col_offset=34)], [], None, None, lineno=562, col_offset=12), lineno=562, col_offset=12)], [], lineno=560, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=563, col_offset=8), 'assertEqual', Load(), lineno=563, col_offset=8), [Call(Attribute(Name('result', Load(), lineno=563, col_offset=25), 'count', Load(), lineno=563, col_offset=25), [Str('&', lineno=563, col_offset=38)], [], None, None, lineno=563, col_offset=25), Num(2, lineno=563, col_offset=44), BinOp(Str("Expected 2 '&'s, got %s", lineno=564, col_offset=25), Mod(), Call(Attribute(Name('result', Load(), lineno=564, col_offset=53), 'count', Load(), lineno=564, col_offset=53), [Str('&', lineno=564, col_offset=66)], [], None, None, lineno=564, col_offset=53), lineno=564, col_offset=25)], [], None, None, lineno=563, col_offset=8), lineno=563, col_offset=8)], [], lineno=553, col_offset=4)], [], lineno=497, col_offset=0), ClassDef('Pathname_Tests', [Attribute(Name('unittest', Load(), lineno=566, col_offset=21), 'TestCase', Load(), lineno=566, col_offset=21)], [Expr(Str('Test pathname2url() and url2pathname()', lineno=567, col_offset=4), lineno=567, col_offset=4), FunctionDef('test_basic', arguments([Name('self', Param(), lineno=569, col_offset=19)], None, None, []), [Assign([Name('expected_path', Store(), lineno=571, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=571, col_offset=24), 'path', Load(), lineno=571, col_offset=24), 'join', Load(), lineno=571, col_offset=24), [Str('parts', lineno=571, col_offset=37), Str('of', lineno=571, col_offset=46), Str('a', lineno=571, col_offset=52), Str('path', lineno=571, col_offset=57)], [], None, None, lineno=571, col_offset=24), lineno=571, col_offset=8), Assign([Name('expected_url', Store(), lineno=572, col_offset=8)], Str('parts/of/a/path', lineno=572, col_offset=23), lineno=572, col_offset=8), Assign([Name('result', Store(), lineno=573, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=573, col_offset=17), 'pathname2url', Load(), lineno=573, col_offset=17), [Name('expected_path', Load(), lineno=573, col_offset=37)], [], None, None, lineno=573, col_offset=17), lineno=573, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=574, col_offset=8), 'assertEqual', Load(), lineno=574, col_offset=8), [Name('expected_url', Load(), lineno=574, col_offset=25), Name('result', Load(), lineno=574, col_offset=39), BinOp(Str('pathname2url() failed; %s != %s', lineno=575, col_offset=25), Mod(), Tuple([Name('result', Load(), lineno=576, col_offset=26), Name('expected_url', Load(), lineno=576, col_offset=34)], Load(), lineno=576, col_offset=26), lineno=575, col_offset=25)], [], None, None, lineno=574, col_offset=8), lineno=574, col_offset=8), Assign([Name('result', Store(), lineno=577, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=577, col_offset=17), 'url2pathname', Load(), lineno=577, col_offset=17), [Name('expected_url', Load(), lineno=577, col_offset=37)], [], None, None, lineno=577, col_offset=17), lineno=577, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=578, col_offset=8), 'assertEqual', Load(), lineno=578, col_offset=8), [Name('expected_path', Load(), lineno=578, col_offset=25), Name('result', Load(), lineno=578, col_offset=40), BinOp(Str('url2pathame() failed; %s != %s', lineno=579, col_offset=25), Mod(), Tuple([Name('result', Load(), lineno=580, col_offset=26), Name('expected_path', Load(), lineno=580, col_offset=34)], Load(), lineno=580, col_offset=26), lineno=579, col_offset=25)], [], None, None, lineno=578, col_offset=8), lineno=578, col_offset=8)], [], lineno=569, col_offset=4), FunctionDef('test_quoting', arguments([Name('self', Param(), lineno=582, col_offset=21)], None, None, []), [Assign([Name('given', Store(), lineno=585, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=585, col_offset=16), 'path', Load(), lineno=585, col_offset=16), 'join', Load(), lineno=585, col_offset=16), [Str('needs', lineno=585, col_offset=29), Str('quot=ing', lineno=585, col_offset=38), Str('here', lineno=585, col_offset=50)], [], None, None, lineno=585, col_offset=16), lineno=585, col_offset=8), Assign([Name('expect', Store(), lineno=586, col_offset=8)], BinOp(Str('needs/%s/here', lineno=586, col_offset=17), Mod(), Call(Attribute(Name('urllib', Load(), lineno=586, col_offset=35), 'quote', Load(), lineno=586, col_offset=35), [Str('quot=ing', lineno=586, col_offset=48)], [], None, None, lineno=586, col_offset=35), lineno=586, col_offset=17), lineno=586, col_offset=8), Assign([Name('result', Store(), lineno=587, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=587, col_offset=17), 'pathname2url', Load(), lineno=587, col_offset=17), [Name('given', Load(), lineno=587, col_offset=37)], [], None, None, lineno=587, col_offset=17), lineno=587, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=588, col_offset=8), 'assertEqual', Load(), lineno=588, col_offset=8), [Name('expect', Load(), lineno=588, col_offset=25), Name('result', Load(), lineno=588, col_offset=33), BinOp(Str('pathname2url() failed; %s != %s', lineno=589, col_offset=25), Mod(), Tuple([Name('expect', Load(), lineno=590, col_offset=26), Name('result', Load(), lineno=590, col_offset=34)], Load(), lineno=590, col_offset=26), lineno=589, col_offset=25)], [], None, None, lineno=588, col_offset=8), lineno=588, col_offset=8), Assign([Name('expect', Store(), lineno=591, col_offset=8)], Name('given', Load(), lineno=591, col_offset=17), lineno=591, col_offset=8), Assign([Name('result', Store(), lineno=592, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=592, col_offset=17), 'url2pathname', Load(), lineno=592, col_offset=17), [Name('result', Load(), lineno=592, col_offset=37)], [], None, None, lineno=592, col_offset=17), lineno=592, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=593, col_offset=8), 'assertEqual', Load(), lineno=593, col_offset=8), [Name('expect', Load(), lineno=593, col_offset=25), Name('result', Load(), lineno=593, col_offset=33), BinOp(Str('url2pathname() failed; %s != %s', lineno=594, col_offset=25), Mod(), Tuple([Name('expect', Load(), lineno=595, col_offset=26), Name('result', Load(), lineno=595, col_offset=34)], Load(), lineno=595, col_offset=26), lineno=594, col_offset=25)], [], None, None, lineno=593, col_offset=8), lineno=593, col_offset=8), Assign([Name('given', Store(), lineno=596, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=596, col_offset=16), 'path', Load(), lineno=596, col_offset=16), 'join', Load(), lineno=596, col_offset=16), [Str('make sure', lineno=596, col_offset=29), Str('using_quote', lineno=596, col_offset=42)], [], None, None, lineno=596, col_offset=16), lineno=596, col_offset=8), Assign([Name('expect', Store(), lineno=597, col_offset=8)], BinOp(Str('%s/using_quote', lineno=597, col_offset=17), Mod(), Call(Attribute(Name('urllib', Load(), lineno=597, col_offset=36), 'quote', Load(), lineno=597, col_offset=36), [Str('make sure', lineno=597, col_offset=49)], [], None, None, lineno=597, col_offset=36), lineno=597, col_offset=17), lineno=597, col_offset=8), Assign([Name('result', Store(), lineno=598, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=598, col_offset=17), 'pathname2url', Load(), lineno=598, col_offset=17), [Name('given', Load(), lineno=598, col_offset=37)], [], None, None, lineno=598, col_offset=17), lineno=598, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=599, col_offset=8), 'assertEqual', Load(), lineno=599, col_offset=8), [Name('expect', Load(), lineno=599, col_offset=25), Name('result', Load(), lineno=599, col_offset=33), BinOp(Str('pathname2url() failed; %s != %s', lineno=600, col_offset=25), Mod(), Tuple([Name('expect', Load(), lineno=601, col_offset=26), Name('result', Load(), lineno=601, col_offset=34)], Load(), lineno=601, col_offset=26), lineno=600, col_offset=25)], [], None, None, lineno=599, col_offset=8), lineno=599, col_offset=8), Assign([Name('given', Store(), lineno=602, col_offset=8)], Str('make+sure/using_unquote', lineno=602, col_offset=16), lineno=602, col_offset=8), Assign([Name('expect', Store(), lineno=603, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=603, col_offset=17), 'path', Load(), lineno=603, col_offset=17), 'join', Load(), lineno=603, col_offset=17), [Str('make+sure', lineno=603, col_offset=30), Str('using_unquote', lineno=603, col_offset=43)], [], None, None, lineno=603, col_offset=17), lineno=603, col_offset=8), Assign([Name('result', Store(), lineno=604, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=604, col_offset=17), 'url2pathname', Load(), lineno=604, col_offset=17), [Name('given', Load(), lineno=604, col_offset=37)], [], None, None, lineno=604, col_offset=17), lineno=604, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=605, col_offset=8), 'assertEqual', Load(), lineno=605, col_offset=8), [Name('expect', Load(), lineno=605, col_offset=25), Name('result', Load(), lineno=605, col_offset=33), BinOp(Str('url2pathname() failed; %s != %s', lineno=606, col_offset=25), Mod(), Tuple([Name('expect', Load(), lineno=607, col_offset=26), Name('result', Load(), lineno=607, col_offset=34)], Load(), lineno=607, col_offset=26), lineno=606, col_offset=25)], [], None, None, lineno=605, col_offset=8), lineno=605, col_offset=8)], [], lineno=582, col_offset=4)], [], lineno=566, col_offset=0), ClassDef('Utility_Tests', [Attribute(Name('unittest', Load(), lineno=609, col_offset=20), 'TestCase', Load(), lineno=609, col_offset=20)], [Expr(Str('Testcase to test the various utility functions in the urllib.', lineno=610, col_offset=4), lineno=610, col_offset=4), FunctionDef('test_splitpasswd', arguments([Name('self', Param(), lineno=612, col_offset=25)], None, None, []), [Expr(Str('Some of the password examples are not sensible, but it is added to\n        confirming to RFC2617 and addressing issue4675.\n        ', lineno=615, col_offset=-1), lineno=615, col_offset=-1), Expr(Call(Attribute(Name('self', Load(), lineno=616, col_offset=8), 'assertEqual', Load(), lineno=616, col_offset=8), [Tuple([Str('user', lineno=616, col_offset=26), Str('ab', lineno=616, col_offset=34)], Load(), lineno=616, col_offset=26), Call(Attribute(Name('urllib', Load(), lineno=616, col_offset=40), 'splitpasswd', Load(), lineno=616, col_offset=40), [Str('user:ab', lineno=616, col_offset=59)], [], None, None, lineno=616, col_offset=40)], [], None, None, lineno=616, col_offset=8), lineno=616, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=617, col_offset=8), 'assertEqual', Load(), lineno=617, col_offset=8), [Tuple([Str('user', lineno=617, col_offset=26), Str('a\nb', lineno=617, col_offset=34)], Load(), lineno=617, col_offset=26), Call(Attribute(Name('urllib', Load(), lineno=617, col_offset=42), 'splitpasswd', Load(), lineno=617, col_offset=42), [Str('user:a\nb', lineno=617, col_offset=61)], [], None, None, lineno=617, col_offset=42)], [], None, None, lineno=617, col_offset=8), lineno=617, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=618, col_offset=8), 'assertEqual', Load(), lineno=618, col_offset=8), [Tuple([Str('user', lineno=618, col_offset=26), Str('a\tb', lineno=618, col_offset=34)], Load(), lineno=618, col_offset=26), Call(Attribute(Name('urllib', Load(), lineno=618, col_offset=42), 'splitpasswd', Load(), lineno=618, col_offset=42), [Str('user:a\tb', lineno=618, col_offset=61)], [], None, None, lineno=618, col_offset=42)], [], None, None, lineno=618, col_offset=8), lineno=618, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=619, col_offset=8), 'assertEqual', Load(), lineno=619, col_offset=8), [Tuple([Str('user', lineno=619, col_offset=26), Str('a\rb', lineno=619, col_offset=34)], Load(), lineno=619, col_offset=26), Call(Attribute(Name('urllib', Load(), lineno=619, col_offset=42), 'splitpasswd', Load(), lineno=619, col_offset=42), [Str('user:a\rb', lineno=619, col_offset=61)], [], None, None, lineno=619, col_offset=42)], [], None, None, lineno=619, col_offset=8), lineno=619, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=620, col_offset=8), 'assertEqual', Load(), lineno=620, col_offset=8), [Tuple([Str('user', lineno=620, col_offset=26), Str('a\x0cb', lineno=620, col_offset=34)], Load(), lineno=620, col_offset=26), Call(Attribute(Name('urllib', Load(), lineno=620, col_offset=42), 'splitpasswd', Load(), lineno=620, col_offset=42), [Str('user:a\x0cb', lineno=620, col_offset=61)], [], None, None, lineno=620, col_offset=42)], [], None, None, lineno=620, col_offset=8), lineno=620, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=621, col_offset=8), 'assertEqual', Load(), lineno=621, col_offset=8), [Tuple([Str('user', lineno=621, col_offset=26), Str('a\x0bb', lineno=621, col_offset=34)], Load(), lineno=621, col_offset=26), Call(Attribute(Name('urllib', Load(), lineno=621, col_offset=42), 'splitpasswd', Load(), lineno=621, col_offset=42), [Str('user:a\x0bb', lineno=621, col_offset=61)], [], None, None, lineno=621, col_offset=42)], [], None, None, lineno=621, col_offset=8), lineno=621, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=622, col_offset=8), 'assertEqual', Load(), lineno=622, col_offset=8), [Tuple([Str('user', lineno=622, col_offset=26), Str('a:b', lineno=622, col_offset=34)], Load(), lineno=622, col_offset=26), Call(Attribute(Name('urllib', Load(), lineno=622, col_offset=41), 'splitpasswd', Load(), lineno=622, col_offset=41), [Str('user:a:b', lineno=622, col_offset=60)], [], None, None, lineno=622, col_offset=41)], [], None, None, lineno=622, col_offset=8), lineno=622, col_offset=8)], [], lineno=612, col_offset=4)], [], lineno=609, col_offset=0), ClassDef('URLopener_Tests', [Attribute(Name('unittest', Load(), lineno=625, col_offset=22), 'TestCase', Load(), lineno=625, col_offset=22)], [Expr(Str('Testcase to test the open method of URLopener class.', lineno=626, col_offset=4), lineno=626, col_offset=4), FunctionDef('test_quoted_open', arguments([Name('self', Param(), lineno=628, col_offset=25)], None, None, []), [ClassDef('DummyURLopener', [Attribute(Name('urllib', Load(), lineno=629, col_offset=29), 'URLopener', Load(), lineno=629, col_offset=29)], [FunctionDef('open_spam', arguments([Name('self', Param(), lineno=630, col_offset=26), Name('url', Param(), lineno=630, col_offset=32)], None, None, []), [Return(Name('url', Load(), lineno=631, col_offset=23), lineno=631, col_offset=16)], [], lineno=630, col_offset=12)], [], lineno=629, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=633, col_offset=8), 'assertEqual', Load(), lineno=633, col_offset=8), [Call(Attribute(Call(Name('DummyURLopener', Load(), lineno=633, col_offset=25), [], [], None, None, lineno=633, col_offset=25), 'open', Load(), lineno=633, col_offset=25), [Str('spam://example/ /', lineno=634, col_offset=12)], [], None, None, lineno=633, col_offset=25), Str('//example/%20/', lineno=634, col_offset=33)], [], None, None, lineno=633, col_offset=8), lineno=633, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=637, col_offset=8), 'assertEqual', Load(), lineno=637, col_offset=8), [Call(Attribute(Call(Name('DummyURLopener', Load(), lineno=637, col_offset=25), [], [], None, None, lineno=637, col_offset=25), 'open', Load(), lineno=637, col_offset=25), [Str("spam://c:|windows%/:=&?~#+!$,;'@()*[]|/path/", lineno=638, col_offset=12)], [], None, None, lineno=637, col_offset=25), Str("//c:|windows%/:=&?~#+!$,;'@()*[]|/path/", lineno=639, col_offset=12)], [], None, None, lineno=637, col_offset=8), lineno=637, col_offset=8)], [], lineno=628, col_offset=4)], [], lineno=625, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Import([alias('warnings', None)], lineno=723, col_offset=4), With(Call(Attribute(Name('warnings', Load(), lineno=724, col_offset=9), 'catch_warnings', Load(), lineno=724, col_offset=9), [], [], None, None, lineno=724, col_offset=9), None, [Expr(Call(Attribute(Name('warnings', Load(), lineno=725, col_offset=8), 'filterwarnings', Load(), lineno=725, col_offset=8), [Str('ignore', lineno=725, col_offset=32), Str('.*urllib\\.urlopen.*Python 3.0', lineno=725, col_offset=42), Name('DeprecationWarning', Load(), lineno=726, col_offset=32)], [], None, None, lineno=725, col_offset=8), lineno=725, col_offset=8), Expr(Call(Attribute(Name('test_support', Load(), lineno=727, col_offset=8), 'run_unittest', Load(), lineno=727, col_offset=8), [Name('urlopen_FileTests', Load(), lineno=728, col_offset=12), Name('urlopen_HttpTests', Load(), lineno=729, col_offset=12), Name('urlretrieve_FileTests', Load(), lineno=730, col_offset=12), Name('ProxyTests', Load(), lineno=731, col_offset=12), Name('QuotingTests', Load(), lineno=732, col_offset=12), Name('UnquotingTests', Load(), lineno=733, col_offset=12), Name('urlencode_Tests', Load(), lineno=734, col_offset=12), Name('Pathname_Tests', Load(), lineno=735, col_offset=12), Name('Utility_Tests', Load(), lineno=736, col_offset=12), Name('URLopener_Tests', Load(), lineno=737, col_offset=12)], [], None, None, lineno=727, col_offset=8), lineno=727, col_offset=8)], lineno=724, col_offset=9)], [], lineno=722, col_offset=0), If(Compare(Name('__name__', Load(), lineno=743, col_offset=3), [Eq()], [Str('__main__', lineno=743, col_offset=15)], lineno=743, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=744, col_offset=4), [], [], None, None, lineno=744, col_offset=4), lineno=744, col_offset=4)], [], lineno=743, col_offset=0)])
