Module([ImportFrom('test.test_support', [alias('run_unittest', None)], 0, lineno=1, col_offset=0), ImportFrom('_locale', [alias('setlocale', None), alias('LC_NUMERIC', None), alias('localeconv', None), alias('Error', None)], 0, lineno=2, col_offset=0), TryExcept([ImportFrom('_locale', [alias('RADIXCHAR', None), alias('THOUSEP', None), alias('nl_langinfo', None)], 0, lineno=4, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=5, col_offset=7), None, [Assign([Name('nl_langinfo', Store(), lineno=6, col_offset=4)], Name('None', Load(), lineno=6, col_offset=18), lineno=6, col_offset=4)], lineno=5, col_offset=0)], [], lineno=3, col_offset=0), Import([alias('unittest', None)], lineno=8, col_offset=0), Import([alias('sys', None)], lineno=9, col_offset=0), ImportFrom('platform', [alias('uname', None)], 0, lineno=10, col_offset=0), If(Compare(Subscript(Call(Name('uname', Load(), lineno=12, col_offset=3), [], [], None, None, lineno=12, col_offset=3), Index(Num(0, lineno=12, col_offset=11)), Load(), lineno=12, col_offset=3), [Eq()], [Str('Darwin', lineno=12, col_offset=17)], lineno=12, col_offset=3), [Assign([Tuple([Name('maj', Store(), lineno=13, col_offset=4), Name('min', Store(), lineno=13, col_offset=9), Name('mic', Store(), lineno=13, col_offset=14)], Store(), lineno=13, col_offset=4)], ListComp(Call(Name('int', Load(), lineno=13, col_offset=21), [Name('part', Load(), lineno=13, col_offset=25)], [], None, None, lineno=13, col_offset=21), [comprehension(Name('part', Store(), lineno=13, col_offset=35), Call(Attribute(Subscript(Call(Name('uname', Load(), lineno=13, col_offset=43), [], [], None, None, lineno=13, col_offset=43), Index(Num(2, lineno=13, col_offset=51)), Load(), lineno=13, col_offset=43), 'split', Load(), lineno=13, col_offset=43), [Str('.', lineno=13, col_offset=60)], [], None, None, lineno=13, col_offset=43), [])], lineno=13, col_offset=21), lineno=13, col_offset=4), If(Compare(Tuple([Name('maj', Load(), lineno=14, col_offset=8), Name('min', Load(), lineno=14, col_offset=13), Name('mic', Load(), lineno=14, col_offset=18)], Load(), lineno=14, col_offset=8), [Lt()], [Tuple([Num(8, lineno=14, col_offset=26), Num(0, lineno=14, col_offset=29), Num(0, lineno=14, col_offset=32)], Load(), lineno=14, col_offset=26)], lineno=14, col_offset=7), [Raise(Call(Attribute(Name('unittest', Load(), lineno=15, col_offset=14), 'SkipTest', Load(), lineno=15, col_offset=14), [Str('locale support broken for OS X < 10.4', lineno=15, col_offset=32)], [], None, None, lineno=15, col_offset=14), None, None, lineno=15, col_offset=8)], [], lineno=14, col_offset=4)], [], lineno=12, col_offset=0), Assign([Name('candidate_locales', Store(), lineno=17, col_offset=0)], List([Str('es_UY', lineno=17, col_offset=21), Str('fr_FR', lineno=17, col_offset=30), Str('fi_FI', lineno=17, col_offset=39), Str('es_CO', lineno=17, col_offset=48), Str('pt_PT', lineno=17, col_offset=57), Str('it_IT', lineno=17, col_offset=66), Str('et_EE', lineno=18, col_offset=4), Str('es_PY', lineno=18, col_offset=13), Str('no_NO', lineno=18, col_offset=22), Str('nl_NL', lineno=18, col_offset=31), Str('lv_LV', lineno=18, col_offset=40), Str('el_GR', lineno=18, col_offset=49), Str('be_BY', lineno=18, col_offset=58), Str('fr_BE', lineno=18, col_offset=67), Str('ro_RO', lineno=19, col_offset=4), Str('ru_UA', lineno=19, col_offset=13), Str('ru_RU', lineno=19, col_offset=22), Str('es_VE', lineno=19, col_offset=31), Str('ca_ES', lineno=19, col_offset=40), Str('se_NO', lineno=19, col_offset=49), Str('es_EC', lineno=19, col_offset=58), Str('id_ID', lineno=19, col_offset=67), Str('ka_GE', lineno=20, col_offset=4), Str('es_CL', lineno=20, col_offset=13), Str('hu_HU', lineno=20, col_offset=22), Str('wa_BE', lineno=20, col_offset=31), Str('lt_LT', lineno=20, col_offset=40), Str('sl_SI', lineno=20, col_offset=49), Str('hr_HR', lineno=20, col_offset=58), Str('es_AR', lineno=20, col_offset=67), Str('es_ES', lineno=21, col_offset=4), Str('oc_FR', lineno=21, col_offset=13), Str('gl_ES', lineno=21, col_offset=22), Str('bg_BG', lineno=21, col_offset=31), Str('is_IS', lineno=21, col_offset=40), Str('mk_MK', lineno=21, col_offset=49), Str('de_AT', lineno=21, col_offset=58), Str('pt_BR', lineno=21, col_offset=67), Str('da_DK', lineno=22, col_offset=4), Str('nn_NO', lineno=22, col_offset=13), Str('cs_CZ', lineno=22, col_offset=22), Str('de_LU', lineno=22, col_offset=31), Str('es_BO', lineno=22, col_offset=40), Str('sq_AL', lineno=22, col_offset=49), Str('sk_SK', lineno=22, col_offset=58), Str('fr_CH', lineno=22, col_offset=67), Str('de_DE', lineno=23, col_offset=4), Str('sr_YU', lineno=23, col_offset=13), Str('br_FR', lineno=23, col_offset=22), Str('nl_BE', lineno=23, col_offset=31), Str('sv_FI', lineno=23, col_offset=40), Str('pl_PL', lineno=23, col_offset=49), Str('fr_CA', lineno=23, col_offset=58), Str('fo_FO', lineno=23, col_offset=67), Str('bs_BA', lineno=24, col_offset=4), Str('fr_LU', lineno=24, col_offset=13), Str('kl_GL', lineno=24, col_offset=22), Str('fa_IR', lineno=24, col_offset=31), Str('de_BE', lineno=24, col_offset=40), Str('sv_SE', lineno=24, col_offset=49), Str('it_CH', lineno=24, col_offset=58), Str('uk_UA', lineno=24, col_offset=67), Str('eu_ES', lineno=25, col_offset=4), Str('vi_VN', lineno=25, col_offset=13), Str('af_ZA', lineno=25, col_offset=22), Str('nb_NO', lineno=25, col_offset=31), Str('en_DK', lineno=25, col_offset=40), Str('tg_TJ', lineno=25, col_offset=49), Str('en_US', lineno=25, col_offset=58), Str('es_ES.ISO8859-1', lineno=26, col_offset=4), Str('fr_FR.ISO8859-15', lineno=26, col_offset=23), Str('ru_RU.KOI8-R', lineno=26, col_offset=43), Str('ko_KR.eucKR', lineno=26, col_offset=59)], Load(), lineno=17, col_offset=20), lineno=17, col_offset=0), If(Compare(Str('MSC v.1200', lineno=29, col_offset=3), [In()], [Attribute(Name('sys', Load(), lineno=29, col_offset=19), 'version', Load(), lineno=29, col_offset=19)], lineno=29, col_offset=3), [FunctionDef('accept', arguments([Name('loc', Param(), lineno=30, col_offset=15)], None, None, []), [Assign([Name('a', Store(), lineno=31, col_offset=8)], Call(Attribute(Name('loc', Load(), lineno=31, col_offset=12), 'split', Load(), lineno=31, col_offset=12), [Str('.', lineno=31, col_offset=22)], [], None, None, lineno=31, col_offset=12), lineno=31, col_offset=8), Return(UnaryOp(Not(), BoolOp(And(), [Compare(Call(Name('len', Load(), lineno=32, col_offset=19), [Name('a', Load(), lineno=32, col_offset=23)], [], None, None, lineno=32, col_offset=19), [Eq()], [Num(2, lineno=32, col_offset=29)], lineno=32, col_offset=19), Compare(Call(Name('len', Load(), lineno=32, col_offset=35), [Subscript(Name('a', Load(), lineno=32, col_offset=39), Index(Num(-1, lineno=32, col_offset=42)), Load(), lineno=32, col_offset=39)], [], None, None, lineno=32, col_offset=35), [GtE()], [Num(9, lineno=32, col_offset=49)], lineno=32, col_offset=35)], lineno=32, col_offset=19), lineno=32, col_offset=15), lineno=32, col_offset=8)], [], lineno=30, col_offset=4), Assign([Name('candidate_locales', Store(), lineno=33, col_offset=4)], ListComp(Name('loc', Load(), lineno=33, col_offset=25), [comprehension(Name('loc', Store(), lineno=33, col_offset=33), Name('candidate_locales', Load(), lineno=33, col_offset=40), [Call(Name('accept', Load(), lineno=33, col_offset=61), [Name('loc', Load(), lineno=33, col_offset=68)], [], None, None, lineno=33, col_offset=61)])], lineno=33, col_offset=25), lineno=33, col_offset=4)], [], lineno=29, col_offset=0), Assign([Name('known_numerics', Store(), lineno=38, col_offset=0)], Dict([Str('fr_FR', lineno=38, col_offset=18), Str('en_US', lineno=38, col_offset=39)], [Tuple([Str(',', lineno=38, col_offset=29), Str('', lineno=38, col_offset=34)], Load(), lineno=38, col_offset=29), Tuple([Str('.', lineno=38, col_offset=48), Str(',', lineno=38, col_offset=53)], Load(), lineno=38, col_offset=48)], lineno=38, col_offset=17), lineno=38, col_offset=0), ClassDef('_LocaleTests', [Attribute(Name('unittest', Load(), lineno=40, col_offset=19), 'TestCase', Load(), lineno=40, col_offset=19)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=42, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=43, col_offset=8), 'oldlocale', Store(), lineno=43, col_offset=8)], Call(Name('setlocale', Load(), lineno=43, col_offset=25), [Name('LC_NUMERIC', Load(), lineno=43, col_offset=35)], [], None, None, lineno=43, col_offset=25), lineno=43, col_offset=8)], [], lineno=42, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=45, col_offset=17)], None, None, []), [Expr(Call(Name('setlocale', Load(), lineno=46, col_offset=8), [Name('LC_NUMERIC', Load(), lineno=46, col_offset=18), Attribute(Name('self', Load(), lineno=46, col_offset=30), 'oldlocale', Load(), lineno=46, col_offset=30)], [], None, None, lineno=46, col_offset=8), lineno=46, col_offset=8)], [], lineno=45, col_offset=4), Assign([Name('lc_numeric_err_msg', Store(), lineno=51, col_offset=4)], Str('%s != %s (%s for %s; set to %s, using %s)', lineno=51, col_offset=25), lineno=51, col_offset=4), FunctionDef('numeric_tester', arguments([Name('self', Param(), lineno=53, col_offset=23), Name('calc_type', Param(), lineno=53, col_offset=29), Name('calc_value', Param(), lineno=53, col_offset=40), Name('data_type', Param(), lineno=53, col_offset=52), Name('used_locale', Param(), lineno=53, col_offset=63)], None, None, []), [Expr(Str('Compare calculation against known value, if available', lineno=54, col_offset=8), lineno=54, col_offset=8), TryExcept([Assign([Name('set_locale', Store(), lineno=56, col_offset=12)], Call(Name('setlocale', Load(), lineno=56, col_offset=25), [Name('LC_NUMERIC', Load(), lineno=56, col_offset=35)], [], None, None, lineno=56, col_offset=25), lineno=56, col_offset=12)], [ExceptHandler(Name('Error', Load(), lineno=57, col_offset=15), None, [Assign([Name('set_locale', Store(), lineno=58, col_offset=12)], Str('<not able to determine>', lineno=58, col_offset=25), lineno=58, col_offset=12)], lineno=57, col_offset=8)], [], lineno=55, col_offset=8), Assign([Name('known_value', Store(), lineno=59, col_offset=8)], Subscript(Call(Attribute(Name('known_numerics', Load(), lineno=59, col_offset=22), 'get', Load(), lineno=59, col_offset=22), [Name('used_locale', Load(), lineno=59, col_offset=41), Tuple([Str('', lineno=60, col_offset=37), Str('', lineno=60, col_offset=41)], Load(), lineno=60, col_offset=37)], [], None, None, lineno=59, col_offset=22), Index(Compare(Name('data_type', Load(), lineno=60, col_offset=46), [Eq()], [Str('thousands_sep', lineno=60, col_offset=59)], lineno=60, col_offset=46)), Load(), lineno=59, col_offset=22), lineno=59, col_offset=8), If(BoolOp(And(), [Name('known_value', Load(), lineno=61, col_offset=11), Name('calc_value', Load(), lineno=61, col_offset=27)], lineno=61, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=62, col_offset=12), 'assertEqual', Load(), lineno=62, col_offset=12), [Name('calc_value', Load(), lineno=62, col_offset=29), Name('known_value', Load(), lineno=62, col_offset=41), BinOp(Attribute(Name('self', Load(), lineno=63, col_offset=32), 'lc_numeric_err_msg', Load(), lineno=63, col_offset=32), Mod(), Tuple([Name('calc_value', Load(), lineno=64, col_offset=36), Name('known_value', Load(), lineno=64, col_offset=48), Name('calc_type', Load(), lineno=65, col_offset=36), Name('data_type', Load(), lineno=65, col_offset=47), Name('set_locale', Load(), lineno=65, col_offset=58), Name('used_locale', Load(), lineno=66, col_offset=36)], Load(), lineno=64, col_offset=36), lineno=63, col_offset=32)], [], None, None, lineno=62, col_offset=12), lineno=62, col_offset=12)], [], lineno=61, col_offset=8)], [], lineno=53, col_offset=4), FunctionDef('test_lc_numeric_nl_langinfo', arguments([Name('self', Param(), lineno=69, col_offset=36)], None, None, []), [For(Name('loc', Store(), lineno=71, col_offset=12), Name('candidate_locales', Load(), lineno=71, col_offset=19), [TryExcept([Expr(Call(Name('setlocale', Load(), lineno=73, col_offset=16), [Name('LC_NUMERIC', Load(), lineno=73, col_offset=26), Name('loc', Load(), lineno=73, col_offset=38)], [], None, None, lineno=73, col_offset=16), lineno=73, col_offset=16)], [ExceptHandler(Name('Error', Load(), lineno=74, col_offset=19), None, [Continue( lineno=75, col_offset=16)], lineno=74, col_offset=12)], [], lineno=72, col_offset=12), For(Tuple([Name('li', Store(), lineno=76, col_offset=16), Name('lc', Store(), lineno=76, col_offset=20)], Store(), lineno=76, col_offset=16), Tuple([Tuple([Name('RADIXCHAR', Load(), lineno=76, col_offset=28), Str('decimal_point', lineno=76, col_offset=39)], Load(), lineno=76, col_offset=28), Tuple([Name('THOUSEP', Load(), lineno=77, col_offset=29), Str('thousands_sep', lineno=77, col_offset=38)], Load(), lineno=77, col_offset=29)], Load(), lineno=76, col_offset=27), [Expr(Call(Attribute(Name('self', Load(), lineno=78, col_offset=16), 'numeric_tester', Load(), lineno=78, col_offset=16), [Str('nl_langinfo', lineno=78, col_offset=36), Call(Name('nl_langinfo', Load(), lineno=78, col_offset=51), [Name('li', Load(), lineno=78, col_offset=63)], [], None, None, lineno=78, col_offset=51), Name('lc', Load(), lineno=78, col_offset=68), Name('loc', Load(), lineno=78, col_offset=72)], [], None, None, lineno=78, col_offset=16), lineno=78, col_offset=16)], [], lineno=76, col_offset=12)], [], lineno=71, col_offset=8)], [Call(Attribute(Name('unittest', Load(), lineno=68, col_offset=5), 'skipUnless', Load(), lineno=68, col_offset=5), [Name('nl_langinfo', Load(), lineno=68, col_offset=25), Str('nl_langinfo is not available', lineno=68, col_offset=38)], [], None, None, lineno=68, col_offset=5)], lineno=68, col_offset=4), FunctionDef('test_lc_numeric_localeconv', arguments([Name('self', Param(), lineno=80, col_offset=35)], None, None, []), [For(Name('loc', Store(), lineno=82, col_offset=12), Name('candidate_locales', Load(), lineno=82, col_offset=19), [TryExcept([Expr(Call(Name('setlocale', Load(), lineno=84, col_offset=16), [Name('LC_NUMERIC', Load(), lineno=84, col_offset=26), Name('loc', Load(), lineno=84, col_offset=38)], [], None, None, lineno=84, col_offset=16), lineno=84, col_offset=16)], [ExceptHandler(Name('Error', Load(), lineno=85, col_offset=19), None, [Continue( lineno=86, col_offset=16)], lineno=85, col_offset=12)], [], lineno=83, col_offset=12), For(Name('lc', Store(), lineno=87, col_offset=16), Tuple([Str('decimal_point', lineno=87, col_offset=23), Str('thousands_sep', lineno=87, col_offset=40)], Load(), lineno=87, col_offset=23), [Expr(Call(Attribute(Name('self', Load(), lineno=88, col_offset=16), 'numeric_tester', Load(), lineno=88, col_offset=16), [Str('localeconv', lineno=88, col_offset=36), Subscript(Call(Name('localeconv', Load(), lineno=88, col_offset=50), [], [], None, None, lineno=88, col_offset=50), Index(Name('lc', Load(), lineno=88, col_offset=63)), Load(), lineno=88, col_offset=50), Name('lc', Load(), lineno=88, col_offset=68), Name('loc', Load(), lineno=88, col_offset=72)], [], None, None, lineno=88, col_offset=16), lineno=88, col_offset=16)], [], lineno=87, col_offset=12)], [], lineno=82, col_offset=8)], [], lineno=80, col_offset=4), FunctionDef('test_lc_numeric_basic', arguments([Name('self', Param(), lineno=91, col_offset=30)], None, None, []), [For(Name('loc', Store(), lineno=93, col_offset=12), Name('candidate_locales', Load(), lineno=93, col_offset=19), [TryExcept([Expr(Call(Name('setlocale', Load(), lineno=95, col_offset=16), [Name('LC_NUMERIC', Load(), lineno=95, col_offset=26), Name('loc', Load(), lineno=95, col_offset=38)], [], None, None, lineno=95, col_offset=16), lineno=95, col_offset=16)], [ExceptHandler(Name('Error', Load(), lineno=96, col_offset=19), None, [Continue( lineno=97, col_offset=16)], lineno=96, col_offset=12)], [], lineno=94, col_offset=12), For(Tuple([Name('li', Store(), lineno=98, col_offset=16), Name('lc', Store(), lineno=98, col_offset=20)], Store(), lineno=98, col_offset=16), Tuple([Tuple([Name('RADIXCHAR', Load(), lineno=98, col_offset=28), Str('decimal_point', lineno=98, col_offset=39)], Load(), lineno=98, col_offset=28), Tuple([Name('THOUSEP', Load(), lineno=99, col_offset=29), Str('thousands_sep', lineno=99, col_offset=38)], Load(), lineno=99, col_offset=29)], Load(), lineno=98, col_offset=27), [Assign([Name('nl_radixchar', Store(), lineno=100, col_offset=16)], Call(Name('nl_langinfo', Load(), lineno=100, col_offset=31), [Name('li', Load(), lineno=100, col_offset=43)], [], None, None, lineno=100, col_offset=31), lineno=100, col_offset=16), Assign([Name('li_radixchar', Store(), lineno=101, col_offset=16)], Subscript(Call(Name('localeconv', Load(), lineno=101, col_offset=31), [], [], None, None, lineno=101, col_offset=31), Index(Name('lc', Load(), lineno=101, col_offset=44)), Load(), lineno=101, col_offset=31), lineno=101, col_offset=16), TryExcept([Assign([Name('set_locale', Store(), lineno=103, col_offset=20)], Call(Name('setlocale', Load(), lineno=103, col_offset=33), [Name('LC_NUMERIC', Load(), lineno=103, col_offset=43)], [], None, None, lineno=103, col_offset=33), lineno=103, col_offset=20)], [ExceptHandler(Name('Error', Load(), lineno=104, col_offset=23), None, [Assign([Name('set_locale', Store(), lineno=105, col_offset=20)], Str('<not able to determine>', lineno=105, col_offset=33), lineno=105, col_offset=20)], lineno=104, col_offset=16)], [], lineno=102, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=106, col_offset=16), 'assertEqual', Load(), lineno=106, col_offset=16), [Name('nl_radixchar', Load(), lineno=106, col_offset=33), Name('li_radixchar', Load(), lineno=106, col_offset=47), BinOp(Str('%s (nl_langinfo) != %s (localeconv) (set to %s, using %s)', lineno=107, col_offset=32), Mod(), Tuple([Name('nl_radixchar', Load(), lineno=109, col_offset=48), Name('li_radixchar', Load(), lineno=109, col_offset=62), Name('loc', Load(), lineno=110, col_offset=48), Name('set_locale', Load(), lineno=110, col_offset=53)], Load(), lineno=109, col_offset=48), lineno=107, col_offset=32)], [], None, None, lineno=106, col_offset=16), lineno=106, col_offset=16)], [], lineno=98, col_offset=12)], [], lineno=93, col_offset=8)], [Call(Attribute(Name('unittest', Load(), lineno=90, col_offset=5), 'skipUnless', Load(), lineno=90, col_offset=5), [Name('nl_langinfo', Load(), lineno=90, col_offset=25), Str('nl_langinfo is not available', lineno=90, col_offset=38)], [], None, None, lineno=90, col_offset=5)], lineno=90, col_offset=4), FunctionDef('test_float_parsing', arguments([Name('self', Param(), lineno=112, col_offset=27)], None, None, []), [For(Name('loc', Store(), lineno=115, col_offset=12), Name('candidate_locales', Load(), lineno=115, col_offset=19), [TryExcept([Expr(Call(Name('setlocale', Load(), lineno=117, col_offset=16), [Name('LC_NUMERIC', Load(), lineno=117, col_offset=26), Name('loc', Load(), lineno=117, col_offset=38)], [], None, None, lineno=117, col_offset=16), lineno=117, col_offset=16)], [ExceptHandler(Name('Error', Load(), lineno=118, col_offset=19), None, [Continue( lineno=119, col_offset=16)], lineno=118, col_offset=12)], [], lineno=116, col_offset=12), If(BoolOp(And(), [Compare(Name('loc', Load(), lineno=122, col_offset=15), [Eq()], [Str('eu_ES', lineno=122, col_offset=22)], lineno=122, col_offset=15), Compare(Subscript(Call(Name('localeconv', Load(), lineno=122, col_offset=34), [], [], None, None, lineno=122, col_offset=34), Index(Str('decimal_point', lineno=122, col_offset=47)), Load(), lineno=122, col_offset=34), [Eq()], [Str("' ", lineno=122, col_offset=67)], lineno=122, col_offset=34)], lineno=122, col_offset=15), [Continue( lineno=123, col_offset=16)], [], lineno=122, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=125, col_offset=12), 'assertEqual', Load(), lineno=125, col_offset=12), [Call(Name('int', Load(), lineno=125, col_offset=29), [BinOp(Call(Name('eval', Load(), lineno=125, col_offset=33), [Str('3.14', lineno=125, col_offset=38)], [], None, None, lineno=125, col_offset=33), Mult(), Num(100, lineno=125, col_offset=48), lineno=125, col_offset=33)], [], None, None, lineno=125, col_offset=29), Num(314, lineno=125, col_offset=54), BinOp(Str("using eval('3.14') failed for %s", lineno=126, col_offset=32), Mod(), Name('loc', Load(), lineno=126, col_offset=69), lineno=126, col_offset=32)], [], None, None, lineno=125, col_offset=12), lineno=125, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=127, col_offset=12), 'assertEqual', Load(), lineno=127, col_offset=12), [Call(Name('int', Load(), lineno=127, col_offset=29), [BinOp(Call(Name('float', Load(), lineno=127, col_offset=33), [Str('3.14', lineno=127, col_offset=39)], [], None, None, lineno=127, col_offset=33), Mult(), Num(100, lineno=127, col_offset=49), lineno=127, col_offset=33)], [], None, None, lineno=127, col_offset=29), Num(314, lineno=127, col_offset=55), BinOp(Str("using float('3.14') failed for %s", lineno=128, col_offset=32), Mod(), Name('loc', Load(), lineno=128, col_offset=70), lineno=128, col_offset=32)], [], None, None, lineno=127, col_offset=12), lineno=127, col_offset=12), If(Compare(Subscript(Call(Name('localeconv', Load(), lineno=129, col_offset=15), [], [], None, None, lineno=129, col_offset=15), Index(Str('decimal_point', lineno=129, col_offset=28)), Load(), lineno=129, col_offset=15), [NotEq()], [Str('.', lineno=129, col_offset=48)], lineno=129, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=130, col_offset=16), 'assertRaises', Load(), lineno=130, col_offset=16), [Name('ValueError', Load(), lineno=130, col_offset=34), Name('float', Load(), lineno=130, col_offset=46), Call(Attribute(Subscript(Call(Name('localeconv', Load(), lineno=131, col_offset=34), [], [], None, None, lineno=131, col_offset=34), Index(Str('decimal_point', lineno=131, col_offset=47)), Load(), lineno=131, col_offset=34), 'join', Load(), lineno=131, col_offset=34), [List([Str('1', lineno=131, col_offset=70), Str('23', lineno=131, col_offset=75)], Load(), lineno=131, col_offset=69)], [], None, None, lineno=131, col_offset=34)], [], None, None, lineno=130, col_offset=16), lineno=130, col_offset=16)], [], lineno=129, col_offset=12)], [], lineno=115, col_offset=8)], [], lineno=112, col_offset=4)], [], lineno=40, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Name('run_unittest', Load(), lineno=134, col_offset=4), [Name('_LocaleTests', Load(), lineno=134, col_offset=17)], [], None, None, lineno=134, col_offset=4), lineno=134, col_offset=4)], [], lineno=133, col_offset=0), If(Compare(Name('__name__', Load(), lineno=136, col_offset=3), [Eq()], [Str('__main__', lineno=136, col_offset=15)], lineno=136, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=137, col_offset=4), [], [], None, None, lineno=137, col_offset=4), lineno=137, col_offset=4)], [], lineno=136, col_offset=0)])
