Module([Import([alias('sys', None)], lineno=27, col_offset=0), Assign([Name('SCRIPT', Store(), lineno=29, col_offset=0)], Subscript(Attribute(Name('sys', Load(), lineno=29, col_offset=9), 'argv', Load(), lineno=29, col_offset=9), Index(Num(0, lineno=29, col_offset=18)), Load(), lineno=29, col_offset=9), lineno=29, col_offset=0), Assign([Name('VERSION', Store(), lineno=30, col_offset=0)], Str('2.6', lineno=30, col_offset=10), lineno=30, col_offset=0), Assign([Name('UNIDATA_VERSION', Store(), lineno=33, col_offset=0)], Str('5.2.0', lineno=33, col_offset=18), lineno=33, col_offset=0), Assign([Name('UNICODE_DATA', Store(), lineno=34, col_offset=0)], Str('UnicodeData%s.txt', lineno=34, col_offset=15), lineno=34, col_offset=0), Assign([Name('COMPOSITION_EXCLUSIONS', Store(), lineno=35, col_offset=0)], Str('CompositionExclusions%s.txt', lineno=35, col_offset=25), lineno=35, col_offset=0), Assign([Name('EASTASIAN_WIDTH', Store(), lineno=36, col_offset=0)], Str('EastAsianWidth%s.txt', lineno=36, col_offset=18), lineno=36, col_offset=0), Assign([Name('UNIHAN', Store(), lineno=37, col_offset=0)], Str('Unihan%s.txt', lineno=37, col_offset=9), lineno=37, col_offset=0), Assign([Name('DERIVEDNORMALIZATION_PROPS', Store(), lineno=38, col_offset=0)], Str('DerivedNormalizationProps%s.txt', lineno=38, col_offset=29), lineno=38, col_offset=0), Assign([Name('LINE_BREAK', Store(), lineno=39, col_offset=0)], Str('LineBreak%s.txt', lineno=39, col_offset=13), lineno=39, col_offset=0), Assign([Name('old_versions', Store(), lineno=41, col_offset=0)], List([Str('3.2.0', lineno=41, col_offset=16)], Load(), lineno=41, col_offset=15), lineno=41, col_offset=0), Assign([Name('CATEGORY_NAMES', Store(), lineno=43, col_offset=0)], List([Str('Cn', lineno=43, col_offset=19), Str('Lu', lineno=43, col_offset=25), Str('Ll', lineno=43, col_offset=31), Str('Lt', lineno=43, col_offset=37), Str('Mn', lineno=43, col_offset=43), Str('Mc', lineno=43, col_offset=49), Str('Me', lineno=43, col_offset=55), Str('Nd', lineno=43, col_offset=61), Str('Nl', lineno=44, col_offset=4), Str('No', lineno=44, col_offset=10), Str('Zs', lineno=44, col_offset=16), Str('Zl', lineno=44, col_offset=22), Str('Zp', lineno=44, col_offset=28), Str('Cc', lineno=44, col_offset=34), Str('Cf', lineno=44, col_offset=40), Str('Cs', lineno=44, col_offset=46), Str('Co', lineno=44, col_offset=52), Str('Cn', lineno=44, col_offset=58), Str('Lm', lineno=44, col_offset=64), Str('Lo', lineno=45, col_offset=4), Str('Pc', lineno=45, col_offset=10), Str('Pd', lineno=45, col_offset=16), Str('Ps', lineno=45, col_offset=22), Str('Pe', lineno=45, col_offset=28), Str('Pi', lineno=45, col_offset=34), Str('Pf', lineno=45, col_offset=40), Str('Po', lineno=45, col_offset=46), Str('Sm', lineno=45, col_offset=52), Str('Sc', lineno=45, col_offset=58), Str('Sk', lineno=45, col_offset=64), Str('So', lineno=46, col_offset=4)], Load(), lineno=43, col_offset=17), lineno=43, col_offset=0), Assign([Name('BIDIRECTIONAL_NAMES', Store(), lineno=48, col_offset=0)], List([Str('', lineno=48, col_offset=24), Str('L', lineno=48, col_offset=28), Str('LRE', lineno=48, col_offset=33), Str('LRO', lineno=48, col_offset=40), Str('R', lineno=48, col_offset=47), Str('AL', lineno=48, col_offset=52), Str('RLE', lineno=48, col_offset=58), Str('RLO', lineno=48, col_offset=65), Str('PDF', lineno=49, col_offset=4), Str('EN', lineno=49, col_offset=11), Str('ES', lineno=49, col_offset=17), Str('ET', lineno=49, col_offset=23), Str('AN', lineno=49, col_offset=29), Str('CS', lineno=49, col_offset=35), Str('NSM', lineno=49, col_offset=41), Str('BN', lineno=49, col_offset=48), Str('B', lineno=49, col_offset=54), Str('S', lineno=49, col_offset=59), Str('WS', lineno=49, col_offset=64), Str('ON', lineno=50, col_offset=4)], Load(), lineno=48, col_offset=22), lineno=48, col_offset=0), Assign([Name('EASTASIANWIDTH_NAMES', Store(), lineno=52, col_offset=0)], List([Str('F', lineno=52, col_offset=25), Str('H', lineno=52, col_offset=30), Str('W', lineno=52, col_offset=35), Str('Na', lineno=52, col_offset=40), Str('A', lineno=52, col_offset=46), Str('N', lineno=52, col_offset=51)], Load(), lineno=52, col_offset=23), lineno=52, col_offset=0), Assign([Name('MANDATORY_LINE_BREAKS', Store(), lineno=54, col_offset=0)], List([Str('BK', lineno=54, col_offset=26), Str('CR', lineno=54, col_offset=32), Str('LF', lineno=54, col_offset=38), Str('NL', lineno=54, col_offset=44)], Load(), lineno=54, col_offset=24), lineno=54, col_offset=0), Assign([Name('ALPHA_MASK', Store(), lineno=57, col_offset=0)], Num(1, lineno=57, col_offset=13), lineno=57, col_offset=0), Assign([Name('DECIMAL_MASK', Store(), lineno=58, col_offset=0)], Num(2, lineno=58, col_offset=15), lineno=58, col_offset=0), Assign([Name('DIGIT_MASK', Store(), lineno=59, col_offset=0)], Num(4, lineno=59, col_offset=13), lineno=59, col_offset=0), Assign([Name('LOWER_MASK', Store(), lineno=60, col_offset=0)], Num(8, lineno=60, col_offset=13), lineno=60, col_offset=0), Assign([Name('LINEBREAK_MASK', Store(), lineno=61, col_offset=0)], Num(16, lineno=61, col_offset=17), lineno=61, col_offset=0), Assign([Name('SPACE_MASK', Store(), lineno=62, col_offset=0)], Num(32, lineno=62, col_offset=13), lineno=62, col_offset=0), Assign([Name('TITLE_MASK', Store(), lineno=63, col_offset=0)], Num(64, lineno=63, col_offset=13), lineno=63, col_offset=0), Assign([Name('UPPER_MASK', Store(), lineno=64, col_offset=0)], Num(128, lineno=64, col_offset=13), lineno=64, col_offset=0), Assign([Name('NODELTA_MASK', Store(), lineno=65, col_offset=0)], Num(256, lineno=65, col_offset=15), lineno=65, col_offset=0), Assign([Name('NUMERIC_MASK', Store(), lineno=66, col_offset=0)], Num(512, lineno=66, col_offset=15), lineno=66, col_offset=0), FunctionDef('maketables', arguments([Name('trace', Param(), lineno=68, col_offset=15)], None, None, [Num(0, lineno=68, col_offset=21)]), [Print(None, [Str('--- Reading', lineno=70, col_offset=10), BinOp(Name('UNICODE_DATA', Load(), lineno=70, col_offset=25), Mod(), Str('', lineno=70, col_offset=40), lineno=70, col_offset=25), Str('...', lineno=70, col_offset=44)], True, lineno=70, col_offset=4), Assign([Name('version', Store(), lineno=72, col_offset=4)], Str('', lineno=72, col_offset=14), lineno=72, col_offset=4), Assign([Name('unicode', Store(), lineno=73, col_offset=4)], Call(Name('UnicodeData', Load(), lineno=73, col_offset=14), [BinOp(Name('UNICODE_DATA', Load(), lineno=73, col_offset=26), Mod(), Name('version', Load(), lineno=73, col_offset=41), lineno=73, col_offset=26), BinOp(Name('COMPOSITION_EXCLUSIONS', Load(), lineno=74, col_offset=26), Mod(), Name('version', Load(), lineno=74, col_offset=51), lineno=74, col_offset=26), BinOp(Name('EASTASIAN_WIDTH', Load(), lineno=75, col_offset=26), Mod(), Name('version', Load(), lineno=75, col_offset=44), lineno=75, col_offset=26), BinOp(Name('UNIHAN', Load(), lineno=76, col_offset=26), Mod(), Name('version', Load(), lineno=76, col_offset=35), lineno=76, col_offset=26), BinOp(Name('DERIVEDNORMALIZATION_PROPS', Load(), lineno=77, col_offset=26), Mod(), Name('version', Load(), lineno=77, col_offset=55), lineno=77, col_offset=26), BinOp(Name('LINE_BREAK', Load(), lineno=78, col_offset=26), Mod(), Name('version', Load(), lineno=78, col_offset=39), lineno=78, col_offset=26)], [], None, None, lineno=73, col_offset=14), lineno=73, col_offset=4), Print(None, [Call(Name('len', Load(), lineno=80, col_offset=10), [Call(Name('filter', Load(), lineno=80, col_offset=14), [Name('None', Load(), lineno=80, col_offset=21), Attribute(Name('unicode', Load(), lineno=80, col_offset=27), 'table', Load(), lineno=80, col_offset=27)], [], None, None, lineno=80, col_offset=14)], [], None, None, lineno=80, col_offset=10), Str('characters', lineno=80, col_offset=44)], True, lineno=80, col_offset=4), For(Name('version', Store(), lineno=82, col_offset=8), Name('old_versions', Load(), lineno=82, col_offset=19), [Print(None, [Str('--- Reading', lineno=83, col_offset=14), BinOp(Name('UNICODE_DATA', Load(), lineno=83, col_offset=29), Mod(), BinOp(Str('-', lineno=83, col_offset=45), Add(), Name('version', Load(), lineno=83, col_offset=49), lineno=83, col_offset=45), lineno=83, col_offset=29), Str('...', lineno=83, col_offset=59)], True, lineno=83, col_offset=8), Assign([Name('old_unicode', Store(), lineno=84, col_offset=8)], Call(Name('UnicodeData', Load(), lineno=84, col_offset=22), [BinOp(Name('UNICODE_DATA', Load(), lineno=84, col_offset=34), Mod(), BinOp(Str('-', lineno=84, col_offset=50), Add(), Name('version', Load(), lineno=84, col_offset=54), lineno=84, col_offset=50), lineno=84, col_offset=34), BinOp(Name('COMPOSITION_EXCLUSIONS', Load(), lineno=85, col_offset=34), Mod(), BinOp(Str('-', lineno=85, col_offset=60), Add(), Name('version', Load(), lineno=85, col_offset=64), lineno=85, col_offset=60), lineno=85, col_offset=34), BinOp(Name('EASTASIAN_WIDTH', Load(), lineno=86, col_offset=34), Mod(), BinOp(Str('-', lineno=86, col_offset=53), Add(), Name('version', Load(), lineno=86, col_offset=57), lineno=86, col_offset=53), lineno=86, col_offset=34), BinOp(Name('UNIHAN', Load(), lineno=87, col_offset=34), Mod(), BinOp(Str('-', lineno=87, col_offset=44), Add(), Name('version', Load(), lineno=87, col_offset=48), lineno=87, col_offset=44), lineno=87, col_offset=34)], [], None, None, lineno=84, col_offset=22), lineno=84, col_offset=8), Print(None, [Call(Name('len', Load(), lineno=88, col_offset=14), [Call(Name('filter', Load(), lineno=88, col_offset=18), [Name('None', Load(), lineno=88, col_offset=25), Attribute(Name('old_unicode', Load(), lineno=88, col_offset=31), 'table', Load(), lineno=88, col_offset=31)], [], None, None, lineno=88, col_offset=18)], [], None, None, lineno=88, col_offset=14), Str('characters', lineno=88, col_offset=52)], True, lineno=88, col_offset=8), Expr(Call(Name('merge_old_version', Load(), lineno=89, col_offset=8), [Name('version', Load(), lineno=89, col_offset=26), Name('unicode', Load(), lineno=89, col_offset=35), Name('old_unicode', Load(), lineno=89, col_offset=44)], [], None, None, lineno=89, col_offset=8), lineno=89, col_offset=8)], [], lineno=82, col_offset=4), Expr(Call(Name('makeunicodename', Load(), lineno=91, col_offset=4), [Name('unicode', Load(), lineno=91, col_offset=20), Name('trace', Load(), lineno=91, col_offset=29)], [], None, None, lineno=91, col_offset=4), lineno=91, col_offset=4), Expr(Call(Name('makeunicodedata', Load(), lineno=92, col_offset=4), [Name('unicode', Load(), lineno=92, col_offset=20), Name('trace', Load(), lineno=92, col_offset=29)], [], None, None, lineno=92, col_offset=4), lineno=92, col_offset=4), Expr(Call(Name('makeunicodetype', Load(), lineno=93, col_offset=4), [Name('unicode', Load(), lineno=93, col_offset=20), Name('trace', Load(), lineno=93, col_offset=29)], [], None, None, lineno=93, col_offset=4), lineno=93, col_offset=4)], [], lineno=68, col_offset=0), FunctionDef('makeunicodedata', arguments([Name('unicode', Param(), lineno=98, col_offset=20), Name('trace', Param(), lineno=98, col_offset=29)], None, None, []), [Assign([Name('dummy', Store(), lineno=100, col_offset=4)], Tuple([Num(0, lineno=100, col_offset=13), Num(0, lineno=100, col_offset=16), Num(0, lineno=100, col_offset=19), Num(0, lineno=100, col_offset=22), Num(0, lineno=100, col_offset=25), Num(0, lineno=100, col_offset=28)], Load(), lineno=100, col_offset=13), lineno=100, col_offset=4), Assign([Name('table', Store(), lineno=101, col_offset=4)], List([Name('dummy', Load(), lineno=101, col_offset=13)], Load(), lineno=101, col_offset=12), lineno=101, col_offset=4), Assign([Name('cache', Store(), lineno=102, col_offset=4)], Dict([Num(0, lineno=102, col_offset=13)], [Name('dummy', Load(), lineno=102, col_offset=16)], lineno=102, col_offset=12), lineno=102, col_offset=4), Assign([Name('index', Store(), lineno=103, col_offset=4)], BinOp(List([Num(0, lineno=103, col_offset=13)], Load(), lineno=103, col_offset=12), Mult(), Call(Name('len', Load(), lineno=103, col_offset=18), [Attribute(Name('unicode', Load(), lineno=103, col_offset=22), 'chars', Load(), lineno=103, col_offset=22)], [], None, None, lineno=103, col_offset=18), lineno=103, col_offset=12), lineno=103, col_offset=4), Assign([Name('FILE', Store(), lineno=105, col_offset=4)], Str('Modules/unicodedata_db.h', lineno=105, col_offset=11), lineno=105, col_offset=4), Print(None, [Str('--- Preparing', lineno=107, col_offset=10), Name('FILE', Load(), lineno=107, col_offset=27), Str('...', lineno=107, col_offset=33)], True, lineno=107, col_offset=4), For(Name('char', Store(), lineno=111, col_offset=8), Attribute(Name('unicode', Load(), lineno=111, col_offset=16), 'chars', Load(), lineno=111, col_offset=16), [Assign([Name('record', Store(), lineno=112, col_offset=8)], Subscript(Attribute(Name('unicode', Load(), lineno=112, col_offset=17), 'table', Load(), lineno=112, col_offset=17), Index(Name('char', Load(), lineno=112, col_offset=31)), Load(), lineno=112, col_offset=17), lineno=112, col_offset=8), If(Name('record', Load(), lineno=113, col_offset=11), [Assign([Name('category', Store(), lineno=115, col_offset=12)], Call(Attribute(Name('CATEGORY_NAMES', Load(), lineno=115, col_offset=23), 'index', Load(), lineno=115, col_offset=23), [Subscript(Name('record', Load(), lineno=115, col_offset=44), Index(Num(2, lineno=115, col_offset=51)), Load(), lineno=115, col_offset=44)], [], None, None, lineno=115, col_offset=23), lineno=115, col_offset=12), Assign([Name('combining', Store(), lineno=116, col_offset=12)], Call(Name('int', Load(), lineno=116, col_offset=24), [Subscript(Name('record', Load(), lineno=116, col_offset=28), Index(Num(3, lineno=116, col_offset=35)), Load(), lineno=116, col_offset=28)], [], None, None, lineno=116, col_offset=24), lineno=116, col_offset=12), Assign([Name('bidirectional', Store(), lineno=117, col_offset=12)], Call(Attribute(Name('BIDIRECTIONAL_NAMES', Load(), lineno=117, col_offset=28), 'index', Load(), lineno=117, col_offset=28), [Subscript(Name('record', Load(), lineno=117, col_offset=54), Index(Num(4, lineno=117, col_offset=61)), Load(), lineno=117, col_offset=54)], [], None, None, lineno=117, col_offset=28), lineno=117, col_offset=12), Assign([Name('mirrored', Store(), lineno=118, col_offset=12)], Compare(Subscript(Name('record', Load(), lineno=118, col_offset=23), Index(Num(9, lineno=118, col_offset=30)), Load(), lineno=118, col_offset=23), [Eq()], [Str('Y', lineno=118, col_offset=36)], lineno=118, col_offset=23), lineno=118, col_offset=12), Assign([Name('eastasianwidth', Store(), lineno=119, col_offset=12)], Call(Attribute(Name('EASTASIANWIDTH_NAMES', Load(), lineno=119, col_offset=29), 'index', Load(), lineno=119, col_offset=29), [Subscript(Name('record', Load(), lineno=119, col_offset=56), Index(Num(15, lineno=119, col_offset=63)), Load(), lineno=119, col_offset=56)], [], None, None, lineno=119, col_offset=29), lineno=119, col_offset=12), Assign([Name('normalizationquickcheck', Store(), lineno=120, col_offset=12)], Subscript(Name('record', Load(), lineno=120, col_offset=38), Index(Num(17, lineno=120, col_offset=45)), Load(), lineno=120, col_offset=38), lineno=120, col_offset=12), Assign([Name('item', Store(), lineno=121, col_offset=12)], Tuple([Name('category', Load(), lineno=122, col_offset=16), Name('combining', Load(), lineno=122, col_offset=26), Name('bidirectional', Load(), lineno=122, col_offset=37), Name('mirrored', Load(), lineno=122, col_offset=52), Name('eastasianwidth', Load(), lineno=122, col_offset=62), Name('normalizationquickcheck', Load(), lineno=123, col_offset=16)], Load(), lineno=122, col_offset=16), lineno=121, col_offset=12), Assign([Name('i', Store(), lineno=126, col_offset=12)], Call(Attribute(Name('cache', Load(), lineno=126, col_offset=16), 'get', Load(), lineno=126, col_offset=16), [Name('item', Load(), lineno=126, col_offset=26)], [], None, None, lineno=126, col_offset=16), lineno=126, col_offset=12), If(Compare(Name('i', Load(), lineno=127, col_offset=15), [Is()], [Name('None', Load(), lineno=127, col_offset=20)], lineno=127, col_offset=15), [Assign([Subscript(Name('cache', Load(), lineno=128, col_offset=16), Index(Name('item', Load(), lineno=128, col_offset=22)), Store(), lineno=128, col_offset=16), Name('i', Store(), lineno=128, col_offset=30)], Call(Name('len', Load(), lineno=128, col_offset=34), [Name('table', Load(), lineno=128, col_offset=38)], [], None, None, lineno=128, col_offset=34), lineno=128, col_offset=16), Expr(Call(Attribute(Name('table', Load(), lineno=129, col_offset=16), 'append', Load(), lineno=129, col_offset=16), [Name('item', Load(), lineno=129, col_offset=29)], [], None, None, lineno=129, col_offset=16), lineno=129, col_offset=16)], [], lineno=127, col_offset=12), Assign([Subscript(Name('index', Load(), lineno=130, col_offset=12), Index(Name('char', Load(), lineno=130, col_offset=18)), Store(), lineno=130, col_offset=12)], Name('i', Load(), lineno=130, col_offset=26), lineno=130, col_offset=12)], [], lineno=113, col_offset=8)], [], lineno=111, col_offset=4), Assign([Name('decomp_data', Store(), lineno=134, col_offset=4)], List([Num(0, lineno=134, col_offset=19)], Load(), lineno=134, col_offset=18), lineno=134, col_offset=4), Assign([Name('decomp_prefix', Store(), lineno=135, col_offset=4)], List([Str('', lineno=135, col_offset=21)], Load(), lineno=135, col_offset=20), lineno=135, col_offset=4), Assign([Name('decomp_index', Store(), lineno=136, col_offset=4)], BinOp(List([Num(0, lineno=136, col_offset=20)], Load(), lineno=136, col_offset=19), Mult(), Call(Name('len', Load(), lineno=136, col_offset=25), [Attribute(Name('unicode', Load(), lineno=136, col_offset=29), 'chars', Load(), lineno=136, col_offset=29)], [], None, None, lineno=136, col_offset=25), lineno=136, col_offset=19), lineno=136, col_offset=4), Assign([Name('decomp_size', Store(), lineno=137, col_offset=4)], Num(0, lineno=137, col_offset=18), lineno=137, col_offset=4), Assign([Name('comp_pairs', Store(), lineno=139, col_offset=4)], List([], Load(), lineno=139, col_offset=17), lineno=139, col_offset=4), Assign([Name('comp_first', Store(), lineno=140, col_offset=4)], BinOp(List([Name('None', Load(), lineno=140, col_offset=18)], Load(), lineno=140, col_offset=17), Mult(), Call(Name('len', Load(), lineno=140, col_offset=26), [Attribute(Name('unicode', Load(), lineno=140, col_offset=30), 'chars', Load(), lineno=140, col_offset=30)], [], None, None, lineno=140, col_offset=26), lineno=140, col_offset=17), lineno=140, col_offset=4), Assign([Name('comp_last', Store(), lineno=141, col_offset=4)], BinOp(List([Name('None', Load(), lineno=141, col_offset=17)], Load(), lineno=141, col_offset=16), Mult(), Call(Name('len', Load(), lineno=141, col_offset=25), [Attribute(Name('unicode', Load(), lineno=141, col_offset=29), 'chars', Load(), lineno=141, col_offset=29)], [], None, None, lineno=141, col_offset=25), lineno=141, col_offset=16), lineno=141, col_offset=4), For(Name('char', Store(), lineno=143, col_offset=8), Attribute(Name('unicode', Load(), lineno=143, col_offset=16), 'chars', Load(), lineno=143, col_offset=16), [Assign([Name('record', Store(), lineno=144, col_offset=8)], Subscript(Attribute(Name('unicode', Load(), lineno=144, col_offset=17), 'table', Load(), lineno=144, col_offset=17), Index(Name('char', Load(), lineno=144, col_offset=31)), Load(), lineno=144, col_offset=17), lineno=144, col_offset=8), If(Name('record', Load(), lineno=145, col_offset=11), [If(Subscript(Name('record', Load(), lineno=146, col_offset=15), Index(Num(5, lineno=146, col_offset=22)), Load(), lineno=146, col_offset=15), [Assign([Name('decomp', Store(), lineno=147, col_offset=16)], Call(Attribute(Subscript(Name('record', Load(), lineno=147, col_offset=25), Index(Num(5, lineno=147, col_offset=32)), Load(), lineno=147, col_offset=25), 'split', Load(), lineno=147, col_offset=25), [], [], None, None, lineno=147, col_offset=25), lineno=147, col_offset=16), If(Compare(Call(Name('len', Load(), lineno=148, col_offset=19), [Name('decomp', Load(), lineno=148, col_offset=23)], [], None, None, lineno=148, col_offset=19), [Gt()], [Num(19, lineno=148, col_offset=33)], lineno=148, col_offset=19), [Raise(Name('Exception', Load(), lineno=149, col_offset=26), BinOp(Str('character %x has a decomposition too large for nfd_nfkd', lineno=149, col_offset=37), Mod(), Name('char', Load(), lineno=149, col_offset=97), lineno=149, col_offset=37), None, lineno=149, col_offset=20)], [], lineno=148, col_offset=16), If(Compare(Subscript(Subscript(Name('decomp', Load(), lineno=151, col_offset=19), Index(Num(0, lineno=151, col_offset=26)), Load(), lineno=151, col_offset=19), Index(Num(0, lineno=151, col_offset=29)), Load(), lineno=151, col_offset=19), [Eq()], [Str('<', lineno=151, col_offset=35)], lineno=151, col_offset=19), [Assign([Name('prefix', Store(), lineno=152, col_offset=20)], Call(Attribute(Name('decomp', Load(), lineno=152, col_offset=29), 'pop', Load(), lineno=152, col_offset=29), [Num(0, lineno=152, col_offset=40)], [], None, None, lineno=152, col_offset=29), lineno=152, col_offset=20)], [Assign([Name('prefix', Store(), lineno=154, col_offset=20)], Str('', lineno=154, col_offset=29), lineno=154, col_offset=20)], lineno=151, col_offset=16), TryExcept([Assign([Name('i', Store(), lineno=156, col_offset=20)], Call(Attribute(Name('decomp_prefix', Load(), lineno=156, col_offset=24), 'index', Load(), lineno=156, col_offset=24), [Name('prefix', Load(), lineno=156, col_offset=44)], [], None, None, lineno=156, col_offset=24), lineno=156, col_offset=20)], [ExceptHandler(Name('ValueError', Load(), lineno=157, col_offset=23), None, [Assign([Name('i', Store(), lineno=158, col_offset=20)], Call(Name('len', Load(), lineno=158, col_offset=24), [Name('decomp_prefix', Load(), lineno=158, col_offset=28)], [], None, None, lineno=158, col_offset=24), lineno=158, col_offset=20), Expr(Call(Attribute(Name('decomp_prefix', Load(), lineno=159, col_offset=20), 'append', Load(), lineno=159, col_offset=20), [Name('prefix', Load(), lineno=159, col_offset=41)], [], None, None, lineno=159, col_offset=20), lineno=159, col_offset=20)], lineno=157, col_offset=16)], [], lineno=155, col_offset=16), Assign([Name('prefix', Store(), lineno=160, col_offset=16)], Name('i', Load(), lineno=160, col_offset=25), lineno=160, col_offset=16), Assert(Compare(Name('prefix', Load(), lineno=161, col_offset=23), [Lt()], [Num(256, lineno=161, col_offset=32)], lineno=161, col_offset=23), None, lineno=161, col_offset=16), Assign([Name('decomp', Store(), lineno=163, col_offset=16)], BinOp(List([BinOp(Name('prefix', Load(), lineno=163, col_offset=26), Add(), BinOp(Call(Name('len', Load(), lineno=163, col_offset=36), [Name('decomp', Load(), lineno=163, col_offset=40)], [], None, None, lineno=163, col_offset=36), LShift(), Num(8, lineno=163, col_offset=49), lineno=163, col_offset=36), lineno=163, col_offset=26)], Load(), lineno=163, col_offset=25), Add(), ListComp(Call(Name('int', Load(), lineno=163, col_offset=56), [Name('s', Load(), lineno=163, col_offset=60), Num(16, lineno=163, col_offset=63)], [], None, None, lineno=163, col_offset=56), [comprehension(Name('s', Store(), lineno=163, col_offset=71), Name('decomp', Load(), lineno=163, col_offset=76), [])], lineno=163, col_offset=56), lineno=163, col_offset=25), lineno=163, col_offset=16), If(BoolOp(And(), [UnaryOp(Not(), Name('prefix', Load(), lineno=165, col_offset=23), lineno=165, col_offset=19), Compare(Call(Name('len', Load(), lineno=165, col_offset=34), [Name('decomp', Load(), lineno=165, col_offset=38)], [], None, None, lineno=165, col_offset=34), [Eq()], [Num(3, lineno=165, col_offset=49)], lineno=165, col_offset=34), Compare(Name('char', Load(), lineno=166, col_offset=19), [NotIn()], [Attribute(Name('unicode', Load(), lineno=166, col_offset=31), 'exclusions', Load(), lineno=166, col_offset=31)], lineno=166, col_offset=19), Compare(Subscript(Subscript(Attribute(Name('unicode', Load(), lineno=167, col_offset=19), 'table', Load(), lineno=167, col_offset=19), Index(Subscript(Name('decomp', Load(), lineno=167, col_offset=33), Index(Num(1, lineno=167, col_offset=40)), Load(), lineno=167, col_offset=33)), Load(), lineno=167, col_offset=19), Index(Num(3, lineno=167, col_offset=44)), Load(), lineno=167, col_offset=19), [Eq()], [Str('0', lineno=167, col_offset=50)], lineno=167, col_offset=19)], lineno=165, col_offset=19), [Assign([Tuple([Name('p', Store(), lineno=168, col_offset=20), Name('l', Store(), lineno=168, col_offset=23), Name('r', Store(), lineno=168, col_offset=26)], Store(), lineno=168, col_offset=20)], Name('decomp', Load(), lineno=168, col_offset=30), lineno=168, col_offset=20), Assign([Subscript(Name('comp_first', Load(), lineno=169, col_offset=20), Index(Name('l', Load(), lineno=169, col_offset=31)), Store(), lineno=169, col_offset=20)], Num(1, lineno=169, col_offset=36), lineno=169, col_offset=20), Assign([Subscript(Name('comp_last', Load(), lineno=170, col_offset=20), Index(Name('r', Load(), lineno=170, col_offset=30)), Store(), lineno=170, col_offset=20)], Num(1, lineno=170, col_offset=35), lineno=170, col_offset=20), Expr(Call(Attribute(Name('comp_pairs', Load(), lineno=171, col_offset=20), 'append', Load(), lineno=171, col_offset=20), [Tuple([Name('l', Load(), lineno=171, col_offset=39), Name('r', Load(), lineno=171, col_offset=41), Name('char', Load(), lineno=171, col_offset=43)], Load(), lineno=171, col_offset=39)], [], None, None, lineno=171, col_offset=20), lineno=171, col_offset=20)], [], lineno=165, col_offset=16), TryExcept([Assign([Name('i', Store(), lineno=173, col_offset=20)], Call(Attribute(Name('decomp_data', Load(), lineno=173, col_offset=24), 'index', Load(), lineno=173, col_offset=24), [Name('decomp', Load(), lineno=173, col_offset=42)], [], None, None, lineno=173, col_offset=24), lineno=173, col_offset=20)], [ExceptHandler(Name('ValueError', Load(), lineno=174, col_offset=23), None, [Assign([Name('i', Store(), lineno=175, col_offset=20)], Call(Name('len', Load(), lineno=175, col_offset=24), [Name('decomp_data', Load(), lineno=175, col_offset=28)], [], None, None, lineno=175, col_offset=24), lineno=175, col_offset=20), Expr(Call(Attribute(Name('decomp_data', Load(), lineno=176, col_offset=20), 'extend', Load(), lineno=176, col_offset=20), [Name('decomp', Load(), lineno=176, col_offset=39)], [], None, None, lineno=176, col_offset=20), lineno=176, col_offset=20), Assign([Name('decomp_size', Store(), lineno=177, col_offset=20)], BinOp(Name('decomp_size', Load(), lineno=177, col_offset=34), Add(), BinOp(Call(Name('len', Load(), lineno=177, col_offset=48), [Name('decomp', Load(), lineno=177, col_offset=52)], [], None, None, lineno=177, col_offset=48), Mult(), Num(2, lineno=177, col_offset=62), lineno=177, col_offset=48), lineno=177, col_offset=34), lineno=177, col_offset=20)], lineno=174, col_offset=16)], [], lineno=172, col_offset=16)], [Assign([Name('i', Store(), lineno=179, col_offset=16)], Num(0, lineno=179, col_offset=20), lineno=179, col_offset=16)], lineno=146, col_offset=12), Assign([Subscript(Name('decomp_index', Load(), lineno=180, col_offset=12), Index(Name('char', Load(), lineno=180, col_offset=25)), Store(), lineno=180, col_offset=12)], Name('i', Load(), lineno=180, col_offset=33), lineno=180, col_offset=12)], [], lineno=145, col_offset=8)], [], lineno=143, col_offset=4), Assign([Name('f', Store(), lineno=182, col_offset=4), Name('l', Store(), lineno=182, col_offset=8)], Num(0, lineno=182, col_offset=12), lineno=182, col_offset=4), Assign([Name('comp_first_ranges', Store(), lineno=183, col_offset=4)], List([], Load(), lineno=183, col_offset=24), lineno=183, col_offset=4), Assign([Name('comp_last_ranges', Store(), lineno=184, col_offset=4)], List([], Load(), lineno=184, col_offset=23), lineno=184, col_offset=4), Assign([Name('prev_f', Store(), lineno=185, col_offset=4), Name('prev_l', Store(), lineno=185, col_offset=13)], Name('None', Load(), lineno=185, col_offset=22), lineno=185, col_offset=4), For(Name('i', Store(), lineno=186, col_offset=8), Attribute(Name('unicode', Load(), lineno=186, col_offset=13), 'chars', Load(), lineno=186, col_offset=13), [If(Compare(Subscript(Name('comp_first', Load(), lineno=187, col_offset=11), Index(Name('i', Load(), lineno=187, col_offset=22)), Load(), lineno=187, col_offset=11), [IsNot()], [Name('None', Load(), lineno=187, col_offset=32)], lineno=187, col_offset=11), [Assign([Subscript(Name('comp_first', Load(), lineno=188, col_offset=12), Index(Name('i', Load(), lineno=188, col_offset=23)), Store(), lineno=188, col_offset=12)], Name('f', Load(), lineno=188, col_offset=28), lineno=188, col_offset=12), AugAssign(Name('f', Store(), lineno=189, col_offset=12), Add(), Num(1, lineno=189, col_offset=17), lineno=189, col_offset=12), If(Compare(Name('prev_f', Load(), lineno=190, col_offset=15), [Is()], [Name('None', Load(), lineno=190, col_offset=25)], lineno=190, col_offset=15), [Assign([Name('prev_f', Store(), lineno=191, col_offset=16)], Tuple([Name('i', Load(), lineno=191, col_offset=26), Name('i', Load(), lineno=191, col_offset=28)], Load(), lineno=191, col_offset=26), lineno=191, col_offset=16)], [If(Compare(BinOp(Subscript(Name('prev_f', Load(), lineno=192, col_offset=17), Index(Num(1, lineno=192, col_offset=24)), Load(), lineno=192, col_offset=17), Add(), Num(1, lineno=192, col_offset=27), lineno=192, col_offset=17), [Eq()], [Name('i', Load(), lineno=192, col_offset=32)], lineno=192, col_offset=17), [Assign([Name('prev_f', Store(), lineno=193, col_offset=16)], Tuple([Subscript(Name('prev_f', Load(), lineno=193, col_offset=25), Index(Num(0, lineno=193, col_offset=32)), Load(), lineno=193, col_offset=25), Name('i', Load(), lineno=193, col_offset=35)], Load(), lineno=193, col_offset=25), lineno=193, col_offset=16)], [Expr(Call(Attribute(Name('comp_first_ranges', Load(), lineno=195, col_offset=16), 'append', Load(), lineno=195, col_offset=16), [Name('prev_f', Load(), lineno=195, col_offset=41)], [], None, None, lineno=195, col_offset=16), lineno=195, col_offset=16), Assign([Name('prev_f', Store(), lineno=196, col_offset=16)], Tuple([Name('i', Load(), lineno=196, col_offset=26), Name('i', Load(), lineno=196, col_offset=28)], Load(), lineno=196, col_offset=26), lineno=196, col_offset=16)], lineno=192, col_offset=17)], lineno=190, col_offset=12)], [], lineno=187, col_offset=8), If(Compare(Subscript(Name('comp_last', Load(), lineno=197, col_offset=11), Index(Name('i', Load(), lineno=197, col_offset=21)), Load(), lineno=197, col_offset=11), [IsNot()], [Name('None', Load(), lineno=197, col_offset=31)], lineno=197, col_offset=11), [Assign([Subscript(Name('comp_last', Load(), lineno=198, col_offset=12), Index(Name('i', Load(), lineno=198, col_offset=22)), Store(), lineno=198, col_offset=12)], Name('l', Load(), lineno=198, col_offset=27), lineno=198, col_offset=12), AugAssign(Name('l', Store(), lineno=199, col_offset=12), Add(), Num(1, lineno=199, col_offset=17), lineno=199, col_offset=12), If(Compare(Name('prev_l', Load(), lineno=200, col_offset=15), [Is()], [Name('None', Load(), lineno=200, col_offset=25)], lineno=200, col_offset=15), [Assign([Name('prev_l', Store(), lineno=201, col_offset=16)], Tuple([Name('i', Load(), lineno=201, col_offset=26), Name('i', Load(), lineno=201, col_offset=28)], Load(), lineno=201, col_offset=26), lineno=201, col_offset=16)], [If(Compare(BinOp(Subscript(Name('prev_l', Load(), lineno=202, col_offset=17), Index(Num(1, lineno=202, col_offset=24)), Load(), lineno=202, col_offset=17), Add(), Num(1, lineno=202, col_offset=27), lineno=202, col_offset=17), [Eq()], [Name('i', Load(), lineno=202, col_offset=32)], lineno=202, col_offset=17), [Assign([Name('prev_l', Store(), lineno=203, col_offset=16)], Tuple([Subscript(Name('prev_l', Load(), lineno=203, col_offset=25), Index(Num(0, lineno=203, col_offset=32)), Load(), lineno=203, col_offset=25), Name('i', Load(), lineno=203, col_offset=35)], Load(), lineno=203, col_offset=25), lineno=203, col_offset=16)], [Expr(Call(Attribute(Name('comp_last_ranges', Load(), lineno=205, col_offset=16), 'append', Load(), lineno=205, col_offset=16), [Name('prev_l', Load(), lineno=205, col_offset=40)], [], None, None, lineno=205, col_offset=16), lineno=205, col_offset=16), Assign([Name('prev_l', Store(), lineno=206, col_offset=16)], Tuple([Name('i', Load(), lineno=206, col_offset=26), Name('i', Load(), lineno=206, col_offset=28)], Load(), lineno=206, col_offset=26), lineno=206, col_offset=16)], lineno=202, col_offset=17)], lineno=200, col_offset=12)], [], lineno=197, col_offset=8)], [], lineno=186, col_offset=4), Expr(Call(Attribute(Name('comp_first_ranges', Load(), lineno=207, col_offset=4), 'append', Load(), lineno=207, col_offset=4), [Name('prev_f', Load(), lineno=207, col_offset=29)], [], None, None, lineno=207, col_offset=4), lineno=207, col_offset=4), Expr(Call(Attribute(Name('comp_last_ranges', Load(), lineno=208, col_offset=4), 'append', Load(), lineno=208, col_offset=4), [Name('prev_l', Load(), lineno=208, col_offset=28)], [], None, None, lineno=208, col_offset=4), lineno=208, col_offset=4), Assign([Name('total_first', Store(), lineno=209, col_offset=4)], Name('f', Load(), lineno=209, col_offset=18), lineno=209, col_offset=4), Assign([Name('total_last', Store(), lineno=210, col_offset=4)], Name('l', Load(), lineno=210, col_offset=17), lineno=210, col_offset=4), Assign([Name('comp_data', Store(), lineno=212, col_offset=4)], BinOp(List([Num(0, lineno=212, col_offset=17)], Load(), lineno=212, col_offset=16), Mult(), BinOp(Name('total_first', Load(), lineno=212, col_offset=21), Mult(), Name('total_last', Load(), lineno=212, col_offset=33), lineno=212, col_offset=21), lineno=212, col_offset=16), lineno=212, col_offset=4), For(Tuple([Name('f', Store(), lineno=213, col_offset=8), Name('l', Store(), lineno=213, col_offset=10), Name('char', Store(), lineno=213, col_offset=12)], Store(), lineno=213, col_offset=8), Name('comp_pairs', Load(), lineno=213, col_offset=20), [Assign([Name('f', Store(), lineno=214, col_offset=8)], Subscript(Name('comp_first', Load(), lineno=214, col_offset=12), Index(Name('f', Load(), lineno=214, col_offset=23)), Load(), lineno=214, col_offset=12), lineno=214, col_offset=8), Assign([Name('l', Store(), lineno=215, col_offset=8)], Subscript(Name('comp_last', Load(), lineno=215, col_offset=12), Index(Name('l', Load(), lineno=215, col_offset=22)), Load(), lineno=215, col_offset=12), lineno=215, col_offset=8), Assign([Subscript(Name('comp_data', Load(), lineno=216, col_offset=8), Index(BinOp(BinOp(Name('f', Load(), lineno=216, col_offset=18), Mult(), Name('total_last', Load(), lineno=216, col_offset=20), lineno=216, col_offset=18), Add(), Name('l', Load(), lineno=216, col_offset=31), lineno=216, col_offset=18)), Store(), lineno=216, col_offset=8)], Name('char', Load(), lineno=216, col_offset=36), lineno=216, col_offset=8)], [], lineno=213, col_offset=4), Print(None, [Call(Name('len', Load(), lineno=218, col_offset=10), [Name('table', Load(), lineno=218, col_offset=14)], [], None, None, lineno=218, col_offset=10), Str('unique properties', lineno=218, col_offset=22)], True, lineno=218, col_offset=4), Print(None, [Call(Name('len', Load(), lineno=219, col_offset=10), [Name('decomp_prefix', Load(), lineno=219, col_offset=14)], [], None, None, lineno=219, col_offset=10), Str('unique decomposition prefixes', lineno=219, col_offset=30)], True, lineno=219, col_offset=4), Print(None, [Call(Name('len', Load(), lineno=220, col_offset=10), [Name('decomp_data', Load(), lineno=220, col_offset=14)], [], None, None, lineno=220, col_offset=10), Str('unique decomposition entries:', lineno=220, col_offset=28)], False, lineno=220, col_offset=4), Print(None, [Name('decomp_size', Load(), lineno=221, col_offset=10), Str('bytes', lineno=221, col_offset=23)], True, lineno=221, col_offset=4), Print(None, [Name('total_first', Load(), lineno=222, col_offset=10), Str('first characters in NFC', lineno=222, col_offset=23)], True, lineno=222, col_offset=4), Print(None, [Name('total_last', Load(), lineno=223, col_offset=10), Str('last characters in NFC', lineno=223, col_offset=22)], True, lineno=223, col_offset=4), Print(None, [Call(Name('len', Load(), lineno=224, col_offset=10), [Name('comp_pairs', Load(), lineno=224, col_offset=14)], [], None, None, lineno=224, col_offset=10), Str('NFC pairs', lineno=224, col_offset=27)], True, lineno=224, col_offset=4), Print(None, [Str('--- Writing', lineno=226, col_offset=10), Name('FILE', Load(), lineno=226, col_offset=25), Str('...', lineno=226, col_offset=31)], True, lineno=226, col_offset=4), Assign([Name('fp', Store(), lineno=228, col_offset=4)], Call(Name('open', Load(), lineno=228, col_offset=9), [Name('FILE', Load(), lineno=228, col_offset=14), Str('w', lineno=228, col_offset=20)], [], None, None, lineno=228, col_offset=9), lineno=228, col_offset=4), Print(Name('fp', Load(), lineno=229, col_offset=12), [BinOp(Str('/* this file was generated by %s %s */', lineno=229, col_offset=16), Mod(), Tuple([Name('SCRIPT', Load(), lineno=229, col_offset=60), Name('VERSION', Load(), lineno=229, col_offset=68)], Load(), lineno=229, col_offset=60), lineno=229, col_offset=16)], True, lineno=229, col_offset=4), Print(Name('fp', Load(), lineno=230, col_offset=12), [], True, lineno=230, col_offset=4), Print(Name('fp', Load(), lineno=231, col_offset=12), [BinOp(Str('#define UNIDATA_VERSION "%s"', lineno=231, col_offset=16), Mod(), Name('UNIDATA_VERSION', Load(), lineno=231, col_offset=49), lineno=231, col_offset=16)], True, lineno=231, col_offset=4), Print(Name('fp', Load(), lineno=232, col_offset=12), [Str('/* a list of unique database records */', lineno=232, col_offset=16)], True, lineno=232, col_offset=4), Print(Name('fp', Load(), lineno=233, col_offset=12), [Str('const _PyUnicode_DatabaseRecord _PyUnicode_Database_Records[] = {', lineno=234, col_offset=10)], True, lineno=233, col_offset=4), For(Name('item', Store(), lineno=235, col_offset=8), Name('table', Load(), lineno=235, col_offset=16), [Print(Name('fp', Load(), lineno=236, col_offset=16), [BinOp(Str('    {%d, %d, %d, %d, %d, %d},', lineno=236, col_offset=20), Mod(), Name('item', Load(), lineno=236, col_offset=54), lineno=236, col_offset=20)], True, lineno=236, col_offset=8)], [], lineno=235, col_offset=4), Print(Name('fp', Load(), lineno=237, col_offset=12), [Str('};', lineno=237, col_offset=16)], True, lineno=237, col_offset=4), Print(Name('fp', Load(), lineno=238, col_offset=12), [], True, lineno=238, col_offset=4), Print(Name('fp', Load(), lineno=240, col_offset=12), [Str('/* Reindexing of NFC first characters. */', lineno=240, col_offset=16)], True, lineno=240, col_offset=4), Print(Name('fp', Load(), lineno=241, col_offset=12), [Str('#define TOTAL_FIRST', lineno=241, col_offset=16), Name('total_first', Load(), lineno=241, col_offset=38)], True, lineno=241, col_offset=4), Print(Name('fp', Load(), lineno=242, col_offset=12), [Str('#define TOTAL_LAST', lineno=242, col_offset=16), Name('total_last', Load(), lineno=242, col_offset=37)], True, lineno=242, col_offset=4), Print(Name('fp', Load(), lineno=243, col_offset=12), [Str('struct reindex{int start;short count,index;};', lineno=243, col_offset=16)], True, lineno=243, col_offset=4), Print(Name('fp', Load(), lineno=244, col_offset=12), [Str('static struct reindex nfc_first[] = {', lineno=244, col_offset=16)], True, lineno=244, col_offset=4), For(Tuple([Name('start', Store(), lineno=245, col_offset=8), Name('end', Store(), lineno=245, col_offset=14)], Store(), lineno=245, col_offset=8), Name('comp_first_ranges', Load(), lineno=245, col_offset=21), [Print(Name('fp', Load(), lineno=246, col_offset=16), [BinOp(Str('  { %d, %d, %d},', lineno=246, col_offset=19), Mod(), Tuple([Name('start', Load(), lineno=246, col_offset=41), BinOp(Name('end', Load(), lineno=246, col_offset=47), Sub(), Name('start', Load(), lineno=246, col_offset=51), lineno=246, col_offset=47), Subscript(Name('comp_first', Load(), lineno=246, col_offset=57), Index(Name('start', Load(), lineno=246, col_offset=68)), Load(), lineno=246, col_offset=57)], Load(), lineno=246, col_offset=41), lineno=246, col_offset=19)], True, lineno=246, col_offset=8)], [], lineno=245, col_offset=4), Print(Name('fp', Load(), lineno=247, col_offset=12), [Str('  {0,0,0}', lineno=247, col_offset=15)], True, lineno=247, col_offset=4), Print(Name('fp', Load(), lineno=248, col_offset=12), [Str('};\n', lineno=248, col_offset=15)], True, lineno=248, col_offset=4), Print(Name('fp', Load(), lineno=249, col_offset=12), [Str('static struct reindex nfc_last[] = {', lineno=249, col_offset=16)], True, lineno=249, col_offset=4), For(Tuple([Name('start', Store(), lineno=250, col_offset=8), Name('end', Store(), lineno=250, col_offset=14)], Store(), lineno=250, col_offset=8), Name('comp_last_ranges', Load(), lineno=250, col_offset=21), [Print(Name('fp', Load(), lineno=251, col_offset=16), [BinOp(Str('  { %d, %d, %d},', lineno=251, col_offset=19), Mod(), Tuple([Name('start', Load(), lineno=251, col_offset=41), BinOp(Name('end', Load(), lineno=251, col_offset=47), Sub(), Name('start', Load(), lineno=251, col_offset=51), lineno=251, col_offset=47), Subscript(Name('comp_last', Load(), lineno=251, col_offset=57), Index(Name('start', Load(), lineno=251, col_offset=67)), Load(), lineno=251, col_offset=57)], Load(), lineno=251, col_offset=41), lineno=251, col_offset=19)], True, lineno=251, col_offset=8)], [], lineno=250, col_offset=4), Print(Name('fp', Load(), lineno=252, col_offset=12), [Str('  {0,0,0}', lineno=252, col_offset=15)], True, lineno=252, col_offset=4), Print(Name('fp', Load(), lineno=253, col_offset=12), [Str('};\n', lineno=253, col_offset=15)], True, lineno=253, col_offset=4), Print(Name('fp', Load(), lineno=258, col_offset=12), [Str('/* string literals */', lineno=258, col_offset=16)], True, lineno=258, col_offset=4), Print(Name('fp', Load(), lineno=259, col_offset=12), [Str('const char *_PyUnicode_CategoryNames[] = {', lineno=259, col_offset=16)], True, lineno=259, col_offset=4), For(Name('name', Store(), lineno=260, col_offset=8), Name('CATEGORY_NAMES', Load(), lineno=260, col_offset=16), [Print(Name('fp', Load(), lineno=261, col_offset=16), [BinOp(Str('    "%s",', lineno=261, col_offset=20), Mod(), Name('name', Load(), lineno=261, col_offset=36), lineno=261, col_offset=20)], True, lineno=261, col_offset=8)], [], lineno=260, col_offset=4), Print(Name('fp', Load(), lineno=262, col_offset=12), [Str('    NULL', lineno=262, col_offset=16)], True, lineno=262, col_offset=4), Print(Name('fp', Load(), lineno=263, col_offset=12), [Str('};', lineno=263, col_offset=16)], True, lineno=263, col_offset=4), Print(Name('fp', Load(), lineno=265, col_offset=12), [Str('const char *_PyUnicode_BidirectionalNames[] = {', lineno=265, col_offset=16)], True, lineno=265, col_offset=4), For(Name('name', Store(), lineno=266, col_offset=8), Name('BIDIRECTIONAL_NAMES', Load(), lineno=266, col_offset=16), [Print(Name('fp', Load(), lineno=267, col_offset=16), [BinOp(Str('    "%s",', lineno=267, col_offset=20), Mod(), Name('name', Load(), lineno=267, col_offset=36), lineno=267, col_offset=20)], True, lineno=267, col_offset=8)], [], lineno=266, col_offset=4), Print(Name('fp', Load(), lineno=268, col_offset=12), [Str('    NULL', lineno=268, col_offset=16)], True, lineno=268, col_offset=4), Print(Name('fp', Load(), lineno=269, col_offset=12), [Str('};', lineno=269, col_offset=16)], True, lineno=269, col_offset=4), Print(Name('fp', Load(), lineno=271, col_offset=12), [Str('const char *_PyUnicode_EastAsianWidthNames[] = {', lineno=271, col_offset=16)], True, lineno=271, col_offset=4), For(Name('name', Store(), lineno=272, col_offset=8), Name('EASTASIANWIDTH_NAMES', Load(), lineno=272, col_offset=16), [Print(Name('fp', Load(), lineno=273, col_offset=16), [BinOp(Str('    "%s",', lineno=273, col_offset=20), Mod(), Name('name', Load(), lineno=273, col_offset=36), lineno=273, col_offset=20)], True, lineno=273, col_offset=8)], [], lineno=272, col_offset=4), Print(Name('fp', Load(), lineno=274, col_offset=12), [Str('    NULL', lineno=274, col_offset=16)], True, lineno=274, col_offset=4), Print(Name('fp', Load(), lineno=275, col_offset=12), [Str('};', lineno=275, col_offset=16)], True, lineno=275, col_offset=4), Print(Name('fp', Load(), lineno=277, col_offset=12), [Str('static const char *decomp_prefix[] = {', lineno=277, col_offset=16)], True, lineno=277, col_offset=4), For(Name('name', Store(), lineno=278, col_offset=8), Name('decomp_prefix', Load(), lineno=278, col_offset=16), [Print(Name('fp', Load(), lineno=279, col_offset=16), [BinOp(Str('    "%s",', lineno=279, col_offset=20), Mod(), Name('name', Load(), lineno=279, col_offset=36), lineno=279, col_offset=20)], True, lineno=279, col_offset=8)], [], lineno=278, col_offset=4), Print(Name('fp', Load(), lineno=280, col_offset=12), [Str('    NULL', lineno=280, col_offset=16)], True, lineno=280, col_offset=4), Print(Name('fp', Load(), lineno=281, col_offset=12), [Str('};', lineno=281, col_offset=16)], True, lineno=281, col_offset=4), Assign([Tuple([Name('index1', Store(), lineno=284, col_offset=4), Name('index2', Store(), lineno=284, col_offset=12), Name('shift', Store(), lineno=284, col_offset=20)], Store(), lineno=284, col_offset=4)], Call(Name('splitbins', Load(), lineno=284, col_offset=28), [Name('index', Load(), lineno=284, col_offset=38), Name('trace', Load(), lineno=284, col_offset=45)], [], None, None, lineno=284, col_offset=28), lineno=284, col_offset=4), Print(Name('fp', Load(), lineno=286, col_offset=12), [Str('/* index tables for the database records */', lineno=286, col_offset=16)], True, lineno=286, col_offset=4), Print(Name('fp', Load(), lineno=287, col_offset=12), [Str('#define SHIFT', lineno=287, col_offset=16), Name('shift', Load(), lineno=287, col_offset=33)], True, lineno=287, col_offset=4), Expr(Call(Attribute(Call(Name('Array', Load(), lineno=288, col_offset=4), [Str('index1', lineno=288, col_offset=10), Name('index1', Load(), lineno=288, col_offset=20)], [], None, None, lineno=288, col_offset=4), 'dump', Load(), lineno=288, col_offset=4), [Name('fp', Load(), lineno=288, col_offset=33), Name('trace', Load(), lineno=288, col_offset=37)], [], None, None, lineno=288, col_offset=4), lineno=288, col_offset=4), Expr(Call(Attribute(Call(Name('Array', Load(), lineno=289, col_offset=4), [Str('index2', lineno=289, col_offset=10), Name('index2', Load(), lineno=289, col_offset=20)], [], None, None, lineno=289, col_offset=4), 'dump', Load(), lineno=289, col_offset=4), [Name('fp', Load(), lineno=289, col_offset=33), Name('trace', Load(), lineno=289, col_offset=37)], [], None, None, lineno=289, col_offset=4), lineno=289, col_offset=4), Assign([Tuple([Name('index1', Store(), lineno=292, col_offset=4), Name('index2', Store(), lineno=292, col_offset=12), Name('shift', Store(), lineno=292, col_offset=20)], Store(), lineno=292, col_offset=4)], Call(Name('splitbins', Load(), lineno=292, col_offset=28), [Name('decomp_index', Load(), lineno=292, col_offset=38), Name('trace', Load(), lineno=292, col_offset=52)], [], None, None, lineno=292, col_offset=28), lineno=292, col_offset=4), Print(Name('fp', Load(), lineno=294, col_offset=12), [Str('/* decomposition data */', lineno=294, col_offset=16)], True, lineno=294, col_offset=4), Expr(Call(Attribute(Call(Name('Array', Load(), lineno=295, col_offset=4), [Str('decomp_data', lineno=295, col_offset=10), Name('decomp_data', Load(), lineno=295, col_offset=25)], [], None, None, lineno=295, col_offset=4), 'dump', Load(), lineno=295, col_offset=4), [Name('fp', Load(), lineno=295, col_offset=43), Name('trace', Load(), lineno=295, col_offset=47)], [], None, None, lineno=295, col_offset=4), lineno=295, col_offset=4), Print(Name('fp', Load(), lineno=297, col_offset=12), [Str('/* index tables for the decomposition data */', lineno=297, col_offset=16)], True, lineno=297, col_offset=4), Print(Name('fp', Load(), lineno=298, col_offset=12), [Str('#define DECOMP_SHIFT', lineno=298, col_offset=16), Name('shift', Load(), lineno=298, col_offset=40)], True, lineno=298, col_offset=4), Expr(Call(Attribute(Call(Name('Array', Load(), lineno=299, col_offset=4), [Str('decomp_index1', lineno=299, col_offset=10), Name('index1', Load(), lineno=299, col_offset=27)], [], None, None, lineno=299, col_offset=4), 'dump', Load(), lineno=299, col_offset=4), [Name('fp', Load(), lineno=299, col_offset=40), Name('trace', Load(), lineno=299, col_offset=44)], [], None, None, lineno=299, col_offset=4), lineno=299, col_offset=4), Expr(Call(Attribute(Call(Name('Array', Load(), lineno=300, col_offset=4), [Str('decomp_index2', lineno=300, col_offset=10), Name('index2', Load(), lineno=300, col_offset=27)], [], None, None, lineno=300, col_offset=4), 'dump', Load(), lineno=300, col_offset=4), [Name('fp', Load(), lineno=300, col_offset=40), Name('trace', Load(), lineno=300, col_offset=44)], [], None, None, lineno=300, col_offset=4), lineno=300, col_offset=4), Assign([Tuple([Name('index', Store(), lineno=302, col_offset=4), Name('index2', Store(), lineno=302, col_offset=11), Name('shift', Store(), lineno=302, col_offset=19)], Store(), lineno=302, col_offset=4)], Call(Name('splitbins', Load(), lineno=302, col_offset=27), [Name('comp_data', Load(), lineno=302, col_offset=37), Name('trace', Load(), lineno=302, col_offset=48)], [], None, None, lineno=302, col_offset=27), lineno=302, col_offset=4), Print(Name('fp', Load(), lineno=303, col_offset=12), [Str('/* NFC pairs */', lineno=303, col_offset=16)], True, lineno=303, col_offset=4), Print(Name('fp', Load(), lineno=304, col_offset=12), [Str('#define COMP_SHIFT', lineno=304, col_offset=16), Name('shift', Load(), lineno=304, col_offset=38)], True, lineno=304, col_offset=4), Expr(Call(Attribute(Call(Name('Array', Load(), lineno=305, col_offset=4), [Str('comp_index', lineno=305, col_offset=10), Name('index', Load(), lineno=305, col_offset=24)], [], None, None, lineno=305, col_offset=4), 'dump', Load(), lineno=305, col_offset=4), [Name('fp', Load(), lineno=305, col_offset=36), Name('trace', Load(), lineno=305, col_offset=40)], [], None, None, lineno=305, col_offset=4), lineno=305, col_offset=4), Expr(Call(Attribute(Call(Name('Array', Load(), lineno=306, col_offset=4), [Str('comp_data', lineno=306, col_offset=10), Name('index2', Load(), lineno=306, col_offset=23)], [], None, None, lineno=306, col_offset=4), 'dump', Load(), lineno=306, col_offset=4), [Name('fp', Load(), lineno=306, col_offset=36), Name('trace', Load(), lineno=306, col_offset=40)], [], None, None, lineno=306, col_offset=4), lineno=306, col_offset=4), For(Tuple([Name('version', Store(), lineno=309, col_offset=8), Name('table', Store(), lineno=309, col_offset=17), Name('normalization', Store(), lineno=309, col_offset=24)], Store(), lineno=309, col_offset=8), Attribute(Name('unicode', Load(), lineno=309, col_offset=41), 'changed', Load(), lineno=309, col_offset=41), [Assign([Name('cversion', Store(), lineno=310, col_offset=8)], Call(Attribute(Name('version', Load(), lineno=310, col_offset=19), 'replace', Load(), lineno=310, col_offset=19), [Str('.', lineno=310, col_offset=35), Str('_', lineno=310, col_offset=39)], [], None, None, lineno=310, col_offset=19), lineno=310, col_offset=8), Assign([Name('records', Store(), lineno=311, col_offset=8)], List([Subscript(Name('table', Load(), lineno=311, col_offset=19), Index(Num(0, lineno=311, col_offset=25)), Load(), lineno=311, col_offset=19)], Load(), lineno=311, col_offset=18), lineno=311, col_offset=8), Assign([Name('cache', Store(), lineno=312, col_offset=8)], Dict([Subscript(Name('table', Load(), lineno=312, col_offset=17), Index(Num(0, lineno=312, col_offset=23)), Load(), lineno=312, col_offset=17)], [Num(0, lineno=312, col_offset=26)], lineno=312, col_offset=16), lineno=312, col_offset=8), Assign([Name('index', Store(), lineno=313, col_offset=8)], BinOp(List([Num(0, lineno=313, col_offset=17)], Load(), lineno=313, col_offset=16), Mult(), Call(Name('len', Load(), lineno=313, col_offset=22), [Name('table', Load(), lineno=313, col_offset=26)], [], None, None, lineno=313, col_offset=22), lineno=313, col_offset=16), lineno=313, col_offset=8), For(Tuple([Name('i', Store(), lineno=314, col_offset=12), Name('record', Store(), lineno=314, col_offset=15)], Store(), lineno=314, col_offset=12), Call(Name('enumerate', Load(), lineno=314, col_offset=25), [Name('table', Load(), lineno=314, col_offset=35)], [], None, None, lineno=314, col_offset=25), [TryExcept([Assign([Subscript(Name('index', Load(), lineno=316, col_offset=16), Index(Name('i', Load(), lineno=316, col_offset=22)), Store(), lineno=316, col_offset=16)], Subscript(Name('cache', Load(), lineno=316, col_offset=27), Index(Name('record', Load(), lineno=316, col_offset=33)), Load(), lineno=316, col_offset=27), lineno=316, col_offset=16)], [ExceptHandler(Name('KeyError', Load(), lineno=317, col_offset=19), None, [Assign([Subscript(Name('index', Load(), lineno=318, col_offset=16), Index(Name('i', Load(), lineno=318, col_offset=22)), Store(), lineno=318, col_offset=16), Subscript(Name('cache', Load(), lineno=318, col_offset=27), Index(Name('record', Load(), lineno=318, col_offset=33)), Store(), lineno=318, col_offset=27)], Call(Name('len', Load(), lineno=318, col_offset=43), [Name('records', Load(), lineno=318, col_offset=47)], [], None, None, lineno=318, col_offset=43), lineno=318, col_offset=16), Expr(Call(Attribute(Name('records', Load(), lineno=319, col_offset=16), 'append', Load(), lineno=319, col_offset=16), [Name('record', Load(), lineno=319, col_offset=31)], [], None, None, lineno=319, col_offset=16), lineno=319, col_offset=16)], lineno=317, col_offset=12)], [], lineno=315, col_offset=12)], [], lineno=314, col_offset=8), Assign([Tuple([Name('index1', Store(), lineno=320, col_offset=8), Name('index2', Store(), lineno=320, col_offset=16), Name('shift', Store(), lineno=320, col_offset=24)], Store(), lineno=320, col_offset=8)], Call(Name('splitbins', Load(), lineno=320, col_offset=32), [Name('index', Load(), lineno=320, col_offset=42), Name('trace', Load(), lineno=320, col_offset=49)], [], None, None, lineno=320, col_offset=32), lineno=320, col_offset=8), Print(Name('fp', Load(), lineno=321, col_offset=16), [BinOp(Str('static const change_record change_records_%s[] = {', lineno=321, col_offset=20), Mod(), Name('cversion', Load(), lineno=321, col_offset=75), lineno=321, col_offset=20)], True, lineno=321, col_offset=8), For(Name('record', Store(), lineno=322, col_offset=12), Name('records', Load(), lineno=322, col_offset=22), [Print(Name('fp', Load(), lineno=323, col_offset=20), [BinOp(Str('\t{ %s },', lineno=323, col_offset=24), Mod(), Call(Attribute(Str(', ', lineno=323, col_offset=38), 'join', Load(), lineno=323, col_offset=38), [Call(Name('map', Load(), lineno=323, col_offset=48), [Name('str', Load(), lineno=323, col_offset=52), Name('record', Load(), lineno=323, col_offset=56)], [], None, None, lineno=323, col_offset=48)], [], None, None, lineno=323, col_offset=38), lineno=323, col_offset=24)], True, lineno=323, col_offset=12)], [], lineno=322, col_offset=8), Print(Name('fp', Load(), lineno=324, col_offset=16), [Str('};', lineno=324, col_offset=20)], True, lineno=324, col_offset=8), Expr(Call(Attribute(Call(Name('Array', Load(), lineno=325, col_offset=8), [BinOp(Str('changes_%s_index', lineno=325, col_offset=14), Mod(), Name('cversion', Load(), lineno=325, col_offset=35), lineno=325, col_offset=14), Name('index1', Load(), lineno=325, col_offset=45)], [], None, None, lineno=325, col_offset=8), 'dump', Load(), lineno=325, col_offset=8), [Name('fp', Load(), lineno=325, col_offset=58), Name('trace', Load(), lineno=325, col_offset=62)], [], None, None, lineno=325, col_offset=8), lineno=325, col_offset=8), Expr(Call(Attribute(Call(Name('Array', Load(), lineno=326, col_offset=8), [BinOp(Str('changes_%s_data', lineno=326, col_offset=14), Mod(), Name('cversion', Load(), lineno=326, col_offset=34), lineno=326, col_offset=14), Name('index2', Load(), lineno=326, col_offset=44)], [], None, None, lineno=326, col_offset=8), 'dump', Load(), lineno=326, col_offset=8), [Name('fp', Load(), lineno=326, col_offset=57), Name('trace', Load(), lineno=326, col_offset=61)], [], None, None, lineno=326, col_offset=8), lineno=326, col_offset=8), Print(Name('fp', Load(), lineno=327, col_offset=16), [BinOp(Str('static const change_record* get_change_%s(Py_UCS4 n)', lineno=327, col_offset=20), Mod(), Name('cversion', Load(), lineno=327, col_offset=77), lineno=327, col_offset=20)], True, lineno=327, col_offset=8), Print(Name('fp', Load(), lineno=328, col_offset=16), [Str('{', lineno=328, col_offset=20)], True, lineno=328, col_offset=8), Print(Name('fp', Load(), lineno=329, col_offset=16), [Str('\tint index;', lineno=329, col_offset=20)], True, lineno=329, col_offset=8), Print(Name('fp', Load(), lineno=330, col_offset=16), [Str('\tif (n >= 0x110000) index = 0;', lineno=330, col_offset=20)], True, lineno=330, col_offset=8), Print(Name('fp', Load(), lineno=331, col_offset=16), [Str('\telse {', lineno=331, col_offset=20)], True, lineno=331, col_offset=8), Print(Name('fp', Load(), lineno=332, col_offset=16), [BinOp(Str('\t\tindex = changes_%s_index[n>>%d];', lineno=332, col_offset=20), Mod(), Tuple([Name('cversion', Load(), lineno=332, col_offset=62), Name('shift', Load(), lineno=332, col_offset=72)], Load(), lineno=332, col_offset=62), lineno=332, col_offset=20)], True, lineno=332, col_offset=8), Print(Name('fp', Load(), lineno=333, col_offset=16), [BinOp(Str('\t\tindex = changes_%s_data[(index<<%d)+(n & %d)];', lineno=333, col_offset=20), Mod(), Tuple([Name('cversion', Load(), lineno=334, col_offset=15), Name('shift', Load(), lineno=334, col_offset=25), BinOp(BinOp(Num(1, lineno=334, col_offset=34), LShift(), Name('shift', Load(), lineno=334, col_offset=37), lineno=334, col_offset=34), Sub(), Num(1, lineno=334, col_offset=44), lineno=334, col_offset=33)], Load(), lineno=334, col_offset=15), lineno=333, col_offset=20)], True, lineno=333, col_offset=8), Print(Name('fp', Load(), lineno=335, col_offset=16), [Str('\t}', lineno=335, col_offset=20)], True, lineno=335, col_offset=8), Print(Name('fp', Load(), lineno=336, col_offset=16), [BinOp(Str('\treturn change_records_%s+index;', lineno=336, col_offset=20), Mod(), Name('cversion', Load(), lineno=336, col_offset=58), lineno=336, col_offset=20)], True, lineno=336, col_offset=8), Print(Name('fp', Load(), lineno=337, col_offset=16), [Str('}\n', lineno=337, col_offset=20)], True, lineno=337, col_offset=8), Print(Name('fp', Load(), lineno=338, col_offset=16), [BinOp(Str('static Py_UCS4 normalization_%s(Py_UCS4 n)', lineno=338, col_offset=20), Mod(), Name('cversion', Load(), lineno=338, col_offset=67), lineno=338, col_offset=20)], True, lineno=338, col_offset=8), Print(Name('fp', Load(), lineno=339, col_offset=16), [Str('{', lineno=339, col_offset=20)], True, lineno=339, col_offset=8), Print(Name('fp', Load(), lineno=340, col_offset=16), [Str('\tswitch(n) {', lineno=340, col_offset=20)], True, lineno=340, col_offset=8), For(Tuple([Name('k', Store(), lineno=341, col_offset=12), Name('v', Store(), lineno=341, col_offset=15)], Store(), lineno=341, col_offset=12), Name('normalization', Load(), lineno=341, col_offset=20), [Print(Name('fp', Load(), lineno=342, col_offset=20), [BinOp(Str('\tcase %s: return 0x%s;', lineno=342, col_offset=24), Mod(), Tuple([Call(Name('hex', Load(), lineno=342, col_offset=53), [Name('k', Load(), lineno=342, col_offset=57)], [], None, None, lineno=342, col_offset=53), Name('v', Load(), lineno=342, col_offset=61)], Load(), lineno=342, col_offset=53), lineno=342, col_offset=24)], True, lineno=342, col_offset=12)], [], lineno=341, col_offset=8), Print(Name('fp', Load(), lineno=343, col_offset=16), [Str('\tdefault: return 0;', lineno=343, col_offset=20)], True, lineno=343, col_offset=8), Print(Name('fp', Load(), lineno=344, col_offset=16), [Str('\t}\n}\n', lineno=344, col_offset=20)], True, lineno=344, col_offset=8)], [], lineno=309, col_offset=4), Expr(Call(Attribute(Name('fp', Load(), lineno=346, col_offset=4), 'close', Load(), lineno=346, col_offset=4), [], [], None, None, lineno=346, col_offset=4), lineno=346, col_offset=4)], [], lineno=98, col_offset=0), FunctionDef('makeunicodetype', arguments([Name('unicode', Param(), lineno=351, col_offset=20), Name('trace', Param(), lineno=351, col_offset=29)], None, None, []), [Assign([Name('FILE', Store(), lineno=353, col_offset=4)], Str('Objects/unicodetype_db.h', lineno=353, col_offset=11), lineno=353, col_offset=4), Print(None, [Str('--- Preparing', lineno=355, col_offset=10), Name('FILE', Load(), lineno=355, col_offset=27), Str('...', lineno=355, col_offset=33)], True, lineno=355, col_offset=4), Assign([Name('dummy', Store(), lineno=358, col_offset=4)], Tuple([Num(0, lineno=358, col_offset=13), Num(0, lineno=358, col_offset=16), Num(0, lineno=358, col_offset=19), Num(0, lineno=358, col_offset=22), Num(0, lineno=358, col_offset=25), Num(0, lineno=358, col_offset=28)], Load(), lineno=358, col_offset=13), lineno=358, col_offset=4), Assign([Name('table', Store(), lineno=359, col_offset=4)], List([Name('dummy', Load(), lineno=359, col_offset=13)], Load(), lineno=359, col_offset=12), lineno=359, col_offset=4), Assign([Name('cache', Store(), lineno=360, col_offset=4)], Dict([Num(0, lineno=360, col_offset=13)], [Name('dummy', Load(), lineno=360, col_offset=16)], lineno=360, col_offset=12), lineno=360, col_offset=4), Assign([Name('index', Store(), lineno=361, col_offset=4)], BinOp(List([Num(0, lineno=361, col_offset=13)], Load(), lineno=361, col_offset=12), Mult(), Call(Name('len', Load(), lineno=361, col_offset=18), [Attribute(Name('unicode', Load(), lineno=361, col_offset=22), 'chars', Load(), lineno=361, col_offset=22)], [], None, None, lineno=361, col_offset=18), lineno=361, col_offset=12), lineno=361, col_offset=4), Assign([Name('numeric', Store(), lineno=362, col_offset=4)], Dict([], [], lineno=362, col_offset=14), lineno=362, col_offset=4), Assign([Name('spaces', Store(), lineno=363, col_offset=4)], List([], Load(), lineno=363, col_offset=13), lineno=363, col_offset=4), Assign([Name('linebreaks', Store(), lineno=364, col_offset=4)], List([], Load(), lineno=364, col_offset=17), lineno=364, col_offset=4), For(Name('char', Store(), lineno=366, col_offset=8), Attribute(Name('unicode', Load(), lineno=366, col_offset=16), 'chars', Load(), lineno=366, col_offset=16), [Assign([Name('record', Store(), lineno=367, col_offset=8)], Subscript(Attribute(Name('unicode', Load(), lineno=367, col_offset=17), 'table', Load(), lineno=367, col_offset=17), Index(Name('char', Load(), lineno=367, col_offset=31)), Load(), lineno=367, col_offset=17), lineno=367, col_offset=8), If(Name('record', Load(), lineno=368, col_offset=11), [Assign([Name('category', Store(), lineno=370, col_offset=12)], Subscript(Name('record', Load(), lineno=370, col_offset=23), Index(Num(2, lineno=370, col_offset=30)), Load(), lineno=370, col_offset=23), lineno=370, col_offset=12), Assign([Name('bidirectional', Store(), lineno=371, col_offset=12)], Subscript(Name('record', Load(), lineno=371, col_offset=28), Index(Num(4, lineno=371, col_offset=35)), Load(), lineno=371, col_offset=28), lineno=371, col_offset=12), Assign([Name('properties', Store(), lineno=372, col_offset=12)], Subscript(Name('record', Load(), lineno=372, col_offset=25), Index(Num(16, lineno=372, col_offset=32)), Load(), lineno=372, col_offset=25), lineno=372, col_offset=12), Assign([Name('flags', Store(), lineno=373, col_offset=12)], Num(0, lineno=373, col_offset=20), lineno=373, col_offset=12), Assign([Name('delta', Store(), lineno=374, col_offset=12)], Name('True', Load(), lineno=374, col_offset=20), lineno=374, col_offset=12), If(Compare(Name('category', Load(), lineno=375, col_offset=15), [In()], [List([Str('Lm', lineno=375, col_offset=28), Str('Lt', lineno=375, col_offset=34), Str('Lu', lineno=375, col_offset=40), Str('Ll', lineno=375, col_offset=46), Str('Lo', lineno=375, col_offset=52)], Load(), lineno=375, col_offset=27)], lineno=375, col_offset=15), [AugAssign(Name('flags', Store(), lineno=376, col_offset=16), BitOr(), Name('ALPHA_MASK', Load(), lineno=376, col_offset=25), lineno=376, col_offset=16)], [], lineno=375, col_offset=12), If(Compare(Name('category', Load(), lineno=377, col_offset=15), [Eq()], [Str('Ll', lineno=377, col_offset=27)], lineno=377, col_offset=15), [AugAssign(Name('flags', Store(), lineno=378, col_offset=16), BitOr(), Name('LOWER_MASK', Load(), lineno=378, col_offset=25), lineno=378, col_offset=16)], [], lineno=377, col_offset=12), If(BoolOp(Or(), [Compare(Str('Line_Break', lineno=379, col_offset=15), [In()], [Name('properties', Load(), lineno=379, col_offset=31)], lineno=379, col_offset=15), Compare(Name('bidirectional', Load(), lineno=379, col_offset=45), [Eq()], [Str('B', lineno=379, col_offset=62)], lineno=379, col_offset=45)], lineno=379, col_offset=15), [AugAssign(Name('flags', Store(), lineno=380, col_offset=16), BitOr(), Name('LINEBREAK_MASK', Load(), lineno=380, col_offset=25), lineno=380, col_offset=16), Expr(Call(Attribute(Name('linebreaks', Load(), lineno=381, col_offset=16), 'append', Load(), lineno=381, col_offset=16), [Name('char', Load(), lineno=381, col_offset=34)], [], None, None, lineno=381, col_offset=16), lineno=381, col_offset=16)], [], lineno=379, col_offset=12), If(BoolOp(Or(), [Compare(Name('category', Load(), lineno=382, col_offset=15), [Eq()], [Str('Zs', lineno=382, col_offset=27)], lineno=382, col_offset=15), Compare(Name('bidirectional', Load(), lineno=382, col_offset=35), [In()], [Tuple([Str('WS', lineno=382, col_offset=53), Str('B', lineno=382, col_offset=59), Str('S', lineno=382, col_offset=64)], Load(), lineno=382, col_offset=53)], lineno=382, col_offset=35)], lineno=382, col_offset=15), [AugAssign(Name('flags', Store(), lineno=383, col_offset=16), BitOr(), Name('SPACE_MASK', Load(), lineno=383, col_offset=25), lineno=383, col_offset=16), Expr(Call(Attribute(Name('spaces', Load(), lineno=384, col_offset=16), 'append', Load(), lineno=384, col_offset=16), [Name('char', Load(), lineno=384, col_offset=30)], [], None, None, lineno=384, col_offset=16), lineno=384, col_offset=16)], [], lineno=382, col_offset=12), If(Compare(Name('category', Load(), lineno=385, col_offset=15), [Eq()], [Str('Lt', lineno=385, col_offset=27)], lineno=385, col_offset=15), [AugAssign(Name('flags', Store(), lineno=386, col_offset=16), BitOr(), Name('TITLE_MASK', Load(), lineno=386, col_offset=25), lineno=386, col_offset=16)], [], lineno=385, col_offset=12), If(Compare(Name('category', Load(), lineno=387, col_offset=15), [Eq()], [Str('Lu', lineno=387, col_offset=27)], lineno=387, col_offset=15), [AugAssign(Name('flags', Store(), lineno=388, col_offset=16), BitOr(), Name('UPPER_MASK', Load(), lineno=388, col_offset=25), lineno=388, col_offset=16)], [], lineno=387, col_offset=12), If(Subscript(Name('record', Load(), lineno=390, col_offset=15), Index(Num(12, lineno=390, col_offset=22)), Load(), lineno=390, col_offset=15), [Assign([Name('upper', Store(), lineno=391, col_offset=16)], Call(Name('int', Load(), lineno=391, col_offset=24), [Subscript(Name('record', Load(), lineno=391, col_offset=28), Index(Num(12, lineno=391, col_offset=35)), Load(), lineno=391, col_offset=28), Num(16, lineno=391, col_offset=40)], [], None, None, lineno=391, col_offset=24), lineno=391, col_offset=16)], [Assign([Name('upper', Store(), lineno=393, col_offset=16)], Name('char', Load(), lineno=393, col_offset=24), lineno=393, col_offset=16)], lineno=390, col_offset=12), If(Subscript(Name('record', Load(), lineno=394, col_offset=15), Index(Num(13, lineno=394, col_offset=22)), Load(), lineno=394, col_offset=15), [Assign([Name('lower', Store(), lineno=395, col_offset=16)], Call(Name('int', Load(), lineno=395, col_offset=24), [Subscript(Name('record', Load(), lineno=395, col_offset=28), Index(Num(13, lineno=395, col_offset=35)), Load(), lineno=395, col_offset=28), Num(16, lineno=395, col_offset=40)], [], None, None, lineno=395, col_offset=24), lineno=395, col_offset=16)], [Assign([Name('lower', Store(), lineno=397, col_offset=16)], Name('char', Load(), lineno=397, col_offset=24), lineno=397, col_offset=16)], lineno=394, col_offset=12), If(Subscript(Name('record', Load(), lineno=398, col_offset=15), Index(Num(14, lineno=398, col_offset=22)), Load(), lineno=398, col_offset=15), [Assign([Name('title', Store(), lineno=399, col_offset=16)], Call(Name('int', Load(), lineno=399, col_offset=24), [Subscript(Name('record', Load(), lineno=399, col_offset=28), Index(Num(14, lineno=399, col_offset=35)), Load(), lineno=399, col_offset=28), Num(16, lineno=399, col_offset=40)], [], None, None, lineno=399, col_offset=24), lineno=399, col_offset=16)], [Assign([Name('title', Store(), lineno=405, col_offset=16)], Name('upper', Load(), lineno=405, col_offset=24), lineno=405, col_offset=16)], lineno=398, col_offset=12), Assign([Name('upper_d', Store(), lineno=406, col_offset=12)], BinOp(Name('upper', Load(), lineno=406, col_offset=22), Sub(), Name('char', Load(), lineno=406, col_offset=30), lineno=406, col_offset=22), lineno=406, col_offset=12), Assign([Name('lower_d', Store(), lineno=407, col_offset=12)], BinOp(Name('lower', Load(), lineno=407, col_offset=22), Sub(), Name('char', Load(), lineno=407, col_offset=30), lineno=407, col_offset=22), lineno=407, col_offset=12), Assign([Name('title_d', Store(), lineno=408, col_offset=12)], BinOp(Name('title', Load(), lineno=408, col_offset=22), Sub(), Name('char', Load(), lineno=408, col_offset=30), lineno=408, col_offset=22), lineno=408, col_offset=12), If(BoolOp(And(), [Compare(Num(-32768, lineno=409, col_offset=16), [LtE(), LtE()], [Name('upper_d', Load(), lineno=409, col_offset=25), Num(32767, lineno=409, col_offset=36)], lineno=409, col_offset=15), Compare(Num(-32768, lineno=410, col_offset=16), [LtE(), LtE()], [Name('lower_d', Load(), lineno=410, col_offset=25), Num(32767, lineno=410, col_offset=36)], lineno=410, col_offset=15), Compare(Num(-32768, lineno=411, col_offset=16), [LtE(), LtE()], [Name('title_d', Load(), lineno=411, col_offset=25), Num(32767, lineno=411, col_offset=36)], lineno=411, col_offset=15)], lineno=409, col_offset=15), [Assign([Name('upper', Store(), lineno=413, col_offset=16)], BinOp(Name('upper_d', Load(), lineno=413, col_offset=24), BitAnd(), Num(65535, lineno=413, col_offset=34), lineno=413, col_offset=24), lineno=413, col_offset=16), Assign([Name('lower', Store(), lineno=414, col_offset=16)], BinOp(Name('lower_d', Load(), lineno=414, col_offset=24), BitAnd(), Num(65535, lineno=414, col_offset=34), lineno=414, col_offset=24), lineno=414, col_offset=16), Assign([Name('title', Store(), lineno=415, col_offset=16)], BinOp(Name('title_d', Load(), lineno=415, col_offset=24), BitAnd(), Num(65535, lineno=415, col_offset=34), lineno=415, col_offset=24), lineno=415, col_offset=16)], [AugAssign(Name('flags', Store(), lineno=417, col_offset=16), BitOr(), Name('NODELTA_MASK', Load(), lineno=417, col_offset=25), lineno=417, col_offset=16)], lineno=409, col_offset=12), Assign([Name('decimal', Store(), lineno=419, col_offset=12)], Num(0, lineno=419, col_offset=22), lineno=419, col_offset=12), If(Subscript(Name('record', Load(), lineno=420, col_offset=15), Index(Num(6, lineno=420, col_offset=22)), Load(), lineno=420, col_offset=15), [AugAssign(Name('flags', Store(), lineno=421, col_offset=16), BitOr(), Name('DECIMAL_MASK', Load(), lineno=421, col_offset=25), lineno=421, col_offset=16), Assign([Name('decimal', Store(), lineno=422, col_offset=16)], Call(Name('int', Load(), lineno=422, col_offset=26), [Subscript(Name('record', Load(), lineno=422, col_offset=30), Index(Num(6, lineno=422, col_offset=37)), Load(), lineno=422, col_offset=30)], [], None, None, lineno=422, col_offset=26), lineno=422, col_offset=16)], [], lineno=420, col_offset=12), Assign([Name('digit', Store(), lineno=423, col_offset=12)], Num(0, lineno=423, col_offset=20), lineno=423, col_offset=12), If(Subscript(Name('record', Load(), lineno=424, col_offset=15), Index(Num(7, lineno=424, col_offset=22)), Load(), lineno=424, col_offset=15), [AugAssign(Name('flags', Store(), lineno=425, col_offset=16), BitOr(), Name('DIGIT_MASK', Load(), lineno=425, col_offset=25), lineno=425, col_offset=16), Assign([Name('digit', Store(), lineno=426, col_offset=16)], Call(Name('int', Load(), lineno=426, col_offset=24), [Subscript(Name('record', Load(), lineno=426, col_offset=28), Index(Num(7, lineno=426, col_offset=35)), Load(), lineno=426, col_offset=28)], [], None, None, lineno=426, col_offset=24), lineno=426, col_offset=16)], [], lineno=424, col_offset=12), If(Subscript(Name('record', Load(), lineno=427, col_offset=15), Index(Num(8, lineno=427, col_offset=22)), Load(), lineno=427, col_offset=15), [AugAssign(Name('flags', Store(), lineno=428, col_offset=16), BitOr(), Name('NUMERIC_MASK', Load(), lineno=428, col_offset=25), lineno=428, col_offset=16), Expr(Call(Attribute(Call(Attribute(Name('numeric', Load(), lineno=429, col_offset=16), 'setdefault', Load(), lineno=429, col_offset=16), [Subscript(Name('record', Load(), lineno=429, col_offset=35), Index(Num(8, lineno=429, col_offset=42)), Load(), lineno=429, col_offset=35), List([], Load(), lineno=429, col_offset=46)], [], None, None, lineno=429, col_offset=16), 'append', Load(), lineno=429, col_offset=16), [Name('char', Load(), lineno=429, col_offset=57)], [], None, None, lineno=429, col_offset=16), lineno=429, col_offset=16)], [], lineno=427, col_offset=12), Assign([Name('item', Store(), lineno=430, col_offset=12)], Tuple([Name('upper', Load(), lineno=431, col_offset=16), Name('lower', Load(), lineno=431, col_offset=23), Name('title', Load(), lineno=431, col_offset=30), Name('decimal', Load(), lineno=431, col_offset=37), Name('digit', Load(), lineno=431, col_offset=46), Name('flags', Load(), lineno=431, col_offset=53)], Load(), lineno=431, col_offset=16), lineno=430, col_offset=12), Assign([Name('i', Store(), lineno=434, col_offset=12)], Call(Attribute(Name('cache', Load(), lineno=434, col_offset=16), 'get', Load(), lineno=434, col_offset=16), [Name('item', Load(), lineno=434, col_offset=26)], [], None, None, lineno=434, col_offset=16), lineno=434, col_offset=12), If(Compare(Name('i', Load(), lineno=435, col_offset=15), [Is()], [Name('None', Load(), lineno=435, col_offset=20)], lineno=435, col_offset=15), [Assign([Subscript(Name('cache', Load(), lineno=436, col_offset=16), Index(Name('item', Load(), lineno=436, col_offset=22)), Store(), lineno=436, col_offset=16), Name('i', Store(), lineno=436, col_offset=30)], Call(Name('len', Load(), lineno=436, col_offset=34), [Name('table', Load(), lineno=436, col_offset=38)], [], None, None, lineno=436, col_offset=34), lineno=436, col_offset=16), Expr(Call(Attribute(Name('table', Load(), lineno=437, col_offset=16), 'append', Load(), lineno=437, col_offset=16), [Name('item', Load(), lineno=437, col_offset=29)], [], None, None, lineno=437, col_offset=16), lineno=437, col_offset=16)], [], lineno=435, col_offset=12), Assign([Subscript(Name('index', Load(), lineno=438, col_offset=12), Index(Name('char', Load(), lineno=438, col_offset=18)), Store(), lineno=438, col_offset=12)], Name('i', Load(), lineno=438, col_offset=26), lineno=438, col_offset=12)], [], lineno=368, col_offset=8)], [], lineno=366, col_offset=4), Print(None, [Call(Name('len', Load(), lineno=440, col_offset=10), [Name('table', Load(), lineno=440, col_offset=14)], [], None, None, lineno=440, col_offset=10), Str('unique character type entries', lineno=440, col_offset=22)], True, lineno=440, col_offset=4), Print(None, [Call(Name('sum', Load(), lineno=441, col_offset=10), [Call(Name('map', Load(), lineno=441, col_offset=14), [Name('len', Load(), lineno=441, col_offset=18), Call(Attribute(Name('numeric', Load(), lineno=441, col_offset=23), 'values', Load(), lineno=441, col_offset=23), [], [], None, None, lineno=441, col_offset=23)], [], None, None, lineno=441, col_offset=14)], [], None, None, lineno=441, col_offset=10), Str('numeric code points', lineno=441, col_offset=43)], True, lineno=441, col_offset=4), Print(None, [Call(Name('len', Load(), lineno=442, col_offset=10), [Name('spaces', Load(), lineno=442, col_offset=14)], [], None, None, lineno=442, col_offset=10), Str('whitespace code points', lineno=442, col_offset=23)], True, lineno=442, col_offset=4), Print(None, [Call(Name('len', Load(), lineno=443, col_offset=10), [Name('linebreaks', Load(), lineno=443, col_offset=14)], [], None, None, lineno=443, col_offset=10), Str('linebreak code points', lineno=443, col_offset=27)], True, lineno=443, col_offset=4), Print(None, [Str('--- Writing', lineno=445, col_offset=10), Name('FILE', Load(), lineno=445, col_offset=25), Str('...', lineno=445, col_offset=31)], True, lineno=445, col_offset=4), Assign([Name('fp', Store(), lineno=447, col_offset=4)], Call(Name('open', Load(), lineno=447, col_offset=9), [Name('FILE', Load(), lineno=447, col_offset=14), Str('w', lineno=447, col_offset=20)], [], None, None, lineno=447, col_offset=9), lineno=447, col_offset=4), Print(Name('fp', Load(), lineno=448, col_offset=12), [BinOp(Str('/* this file was generated by %s %s */', lineno=448, col_offset=16), Mod(), Tuple([Name('SCRIPT', Load(), lineno=448, col_offset=60), Name('VERSION', Load(), lineno=448, col_offset=68)], Load(), lineno=448, col_offset=60), lineno=448, col_offset=16)], True, lineno=448, col_offset=4), Print(Name('fp', Load(), lineno=449, col_offset=12), [], True, lineno=449, col_offset=4), Print(Name('fp', Load(), lineno=450, col_offset=12), [Str('/* a list of unique character type descriptors */', lineno=450, col_offset=16)], True, lineno=450, col_offset=4), Print(Name('fp', Load(), lineno=451, col_offset=12), [Str('const _PyUnicode_TypeRecord _PyUnicode_TypeRecords[] = {', lineno=451, col_offset=16)], True, lineno=451, col_offset=4), For(Name('item', Store(), lineno=452, col_offset=8), Name('table', Load(), lineno=452, col_offset=16), [Print(Name('fp', Load(), lineno=453, col_offset=16), [BinOp(Str('    {%d, %d, %d, %d, %d, %d},', lineno=453, col_offset=20), Mod(), Name('item', Load(), lineno=453, col_offset=54), lineno=453, col_offset=20)], True, lineno=453, col_offset=8)], [], lineno=452, col_offset=4), Print(Name('fp', Load(), lineno=454, col_offset=12), [Str('};', lineno=454, col_offset=16)], True, lineno=454, col_offset=4), Print(Name('fp', Load(), lineno=455, col_offset=12), [], True, lineno=455, col_offset=4), Assign([Tuple([Name('index1', Store(), lineno=458, col_offset=4), Name('index2', Store(), lineno=458, col_offset=12), Name('shift', Store(), lineno=458, col_offset=20)], Store(), lineno=458, col_offset=4)], Call(Name('splitbins', Load(), lineno=458, col_offset=28), [Name('index', Load(), lineno=458, col_offset=38), Name('trace', Load(), lineno=458, col_offset=45)], [], None, None, lineno=458, col_offset=28), lineno=458, col_offset=4), Print(Name('fp', Load(), lineno=460, col_offset=12), [Str('/* type indexes */', lineno=460, col_offset=16)], True, lineno=460, col_offset=4), Print(Name('fp', Load(), lineno=461, col_offset=12), [Str('#define SHIFT', lineno=461, col_offset=16), Name('shift', Load(), lineno=461, col_offset=33)], True, lineno=461, col_offset=4), Expr(Call(Attribute(Call(Name('Array', Load(), lineno=462, col_offset=4), [Str('index1', lineno=462, col_offset=10), Name('index1', Load(), lineno=462, col_offset=20)], [], None, None, lineno=462, col_offset=4), 'dump', Load(), lineno=462, col_offset=4), [Name('fp', Load(), lineno=462, col_offset=33), Name('trace', Load(), lineno=462, col_offset=37)], [], None, None, lineno=462, col_offset=4), lineno=462, col_offset=4), Expr(Call(Attribute(Call(Name('Array', Load(), lineno=463, col_offset=4), [Str('index2', lineno=463, col_offset=10), Name('index2', Load(), lineno=463, col_offset=20)], [], None, None, lineno=463, col_offset=4), 'dump', Load(), lineno=463, col_offset=4), [Name('fp', Load(), lineno=463, col_offset=33), Name('trace', Load(), lineno=463, col_offset=37)], [], None, None, lineno=463, col_offset=4), lineno=463, col_offset=4), Assign([Name('numeric_items', Store(), lineno=466, col_offset=4)], Call(Name('sorted', Load(), lineno=466, col_offset=20), [Call(Attribute(Name('numeric', Load(), lineno=466, col_offset=27), 'items', Load(), lineno=466, col_offset=27), [], [], None, None, lineno=466, col_offset=27)], [], None, None, lineno=466, col_offset=20), lineno=466, col_offset=4), Print(Name('fp', Load(), lineno=467, col_offset=12), [Str('/* Returns the numeric value as double for Unicode characters', lineno=467, col_offset=16)], True, lineno=467, col_offset=4), Print(Name('fp', Load(), lineno=468, col_offset=12), [Str(' * having this property, -1.0 otherwise.', lineno=468, col_offset=16)], True, lineno=468, col_offset=4), Print(Name('fp', Load(), lineno=469, col_offset=12), [Str(' */', lineno=469, col_offset=16)], True, lineno=469, col_offset=4), Print(Name('fp', Load(), lineno=470, col_offset=12), [Str('double _PyUnicode_ToNumeric(Py_UNICODE ch)', lineno=470, col_offset=16)], True, lineno=470, col_offset=4), Print(Name('fp', Load(), lineno=471, col_offset=12), [Str('{', lineno=471, col_offset=16)], True, lineno=471, col_offset=4), Print(Name('fp', Load(), lineno=472, col_offset=12), [Str('    switch (ch) {', lineno=472, col_offset=16)], True, lineno=472, col_offset=4), For(Tuple([Name('value', Store(), lineno=473, col_offset=8), Name('codepoints', Store(), lineno=473, col_offset=15)], Store(), lineno=473, col_offset=8), Name('numeric_items', Load(), lineno=473, col_offset=29), [Assign([Name('parts', Store(), lineno=475, col_offset=8)], Call(Attribute(Name('value', Load(), lineno=475, col_offset=16), 'split', Load(), lineno=475, col_offset=16), [Str('/', lineno=475, col_offset=28)], [], None, None, lineno=475, col_offset=16), lineno=475, col_offset=8), Assign([Name('parts', Store(), lineno=476, col_offset=8)], ListComp(Call(Name('repr', Load(), lineno=476, col_offset=17), [Call(Name('float', Load(), lineno=476, col_offset=22), [Name('part', Load(), lineno=476, col_offset=28)], [], None, None, lineno=476, col_offset=22)], [], None, None, lineno=476, col_offset=17), [comprehension(Name('part', Store(), lineno=476, col_offset=39), Name('parts', Load(), lineno=476, col_offset=47), [])], lineno=476, col_offset=17), lineno=476, col_offset=8), Assign([Name('value', Store(), lineno=477, col_offset=8)], Call(Attribute(Str('/', lineno=477, col_offset=16), 'join', Load(), lineno=477, col_offset=16), [Name('parts', Load(), lineno=477, col_offset=25)], [], None, None, lineno=477, col_offset=16), lineno=477, col_offset=8), Assign([Name('haswide', Store(), lineno=479, col_offset=8)], Name('False', Load(), lineno=479, col_offset=18), lineno=479, col_offset=8), Assign([Name('hasnonewide', Store(), lineno=480, col_offset=8)], Name('False', Load(), lineno=480, col_offset=22), lineno=480, col_offset=8), Expr(Call(Attribute(Name('codepoints', Load(), lineno=481, col_offset=8), 'sort', Load(), lineno=481, col_offset=8), [], [], None, None, lineno=481, col_offset=8), lineno=481, col_offset=8), For(Name('codepoint', Store(), lineno=482, col_offset=12), Name('codepoints', Load(), lineno=482, col_offset=25), [If(Compare(Name('codepoint', Load(), lineno=483, col_offset=15), [Lt()], [Num(65536, lineno=483, col_offset=27)], lineno=483, col_offset=15), [Assign([Name('hasnonewide', Store(), lineno=484, col_offset=16)], Name('True', Load(), lineno=484, col_offset=30), lineno=484, col_offset=16)], [], lineno=483, col_offset=12), If(BoolOp(And(), [Compare(Name('codepoint', Load(), lineno=485, col_offset=15), [GtE()], [Num(65536, lineno=485, col_offset=28)], lineno=485, col_offset=15), UnaryOp(Not(), Name('haswide', Load(), lineno=485, col_offset=44), lineno=485, col_offset=40)], lineno=485, col_offset=15), [Print(Name('fp', Load(), lineno=486, col_offset=24), [Str('#ifdef Py_UNICODE_WIDE', lineno=486, col_offset=28)], True, lineno=486, col_offset=16), Assign([Name('haswide', Store(), lineno=487, col_offset=16)], Name('True', Load(), lineno=487, col_offset=26), lineno=487, col_offset=16)], [], lineno=485, col_offset=12), Print(Name('fp', Load(), lineno=488, col_offset=20), [BinOp(Str('    case 0x%04X:', lineno=488, col_offset=24), Mod(), Tuple([Name('codepoint', Load(), lineno=488, col_offset=46)], Load(), lineno=488, col_offset=46), lineno=488, col_offset=24)], True, lineno=488, col_offset=12)], [], lineno=482, col_offset=8), If(BoolOp(And(), [Name('haswide', Load(), lineno=489, col_offset=11), Name('hasnonewide', Load(), lineno=489, col_offset=23)], lineno=489, col_offset=11), [Print(Name('fp', Load(), lineno=490, col_offset=20), [Str('#endif', lineno=490, col_offset=24)], True, lineno=490, col_offset=12)], [], lineno=489, col_offset=8), Print(Name('fp', Load(), lineno=491, col_offset=16), [BinOp(Str('        return (double) %s;', lineno=491, col_offset=20), Mod(), Tuple([Name('value', Load(), lineno=491, col_offset=53)], Load(), lineno=491, col_offset=53), lineno=491, col_offset=20)], True, lineno=491, col_offset=8), If(BoolOp(And(), [Name('haswide', Load(), lineno=492, col_offset=11), UnaryOp(Not(), Name('hasnonewide', Load(), lineno=492, col_offset=27), lineno=492, col_offset=23)], lineno=492, col_offset=11), [Print(Name('fp', Load(), lineno=493, col_offset=20), [Str('#endif', lineno=493, col_offset=24)], True, lineno=493, col_offset=12)], [], lineno=492, col_offset=8)], [], lineno=473, col_offset=4), Print(Name('fp', Load(), lineno=494, col_offset=12), [Str('    }', lineno=494, col_offset=15)], True, lineno=494, col_offset=4), Print(Name('fp', Load(), lineno=495, col_offset=12), [Str('    return -1.0;', lineno=495, col_offset=15)], True, lineno=495, col_offset=4), Print(Name('fp', Load(), lineno=496, col_offset=12), [Str('}', lineno=496, col_offset=15)], True, lineno=496, col_offset=4), Print(Name('fp', Load(), lineno=497, col_offset=12), [], True, lineno=497, col_offset=4), Print(Name('fp', Load(), lineno=500, col_offset=12), [Str('/* Returns 1 for Unicode characters having the bidirectional', lineno=500, col_offset=16)], True, lineno=500, col_offset=4), Print(Name('fp', Load(), lineno=501, col_offset=12), [Str(" * type 'WS', 'B' or 'S' or the category 'Zs', 0 otherwise.", lineno=501, col_offset=16)], True, lineno=501, col_offset=4), Print(Name('fp', Load(), lineno=502, col_offset=12), [Str(' */', lineno=502, col_offset=16)], True, lineno=502, col_offset=4), Print(Name('fp', Load(), lineno=503, col_offset=12), [Str('int _PyUnicode_IsWhitespace(register const Py_UNICODE ch)', lineno=503, col_offset=16)], True, lineno=503, col_offset=4), Print(Name('fp', Load(), lineno=504, col_offset=12), [Str('{', lineno=504, col_offset=16)], True, lineno=504, col_offset=4), Print(Name('fp', Load(), lineno=505, col_offset=12), [Str('#ifdef WANT_WCTYPE_FUNCTIONS', lineno=505, col_offset=16)], True, lineno=505, col_offset=4), Print(Name('fp', Load(), lineno=506, col_offset=12), [Str('    return iswspace(ch);', lineno=506, col_offset=16)], True, lineno=506, col_offset=4), Print(Name('fp', Load(), lineno=507, col_offset=12), [Str('#else', lineno=507, col_offset=16)], True, lineno=507, col_offset=4), Print(Name('fp', Load(), lineno=508, col_offset=12), [Str('    switch (ch) {', lineno=508, col_offset=16)], True, lineno=508, col_offset=4), Assign([Name('haswide', Store(), lineno=510, col_offset=4)], Name('False', Load(), lineno=510, col_offset=14), lineno=510, col_offset=4), Assign([Name('hasnonewide', Store(), lineno=511, col_offset=4)], Name('False', Load(), lineno=511, col_offset=18), lineno=511, col_offset=4), For(Name('codepoint', Store(), lineno=512, col_offset=8), Call(Name('sorted', Load(), lineno=512, col_offset=21), [Name('spaces', Load(), lineno=512, col_offset=28)], [], None, None, lineno=512, col_offset=21), [If(Compare(Name('codepoint', Load(), lineno=513, col_offset=11), [Lt()], [Num(65536, lineno=513, col_offset=23)], lineno=513, col_offset=11), [Assign([Name('hasnonewide', Store(), lineno=514, col_offset=12)], Name('True', Load(), lineno=514, col_offset=26), lineno=514, col_offset=12)], [], lineno=513, col_offset=8), If(BoolOp(And(), [Compare(Name('codepoint', Load(), lineno=515, col_offset=11), [GtE()], [Num(65536, lineno=515, col_offset=24)], lineno=515, col_offset=11), UnaryOp(Not(), Name('haswide', Load(), lineno=515, col_offset=40), lineno=515, col_offset=36)], lineno=515, col_offset=11), [Print(Name('fp', Load(), lineno=516, col_offset=20), [Str('#ifdef Py_UNICODE_WIDE', lineno=516, col_offset=24)], True, lineno=516, col_offset=12), Assign([Name('haswide', Store(), lineno=517, col_offset=12)], Name('True', Load(), lineno=517, col_offset=22), lineno=517, col_offset=12)], [], lineno=515, col_offset=8), Print(Name('fp', Load(), lineno=518, col_offset=16), [BinOp(Str('    case 0x%04X:', lineno=518, col_offset=20), Mod(), Tuple([Name('codepoint', Load(), lineno=518, col_offset=42)], Load(), lineno=518, col_offset=42), lineno=518, col_offset=20)], True, lineno=518, col_offset=8)], [], lineno=512, col_offset=4), If(BoolOp(And(), [Name('haswide', Load(), lineno=519, col_offset=7), Name('hasnonewide', Load(), lineno=519, col_offset=19)], lineno=519, col_offset=7), [Print(Name('fp', Load(), lineno=520, col_offset=16), [Str('#endif', lineno=520, col_offset=20)], True, lineno=520, col_offset=8)], [], lineno=519, col_offset=4), Print(Name('fp', Load(), lineno=521, col_offset=12), [Str('        return 1;', lineno=521, col_offset=16)], True, lineno=521, col_offset=4), If(BoolOp(And(), [Name('haswide', Load(), lineno=522, col_offset=7), UnaryOp(Not(), Name('hasnonewide', Load(), lineno=522, col_offset=23), lineno=522, col_offset=19)], lineno=522, col_offset=7), [Print(Name('fp', Load(), lineno=523, col_offset=16), [Str('#endif', lineno=523, col_offset=20)], True, lineno=523, col_offset=8)], [], lineno=522, col_offset=4), Print(Name('fp', Load(), lineno=525, col_offset=12), [Str('    }', lineno=525, col_offset=15)], True, lineno=525, col_offset=4), Print(Name('fp', Load(), lineno=526, col_offset=12), [Str('    return 0;', lineno=526, col_offset=15)], True, lineno=526, col_offset=4), Print(Name('fp', Load(), lineno=527, col_offset=12), [Str('#endif', lineno=527, col_offset=16)], True, lineno=527, col_offset=4), Print(Name('fp', Load(), lineno=528, col_offset=12), [Str('}', lineno=528, col_offset=15)], True, lineno=528, col_offset=4), Print(Name('fp', Load(), lineno=529, col_offset=12), [], True, lineno=529, col_offset=4), Print(Name('fp', Load(), lineno=532, col_offset=12), [Str('/* Returns 1 for Unicode characters having the line break', lineno=532, col_offset=16)], True, lineno=532, col_offset=4), Print(Name('fp', Load(), lineno=533, col_offset=12), [Str(" * property 'BK', 'CR', 'LF' or 'NL' or having bidirectional", lineno=533, col_offset=16)], True, lineno=533, col_offset=4), Print(Name('fp', Load(), lineno=534, col_offset=12), [Str(" * type 'B', 0 otherwise.", lineno=534, col_offset=16)], True, lineno=534, col_offset=4), Print(Name('fp', Load(), lineno=535, col_offset=12), [Str(' */', lineno=535, col_offset=16)], True, lineno=535, col_offset=4), Print(Name('fp', Load(), lineno=536, col_offset=12), [Str('int _PyUnicode_IsLinebreak(register const Py_UNICODE ch)', lineno=536, col_offset=16)], True, lineno=536, col_offset=4), Print(Name('fp', Load(), lineno=537, col_offset=12), [Str('{', lineno=537, col_offset=16)], True, lineno=537, col_offset=4), Print(Name('fp', Load(), lineno=538, col_offset=12), [Str('    switch (ch) {', lineno=538, col_offset=16)], True, lineno=538, col_offset=4), Assign([Name('haswide', Store(), lineno=539, col_offset=4)], Name('False', Load(), lineno=539, col_offset=14), lineno=539, col_offset=4), Assign([Name('hasnonewide', Store(), lineno=540, col_offset=4)], Name('False', Load(), lineno=540, col_offset=18), lineno=540, col_offset=4), For(Name('codepoint', Store(), lineno=541, col_offset=8), Call(Name('sorted', Load(), lineno=541, col_offset=21), [Name('linebreaks', Load(), lineno=541, col_offset=28)], [], None, None, lineno=541, col_offset=21), [If(Compare(Name('codepoint', Load(), lineno=542, col_offset=11), [Lt()], [Num(65536, lineno=542, col_offset=23)], lineno=542, col_offset=11), [Assign([Name('hasnonewide', Store(), lineno=543, col_offset=12)], Name('True', Load(), lineno=543, col_offset=26), lineno=543, col_offset=12)], [], lineno=542, col_offset=8), If(BoolOp(And(), [Compare(Name('codepoint', Load(), lineno=544, col_offset=11), [GtE()], [Num(65536, lineno=544, col_offset=24)], lineno=544, col_offset=11), UnaryOp(Not(), Name('haswide', Load(), lineno=544, col_offset=40), lineno=544, col_offset=36)], lineno=544, col_offset=11), [Print(Name('fp', Load(), lineno=545, col_offset=20), [Str('#ifdef Py_UNICODE_WIDE', lineno=545, col_offset=24)], True, lineno=545, col_offset=12), Assign([Name('haswide', Store(), lineno=546, col_offset=12)], Name('True', Load(), lineno=546, col_offset=22), lineno=546, col_offset=12)], [], lineno=544, col_offset=8), Print(Name('fp', Load(), lineno=547, col_offset=16), [BinOp(Str('    case 0x%04X:', lineno=547, col_offset=20), Mod(), Tuple([Name('codepoint', Load(), lineno=547, col_offset=42)], Load(), lineno=547, col_offset=42), lineno=547, col_offset=20)], True, lineno=547, col_offset=8)], [], lineno=541, col_offset=4), If(BoolOp(And(), [Name('haswide', Load(), lineno=548, col_offset=7), Name('hasnonewide', Load(), lineno=548, col_offset=19)], lineno=548, col_offset=7), [Print(Name('fp', Load(), lineno=549, col_offset=16), [Str('#endif', lineno=549, col_offset=20)], True, lineno=549, col_offset=8)], [], lineno=548, col_offset=4), Print(Name('fp', Load(), lineno=550, col_offset=12), [Str('        return 1;', lineno=550, col_offset=16)], True, lineno=550, col_offset=4), If(BoolOp(And(), [Name('haswide', Load(), lineno=551, col_offset=7), UnaryOp(Not(), Name('hasnonewide', Load(), lineno=551, col_offset=23), lineno=551, col_offset=19)], lineno=551, col_offset=7), [Print(Name('fp', Load(), lineno=552, col_offset=16), [Str('#endif', lineno=552, col_offset=20)], True, lineno=552, col_offset=8)], [], lineno=551, col_offset=4), Print(Name('fp', Load(), lineno=554, col_offset=12), [Str('    }', lineno=554, col_offset=15)], True, lineno=554, col_offset=4), Print(Name('fp', Load(), lineno=555, col_offset=12), [Str('    return 0;', lineno=555, col_offset=15)], True, lineno=555, col_offset=4), Print(Name('fp', Load(), lineno=556, col_offset=12), [Str('}', lineno=556, col_offset=15)], True, lineno=556, col_offset=4), Print(Name('fp', Load(), lineno=557, col_offset=12), [], True, lineno=557, col_offset=4), Expr(Call(Attribute(Name('fp', Load(), lineno=559, col_offset=4), 'close', Load(), lineno=559, col_offset=4), [], [], None, None, lineno=559, col_offset=4), lineno=559, col_offset=4)], [], lineno=351, col_offset=0), FunctionDef('makeunicodename', arguments([Name('unicode', Param(), lineno=564, col_offset=20), Name('trace', Param(), lineno=564, col_offset=29)], None, None, []), [Assign([Name('FILE', Store(), lineno=566, col_offset=4)], Str('Modules/unicodename_db.h', lineno=566, col_offset=11), lineno=566, col_offset=4), Print(None, [Str('--- Preparing', lineno=568, col_offset=10), Name('FILE', Load(), lineno=568, col_offset=27), Str('...', lineno=568, col_offset=33)], True, lineno=568, col_offset=4), Assign([Name('names', Store(), lineno=571, col_offset=4)], BinOp(List([Name('None', Load(), lineno=571, col_offset=13)], Load(), lineno=571, col_offset=12), Mult(), Call(Name('len', Load(), lineno=571, col_offset=21), [Attribute(Name('unicode', Load(), lineno=571, col_offset=25), 'chars', Load(), lineno=571, col_offset=25)], [], None, None, lineno=571, col_offset=21), lineno=571, col_offset=12), lineno=571, col_offset=4), For(Name('char', Store(), lineno=573, col_offset=8), Attribute(Name('unicode', Load(), lineno=573, col_offset=16), 'chars', Load(), lineno=573, col_offset=16), [Assign([Name('record', Store(), lineno=574, col_offset=8)], Subscript(Attribute(Name('unicode', Load(), lineno=574, col_offset=17), 'table', Load(), lineno=574, col_offset=17), Index(Name('char', Load(), lineno=574, col_offset=31)), Load(), lineno=574, col_offset=17), lineno=574, col_offset=8), If(Name('record', Load(), lineno=575, col_offset=11), [Assign([Name('name', Store(), lineno=576, col_offset=12)], Call(Attribute(Subscript(Name('record', Load(), lineno=576, col_offset=19), Index(Num(1, lineno=576, col_offset=26)), Load(), lineno=576, col_offset=19), 'strip', Load(), lineno=576, col_offset=19), [], [], None, None, lineno=576, col_offset=19), lineno=576, col_offset=12), If(BoolOp(And(), [Name('name', Load(), lineno=577, col_offset=15), Compare(Subscript(Name('name', Load(), lineno=577, col_offset=24), Index(Num(0, lineno=577, col_offset=29)), Load(), lineno=577, col_offset=24), [NotEq()], [Str('<', lineno=577, col_offset=35)], lineno=577, col_offset=24)], lineno=577, col_offset=15), [Assign([Subscript(Name('names', Load(), lineno=578, col_offset=16), Index(Name('char', Load(), lineno=578, col_offset=22)), Store(), lineno=578, col_offset=16)], BinOp(Name('name', Load(), lineno=578, col_offset=30), Add(), Call(Name('chr', Load(), lineno=578, col_offset=37), [Num(0, lineno=578, col_offset=41)], [], None, None, lineno=578, col_offset=37), lineno=578, col_offset=30), lineno=578, col_offset=16)], [], lineno=577, col_offset=12)], [], lineno=575, col_offset=8)], [], lineno=573, col_offset=4), Print(None, [Call(Name('len', Load(), lineno=580, col_offset=10), [Call(Name('filter', Load(), lineno=580, col_offset=14), [Lambda(arguments([Name('n', Param(), lineno=580, col_offset=28)], None, None, []), Compare(Name('n', Load(), lineno=580, col_offset=31), [IsNot()], [Name('None', Load(), lineno=580, col_offset=40)], lineno=580, col_offset=31), lineno=580, col_offset=21), Name('names', Load(), lineno=580, col_offset=46)], [], None, None, lineno=580, col_offset=14)], [], None, None, lineno=580, col_offset=10), Str('distinct names', lineno=580, col_offset=55)], True, lineno=580, col_offset=4), Assign([Name('words', Store(), lineno=586, col_offset=4)], Dict([], [], lineno=586, col_offset=12), lineno=586, col_offset=4), Assign([Name('n', Store(), lineno=587, col_offset=4), Name('b', Store(), lineno=587, col_offset=8)], Num(0, lineno=587, col_offset=12), lineno=587, col_offset=4), For(Name('char', Store(), lineno=588, col_offset=8), Attribute(Name('unicode', Load(), lineno=588, col_offset=16), 'chars', Load(), lineno=588, col_offset=16), [Assign([Name('name', Store(), lineno=589, col_offset=8)], Subscript(Name('names', Load(), lineno=589, col_offset=15), Index(Name('char', Load(), lineno=589, col_offset=21)), Load(), lineno=589, col_offset=15), lineno=589, col_offset=8), If(Name('name', Load(), lineno=590, col_offset=11), [Assign([Name('w', Store(), lineno=591, col_offset=12)], Call(Attribute(Name('name', Load(), lineno=591, col_offset=16), 'split', Load(), lineno=591, col_offset=16), [], [], None, None, lineno=591, col_offset=16), lineno=591, col_offset=12), Assign([Name('b', Store(), lineno=592, col_offset=12)], BinOp(Name('b', Load(), lineno=592, col_offset=16), Add(), Call(Name('len', Load(), lineno=592, col_offset=20), [Name('name', Load(), lineno=592, col_offset=24)], [], None, None, lineno=592, col_offset=20), lineno=592, col_offset=16), lineno=592, col_offset=12), Assign([Name('n', Store(), lineno=593, col_offset=12)], BinOp(Name('n', Load(), lineno=593, col_offset=16), Add(), Call(Name('len', Load(), lineno=593, col_offset=20), [Name('w', Load(), lineno=593, col_offset=24)], [], None, None, lineno=593, col_offset=20), lineno=593, col_offset=16), lineno=593, col_offset=12), For(Name('w', Store(), lineno=594, col_offset=16), Name('w', Load(), lineno=594, col_offset=21), [Assign([Name('l', Store(), lineno=595, col_offset=16)], Call(Attribute(Name('words', Load(), lineno=595, col_offset=20), 'get', Load(), lineno=595, col_offset=20), [Name('w', Load(), lineno=595, col_offset=30)], [], None, None, lineno=595, col_offset=20), lineno=595, col_offset=16), If(Name('l', Load(), lineno=596, col_offset=19), [Expr(Call(Attribute(Name('l', Load(), lineno=597, col_offset=20), 'append', Load(), lineno=597, col_offset=20), [Name('None', Load(), lineno=597, col_offset=29)], [], None, None, lineno=597, col_offset=20), lineno=597, col_offset=20)], [Assign([Subscript(Name('words', Load(), lineno=599, col_offset=20), Index(Name('w', Load(), lineno=599, col_offset=26)), Store(), lineno=599, col_offset=20)], List([Call(Name('len', Load(), lineno=599, col_offset=32), [Name('words', Load(), lineno=599, col_offset=36)], [], None, None, lineno=599, col_offset=32)], Load(), lineno=599, col_offset=31), lineno=599, col_offset=20)], lineno=596, col_offset=16)], [], lineno=594, col_offset=12)], [], lineno=590, col_offset=8)], [], lineno=588, col_offset=4), Print(None, [Name('n', Load(), lineno=601, col_offset=10), Str('words in text;', lineno=601, col_offset=13), Name('b', Load(), lineno=601, col_offset=31), Str('bytes', lineno=601, col_offset=34)], True, lineno=601, col_offset=4), Assign([Name('wordlist', Store(), lineno=603, col_offset=4)], Call(Attribute(Name('words', Load(), lineno=603, col_offset=15), 'items', Load(), lineno=603, col_offset=15), [], [], None, None, lineno=603, col_offset=15), lineno=603, col_offset=4), FunctionDef('word_key', arguments([Name('a', Param(), lineno=606, col_offset=17)], None, None, []), [Assign([Tuple([Name('aword', Store(), lineno=607, col_offset=8), Name('alist', Store(), lineno=607, col_offset=15)], Store(), lineno=607, col_offset=8)], Name('a', Load(), lineno=607, col_offset=23), lineno=607, col_offset=8), Return(Tuple([UnaryOp(USub(), Call(Name('len', Load(), lineno=608, col_offset=16), [Name('alist', Load(), lineno=608, col_offset=20)], [], None, None, lineno=608, col_offset=16), lineno=608, col_offset=15), Name('aword', Load(), lineno=608, col_offset=28)], Load(), lineno=608, col_offset=15), lineno=608, col_offset=8)], [], lineno=606, col_offset=4), Expr(Call(Attribute(Name('wordlist', Load(), lineno=609, col_offset=4), 'sort', Load(), lineno=609, col_offset=4), [], [keyword('key', Name('word_key', Load(), lineno=609, col_offset=22))], None, None, lineno=609, col_offset=4), lineno=609, col_offset=4), Assign([Name('escapes', Store(), lineno=612, col_offset=4)], Num(0, lineno=612, col_offset=14), lineno=612, col_offset=4), While(Compare(BinOp(Name('escapes', Load(), lineno=613, col_offset=10), Mult(), Num(256, lineno=613, col_offset=20), lineno=613, col_offset=10), [Lt()], [Call(Name('len', Load(), lineno=613, col_offset=26), [Name('wordlist', Load(), lineno=613, col_offset=30)], [], None, None, lineno=613, col_offset=26)], lineno=613, col_offset=10), [Assign([Name('escapes', Store(), lineno=614, col_offset=8)], BinOp(Name('escapes', Load(), lineno=614, col_offset=18), Add(), Num(1, lineno=614, col_offset=28), lineno=614, col_offset=18), lineno=614, col_offset=8)], [], lineno=613, col_offset=4), Print(None, [Name('escapes', Load(), lineno=615, col_offset=10), Str('escapes', lineno=615, col_offset=19)], True, lineno=615, col_offset=4), Assign([Name('short', Store(), lineno=617, col_offset=4)], BinOp(Num(256, lineno=617, col_offset=12), Sub(), Name('escapes', Load(), lineno=617, col_offset=18), lineno=617, col_offset=12), lineno=617, col_offset=4), Assert(Compare(Name('short', Load(), lineno=619, col_offset=11), [Gt()], [Num(0, lineno=619, col_offset=19)], lineno=619, col_offset=11), None, lineno=619, col_offset=4), Print(None, [Name('short', Load(), lineno=621, col_offset=10), Str('short indexes in lexicon', lineno=621, col_offset=17)], True, lineno=621, col_offset=4), Assign([Name('n', Store(), lineno=624, col_offset=4)], Num(0, lineno=624, col_offset=8), lineno=624, col_offset=4), For(Name('i', Store(), lineno=625, col_offset=8), Call(Name('range', Load(), lineno=625, col_offset=13), [Name('short', Load(), lineno=625, col_offset=19)], [], None, None, lineno=625, col_offset=13), [Assign([Name('n', Store(), lineno=626, col_offset=8)], BinOp(Name('n', Load(), lineno=626, col_offset=12), Add(), Call(Name('len', Load(), lineno=626, col_offset=16), [Subscript(Subscript(Name('wordlist', Load(), lineno=626, col_offset=20), Index(Name('i', Load(), lineno=626, col_offset=29)), Load(), lineno=626, col_offset=20), Index(Num(1, lineno=626, col_offset=32)), Load(), lineno=626, col_offset=20)], [], None, None, lineno=626, col_offset=16), lineno=626, col_offset=12), lineno=626, col_offset=8)], [], lineno=625, col_offset=4), Print(None, [Name('n', Load(), lineno=627, col_offset=10), Str('short indexes in phrasebook', lineno=627, col_offset=13)], True, lineno=627, col_offset=4), Assign([Tuple([Name('wordlist', Store(), lineno=632, col_offset=4), Name('wordtail', Store(), lineno=632, col_offset=14)], Store(), lineno=632, col_offset=4)], Tuple([Subscript(Name('wordlist', Load(), lineno=632, col_offset=25), Slice(None, Name('short', Load(), lineno=632, col_offset=35), None), Load(), lineno=632, col_offset=25), Subscript(Name('wordlist', Load(), lineno=632, col_offset=43), Slice(Name('short', Load(), lineno=632, col_offset=52), None, None), Load(), lineno=632, col_offset=43)], Load(), lineno=632, col_offset=25), lineno=632, col_offset=4), Expr(Call(Attribute(Name('wordtail', Load(), lineno=633, col_offset=4), 'sort', Load(), lineno=633, col_offset=4), [], [keyword('key', Lambda(arguments([Name('a', Param(), lineno=633, col_offset=29)], None, None, []), Subscript(Name('a', Load(), lineno=633, col_offset=32), Index(Num(0, lineno=633, col_offset=34)), Load(), lineno=633, col_offset=32), lineno=633, col_offset=22)), keyword('reverse', Name('True', Load(), lineno=633, col_offset=46))], None, None, lineno=633, col_offset=4), lineno=633, col_offset=4), Expr(Call(Attribute(Name('wordlist', Load(), lineno=634, col_offset=4), 'extend', Load(), lineno=634, col_offset=4), [Name('wordtail', Load(), lineno=634, col_offset=20)], [], None, None, lineno=634, col_offset=4), lineno=634, col_offset=4), Assign([Name('lexicon_offset', Store(), lineno=638, col_offset=4)], List([Num(0, lineno=638, col_offset=22)], Load(), lineno=638, col_offset=21), lineno=638, col_offset=4), Assign([Name('lexicon', Store(), lineno=639, col_offset=4)], Str('', lineno=639, col_offset=14), lineno=639, col_offset=4), Assign([Name('words', Store(), lineno=640, col_offset=4)], Dict([], [], lineno=640, col_offset=12), lineno=640, col_offset=4), Assign([Name('offset', Store(), lineno=643, col_offset=4)], Num(0, lineno=643, col_offset=13), lineno=643, col_offset=4), For(Tuple([Name('w', Store(), lineno=644, col_offset=8), Name('x', Store(), lineno=644, col_offset=11)], Store(), lineno=644, col_offset=8), Name('wordlist', Load(), lineno=644, col_offset=16), [Assign([Name('ww', Store(), lineno=647, col_offset=8)], BinOp(Subscript(Name('w', Load(), lineno=647, col_offset=13), Slice(None, Num(-1, lineno=647, col_offset=17), None), Load(), lineno=647, col_offset=13), Add(), Call(Name('chr', Load(), lineno=647, col_offset=22), [BinOp(Call(Name('ord', Load(), lineno=647, col_offset=26), [Subscript(Name('w', Load(), lineno=647, col_offset=30), Index(Num(-1, lineno=647, col_offset=33)), Load(), lineno=647, col_offset=30)], [], None, None, lineno=647, col_offset=26), Add(), Num(128, lineno=647, col_offset=37), lineno=647, col_offset=26)], [], None, None, lineno=647, col_offset=22), lineno=647, col_offset=13), lineno=647, col_offset=8), Assign([Name('o', Store(), lineno=649, col_offset=8)], Call(Attribute(Name('lexicon', Load(), lineno=649, col_offset=12), 'find', Load(), lineno=649, col_offset=12), [Name('ww', Load(), lineno=649, col_offset=25)], [], None, None, lineno=649, col_offset=12), lineno=649, col_offset=8), If(Compare(Name('o', Load(), lineno=650, col_offset=11), [Lt()], [Num(0, lineno=650, col_offset=15)], lineno=650, col_offset=11), [Assign([Name('o', Store(), lineno=651, col_offset=12)], Name('offset', Load(), lineno=651, col_offset=16), lineno=651, col_offset=12), Assign([Name('lexicon', Store(), lineno=652, col_offset=12)], BinOp(Name('lexicon', Load(), lineno=652, col_offset=22), Add(), Name('ww', Load(), lineno=652, col_offset=32), lineno=652, col_offset=22), lineno=652, col_offset=12), Assign([Name('offset', Store(), lineno=653, col_offset=12)], BinOp(Name('offset', Load(), lineno=653, col_offset=21), Add(), Call(Name('len', Load(), lineno=653, col_offset=30), [Name('w', Load(), lineno=653, col_offset=34)], [], None, None, lineno=653, col_offset=30), lineno=653, col_offset=21), lineno=653, col_offset=12)], [], lineno=650, col_offset=8), Assign([Subscript(Name('words', Load(), lineno=654, col_offset=8), Index(Name('w', Load(), lineno=654, col_offset=14)), Store(), lineno=654, col_offset=8)], Call(Name('len', Load(), lineno=654, col_offset=19), [Name('lexicon_offset', Load(), lineno=654, col_offset=23)], [], None, None, lineno=654, col_offset=19), lineno=654, col_offset=8), Expr(Call(Attribute(Name('lexicon_offset', Load(), lineno=655, col_offset=8), 'append', Load(), lineno=655, col_offset=8), [Name('o', Load(), lineno=655, col_offset=30)], [], None, None, lineno=655, col_offset=8), lineno=655, col_offset=8)], [], lineno=644, col_offset=4), Assign([Name('lexicon', Store(), lineno=657, col_offset=4)], Call(Name('map', Load(), lineno=657, col_offset=14), [Name('ord', Load(), lineno=657, col_offset=18), Name('lexicon', Load(), lineno=657, col_offset=23)], [], None, None, lineno=657, col_offset=14), lineno=657, col_offset=4), Assign([Name('phrasebook', Store(), lineno=660, col_offset=4)], List([Num(0, lineno=660, col_offset=18)], Load(), lineno=660, col_offset=17), lineno=660, col_offset=4), Assign([Name('phrasebook_offset', Store(), lineno=661, col_offset=4)], BinOp(List([Num(0, lineno=661, col_offset=25)], Load(), lineno=661, col_offset=24), Mult(), Call(Name('len', Load(), lineno=661, col_offset=30), [Attribute(Name('unicode', Load(), lineno=661, col_offset=34), 'chars', Load(), lineno=661, col_offset=34)], [], None, None, lineno=661, col_offset=30), lineno=661, col_offset=24), lineno=661, col_offset=4), For(Name('char', Store(), lineno=662, col_offset=8), Attribute(Name('unicode', Load(), lineno=662, col_offset=16), 'chars', Load(), lineno=662, col_offset=16), [Assign([Name('name', Store(), lineno=663, col_offset=8)], Subscript(Name('names', Load(), lineno=663, col_offset=15), Index(Name('char', Load(), lineno=663, col_offset=21)), Load(), lineno=663, col_offset=15), lineno=663, col_offset=8), If(Name('name', Load(), lineno=664, col_offset=11), [Assign([Name('w', Store(), lineno=665, col_offset=12)], Call(Attribute(Name('name', Load(), lineno=665, col_offset=16), 'split', Load(), lineno=665, col_offset=16), [], [], None, None, lineno=665, col_offset=16), lineno=665, col_offset=12), Assign([Subscript(Name('phrasebook_offset', Load(), lineno=666, col_offset=12), Index(Name('char', Load(), lineno=666, col_offset=30)), Store(), lineno=666, col_offset=12)], Call(Name('len', Load(), lineno=666, col_offset=38), [Name('phrasebook', Load(), lineno=666, col_offset=42)], [], None, None, lineno=666, col_offset=38), lineno=666, col_offset=12), For(Name('w', Store(), lineno=667, col_offset=16), Name('w', Load(), lineno=667, col_offset=21), [Assign([Name('i', Store(), lineno=668, col_offset=16)], Subscript(Name('words', Load(), lineno=668, col_offset=20), Index(Name('w', Load(), lineno=668, col_offset=26)), Load(), lineno=668, col_offset=20), lineno=668, col_offset=16), If(Compare(Name('i', Load(), lineno=669, col_offset=19), [Lt()], [Name('short', Load(), lineno=669, col_offset=23)], lineno=669, col_offset=19), [Expr(Call(Attribute(Name('phrasebook', Load(), lineno=670, col_offset=20), 'append', Load(), lineno=670, col_offset=20), [Name('i', Load(), lineno=670, col_offset=38)], [], None, None, lineno=670, col_offset=20), lineno=670, col_offset=20)], [Expr(Call(Attribute(Name('phrasebook', Load(), lineno=673, col_offset=20), 'append', Load(), lineno=673, col_offset=20), [BinOp(BinOp(Name('i', Load(), lineno=673, col_offset=39), RShift(), Num(8, lineno=673, col_offset=42), lineno=673, col_offset=39), Add(), Name('short', Load(), lineno=673, col_offset=47), lineno=673, col_offset=38)], [], None, None, lineno=673, col_offset=20), lineno=673, col_offset=20), Expr(Call(Attribute(Name('phrasebook', Load(), lineno=674, col_offset=20), 'append', Load(), lineno=674, col_offset=20), [BinOp(Name('i', Load(), lineno=674, col_offset=38), BitAnd(), Num(255, lineno=674, col_offset=40), lineno=674, col_offset=38)], [], None, None, lineno=674, col_offset=20), lineno=674, col_offset=20)], lineno=669, col_offset=16)], [], lineno=667, col_offset=12)], [], lineno=664, col_offset=8)], [], lineno=662, col_offset=4), Assert(Compare(Call(Name('getsize', Load(), lineno=676, col_offset=11), [Name('phrasebook', Load(), lineno=676, col_offset=19)], [], None, None, lineno=676, col_offset=11), [Eq()], [Num(1, lineno=676, col_offset=34)], lineno=676, col_offset=11), None, lineno=676, col_offset=4), Assign([Name('data', Store(), lineno=682, col_offset=4)], List([], Load(), lineno=682, col_offset=11), lineno=682, col_offset=4), For(Name('char', Store(), lineno=683, col_offset=8), Attribute(Name('unicode', Load(), lineno=683, col_offset=16), 'chars', Load(), lineno=683, col_offset=16), [Assign([Name('record', Store(), lineno=684, col_offset=8)], Subscript(Attribute(Name('unicode', Load(), lineno=684, col_offset=17), 'table', Load(), lineno=684, col_offset=17), Index(Name('char', Load(), lineno=684, col_offset=31)), Load(), lineno=684, col_offset=17), lineno=684, col_offset=8), If(Name('record', Load(), lineno=685, col_offset=11), [Assign([Name('name', Store(), lineno=686, col_offset=12)], Call(Attribute(Subscript(Name('record', Load(), lineno=686, col_offset=19), Index(Num(1, lineno=686, col_offset=26)), Load(), lineno=686, col_offset=19), 'strip', Load(), lineno=686, col_offset=19), [], [], None, None, lineno=686, col_offset=19), lineno=686, col_offset=12), If(BoolOp(And(), [Name('name', Load(), lineno=687, col_offset=15), Compare(Subscript(Name('name', Load(), lineno=687, col_offset=24), Index(Num(0, lineno=687, col_offset=29)), Load(), lineno=687, col_offset=24), [NotEq()], [Str('<', lineno=687, col_offset=35)], lineno=687, col_offset=24)], lineno=687, col_offset=15), [Expr(Call(Attribute(Name('data', Load(), lineno=688, col_offset=16), 'append', Load(), lineno=688, col_offset=16), [Tuple([Name('name', Load(), lineno=688, col_offset=29), Name('char', Load(), lineno=688, col_offset=35)], Load(), lineno=688, col_offset=29)], [], None, None, lineno=688, col_offset=16), lineno=688, col_offset=16)], [], lineno=687, col_offset=12)], [], lineno=685, col_offset=8)], [], lineno=683, col_offset=4), Assign([Name('codehash', Store(), lineno=694, col_offset=4)], Call(Name('Hash', Load(), lineno=694, col_offset=15), [Str('code', lineno=694, col_offset=20), Name('data', Load(), lineno=694, col_offset=28), Num(47, lineno=694, col_offset=34)], [], None, None, lineno=694, col_offset=15), lineno=694, col_offset=4), Print(None, [Str('--- Writing', lineno=696, col_offset=10), Name('FILE', Load(), lineno=696, col_offset=25), Str('...', lineno=696, col_offset=31)], True, lineno=696, col_offset=4), Assign([Name('fp', Store(), lineno=698, col_offset=4)], Call(Name('open', Load(), lineno=698, col_offset=9), [Name('FILE', Load(), lineno=698, col_offset=14), Str('w', lineno=698, col_offset=20)], [], None, None, lineno=698, col_offset=9), lineno=698, col_offset=4), Print(Name('fp', Load(), lineno=699, col_offset=12), [BinOp(Str('/* this file was generated by %s %s */', lineno=699, col_offset=16), Mod(), Tuple([Name('SCRIPT', Load(), lineno=699, col_offset=60), Name('VERSION', Load(), lineno=699, col_offset=68)], Load(), lineno=699, col_offset=60), lineno=699, col_offset=16)], True, lineno=699, col_offset=4), Print(Name('fp', Load(), lineno=700, col_offset=12), [], True, lineno=700, col_offset=4), Print(Name('fp', Load(), lineno=701, col_offset=12), [Str('#define NAME_MAXLEN', lineno=701, col_offset=16), Num(256, lineno=701, col_offset=39)], True, lineno=701, col_offset=4), Print(Name('fp', Load(), lineno=702, col_offset=12), [], True, lineno=702, col_offset=4), Print(Name('fp', Load(), lineno=703, col_offset=12), [Str('/* lexicon */', lineno=703, col_offset=16)], True, lineno=703, col_offset=4), Expr(Call(Attribute(Call(Name('Array', Load(), lineno=704, col_offset=4), [Str('lexicon', lineno=704, col_offset=10), Name('lexicon', Load(), lineno=704, col_offset=21)], [], None, None, lineno=704, col_offset=4), 'dump', Load(), lineno=704, col_offset=4), [Name('fp', Load(), lineno=704, col_offset=35), Name('trace', Load(), lineno=704, col_offset=39)], [], None, None, lineno=704, col_offset=4), lineno=704, col_offset=4), Expr(Call(Attribute(Call(Name('Array', Load(), lineno=705, col_offset=4), [Str('lexicon_offset', lineno=705, col_offset=10), Name('lexicon_offset', Load(), lineno=705, col_offset=28)], [], None, None, lineno=705, col_offset=4), 'dump', Load(), lineno=705, col_offset=4), [Name('fp', Load(), lineno=705, col_offset=49), Name('trace', Load(), lineno=705, col_offset=53)], [], None, None, lineno=705, col_offset=4), lineno=705, col_offset=4), Assign([Tuple([Name('offset1', Store(), lineno=708, col_offset=4), Name('offset2', Store(), lineno=708, col_offset=13), Name('shift', Store(), lineno=708, col_offset=22)], Store(), lineno=708, col_offset=4)], Call(Name('splitbins', Load(), lineno=708, col_offset=30), [Name('phrasebook_offset', Load(), lineno=708, col_offset=40), Name('trace', Load(), lineno=708, col_offset=59)], [], None, None, lineno=708, col_offset=30), lineno=708, col_offset=4), Print(Name('fp', Load(), lineno=710, col_offset=12), [Str('/* code->name phrasebook */', lineno=710, col_offset=16)], True, lineno=710, col_offset=4), Print(Name('fp', Load(), lineno=711, col_offset=12), [Str('#define phrasebook_shift', lineno=711, col_offset=16), Name('shift', Load(), lineno=711, col_offset=44)], True, lineno=711, col_offset=4), Print(Name('fp', Load(), lineno=712, col_offset=12), [Str('#define phrasebook_short', lineno=712, col_offset=16), Name('short', Load(), lineno=712, col_offset=44)], True, lineno=712, col_offset=4), Expr(Call(Attribute(Call(Name('Array', Load(), lineno=714, col_offset=4), [Str('phrasebook', lineno=714, col_offset=10), Name('phrasebook', Load(), lineno=714, col_offset=24)], [], None, None, lineno=714, col_offset=4), 'dump', Load(), lineno=714, col_offset=4), [Name('fp', Load(), lineno=714, col_offset=41), Name('trace', Load(), lineno=714, col_offset=45)], [], None, None, lineno=714, col_offset=4), lineno=714, col_offset=4), Expr(Call(Attribute(Call(Name('Array', Load(), lineno=715, col_offset=4), [Str('phrasebook_offset1', lineno=715, col_offset=10), Name('offset1', Load(), lineno=715, col_offset=32)], [], None, None, lineno=715, col_offset=4), 'dump', Load(), lineno=715, col_offset=4), [Name('fp', Load(), lineno=715, col_offset=46), Name('trace', Load(), lineno=715, col_offset=50)], [], None, None, lineno=715, col_offset=4), lineno=715, col_offset=4), Expr(Call(Attribute(Call(Name('Array', Load(), lineno=716, col_offset=4), [Str('phrasebook_offset2', lineno=716, col_offset=10), Name('offset2', Load(), lineno=716, col_offset=32)], [], None, None, lineno=716, col_offset=4), 'dump', Load(), lineno=716, col_offset=4), [Name('fp', Load(), lineno=716, col_offset=46), Name('trace', Load(), lineno=716, col_offset=50)], [], None, None, lineno=716, col_offset=4), lineno=716, col_offset=4), Print(Name('fp', Load(), lineno=718, col_offset=12), [Str('/* name->code dictionary */', lineno=718, col_offset=16)], True, lineno=718, col_offset=4), Expr(Call(Attribute(Name('codehash', Load(), lineno=719, col_offset=4), 'dump', Load(), lineno=719, col_offset=4), [Name('fp', Load(), lineno=719, col_offset=18), Name('trace', Load(), lineno=719, col_offset=22)], [], None, None, lineno=719, col_offset=4), lineno=719, col_offset=4), Expr(Call(Attribute(Name('fp', Load(), lineno=721, col_offset=4), 'close', Load(), lineno=721, col_offset=4), [], [], None, None, lineno=721, col_offset=4), lineno=721, col_offset=4)], [], lineno=564, col_offset=0), FunctionDef('merge_old_version', arguments([Name('version', Param(), lineno=724, col_offset=22), Name('new', Param(), lineno=724, col_offset=31), Name('old', Param(), lineno=724, col_offset=36)], None, None, []), [If(Compare(Attribute(Name('old', Load(), lineno=726, col_offset=7), 'exclusions', Load(), lineno=726, col_offset=7), [NotEq()], [Attribute(Name('new', Load(), lineno=726, col_offset=25), 'exclusions', Load(), lineno=726, col_offset=25)], lineno=726, col_offset=7), [Raise(Name('NotImplementedError', Load(), lineno=727, col_offset=14), Str('exclusions differ', lineno=727, col_offset=35), None, lineno=727, col_offset=8)], [], lineno=726, col_offset=4), Assign([Name('bidir_changes', Store(), lineno=730, col_offset=4)], BinOp(List([Num(255, lineno=730, col_offset=21)], Load(), lineno=730, col_offset=20), Mult(), Num(1114112, lineno=730, col_offset=27), lineno=730, col_offset=20), lineno=730, col_offset=4), Assign([Name('category_changes', Store(), lineno=731, col_offset=4)], BinOp(List([Num(255, lineno=731, col_offset=24)], Load(), lineno=731, col_offset=23), Mult(), Num(1114112, lineno=731, col_offset=30), lineno=731, col_offset=23), lineno=731, col_offset=4), Assign([Name('decimal_changes', Store(), lineno=732, col_offset=4)], BinOp(List([Num(255, lineno=732, col_offset=23)], Load(), lineno=732, col_offset=22), Mult(), Num(1114112, lineno=732, col_offset=29), lineno=732, col_offset=22), lineno=732, col_offset=4), Assign([Name('mirrored_changes', Store(), lineno=733, col_offset=4)], BinOp(List([Num(255, lineno=733, col_offset=24)], Load(), lineno=733, col_offset=23), Mult(), Num(1114112, lineno=733, col_offset=30), lineno=733, col_offset=23), lineno=733, col_offset=4), Assign([Name('numeric_changes', Store(), lineno=736, col_offset=4)], BinOp(List([Num(0, lineno=736, col_offset=23)], Load(), lineno=736, col_offset=22), Mult(), Num(1114112, lineno=736, col_offset=28), lineno=736, col_offset=22), lineno=736, col_offset=4), Assign([Name('normalization_changes', Store(), lineno=738, col_offset=4)], List([], Load(), lineno=738, col_offset=28), lineno=738, col_offset=4), For(Name('i', Store(), lineno=739, col_offset=8), Call(Name('range', Load(), lineno=739, col_offset=13), [Num(1114112, lineno=739, col_offset=19)], [], None, None, lineno=739, col_offset=13), [If(Compare(Subscript(Attribute(Name('new', Load(), lineno=740, col_offset=11), 'table', Load(), lineno=740, col_offset=11), Index(Name('i', Load(), lineno=740, col_offset=21)), Load(), lineno=740, col_offset=11), [Is()], [Name('None', Load(), lineno=740, col_offset=27)], lineno=740, col_offset=11), [Assert(Compare(Subscript(Attribute(Name('old', Load(), lineno=743, col_offset=19), 'table', Load(), lineno=743, col_offset=19), Index(Name('i', Load(), lineno=743, col_offset=29)), Load(), lineno=743, col_offset=19), [Is()], [Name('None', Load(), lineno=743, col_offset=35)], lineno=743, col_offset=19), None, lineno=743, col_offset=12), Continue( lineno=744, col_offset=12)], [], lineno=740, col_offset=8), If(Compare(Subscript(Attribute(Name('old', Load(), lineno=746, col_offset=11), 'table', Load(), lineno=746, col_offset=11), Index(Name('i', Load(), lineno=746, col_offset=21)), Load(), lineno=746, col_offset=11), [Is()], [Name('None', Load(), lineno=746, col_offset=27)], lineno=746, col_offset=11), [Assign([Subscript(Name('category_changes', Load(), lineno=748, col_offset=12), Index(Name('i', Load(), lineno=748, col_offset=29)), Store(), lineno=748, col_offset=12)], Num(0, lineno=748, col_offset=34), lineno=748, col_offset=12), Continue( lineno=749, col_offset=12)], [], lineno=746, col_offset=8), If(Compare(Subscript(Attribute(Name('old', Load(), lineno=751, col_offset=11), 'table', Load(), lineno=751, col_offset=11), Index(Name('i', Load(), lineno=751, col_offset=21)), Load(), lineno=751, col_offset=11), [NotEq()], [Subscript(Attribute(Name('new', Load(), lineno=751, col_offset=27), 'table', Load(), lineno=751, col_offset=27), Index(Name('i', Load(), lineno=751, col_offset=37)), Load(), lineno=751, col_offset=27)], lineno=751, col_offset=11), [For(Name('k', Store(), lineno=752, col_offset=16), Call(Name('range', Load(), lineno=752, col_offset=21), [Call(Name('len', Load(), lineno=752, col_offset=27), [Subscript(Attribute(Name('old', Load(), lineno=752, col_offset=31), 'table', Load(), lineno=752, col_offset=31), Index(Name('i', Load(), lineno=752, col_offset=41)), Load(), lineno=752, col_offset=31)], [], None, None, lineno=752, col_offset=27)], [], None, None, lineno=752, col_offset=21), [If(Compare(Subscript(Subscript(Attribute(Name('old', Load(), lineno=753, col_offset=19), 'table', Load(), lineno=753, col_offset=19), Index(Name('i', Load(), lineno=753, col_offset=29)), Load(), lineno=753, col_offset=19), Index(Name('k', Load(), lineno=753, col_offset=32)), Load(), lineno=753, col_offset=19), [NotEq()], [Subscript(Subscript(Attribute(Name('new', Load(), lineno=753, col_offset=38), 'table', Load(), lineno=753, col_offset=38), Index(Name('i', Load(), lineno=753, col_offset=48)), Load(), lineno=753, col_offset=38), Index(Name('k', Load(), lineno=753, col_offset=51)), Load(), lineno=753, col_offset=38)], lineno=753, col_offset=19), [Assign([Name('value', Store(), lineno=754, col_offset=20)], Subscript(Subscript(Attribute(Name('old', Load(), lineno=754, col_offset=28), 'table', Load(), lineno=754, col_offset=28), Index(Name('i', Load(), lineno=754, col_offset=38)), Load(), lineno=754, col_offset=28), Index(Name('k', Load(), lineno=754, col_offset=41)), Load(), lineno=754, col_offset=28), lineno=754, col_offset=20), If(Compare(Name('k', Load(), lineno=755, col_offset=23), [Eq()], [Num(2, lineno=755, col_offset=28)], lineno=755, col_offset=23), [Assign([Subscript(Name('category_changes', Load(), lineno=757, col_offset=24), Index(Name('i', Load(), lineno=757, col_offset=41)), Store(), lineno=757, col_offset=24)], Call(Attribute(Name('CATEGORY_NAMES', Load(), lineno=757, col_offset=46), 'index', Load(), lineno=757, col_offset=46), [Name('value', Load(), lineno=757, col_offset=67)], [], None, None, lineno=757, col_offset=46), lineno=757, col_offset=24)], [If(Compare(Name('k', Load(), lineno=758, col_offset=25), [Eq()], [Num(4, lineno=758, col_offset=30)], lineno=758, col_offset=25), [Assign([Subscript(Name('bidir_changes', Load(), lineno=760, col_offset=24), Index(Name('i', Load(), lineno=760, col_offset=38)), Store(), lineno=760, col_offset=24)], Call(Attribute(Name('BIDIRECTIONAL_NAMES', Load(), lineno=760, col_offset=43), 'index', Load(), lineno=760, col_offset=43), [Name('value', Load(), lineno=760, col_offset=69)], [], None, None, lineno=760, col_offset=43), lineno=760, col_offset=24)], [If(Compare(Name('k', Load(), lineno=761, col_offset=25), [Eq()], [Num(5, lineno=761, col_offset=30)], lineno=761, col_offset=25), [Assert(Compare(Str(' ', lineno=764, col_offset=31), [NotIn()], [Name('value', Load(), lineno=764, col_offset=42)], lineno=764, col_offset=31), None, lineno=764, col_offset=24), Expr(Call(Attribute(Name('normalization_changes', Load(), lineno=765, col_offset=24), 'append', Load(), lineno=765, col_offset=24), [Tuple([Name('i', Load(), lineno=765, col_offset=54), Name('value', Load(), lineno=765, col_offset=57)], Load(), lineno=765, col_offset=54)], [], None, None, lineno=765, col_offset=24), lineno=765, col_offset=24)], [If(Compare(Name('k', Load(), lineno=766, col_offset=25), [Eq()], [Num(6, lineno=766, col_offset=30)], lineno=766, col_offset=25), [Assert(Compare(Name('value', Load(), lineno=769, col_offset=31), [In()], [Str('0123456789', lineno=769, col_offset=40)], lineno=769, col_offset=31), None, lineno=769, col_offset=24), Assign([Subscript(Name('decimal_changes', Load(), lineno=770, col_offset=24), Index(Name('i', Load(), lineno=770, col_offset=40)), Store(), lineno=770, col_offset=24)], Call(Name('int', Load(), lineno=770, col_offset=45), [Name('value', Load(), lineno=770, col_offset=49)], [], None, None, lineno=770, col_offset=45), lineno=770, col_offset=24)], [If(Compare(Name('k', Load(), lineno=771, col_offset=25), [Eq()], [Num(8, lineno=771, col_offset=30)], lineno=771, col_offset=25), [If(UnaryOp(Not(), Name('value', Load(), lineno=774, col_offset=31), lineno=774, col_offset=27), [Assign([Subscript(Name('numeric_changes', Load(), lineno=775, col_offset=28), Index(Name('i', Load(), lineno=775, col_offset=44)), Store(), lineno=775, col_offset=28)], Num(-1, lineno=775, col_offset=50), lineno=775, col_offset=28)], [Assign([Subscript(Name('numeric_changes', Load(), lineno=777, col_offset=28), Index(Name('i', Load(), lineno=777, col_offset=44)), Store(), lineno=777, col_offset=28)], Call(Name('float', Load(), lineno=777, col_offset=49), [Name('value', Load(), lineno=777, col_offset=55)], [], None, None, lineno=777, col_offset=49), lineno=777, col_offset=28), Assert(Compare(Subscript(Name('numeric_changes', Load(), lineno=778, col_offset=35), Index(Name('i', Load(), lineno=778, col_offset=51)), Load(), lineno=778, col_offset=35), [NotIn()], [Tuple([Num(0, lineno=778, col_offset=62), Num(-1, lineno=778, col_offset=66)], Load(), lineno=778, col_offset=62)], lineno=778, col_offset=35), None, lineno=778, col_offset=28)], lineno=774, col_offset=24)], [If(Compare(Name('k', Load(), lineno=779, col_offset=25), [Eq()], [Num(9, lineno=779, col_offset=30)], lineno=779, col_offset=25), [If(Compare(Name('value', Load(), lineno=780, col_offset=27), [Eq()], [Str('Y', lineno=780, col_offset=36)], lineno=780, col_offset=27), [Assign([Subscript(Name('mirrored_changes', Load(), lineno=781, col_offset=28), Index(Name('i', Load(), lineno=781, col_offset=45)), Store(), lineno=781, col_offset=28)], Str('1', lineno=781, col_offset=50), lineno=781, col_offset=28)], [Assign([Subscript(Name('mirrored_changes', Load(), lineno=783, col_offset=28), Index(Name('i', Load(), lineno=783, col_offset=45)), Store(), lineno=783, col_offset=28)], Str('0', lineno=783, col_offset=50), lineno=783, col_offset=28)], lineno=780, col_offset=24)], [If(Compare(Name('k', Load(), lineno=784, col_offset=25), [Eq()], [Num(11, lineno=784, col_offset=30)], lineno=784, col_offset=25), [Pass( lineno=786, col_offset=24)], [If(Compare(Name('k', Load(), lineno=787, col_offset=25), [Eq()], [Num(12, lineno=787, col_offset=30)], lineno=787, col_offset=25), [Pass( lineno=789, col_offset=24)], [If(Compare(Name('k', Load(), lineno=790, col_offset=25), [Eq()], [Num(13, lineno=790, col_offset=30)], lineno=790, col_offset=25), [Pass( lineno=792, col_offset=24)], [If(Compare(Name('k', Load(), lineno=793, col_offset=25), [Eq()], [Num(14, lineno=793, col_offset=30)], lineno=793, col_offset=25), [Pass( lineno=795, col_offset=24)], [If(Compare(Name('k', Load(), lineno=796, col_offset=25), [Eq()], [Num(16, lineno=796, col_offset=30)], lineno=796, col_offset=25), [Pass( lineno=798, col_offset=24)], [ClassDef('Difference', [Name('Exception', Load(), lineno=800, col_offset=41)], [Pass( lineno=800, col_offset=52)], [], lineno=800, col_offset=24), Raise(Name('Difference', Load(), lineno=801, col_offset=30), Tuple([Call(Name('hex', Load(), lineno=801, col_offset=43), [Name('i', Load(), lineno=801, col_offset=47)], [], None, None, lineno=801, col_offset=43), Name('k', Load(), lineno=801, col_offset=51), Subscript(Attribute(Name('old', Load(), lineno=801, col_offset=54), 'table', Load(), lineno=801, col_offset=54), Index(Name('i', Load(), lineno=801, col_offset=64)), Load(), lineno=801, col_offset=54), Subscript(Attribute(Name('new', Load(), lineno=801, col_offset=68), 'table', Load(), lineno=801, col_offset=68), Index(Name('i', Load(), lineno=801, col_offset=78)), Load(), lineno=801, col_offset=68)], Load(), lineno=801, col_offset=43), None, lineno=801, col_offset=24)], lineno=796, col_offset=25)], lineno=793, col_offset=25)], lineno=790, col_offset=25)], lineno=787, col_offset=25)], lineno=784, col_offset=25)], lineno=779, col_offset=25)], lineno=771, col_offset=25)], lineno=766, col_offset=25)], lineno=761, col_offset=25)], lineno=758, col_offset=25)], lineno=755, col_offset=20)], [], lineno=753, col_offset=16)], [], lineno=752, col_offset=12)], [], lineno=751, col_offset=8)], [], lineno=739, col_offset=4), Expr(Call(Attribute(Attribute(Name('new', Load(), lineno=802, col_offset=4), 'changed', Load(), lineno=802, col_offset=4), 'append', Load(), lineno=802, col_offset=4), [Tuple([Name('version', Load(), lineno=802, col_offset=24), Call(Name('zip', Load(), lineno=802, col_offset=33), [Name('bidir_changes', Load(), lineno=802, col_offset=37), Name('category_changes', Load(), lineno=802, col_offset=52), Name('decimal_changes', Load(), lineno=803, col_offset=37), Name('mirrored_changes', Load(), lineno=803, col_offset=54), Name('numeric_changes', Load(), lineno=804, col_offset=37)], [], None, None, lineno=802, col_offset=33), Name('normalization_changes', Load(), lineno=805, col_offset=24)], Load(), lineno=802, col_offset=24)], [], None, None, lineno=802, col_offset=4), lineno=802, col_offset=4)], [], lineno=724, col_offset=0), ClassDef('UnicodeData', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=821, col_offset=17), Name('filename', Param(), lineno=821, col_offset=23), Name('exclusions', Param(), lineno=821, col_offset=33), Name('eastasianwidth', Param(), lineno=821, col_offset=45), Name('unihan', Param(), lineno=821, col_offset=61), Name('derivednormalizationprops', Param(), lineno=822, col_offset=17), Name('linebreakprops', Param(), lineno=822, col_offset=49), Name('expand', Param(), lineno=823, col_offset=17)], None, None, [Name('None', Load(), lineno=822, col_offset=43), Name('None', Load(), lineno=822, col_offset=64), Num(1, lineno=823, col_offset=24)]), [Assign([Attribute(Name('self', Load(), lineno=824, col_offset=8), 'changed', Store(), lineno=824, col_offset=8)], List([], Load(), lineno=824, col_offset=23), lineno=824, col_offset=8), Assign([Name('file', Store(), lineno=825, col_offset=8)], Call(Name('open', Load(), lineno=825, col_offset=15), [Name('filename', Load(), lineno=825, col_offset=20)], [], None, None, lineno=825, col_offset=15), lineno=825, col_offset=8), Assign([Name('table', Store(), lineno=826, col_offset=8)], BinOp(List([Name('None', Load(), lineno=826, col_offset=17)], Load(), lineno=826, col_offset=16), Mult(), Num(1114112, lineno=826, col_offset=25), lineno=826, col_offset=16), lineno=826, col_offset=8), While(Num(1, lineno=827, col_offset=14), [Assign([Name('s', Store(), lineno=828, col_offset=12)], Call(Attribute(Name('file', Load(), lineno=828, col_offset=16), 'readline', Load(), lineno=828, col_offset=16), [], [], None, None, lineno=828, col_offset=16), lineno=828, col_offset=12), If(UnaryOp(Not(), Name('s', Load(), lineno=829, col_offset=19), lineno=829, col_offset=15), [Break( lineno=830, col_offset=16)], [], lineno=829, col_offset=12), Assign([Name('s', Store(), lineno=831, col_offset=12)], Call(Attribute(Call(Attribute(Name('s', Load(), lineno=831, col_offset=16), 'strip', Load(), lineno=831, col_offset=16), [], [], None, None, lineno=831, col_offset=16), 'split', Load(), lineno=831, col_offset=16), [Str(';', lineno=831, col_offset=32)], [], None, None, lineno=831, col_offset=16), lineno=831, col_offset=12), Assign([Name('char', Store(), lineno=832, col_offset=12)], Call(Name('int', Load(), lineno=832, col_offset=19), [Subscript(Name('s', Load(), lineno=832, col_offset=23), Index(Num(0, lineno=832, col_offset=25)), Load(), lineno=832, col_offset=23), Num(16, lineno=832, col_offset=29)], [], None, None, lineno=832, col_offset=19), lineno=832, col_offset=12), Assign([Subscript(Name('table', Load(), lineno=833, col_offset=12), Index(Name('char', Load(), lineno=833, col_offset=18)), Store(), lineno=833, col_offset=12)], Name('s', Load(), lineno=833, col_offset=26), lineno=833, col_offset=12)], [], lineno=827, col_offset=8), If(Name('expand', Load(), lineno=836, col_offset=11), [Assign([Name('field', Store(), lineno=837, col_offset=12)], Name('None', Load(), lineno=837, col_offset=20), lineno=837, col_offset=12), For(Name('i', Store(), lineno=838, col_offset=16), Call(Name('range', Load(), lineno=838, col_offset=21), [Num(0, lineno=838, col_offset=27), Num(1114112, lineno=838, col_offset=30)], [], None, None, lineno=838, col_offset=21), [Assign([Name('s', Store(), lineno=839, col_offset=16)], Subscript(Name('table', Load(), lineno=839, col_offset=20), Index(Name('i', Load(), lineno=839, col_offset=26)), Load(), lineno=839, col_offset=20), lineno=839, col_offset=16), If(Name('s', Load(), lineno=840, col_offset=19), [If(Compare(Subscript(Subscript(Name('s', Load(), lineno=841, col_offset=23), Index(Num(1, lineno=841, col_offset=25)), Load(), lineno=841, col_offset=23), Slice(Num(-6, lineno=841, col_offset=29), None, None), Load(), lineno=841, col_offset=23), [Eq()], [Str('First>', lineno=841, col_offset=36)], lineno=841, col_offset=23), [Assign([Subscript(Name('s', Load(), lineno=842, col_offset=24), Index(Num(1, lineno=842, col_offset=26)), Store(), lineno=842, col_offset=24)], Str('', lineno=842, col_offset=31), lineno=842, col_offset=24), Assign([Name('field', Store(), lineno=843, col_offset=24)], Name('s', Load(), lineno=843, col_offset=32), lineno=843, col_offset=24)], [If(Compare(Subscript(Subscript(Name('s', Load(), lineno=844, col_offset=25), Index(Num(1, lineno=844, col_offset=27)), Load(), lineno=844, col_offset=25), Slice(Num(-5, lineno=844, col_offset=31), None, None), Load(), lineno=844, col_offset=25), [Eq()], [Str('Last>', lineno=844, col_offset=38)], lineno=844, col_offset=25), [Assign([Subscript(Name('s', Load(), lineno=845, col_offset=24), Index(Num(1, lineno=845, col_offset=26)), Store(), lineno=845, col_offset=24)], Str('', lineno=845, col_offset=31), lineno=845, col_offset=24), Assign([Name('field', Store(), lineno=846, col_offset=24)], Name('None', Load(), lineno=846, col_offset=32), lineno=846, col_offset=24)], [], lineno=844, col_offset=25)], lineno=841, col_offset=20)], [If(Name('field', Load(), lineno=847, col_offset=21), [Assign([Name('f2', Store(), lineno=848, col_offset=20)], Subscript(Name('field', Load(), lineno=848, col_offset=25), Slice(None, None, None), Load(), lineno=848, col_offset=25), lineno=848, col_offset=20), Assign([Subscript(Name('f2', Load(), lineno=849, col_offset=20), Index(Num(0, lineno=849, col_offset=23)), Store(), lineno=849, col_offset=20)], BinOp(Str('%X', lineno=849, col_offset=28), Mod(), Name('i', Load(), lineno=849, col_offset=35), lineno=849, col_offset=28), lineno=849, col_offset=20), Assign([Subscript(Name('table', Load(), lineno=850, col_offset=20), Index(Name('i', Load(), lineno=850, col_offset=26)), Store(), lineno=850, col_offset=20)], Name('f2', Load(), lineno=850, col_offset=31), lineno=850, col_offset=20)], [], lineno=847, col_offset=21)], lineno=840, col_offset=16)], [], lineno=838, col_offset=12)], [], lineno=836, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=853, col_offset=8), 'filename', Store(), lineno=853, col_offset=8)], Name('filename', Load(), lineno=853, col_offset=24), lineno=853, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=854, col_offset=8), 'table', Store(), lineno=854, col_offset=8)], Name('table', Load(), lineno=854, col_offset=21), lineno=854, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=855, col_offset=8), 'chars', Store(), lineno=855, col_offset=8)], Call(Name('range', Load(), lineno=855, col_offset=21), [Num(1114112, lineno=855, col_offset=27)], [], None, None, lineno=855, col_offset=21), lineno=855, col_offset=8), Assign([Name('file', Store(), lineno=857, col_offset=8)], Call(Name('open', Load(), lineno=857, col_offset=15), [Name('exclusions', Load(), lineno=857, col_offset=20)], [], None, None, lineno=857, col_offset=15), lineno=857, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=858, col_offset=8), 'exclusions', Store(), lineno=858, col_offset=8)], Dict([], [], lineno=858, col_offset=26), lineno=858, col_offset=8), For(Name('s', Store(), lineno=859, col_offset=12), Name('file', Load(), lineno=859, col_offset=17), [Assign([Name('s', Store(), lineno=860, col_offset=12)], Call(Attribute(Name('s', Load(), lineno=860, col_offset=16), 'strip', Load(), lineno=860, col_offset=16), [], [], None, None, lineno=860, col_offset=16), lineno=860, col_offset=12), If(UnaryOp(Not(), Name('s', Load(), lineno=861, col_offset=19), lineno=861, col_offset=15), [Continue( lineno=862, col_offset=16)], [], lineno=861, col_offset=12), If(Compare(Subscript(Name('s', Load(), lineno=863, col_offset=15), Index(Num(0, lineno=863, col_offset=17)), Load(), lineno=863, col_offset=15), [Eq()], [Str('#', lineno=863, col_offset=23)], lineno=863, col_offset=15), [Continue( lineno=864, col_offset=16)], [], lineno=863, col_offset=12), Assign([Name('char', Store(), lineno=865, col_offset=12)], Call(Name('int', Load(), lineno=865, col_offset=19), [Subscript(Call(Attribute(Name('s', Load(), lineno=865, col_offset=23), 'split', Load(), lineno=865, col_offset=23), [], [], None, None, lineno=865, col_offset=23), Index(Num(0, lineno=865, col_offset=33)), Load(), lineno=865, col_offset=23), Num(16, lineno=865, col_offset=36)], [], None, None, lineno=865, col_offset=19), lineno=865, col_offset=12), Assign([Subscript(Attribute(Name('self', Load(), lineno=866, col_offset=12), 'exclusions', Load(), lineno=866, col_offset=12), Index(Name('char', Load(), lineno=866, col_offset=28)), Store(), lineno=866, col_offset=12)], Num(1, lineno=866, col_offset=36), lineno=866, col_offset=12)], [], lineno=859, col_offset=8), Assign([Name('widths', Store(), lineno=868, col_offset=8)], BinOp(List([Name('None', Load(), lineno=868, col_offset=18)], Load(), lineno=868, col_offset=17), Mult(), Num(1114112, lineno=868, col_offset=26), lineno=868, col_offset=17), lineno=868, col_offset=8), For(Name('s', Store(), lineno=869, col_offset=12), Call(Name('open', Load(), lineno=869, col_offset=17), [Name('eastasianwidth', Load(), lineno=869, col_offset=22)], [], None, None, lineno=869, col_offset=17), [Assign([Name('s', Store(), lineno=870, col_offset=12)], Call(Attribute(Name('s', Load(), lineno=870, col_offset=16), 'strip', Load(), lineno=870, col_offset=16), [], [], None, None, lineno=870, col_offset=16), lineno=870, col_offset=12), If(UnaryOp(Not(), Name('s', Load(), lineno=871, col_offset=19), lineno=871, col_offset=15), [Continue( lineno=872, col_offset=16)], [], lineno=871, col_offset=12), If(Compare(Subscript(Name('s', Load(), lineno=873, col_offset=15), Index(Num(0, lineno=873, col_offset=17)), Load(), lineno=873, col_offset=15), [Eq()], [Str('#', lineno=873, col_offset=23)], lineno=873, col_offset=15), [Continue( lineno=874, col_offset=16)], [], lineno=873, col_offset=12), Assign([Name('s', Store(), lineno=875, col_offset=12)], Call(Attribute(Subscript(Call(Attribute(Name('s', Load(), lineno=875, col_offset=16), 'split', Load(), lineno=875, col_offset=16), [], [], None, None, lineno=875, col_offset=16), Index(Num(0, lineno=875, col_offset=26)), Load(), lineno=875, col_offset=16), 'split', Load(), lineno=875, col_offset=16), [Str(';', lineno=875, col_offset=35)], [], None, None, lineno=875, col_offset=16), lineno=875, col_offset=12), If(Compare(Str('..', lineno=876, col_offset=15), [In()], [Subscript(Name('s', Load(), lineno=876, col_offset=23), Index(Num(0, lineno=876, col_offset=25)), Load(), lineno=876, col_offset=23)], lineno=876, col_offset=15), [Assign([Tuple([Name('first', Store(), lineno=877, col_offset=16), Name('last', Store(), lineno=877, col_offset=23)], Store(), lineno=877, col_offset=16)], ListComp(Call(Name('int', Load(), lineno=877, col_offset=31), [Name('c', Load(), lineno=877, col_offset=35), Num(16, lineno=877, col_offset=38)], [], None, None, lineno=877, col_offset=31), [comprehension(Name('c', Store(), lineno=877, col_offset=46), Call(Attribute(Subscript(Name('s', Load(), lineno=877, col_offset=51), Index(Num(0, lineno=877, col_offset=53)), Load(), lineno=877, col_offset=51), 'split', Load(), lineno=877, col_offset=51), [Str('..', lineno=877, col_offset=62)], [], None, None, lineno=877, col_offset=51), [])], lineno=877, col_offset=31), lineno=877, col_offset=16), Assign([Name('chars', Store(), lineno=878, col_offset=16)], Call(Name('range', Load(), lineno=878, col_offset=24), [Name('first', Load(), lineno=878, col_offset=30), BinOp(Name('last', Load(), lineno=878, col_offset=37), Add(), Num(1, lineno=878, col_offset=42), lineno=878, col_offset=37)], [], None, None, lineno=878, col_offset=24), lineno=878, col_offset=16)], [Assign([Name('chars', Store(), lineno=880, col_offset=16)], List([Call(Name('int', Load(), lineno=880, col_offset=25), [Subscript(Name('s', Load(), lineno=880, col_offset=29), Index(Num(0, lineno=880, col_offset=31)), Load(), lineno=880, col_offset=29), Num(16, lineno=880, col_offset=35)], [], None, None, lineno=880, col_offset=25)], Load(), lineno=880, col_offset=24), lineno=880, col_offset=16)], lineno=876, col_offset=12), For(Name('char', Store(), lineno=881, col_offset=16), Name('chars', Load(), lineno=881, col_offset=24), [Assign([Subscript(Name('widths', Load(), lineno=882, col_offset=16), Index(Name('char', Load(), lineno=882, col_offset=23)), Store(), lineno=882, col_offset=16)], Subscript(Name('s', Load(), lineno=882, col_offset=31), Index(Num(1, lineno=882, col_offset=33)), Load(), lineno=882, col_offset=31), lineno=882, col_offset=16)], [], lineno=881, col_offset=12)], [], lineno=869, col_offset=8), For(Name('i', Store(), lineno=883, col_offset=12), Call(Name('range', Load(), lineno=883, col_offset=17), [Num(0, lineno=883, col_offset=23), Num(1114112, lineno=883, col_offset=26)], [], None, None, lineno=883, col_offset=17), [If(Compare(Subscript(Name('table', Load(), lineno=884, col_offset=15), Index(Name('i', Load(), lineno=884, col_offset=21)), Load(), lineno=884, col_offset=15), [IsNot()], [Name('None', Load(), lineno=884, col_offset=31)], lineno=884, col_offset=15), [Expr(Call(Attribute(Subscript(Name('table', Load(), lineno=885, col_offset=16), Index(Name('i', Load(), lineno=885, col_offset=22)), Load(), lineno=885, col_offset=16), 'append', Load(), lineno=885, col_offset=16), [Subscript(Name('widths', Load(), lineno=885, col_offset=32), Index(Name('i', Load(), lineno=885, col_offset=39)), Load(), lineno=885, col_offset=32)], [], None, None, lineno=885, col_offset=16), lineno=885, col_offset=16)], [], lineno=884, col_offset=12)], [], lineno=883, col_offset=8), For(Name('i', Store(), lineno=887, col_offset=12), Call(Name('range', Load(), lineno=887, col_offset=17), [Num(0, lineno=887, col_offset=23), Num(1114112, lineno=887, col_offset=26)], [], None, None, lineno=887, col_offset=17), [If(Compare(Subscript(Name('table', Load(), lineno=888, col_offset=15), Index(Name('i', Load(), lineno=888, col_offset=21)), Load(), lineno=888, col_offset=15), [IsNot()], [Name('None', Load(), lineno=888, col_offset=31)], lineno=888, col_offset=15), [Expr(Call(Attribute(Subscript(Name('table', Load(), lineno=889, col_offset=16), Index(Name('i', Load(), lineno=889, col_offset=22)), Load(), lineno=889, col_offset=16), 'append', Load(), lineno=889, col_offset=16), [Call(Name('set', Load(), lineno=889, col_offset=32), [], [], None, None, lineno=889, col_offset=32)], [], None, None, lineno=889, col_offset=16), lineno=889, col_offset=16)], [], lineno=888, col_offset=12)], [], lineno=887, col_offset=8), If(Name('linebreakprops', Load(), lineno=890, col_offset=11), [For(Name('s', Store(), lineno=891, col_offset=16), Call(Name('open', Load(), lineno=891, col_offset=21), [Name('linebreakprops', Load(), lineno=891, col_offset=26)], [], None, None, lineno=891, col_offset=21), [Assign([Name('s', Store(), lineno=892, col_offset=16)], Subscript(Call(Attribute(Name('s', Load(), lineno=892, col_offset=20), 'partition', Load(), lineno=892, col_offset=20), [Str('#', lineno=892, col_offset=32)], [], None, None, lineno=892, col_offset=20), Index(Num(0, lineno=892, col_offset=37)), Load(), lineno=892, col_offset=20), lineno=892, col_offset=16), Assign([Name('s', Store(), lineno=893, col_offset=16)], ListComp(Call(Attribute(Name('i', Load(), lineno=893, col_offset=21), 'strip', Load(), lineno=893, col_offset=21), [], [], None, None, lineno=893, col_offset=21), [comprehension(Name('i', Store(), lineno=893, col_offset=35), Call(Attribute(Name('s', Load(), lineno=893, col_offset=40), 'split', Load(), lineno=893, col_offset=40), [Str(';', lineno=893, col_offset=48)], [], None, None, lineno=893, col_offset=40), [])], lineno=893, col_offset=21), lineno=893, col_offset=16), If(BoolOp(Or(), [Compare(Call(Name('len', Load(), lineno=894, col_offset=19), [Name('s', Load(), lineno=894, col_offset=23)], [], None, None, lineno=894, col_offset=19), [Lt()], [Num(2, lineno=894, col_offset=28)], lineno=894, col_offset=19), Compare(Subscript(Name('s', Load(), lineno=894, col_offset=33), Index(Num(1, lineno=894, col_offset=35)), Load(), lineno=894, col_offset=33), [NotIn()], [Name('MANDATORY_LINE_BREAKS', Load(), lineno=894, col_offset=45)], lineno=894, col_offset=33)], lineno=894, col_offset=19), [Continue( lineno=895, col_offset=20)], [], lineno=894, col_offset=16), If(Compare(Str('..', lineno=896, col_offset=19), [NotIn()], [Subscript(Name('s', Load(), lineno=896, col_offset=31), Index(Num(0, lineno=896, col_offset=33)), Load(), lineno=896, col_offset=31)], lineno=896, col_offset=19), [Assign([Name('first', Store(), lineno=897, col_offset=20), Name('last', Store(), lineno=897, col_offset=28)], Call(Name('int', Load(), lineno=897, col_offset=35), [Subscript(Name('s', Load(), lineno=897, col_offset=39), Index(Num(0, lineno=897, col_offset=41)), Load(), lineno=897, col_offset=39), Num(16, lineno=897, col_offset=45)], [], None, None, lineno=897, col_offset=35), lineno=897, col_offset=20)], [Assign([Tuple([Name('first', Store(), lineno=899, col_offset=20), Name('last', Store(), lineno=899, col_offset=27)], Store(), lineno=899, col_offset=20)], ListComp(Call(Name('int', Load(), lineno=899, col_offset=35), [Name('c', Load(), lineno=899, col_offset=39), Num(16, lineno=899, col_offset=42)], [], None, None, lineno=899, col_offset=35), [comprehension(Name('c', Store(), lineno=899, col_offset=50), Call(Attribute(Subscript(Name('s', Load(), lineno=899, col_offset=55), Index(Num(0, lineno=899, col_offset=57)), Load(), lineno=899, col_offset=55), 'split', Load(), lineno=899, col_offset=55), [Str('..', lineno=899, col_offset=66)], [], None, None, lineno=899, col_offset=55), [])], lineno=899, col_offset=35), lineno=899, col_offset=20)], lineno=896, col_offset=16), For(Name('char', Store(), lineno=900, col_offset=20), Call(Name('range', Load(), lineno=900, col_offset=28), [Name('first', Load(), lineno=900, col_offset=34), BinOp(Name('last', Load(), lineno=900, col_offset=41), Add(), Num(1, lineno=900, col_offset=46), lineno=900, col_offset=41)], [], None, None, lineno=900, col_offset=28), [Expr(Call(Attribute(Subscript(Subscript(Name('table', Load(), lineno=901, col_offset=20), Index(Name('char', Load(), lineno=901, col_offset=26)), Load(), lineno=901, col_offset=20), Index(Num(-1, lineno=901, col_offset=33)), Load(), lineno=901, col_offset=20), 'add', Load(), lineno=901, col_offset=20), [Str('Line_Break', lineno=901, col_offset=40)], [], None, None, lineno=901, col_offset=20), lineno=901, col_offset=20)], [], lineno=900, col_offset=16)], [], lineno=891, col_offset=12)], [], lineno=890, col_offset=8), If(Name('derivednormalizationprops', Load(), lineno=903, col_offset=11), [Assign([Name('quickchecks', Store(), lineno=904, col_offset=12)], BinOp(List([Num(0, lineno=904, col_offset=27)], Load(), lineno=904, col_offset=26), Mult(), Num(1114112, lineno=904, col_offset=32), lineno=904, col_offset=26), lineno=904, col_offset=12), Assign([Name('qc_order', Store(), lineno=905, col_offset=12)], Call(Attribute(Str('NFD_QC NFKD_QC NFC_QC NFKC_QC', lineno=905, col_offset=23), 'split', Load(), lineno=905, col_offset=23), [], [], None, None, lineno=905, col_offset=23), lineno=905, col_offset=12), For(Name('s', Store(), lineno=906, col_offset=16), Call(Name('open', Load(), lineno=906, col_offset=21), [Name('derivednormalizationprops', Load(), lineno=906, col_offset=26)], [], None, None, lineno=906, col_offset=21), [If(Compare(Str('#', lineno=907, col_offset=19), [In()], [Name('s', Load(), lineno=907, col_offset=26)], lineno=907, col_offset=19), [Assign([Name('s', Store(), lineno=908, col_offset=20)], Subscript(Name('s', Load(), lineno=908, col_offset=24), Slice(None, Call(Attribute(Name('s', Load(), lineno=908, col_offset=27), 'index', Load(), lineno=908, col_offset=27), [Str('#', lineno=908, col_offset=35)], [], None, None, lineno=908, col_offset=27), None), Load(), lineno=908, col_offset=24), lineno=908, col_offset=20)], [], lineno=907, col_offset=16), Assign([Name('s', Store(), lineno=909, col_offset=16)], ListComp(Call(Attribute(Name('i', Load(), lineno=909, col_offset=21), 'strip', Load(), lineno=909, col_offset=21), [], [], None, None, lineno=909, col_offset=21), [comprehension(Name('i', Store(), lineno=909, col_offset=35), Call(Attribute(Name('s', Load(), lineno=909, col_offset=40), 'split', Load(), lineno=909, col_offset=40), [Str(';', lineno=909, col_offset=48)], [], None, None, lineno=909, col_offset=40), [])], lineno=909, col_offset=21), lineno=909, col_offset=16), If(BoolOp(Or(), [Compare(Call(Name('len', Load(), lineno=910, col_offset=19), [Name('s', Load(), lineno=910, col_offset=23)], [], None, None, lineno=910, col_offset=19), [Lt()], [Num(2, lineno=910, col_offset=28)], lineno=910, col_offset=19), Compare(Subscript(Name('s', Load(), lineno=910, col_offset=33), Index(Num(1, lineno=910, col_offset=35)), Load(), lineno=910, col_offset=33), [NotIn()], [Name('qc_order', Load(), lineno=910, col_offset=45)], lineno=910, col_offset=33)], lineno=910, col_offset=19), [Continue( lineno=911, col_offset=20)], [], lineno=910, col_offset=16), Assign([Name('quickcheck', Store(), lineno=912, col_offset=16)], BinOp(Call(Attribute(Str('MN', lineno=912, col_offset=29), 'index', Load(), lineno=912, col_offset=29), [Subscript(Name('s', Load(), lineno=912, col_offset=40), Index(Num(2, lineno=912, col_offset=42)), Load(), lineno=912, col_offset=40)], [], None, None, lineno=912, col_offset=29), Add(), Num(1, lineno=912, col_offset=48), lineno=912, col_offset=29), lineno=912, col_offset=16), Assign([Name('quickcheck_shift', Store(), lineno=913, col_offset=16)], BinOp(Call(Attribute(Name('qc_order', Load(), lineno=913, col_offset=35), 'index', Load(), lineno=913, col_offset=35), [Subscript(Name('s', Load(), lineno=913, col_offset=50), Index(Num(1, lineno=913, col_offset=52)), Load(), lineno=913, col_offset=50)], [], None, None, lineno=913, col_offset=35), Mult(), Num(2, lineno=913, col_offset=56), lineno=913, col_offset=35), lineno=913, col_offset=16), AugAssign(Name('quickcheck', Store(), lineno=914, col_offset=16), LShift(), Name('quickcheck_shift', Load(), lineno=914, col_offset=31), lineno=914, col_offset=16), If(Compare(Str('..', lineno=915, col_offset=19), [NotIn()], [Subscript(Name('s', Load(), lineno=915, col_offset=31), Index(Num(0, lineno=915, col_offset=33)), Load(), lineno=915, col_offset=31)], lineno=915, col_offset=19), [Assign([Name('first', Store(), lineno=916, col_offset=20), Name('last', Store(), lineno=916, col_offset=28)], Call(Name('int', Load(), lineno=916, col_offset=35), [Subscript(Name('s', Load(), lineno=916, col_offset=39), Index(Num(0, lineno=916, col_offset=41)), Load(), lineno=916, col_offset=39), Num(16, lineno=916, col_offset=45)], [], None, None, lineno=916, col_offset=35), lineno=916, col_offset=20)], [Assign([Tuple([Name('first', Store(), lineno=918, col_offset=20), Name('last', Store(), lineno=918, col_offset=27)], Store(), lineno=918, col_offset=20)], ListComp(Call(Name('int', Load(), lineno=918, col_offset=35), [Name('c', Load(), lineno=918, col_offset=39), Num(16, lineno=918, col_offset=42)], [], None, None, lineno=918, col_offset=35), [comprehension(Name('c', Store(), lineno=918, col_offset=50), Call(Attribute(Subscript(Name('s', Load(), lineno=918, col_offset=55), Index(Num(0, lineno=918, col_offset=57)), Load(), lineno=918, col_offset=55), 'split', Load(), lineno=918, col_offset=55), [Str('..', lineno=918, col_offset=66)], [], None, None, lineno=918, col_offset=55), [])], lineno=918, col_offset=35), lineno=918, col_offset=20)], lineno=915, col_offset=16), For(Name('char', Store(), lineno=919, col_offset=20), Call(Name('range', Load(), lineno=919, col_offset=28), [Name('first', Load(), lineno=919, col_offset=34), BinOp(Name('last', Load(), lineno=919, col_offset=41), Add(), Num(1, lineno=919, col_offset=46), lineno=919, col_offset=41)], [], None, None, lineno=919, col_offset=28), [Assert(UnaryOp(Not(), BinOp(BinOp(Subscript(Name('quickchecks', Load(), lineno=920, col_offset=32), Index(Name('char', Load(), lineno=920, col_offset=44)), Load(), lineno=920, col_offset=32), RShift(), Name('quickcheck_shift', Load(), lineno=920, col_offset=51), lineno=920, col_offset=32), BitAnd(), Num(3, lineno=920, col_offset=69), lineno=920, col_offset=31), lineno=920, col_offset=27), None, lineno=920, col_offset=20), AugAssign(Subscript(Name('quickchecks', Load(), lineno=921, col_offset=20), Index(Name('char', Load(), lineno=921, col_offset=32)), Store(), lineno=921, col_offset=20), BitOr(), Name('quickcheck', Load(), lineno=921, col_offset=41), lineno=921, col_offset=20)], [], lineno=919, col_offset=16)], [], lineno=906, col_offset=12), For(Name('i', Store(), lineno=922, col_offset=16), Call(Name('range', Load(), lineno=922, col_offset=21), [Num(0, lineno=922, col_offset=27), Num(1114112, lineno=922, col_offset=30)], [], None, None, lineno=922, col_offset=21), [If(Compare(Subscript(Name('table', Load(), lineno=923, col_offset=19), Index(Name('i', Load(), lineno=923, col_offset=25)), Load(), lineno=923, col_offset=19), [IsNot()], [Name('None', Load(), lineno=923, col_offset=35)], lineno=923, col_offset=19), [Expr(Call(Attribute(Subscript(Name('table', Load(), lineno=924, col_offset=20), Index(Name('i', Load(), lineno=924, col_offset=26)), Load(), lineno=924, col_offset=20), 'append', Load(), lineno=924, col_offset=20), [Subscript(Name('quickchecks', Load(), lineno=924, col_offset=36), Index(Name('i', Load(), lineno=924, col_offset=48)), Load(), lineno=924, col_offset=36)], [], None, None, lineno=924, col_offset=20), lineno=924, col_offset=20)], [], lineno=923, col_offset=16)], [], lineno=922, col_offset=12)], [], lineno=903, col_offset=8), For(Name('line', Store(), lineno=926, col_offset=12), Call(Name('open', Load(), lineno=926, col_offset=20), [Name('unihan', Load(), lineno=926, col_offset=25)], [], None, None, lineno=926, col_offset=20), [If(UnaryOp(Not(), Call(Attribute(Name('line', Load(), lineno=927, col_offset=19), 'startswith', Load(), lineno=927, col_offset=19), [Str('U+', lineno=927, col_offset=35)], [], None, None, lineno=927, col_offset=19), lineno=927, col_offset=15), [Continue( lineno=928, col_offset=16)], [], lineno=927, col_offset=12), Assign([Tuple([Name('code', Store(), lineno=929, col_offset=12), Name('tag', Store(), lineno=929, col_offset=18), Name('value', Store(), lineno=929, col_offset=23)], Store(), lineno=929, col_offset=12)], Subscript(Call(Attribute(Name('line', Load(), lineno=929, col_offset=31), 'split', Load(), lineno=929, col_offset=31), [Name('None', Load(), lineno=929, col_offset=42), Num(3, lineno=929, col_offset=48)], [], None, None, lineno=929, col_offset=31), Slice(None, Num(3, lineno=929, col_offset=52), None), Load(), lineno=929, col_offset=31), lineno=929, col_offset=12), If(Compare(Name('tag', Load(), lineno=930, col_offset=15), [NotIn()], [Tuple([Str('kAccountingNumeric', lineno=930, col_offset=27), Str('kPrimaryNumeric', lineno=930, col_offset=49), Str('kOtherNumeric', lineno=931, col_offset=27)], Load(), lineno=930, col_offset=27)], lineno=930, col_offset=15), [Continue( lineno=932, col_offset=16)], [], lineno=930, col_offset=12), Assign([Name('value', Store(), lineno=933, col_offset=12)], Call(Attribute(Call(Attribute(Name('value', Load(), lineno=933, col_offset=20), 'strip', Load(), lineno=933, col_offset=20), [], [], None, None, lineno=933, col_offset=20), 'replace', Load(), lineno=933, col_offset=20), [Str(',', lineno=933, col_offset=42), Str('', lineno=933, col_offset=47)], [], None, None, lineno=933, col_offset=20), lineno=933, col_offset=12), Assign([Name('i', Store(), lineno=934, col_offset=12)], Call(Name('int', Load(), lineno=934, col_offset=16), [Subscript(Name('code', Load(), lineno=934, col_offset=20), Slice(Num(2, lineno=934, col_offset=25), None, None), Load(), lineno=934, col_offset=20), Num(16, lineno=934, col_offset=30)], [], None, None, lineno=934, col_offset=16), lineno=934, col_offset=12), If(Compare(Subscript(Name('table', Load(), lineno=936, col_offset=15), Index(Name('i', Load(), lineno=936, col_offset=21)), Load(), lineno=936, col_offset=15), [IsNot()], [Name('None', Load(), lineno=936, col_offset=31)], lineno=936, col_offset=15), [Assign([Subscript(Subscript(Name('table', Load(), lineno=937, col_offset=16), Index(Name('i', Load(), lineno=937, col_offset=22)), Load(), lineno=937, col_offset=16), Index(Num(8, lineno=937, col_offset=25)), Store(), lineno=937, col_offset=16)], Name('value', Load(), lineno=937, col_offset=30), lineno=937, col_offset=16)], [], lineno=936, col_offset=12)], [], lineno=926, col_offset=8)], [], lineno=821, col_offset=4), FunctionDef('uselatin1', arguments([Name('self', Param(), lineno=939, col_offset=18)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=941, col_offset=8), 'chars', Store(), lineno=941, col_offset=8)], Call(Name('range', Load(), lineno=941, col_offset=21), [Num(256, lineno=941, col_offset=27)], [], None, None, lineno=941, col_offset=21), lineno=941, col_offset=8)], [], lineno=939, col_offset=4)], [], lineno=814, col_offset=0), FunctionDef('myhash', arguments([Name('s', Param(), lineno=949, col_offset=11), Name('magic', Param(), lineno=949, col_offset=14)], None, None, []), [Assign([Name('h', Store(), lineno=950, col_offset=4)], Num(0, lineno=950, col_offset=8), lineno=950, col_offset=4), For(Name('c', Store(), lineno=951, col_offset=8), Call(Name('map', Load(), lineno=951, col_offset=13), [Name('ord', Load(), lineno=951, col_offset=17), Call(Attribute(Name('s', Load(), lineno=951, col_offset=22), 'upper', Load(), lineno=951, col_offset=22), [], [], None, None, lineno=951, col_offset=22)], [], None, None, lineno=951, col_offset=13), [Assign([Name('h', Store(), lineno=952, col_offset=8)], BinOp(BinOp(Name('h', Load(), lineno=952, col_offset=13), Mult(), Name('magic', Load(), lineno=952, col_offset=17), lineno=952, col_offset=13), Add(), Name('c', Load(), lineno=952, col_offset=26), lineno=952, col_offset=12), lineno=952, col_offset=8), Assign([Name('ix', Store(), lineno=953, col_offset=8)], BinOp(Name('h', Load(), lineno=953, col_offset=13), BitAnd(), Num(4278190080L, lineno=953, col_offset=17), lineno=953, col_offset=13), lineno=953, col_offset=8), If(Name('ix', Load(), lineno=954, col_offset=11), [Assign([Name('h', Store(), lineno=955, col_offset=12)], BinOp(BinOp(Name('h', Load(), lineno=955, col_offset=17), BitXor(), BinOp(BinOp(Name('ix', Load(), lineno=955, col_offset=23), RShift(), Num(24, lineno=955, col_offset=27), lineno=955, col_offset=23), BitAnd(), Num(255, lineno=955, col_offset=33), lineno=955, col_offset=22), lineno=955, col_offset=17), BitAnd(), Num(16777215, lineno=955, col_offset=42), lineno=955, col_offset=16), lineno=955, col_offset=12)], [], lineno=954, col_offset=8)], [], lineno=951, col_offset=4), Return(Name('h', Load(), lineno=956, col_offset=11), lineno=956, col_offset=4)], [], lineno=949, col_offset=0), Assign([Name('SIZES', Store(), lineno=958, col_offset=0)], List([Tuple([Num(4, lineno=959, col_offset=5), Num(3, lineno=959, col_offset=7)], Load(), lineno=959, col_offset=5), Tuple([Num(8, lineno=959, col_offset=12), Num(3, lineno=959, col_offset=14)], Load(), lineno=959, col_offset=12), Tuple([Num(16, lineno=959, col_offset=19), Num(3, lineno=959, col_offset=22)], Load(), lineno=959, col_offset=19), Tuple([Num(32, lineno=959, col_offset=27), Num(5, lineno=959, col_offset=30)], Load(), lineno=959, col_offset=27), Tuple([Num(64, lineno=959, col_offset=35), Num(3, lineno=959, col_offset=38)], Load(), lineno=959, col_offset=35), Tuple([Num(128, lineno=959, col_offset=43), Num(3, lineno=959, col_offset=47)], Load(), lineno=959, col_offset=43), Tuple([Num(256, lineno=959, col_offset=52), Num(29, lineno=959, col_offset=56)], Load(), lineno=959, col_offset=52), Tuple([Num(512, lineno=959, col_offset=62), Num(17, lineno=959, col_offset=66)], Load(), lineno=959, col_offset=62), Tuple([Num(1024, lineno=960, col_offset=5), Num(9, lineno=960, col_offset=10)], Load(), lineno=960, col_offset=5), Tuple([Num(2048, lineno=960, col_offset=15), Num(5, lineno=960, col_offset=20)], Load(), lineno=960, col_offset=15), Tuple([Num(4096, lineno=960, col_offset=25), Num(83, lineno=960, col_offset=30)], Load(), lineno=960, col_offset=25), Tuple([Num(8192, lineno=960, col_offset=36), Num(27, lineno=960, col_offset=41)], Load(), lineno=960, col_offset=36), Tuple([Num(16384, lineno=960, col_offset=47), Num(43, lineno=960, col_offset=53)], Load(), lineno=960, col_offset=47), Tuple([Num(32768, lineno=960, col_offset=59), Num(3, lineno=960, col_offset=65)], Load(), lineno=960, col_offset=59), Tuple([Num(65536, lineno=961, col_offset=5), Num(45, lineno=961, col_offset=11)], Load(), lineno=961, col_offset=5), Tuple([Num(131072, lineno=961, col_offset=17), Num(9, lineno=961, col_offset=24)], Load(), lineno=961, col_offset=17), Tuple([Num(262144, lineno=961, col_offset=29), Num(39, lineno=961, col_offset=36)], Load(), lineno=961, col_offset=29), Tuple([Num(524288, lineno=961, col_offset=42), Num(39, lineno=961, col_offset=49)], Load(), lineno=961, col_offset=42), Tuple([Num(1048576, lineno=961, col_offset=55), Num(9, lineno=961, col_offset=63)], Load(), lineno=961, col_offset=55), Tuple([Num(2097152, lineno=962, col_offset=5), Num(5, lineno=962, col_offset=13)], Load(), lineno=962, col_offset=5), Tuple([Num(4194304, lineno=962, col_offset=18), Num(3, lineno=962, col_offset=26)], Load(), lineno=962, col_offset=18), Tuple([Num(8388608, lineno=962, col_offset=31), Num(33, lineno=962, col_offset=39)], Load(), lineno=962, col_offset=31), Tuple([Num(16777216, lineno=962, col_offset=45), Num(27, lineno=962, col_offset=54)], Load(), lineno=962, col_offset=45)], Load(), lineno=958, col_offset=8), lineno=958, col_offset=0), ClassDef('Hash', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=966, col_offset=17), Name('name', Param(), lineno=966, col_offset=23), Name('data', Param(), lineno=966, col_offset=29), Name('magic', Param(), lineno=966, col_offset=35)], None, None, []), [For(Tuple([Name('size', Store(), lineno=970, col_offset=12), Name('poly', Store(), lineno=970, col_offset=18)], Store(), lineno=970, col_offset=12), Name('SIZES', Load(), lineno=970, col_offset=26), [If(Compare(Name('size', Load(), lineno=971, col_offset=15), [Gt()], [Call(Name('len', Load(), lineno=971, col_offset=22), [Name('data', Load(), lineno=971, col_offset=26)], [], None, None, lineno=971, col_offset=22)], lineno=971, col_offset=15), [Assign([Name('poly', Store(), lineno=972, col_offset=16)], BinOp(Name('size', Load(), lineno=972, col_offset=23), Add(), Name('poly', Load(), lineno=972, col_offset=30), lineno=972, col_offset=23), lineno=972, col_offset=16), Break( lineno=973, col_offset=16)], [], lineno=971, col_offset=12)], [Raise(Name('AssertionError', Load(), lineno=975, col_offset=18), Str('ran out of polynominals', lineno=975, col_offset=34), None, lineno=975, col_offset=12)], lineno=970, col_offset=8), Print(None, [Name('size', Load(), lineno=977, col_offset=14), Str('slots in hash table', lineno=977, col_offset=20)], True, lineno=977, col_offset=8), Assign([Name('table', Store(), lineno=979, col_offset=8)], BinOp(List([Name('None', Load(), lineno=979, col_offset=17)], Load(), lineno=979, col_offset=16), Mult(), Name('size', Load(), lineno=979, col_offset=25), lineno=979, col_offset=16), lineno=979, col_offset=8), Assign([Name('mask', Store(), lineno=981, col_offset=8)], BinOp(Name('size', Load(), lineno=981, col_offset=15), Sub(), Num(1, lineno=981, col_offset=20), lineno=981, col_offset=15), lineno=981, col_offset=8), Assign([Name('n', Store(), lineno=983, col_offset=8)], Num(0, lineno=983, col_offset=12), lineno=983, col_offset=8), Assign([Name('hash', Store(), lineno=985, col_offset=8)], Name('myhash', Load(), lineno=985, col_offset=15), lineno=985, col_offset=8), For(Tuple([Name('key', Store(), lineno=988, col_offset=12), Name('value', Store(), lineno=988, col_offset=17)], Store(), lineno=988, col_offset=12), Name('data', Load(), lineno=988, col_offset=26), [Assign([Name('h', Store(), lineno=989, col_offset=12)], Call(Name('hash', Load(), lineno=989, col_offset=16), [Name('key', Load(), lineno=989, col_offset=21), Name('magic', Load(), lineno=989, col_offset=26)], [], None, None, lineno=989, col_offset=16), lineno=989, col_offset=12), Assign([Name('i', Store(), lineno=990, col_offset=12)], BinOp(UnaryOp(Invert(), Name('h', Load(), lineno=990, col_offset=18), lineno=990, col_offset=17), BitAnd(), Name('mask', Load(), lineno=990, col_offset=23), lineno=990, col_offset=16), lineno=990, col_offset=12), Assign([Name('v', Store(), lineno=991, col_offset=12)], Subscript(Name('table', Load(), lineno=991, col_offset=16), Index(Name('i', Load(), lineno=991, col_offset=22)), Load(), lineno=991, col_offset=16), lineno=991, col_offset=12), If(Compare(Name('v', Load(), lineno=992, col_offset=15), [Is()], [Name('None', Load(), lineno=992, col_offset=20)], lineno=992, col_offset=15), [Assign([Subscript(Name('table', Load(), lineno=993, col_offset=16), Index(Name('i', Load(), lineno=993, col_offset=22)), Store(), lineno=993, col_offset=16)], Name('value', Load(), lineno=993, col_offset=27), lineno=993, col_offset=16), Continue( lineno=994, col_offset=16)], [], lineno=992, col_offset=12), Assign([Name('incr', Store(), lineno=995, col_offset=12)], BinOp(BinOp(Name('h', Load(), lineno=995, col_offset=20), BitXor(), BinOp(Name('h', Load(), lineno=995, col_offset=25), RShift(), Num(3, lineno=995, col_offset=30), lineno=995, col_offset=25), lineno=995, col_offset=20), BitAnd(), Name('mask', Load(), lineno=995, col_offset=36), lineno=995, col_offset=19), lineno=995, col_offset=12), If(UnaryOp(Not(), Name('incr', Load(), lineno=996, col_offset=19), lineno=996, col_offset=15), [Assign([Name('incr', Store(), lineno=997, col_offset=16)], Name('mask', Load(), lineno=997, col_offset=23), lineno=997, col_offset=16)], [], lineno=996, col_offset=12), While(Num(1, lineno=998, col_offset=18), [Assign([Name('n', Store(), lineno=999, col_offset=16)], BinOp(Name('n', Load(), lineno=999, col_offset=20), Add(), Num(1, lineno=999, col_offset=24), lineno=999, col_offset=20), lineno=999, col_offset=16), Assign([Name('i', Store(), lineno=1000, col_offset=16)], BinOp(BinOp(Name('i', Load(), lineno=1000, col_offset=21), Add(), Name('incr', Load(), lineno=1000, col_offset=25), lineno=1000, col_offset=21), BitAnd(), Name('mask', Load(), lineno=1000, col_offset=33), lineno=1000, col_offset=20), lineno=1000, col_offset=16), Assign([Name('v', Store(), lineno=1001, col_offset=16)], Subscript(Name('table', Load(), lineno=1001, col_offset=20), Index(Name('i', Load(), lineno=1001, col_offset=26)), Load(), lineno=1001, col_offset=20), lineno=1001, col_offset=16), If(Compare(Name('v', Load(), lineno=1002, col_offset=19), [Is()], [Name('None', Load(), lineno=1002, col_offset=24)], lineno=1002, col_offset=19), [Assign([Subscript(Name('table', Load(), lineno=1003, col_offset=20), Index(Name('i', Load(), lineno=1003, col_offset=26)), Store(), lineno=1003, col_offset=20)], Name('value', Load(), lineno=1003, col_offset=31), lineno=1003, col_offset=20), Break( lineno=1004, col_offset=20)], [], lineno=1002, col_offset=16), Assign([Name('incr', Store(), lineno=1005, col_offset=16)], BinOp(Name('incr', Load(), lineno=1005, col_offset=23), LShift(), Num(1, lineno=1005, col_offset=31), lineno=1005, col_offset=23), lineno=1005, col_offset=16), If(Compare(Name('incr', Load(), lineno=1006, col_offset=19), [Gt()], [Name('mask', Load(), lineno=1006, col_offset=26)], lineno=1006, col_offset=19), [Assign([Name('incr', Store(), lineno=1007, col_offset=20)], BinOp(Name('incr', Load(), lineno=1007, col_offset=27), BitXor(), Name('poly', Load(), lineno=1007, col_offset=34), lineno=1007, col_offset=27), lineno=1007, col_offset=20)], [], lineno=1006, col_offset=16)], [], lineno=998, col_offset=12)], [], lineno=988, col_offset=8), Print(None, [Name('n', Load(), lineno=1009, col_offset=14), Str('collisions', lineno=1009, col_offset=17)], True, lineno=1009, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1010, col_offset=8), 'collisions', Store(), lineno=1010, col_offset=8)], Name('n', Load(), lineno=1010, col_offset=26), lineno=1010, col_offset=8), For(Name('i', Store(), lineno=1012, col_offset=12), Call(Name('range', Load(), lineno=1012, col_offset=17), [Call(Name('len', Load(), lineno=1012, col_offset=23), [Name('table', Load(), lineno=1012, col_offset=27)], [], None, None, lineno=1012, col_offset=23)], [], None, None, lineno=1012, col_offset=17), [If(Compare(Subscript(Name('table', Load(), lineno=1013, col_offset=15), Index(Name('i', Load(), lineno=1013, col_offset=21)), Load(), lineno=1013, col_offset=15), [Is()], [Name('None', Load(), lineno=1013, col_offset=27)], lineno=1013, col_offset=15), [Assign([Subscript(Name('table', Load(), lineno=1014, col_offset=16), Index(Name('i', Load(), lineno=1014, col_offset=22)), Store(), lineno=1014, col_offset=16)], Num(0, lineno=1014, col_offset=27), lineno=1014, col_offset=16)], [], lineno=1013, col_offset=12)], [], lineno=1012, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1016, col_offset=8), 'data', Store(), lineno=1016, col_offset=8)], Call(Name('Array', Load(), lineno=1016, col_offset=20), [BinOp(Name('name', Load(), lineno=1016, col_offset=26), Add(), Str('_hash', lineno=1016, col_offset=33), lineno=1016, col_offset=26), Name('table', Load(), lineno=1016, col_offset=42)], [], None, None, lineno=1016, col_offset=20), lineno=1016, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1017, col_offset=8), 'magic', Store(), lineno=1017, col_offset=8)], Name('magic', Load(), lineno=1017, col_offset=21), lineno=1017, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1018, col_offset=8), 'name', Store(), lineno=1018, col_offset=8)], Name('name', Load(), lineno=1018, col_offset=20), lineno=1018, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1019, col_offset=8), 'size', Store(), lineno=1019, col_offset=8)], Name('size', Load(), lineno=1019, col_offset=20), lineno=1019, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1020, col_offset=8), 'poly', Store(), lineno=1020, col_offset=8)], Name('poly', Load(), lineno=1020, col_offset=20), lineno=1020, col_offset=8)], [], lineno=966, col_offset=4), FunctionDef('dump', arguments([Name('self', Param(), lineno=1022, col_offset=13), Name('file', Param(), lineno=1022, col_offset=19), Name('trace', Param(), lineno=1022, col_offset=25)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1024, col_offset=8), 'data', Load(), lineno=1024, col_offset=8), 'dump', Load(), lineno=1024, col_offset=8), [Name('file', Load(), lineno=1024, col_offset=23), Name('trace', Load(), lineno=1024, col_offset=29)], [], None, None, lineno=1024, col_offset=8), lineno=1024, col_offset=8), Expr(Call(Attribute(Name('file', Load(), lineno=1025, col_offset=8), 'write', Load(), lineno=1025, col_offset=8), [BinOp(Str('#define %s_magic %d\n', lineno=1025, col_offset=19), Mod(), Tuple([Attribute(Name('self', Load(), lineno=1025, col_offset=46), 'name', Load(), lineno=1025, col_offset=46), Attribute(Name('self', Load(), lineno=1025, col_offset=57), 'magic', Load(), lineno=1025, col_offset=57)], Load(), lineno=1025, col_offset=46), lineno=1025, col_offset=19)], [], None, None, lineno=1025, col_offset=8), lineno=1025, col_offset=8), Expr(Call(Attribute(Name('file', Load(), lineno=1026, col_offset=8), 'write', Load(), lineno=1026, col_offset=8), [BinOp(Str('#define %s_size %d\n', lineno=1026, col_offset=19), Mod(), Tuple([Attribute(Name('self', Load(), lineno=1026, col_offset=45), 'name', Load(), lineno=1026, col_offset=45), Attribute(Name('self', Load(), lineno=1026, col_offset=56), 'size', Load(), lineno=1026, col_offset=56)], Load(), lineno=1026, col_offset=45), lineno=1026, col_offset=19)], [], None, None, lineno=1026, col_offset=8), lineno=1026, col_offset=8), Expr(Call(Attribute(Name('file', Load(), lineno=1027, col_offset=8), 'write', Load(), lineno=1027, col_offset=8), [BinOp(Str('#define %s_poly %d\n', lineno=1027, col_offset=19), Mod(), Tuple([Attribute(Name('self', Load(), lineno=1027, col_offset=45), 'name', Load(), lineno=1027, col_offset=45), Attribute(Name('self', Load(), lineno=1027, col_offset=56), 'poly', Load(), lineno=1027, col_offset=56)], Load(), lineno=1027, col_offset=45), lineno=1027, col_offset=19)], [], None, None, lineno=1027, col_offset=8), lineno=1027, col_offset=8)], [], lineno=1022, col_offset=4)], [], lineno=965, col_offset=0), ClassDef('Array', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=1033, col_offset=17), Name('name', Param(), lineno=1033, col_offset=23), Name('data', Param(), lineno=1033, col_offset=29)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1034, col_offset=8), 'name', Store(), lineno=1034, col_offset=8)], Name('name', Load(), lineno=1034, col_offset=20), lineno=1034, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1035, col_offset=8), 'data', Store(), lineno=1035, col_offset=8)], Name('data', Load(), lineno=1035, col_offset=20), lineno=1035, col_offset=8)], [], lineno=1033, col_offset=4), FunctionDef('dump', arguments([Name('self', Param(), lineno=1037, col_offset=13), Name('file', Param(), lineno=1037, col_offset=19), Name('trace', Param(), lineno=1037, col_offset=25)], None, None, [Num(0, lineno=1037, col_offset=31)]), [Assign([Name('size', Store(), lineno=1039, col_offset=8)], Call(Name('getsize', Load(), lineno=1039, col_offset=15), [Attribute(Name('self', Load(), lineno=1039, col_offset=23), 'data', Load(), lineno=1039, col_offset=23)], [], None, None, lineno=1039, col_offset=15), lineno=1039, col_offset=8), If(Name('trace', Load(), lineno=1040, col_offset=11), [Print(Attribute(Name('sys', Load(), lineno=1041, col_offset=20), 'stderr', Load(), lineno=1041, col_offset=20), [BinOp(Attribute(Name('self', Load(), lineno=1041, col_offset=32), 'name', Load(), lineno=1041, col_offset=32), Add(), Str(':', lineno=1041, col_offset=42), lineno=1041, col_offset=32), BinOp(Name('size', Load(), lineno=1041, col_offset=47), Mult(), Call(Name('len', Load(), lineno=1041, col_offset=52), [Attribute(Name('self', Load(), lineno=1041, col_offset=56), 'data', Load(), lineno=1041, col_offset=56)], [], None, None, lineno=1041, col_offset=52), lineno=1041, col_offset=47), Str('bytes', lineno=1041, col_offset=68)], True, lineno=1041, col_offset=12)], [], lineno=1040, col_offset=8), Expr(Call(Attribute(Name('file', Load(), lineno=1042, col_offset=8), 'write', Load(), lineno=1042, col_offset=8), [Str('static ', lineno=1042, col_offset=19)], [], None, None, lineno=1042, col_offset=8), lineno=1042, col_offset=8), If(Compare(Name('size', Load(), lineno=1043, col_offset=11), [Eq()], [Num(1, lineno=1043, col_offset=19)], lineno=1043, col_offset=11), [Expr(Call(Attribute(Name('file', Load(), lineno=1044, col_offset=12), 'write', Load(), lineno=1044, col_offset=12), [Str('unsigned char', lineno=1044, col_offset=23)], [], None, None, lineno=1044, col_offset=12), lineno=1044, col_offset=12)], [If(Compare(Name('size', Load(), lineno=1045, col_offset=13), [Eq()], [Num(2, lineno=1045, col_offset=21)], lineno=1045, col_offset=13), [Expr(Call(Attribute(Name('file', Load(), lineno=1046, col_offset=12), 'write', Load(), lineno=1046, col_offset=12), [Str('unsigned short', lineno=1046, col_offset=23)], [], None, None, lineno=1046, col_offset=12), lineno=1046, col_offset=12)], [Expr(Call(Attribute(Name('file', Load(), lineno=1048, col_offset=12), 'write', Load(), lineno=1048, col_offset=12), [Str('unsigned int', lineno=1048, col_offset=23)], [], None, None, lineno=1048, col_offset=12), lineno=1048, col_offset=12)], lineno=1045, col_offset=13)], lineno=1043, col_offset=8), Expr(Call(Attribute(Name('file', Load(), lineno=1049, col_offset=8), 'write', Load(), lineno=1049, col_offset=8), [BinOp(BinOp(Str(' ', lineno=1049, col_offset=19), Add(), Attribute(Name('self', Load(), lineno=1049, col_offset=25), 'name', Load(), lineno=1049, col_offset=25), lineno=1049, col_offset=19), Add(), Str('[] = {\n', lineno=1049, col_offset=37), lineno=1049, col_offset=35)], [], None, None, lineno=1049, col_offset=8), lineno=1049, col_offset=8), If(Attribute(Name('self', Load(), lineno=1050, col_offset=11), 'data', Load(), lineno=1050, col_offset=11), [Assign([Name('s', Store(), lineno=1051, col_offset=12)], Str('    ', lineno=1051, col_offset=16), lineno=1051, col_offset=12), For(Name('item', Store(), lineno=1052, col_offset=16), Attribute(Name('self', Load(), lineno=1052, col_offset=24), 'data', Load(), lineno=1052, col_offset=24), [Assign([Name('i', Store(), lineno=1053, col_offset=16)], BinOp(Call(Name('str', Load(), lineno=1053, col_offset=20), [Name('item', Load(), lineno=1053, col_offset=24)], [], None, None, lineno=1053, col_offset=20), Add(), Str(', ', lineno=1053, col_offset=32), lineno=1053, col_offset=20), lineno=1053, col_offset=16), If(Compare(BinOp(Call(Name('len', Load(), lineno=1054, col_offset=19), [Name('s', Load(), lineno=1054, col_offset=23)], [], None, None, lineno=1054, col_offset=19), Add(), Call(Name('len', Load(), lineno=1054, col_offset=28), [Name('i', Load(), lineno=1054, col_offset=32)], [], None, None, lineno=1054, col_offset=28), lineno=1054, col_offset=19), [Gt()], [Num(78, lineno=1054, col_offset=37)], lineno=1054, col_offset=19), [Expr(Call(Attribute(Name('file', Load(), lineno=1055, col_offset=20), 'write', Load(), lineno=1055, col_offset=20), [BinOp(Name('s', Load(), lineno=1055, col_offset=31), Add(), Str('\n', lineno=1055, col_offset=35), lineno=1055, col_offset=31)], [], None, None, lineno=1055, col_offset=20), lineno=1055, col_offset=20), Assign([Name('s', Store(), lineno=1056, col_offset=20)], BinOp(Str('    ', lineno=1056, col_offset=24), Add(), Name('i', Load(), lineno=1056, col_offset=33), lineno=1056, col_offset=24), lineno=1056, col_offset=20)], [Assign([Name('s', Store(), lineno=1058, col_offset=20)], BinOp(Name('s', Load(), lineno=1058, col_offset=24), Add(), Name('i', Load(), lineno=1058, col_offset=28), lineno=1058, col_offset=24), lineno=1058, col_offset=20)], lineno=1054, col_offset=16)], [], lineno=1052, col_offset=12), If(Call(Attribute(Name('s', Load(), lineno=1059, col_offset=15), 'strip', Load(), lineno=1059, col_offset=15), [], [], None, None, lineno=1059, col_offset=15), [Expr(Call(Attribute(Name('file', Load(), lineno=1060, col_offset=16), 'write', Load(), lineno=1060, col_offset=16), [BinOp(Name('s', Load(), lineno=1060, col_offset=27), Add(), Str('\n', lineno=1060, col_offset=31), lineno=1060, col_offset=27)], [], None, None, lineno=1060, col_offset=16), lineno=1060, col_offset=16)], [], lineno=1059, col_offset=12)], [], lineno=1050, col_offset=8), Expr(Call(Attribute(Name('file', Load(), lineno=1061, col_offset=8), 'write', Load(), lineno=1061, col_offset=8), [Str('};\n\n', lineno=1061, col_offset=19)], [], None, None, lineno=1061, col_offset=8), lineno=1061, col_offset=8)], [], lineno=1037, col_offset=4)], [], lineno=1031, col_offset=0), FunctionDef('getsize', arguments([Name('data', Param(), lineno=1063, col_offset=12)], None, None, []), [Assign([Name('maxdata', Store(), lineno=1065, col_offset=4)], Call(Name('max', Load(), lineno=1065, col_offset=14), [Name('data', Load(), lineno=1065, col_offset=18)], [], None, None, lineno=1065, col_offset=14), lineno=1065, col_offset=4), If(Compare(Name('maxdata', Load(), lineno=1066, col_offset=7), [Lt()], [Num(256, lineno=1066, col_offset=17)], lineno=1066, col_offset=7), [Return(Num(1, lineno=1067, col_offset=15), lineno=1067, col_offset=8)], [If(Compare(Name('maxdata', Load(), lineno=1068, col_offset=9), [Lt()], [Num(65536, lineno=1068, col_offset=19)], lineno=1068, col_offset=9), [Return(Num(2, lineno=1069, col_offset=15), lineno=1069, col_offset=8)], [Return(Num(4, lineno=1071, col_offset=15), lineno=1071, col_offset=8)], lineno=1068, col_offset=9)], lineno=1066, col_offset=4)], [], lineno=1063, col_offset=0), FunctionDef('splitbins', arguments([Name('t', Param(), lineno=1073, col_offset=14), Name('trace', Param(), lineno=1073, col_offset=17)], None, None, [Num(0, lineno=1073, col_offset=23)]), [Expr(Str('t, trace=0 -> (t1, t2, shift).  Split a table to save space.\n\n    t is a sequence of ints.  This function can be useful to save space if\n    many of the ints are the same.  t1 and t2 are lists of ints, and shift\n    is an int, chosen to minimize the combined size of t1 and t2 (in C\n    code), and where for each i in range(len(t)),\n        t[i] == t2[(t1[i >> shift] << shift) + (i & mask)]\n    where mask is a bitmask isolating the last "shift" bits.\n\n    If optional arg trace is non-zero (default zero), progress info\n    is printed to sys.stderr.  The higher the value, the more info\n    you\'ll get.\n    ', lineno=1086, col_offset=-1), lineno=1086, col_offset=-1), If(Name('trace', Load(), lineno=1088, col_offset=7), [FunctionDef('dump', arguments([Name('t1', Param(), lineno=1089, col_offset=17), Name('t2', Param(), lineno=1089, col_offset=21), Name('shift', Param(), lineno=1089, col_offset=25), Name('bytes', Param(), lineno=1089, col_offset=32)], None, None, []), [Print(Attribute(Name('sys', Load(), lineno=1090, col_offset=20), 'stderr', Load(), lineno=1090, col_offset=20), [BinOp(Str('%d+%d bins at shift %d; %d bytes', lineno=1090, col_offset=32), Mod(), Tuple([Call(Name('len', Load(), lineno=1091, col_offset=16), [Name('t1', Load(), lineno=1091, col_offset=20)], [], None, None, lineno=1091, col_offset=16), Call(Name('len', Load(), lineno=1091, col_offset=25), [Name('t2', Load(), lineno=1091, col_offset=29)], [], None, None, lineno=1091, col_offset=25), Name('shift', Load(), lineno=1091, col_offset=34), Name('bytes', Load(), lineno=1091, col_offset=41)], Load(), lineno=1091, col_offset=16), lineno=1090, col_offset=32)], True, lineno=1090, col_offset=12)], [], lineno=1089, col_offset=8), Print(Attribute(Name('sys', Load(), lineno=1092, col_offset=16), 'stderr', Load(), lineno=1092, col_offset=16), [Str('Size of original table:', lineno=1092, col_offset=28), BinOp(Call(Name('len', Load(), lineno=1092, col_offset=55), [Name('t', Load(), lineno=1092, col_offset=59)], [], None, None, lineno=1092, col_offset=55), Mult(), Call(Name('getsize', Load(), lineno=1092, col_offset=62), [Name('t', Load(), lineno=1092, col_offset=70)], [], None, None, lineno=1092, col_offset=62), lineno=1092, col_offset=55), Str('bytes', lineno=1093, col_offset=28)], True, lineno=1092, col_offset=8)], [], lineno=1088, col_offset=4), Assign([Name('n', Store(), lineno=1094, col_offset=4)], BinOp(Call(Name('len', Load(), lineno=1094, col_offset=8), [Name('t', Load(), lineno=1094, col_offset=12)], [], None, None, lineno=1094, col_offset=8), Sub(), Num(1, lineno=1094, col_offset=15), lineno=1094, col_offset=8), lineno=1094, col_offset=4), Assign([Name('maxshift', Store(), lineno=1095, col_offset=4)], Num(0, lineno=1095, col_offset=15), lineno=1095, col_offset=4), If(Compare(Name('n', Load(), lineno=1096, col_offset=7), [Gt()], [Num(0, lineno=1096, col_offset=11)], lineno=1096, col_offset=7), [While(BinOp(Name('n', Load(), lineno=1097, col_offset=14), RShift(), Num(1, lineno=1097, col_offset=19), lineno=1097, col_offset=14), [AugAssign(Name('n', Store(), lineno=1098, col_offset=12), RShift(), Num(1, lineno=1098, col_offset=18), lineno=1098, col_offset=12), AugAssign(Name('maxshift', Store(), lineno=1099, col_offset=12), Add(), Num(1, lineno=1099, col_offset=24), lineno=1099, col_offset=12)], [], lineno=1097, col_offset=8)], [], lineno=1096, col_offset=4), Delete([Name('n', Del(), lineno=1100, col_offset=8)], lineno=1100, col_offset=4), Assign([Name('bytes', Store(), lineno=1101, col_offset=4)], Attribute(Name('sys', Load(), lineno=1101, col_offset=12), 'maxint', Load(), lineno=1101, col_offset=12), lineno=1101, col_offset=4), Assign([Name('t', Store(), lineno=1102, col_offset=4)], Call(Name('tuple', Load(), lineno=1102, col_offset=8), [Name('t', Load(), lineno=1102, col_offset=14)], [], None, None, lineno=1102, col_offset=8), lineno=1102, col_offset=4), For(Name('shift', Store(), lineno=1103, col_offset=8), Call(Name('range', Load(), lineno=1103, col_offset=17), [BinOp(Name('maxshift', Load(), lineno=1103, col_offset=23), Add(), Num(1, lineno=1103, col_offset=34), lineno=1103, col_offset=23)], [], None, None, lineno=1103, col_offset=17), [Assign([Name('t1', Store(), lineno=1104, col_offset=8)], List([], Load(), lineno=1104, col_offset=13), lineno=1104, col_offset=8), Assign([Name('t2', Store(), lineno=1105, col_offset=8)], List([], Load(), lineno=1105, col_offset=13), lineno=1105, col_offset=8), Assign([Name('size', Store(), lineno=1106, col_offset=8)], BinOp(Num(2, lineno=1106, col_offset=15), Pow(), Name('shift', Load(), lineno=1106, col_offset=18), lineno=1106, col_offset=15), lineno=1106, col_offset=8), Assign([Name('bincache', Store(), lineno=1107, col_offset=8)], Dict([], [], lineno=1107, col_offset=19), lineno=1107, col_offset=8), For(Name('i', Store(), lineno=1108, col_offset=12), Call(Name('range', Load(), lineno=1108, col_offset=17), [Num(0, lineno=1108, col_offset=23), Call(Name('len', Load(), lineno=1108, col_offset=26), [Name('t', Load(), lineno=1108, col_offset=30)], [], None, None, lineno=1108, col_offset=26), Name('size', Load(), lineno=1108, col_offset=34)], [], None, None, lineno=1108, col_offset=17), [Assign([Name('bin', Store(), lineno=1109, col_offset=12)], Subscript(Name('t', Load(), lineno=1109, col_offset=18), Slice(Name('i', Load(), lineno=1109, col_offset=20), BinOp(Name('i', Load(), lineno=1109, col_offset=22), Add(), Name('size', Load(), lineno=1109, col_offset=24), lineno=1109, col_offset=22), None), Load(), lineno=1109, col_offset=18), lineno=1109, col_offset=12), Assign([Name('index', Store(), lineno=1110, col_offset=12)], Call(Attribute(Name('bincache', Load(), lineno=1110, col_offset=20), 'get', Load(), lineno=1110, col_offset=20), [Name('bin', Load(), lineno=1110, col_offset=33)], [], None, None, lineno=1110, col_offset=20), lineno=1110, col_offset=12), If(Compare(Name('index', Load(), lineno=1111, col_offset=15), [Is()], [Name('None', Load(), lineno=1111, col_offset=24)], lineno=1111, col_offset=15), [Assign([Name('index', Store(), lineno=1112, col_offset=16)], Call(Name('len', Load(), lineno=1112, col_offset=24), [Name('t2', Load(), lineno=1112, col_offset=28)], [], None, None, lineno=1112, col_offset=24), lineno=1112, col_offset=16), Assign([Subscript(Name('bincache', Load(), lineno=1113, col_offset=16), Index(Name('bin', Load(), lineno=1113, col_offset=25)), Store(), lineno=1113, col_offset=16)], Name('index', Load(), lineno=1113, col_offset=32), lineno=1113, col_offset=16), Expr(Call(Attribute(Name('t2', Load(), lineno=1114, col_offset=16), 'extend', Load(), lineno=1114, col_offset=16), [Name('bin', Load(), lineno=1114, col_offset=26)], [], None, None, lineno=1114, col_offset=16), lineno=1114, col_offset=16)], [], lineno=1111, col_offset=12), Expr(Call(Attribute(Name('t1', Load(), lineno=1115, col_offset=12), 'append', Load(), lineno=1115, col_offset=12), [BinOp(Name('index', Load(), lineno=1115, col_offset=22), RShift(), Name('shift', Load(), lineno=1115, col_offset=31), lineno=1115, col_offset=22)], [], None, None, lineno=1115, col_offset=12), lineno=1115, col_offset=12)], [], lineno=1108, col_offset=8), Assign([Name('b', Store(), lineno=1117, col_offset=8)], BinOp(BinOp(Call(Name('len', Load(), lineno=1117, col_offset=12), [Name('t1', Load(), lineno=1117, col_offset=16)], [], None, None, lineno=1117, col_offset=12), Mult(), Call(Name('getsize', Load(), lineno=1117, col_offset=20), [Name('t1', Load(), lineno=1117, col_offset=28)], [], None, None, lineno=1117, col_offset=20), lineno=1117, col_offset=12), Add(), BinOp(Call(Name('len', Load(), lineno=1117, col_offset=34), [Name('t2', Load(), lineno=1117, col_offset=38)], [], None, None, lineno=1117, col_offset=34), Mult(), Call(Name('getsize', Load(), lineno=1117, col_offset=42), [Name('t2', Load(), lineno=1117, col_offset=50)], [], None, None, lineno=1117, col_offset=42), lineno=1117, col_offset=34), lineno=1117, col_offset=12), lineno=1117, col_offset=8), If(Compare(Name('trace', Load(), lineno=1118, col_offset=11), [Gt()], [Num(1, lineno=1118, col_offset=19)], lineno=1118, col_offset=11), [Expr(Call(Name('dump', Load(), lineno=1119, col_offset=12), [Name('t1', Load(), lineno=1119, col_offset=17), Name('t2', Load(), lineno=1119, col_offset=21), Name('shift', Load(), lineno=1119, col_offset=25), Name('b', Load(), lineno=1119, col_offset=32)], [], None, None, lineno=1119, col_offset=12), lineno=1119, col_offset=12)], [], lineno=1118, col_offset=8), If(Compare(Name('b', Load(), lineno=1120, col_offset=11), [Lt()], [Name('bytes', Load(), lineno=1120, col_offset=15)], lineno=1120, col_offset=11), [Assign([Name('best', Store(), lineno=1121, col_offset=12)], Tuple([Name('t1', Load(), lineno=1121, col_offset=19), Name('t2', Load(), lineno=1121, col_offset=23), Name('shift', Load(), lineno=1121, col_offset=27)], Load(), lineno=1121, col_offset=19), lineno=1121, col_offset=12), Assign([Name('bytes', Store(), lineno=1122, col_offset=12)], Name('b', Load(), lineno=1122, col_offset=20), lineno=1122, col_offset=12)], [], lineno=1120, col_offset=8)], [], lineno=1103, col_offset=4), Assign([Tuple([Name('t1', Store(), lineno=1123, col_offset=4), Name('t2', Store(), lineno=1123, col_offset=8), Name('shift', Store(), lineno=1123, col_offset=12)], Store(), lineno=1123, col_offset=4)], Name('best', Load(), lineno=1123, col_offset=20), lineno=1123, col_offset=4), If(Name('trace', Load(), lineno=1124, col_offset=7), [Print(Attribute(Name('sys', Load(), lineno=1125, col_offset=16), 'stderr', Load(), lineno=1125, col_offset=16), [Str('Best:', lineno=1125, col_offset=28)], False, lineno=1125, col_offset=8), Expr(Call(Name('dump', Load(), lineno=1126, col_offset=8), [Name('t1', Load(), lineno=1126, col_offset=13), Name('t2', Load(), lineno=1126, col_offset=17), Name('shift', Load(), lineno=1126, col_offset=21), Name('bytes', Load(), lineno=1126, col_offset=28)], [], None, None, lineno=1126, col_offset=8), lineno=1126, col_offset=8)], [], lineno=1124, col_offset=4), If(Name('__debug__', Load(), lineno=1127, col_offset=7), [Assign([Name('mask', Store(), lineno=1129, col_offset=8)], UnaryOp(Invert(), BinOp(UnaryOp(Invert(), Num(0, lineno=1129, col_offset=19), lineno=1129, col_offset=18), LShift(), Name('shift', Load(), lineno=1129, col_offset=25), lineno=1129, col_offset=17), lineno=1129, col_offset=15), lineno=1129, col_offset=8), For(Name('i', Store(), lineno=1130, col_offset=12), Call(Name('xrange', Load(), lineno=1130, col_offset=17), [Call(Name('len', Load(), lineno=1130, col_offset=24), [Name('t', Load(), lineno=1130, col_offset=28)], [], None, None, lineno=1130, col_offset=24)], [], None, None, lineno=1130, col_offset=17), [Assert(Compare(Subscript(Name('t', Load(), lineno=1131, col_offset=19), Index(Name('i', Load(), lineno=1131, col_offset=21)), Load(), lineno=1131, col_offset=19), [Eq()], [Subscript(Name('t2', Load(), lineno=1131, col_offset=27), Index(BinOp(BinOp(Subscript(Name('t1', Load(), lineno=1131, col_offset=31), Index(BinOp(Name('i', Load(), lineno=1131, col_offset=34), RShift(), Name('shift', Load(), lineno=1131, col_offset=39), lineno=1131, col_offset=34)), Load(), lineno=1131, col_offset=31), LShift(), Name('shift', Load(), lineno=1131, col_offset=49), lineno=1131, col_offset=31), Add(), BinOp(Name('i', Load(), lineno=1131, col_offset=59), BitAnd(), Name('mask', Load(), lineno=1131, col_offset=63), lineno=1131, col_offset=59), lineno=1131, col_offset=30)), Load(), lineno=1131, col_offset=27)], lineno=1131, col_offset=19), None, lineno=1131, col_offset=12)], [], lineno=1130, col_offset=8)], [], lineno=1127, col_offset=4), Return(Name('best', Load(), lineno=1132, col_offset=11), lineno=1132, col_offset=4)], [], lineno=1073, col_offset=0), If(Compare(Name('__name__', Load(), lineno=1134, col_offset=3), [Eq()], [Str('__main__', lineno=1134, col_offset=15)], lineno=1134, col_offset=3), [Expr(Call(Name('maketables', Load(), lineno=1135, col_offset=4), [Num(1, lineno=1135, col_offset=15)], [], None, None, lineno=1135, col_offset=4), lineno=1135, col_offset=4)], [], lineno=1134, col_offset=0)])
