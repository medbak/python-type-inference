Module([Expr(Str('Test the functionality of Python classes implementing operators.', lineno=1, col_offset=0), lineno=1, col_offset=0), Import([alias('unittest', None)], lineno=3, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=5, col_offset=0), Assign([Name('testmeths', Store(), lineno=7, col_offset=0)], List([Str('add', lineno=10, col_offset=4), Str('radd', lineno=11, col_offset=4), Str('sub', lineno=12, col_offset=4), Str('rsub', lineno=13, col_offset=4), Str('mul', lineno=14, col_offset=4), Str('rmul', lineno=15, col_offset=4), Str('div', lineno=16, col_offset=4), Str('rdiv', lineno=17, col_offset=4), Str('mod', lineno=18, col_offset=4), Str('rmod', lineno=19, col_offset=4), Str('divmod', lineno=20, col_offset=4), Str('rdivmod', lineno=21, col_offset=4), Str('pow', lineno=22, col_offset=4), Str('rpow', lineno=23, col_offset=4), Str('rshift', lineno=24, col_offset=4), Str('rrshift', lineno=25, col_offset=4), Str('lshift', lineno=26, col_offset=4), Str('rlshift', lineno=27, col_offset=4), Str('and', lineno=28, col_offset=4), Str('rand', lineno=29, col_offset=4), Str('or', lineno=30, col_offset=4), Str('ror', lineno=31, col_offset=4), Str('xor', lineno=32, col_offset=4), Str('rxor', lineno=33, col_offset=4), Str('contains', lineno=36, col_offset=4), Str('getitem', lineno=37, col_offset=4), Str('getslice', lineno=38, col_offset=4), Str('setitem', lineno=39, col_offset=4), Str('setslice', lineno=40, col_offset=4), Str('delitem', lineno=41, col_offset=4), Str('delslice', lineno=42, col_offset=4), Str('neg', lineno=45, col_offset=4), Str('pos', lineno=46, col_offset=4), Str('abs', lineno=47, col_offset=4), Str('init', lineno=50, col_offset=4)], Load(), lineno=7, col_offset=12), lineno=7, col_offset=0), Assign([Name('callLst', Store(), lineno=69, col_offset=0)], List([], Load(), lineno=69, col_offset=10), lineno=69, col_offset=0), FunctionDef('trackCall', arguments([Name('f', Param(), lineno=70, col_offset=14)], None, None, []), [FunctionDef('track', arguments([], 'args', 'kwargs', []), [Expr(Call(Attribute(Name('callLst', Load(), lineno=72, col_offset=8), 'append', Load(), lineno=72, col_offset=8), [Tuple([Attribute(Name('f', Load(), lineno=72, col_offset=24), '__name__', Load(), lineno=72, col_offset=24), Name('args', Load(), lineno=72, col_offset=36)], Load(), lineno=72, col_offset=24)], [], None, None, lineno=72, col_offset=8), lineno=72, col_offset=8), Return(Call(Name('f', Load(), lineno=73, col_offset=15), [], [], Name('args', Load(), lineno=73, col_offset=18), Name('kwargs', Load(), lineno=73, col_offset=26), lineno=73, col_offset=15), lineno=73, col_offset=8)], [], lineno=71, col_offset=4), Return(Name('track', Load(), lineno=74, col_offset=11), lineno=74, col_offset=4)], [], lineno=70, col_offset=0), ClassDef('AllTests', [], [Assign([Name('trackCall', Store(), lineno=77, col_offset=4)], Name('trackCall', Load(), lineno=77, col_offset=16), lineno=77, col_offset=4), FunctionDef('__coerce__', arguments([Name('self', Param(), lineno=80, col_offset=19)], 'args', None, []), [Return(BinOp(Tuple([Name('self', Load(), lineno=81, col_offset=16)], Load(), lineno=81, col_offset=16), Add(), Name('args', Load(), lineno=81, col_offset=25), lineno=81, col_offset=15), lineno=81, col_offset=8)], [Name('trackCall', Load(), lineno=79, col_offset=5)], lineno=79, col_offset=4), FunctionDef('__hash__', arguments([Name('self', Param(), lineno=84, col_offset=17)], 'args', None, []), [Return(Call(Name('hash', Load(), lineno=85, col_offset=15), [Call(Name('id', Load(), lineno=85, col_offset=20), [Name('self', Load(), lineno=85, col_offset=23)], [], None, None, lineno=85, col_offset=20)], [], None, None, lineno=85, col_offset=15), lineno=85, col_offset=8)], [Name('trackCall', Load(), lineno=83, col_offset=5)], lineno=83, col_offset=4), FunctionDef('__str__', arguments([Name('self', Param(), lineno=88, col_offset=16)], 'args', None, []), [Return(Str('AllTests', lineno=89, col_offset=15), lineno=89, col_offset=8)], [Name('trackCall', Load(), lineno=87, col_offset=5)], lineno=87, col_offset=4), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=92, col_offset=17)], 'args', None, []), [Return(Str('AllTests', lineno=93, col_offset=15), lineno=93, col_offset=8)], [Name('trackCall', Load(), lineno=91, col_offset=5)], lineno=91, col_offset=4), FunctionDef('__int__', arguments([Name('self', Param(), lineno=96, col_offset=16)], 'args', None, []), [Return(Num(1, lineno=97, col_offset=15), lineno=97, col_offset=8)], [Name('trackCall', Load(), lineno=95, col_offset=5)], lineno=95, col_offset=4), FunctionDef('__float__', arguments([Name('self', Param(), lineno=100, col_offset=18)], 'args', None, []), [Return(Num(1.0, lineno=101, col_offset=15), lineno=101, col_offset=8)], [Name('trackCall', Load(), lineno=99, col_offset=5)], lineno=99, col_offset=4), FunctionDef('__long__', arguments([Name('self', Param(), lineno=104, col_offset=17)], 'args', None, []), [Return(Num(1L, lineno=105, col_offset=15), lineno=105, col_offset=8)], [Name('trackCall', Load(), lineno=103, col_offset=5)], lineno=103, col_offset=4), FunctionDef('__oct__', arguments([Name('self', Param(), lineno=108, col_offset=16)], 'args', None, []), [Return(Str('01', lineno=109, col_offset=15), lineno=109, col_offset=8)], [Name('trackCall', Load(), lineno=107, col_offset=5)], lineno=107, col_offset=4), FunctionDef('__hex__', arguments([Name('self', Param(), lineno=112, col_offset=16)], 'args', None, []), [Return(Str('0x1', lineno=113, col_offset=15), lineno=113, col_offset=8)], [Name('trackCall', Load(), lineno=111, col_offset=5)], lineno=111, col_offset=4), FunctionDef('__cmp__', arguments([Name('self', Param(), lineno=116, col_offset=16)], 'args', None, []), [Return(Num(0, lineno=117, col_offset=15), lineno=117, col_offset=8)], [Name('trackCall', Load(), lineno=115, col_offset=5)], lineno=115, col_offset=4)], [], lineno=76, col_offset=0), Assign([Name('method_template', Store(), lineno=121, col_offset=0)], Str('@trackCall\ndef __%(method)s__(self, *args):\n    pass\n', lineno=125, col_offset=-1), lineno=121, col_offset=0), For(Name('method', Store(), lineno=127, col_offset=4), Name('testmeths', Load(), lineno=127, col_offset=14), [Exec(BinOp(Name('method_template', Load(), lineno=128, col_offset=9), Mod(), Call(Name('locals', Load(), lineno=128, col_offset=27), [], [], None, None, lineno=128, col_offset=27), lineno=128, col_offset=9), Attribute(Name('AllTests', Load(), lineno=128, col_offset=39), '__dict__', Load(), lineno=128, col_offset=39), None, lineno=128, col_offset=4)], [], lineno=127, col_offset=0), Delete([Name('method', Del(), lineno=130, col_offset=4), Name('method_template', Del(), lineno=130, col_offset=12)], lineno=130, col_offset=0), ClassDef('ClassTests', [Attribute(Name('unittest', Load(), lineno=132, col_offset=17), 'TestCase', Load(), lineno=132, col_offset=17)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=133, col_offset=14)], None, None, []), [Assign([Subscript(Name('callLst', Load(), lineno=134, col_offset=8), Slice(None, None, None), Store(), lineno=134, col_offset=8)], List([], Load(), lineno=134, col_offset=21), lineno=134, col_offset=8)], [], lineno=133, col_offset=4), FunctionDef('assertCallStack', arguments([Name('self', Param(), lineno=136, col_offset=24), Name('expected_calls', Param(), lineno=136, col_offset=30)], None, None, []), [Assign([Name('actualCallList', Store(), lineno=137, col_offset=8)], Subscript(Name('callLst', Load(), lineno=137, col_offset=25), Slice(None, None, None), Load(), lineno=137, col_offset=25), lineno=137, col_offset=8), If(Compare(Name('expected_calls', Load(), lineno=139, col_offset=11), [NotEq()], [Name('actualCallList', Load(), lineno=139, col_offset=29)], lineno=139, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=140, col_offset=12), 'fail', Load(), lineno=140, col_offset=12), [BinOp(Str('Expected call list:\n  %s\ndoes not match actual call list\n  %s', lineno=140, col_offset=22), Mod(), Tuple([Name('expected_calls', Load(), lineno=141, col_offset=23), Name('actualCallList', Load(), lineno=141, col_offset=39)], Load(), lineno=141, col_offset=23), lineno=140, col_offset=22)], [], None, None, lineno=140, col_offset=12), lineno=140, col_offset=12)], [], lineno=139, col_offset=8)], [], lineno=136, col_offset=4), FunctionDef('testInit', arguments([Name('self', Param(), lineno=143, col_offset=17)], None, None, []), [Assign([Name('foo', Store(), lineno=144, col_offset=8)], Call(Name('AllTests', Load(), lineno=144, col_offset=14), [], [], None, None, lineno=144, col_offset=14), lineno=144, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=145, col_offset=8), 'assertCallStack', Load(), lineno=145, col_offset=8), [List([Tuple([Str('__init__', lineno=145, col_offset=31), Tuple([Name('foo', Load(), lineno=145, col_offset=44)], Load(), lineno=145, col_offset=44)], Load(), lineno=145, col_offset=31)], Load(), lineno=145, col_offset=29)], [], None, None, lineno=145, col_offset=8), lineno=145, col_offset=8)], [], lineno=143, col_offset=4), FunctionDef('testBinaryOps', arguments([Name('self', Param(), lineno=147, col_offset=22)], None, None, []), [Assign([Name('testme', Store(), lineno=148, col_offset=8)], Call(Name('AllTests', Load(), lineno=148, col_offset=17), [], [], None, None, lineno=148, col_offset=17), lineno=148, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=151, col_offset=8), Slice(None, None, None), Store(), lineno=151, col_offset=8)], List([], Load(), lineno=151, col_offset=21), lineno=151, col_offset=8), Expr(BinOp(Name('testme', Load(), lineno=152, col_offset=8), Add(), Num(1, lineno=152, col_offset=17), lineno=152, col_offset=8), lineno=152, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=153, col_offset=8), 'assertCallStack', Load(), lineno=153, col_offset=8), [List([Tuple([Str('__coerce__', lineno=153, col_offset=31), Tuple([Name('testme', Load(), lineno=153, col_offset=46), Num(1, lineno=153, col_offset=54)], Load(), lineno=153, col_offset=46)], Load(), lineno=153, col_offset=31), Tuple([Str('__add__', lineno=153, col_offset=60), Tuple([Name('testme', Load(), lineno=153, col_offset=72), Num(1, lineno=153, col_offset=80)], Load(), lineno=153, col_offset=72)], Load(), lineno=153, col_offset=60)], Load(), lineno=153, col_offset=29)], [], None, None, lineno=153, col_offset=8), lineno=153, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=155, col_offset=8), Slice(None, None, None), Store(), lineno=155, col_offset=8)], List([], Load(), lineno=155, col_offset=21), lineno=155, col_offset=8), Expr(BinOp(Num(1, lineno=156, col_offset=8), Add(), Name('testme', Load(), lineno=156, col_offset=12), lineno=156, col_offset=8), lineno=156, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=157, col_offset=8), 'assertCallStack', Load(), lineno=157, col_offset=8), [List([Tuple([Str('__coerce__', lineno=157, col_offset=31), Tuple([Name('testme', Load(), lineno=157, col_offset=46), Num(1, lineno=157, col_offset=54)], Load(), lineno=157, col_offset=46)], Load(), lineno=157, col_offset=31), Tuple([Str('__radd__', lineno=157, col_offset=60), Tuple([Name('testme', Load(), lineno=157, col_offset=73), Num(1, lineno=157, col_offset=81)], Load(), lineno=157, col_offset=73)], Load(), lineno=157, col_offset=60)], Load(), lineno=157, col_offset=29)], [], None, None, lineno=157, col_offset=8), lineno=157, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=159, col_offset=8), Slice(None, None, None), Store(), lineno=159, col_offset=8)], List([], Load(), lineno=159, col_offset=21), lineno=159, col_offset=8), Expr(BinOp(Name('testme', Load(), lineno=160, col_offset=8), Sub(), Num(1, lineno=160, col_offset=17), lineno=160, col_offset=8), lineno=160, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=161, col_offset=8), 'assertCallStack', Load(), lineno=161, col_offset=8), [List([Tuple([Str('__coerce__', lineno=161, col_offset=31), Tuple([Name('testme', Load(), lineno=161, col_offset=46), Num(1, lineno=161, col_offset=54)], Load(), lineno=161, col_offset=46)], Load(), lineno=161, col_offset=31), Tuple([Str('__sub__', lineno=161, col_offset=60), Tuple([Name('testme', Load(), lineno=161, col_offset=72), Num(1, lineno=161, col_offset=80)], Load(), lineno=161, col_offset=72)], Load(), lineno=161, col_offset=60)], Load(), lineno=161, col_offset=29)], [], None, None, lineno=161, col_offset=8), lineno=161, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=163, col_offset=8), Slice(None, None, None), Store(), lineno=163, col_offset=8)], List([], Load(), lineno=163, col_offset=21), lineno=163, col_offset=8), Expr(BinOp(Num(1, lineno=164, col_offset=8), Sub(), Name('testme', Load(), lineno=164, col_offset=12), lineno=164, col_offset=8), lineno=164, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=165, col_offset=8), 'assertCallStack', Load(), lineno=165, col_offset=8), [List([Tuple([Str('__coerce__', lineno=165, col_offset=31), Tuple([Name('testme', Load(), lineno=165, col_offset=46), Num(1, lineno=165, col_offset=54)], Load(), lineno=165, col_offset=46)], Load(), lineno=165, col_offset=31), Tuple([Str('__rsub__', lineno=165, col_offset=60), Tuple([Name('testme', Load(), lineno=165, col_offset=73), Num(1, lineno=165, col_offset=81)], Load(), lineno=165, col_offset=73)], Load(), lineno=165, col_offset=60)], Load(), lineno=165, col_offset=29)], [], None, None, lineno=165, col_offset=8), lineno=165, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=167, col_offset=8), Slice(None, None, None), Store(), lineno=167, col_offset=8)], List([], Load(), lineno=167, col_offset=21), lineno=167, col_offset=8), Expr(BinOp(Name('testme', Load(), lineno=168, col_offset=8), Mult(), Num(1, lineno=168, col_offset=17), lineno=168, col_offset=8), lineno=168, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=169, col_offset=8), 'assertCallStack', Load(), lineno=169, col_offset=8), [List([Tuple([Str('__coerce__', lineno=169, col_offset=31), Tuple([Name('testme', Load(), lineno=169, col_offset=46), Num(1, lineno=169, col_offset=54)], Load(), lineno=169, col_offset=46)], Load(), lineno=169, col_offset=31), Tuple([Str('__mul__', lineno=169, col_offset=60), Tuple([Name('testme', Load(), lineno=169, col_offset=72), Num(1, lineno=169, col_offset=80)], Load(), lineno=169, col_offset=72)], Load(), lineno=169, col_offset=60)], Load(), lineno=169, col_offset=29)], [], None, None, lineno=169, col_offset=8), lineno=169, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=171, col_offset=8), Slice(None, None, None), Store(), lineno=171, col_offset=8)], List([], Load(), lineno=171, col_offset=21), lineno=171, col_offset=8), Expr(BinOp(Num(1, lineno=172, col_offset=8), Mult(), Name('testme', Load(), lineno=172, col_offset=12), lineno=172, col_offset=8), lineno=172, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=173, col_offset=8), 'assertCallStack', Load(), lineno=173, col_offset=8), [List([Tuple([Str('__coerce__', lineno=173, col_offset=31), Tuple([Name('testme', Load(), lineno=173, col_offset=46), Num(1, lineno=173, col_offset=54)], Load(), lineno=173, col_offset=46)], Load(), lineno=173, col_offset=31), Tuple([Str('__rmul__', lineno=173, col_offset=60), Tuple([Name('testme', Load(), lineno=173, col_offset=73), Num(1, lineno=173, col_offset=81)], Load(), lineno=173, col_offset=73)], Load(), lineno=173, col_offset=60)], Load(), lineno=173, col_offset=29)], [], None, None, lineno=173, col_offset=8), lineno=173, col_offset=8), If(Compare(BinOp(Num(1, lineno=175, col_offset=11), Div(), Num(2, lineno=175, col_offset=13), lineno=175, col_offset=11), [Eq()], [Num(0, lineno=175, col_offset=18)], lineno=175, col_offset=11), [Assign([Subscript(Name('callLst', Load(), lineno=176, col_offset=12), Slice(None, None, None), Store(), lineno=176, col_offset=12)], List([], Load(), lineno=176, col_offset=25), lineno=176, col_offset=12), Expr(BinOp(Name('testme', Load(), lineno=177, col_offset=12), Div(), Num(1, lineno=177, col_offset=21), lineno=177, col_offset=12), lineno=177, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=178, col_offset=12), 'assertCallStack', Load(), lineno=178, col_offset=12), [List([Tuple([Str('__coerce__', lineno=178, col_offset=35), Tuple([Name('testme', Load(), lineno=178, col_offset=50), Num(1, lineno=178, col_offset=58)], Load(), lineno=178, col_offset=50)], Load(), lineno=178, col_offset=35), Tuple([Str('__div__', lineno=178, col_offset=64), Tuple([Name('testme', Load(), lineno=178, col_offset=76), Num(1, lineno=178, col_offset=84)], Load(), lineno=178, col_offset=76)], Load(), lineno=178, col_offset=64)], Load(), lineno=178, col_offset=33)], [], None, None, lineno=178, col_offset=12), lineno=178, col_offset=12), Assign([Subscript(Name('callLst', Load(), lineno=181, col_offset=12), Slice(None, None, None), Store(), lineno=181, col_offset=12)], List([], Load(), lineno=181, col_offset=25), lineno=181, col_offset=12), Expr(BinOp(Num(1, lineno=182, col_offset=12), Div(), Name('testme', Load(), lineno=182, col_offset=16), lineno=182, col_offset=12), lineno=182, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=183, col_offset=12), 'assertCallStack', Load(), lineno=183, col_offset=12), [List([Tuple([Str('__coerce__', lineno=183, col_offset=35), Tuple([Name('testme', Load(), lineno=183, col_offset=50), Num(1, lineno=183, col_offset=58)], Load(), lineno=183, col_offset=50)], Load(), lineno=183, col_offset=35), Tuple([Str('__rdiv__', lineno=183, col_offset=64), Tuple([Name('testme', Load(), lineno=183, col_offset=77), Num(1, lineno=183, col_offset=85)], Load(), lineno=183, col_offset=77)], Load(), lineno=183, col_offset=64)], Load(), lineno=183, col_offset=33)], [], None, None, lineno=183, col_offset=12), lineno=183, col_offset=12)], [], lineno=175, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=185, col_offset=8), Slice(None, None, None), Store(), lineno=185, col_offset=8)], List([], Load(), lineno=185, col_offset=21), lineno=185, col_offset=8), Expr(BinOp(Name('testme', Load(), lineno=186, col_offset=8), Mod(), Num(1, lineno=186, col_offset=17), lineno=186, col_offset=8), lineno=186, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=187, col_offset=8), 'assertCallStack', Load(), lineno=187, col_offset=8), [List([Tuple([Str('__coerce__', lineno=187, col_offset=31), Tuple([Name('testme', Load(), lineno=187, col_offset=46), Num(1, lineno=187, col_offset=54)], Load(), lineno=187, col_offset=46)], Load(), lineno=187, col_offset=31), Tuple([Str('__mod__', lineno=187, col_offset=60), Tuple([Name('testme', Load(), lineno=187, col_offset=72), Num(1, lineno=187, col_offset=80)], Load(), lineno=187, col_offset=72)], Load(), lineno=187, col_offset=60)], Load(), lineno=187, col_offset=29)], [], None, None, lineno=187, col_offset=8), lineno=187, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=189, col_offset=8), Slice(None, None, None), Store(), lineno=189, col_offset=8)], List([], Load(), lineno=189, col_offset=21), lineno=189, col_offset=8), Expr(BinOp(Num(1, lineno=190, col_offset=8), Mod(), Name('testme', Load(), lineno=190, col_offset=12), lineno=190, col_offset=8), lineno=190, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=191, col_offset=8), 'assertCallStack', Load(), lineno=191, col_offset=8), [List([Tuple([Str('__coerce__', lineno=191, col_offset=31), Tuple([Name('testme', Load(), lineno=191, col_offset=46), Num(1, lineno=191, col_offset=54)], Load(), lineno=191, col_offset=46)], Load(), lineno=191, col_offset=31), Tuple([Str('__rmod__', lineno=191, col_offset=60), Tuple([Name('testme', Load(), lineno=191, col_offset=73), Num(1, lineno=191, col_offset=81)], Load(), lineno=191, col_offset=73)], Load(), lineno=191, col_offset=60)], Load(), lineno=191, col_offset=29)], [], None, None, lineno=191, col_offset=8), lineno=191, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=194, col_offset=8), Slice(None, None, None), Store(), lineno=194, col_offset=8)], List([], Load(), lineno=194, col_offset=21), lineno=194, col_offset=8), Expr(Call(Name('divmod', Load(), lineno=195, col_offset=8), [Name('testme', Load(), lineno=195, col_offset=15), Num(1, lineno=195, col_offset=22)], [], None, None, lineno=195, col_offset=8), lineno=195, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=196, col_offset=8), 'assertCallStack', Load(), lineno=196, col_offset=8), [List([Tuple([Str('__coerce__', lineno=196, col_offset=31), Tuple([Name('testme', Load(), lineno=196, col_offset=46), Num(1, lineno=196, col_offset=54)], Load(), lineno=196, col_offset=46)], Load(), lineno=196, col_offset=31), Tuple([Str('__divmod__', lineno=196, col_offset=60), Tuple([Name('testme', Load(), lineno=196, col_offset=75), Num(1, lineno=196, col_offset=83)], Load(), lineno=196, col_offset=75)], Load(), lineno=196, col_offset=60)], Load(), lineno=196, col_offset=29)], [], None, None, lineno=196, col_offset=8), lineno=196, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=198, col_offset=8), Slice(None, None, None), Store(), lineno=198, col_offset=8)], List([], Load(), lineno=198, col_offset=21), lineno=198, col_offset=8), Expr(Call(Name('divmod', Load(), lineno=199, col_offset=8), [Num(1, lineno=199, col_offset=15), Name('testme', Load(), lineno=199, col_offset=18)], [], None, None, lineno=199, col_offset=8), lineno=199, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=200, col_offset=8), 'assertCallStack', Load(), lineno=200, col_offset=8), [List([Tuple([Str('__coerce__', lineno=200, col_offset=31), Tuple([Name('testme', Load(), lineno=200, col_offset=46), Num(1, lineno=200, col_offset=54)], Load(), lineno=200, col_offset=46)], Load(), lineno=200, col_offset=31), Tuple([Str('__rdivmod__', lineno=200, col_offset=60), Tuple([Name('testme', Load(), lineno=200, col_offset=76), Num(1, lineno=200, col_offset=84)], Load(), lineno=200, col_offset=76)], Load(), lineno=200, col_offset=60)], Load(), lineno=200, col_offset=29)], [], None, None, lineno=200, col_offset=8), lineno=200, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=202, col_offset=8), Slice(None, None, None), Store(), lineno=202, col_offset=8)], List([], Load(), lineno=202, col_offset=21), lineno=202, col_offset=8), Expr(BinOp(Name('testme', Load(), lineno=203, col_offset=8), Pow(), Num(1, lineno=203, col_offset=18), lineno=203, col_offset=8), lineno=203, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=204, col_offset=8), 'assertCallStack', Load(), lineno=204, col_offset=8), [List([Tuple([Str('__coerce__', lineno=204, col_offset=31), Tuple([Name('testme', Load(), lineno=204, col_offset=46), Num(1, lineno=204, col_offset=54)], Load(), lineno=204, col_offset=46)], Load(), lineno=204, col_offset=31), Tuple([Str('__pow__', lineno=204, col_offset=60), Tuple([Name('testme', Load(), lineno=204, col_offset=72), Num(1, lineno=204, col_offset=80)], Load(), lineno=204, col_offset=72)], Load(), lineno=204, col_offset=60)], Load(), lineno=204, col_offset=29)], [], None, None, lineno=204, col_offset=8), lineno=204, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=206, col_offset=8), Slice(None, None, None), Store(), lineno=206, col_offset=8)], List([], Load(), lineno=206, col_offset=21), lineno=206, col_offset=8), Expr(BinOp(Num(1, lineno=207, col_offset=8), Pow(), Name('testme', Load(), lineno=207, col_offset=13), lineno=207, col_offset=8), lineno=207, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=208, col_offset=8), 'assertCallStack', Load(), lineno=208, col_offset=8), [List([Tuple([Str('__coerce__', lineno=208, col_offset=31), Tuple([Name('testme', Load(), lineno=208, col_offset=46), Num(1, lineno=208, col_offset=54)], Load(), lineno=208, col_offset=46)], Load(), lineno=208, col_offset=31), Tuple([Str('__rpow__', lineno=208, col_offset=60), Tuple([Name('testme', Load(), lineno=208, col_offset=73), Num(1, lineno=208, col_offset=81)], Load(), lineno=208, col_offset=73)], Load(), lineno=208, col_offset=60)], Load(), lineno=208, col_offset=29)], [], None, None, lineno=208, col_offset=8), lineno=208, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=210, col_offset=8), Slice(None, None, None), Store(), lineno=210, col_offset=8)], List([], Load(), lineno=210, col_offset=21), lineno=210, col_offset=8), Expr(BinOp(Name('testme', Load(), lineno=211, col_offset=8), RShift(), Num(1, lineno=211, col_offset=18), lineno=211, col_offset=8), lineno=211, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=212, col_offset=8), 'assertCallStack', Load(), lineno=212, col_offset=8), [List([Tuple([Str('__coerce__', lineno=212, col_offset=31), Tuple([Name('testme', Load(), lineno=212, col_offset=46), Num(1, lineno=212, col_offset=54)], Load(), lineno=212, col_offset=46)], Load(), lineno=212, col_offset=31), Tuple([Str('__rshift__', lineno=212, col_offset=60), Tuple([Name('testme', Load(), lineno=212, col_offset=75), Num(1, lineno=212, col_offset=83)], Load(), lineno=212, col_offset=75)], Load(), lineno=212, col_offset=60)], Load(), lineno=212, col_offset=29)], [], None, None, lineno=212, col_offset=8), lineno=212, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=214, col_offset=8), Slice(None, None, None), Store(), lineno=214, col_offset=8)], List([], Load(), lineno=214, col_offset=21), lineno=214, col_offset=8), Expr(BinOp(Num(1, lineno=215, col_offset=8), RShift(), Name('testme', Load(), lineno=215, col_offset=13), lineno=215, col_offset=8), lineno=215, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=216, col_offset=8), 'assertCallStack', Load(), lineno=216, col_offset=8), [List([Tuple([Str('__coerce__', lineno=216, col_offset=31), Tuple([Name('testme', Load(), lineno=216, col_offset=46), Num(1, lineno=216, col_offset=54)], Load(), lineno=216, col_offset=46)], Load(), lineno=216, col_offset=31), Tuple([Str('__rrshift__', lineno=216, col_offset=60), Tuple([Name('testme', Load(), lineno=216, col_offset=76), Num(1, lineno=216, col_offset=84)], Load(), lineno=216, col_offset=76)], Load(), lineno=216, col_offset=60)], Load(), lineno=216, col_offset=29)], [], None, None, lineno=216, col_offset=8), lineno=216, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=218, col_offset=8), Slice(None, None, None), Store(), lineno=218, col_offset=8)], List([], Load(), lineno=218, col_offset=21), lineno=218, col_offset=8), Expr(BinOp(Name('testme', Load(), lineno=219, col_offset=8), LShift(), Num(1, lineno=219, col_offset=18), lineno=219, col_offset=8), lineno=219, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=220, col_offset=8), 'assertCallStack', Load(), lineno=220, col_offset=8), [List([Tuple([Str('__coerce__', lineno=220, col_offset=31), Tuple([Name('testme', Load(), lineno=220, col_offset=46), Num(1, lineno=220, col_offset=54)], Load(), lineno=220, col_offset=46)], Load(), lineno=220, col_offset=31), Tuple([Str('__lshift__', lineno=220, col_offset=60), Tuple([Name('testme', Load(), lineno=220, col_offset=75), Num(1, lineno=220, col_offset=83)], Load(), lineno=220, col_offset=75)], Load(), lineno=220, col_offset=60)], Load(), lineno=220, col_offset=29)], [], None, None, lineno=220, col_offset=8), lineno=220, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=222, col_offset=8), Slice(None, None, None), Store(), lineno=222, col_offset=8)], List([], Load(), lineno=222, col_offset=21), lineno=222, col_offset=8), Expr(BinOp(Num(1, lineno=223, col_offset=8), LShift(), Name('testme', Load(), lineno=223, col_offset=13), lineno=223, col_offset=8), lineno=223, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=224, col_offset=8), 'assertCallStack', Load(), lineno=224, col_offset=8), [List([Tuple([Str('__coerce__', lineno=224, col_offset=31), Tuple([Name('testme', Load(), lineno=224, col_offset=46), Num(1, lineno=224, col_offset=54)], Load(), lineno=224, col_offset=46)], Load(), lineno=224, col_offset=31), Tuple([Str('__rlshift__', lineno=224, col_offset=60), Tuple([Name('testme', Load(), lineno=224, col_offset=76), Num(1, lineno=224, col_offset=84)], Load(), lineno=224, col_offset=76)], Load(), lineno=224, col_offset=60)], Load(), lineno=224, col_offset=29)], [], None, None, lineno=224, col_offset=8), lineno=224, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=226, col_offset=8), Slice(None, None, None), Store(), lineno=226, col_offset=8)], List([], Load(), lineno=226, col_offset=21), lineno=226, col_offset=8), Expr(BinOp(Name('testme', Load(), lineno=227, col_offset=8), BitAnd(), Num(1, lineno=227, col_offset=17), lineno=227, col_offset=8), lineno=227, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=228, col_offset=8), 'assertCallStack', Load(), lineno=228, col_offset=8), [List([Tuple([Str('__coerce__', lineno=228, col_offset=31), Tuple([Name('testme', Load(), lineno=228, col_offset=46), Num(1, lineno=228, col_offset=54)], Load(), lineno=228, col_offset=46)], Load(), lineno=228, col_offset=31), Tuple([Str('__and__', lineno=228, col_offset=60), Tuple([Name('testme', Load(), lineno=228, col_offset=72), Num(1, lineno=228, col_offset=80)], Load(), lineno=228, col_offset=72)], Load(), lineno=228, col_offset=60)], Load(), lineno=228, col_offset=29)], [], None, None, lineno=228, col_offset=8), lineno=228, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=230, col_offset=8), Slice(None, None, None), Store(), lineno=230, col_offset=8)], List([], Load(), lineno=230, col_offset=21), lineno=230, col_offset=8), Expr(BinOp(Num(1, lineno=231, col_offset=8), BitAnd(), Name('testme', Load(), lineno=231, col_offset=12), lineno=231, col_offset=8), lineno=231, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=232, col_offset=8), 'assertCallStack', Load(), lineno=232, col_offset=8), [List([Tuple([Str('__coerce__', lineno=232, col_offset=31), Tuple([Name('testme', Load(), lineno=232, col_offset=46), Num(1, lineno=232, col_offset=54)], Load(), lineno=232, col_offset=46)], Load(), lineno=232, col_offset=31), Tuple([Str('__rand__', lineno=232, col_offset=60), Tuple([Name('testme', Load(), lineno=232, col_offset=73), Num(1, lineno=232, col_offset=81)], Load(), lineno=232, col_offset=73)], Load(), lineno=232, col_offset=60)], Load(), lineno=232, col_offset=29)], [], None, None, lineno=232, col_offset=8), lineno=232, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=234, col_offset=8), Slice(None, None, None), Store(), lineno=234, col_offset=8)], List([], Load(), lineno=234, col_offset=21), lineno=234, col_offset=8), Expr(BinOp(Name('testme', Load(), lineno=235, col_offset=8), BitOr(), Num(1, lineno=235, col_offset=17), lineno=235, col_offset=8), lineno=235, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=236, col_offset=8), 'assertCallStack', Load(), lineno=236, col_offset=8), [List([Tuple([Str('__coerce__', lineno=236, col_offset=31), Tuple([Name('testme', Load(), lineno=236, col_offset=46), Num(1, lineno=236, col_offset=54)], Load(), lineno=236, col_offset=46)], Load(), lineno=236, col_offset=31), Tuple([Str('__or__', lineno=236, col_offset=60), Tuple([Name('testme', Load(), lineno=236, col_offset=71), Num(1, lineno=236, col_offset=79)], Load(), lineno=236, col_offset=71)], Load(), lineno=236, col_offset=60)], Load(), lineno=236, col_offset=29)], [], None, None, lineno=236, col_offset=8), lineno=236, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=238, col_offset=8), Slice(None, None, None), Store(), lineno=238, col_offset=8)], List([], Load(), lineno=238, col_offset=21), lineno=238, col_offset=8), Expr(BinOp(Num(1, lineno=239, col_offset=8), BitOr(), Name('testme', Load(), lineno=239, col_offset=12), lineno=239, col_offset=8), lineno=239, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=240, col_offset=8), 'assertCallStack', Load(), lineno=240, col_offset=8), [List([Tuple([Str('__coerce__', lineno=240, col_offset=31), Tuple([Name('testme', Load(), lineno=240, col_offset=46), Num(1, lineno=240, col_offset=54)], Load(), lineno=240, col_offset=46)], Load(), lineno=240, col_offset=31), Tuple([Str('__ror__', lineno=240, col_offset=60), Tuple([Name('testme', Load(), lineno=240, col_offset=72), Num(1, lineno=240, col_offset=80)], Load(), lineno=240, col_offset=72)], Load(), lineno=240, col_offset=60)], Load(), lineno=240, col_offset=29)], [], None, None, lineno=240, col_offset=8), lineno=240, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=242, col_offset=8), Slice(None, None, None), Store(), lineno=242, col_offset=8)], List([], Load(), lineno=242, col_offset=21), lineno=242, col_offset=8), Expr(BinOp(Name('testme', Load(), lineno=243, col_offset=8), BitXor(), Num(1, lineno=243, col_offset=17), lineno=243, col_offset=8), lineno=243, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=244, col_offset=8), 'assertCallStack', Load(), lineno=244, col_offset=8), [List([Tuple([Str('__coerce__', lineno=244, col_offset=31), Tuple([Name('testme', Load(), lineno=244, col_offset=46), Num(1, lineno=244, col_offset=54)], Load(), lineno=244, col_offset=46)], Load(), lineno=244, col_offset=31), Tuple([Str('__xor__', lineno=244, col_offset=60), Tuple([Name('testme', Load(), lineno=244, col_offset=72), Num(1, lineno=244, col_offset=80)], Load(), lineno=244, col_offset=72)], Load(), lineno=244, col_offset=60)], Load(), lineno=244, col_offset=29)], [], None, None, lineno=244, col_offset=8), lineno=244, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=246, col_offset=8), Slice(None, None, None), Store(), lineno=246, col_offset=8)], List([], Load(), lineno=246, col_offset=21), lineno=246, col_offset=8), Expr(BinOp(Num(1, lineno=247, col_offset=8), BitXor(), Name('testme', Load(), lineno=247, col_offset=12), lineno=247, col_offset=8), lineno=247, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=248, col_offset=8), 'assertCallStack', Load(), lineno=248, col_offset=8), [List([Tuple([Str('__coerce__', lineno=248, col_offset=31), Tuple([Name('testme', Load(), lineno=248, col_offset=46), Num(1, lineno=248, col_offset=54)], Load(), lineno=248, col_offset=46)], Load(), lineno=248, col_offset=31), Tuple([Str('__rxor__', lineno=248, col_offset=60), Tuple([Name('testme', Load(), lineno=248, col_offset=73), Num(1, lineno=248, col_offset=81)], Load(), lineno=248, col_offset=73)], Load(), lineno=248, col_offset=60)], Load(), lineno=248, col_offset=29)], [], None, None, lineno=248, col_offset=8), lineno=248, col_offset=8)], [], lineno=147, col_offset=4), FunctionDef('testListAndDictOps', arguments([Name('self', Param(), lineno=250, col_offset=27)], None, None, []), [Assign([Name('testme', Store(), lineno=251, col_offset=8)], Call(Name('AllTests', Load(), lineno=251, col_offset=17), [], [], None, None, lineno=251, col_offset=17), lineno=251, col_offset=8), ClassDef('Empty', [], [Pass( lineno=255, col_offset=21)], [], lineno=255, col_offset=8), TryExcept([Expr(Compare(Num(1, lineno=258, col_offset=12), [In()], [Call(Name('Empty', Load(), lineno=258, col_offset=17), [], [], None, None, lineno=258, col_offset=17)], lineno=258, col_offset=12), lineno=258, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=259, col_offset=12), 'fail', Load(), lineno=259, col_offset=12), [Str('failed, should have raised TypeError', lineno=259, col_offset=22)], [], None, None, lineno=259, col_offset=12), lineno=259, col_offset=12)], [ExceptHandler(Name('TypeError', Load(), lineno=260, col_offset=15), None, [Pass( lineno=261, col_offset=12)], lineno=260, col_offset=8)], [], lineno=257, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=263, col_offset=8), Slice(None, None, None), Store(), lineno=263, col_offset=8)], List([], Load(), lineno=263, col_offset=21), lineno=263, col_offset=8), Expr(Compare(Num(1, lineno=264, col_offset=8), [In()], [Name('testme', Load(), lineno=264, col_offset=13)], lineno=264, col_offset=8), lineno=264, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=265, col_offset=8), 'assertCallStack', Load(), lineno=265, col_offset=8), [List([Tuple([Str('__contains__', lineno=265, col_offset=31), Tuple([Name('testme', Load(), lineno=265, col_offset=48), Num(1, lineno=265, col_offset=56)], Load(), lineno=265, col_offset=48)], Load(), lineno=265, col_offset=31)], Load(), lineno=265, col_offset=29)], [], None, None, lineno=265, col_offset=8), lineno=265, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=267, col_offset=8), Slice(None, None, None), Store(), lineno=267, col_offset=8)], List([], Load(), lineno=267, col_offset=21), lineno=267, col_offset=8), Expr(Subscript(Name('testme', Load(), lineno=268, col_offset=8), Index(Num(1, lineno=268, col_offset=15)), Load(), lineno=268, col_offset=8), lineno=268, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=269, col_offset=8), 'assertCallStack', Load(), lineno=269, col_offset=8), [List([Tuple([Str('__getitem__', lineno=269, col_offset=31), Tuple([Name('testme', Load(), lineno=269, col_offset=47), Num(1, lineno=269, col_offset=55)], Load(), lineno=269, col_offset=47)], Load(), lineno=269, col_offset=31)], Load(), lineno=269, col_offset=29)], [], None, None, lineno=269, col_offset=8), lineno=269, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=271, col_offset=8), Slice(None, None, None), Store(), lineno=271, col_offset=8)], List([], Load(), lineno=271, col_offset=21), lineno=271, col_offset=8), Assign([Subscript(Name('testme', Load(), lineno=272, col_offset=8), Index(Num(1, lineno=272, col_offset=15)), Store(), lineno=272, col_offset=8)], Num(1, lineno=272, col_offset=20), lineno=272, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=273, col_offset=8), 'assertCallStack', Load(), lineno=273, col_offset=8), [List([Tuple([Str('__setitem__', lineno=273, col_offset=31), Tuple([Name('testme', Load(), lineno=273, col_offset=47), Num(1, lineno=273, col_offset=55), Num(1, lineno=273, col_offset=58)], Load(), lineno=273, col_offset=47)], Load(), lineno=273, col_offset=31)], Load(), lineno=273, col_offset=29)], [], None, None, lineno=273, col_offset=8), lineno=273, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=275, col_offset=8), Slice(None, None, None), Store(), lineno=275, col_offset=8)], List([], Load(), lineno=275, col_offset=21), lineno=275, col_offset=8), Delete([Subscript(Name('testme', Load(), lineno=276, col_offset=12), Index(Num(1, lineno=276, col_offset=19)), Del(), lineno=276, col_offset=12)], lineno=276, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=277, col_offset=8), 'assertCallStack', Load(), lineno=277, col_offset=8), [List([Tuple([Str('__delitem__', lineno=277, col_offset=31), Tuple([Name('testme', Load(), lineno=277, col_offset=47), Num(1, lineno=277, col_offset=55)], Load(), lineno=277, col_offset=47)], Load(), lineno=277, col_offset=31)], Load(), lineno=277, col_offset=29)], [], None, None, lineno=277, col_offset=8), lineno=277, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=279, col_offset=8), Slice(None, None, None), Store(), lineno=279, col_offset=8)], List([], Load(), lineno=279, col_offset=21), lineno=279, col_offset=8), Expr(Subscript(Name('testme', Load(), lineno=280, col_offset=8), Slice(None, Num(42, lineno=280, col_offset=16), None), Load(), lineno=280, col_offset=8), lineno=280, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=281, col_offset=8), 'assertCallStack', Load(), lineno=281, col_offset=8), [List([Tuple([Str('__getslice__', lineno=281, col_offset=31), Tuple([Name('testme', Load(), lineno=281, col_offset=48), Num(0, lineno=281, col_offset=56), Num(42, lineno=281, col_offset=59)], Load(), lineno=281, col_offset=48)], Load(), lineno=281, col_offset=31)], Load(), lineno=281, col_offset=29)], [], None, None, lineno=281, col_offset=8), lineno=281, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=283, col_offset=8), Slice(None, None, None), Store(), lineno=283, col_offset=8)], List([], Load(), lineno=283, col_offset=21), lineno=283, col_offset=8), Assign([Subscript(Name('testme', Load(), lineno=284, col_offset=8), Slice(None, Num(42, lineno=284, col_offset=16), None), Store(), lineno=284, col_offset=8)], Str('The Answer', lineno=284, col_offset=22), lineno=284, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=285, col_offset=8), 'assertCallStack', Load(), lineno=285, col_offset=8), [List([Tuple([Str('__setslice__', lineno=285, col_offset=31), Tuple([Name('testme', Load(), lineno=285, col_offset=48), Num(0, lineno=285, col_offset=56), Num(42, lineno=285, col_offset=59), Str('The Answer', lineno=285, col_offset=63)], Load(), lineno=285, col_offset=48)], Load(), lineno=285, col_offset=31)], Load(), lineno=285, col_offset=29)], [], None, None, lineno=285, col_offset=8), lineno=285, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=287, col_offset=8), Slice(None, None, None), Store(), lineno=287, col_offset=8)], List([], Load(), lineno=287, col_offset=21), lineno=287, col_offset=8), Delete([Subscript(Name('testme', Load(), lineno=288, col_offset=12), Slice(None, Num(42, lineno=288, col_offset=20), None), Del(), lineno=288, col_offset=12)], lineno=288, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=289, col_offset=8), 'assertCallStack', Load(), lineno=289, col_offset=8), [List([Tuple([Str('__delslice__', lineno=289, col_offset=31), Tuple([Name('testme', Load(), lineno=289, col_offset=48), Num(0, lineno=289, col_offset=56), Num(42, lineno=289, col_offset=59)], Load(), lineno=289, col_offset=48)], Load(), lineno=289, col_offset=31)], Load(), lineno=289, col_offset=29)], [], None, None, lineno=289, col_offset=8), lineno=289, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=291, col_offset=8), Slice(None, None, None), Store(), lineno=291, col_offset=8)], List([], Load(), lineno=291, col_offset=21), lineno=291, col_offset=8), Expr(Subscript(Name('testme', Load(), lineno=292, col_offset=8), Slice(Num(2, lineno=292, col_offset=15), Num(1024, lineno=292, col_offset=17), Num(10, lineno=292, col_offset=22)), Load(), lineno=292, col_offset=8), lineno=292, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=293, col_offset=8), 'assertCallStack', Load(), lineno=293, col_offset=8), [List([Tuple([Str('__getitem__', lineno=293, col_offset=31), Tuple([Name('testme', Load(), lineno=293, col_offset=47), Call(Name('slice', Load(), lineno=293, col_offset=55), [Num(2, lineno=293, col_offset=61), Num(1024, lineno=293, col_offset=64), Num(10, lineno=293, col_offset=70)], [], None, None, lineno=293, col_offset=55)], Load(), lineno=293, col_offset=47)], Load(), lineno=293, col_offset=31)], Load(), lineno=293, col_offset=29)], [], None, None, lineno=293, col_offset=8), lineno=293, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=295, col_offset=8), Slice(None, None, None), Store(), lineno=295, col_offset=8)], List([], Load(), lineno=295, col_offset=21), lineno=295, col_offset=8), Assign([Subscript(Name('testme', Load(), lineno=296, col_offset=8), Slice(Num(2, lineno=296, col_offset=15), Num(1024, lineno=296, col_offset=17), Num(10, lineno=296, col_offset=22)), Store(), lineno=296, col_offset=8)], Str('A lot', lineno=296, col_offset=28), lineno=296, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=297, col_offset=8), 'assertCallStack', Load(), lineno=297, col_offset=8), [List([Tuple([Str('__setitem__', lineno=297, col_offset=31), Tuple([Name('testme', Load(), lineno=297, col_offset=47), Call(Name('slice', Load(), lineno=297, col_offset=55), [Num(2, lineno=297, col_offset=61), Num(1024, lineno=297, col_offset=64), Num(10, lineno=297, col_offset=70)], [], None, None, lineno=297, col_offset=55), Str('A lot', lineno=298, col_offset=68)], Load(), lineno=297, col_offset=47)], Load(), lineno=297, col_offset=31)], Load(), lineno=297, col_offset=29)], [], None, None, lineno=297, col_offset=8), lineno=297, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=299, col_offset=8), Slice(None, None, None), Store(), lineno=299, col_offset=8)], List([], Load(), lineno=299, col_offset=21), lineno=299, col_offset=8), Delete([Subscript(Name('testme', Load(), lineno=300, col_offset=12), Slice(Num(2, lineno=300, col_offset=19), Num(1024, lineno=300, col_offset=21), Num(10, lineno=300, col_offset=26)), Del(), lineno=300, col_offset=12)], lineno=300, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=301, col_offset=8), 'assertCallStack', Load(), lineno=301, col_offset=8), [List([Tuple([Str('__delitem__', lineno=301, col_offset=31), Tuple([Name('testme', Load(), lineno=301, col_offset=47), Call(Name('slice', Load(), lineno=301, col_offset=55), [Num(2, lineno=301, col_offset=61), Num(1024, lineno=301, col_offset=64), Num(10, lineno=301, col_offset=70)], [], None, None, lineno=301, col_offset=55)], Load(), lineno=301, col_offset=47)], Load(), lineno=301, col_offset=31)], Load(), lineno=301, col_offset=29)], [], None, None, lineno=301, col_offset=8), lineno=301, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=303, col_offset=8), Slice(None, None, None), Store(), lineno=303, col_offset=8)], List([], Load(), lineno=303, col_offset=21), lineno=303, col_offset=8), Expr(Subscript(Name('testme', Load(), lineno=304, col_offset=8), ExtSlice([Slice(None, Num(42, lineno=304, col_offset=16), None), Ellipsis(), Slice(None, Num(24, lineno=304, col_offset=26), Name('None', Load(), lineno=304, col_offset=28)), Index(Num(24, lineno=304, col_offset=31)), Index(Num(100, lineno=304, col_offset=35))]), Load(), lineno=304, col_offset=8), lineno=304, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=305, col_offset=8), 'assertCallStack', Load(), lineno=305, col_offset=8), [List([Tuple([Str('__getitem__', lineno=305, col_offset=31), Tuple([Name('testme', Load(), lineno=305, col_offset=47), Tuple([Call(Name('slice', Load(), lineno=305, col_offset=56), [Name('None', Load(), lineno=305, col_offset=62), Num(42, lineno=305, col_offset=68), Name('None', Load(), lineno=305, col_offset=72)], [], None, None, lineno=305, col_offset=56), Name('Ellipsis', Load(), lineno=306, col_offset=56), Call(Name('slice', Load(), lineno=307, col_offset=56), [Name('None', Load(), lineno=307, col_offset=62), Num(24, lineno=307, col_offset=68), Name('None', Load(), lineno=307, col_offset=72)], [], None, None, lineno=307, col_offset=56), Num(24, lineno=308, col_offset=56), Num(100, lineno=308, col_offset=60)], Load(), lineno=305, col_offset=56)], Load(), lineno=305, col_offset=47)], Load(), lineno=305, col_offset=31)], Load(), lineno=305, col_offset=29)], [], None, None, lineno=305, col_offset=8), lineno=305, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=309, col_offset=8), Slice(None, None, None), Store(), lineno=309, col_offset=8)], List([], Load(), lineno=309, col_offset=21), lineno=309, col_offset=8), Assign([Subscript(Name('testme', Load(), lineno=310, col_offset=8), ExtSlice([Slice(None, Num(42, lineno=310, col_offset=16), None), Ellipsis(), Slice(None, Num(24, lineno=310, col_offset=26), Name('None', Load(), lineno=310, col_offset=28)), Index(Num(24, lineno=310, col_offset=31)), Index(Num(100, lineno=310, col_offset=35))]), Store(), lineno=310, col_offset=8)], Str('Strange', lineno=310, col_offset=42), lineno=310, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=311, col_offset=8), 'assertCallStack', Load(), lineno=311, col_offset=8), [List([Tuple([Str('__setitem__', lineno=311, col_offset=31), Tuple([Name('testme', Load(), lineno=311, col_offset=47), Tuple([Call(Name('slice', Load(), lineno=311, col_offset=56), [Name('None', Load(), lineno=311, col_offset=62), Num(42, lineno=311, col_offset=68), Name('None', Load(), lineno=311, col_offset=72)], [], None, None, lineno=311, col_offset=56), Name('Ellipsis', Load(), lineno=312, col_offset=56), Call(Name('slice', Load(), lineno=313, col_offset=56), [Name('None', Load(), lineno=313, col_offset=62), Num(24, lineno=313, col_offset=68), Name('None', Load(), lineno=313, col_offset=72)], [], None, None, lineno=313, col_offset=56), Num(24, lineno=314, col_offset=56), Num(100, lineno=314, col_offset=60)], Load(), lineno=311, col_offset=56), Str('Strange', lineno=314, col_offset=66)], Load(), lineno=311, col_offset=47)], Load(), lineno=311, col_offset=31)], Load(), lineno=311, col_offset=29)], [], None, None, lineno=311, col_offset=8), lineno=311, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=315, col_offset=8), Slice(None, None, None), Store(), lineno=315, col_offset=8)], List([], Load(), lineno=315, col_offset=21), lineno=315, col_offset=8), Delete([Subscript(Name('testme', Load(), lineno=316, col_offset=12), ExtSlice([Slice(None, Num(42, lineno=316, col_offset=20), None), Ellipsis(), Slice(None, Num(24, lineno=316, col_offset=30), Name('None', Load(), lineno=316, col_offset=32)), Index(Num(24, lineno=316, col_offset=35)), Index(Num(100, lineno=316, col_offset=39))]), Del(), lineno=316, col_offset=12)], lineno=316, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=317, col_offset=8), 'assertCallStack', Load(), lineno=317, col_offset=8), [List([Tuple([Str('__delitem__', lineno=317, col_offset=31), Tuple([Name('testme', Load(), lineno=317, col_offset=47), Tuple([Call(Name('slice', Load(), lineno=317, col_offset=56), [Name('None', Load(), lineno=317, col_offset=62), Num(42, lineno=317, col_offset=68), Name('None', Load(), lineno=317, col_offset=72)], [], None, None, lineno=317, col_offset=56), Name('Ellipsis', Load(), lineno=318, col_offset=56), Call(Name('slice', Load(), lineno=319, col_offset=56), [Name('None', Load(), lineno=319, col_offset=62), Num(24, lineno=319, col_offset=68), Name('None', Load(), lineno=319, col_offset=72)], [], None, None, lineno=319, col_offset=56), Num(24, lineno=320, col_offset=56), Num(100, lineno=320, col_offset=60)], Load(), lineno=317, col_offset=56)], Load(), lineno=317, col_offset=47)], Load(), lineno=317, col_offset=31)], Load(), lineno=317, col_offset=29)], [], None, None, lineno=317, col_offset=8), lineno=317, col_offset=8), Assign([Name('getslice', Store(), lineno=325, col_offset=8)], Attribute(Name('AllTests', Load(), lineno=325, col_offset=19), '__getslice__', Load(), lineno=325, col_offset=19), lineno=325, col_offset=8), Delete([Attribute(Name('AllTests', Load(), lineno=326, col_offset=12), '__getslice__', Del(), lineno=326, col_offset=12)], lineno=326, col_offset=8), Assign([Name('setslice', Store(), lineno=327, col_offset=8)], Attribute(Name('AllTests', Load(), lineno=327, col_offset=19), '__setslice__', Load(), lineno=327, col_offset=19), lineno=327, col_offset=8), Delete([Attribute(Name('AllTests', Load(), lineno=328, col_offset=12), '__setslice__', Del(), lineno=328, col_offset=12)], lineno=328, col_offset=8), Assign([Name('delslice', Store(), lineno=329, col_offset=8)], Attribute(Name('AllTests', Load(), lineno=329, col_offset=19), '__delslice__', Load(), lineno=329, col_offset=19), lineno=329, col_offset=8), Delete([Attribute(Name('AllTests', Load(), lineno=330, col_offset=12), '__delslice__', Del(), lineno=330, col_offset=12)], lineno=330, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=335, col_offset=8), Slice(None, None, None), Store(), lineno=335, col_offset=8)], List([], Load(), lineno=335, col_offset=21), lineno=335, col_offset=8), Expr(Subscript(Name('testme', Load(), lineno=336, col_offset=8), Slice(None, Num(42, lineno=336, col_offset=16), None), Load(), lineno=336, col_offset=8), lineno=336, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=337, col_offset=8), 'assertCallStack', Load(), lineno=337, col_offset=8), [List([Tuple([Str('__getitem__', lineno=337, col_offset=31), Tuple([Name('testme', Load(), lineno=337, col_offset=47), Call(Name('slice', Load(), lineno=337, col_offset=55), [Num(0, lineno=337, col_offset=61), Num(42, lineno=337, col_offset=64), Name('None', Load(), lineno=337, col_offset=68)], [], None, None, lineno=337, col_offset=55)], Load(), lineno=337, col_offset=47)], Load(), lineno=337, col_offset=31)], Load(), lineno=337, col_offset=29)], [], None, None, lineno=337, col_offset=8), lineno=337, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=339, col_offset=8), Slice(None, None, None), Store(), lineno=339, col_offset=8)], List([], Load(), lineno=339, col_offset=21), lineno=339, col_offset=8), Assign([Subscript(Name('testme', Load(), lineno=340, col_offset=8), Slice(None, Num(42, lineno=340, col_offset=16), None), Store(), lineno=340, col_offset=8)], Str('The Answer', lineno=340, col_offset=22), lineno=340, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=341, col_offset=8), 'assertCallStack', Load(), lineno=341, col_offset=8), [List([Tuple([Str('__setitem__', lineno=341, col_offset=31), Tuple([Name('testme', Load(), lineno=341, col_offset=47), Call(Name('slice', Load(), lineno=341, col_offset=55), [Num(0, lineno=341, col_offset=61), Num(42, lineno=341, col_offset=64), Name('None', Load(), lineno=341, col_offset=68)], [], None, None, lineno=341, col_offset=55), Str('The Answer', lineno=342, col_offset=64)], Load(), lineno=341, col_offset=47)], Load(), lineno=341, col_offset=31)], Load(), lineno=341, col_offset=29)], [], None, None, lineno=341, col_offset=8), lineno=341, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=343, col_offset=8), Slice(None, None, None), Store(), lineno=343, col_offset=8)], List([], Load(), lineno=343, col_offset=21), lineno=343, col_offset=8), Delete([Subscript(Name('testme', Load(), lineno=344, col_offset=12), Slice(None, Num(42, lineno=344, col_offset=20), None), Del(), lineno=344, col_offset=12)], lineno=344, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=345, col_offset=8), 'assertCallStack', Load(), lineno=345, col_offset=8), [List([Tuple([Str('__delitem__', lineno=345, col_offset=31), Tuple([Name('testme', Load(), lineno=345, col_offset=47), Call(Name('slice', Load(), lineno=345, col_offset=55), [Num(0, lineno=345, col_offset=61), Num(42, lineno=345, col_offset=64), Name('None', Load(), lineno=345, col_offset=68)], [], None, None, lineno=345, col_offset=55)], Load(), lineno=345, col_offset=47)], Load(), lineno=345, col_offset=31)], Load(), lineno=345, col_offset=29)], [], None, None, lineno=345, col_offset=8), lineno=345, col_offset=8), Assign([Attribute(Name('AllTests', Load(), lineno=348, col_offset=8), '__getslice__', Store(), lineno=348, col_offset=8)], Name('getslice', Load(), lineno=348, col_offset=32), lineno=348, col_offset=8), Assign([Attribute(Name('AllTests', Load(), lineno=349, col_offset=8), '__setslice__', Store(), lineno=349, col_offset=8)], Name('setslice', Load(), lineno=349, col_offset=32), lineno=349, col_offset=8), Assign([Attribute(Name('AllTests', Load(), lineno=350, col_offset=8), '__delslice__', Store(), lineno=350, col_offset=8)], Name('delslice', Load(), lineno=350, col_offset=32), lineno=350, col_offset=8)], [], lineno=250, col_offset=4), FunctionDef('testUnaryOps', arguments([Name('self', Param(), lineno=353, col_offset=21)], None, None, []), [Assign([Name('testme', Store(), lineno=354, col_offset=8)], Call(Name('AllTests', Load(), lineno=354, col_offset=17), [], [], None, None, lineno=354, col_offset=17), lineno=354, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=356, col_offset=8), Slice(None, None, None), Store(), lineno=356, col_offset=8)], List([], Load(), lineno=356, col_offset=21), lineno=356, col_offset=8), Expr(UnaryOp(USub(), Name('testme', Load(), lineno=357, col_offset=9), lineno=357, col_offset=8), lineno=357, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=358, col_offset=8), 'assertCallStack', Load(), lineno=358, col_offset=8), [List([Tuple([Str('__neg__', lineno=358, col_offset=31), Tuple([Name('testme', Load(), lineno=358, col_offset=43)], Load(), lineno=358, col_offset=43)], Load(), lineno=358, col_offset=31)], Load(), lineno=358, col_offset=29)], [], None, None, lineno=358, col_offset=8), lineno=358, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=359, col_offset=8), Slice(None, None, None), Store(), lineno=359, col_offset=8)], List([], Load(), lineno=359, col_offset=21), lineno=359, col_offset=8), Expr(UnaryOp(UAdd(), Name('testme', Load(), lineno=360, col_offset=9), lineno=360, col_offset=8), lineno=360, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=361, col_offset=8), 'assertCallStack', Load(), lineno=361, col_offset=8), [List([Tuple([Str('__pos__', lineno=361, col_offset=31), Tuple([Name('testme', Load(), lineno=361, col_offset=43)], Load(), lineno=361, col_offset=43)], Load(), lineno=361, col_offset=31)], Load(), lineno=361, col_offset=29)], [], None, None, lineno=361, col_offset=8), lineno=361, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=362, col_offset=8), Slice(None, None, None), Store(), lineno=362, col_offset=8)], List([], Load(), lineno=362, col_offset=21), lineno=362, col_offset=8), Expr(Call(Name('abs', Load(), lineno=363, col_offset=8), [Name('testme', Load(), lineno=363, col_offset=12)], [], None, None, lineno=363, col_offset=8), lineno=363, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=364, col_offset=8), 'assertCallStack', Load(), lineno=364, col_offset=8), [List([Tuple([Str('__abs__', lineno=364, col_offset=31), Tuple([Name('testme', Load(), lineno=364, col_offset=43)], Load(), lineno=364, col_offset=43)], Load(), lineno=364, col_offset=31)], Load(), lineno=364, col_offset=29)], [], None, None, lineno=364, col_offset=8), lineno=364, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=365, col_offset=8), Slice(None, None, None), Store(), lineno=365, col_offset=8)], List([], Load(), lineno=365, col_offset=21), lineno=365, col_offset=8), Expr(Call(Name('int', Load(), lineno=366, col_offset=8), [Name('testme', Load(), lineno=366, col_offset=12)], [], None, None, lineno=366, col_offset=8), lineno=366, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=367, col_offset=8), 'assertCallStack', Load(), lineno=367, col_offset=8), [List([Tuple([Str('__int__', lineno=367, col_offset=31), Tuple([Name('testme', Load(), lineno=367, col_offset=43)], Load(), lineno=367, col_offset=43)], Load(), lineno=367, col_offset=31)], Load(), lineno=367, col_offset=29)], [], None, None, lineno=367, col_offset=8), lineno=367, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=368, col_offset=8), Slice(None, None, None), Store(), lineno=368, col_offset=8)], List([], Load(), lineno=368, col_offset=21), lineno=368, col_offset=8), Expr(Call(Name('long', Load(), lineno=369, col_offset=8), [Name('testme', Load(), lineno=369, col_offset=13)], [], None, None, lineno=369, col_offset=8), lineno=369, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=370, col_offset=8), 'assertCallStack', Load(), lineno=370, col_offset=8), [List([Tuple([Str('__long__', lineno=370, col_offset=31), Tuple([Name('testme', Load(), lineno=370, col_offset=44)], Load(), lineno=370, col_offset=44)], Load(), lineno=370, col_offset=31)], Load(), lineno=370, col_offset=29)], [], None, None, lineno=370, col_offset=8), lineno=370, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=371, col_offset=8), Slice(None, None, None), Store(), lineno=371, col_offset=8)], List([], Load(), lineno=371, col_offset=21), lineno=371, col_offset=8), Expr(Call(Name('float', Load(), lineno=372, col_offset=8), [Name('testme', Load(), lineno=372, col_offset=14)], [], None, None, lineno=372, col_offset=8), lineno=372, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=373, col_offset=8), 'assertCallStack', Load(), lineno=373, col_offset=8), [List([Tuple([Str('__float__', lineno=373, col_offset=31), Tuple([Name('testme', Load(), lineno=373, col_offset=45)], Load(), lineno=373, col_offset=45)], Load(), lineno=373, col_offset=31)], Load(), lineno=373, col_offset=29)], [], None, None, lineno=373, col_offset=8), lineno=373, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=374, col_offset=8), Slice(None, None, None), Store(), lineno=374, col_offset=8)], List([], Load(), lineno=374, col_offset=21), lineno=374, col_offset=8), Expr(Call(Name('oct', Load(), lineno=375, col_offset=8), [Name('testme', Load(), lineno=375, col_offset=12)], [], None, None, lineno=375, col_offset=8), lineno=375, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=376, col_offset=8), 'assertCallStack', Load(), lineno=376, col_offset=8), [List([Tuple([Str('__oct__', lineno=376, col_offset=31), Tuple([Name('testme', Load(), lineno=376, col_offset=43)], Load(), lineno=376, col_offset=43)], Load(), lineno=376, col_offset=31)], Load(), lineno=376, col_offset=29)], [], None, None, lineno=376, col_offset=8), lineno=376, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=377, col_offset=8), Slice(None, None, None), Store(), lineno=377, col_offset=8)], List([], Load(), lineno=377, col_offset=21), lineno=377, col_offset=8), Expr(Call(Name('hex', Load(), lineno=378, col_offset=8), [Name('testme', Load(), lineno=378, col_offset=12)], [], None, None, lineno=378, col_offset=8), lineno=378, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=379, col_offset=8), 'assertCallStack', Load(), lineno=379, col_offset=8), [List([Tuple([Str('__hex__', lineno=379, col_offset=31), Tuple([Name('testme', Load(), lineno=379, col_offset=43)], Load(), lineno=379, col_offset=43)], Load(), lineno=379, col_offset=31)], Load(), lineno=379, col_offset=29)], [], None, None, lineno=379, col_offset=8), lineno=379, col_offset=8)], [], lineno=353, col_offset=4), FunctionDef('testMisc', arguments([Name('self', Param(), lineno=382, col_offset=17)], None, None, []), [Assign([Name('testme', Store(), lineno=383, col_offset=8)], Call(Name('AllTests', Load(), lineno=383, col_offset=17), [], [], None, None, lineno=383, col_offset=17), lineno=383, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=385, col_offset=8), Slice(None, None, None), Store(), lineno=385, col_offset=8)], List([], Load(), lineno=385, col_offset=21), lineno=385, col_offset=8), Expr(Call(Name('hash', Load(), lineno=386, col_offset=8), [Name('testme', Load(), lineno=386, col_offset=13)], [], None, None, lineno=386, col_offset=8), lineno=386, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=387, col_offset=8), 'assertCallStack', Load(), lineno=387, col_offset=8), [List([Tuple([Str('__hash__', lineno=387, col_offset=31), Tuple([Name('testme', Load(), lineno=387, col_offset=44)], Load(), lineno=387, col_offset=44)], Load(), lineno=387, col_offset=31)], Load(), lineno=387, col_offset=29)], [], None, None, lineno=387, col_offset=8), lineno=387, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=389, col_offset=8), Slice(None, None, None), Store(), lineno=389, col_offset=8)], List([], Load(), lineno=389, col_offset=21), lineno=389, col_offset=8), Expr(Call(Name('repr', Load(), lineno=390, col_offset=8), [Name('testme', Load(), lineno=390, col_offset=13)], [], None, None, lineno=390, col_offset=8), lineno=390, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=391, col_offset=8), 'assertCallStack', Load(), lineno=391, col_offset=8), [List([Tuple([Str('__repr__', lineno=391, col_offset=31), Tuple([Name('testme', Load(), lineno=391, col_offset=44)], Load(), lineno=391, col_offset=44)], Load(), lineno=391, col_offset=31)], Load(), lineno=391, col_offset=29)], [], None, None, lineno=391, col_offset=8), lineno=391, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=393, col_offset=8), Slice(None, None, None), Store(), lineno=393, col_offset=8)], List([], Load(), lineno=393, col_offset=21), lineno=393, col_offset=8), Expr(Call(Name('str', Load(), lineno=394, col_offset=8), [Name('testme', Load(), lineno=394, col_offset=12)], [], None, None, lineno=394, col_offset=8), lineno=394, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=395, col_offset=8), 'assertCallStack', Load(), lineno=395, col_offset=8), [List([Tuple([Str('__str__', lineno=395, col_offset=31), Tuple([Name('testme', Load(), lineno=395, col_offset=43)], Load(), lineno=395, col_offset=43)], Load(), lineno=395, col_offset=31)], Load(), lineno=395, col_offset=29)], [], None, None, lineno=395, col_offset=8), lineno=395, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=397, col_offset=8), Slice(None, None, None), Store(), lineno=397, col_offset=8)], List([], Load(), lineno=397, col_offset=21), lineno=397, col_offset=8), Expr(Compare(Name('testme', Load(), lineno=398, col_offset=8), [Eq()], [Num(1, lineno=398, col_offset=18)], lineno=398, col_offset=8), lineno=398, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=399, col_offset=8), 'assertCallStack', Load(), lineno=399, col_offset=8), [List([Tuple([Str('__coerce__', lineno=399, col_offset=31), Tuple([Name('testme', Load(), lineno=399, col_offset=46), Num(1, lineno=399, col_offset=54)], Load(), lineno=399, col_offset=46)], Load(), lineno=399, col_offset=31), Tuple([Str('__cmp__', lineno=399, col_offset=60), Tuple([Name('testme', Load(), lineno=399, col_offset=72), Num(1, lineno=399, col_offset=80)], Load(), lineno=399, col_offset=72)], Load(), lineno=399, col_offset=60)], Load(), lineno=399, col_offset=29)], [], None, None, lineno=399, col_offset=8), lineno=399, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=401, col_offset=8), Slice(None, None, None), Store(), lineno=401, col_offset=8)], List([], Load(), lineno=401, col_offset=21), lineno=401, col_offset=8), Expr(Compare(Name('testme', Load(), lineno=402, col_offset=8), [Lt()], [Num(1, lineno=402, col_offset=17)], lineno=402, col_offset=8), lineno=402, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=403, col_offset=8), 'assertCallStack', Load(), lineno=403, col_offset=8), [List([Tuple([Str('__coerce__', lineno=403, col_offset=31), Tuple([Name('testme', Load(), lineno=403, col_offset=46), Num(1, lineno=403, col_offset=54)], Load(), lineno=403, col_offset=46)], Load(), lineno=403, col_offset=31), Tuple([Str('__cmp__', lineno=403, col_offset=60), Tuple([Name('testme', Load(), lineno=403, col_offset=72), Num(1, lineno=403, col_offset=80)], Load(), lineno=403, col_offset=72)], Load(), lineno=403, col_offset=60)], Load(), lineno=403, col_offset=29)], [], None, None, lineno=403, col_offset=8), lineno=403, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=405, col_offset=8), Slice(None, None, None), Store(), lineno=405, col_offset=8)], List([], Load(), lineno=405, col_offset=21), lineno=405, col_offset=8), Expr(Compare(Name('testme', Load(), lineno=406, col_offset=8), [Gt()], [Num(1, lineno=406, col_offset=17)], lineno=406, col_offset=8), lineno=406, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=407, col_offset=8), 'assertCallStack', Load(), lineno=407, col_offset=8), [List([Tuple([Str('__coerce__', lineno=407, col_offset=31), Tuple([Name('testme', Load(), lineno=407, col_offset=46), Num(1, lineno=407, col_offset=54)], Load(), lineno=407, col_offset=46)], Load(), lineno=407, col_offset=31), Tuple([Str('__cmp__', lineno=407, col_offset=60), Tuple([Name('testme', Load(), lineno=407, col_offset=72), Num(1, lineno=407, col_offset=80)], Load(), lineno=407, col_offset=72)], Load(), lineno=407, col_offset=60)], Load(), lineno=407, col_offset=29)], [], None, None, lineno=407, col_offset=8), lineno=407, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=409, col_offset=8), Slice(None, None, None), Store(), lineno=409, col_offset=8)], List([], Load(), lineno=409, col_offset=21), lineno=409, col_offset=8), Expr(Call(Name('eval', Load(), lineno=410, col_offset=8), [Str('testme <> 1', lineno=410, col_offset=13)], [], None, None, lineno=410, col_offset=8), lineno=410, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=411, col_offset=8), 'assertCallStack', Load(), lineno=411, col_offset=8), [List([Tuple([Str('__coerce__', lineno=411, col_offset=31), Tuple([Name('testme', Load(), lineno=411, col_offset=46), Num(1, lineno=411, col_offset=54)], Load(), lineno=411, col_offset=46)], Load(), lineno=411, col_offset=31), Tuple([Str('__cmp__', lineno=411, col_offset=60), Tuple([Name('testme', Load(), lineno=411, col_offset=72), Num(1, lineno=411, col_offset=80)], Load(), lineno=411, col_offset=72)], Load(), lineno=411, col_offset=60)], Load(), lineno=411, col_offset=29)], [], None, None, lineno=411, col_offset=8), lineno=411, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=413, col_offset=8), Slice(None, None, None), Store(), lineno=413, col_offset=8)], List([], Load(), lineno=413, col_offset=21), lineno=413, col_offset=8), Expr(Compare(Name('testme', Load(), lineno=414, col_offset=8), [NotEq()], [Num(1, lineno=414, col_offset=18)], lineno=414, col_offset=8), lineno=414, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=415, col_offset=8), 'assertCallStack', Load(), lineno=415, col_offset=8), [List([Tuple([Str('__coerce__', lineno=415, col_offset=31), Tuple([Name('testme', Load(), lineno=415, col_offset=46), Num(1, lineno=415, col_offset=54)], Load(), lineno=415, col_offset=46)], Load(), lineno=415, col_offset=31), Tuple([Str('__cmp__', lineno=415, col_offset=60), Tuple([Name('testme', Load(), lineno=415, col_offset=72), Num(1, lineno=415, col_offset=80)], Load(), lineno=415, col_offset=72)], Load(), lineno=415, col_offset=60)], Load(), lineno=415, col_offset=29)], [], None, None, lineno=415, col_offset=8), lineno=415, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=417, col_offset=8), Slice(None, None, None), Store(), lineno=417, col_offset=8)], List([], Load(), lineno=417, col_offset=21), lineno=417, col_offset=8), Expr(Compare(Num(1, lineno=418, col_offset=8), [Eq()], [Name('testme', Load(), lineno=418, col_offset=13)], lineno=418, col_offset=8), lineno=418, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=419, col_offset=8), 'assertCallStack', Load(), lineno=419, col_offset=8), [List([Tuple([Str('__coerce__', lineno=419, col_offset=31), Tuple([Name('testme', Load(), lineno=419, col_offset=46), Num(1, lineno=419, col_offset=54)], Load(), lineno=419, col_offset=46)], Load(), lineno=419, col_offset=31), Tuple([Str('__cmp__', lineno=419, col_offset=60), Tuple([Num(1, lineno=419, col_offset=72), Name('testme', Load(), lineno=419, col_offset=75)], Load(), lineno=419, col_offset=72)], Load(), lineno=419, col_offset=60)], Load(), lineno=419, col_offset=29)], [], None, None, lineno=419, col_offset=8), lineno=419, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=421, col_offset=8), Slice(None, None, None), Store(), lineno=421, col_offset=8)], List([], Load(), lineno=421, col_offset=21), lineno=421, col_offset=8), Expr(Compare(Num(1, lineno=422, col_offset=8), [Lt()], [Name('testme', Load(), lineno=422, col_offset=12)], lineno=422, col_offset=8), lineno=422, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=423, col_offset=8), 'assertCallStack', Load(), lineno=423, col_offset=8), [List([Tuple([Str('__coerce__', lineno=423, col_offset=31), Tuple([Name('testme', Load(), lineno=423, col_offset=46), Num(1, lineno=423, col_offset=54)], Load(), lineno=423, col_offset=46)], Load(), lineno=423, col_offset=31), Tuple([Str('__cmp__', lineno=423, col_offset=60), Tuple([Num(1, lineno=423, col_offset=72), Name('testme', Load(), lineno=423, col_offset=75)], Load(), lineno=423, col_offset=72)], Load(), lineno=423, col_offset=60)], Load(), lineno=423, col_offset=29)], [], None, None, lineno=423, col_offset=8), lineno=423, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=425, col_offset=8), Slice(None, None, None), Store(), lineno=425, col_offset=8)], List([], Load(), lineno=425, col_offset=21), lineno=425, col_offset=8), Expr(Compare(Num(1, lineno=426, col_offset=8), [Gt()], [Name('testme', Load(), lineno=426, col_offset=12)], lineno=426, col_offset=8), lineno=426, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=427, col_offset=8), 'assertCallStack', Load(), lineno=427, col_offset=8), [List([Tuple([Str('__coerce__', lineno=427, col_offset=31), Tuple([Name('testme', Load(), lineno=427, col_offset=46), Num(1, lineno=427, col_offset=54)], Load(), lineno=427, col_offset=46)], Load(), lineno=427, col_offset=31), Tuple([Str('__cmp__', lineno=427, col_offset=60), Tuple([Num(1, lineno=427, col_offset=72), Name('testme', Load(), lineno=427, col_offset=75)], Load(), lineno=427, col_offset=72)], Load(), lineno=427, col_offset=60)], Load(), lineno=427, col_offset=29)], [], None, None, lineno=427, col_offset=8), lineno=427, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=429, col_offset=8), Slice(None, None, None), Store(), lineno=429, col_offset=8)], List([], Load(), lineno=429, col_offset=21), lineno=429, col_offset=8), Expr(Call(Name('eval', Load(), lineno=430, col_offset=8), [Str('1 <> testme', lineno=430, col_offset=13)], [], None, None, lineno=430, col_offset=8), lineno=430, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=431, col_offset=8), 'assertCallStack', Load(), lineno=431, col_offset=8), [List([Tuple([Str('__coerce__', lineno=431, col_offset=31), Tuple([Name('testme', Load(), lineno=431, col_offset=46), Num(1, lineno=431, col_offset=54)], Load(), lineno=431, col_offset=46)], Load(), lineno=431, col_offset=31), Tuple([Str('__cmp__', lineno=431, col_offset=60), Tuple([Num(1, lineno=431, col_offset=72), Name('testme', Load(), lineno=431, col_offset=75)], Load(), lineno=431, col_offset=72)], Load(), lineno=431, col_offset=60)], Load(), lineno=431, col_offset=29)], [], None, None, lineno=431, col_offset=8), lineno=431, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=433, col_offset=8), Slice(None, None, None), Store(), lineno=433, col_offset=8)], List([], Load(), lineno=433, col_offset=21), lineno=433, col_offset=8), Expr(Compare(Num(1, lineno=434, col_offset=8), [NotEq()], [Name('testme', Load(), lineno=434, col_offset=13)], lineno=434, col_offset=8), lineno=434, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=435, col_offset=8), 'assertCallStack', Load(), lineno=435, col_offset=8), [List([Tuple([Str('__coerce__', lineno=435, col_offset=31), Tuple([Name('testme', Load(), lineno=435, col_offset=46), Num(1, lineno=435, col_offset=54)], Load(), lineno=435, col_offset=46)], Load(), lineno=435, col_offset=31), Tuple([Str('__cmp__', lineno=435, col_offset=60), Tuple([Num(1, lineno=435, col_offset=72), Name('testme', Load(), lineno=435, col_offset=75)], Load(), lineno=435, col_offset=72)], Load(), lineno=435, col_offset=60)], Load(), lineno=435, col_offset=29)], [], None, None, lineno=435, col_offset=8), lineno=435, col_offset=8)], [], lineno=382, col_offset=4), FunctionDef('testGetSetAndDel', arguments([Name('self', Param(), lineno=438, col_offset=25)], None, None, []), [ClassDef('ExtraTests', [Name('AllTests', Load(), lineno=440, col_offset=25)], [FunctionDef('__getattr__', arguments([Name('self', Param(), lineno=442, col_offset=28)], 'args', None, []), [Return(Str('SomeVal', lineno=443, col_offset=23), lineno=443, col_offset=16)], [Name('trackCall', Load(), lineno=441, col_offset=13)], lineno=441, col_offset=12), FunctionDef('__setattr__', arguments([Name('self', Param(), lineno=446, col_offset=28)], 'args', None, []), [Pass( lineno=447, col_offset=16)], [Name('trackCall', Load(), lineno=445, col_offset=13)], lineno=445, col_offset=12), FunctionDef('__delattr__', arguments([Name('self', Param(), lineno=450, col_offset=28)], 'args', None, []), [Pass( lineno=451, col_offset=16)], [Name('trackCall', Load(), lineno=449, col_offset=13)], lineno=449, col_offset=12)], [], lineno=440, col_offset=8), Assign([Name('testme', Store(), lineno=453, col_offset=8)], Call(Name('ExtraTests', Load(), lineno=453, col_offset=17), [], [], None, None, lineno=453, col_offset=17), lineno=453, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=455, col_offset=8), Slice(None, None, None), Store(), lineno=455, col_offset=8)], List([], Load(), lineno=455, col_offset=21), lineno=455, col_offset=8), Expr(Attribute(Name('testme', Load(), lineno=456, col_offset=8), 'spam', Load(), lineno=456, col_offset=8), lineno=456, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=457, col_offset=8), 'assertCallStack', Load(), lineno=457, col_offset=8), [List([Tuple([Str('__getattr__', lineno=457, col_offset=31), Tuple([Name('testme', Load(), lineno=457, col_offset=47), Str('spam', lineno=457, col_offset=55)], Load(), lineno=457, col_offset=47)], Load(), lineno=457, col_offset=31)], Load(), lineno=457, col_offset=29)], [], None, None, lineno=457, col_offset=8), lineno=457, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=459, col_offset=8), Slice(None, None, None), Store(), lineno=459, col_offset=8)], List([], Load(), lineno=459, col_offset=21), lineno=459, col_offset=8), Assign([Attribute(Name('testme', Load(), lineno=460, col_offset=8), 'eggs', Store(), lineno=460, col_offset=8)], Str('spam, spam, spam and ham', lineno=460, col_offset=22), lineno=460, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=461, col_offset=8), 'assertCallStack', Load(), lineno=461, col_offset=8), [List([Tuple([Str('__setattr__', lineno=461, col_offset=31), Tuple([Name('testme', Load(), lineno=461, col_offset=47), Str('eggs', lineno=461, col_offset=55), Str('spam, spam, spam and ham', lineno=462, col_offset=47)], Load(), lineno=461, col_offset=47)], Load(), lineno=461, col_offset=31)], Load(), lineno=461, col_offset=29)], [], None, None, lineno=461, col_offset=8), lineno=461, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=464, col_offset=8), Slice(None, None, None), Store(), lineno=464, col_offset=8)], List([], Load(), lineno=464, col_offset=21), lineno=464, col_offset=8), Delete([Attribute(Name('testme', Load(), lineno=465, col_offset=12), 'cardinal', Del(), lineno=465, col_offset=12)], lineno=465, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=466, col_offset=8), 'assertCallStack', Load(), lineno=466, col_offset=8), [List([Tuple([Str('__delattr__', lineno=466, col_offset=31), Tuple([Name('testme', Load(), lineno=466, col_offset=47), Str('cardinal', lineno=466, col_offset=55)], Load(), lineno=466, col_offset=47)], Load(), lineno=466, col_offset=31)], Load(), lineno=466, col_offset=29)], [], None, None, lineno=466, col_offset=8), lineno=466, col_offset=8)], [], lineno=438, col_offset=4), FunctionDef('testDel', arguments([Name('self', Param(), lineno=468, col_offset=16)], None, None, []), [Assign([Name('x', Store(), lineno=469, col_offset=8)], List([], Load(), lineno=469, col_offset=12), lineno=469, col_offset=8), ClassDef('DelTest', [], [FunctionDef('__del__', arguments([Name('self', Param(), lineno=472, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('x', Load(), lineno=473, col_offset=16), 'append', Load(), lineno=473, col_offset=16), [Str('crab people, crab people', lineno=473, col_offset=25)], [], None, None, lineno=473, col_offset=16), lineno=473, col_offset=16)], [], lineno=472, col_offset=12)], [], lineno=471, col_offset=8), Assign([Name('testme', Store(), lineno=474, col_offset=8)], Call(Name('DelTest', Load(), lineno=474, col_offset=17), [], [], None, None, lineno=474, col_offset=17), lineno=474, col_offset=8), Delete([Name('testme', Del(), lineno=475, col_offset=12)], lineno=475, col_offset=8), Import([alias('gc', None)], lineno=476, col_offset=8), Expr(Call(Attribute(Name('gc', Load(), lineno=477, col_offset=8), 'collect', Load(), lineno=477, col_offset=8), [], [], None, None, lineno=477, col_offset=8), lineno=477, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=478, col_offset=8), 'assertEqual', Load(), lineno=478, col_offset=8), [List([Str('crab people, crab people', lineno=478, col_offset=26)], Load(), lineno=478, col_offset=25), Name('x', Load(), lineno=478, col_offset=55)], [], None, None, lineno=478, col_offset=8), lineno=478, col_offset=8)], [], lineno=468, col_offset=4), FunctionDef('testBadTypeReturned', arguments([Name('self', Param(), lineno=480, col_offset=28)], None, None, []), [ClassDef('BadTypeClass', [], [FunctionDef('__int__', arguments([Name('self', Param(), lineno=483, col_offset=24)], None, None, []), [Return(Name('None', Load(), lineno=484, col_offset=23), lineno=484, col_offset=16)], [], lineno=483, col_offset=12), Assign([Name('__float__', Store(), lineno=485, col_offset=12)], Name('__int__', Load(), lineno=485, col_offset=24), lineno=485, col_offset=12), Assign([Name('__long__', Store(), lineno=486, col_offset=12)], Name('__int__', Load(), lineno=486, col_offset=23), lineno=486, col_offset=12), Assign([Name('__str__', Store(), lineno=487, col_offset=12)], Name('__int__', Load(), lineno=487, col_offset=22), lineno=487, col_offset=12), Assign([Name('__repr__', Store(), lineno=488, col_offset=12)], Name('__int__', Load(), lineno=488, col_offset=23), lineno=488, col_offset=12), Assign([Name('__oct__', Store(), lineno=489, col_offset=12)], Name('__int__', Load(), lineno=489, col_offset=22), lineno=489, col_offset=12), Assign([Name('__hex__', Store(), lineno=490, col_offset=12)], Name('__int__', Load(), lineno=490, col_offset=22), lineno=490, col_offset=12)], [], lineno=482, col_offset=8), For(Name('f', Store(), lineno=492, col_offset=12), List([Name('int', Load(), lineno=492, col_offset=18), Name('float', Load(), lineno=492, col_offset=23), Name('long', Load(), lineno=492, col_offset=30), Name('str', Load(), lineno=492, col_offset=36), Name('repr', Load(), lineno=492, col_offset=41), Name('oct', Load(), lineno=492, col_offset=47), Name('hex', Load(), lineno=492, col_offset=52)], Load(), lineno=492, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=493, col_offset=12), 'assertRaises', Load(), lineno=493, col_offset=12), [Name('TypeError', Load(), lineno=493, col_offset=30), Name('f', Load(), lineno=493, col_offset=41), Call(Name('BadTypeClass', Load(), lineno=493, col_offset=44), [], [], None, None, lineno=493, col_offset=44)], [], None, None, lineno=493, col_offset=12), lineno=493, col_offset=12)], [], lineno=492, col_offset=8)], [], lineno=480, col_offset=4), FunctionDef('testMixIntsAndLongs', arguments([Name('self', Param(), lineno=495, col_offset=28)], None, None, []), [ClassDef('IntLongMixClass', [], [FunctionDef('__int__', arguments([Name('self', Param(), lineno=499, col_offset=24)], None, None, []), [Return(Num(42L, lineno=500, col_offset=23), lineno=500, col_offset=16)], [Name('trackCall', Load(), lineno=498, col_offset=13)], lineno=498, col_offset=12), FunctionDef('__long__', arguments([Name('self', Param(), lineno=503, col_offset=25)], None, None, []), [Return(Num(64, lineno=504, col_offset=23), lineno=504, col_offset=16)], [Name('trackCall', Load(), lineno=502, col_offset=13)], lineno=502, col_offset=12)], [], lineno=497, col_offset=8), Assign([Name('mixIntAndLong', Store(), lineno=506, col_offset=8)], Call(Name('IntLongMixClass', Load(), lineno=506, col_offset=24), [], [], None, None, lineno=506, col_offset=24), lineno=506, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=508, col_offset=8), Slice(None, None, None), Store(), lineno=508, col_offset=8)], List([], Load(), lineno=508, col_offset=21), lineno=508, col_offset=8), Assign([Name('as_int', Store(), lineno=509, col_offset=8)], Call(Name('int', Load(), lineno=509, col_offset=17), [Name('mixIntAndLong', Load(), lineno=509, col_offset=21)], [], None, None, lineno=509, col_offset=17), lineno=509, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=510, col_offset=8), 'assertEqual', Load(), lineno=510, col_offset=8), [Call(Name('type', Load(), lineno=510, col_offset=25), [Name('as_int', Load(), lineno=510, col_offset=30)], [], None, None, lineno=510, col_offset=25), Name('long', Load(), lineno=510, col_offset=39)], [], None, None, lineno=510, col_offset=8), lineno=510, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=511, col_offset=8), 'assertEqual', Load(), lineno=511, col_offset=8), [Name('as_int', Load(), lineno=511, col_offset=25), Num(42L, lineno=511, col_offset=33)], [], None, None, lineno=511, col_offset=8), lineno=511, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=512, col_offset=8), 'assertCallStack', Load(), lineno=512, col_offset=8), [List([Tuple([Str('__int__', lineno=512, col_offset=31), Tuple([Name('mixIntAndLong', Load(), lineno=512, col_offset=43)], Load(), lineno=512, col_offset=43)], Load(), lineno=512, col_offset=31)], Load(), lineno=512, col_offset=29)], [], None, None, lineno=512, col_offset=8), lineno=512, col_offset=8), Assign([Subscript(Name('callLst', Load(), lineno=514, col_offset=8), Slice(None, None, None), Store(), lineno=514, col_offset=8)], List([], Load(), lineno=514, col_offset=21), lineno=514, col_offset=8), Assign([Name('as_long', Store(), lineno=515, col_offset=8)], Call(Name('long', Load(), lineno=515, col_offset=18), [Name('mixIntAndLong', Load(), lineno=515, col_offset=23)], [], None, None, lineno=515, col_offset=18), lineno=515, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=516, col_offset=8), 'assertEqual', Load(), lineno=516, col_offset=8), [Call(Name('type', Load(), lineno=516, col_offset=25), [Name('as_long', Load(), lineno=516, col_offset=30)], [], None, None, lineno=516, col_offset=25), Name('long', Load(), lineno=516, col_offset=40)], [], None, None, lineno=516, col_offset=8), lineno=516, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=517, col_offset=8), 'assertEqual', Load(), lineno=517, col_offset=8), [Name('as_long', Load(), lineno=517, col_offset=25), Num(64, lineno=517, col_offset=34)], [], None, None, lineno=517, col_offset=8), lineno=517, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=518, col_offset=8), 'assertCallStack', Load(), lineno=518, col_offset=8), [List([Tuple([Str('__long__', lineno=518, col_offset=31), Tuple([Name('mixIntAndLong', Load(), lineno=518, col_offset=44)], Load(), lineno=518, col_offset=44)], Load(), lineno=518, col_offset=31)], Load(), lineno=518, col_offset=29)], [], None, None, lineno=518, col_offset=8), lineno=518, col_offset=8)], [], lineno=495, col_offset=4), FunctionDef('testHashStuff', arguments([Name('self', Param(), lineno=520, col_offset=22)], None, None, []), [ClassDef('C0', [], [Pass( lineno=525, col_offset=12)], [], lineno=524, col_offset=8), Expr(Call(Name('hash', Load(), lineno=527, col_offset=8), [Call(Name('C0', Load(), lineno=527, col_offset=13), [], [], None, None, lineno=527, col_offset=13)], [], None, None, lineno=527, col_offset=8), lineno=527, col_offset=8), ClassDef('C1', [], [FunctionDef('__cmp__', arguments([Name('self', Param(), lineno=530, col_offset=24), Name('other', Param(), lineno=530, col_offset=30)], None, None, []), [Return(Num(0, lineno=530, col_offset=45), lineno=530, col_offset=38)], [], lineno=530, col_offset=12)], [], lineno=529, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=532, col_offset=8), 'assertRaises', Load(), lineno=532, col_offset=8), [Name('TypeError', Load(), lineno=532, col_offset=26), Name('hash', Load(), lineno=532, col_offset=37), Call(Name('C1', Load(), lineno=532, col_offset=43), [], [], None, None, lineno=532, col_offset=43)], [], None, None, lineno=532, col_offset=8), lineno=532, col_offset=8), ClassDef('C2', [], [FunctionDef('__eq__', arguments([Name('self', Param(), lineno=535, col_offset=23), Name('other', Param(), lineno=535, col_offset=29)], None, None, []), [Return(Num(1, lineno=535, col_offset=44), lineno=535, col_offset=37)], [], lineno=535, col_offset=12)], [], lineno=534, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=537, col_offset=8), 'assertRaises', Load(), lineno=537, col_offset=8), [Name('TypeError', Load(), lineno=537, col_offset=26), Name('hash', Load(), lineno=537, col_offset=37), Call(Name('C2', Load(), lineno=537, col_offset=43), [], [], None, None, lineno=537, col_offset=43)], [], None, None, lineno=537, col_offset=8), lineno=537, col_offset=8)], [], lineno=520, col_offset=4), FunctionDef('testSFBug532646', arguments([Name('self', Param(), lineno=540, col_offset=24)], None, None, []), [ClassDef('A', [], [Pass( lineno=544, col_offset=12)], [], lineno=543, col_offset=8), Assign([Attribute(Name('A', Load(), lineno=545, col_offset=8), '__call__', Store(), lineno=545, col_offset=8)], Call(Name('A', Load(), lineno=545, col_offset=21), [], [], None, None, lineno=545, col_offset=21), lineno=545, col_offset=8), Assign([Name('a', Store(), lineno=546, col_offset=8)], Call(Name('A', Load(), lineno=546, col_offset=12), [], [], None, None, lineno=546, col_offset=12), lineno=546, col_offset=8), TryExcept([Expr(Call(Name('a', Load(), lineno=549, col_offset=12), [], [], None, None, lineno=549, col_offset=12), lineno=549, col_offset=12)], [ExceptHandler(Name('RuntimeError', Load(), lineno=550, col_offset=15), None, [Pass( lineno=551, col_offset=12)], lineno=550, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=553, col_offset=12), 'fail', Load(), lineno=553, col_offset=12), [Str('Failed to raise RuntimeError', lineno=553, col_offset=22)], [], None, None, lineno=553, col_offset=12), lineno=553, col_offset=12)], lineno=548, col_offset=8)], [], lineno=540, col_offset=4), FunctionDef('testForExceptionsRaisedInInstanceGetattr2', arguments([Name('self', Param(), lineno=555, col_offset=50)], None, None, []), [FunctionDef('booh', arguments([Name('self', Param(), lineno=558, col_offset=17)], None, None, []), [Raise(Call(Name('AttributeError', Load(), lineno=559, col_offset=18), [Str('booh', lineno=559, col_offset=33)], [], None, None, lineno=559, col_offset=18), None, None, lineno=559, col_offset=12)], [], lineno=558, col_offset=8), ClassDef('A', [], [Assign([Name('a', Store(), lineno=562, col_offset=12)], Call(Name('property', Load(), lineno=562, col_offset=16), [Name('booh', Load(), lineno=562, col_offset=25)], [], None, None, lineno=562, col_offset=16), lineno=562, col_offset=12)], [], lineno=561, col_offset=8), TryExcept([Expr(Attribute(Call(Name('A', Load(), lineno=564, col_offset=12), [], [], None, None, lineno=564, col_offset=12), 'a', Load(), lineno=564, col_offset=12), lineno=564, col_offset=12)], [ExceptHandler(Name('AttributeError', Load(), lineno=565, col_offset=15), Name('x', Store(), lineno=565, col_offset=31), [If(Compare(Call(Name('str', Load(), lineno=566, col_offset=15), [Name('x', Load(), lineno=566, col_offset=19)], [], None, None, lineno=566, col_offset=15), [NotEq()], [Str('booh', lineno=566, col_offset=25)], lineno=566, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=567, col_offset=16), 'fail', Load(), lineno=567, col_offset=16), [BinOp(Str('attribute error for A().a got masked: %s', lineno=567, col_offset=26), Mod(), Name('x', Load(), lineno=567, col_offset=71), lineno=567, col_offset=26)], [], None, None, lineno=567, col_offset=16), lineno=567, col_offset=16)], [], lineno=566, col_offset=12)], lineno=565, col_offset=8)], [], lineno=563, col_offset=8), ClassDef('E', [], [Assign([Name('__eq__', Store(), lineno=570, col_offset=12)], Call(Name('property', Load(), lineno=570, col_offset=21), [Name('booh', Load(), lineno=570, col_offset=30)], [], None, None, lineno=570, col_offset=21), lineno=570, col_offset=12)], [], lineno=569, col_offset=8), Expr(Compare(Call(Name('E', Load(), lineno=571, col_offset=8), [], [], None, None, lineno=571, col_offset=8), [Eq()], [Call(Name('E', Load(), lineno=571, col_offset=15), [], [], None, None, lineno=571, col_offset=15)], lineno=571, col_offset=8), lineno=571, col_offset=8), ClassDef('I', [], [Assign([Name('__init__', Store(), lineno=574, col_offset=12)], Call(Name('property', Load(), lineno=574, col_offset=23), [Name('booh', Load(), lineno=574, col_offset=32)], [], None, None, lineno=574, col_offset=23), lineno=574, col_offset=12)], [], lineno=573, col_offset=8), TryExcept([Expr(Call(Name('I', Load(), lineno=578, col_offset=12), [], [], None, None, lineno=578, col_offset=12), lineno=578, col_offset=12)], [ExceptHandler(Name('AttributeError', Load(), lineno=579, col_offset=15), Name('x', Store(), lineno=579, col_offset=31), [Pass( lineno=580, col_offset=12)], lineno=579, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=582, col_offset=12), 'fail', Load(), lineno=582, col_offset=12), [Str('attribute error for I.__init__ got masked', lineno=582, col_offset=22)], [], None, None, lineno=582, col_offset=12), lineno=582, col_offset=12)], lineno=575, col_offset=8)], [], lineno=555, col_offset=4), FunctionDef('testHashComparisonOfMethods', arguments([Name('self', Param(), lineno=584, col_offset=36)], None, None, []), [ClassDef('A', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=587, col_offset=25), Name('x', Param(), lineno=587, col_offset=31)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=588, col_offset=16), 'x', Store(), lineno=588, col_offset=16)], Name('x', Load(), lineno=588, col_offset=25), lineno=588, col_offset=16)], [], lineno=587, col_offset=12), FunctionDef('f', arguments([Name('self', Param(), lineno=589, col_offset=18)], None, None, []), [Pass( lineno=590, col_offset=16)], [], lineno=589, col_offset=12), FunctionDef('g', arguments([Name('self', Param(), lineno=591, col_offset=18)], None, None, []), [Pass( lineno=592, col_offset=16)], [], lineno=591, col_offset=12), FunctionDef('__eq__', arguments([Name('self', Param(), lineno=593, col_offset=23), Name('other', Param(), lineno=593, col_offset=29)], None, None, []), [Return(Compare(Attribute(Name('self', Load(), lineno=594, col_offset=23), 'x', Load(), lineno=594, col_offset=23), [Eq()], [Attribute(Name('other', Load(), lineno=594, col_offset=33), 'x', Load(), lineno=594, col_offset=33)], lineno=594, col_offset=23), lineno=594, col_offset=16)], [], lineno=593, col_offset=12), FunctionDef('__hash__', arguments([Name('self', Param(), lineno=595, col_offset=25)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=596, col_offset=23), 'x', Load(), lineno=596, col_offset=23), lineno=596, col_offset=16)], [], lineno=595, col_offset=12)], [], lineno=586, col_offset=8), ClassDef('B', [Name('A', Load(), lineno=597, col_offset=16)], [Pass( lineno=598, col_offset=12)], [], lineno=597, col_offset=8), Assign([Name('a1', Store(), lineno=600, col_offset=8)], Call(Name('A', Load(), lineno=600, col_offset=13), [Num(1, lineno=600, col_offset=15)], [], None, None, lineno=600, col_offset=13), lineno=600, col_offset=8), Assign([Name('a2', Store(), lineno=601, col_offset=8)], Call(Name('A', Load(), lineno=601, col_offset=13), [Num(2, lineno=601, col_offset=15)], [], None, None, lineno=601, col_offset=13), lineno=601, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=602, col_offset=8), 'assertEqual', Load(), lineno=602, col_offset=8), [Attribute(Name('a1', Load(), lineno=602, col_offset=25), 'f', Load(), lineno=602, col_offset=25), Attribute(Name('a1', Load(), lineno=602, col_offset=31), 'f', Load(), lineno=602, col_offset=31)], [], None, None, lineno=602, col_offset=8), lineno=602, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=603, col_offset=8), 'assertNotEqual', Load(), lineno=603, col_offset=8), [Attribute(Name('a1', Load(), lineno=603, col_offset=28), 'f', Load(), lineno=603, col_offset=28), Attribute(Name('a2', Load(), lineno=603, col_offset=34), 'f', Load(), lineno=603, col_offset=34)], [], None, None, lineno=603, col_offset=8), lineno=603, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=604, col_offset=8), 'assertNotEqual', Load(), lineno=604, col_offset=8), [Attribute(Name('a1', Load(), lineno=604, col_offset=28), 'f', Load(), lineno=604, col_offset=28), Attribute(Name('a1', Load(), lineno=604, col_offset=34), 'g', Load(), lineno=604, col_offset=34)], [], None, None, lineno=604, col_offset=8), lineno=604, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=605, col_offset=8), 'assertEqual', Load(), lineno=605, col_offset=8), [Attribute(Name('a1', Load(), lineno=605, col_offset=25), 'f', Load(), lineno=605, col_offset=25), Attribute(Call(Name('A', Load(), lineno=605, col_offset=31), [Num(1, lineno=605, col_offset=33)], [], None, None, lineno=605, col_offset=31), 'f', Load(), lineno=605, col_offset=31)], [], None, None, lineno=605, col_offset=8), lineno=605, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=606, col_offset=8), 'assertEqual', Load(), lineno=606, col_offset=8), [Call(Name('hash', Load(), lineno=606, col_offset=25), [Attribute(Name('a1', Load(), lineno=606, col_offset=30), 'f', Load(), lineno=606, col_offset=30)], [], None, None, lineno=606, col_offset=25), Call(Name('hash', Load(), lineno=606, col_offset=37), [Attribute(Name('a1', Load(), lineno=606, col_offset=42), 'f', Load(), lineno=606, col_offset=42)], [], None, None, lineno=606, col_offset=37)], [], None, None, lineno=606, col_offset=8), lineno=606, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=607, col_offset=8), 'assertEqual', Load(), lineno=607, col_offset=8), [Call(Name('hash', Load(), lineno=607, col_offset=25), [Attribute(Name('a1', Load(), lineno=607, col_offset=30), 'f', Load(), lineno=607, col_offset=30)], [], None, None, lineno=607, col_offset=25), Call(Name('hash', Load(), lineno=607, col_offset=37), [Attribute(Call(Name('A', Load(), lineno=607, col_offset=42), [Num(1, lineno=607, col_offset=44)], [], None, None, lineno=607, col_offset=42), 'f', Load(), lineno=607, col_offset=42)], [], None, None, lineno=607, col_offset=37)], [], None, None, lineno=607, col_offset=8), lineno=607, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=609, col_offset=8), 'assertNotEqual', Load(), lineno=609, col_offset=8), [Attribute(Name('A', Load(), lineno=609, col_offset=28), 'f', Load(), lineno=609, col_offset=28), Attribute(Name('a1', Load(), lineno=609, col_offset=33), 'f', Load(), lineno=609, col_offset=33)], [], None, None, lineno=609, col_offset=8), lineno=609, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=610, col_offset=8), 'assertNotEqual', Load(), lineno=610, col_offset=8), [Attribute(Name('A', Load(), lineno=610, col_offset=28), 'f', Load(), lineno=610, col_offset=28), Attribute(Name('A', Load(), lineno=610, col_offset=33), 'g', Load(), lineno=610, col_offset=33)], [], None, None, lineno=610, col_offset=8), lineno=610, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=611, col_offset=8), 'assertEqual', Load(), lineno=611, col_offset=8), [Attribute(Name('B', Load(), lineno=611, col_offset=25), 'f', Load(), lineno=611, col_offset=25), Attribute(Name('A', Load(), lineno=611, col_offset=30), 'f', Load(), lineno=611, col_offset=30)], [], None, None, lineno=611, col_offset=8), lineno=611, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=612, col_offset=8), 'assertEqual', Load(), lineno=612, col_offset=8), [Call(Name('hash', Load(), lineno=612, col_offset=25), [Attribute(Name('B', Load(), lineno=612, col_offset=30), 'f', Load(), lineno=612, col_offset=30)], [], None, None, lineno=612, col_offset=25), Call(Name('hash', Load(), lineno=612, col_offset=36), [Attribute(Name('A', Load(), lineno=612, col_offset=41), 'f', Load(), lineno=612, col_offset=41)], [], None, None, lineno=612, col_offset=36)], [], None, None, lineno=612, col_offset=8), lineno=612, col_offset=8), Assign([Name('a', Store(), lineno=615, col_offset=8)], Call(Name('A', Load(), lineno=615, col_offset=12), [BinOp(Call(Name('hash', Load(), lineno=615, col_offset=14), [Attribute(Attribute(Name('A', Load(), lineno=615, col_offset=19), 'f', Load(), lineno=615, col_offset=19), 'im_func', Load(), lineno=615, col_offset=19)], [], None, None, lineno=615, col_offset=14), BitXor(), Num(-1, lineno=615, col_offset=34), lineno=615, col_offset=14)], [], None, None, lineno=615, col_offset=12), lineno=615, col_offset=8), Expr(Call(Name('hash', Load(), lineno=616, col_offset=8), [Attribute(Name('a', Load(), lineno=616, col_offset=13), 'f', Load(), lineno=616, col_offset=13)], [], None, None, lineno=616, col_offset=8), lineno=616, col_offset=8)], [], lineno=584, col_offset=4)], [], lineno=132, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [With(Call(Attribute(Name('test_support', Load(), lineno=619, col_offset=9), 'check_py3k_warnings', Load(), lineno=619, col_offset=9), [Tuple([Str('.+__(get|set|del)slice__ has been removed', lineno=620, col_offset=13), Name('DeprecationWarning', Load(), lineno=620, col_offset=58)], Load(), lineno=620, col_offset=13), Tuple([Str('classic int division', lineno=621, col_offset=13), Name('DeprecationWarning', Load(), lineno=621, col_offset=37)], Load(), lineno=621, col_offset=13), Tuple([Str('<> not supported', lineno=622, col_offset=13), Name('DeprecationWarning', Load(), lineno=622, col_offset=33)], Load(), lineno=622, col_offset=13)], [], None, None, lineno=619, col_offset=9), None, [Expr(Call(Attribute(Name('test_support', Load(), lineno=623, col_offset=8), 'run_unittest', Load(), lineno=623, col_offset=8), [Name('ClassTests', Load(), lineno=623, col_offset=34)], [], None, None, lineno=623, col_offset=8), lineno=623, col_offset=8)], lineno=619, col_offset=9)], [], lineno=618, col_offset=0), If(Compare(Name('__name__', Load(), lineno=625, col_offset=3), [Eq()], [Str('__main__', lineno=625, col_offset=13)], lineno=625, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=626, col_offset=4), [], [], None, None, lineno=626, col_offset=4), lineno=626, col_offset=4)], [], lineno=625, col_offset=0)])
