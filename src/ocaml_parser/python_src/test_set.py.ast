Module([Import([alias('unittest', None)], lineno=2, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=3, col_offset=0), Import([alias('gc', None)], lineno=4, col_offset=0), Import([alias('weakref', None)], lineno=5, col_offset=0), Import([alias('operator', None)], lineno=6, col_offset=0), Import([alias('copy', None)], lineno=7, col_offset=0), Import([alias('pickle', None)], lineno=8, col_offset=0), ImportFrom('random', [alias('randrange', None), alias('shuffle', None)], 0, lineno=9, col_offset=0), Import([alias('sys', None)], lineno=10, col_offset=0), Import([alias('collections', None)], lineno=11, col_offset=0), ClassDef('PassThru', [Name('Exception', Load(), lineno=13, col_offset=15)], [Pass( lineno=14, col_offset=4)], [], lineno=13, col_offset=0), FunctionDef('check_pass_thru', arguments([], None, None, []), [Raise(Name('PassThru', Load(), lineno=17, col_offset=10), None, None, lineno=17, col_offset=4), Expr(Yield(Num(1, lineno=18, col_offset=10), lineno=18, col_offset=4), lineno=18, col_offset=4)], [], lineno=16, col_offset=0), ClassDef('BadCmp', [], [FunctionDef('__hash__', arguments([Name('self', Param(), lineno=21, col_offset=17)], None, None, []), [Return(Num(1, lineno=22, col_offset=15), lineno=22, col_offset=8)], [], lineno=21, col_offset=4), FunctionDef('__cmp__', arguments([Name('self', Param(), lineno=23, col_offset=16), Name('other', Param(), lineno=23, col_offset=22)], None, None, []), [Raise(Name('RuntimeError', Load(), lineno=24, col_offset=14), None, None, lineno=24, col_offset=8)], [], lineno=23, col_offset=4)], [], lineno=20, col_offset=0), ClassDef('ReprWrapper', [], [Expr(Str('Used to test self-referential repr() calls', lineno=27, col_offset=4), lineno=27, col_offset=4), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=28, col_offset=17)], None, None, []), [Return(Call(Name('repr', Load(), lineno=29, col_offset=15), [Attribute(Name('self', Load(), lineno=29, col_offset=20), 'value', Load(), lineno=29, col_offset=20)], [], None, None, lineno=29, col_offset=15), lineno=29, col_offset=8)], [], lineno=28, col_offset=4)], [], lineno=26, col_offset=0), ClassDef('HashCountingInt', [Name('int', Load(), lineno=31, col_offset=22)], [Expr(Str('int-like object that counts the number of times __hash__ is called', lineno=32, col_offset=4), lineno=32, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=33, col_offset=17)], 'args', None, []), [Assign([Attribute(Name('self', Load(), lineno=34, col_offset=8), 'hash_count', Store(), lineno=34, col_offset=8)], Num(0, lineno=34, col_offset=26), lineno=34, col_offset=8)], [], lineno=33, col_offset=4), FunctionDef('__hash__', arguments([Name('self', Param(), lineno=35, col_offset=17)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=36, col_offset=8), 'hash_count', Store(), lineno=36, col_offset=8), Add(), Num(1, lineno=36, col_offset=27), lineno=36, col_offset=8), Return(Call(Attribute(Name('int', Load(), lineno=37, col_offset=15), '__hash__', Load(), lineno=37, col_offset=15), [Name('self', Load(), lineno=37, col_offset=28)], [], None, None, lineno=37, col_offset=15), lineno=37, col_offset=8)], [], lineno=35, col_offset=4)], [], lineno=31, col_offset=0), ClassDef('TestJointOps', [Attribute(Name('unittest', Load(), lineno=39, col_offset=19), 'TestCase', Load(), lineno=39, col_offset=19)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=42, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=43, col_offset=8), 'word', Store(), lineno=43, col_offset=8), Name('word', Store(), lineno=43, col_offset=20)], Str('simsalabim', lineno=43, col_offset=27), lineno=43, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=44, col_offset=8), 'otherword', Store(), lineno=44, col_offset=8)], Str('madagascar', lineno=44, col_offset=25), lineno=44, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=45, col_offset=8), 'letters', Store(), lineno=45, col_offset=8)], Str('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', lineno=45, col_offset=23), lineno=45, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=46, col_offset=8), 's', Store(), lineno=46, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=46, col_offset=17), 'thetype', Load(), lineno=46, col_offset=17), [Name('word', Load(), lineno=46, col_offset=30)], [], None, None, lineno=46, col_offset=17), lineno=46, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=47, col_offset=8), 'd', Store(), lineno=47, col_offset=8)], Call(Attribute(Name('dict', Load(), lineno=47, col_offset=17), 'fromkeys', Load(), lineno=47, col_offset=17), [Name('word', Load(), lineno=47, col_offset=31)], [], None, None, lineno=47, col_offset=17), lineno=47, col_offset=8)], [], lineno=42, col_offset=4), FunctionDef('test_new_or_init', arguments([Name('self', Param(), lineno=49, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=50, col_offset=8), 'assertRaises', Load(), lineno=50, col_offset=8), [Name('TypeError', Load(), lineno=50, col_offset=26), Attribute(Name('self', Load(), lineno=50, col_offset=37), 'thetype', Load(), lineno=50, col_offset=37), List([], Load(), lineno=50, col_offset=51), Num(2, lineno=50, col_offset=55)], [], None, None, lineno=50, col_offset=8), lineno=50, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=51, col_offset=8), 'assertRaises', Load(), lineno=51, col_offset=8), [Name('TypeError', Load(), lineno=51, col_offset=26), Attribute(Call(Name('set', Load(), lineno=51, col_offset=37), [], [], None, None, lineno=51, col_offset=37), '__init__', Load(), lineno=51, col_offset=37)], [keyword('a', Num(1, lineno=51, col_offset=55))], None, None, lineno=51, col_offset=8), lineno=51, col_offset=8)], [], lineno=49, col_offset=4), FunctionDef('test_uniquification', arguments([Name('self', Param(), lineno=53, col_offset=28)], None, None, []), [Assign([Name('actual', Store(), lineno=54, col_offset=8)], Call(Name('sorted', Load(), lineno=54, col_offset=17), [Attribute(Name('self', Load(), lineno=54, col_offset=24), 's', Load(), lineno=54, col_offset=24)], [], None, None, lineno=54, col_offset=17), lineno=54, col_offset=8), Assign([Name('expected', Store(), lineno=55, col_offset=8)], Call(Name('sorted', Load(), lineno=55, col_offset=19), [Attribute(Name('self', Load(), lineno=55, col_offset=26), 'd', Load(), lineno=55, col_offset=26)], [], None, None, lineno=55, col_offset=19), lineno=55, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=56, col_offset=8), 'assertEqual', Load(), lineno=56, col_offset=8), [Name('actual', Load(), lineno=56, col_offset=25), Name('expected', Load(), lineno=56, col_offset=33)], [], None, None, lineno=56, col_offset=8), lineno=56, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=57, col_offset=8), 'assertRaises', Load(), lineno=57, col_offset=8), [Name('PassThru', Load(), lineno=57, col_offset=26), Attribute(Name('self', Load(), lineno=57, col_offset=36), 'thetype', Load(), lineno=57, col_offset=36), Call(Name('check_pass_thru', Load(), lineno=57, col_offset=50), [], [], None, None, lineno=57, col_offset=50)], [], None, None, lineno=57, col_offset=8), lineno=57, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=58, col_offset=8), 'assertRaises', Load(), lineno=58, col_offset=8), [Name('TypeError', Load(), lineno=58, col_offset=26), Attribute(Name('self', Load(), lineno=58, col_offset=37), 'thetype', Load(), lineno=58, col_offset=37), List([List([], Load(), lineno=58, col_offset=52)], Load(), lineno=58, col_offset=51)], [], None, None, lineno=58, col_offset=8), lineno=58, col_offset=8)], [], lineno=53, col_offset=4), FunctionDef('test_len', arguments([Name('self', Param(), lineno=60, col_offset=17)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=61, col_offset=8), 'assertEqual', Load(), lineno=61, col_offset=8), [Call(Name('len', Load(), lineno=61, col_offset=25), [Attribute(Name('self', Load(), lineno=61, col_offset=29), 's', Load(), lineno=61, col_offset=29)], [], None, None, lineno=61, col_offset=25), Call(Name('len', Load(), lineno=61, col_offset=38), [Attribute(Name('self', Load(), lineno=61, col_offset=42), 'd', Load(), lineno=61, col_offset=42)], [], None, None, lineno=61, col_offset=38)], [], None, None, lineno=61, col_offset=8), lineno=61, col_offset=8)], [], lineno=60, col_offset=4), FunctionDef('test_contains', arguments([Name('self', Param(), lineno=63, col_offset=22)], None, None, []), [For(Name('c', Store(), lineno=64, col_offset=12), Attribute(Name('self', Load(), lineno=64, col_offset=17), 'letters', Load(), lineno=64, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=65, col_offset=12), 'assertEqual', Load(), lineno=65, col_offset=12), [Compare(Name('c', Load(), lineno=65, col_offset=29), [In()], [Attribute(Name('self', Load(), lineno=65, col_offset=34), 's', Load(), lineno=65, col_offset=34)], lineno=65, col_offset=29), Compare(Name('c', Load(), lineno=65, col_offset=42), [In()], [Attribute(Name('self', Load(), lineno=65, col_offset=47), 'd', Load(), lineno=65, col_offset=47)], lineno=65, col_offset=42)], [], None, None, lineno=65, col_offset=12), lineno=65, col_offset=12)], [], lineno=64, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=66, col_offset=8), 'assertRaises', Load(), lineno=66, col_offset=8), [Name('TypeError', Load(), lineno=66, col_offset=26), Attribute(Attribute(Name('self', Load(), lineno=66, col_offset=37), 's', Load(), lineno=66, col_offset=37), '__contains__', Load(), lineno=66, col_offset=37), List([List([], Load(), lineno=66, col_offset=59)], Load(), lineno=66, col_offset=58)], [], None, None, lineno=66, col_offset=8), lineno=66, col_offset=8), Assign([Name('s', Store(), lineno=67, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=67, col_offset=12), 'thetype', Load(), lineno=67, col_offset=12), [List([Call(Name('frozenset', Load(), lineno=67, col_offset=26), [Attribute(Name('self', Load(), lineno=67, col_offset=36), 'letters', Load(), lineno=67, col_offset=36)], [], None, None, lineno=67, col_offset=26)], Load(), lineno=67, col_offset=25)], [], None, None, lineno=67, col_offset=12), lineno=67, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=68, col_offset=8), 'assertIn', Load(), lineno=68, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=68, col_offset=22), 'thetype', Load(), lineno=68, col_offset=22), [Attribute(Name('self', Load(), lineno=68, col_offset=35), 'letters', Load(), lineno=68, col_offset=35)], [], None, None, lineno=68, col_offset=22), Name('s', Load(), lineno=68, col_offset=50)], [], None, None, lineno=68, col_offset=8), lineno=68, col_offset=8)], [], lineno=63, col_offset=4), FunctionDef('test_union', arguments([Name('self', Param(), lineno=70, col_offset=19)], None, None, []), [Assign([Name('u', Store(), lineno=71, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=71, col_offset=12), 's', Load(), lineno=71, col_offset=12), 'union', Load(), lineno=71, col_offset=12), [Attribute(Name('self', Load(), lineno=71, col_offset=25), 'otherword', Load(), lineno=71, col_offset=25)], [], None, None, lineno=71, col_offset=12), lineno=71, col_offset=8), For(Name('c', Store(), lineno=72, col_offset=12), Attribute(Name('self', Load(), lineno=72, col_offset=17), 'letters', Load(), lineno=72, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=73, col_offset=12), 'assertEqual', Load(), lineno=73, col_offset=12), [Compare(Name('c', Load(), lineno=73, col_offset=29), [In()], [Name('u', Load(), lineno=73, col_offset=34)], lineno=73, col_offset=29), BoolOp(Or(), [Compare(Name('c', Load(), lineno=73, col_offset=37), [In()], [Attribute(Name('self', Load(), lineno=73, col_offset=42), 'd', Load(), lineno=73, col_offset=42)], lineno=73, col_offset=37), Compare(Name('c', Load(), lineno=73, col_offset=52), [In()], [Attribute(Name('self', Load(), lineno=73, col_offset=57), 'otherword', Load(), lineno=73, col_offset=57)], lineno=73, col_offset=52)], lineno=73, col_offset=37)], [], None, None, lineno=73, col_offset=12), lineno=73, col_offset=12)], [], lineno=72, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=74, col_offset=8), 'assertEqual', Load(), lineno=74, col_offset=8), [Attribute(Name('self', Load(), lineno=74, col_offset=25), 's', Load(), lineno=74, col_offset=25), Call(Attribute(Name('self', Load(), lineno=74, col_offset=33), 'thetype', Load(), lineno=74, col_offset=33), [Attribute(Name('self', Load(), lineno=74, col_offset=46), 'word', Load(), lineno=74, col_offset=46)], [], None, None, lineno=74, col_offset=33)], [], None, None, lineno=74, col_offset=8), lineno=74, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=75, col_offset=8), 'assertEqual', Load(), lineno=75, col_offset=8), [Call(Name('type', Load(), lineno=75, col_offset=25), [Name('u', Load(), lineno=75, col_offset=30)], [], None, None, lineno=75, col_offset=25), Attribute(Name('self', Load(), lineno=75, col_offset=34), 'thetype', Load(), lineno=75, col_offset=34)], [], None, None, lineno=75, col_offset=8), lineno=75, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=76, col_offset=8), 'assertRaises', Load(), lineno=76, col_offset=8), [Name('PassThru', Load(), lineno=76, col_offset=26), Attribute(Attribute(Name('self', Load(), lineno=76, col_offset=36), 's', Load(), lineno=76, col_offset=36), 'union', Load(), lineno=76, col_offset=36), Call(Name('check_pass_thru', Load(), lineno=76, col_offset=50), [], [], None, None, lineno=76, col_offset=50)], [], None, None, lineno=76, col_offset=8), lineno=76, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=77, col_offset=8), 'assertRaises', Load(), lineno=77, col_offset=8), [Name('TypeError', Load(), lineno=77, col_offset=26), Attribute(Attribute(Name('self', Load(), lineno=77, col_offset=37), 's', Load(), lineno=77, col_offset=37), 'union', Load(), lineno=77, col_offset=37), List([List([], Load(), lineno=77, col_offset=52)], Load(), lineno=77, col_offset=51)], [], None, None, lineno=77, col_offset=8), lineno=77, col_offset=8), For(Name('C', Store(), lineno=78, col_offset=12), Tuple([Name('set', Load(), lineno=78, col_offset=17), Name('frozenset', Load(), lineno=78, col_offset=22), Attribute(Name('dict', Load(), lineno=78, col_offset=33), 'fromkeys', Load(), lineno=78, col_offset=33), Name('str', Load(), lineno=78, col_offset=48), Name('unicode', Load(), lineno=78, col_offset=53), Name('list', Load(), lineno=78, col_offset=62), Name('tuple', Load(), lineno=78, col_offset=68)], Load(), lineno=78, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=79, col_offset=12), 'assertEqual', Load(), lineno=79, col_offset=12), [Call(Attribute(Call(Attribute(Name('self', Load(), lineno=79, col_offset=29), 'thetype', Load(), lineno=79, col_offset=29), [Str('abcba', lineno=79, col_offset=42)], [], None, None, lineno=79, col_offset=29), 'union', Load(), lineno=79, col_offset=29), [Call(Name('C', Load(), lineno=79, col_offset=57), [Str('cdc', lineno=79, col_offset=59)], [], None, None, lineno=79, col_offset=57)], [], None, None, lineno=79, col_offset=29), Call(Name('set', Load(), lineno=79, col_offset=68), [Str('abcd', lineno=79, col_offset=72)], [], None, None, lineno=79, col_offset=68)], [], None, None, lineno=79, col_offset=12), lineno=79, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=80, col_offset=12), 'assertEqual', Load(), lineno=80, col_offset=12), [Call(Attribute(Call(Attribute(Name('self', Load(), lineno=80, col_offset=29), 'thetype', Load(), lineno=80, col_offset=29), [Str('abcba', lineno=80, col_offset=42)], [], None, None, lineno=80, col_offset=29), 'union', Load(), lineno=80, col_offset=29), [Call(Name('C', Load(), lineno=80, col_offset=57), [Str('efgfe', lineno=80, col_offset=59)], [], None, None, lineno=80, col_offset=57)], [], None, None, lineno=80, col_offset=29), Call(Name('set', Load(), lineno=80, col_offset=70), [Str('abcefg', lineno=80, col_offset=74)], [], None, None, lineno=80, col_offset=70)], [], None, None, lineno=80, col_offset=12), lineno=80, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=81, col_offset=12), 'assertEqual', Load(), lineno=81, col_offset=12), [Call(Attribute(Call(Attribute(Name('self', Load(), lineno=81, col_offset=29), 'thetype', Load(), lineno=81, col_offset=29), [Str('abcba', lineno=81, col_offset=42)], [], None, None, lineno=81, col_offset=29), 'union', Load(), lineno=81, col_offset=29), [Call(Name('C', Load(), lineno=81, col_offset=57), [Str('ccb', lineno=81, col_offset=59)], [], None, None, lineno=81, col_offset=57)], [], None, None, lineno=81, col_offset=29), Call(Name('set', Load(), lineno=81, col_offset=68), [Str('abc', lineno=81, col_offset=72)], [], None, None, lineno=81, col_offset=68)], [], None, None, lineno=81, col_offset=12), lineno=81, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=82, col_offset=12), 'assertEqual', Load(), lineno=82, col_offset=12), [Call(Attribute(Call(Attribute(Name('self', Load(), lineno=82, col_offset=29), 'thetype', Load(), lineno=82, col_offset=29), [Str('abcba', lineno=82, col_offset=42)], [], None, None, lineno=82, col_offset=29), 'union', Load(), lineno=82, col_offset=29), [Call(Name('C', Load(), lineno=82, col_offset=57), [Str('ef', lineno=82, col_offset=59)], [], None, None, lineno=82, col_offset=57)], [], None, None, lineno=82, col_offset=29), Call(Name('set', Load(), lineno=82, col_offset=67), [Str('abcef', lineno=82, col_offset=71)], [], None, None, lineno=82, col_offset=67)], [], None, None, lineno=82, col_offset=12), lineno=82, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=83, col_offset=12), 'assertEqual', Load(), lineno=83, col_offset=12), [Call(Attribute(Call(Attribute(Name('self', Load(), lineno=83, col_offset=29), 'thetype', Load(), lineno=83, col_offset=29), [Str('abcba', lineno=83, col_offset=42)], [], None, None, lineno=83, col_offset=29), 'union', Load(), lineno=83, col_offset=29), [Call(Name('C', Load(), lineno=83, col_offset=57), [Str('ef', lineno=83, col_offset=59)], [], None, None, lineno=83, col_offset=57), Call(Name('C', Load(), lineno=83, col_offset=66), [Str('fg', lineno=83, col_offset=68)], [], None, None, lineno=83, col_offset=66)], [], None, None, lineno=83, col_offset=29), Call(Name('set', Load(), lineno=83, col_offset=76), [Str('abcefg', lineno=83, col_offset=80)], [], None, None, lineno=83, col_offset=76)], [], None, None, lineno=83, col_offset=12), lineno=83, col_offset=12)], [], lineno=78, col_offset=8), Assign([Name('x', Store(), lineno=86, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=86, col_offset=12), 'thetype', Load(), lineno=86, col_offset=12), [], [], None, None, lineno=86, col_offset=12), lineno=86, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=87, col_offset=8), 'assertEqual', Load(), lineno=87, col_offset=8), [Call(Attribute(Name('x', Load(), lineno=87, col_offset=25), 'union', Load(), lineno=87, col_offset=25), [Call(Name('set', Load(), lineno=87, col_offset=33), [List([Num(1, lineno=87, col_offset=38)], Load(), lineno=87, col_offset=37)], [], None, None, lineno=87, col_offset=33), Name('x', Load(), lineno=87, col_offset=43), Call(Name('set', Load(), lineno=87, col_offset=46), [List([Num(2, lineno=87, col_offset=51)], Load(), lineno=87, col_offset=50)], [], None, None, lineno=87, col_offset=46)], [], None, None, lineno=87, col_offset=25), Call(Attribute(Name('self', Load(), lineno=87, col_offset=57), 'thetype', Load(), lineno=87, col_offset=57), [List([Num(1, lineno=87, col_offset=71), Num(2, lineno=87, col_offset=74)], Load(), lineno=87, col_offset=70)], [], None, None, lineno=87, col_offset=57)], [], None, None, lineno=87, col_offset=8), lineno=87, col_offset=8)], [], lineno=70, col_offset=4), FunctionDef('test_or', arguments([Name('self', Param(), lineno=89, col_offset=16)], None, None, []), [Assign([Name('i', Store(), lineno=90, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=90, col_offset=12), 's', Load(), lineno=90, col_offset=12), 'union', Load(), lineno=90, col_offset=12), [Attribute(Name('self', Load(), lineno=90, col_offset=25), 'otherword', Load(), lineno=90, col_offset=25)], [], None, None, lineno=90, col_offset=12), lineno=90, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=91, col_offset=8), 'assertEqual', Load(), lineno=91, col_offset=8), [BinOp(Attribute(Name('self', Load(), lineno=91, col_offset=25), 's', Load(), lineno=91, col_offset=25), BitOr(), Call(Name('set', Load(), lineno=91, col_offset=34), [Attribute(Name('self', Load(), lineno=91, col_offset=38), 'otherword', Load(), lineno=91, col_offset=38)], [], None, None, lineno=91, col_offset=34), lineno=91, col_offset=25), Name('i', Load(), lineno=91, col_offset=55)], [], None, None, lineno=91, col_offset=8), lineno=91, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=92, col_offset=8), 'assertEqual', Load(), lineno=92, col_offset=8), [BinOp(Attribute(Name('self', Load(), lineno=92, col_offset=25), 's', Load(), lineno=92, col_offset=25), BitOr(), Call(Name('frozenset', Load(), lineno=92, col_offset=34), [Attribute(Name('self', Load(), lineno=92, col_offset=44), 'otherword', Load(), lineno=92, col_offset=44)], [], None, None, lineno=92, col_offset=34), lineno=92, col_offset=25), Name('i', Load(), lineno=92, col_offset=61)], [], None, None, lineno=92, col_offset=8), lineno=92, col_offset=8), TryExcept([Expr(BinOp(Attribute(Name('self', Load(), lineno=94, col_offset=12), 's', Load(), lineno=94, col_offset=12), BitOr(), Attribute(Name('self', Load(), lineno=94, col_offset=21), 'otherword', Load(), lineno=94, col_offset=21), lineno=94, col_offset=12), lineno=94, col_offset=12)], [ExceptHandler(Name('TypeError', Load(), lineno=95, col_offset=15), None, [Pass( lineno=96, col_offset=12)], lineno=95, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=98, col_offset=12), 'fail', Load(), lineno=98, col_offset=12), [Str('s|t did not screen-out general iterables', lineno=98, col_offset=22)], [], None, None, lineno=98, col_offset=12), lineno=98, col_offset=12)], lineno=93, col_offset=8)], [], lineno=89, col_offset=4), FunctionDef('test_intersection', arguments([Name('self', Param(), lineno=100, col_offset=26)], None, None, []), [Assign([Name('i', Store(), lineno=101, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=101, col_offset=12), 's', Load(), lineno=101, col_offset=12), 'intersection', Load(), lineno=101, col_offset=12), [Attribute(Name('self', Load(), lineno=101, col_offset=32), 'otherword', Load(), lineno=101, col_offset=32)], [], None, None, lineno=101, col_offset=12), lineno=101, col_offset=8), For(Name('c', Store(), lineno=102, col_offset=12), Attribute(Name('self', Load(), lineno=102, col_offset=17), 'letters', Load(), lineno=102, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=103, col_offset=12), 'assertEqual', Load(), lineno=103, col_offset=12), [Compare(Name('c', Load(), lineno=103, col_offset=29), [In()], [Name('i', Load(), lineno=103, col_offset=34)], lineno=103, col_offset=29), BoolOp(And(), [Compare(Name('c', Load(), lineno=103, col_offset=37), [In()], [Attribute(Name('self', Load(), lineno=103, col_offset=42), 'd', Load(), lineno=103, col_offset=42)], lineno=103, col_offset=37), Compare(Name('c', Load(), lineno=103, col_offset=53), [In()], [Attribute(Name('self', Load(), lineno=103, col_offset=58), 'otherword', Load(), lineno=103, col_offset=58)], lineno=103, col_offset=53)], lineno=103, col_offset=37)], [], None, None, lineno=103, col_offset=12), lineno=103, col_offset=12)], [], lineno=102, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=104, col_offset=8), 'assertEqual', Load(), lineno=104, col_offset=8), [Attribute(Name('self', Load(), lineno=104, col_offset=25), 's', Load(), lineno=104, col_offset=25), Call(Attribute(Name('self', Load(), lineno=104, col_offset=33), 'thetype', Load(), lineno=104, col_offset=33), [Attribute(Name('self', Load(), lineno=104, col_offset=46), 'word', Load(), lineno=104, col_offset=46)], [], None, None, lineno=104, col_offset=33)], [], None, None, lineno=104, col_offset=8), lineno=104, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=105, col_offset=8), 'assertEqual', Load(), lineno=105, col_offset=8), [Call(Name('type', Load(), lineno=105, col_offset=25), [Name('i', Load(), lineno=105, col_offset=30)], [], None, None, lineno=105, col_offset=25), Attribute(Name('self', Load(), lineno=105, col_offset=34), 'thetype', Load(), lineno=105, col_offset=34)], [], None, None, lineno=105, col_offset=8), lineno=105, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=106, col_offset=8), 'assertRaises', Load(), lineno=106, col_offset=8), [Name('PassThru', Load(), lineno=106, col_offset=26), Attribute(Attribute(Name('self', Load(), lineno=106, col_offset=36), 's', Load(), lineno=106, col_offset=36), 'intersection', Load(), lineno=106, col_offset=36), Call(Name('check_pass_thru', Load(), lineno=106, col_offset=57), [], [], None, None, lineno=106, col_offset=57)], [], None, None, lineno=106, col_offset=8), lineno=106, col_offset=8), For(Name('C', Store(), lineno=107, col_offset=12), Tuple([Name('set', Load(), lineno=107, col_offset=17), Name('frozenset', Load(), lineno=107, col_offset=22), Attribute(Name('dict', Load(), lineno=107, col_offset=33), 'fromkeys', Load(), lineno=107, col_offset=33), Name('str', Load(), lineno=107, col_offset=48), Name('unicode', Load(), lineno=107, col_offset=53), Name('list', Load(), lineno=107, col_offset=62), Name('tuple', Load(), lineno=107, col_offset=68)], Load(), lineno=107, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=108, col_offset=12), 'assertEqual', Load(), lineno=108, col_offset=12), [Call(Attribute(Call(Attribute(Name('self', Load(), lineno=108, col_offset=29), 'thetype', Load(), lineno=108, col_offset=29), [Str('abcba', lineno=108, col_offset=42)], [], None, None, lineno=108, col_offset=29), 'intersection', Load(), lineno=108, col_offset=29), [Call(Name('C', Load(), lineno=108, col_offset=64), [Str('cdc', lineno=108, col_offset=66)], [], None, None, lineno=108, col_offset=64)], [], None, None, lineno=108, col_offset=29), Call(Name('set', Load(), lineno=108, col_offset=75), [Str('cc', lineno=108, col_offset=79)], [], None, None, lineno=108, col_offset=75)], [], None, None, lineno=108, col_offset=12), lineno=108, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=109, col_offset=12), 'assertEqual', Load(), lineno=109, col_offset=12), [Call(Attribute(Call(Attribute(Name('self', Load(), lineno=109, col_offset=29), 'thetype', Load(), lineno=109, col_offset=29), [Str('abcba', lineno=109, col_offset=42)], [], None, None, lineno=109, col_offset=29), 'intersection', Load(), lineno=109, col_offset=29), [Call(Name('C', Load(), lineno=109, col_offset=64), [Str('efgfe', lineno=109, col_offset=66)], [], None, None, lineno=109, col_offset=64)], [], None, None, lineno=109, col_offset=29), Call(Name('set', Load(), lineno=109, col_offset=77), [Str('', lineno=109, col_offset=81)], [], None, None, lineno=109, col_offset=77)], [], None, None, lineno=109, col_offset=12), lineno=109, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=110, col_offset=12), 'assertEqual', Load(), lineno=110, col_offset=12), [Call(Attribute(Call(Attribute(Name('self', Load(), lineno=110, col_offset=29), 'thetype', Load(), lineno=110, col_offset=29), [Str('abcba', lineno=110, col_offset=42)], [], None, None, lineno=110, col_offset=29), 'intersection', Load(), lineno=110, col_offset=29), [Call(Name('C', Load(), lineno=110, col_offset=64), [Str('ccb', lineno=110, col_offset=66)], [], None, None, lineno=110, col_offset=64)], [], None, None, lineno=110, col_offset=29), Call(Name('set', Load(), lineno=110, col_offset=75), [Str('bc', lineno=110, col_offset=79)], [], None, None, lineno=110, col_offset=75)], [], None, None, lineno=110, col_offset=12), lineno=110, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=111, col_offset=12), 'assertEqual', Load(), lineno=111, col_offset=12), [Call(Attribute(Call(Attribute(Name('self', Load(), lineno=111, col_offset=29), 'thetype', Load(), lineno=111, col_offset=29), [Str('abcba', lineno=111, col_offset=42)], [], None, None, lineno=111, col_offset=29), 'intersection', Load(), lineno=111, col_offset=29), [Call(Name('C', Load(), lineno=111, col_offset=64), [Str('ef', lineno=111, col_offset=66)], [], None, None, lineno=111, col_offset=64)], [], None, None, lineno=111, col_offset=29), Call(Name('set', Load(), lineno=111, col_offset=74), [Str('', lineno=111, col_offset=78)], [], None, None, lineno=111, col_offset=74)], [], None, None, lineno=111, col_offset=12), lineno=111, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=112, col_offset=12), 'assertEqual', Load(), lineno=112, col_offset=12), [Call(Attribute(Call(Attribute(Name('self', Load(), lineno=112, col_offset=29), 'thetype', Load(), lineno=112, col_offset=29), [Str('abcba', lineno=112, col_offset=42)], [], None, None, lineno=112, col_offset=29), 'intersection', Load(), lineno=112, col_offset=29), [Call(Name('C', Load(), lineno=112, col_offset=64), [Str('cbcf', lineno=112, col_offset=66)], [], None, None, lineno=112, col_offset=64), Call(Name('C', Load(), lineno=112, col_offset=75), [Str('bag', lineno=112, col_offset=77)], [], None, None, lineno=112, col_offset=75)], [], None, None, lineno=112, col_offset=29), Call(Name('set', Load(), lineno=112, col_offset=86), [Str('b', lineno=112, col_offset=90)], [], None, None, lineno=112, col_offset=86)], [], None, None, lineno=112, col_offset=12), lineno=112, col_offset=12)], [], lineno=107, col_offset=8), Assign([Name('s', Store(), lineno=113, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=113, col_offset=12), 'thetype', Load(), lineno=113, col_offset=12), [Str('abcba', lineno=113, col_offset=25)], [], None, None, lineno=113, col_offset=12), lineno=113, col_offset=8), Assign([Name('z', Store(), lineno=114, col_offset=8)], Call(Attribute(Name('s', Load(), lineno=114, col_offset=12), 'intersection', Load(), lineno=114, col_offset=12), [], [], None, None, lineno=114, col_offset=12), lineno=114, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=115, col_offset=11), 'thetype', Load(), lineno=115, col_offset=11), [Eq()], [Call(Name('frozenset', Load(), lineno=115, col_offset=27), [], [], None, None, lineno=115, col_offset=27)], lineno=115, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=116, col_offset=12), 'assertEqual', Load(), lineno=116, col_offset=12), [Call(Name('id', Load(), lineno=116, col_offset=29), [Name('s', Load(), lineno=116, col_offset=32)], [], None, None, lineno=116, col_offset=29), Call(Name('id', Load(), lineno=116, col_offset=36), [Name('z', Load(), lineno=116, col_offset=39)], [], None, None, lineno=116, col_offset=36)], [], None, None, lineno=116, col_offset=12), lineno=116, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=118, col_offset=12), 'assertNotEqual', Load(), lineno=118, col_offset=12), [Call(Name('id', Load(), lineno=118, col_offset=32), [Name('s', Load(), lineno=118, col_offset=35)], [], None, None, lineno=118, col_offset=32), Call(Name('id', Load(), lineno=118, col_offset=39), [Name('z', Load(), lineno=118, col_offset=42)], [], None, None, lineno=118, col_offset=39)], [], None, None, lineno=118, col_offset=12), lineno=118, col_offset=12)], lineno=115, col_offset=8)], [], lineno=100, col_offset=4), FunctionDef('test_isdisjoint', arguments([Name('self', Param(), lineno=120, col_offset=24)], None, None, []), [FunctionDef('f', arguments([Name('s1', Param(), lineno=121, col_offset=14), Name('s2', Param(), lineno=121, col_offset=18)], None, None, []), [Expr(Str('Pure python equivalent of isdisjoint()', lineno=122, col_offset=12), lineno=122, col_offset=12), Return(UnaryOp(Not(), Call(Attribute(Call(Name('set', Load(), lineno=123, col_offset=23), [Name('s1', Load(), lineno=123, col_offset=27)], [], None, None, lineno=123, col_offset=23), 'intersection', Load(), lineno=123, col_offset=23), [Name('s2', Load(), lineno=123, col_offset=44)], [], None, None, lineno=123, col_offset=23), lineno=123, col_offset=19), lineno=123, col_offset=12)], [], lineno=121, col_offset=8), For(Name('larg', Store(), lineno=124, col_offset=12), Tuple([Str('', lineno=124, col_offset=20), Str('a', lineno=124, col_offset=24), Str('ab', lineno=124, col_offset=29), Str('abc', lineno=124, col_offset=35), Str('ababac', lineno=124, col_offset=42), Str('cdc', lineno=124, col_offset=52), Str('cc', lineno=124, col_offset=59), Str('efgfe', lineno=124, col_offset=65), Str('ccb', lineno=124, col_offset=74), Str('ef', lineno=124, col_offset=81)], Load(), lineno=124, col_offset=20), [Assign([Name('s1', Store(), lineno=125, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=125, col_offset=17), 'thetype', Load(), lineno=125, col_offset=17), [Name('larg', Load(), lineno=125, col_offset=30)], [], None, None, lineno=125, col_offset=17), lineno=125, col_offset=12), For(Name('rarg', Store(), lineno=126, col_offset=16), Tuple([Str('', lineno=126, col_offset=24), Str('a', lineno=126, col_offset=28), Str('ab', lineno=126, col_offset=33), Str('abc', lineno=126, col_offset=39), Str('ababac', lineno=126, col_offset=46), Str('cdc', lineno=126, col_offset=56), Str('cc', lineno=126, col_offset=63), Str('efgfe', lineno=126, col_offset=69), Str('ccb', lineno=126, col_offset=78), Str('ef', lineno=126, col_offset=85)], Load(), lineno=126, col_offset=24), [For(Name('C', Store(), lineno=127, col_offset=20), Tuple([Name('set', Load(), lineno=127, col_offset=25), Name('frozenset', Load(), lineno=127, col_offset=30), Attribute(Name('dict', Load(), lineno=127, col_offset=41), 'fromkeys', Load(), lineno=127, col_offset=41), Name('str', Load(), lineno=127, col_offset=56), Name('unicode', Load(), lineno=127, col_offset=61), Name('list', Load(), lineno=127, col_offset=70), Name('tuple', Load(), lineno=127, col_offset=76)], Load(), lineno=127, col_offset=25), [Assign([Name('s2', Store(), lineno=128, col_offset=20)], Call(Name('C', Load(), lineno=128, col_offset=25), [Name('rarg', Load(), lineno=128, col_offset=27)], [], None, None, lineno=128, col_offset=25), lineno=128, col_offset=20), Assign([Name('actual', Store(), lineno=129, col_offset=20)], Call(Attribute(Name('s1', Load(), lineno=129, col_offset=29), 'isdisjoint', Load(), lineno=129, col_offset=29), [Name('s2', Load(), lineno=129, col_offset=43)], [], None, None, lineno=129, col_offset=29), lineno=129, col_offset=20), Assign([Name('expected', Store(), lineno=130, col_offset=20)], Call(Name('f', Load(), lineno=130, col_offset=31), [Name('s1', Load(), lineno=130, col_offset=33), Name('s2', Load(), lineno=130, col_offset=37)], [], None, None, lineno=130, col_offset=31), lineno=130, col_offset=20), Expr(Call(Attribute(Name('self', Load(), lineno=131, col_offset=20), 'assertEqual', Load(), lineno=131, col_offset=20), [Name('actual', Load(), lineno=131, col_offset=37), Name('expected', Load(), lineno=131, col_offset=45)], [], None, None, lineno=131, col_offset=20), lineno=131, col_offset=20), Expr(Call(Attribute(Name('self', Load(), lineno=132, col_offset=20), 'assertTrue', Load(), lineno=132, col_offset=20), [BoolOp(Or(), [Compare(Name('actual', Load(), lineno=132, col_offset=36), [Is()], [Name('True', Load(), lineno=132, col_offset=46)], lineno=132, col_offset=36), Compare(Name('actual', Load(), lineno=132, col_offset=54), [Is()], [Name('False', Load(), lineno=132, col_offset=64)], lineno=132, col_offset=54)], lineno=132, col_offset=36)], [], None, None, lineno=132, col_offset=20), lineno=132, col_offset=20)], [], lineno=127, col_offset=16)], [], lineno=126, col_offset=12)], [], lineno=124, col_offset=8)], [], lineno=120, col_offset=4), FunctionDef('test_and', arguments([Name('self', Param(), lineno=134, col_offset=17)], None, None, []), [Assign([Name('i', Store(), lineno=135, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=135, col_offset=12), 's', Load(), lineno=135, col_offset=12), 'intersection', Load(), lineno=135, col_offset=12), [Attribute(Name('self', Load(), lineno=135, col_offset=32), 'otherword', Load(), lineno=135, col_offset=32)], [], None, None, lineno=135, col_offset=12), lineno=135, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=136, col_offset=8), 'assertEqual', Load(), lineno=136, col_offset=8), [BinOp(Attribute(Name('self', Load(), lineno=136, col_offset=25), 's', Load(), lineno=136, col_offset=25), BitAnd(), Call(Name('set', Load(), lineno=136, col_offset=34), [Attribute(Name('self', Load(), lineno=136, col_offset=38), 'otherword', Load(), lineno=136, col_offset=38)], [], None, None, lineno=136, col_offset=34), lineno=136, col_offset=25), Name('i', Load(), lineno=136, col_offset=55)], [], None, None, lineno=136, col_offset=8), lineno=136, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=137, col_offset=8), 'assertEqual', Load(), lineno=137, col_offset=8), [BinOp(Attribute(Name('self', Load(), lineno=137, col_offset=25), 's', Load(), lineno=137, col_offset=25), BitAnd(), Call(Name('frozenset', Load(), lineno=137, col_offset=34), [Attribute(Name('self', Load(), lineno=137, col_offset=44), 'otherword', Load(), lineno=137, col_offset=44)], [], None, None, lineno=137, col_offset=34), lineno=137, col_offset=25), Name('i', Load(), lineno=137, col_offset=61)], [], None, None, lineno=137, col_offset=8), lineno=137, col_offset=8), TryExcept([Expr(BinOp(Attribute(Name('self', Load(), lineno=139, col_offset=12), 's', Load(), lineno=139, col_offset=12), BitAnd(), Attribute(Name('self', Load(), lineno=139, col_offset=21), 'otherword', Load(), lineno=139, col_offset=21), lineno=139, col_offset=12), lineno=139, col_offset=12)], [ExceptHandler(Name('TypeError', Load(), lineno=140, col_offset=15), None, [Pass( lineno=141, col_offset=12)], lineno=140, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=143, col_offset=12), 'fail', Load(), lineno=143, col_offset=12), [Str('s&t did not screen-out general iterables', lineno=143, col_offset=22)], [], None, None, lineno=143, col_offset=12), lineno=143, col_offset=12)], lineno=138, col_offset=8)], [], lineno=134, col_offset=4), FunctionDef('test_difference', arguments([Name('self', Param(), lineno=145, col_offset=24)], None, None, []), [Assign([Name('i', Store(), lineno=146, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=146, col_offset=12), 's', Load(), lineno=146, col_offset=12), 'difference', Load(), lineno=146, col_offset=12), [Attribute(Name('self', Load(), lineno=146, col_offset=30), 'otherword', Load(), lineno=146, col_offset=30)], [], None, None, lineno=146, col_offset=12), lineno=146, col_offset=8), For(Name('c', Store(), lineno=147, col_offset=12), Attribute(Name('self', Load(), lineno=147, col_offset=17), 'letters', Load(), lineno=147, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=148, col_offset=12), 'assertEqual', Load(), lineno=148, col_offset=12), [Compare(Name('c', Load(), lineno=148, col_offset=29), [In()], [Name('i', Load(), lineno=148, col_offset=34)], lineno=148, col_offset=29), BoolOp(And(), [Compare(Name('c', Load(), lineno=148, col_offset=37), [In()], [Attribute(Name('self', Load(), lineno=148, col_offset=42), 'd', Load(), lineno=148, col_offset=42)], lineno=148, col_offset=37), Compare(Name('c', Load(), lineno=148, col_offset=53), [NotIn()], [Attribute(Name('self', Load(), lineno=148, col_offset=62), 'otherword', Load(), lineno=148, col_offset=62)], lineno=148, col_offset=53)], lineno=148, col_offset=37)], [], None, None, lineno=148, col_offset=12), lineno=148, col_offset=12)], [], lineno=147, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=149, col_offset=8), 'assertEqual', Load(), lineno=149, col_offset=8), [Attribute(Name('self', Load(), lineno=149, col_offset=25), 's', Load(), lineno=149, col_offset=25), Call(Attribute(Name('self', Load(), lineno=149, col_offset=33), 'thetype', Load(), lineno=149, col_offset=33), [Attribute(Name('self', Load(), lineno=149, col_offset=46), 'word', Load(), lineno=149, col_offset=46)], [], None, None, lineno=149, col_offset=33)], [], None, None, lineno=149, col_offset=8), lineno=149, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=150, col_offset=8), 'assertEqual', Load(), lineno=150, col_offset=8), [Call(Name('type', Load(), lineno=150, col_offset=25), [Name('i', Load(), lineno=150, col_offset=30)], [], None, None, lineno=150, col_offset=25), Attribute(Name('self', Load(), lineno=150, col_offset=34), 'thetype', Load(), lineno=150, col_offset=34)], [], None, None, lineno=150, col_offset=8), lineno=150, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=151, col_offset=8), 'assertRaises', Load(), lineno=151, col_offset=8), [Name('PassThru', Load(), lineno=151, col_offset=26), Attribute(Attribute(Name('self', Load(), lineno=151, col_offset=36), 's', Load(), lineno=151, col_offset=36), 'difference', Load(), lineno=151, col_offset=36), Call(Name('check_pass_thru', Load(), lineno=151, col_offset=55), [], [], None, None, lineno=151, col_offset=55)], [], None, None, lineno=151, col_offset=8), lineno=151, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=152, col_offset=8), 'assertRaises', Load(), lineno=152, col_offset=8), [Name('TypeError', Load(), lineno=152, col_offset=26), Attribute(Attribute(Name('self', Load(), lineno=152, col_offset=37), 's', Load(), lineno=152, col_offset=37), 'difference', Load(), lineno=152, col_offset=37), List([List([], Load(), lineno=152, col_offset=57)], Load(), lineno=152, col_offset=56)], [], None, None, lineno=152, col_offset=8), lineno=152, col_offset=8), For(Name('C', Store(), lineno=153, col_offset=12), Tuple([Name('set', Load(), lineno=153, col_offset=17), Name('frozenset', Load(), lineno=153, col_offset=22), Attribute(Name('dict', Load(), lineno=153, col_offset=33), 'fromkeys', Load(), lineno=153, col_offset=33), Name('str', Load(), lineno=153, col_offset=48), Name('unicode', Load(), lineno=153, col_offset=53), Name('list', Load(), lineno=153, col_offset=62), Name('tuple', Load(), lineno=153, col_offset=68)], Load(), lineno=153, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=154, col_offset=12), 'assertEqual', Load(), lineno=154, col_offset=12), [Call(Attribute(Call(Attribute(Name('self', Load(), lineno=154, col_offset=29), 'thetype', Load(), lineno=154, col_offset=29), [Str('abcba', lineno=154, col_offset=42)], [], None, None, lineno=154, col_offset=29), 'difference', Load(), lineno=154, col_offset=29), [Call(Name('C', Load(), lineno=154, col_offset=62), [Str('cdc', lineno=154, col_offset=64)], [], None, None, lineno=154, col_offset=62)], [], None, None, lineno=154, col_offset=29), Call(Name('set', Load(), lineno=154, col_offset=73), [Str('ab', lineno=154, col_offset=77)], [], None, None, lineno=154, col_offset=73)], [], None, None, lineno=154, col_offset=12), lineno=154, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=155, col_offset=12), 'assertEqual', Load(), lineno=155, col_offset=12), [Call(Attribute(Call(Attribute(Name('self', Load(), lineno=155, col_offset=29), 'thetype', Load(), lineno=155, col_offset=29), [Str('abcba', lineno=155, col_offset=42)], [], None, None, lineno=155, col_offset=29), 'difference', Load(), lineno=155, col_offset=29), [Call(Name('C', Load(), lineno=155, col_offset=62), [Str('efgfe', lineno=155, col_offset=64)], [], None, None, lineno=155, col_offset=62)], [], None, None, lineno=155, col_offset=29), Call(Name('set', Load(), lineno=155, col_offset=75), [Str('abc', lineno=155, col_offset=79)], [], None, None, lineno=155, col_offset=75)], [], None, None, lineno=155, col_offset=12), lineno=155, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=156, col_offset=12), 'assertEqual', Load(), lineno=156, col_offset=12), [Call(Attribute(Call(Attribute(Name('self', Load(), lineno=156, col_offset=29), 'thetype', Load(), lineno=156, col_offset=29), [Str('abcba', lineno=156, col_offset=42)], [], None, None, lineno=156, col_offset=29), 'difference', Load(), lineno=156, col_offset=29), [Call(Name('C', Load(), lineno=156, col_offset=62), [Str('ccb', lineno=156, col_offset=64)], [], None, None, lineno=156, col_offset=62)], [], None, None, lineno=156, col_offset=29), Call(Name('set', Load(), lineno=156, col_offset=73), [Str('a', lineno=156, col_offset=77)], [], None, None, lineno=156, col_offset=73)], [], None, None, lineno=156, col_offset=12), lineno=156, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=157, col_offset=12), 'assertEqual', Load(), lineno=157, col_offset=12), [Call(Attribute(Call(Attribute(Name('self', Load(), lineno=157, col_offset=29), 'thetype', Load(), lineno=157, col_offset=29), [Str('abcba', lineno=157, col_offset=42)], [], None, None, lineno=157, col_offset=29), 'difference', Load(), lineno=157, col_offset=29), [Call(Name('C', Load(), lineno=157, col_offset=62), [Str('ef', lineno=157, col_offset=64)], [], None, None, lineno=157, col_offset=62)], [], None, None, lineno=157, col_offset=29), Call(Name('set', Load(), lineno=157, col_offset=72), [Str('abc', lineno=157, col_offset=76)], [], None, None, lineno=157, col_offset=72)], [], None, None, lineno=157, col_offset=12), lineno=157, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=158, col_offset=12), 'assertEqual', Load(), lineno=158, col_offset=12), [Call(Attribute(Call(Attribute(Name('self', Load(), lineno=158, col_offset=29), 'thetype', Load(), lineno=158, col_offset=29), [Str('abcba', lineno=158, col_offset=42)], [], None, None, lineno=158, col_offset=29), 'difference', Load(), lineno=158, col_offset=29), [], [], None, None, lineno=158, col_offset=29), Call(Name('set', Load(), lineno=158, col_offset=65), [Str('abc', lineno=158, col_offset=69)], [], None, None, lineno=158, col_offset=65)], [], None, None, lineno=158, col_offset=12), lineno=158, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=159, col_offset=12), 'assertEqual', Load(), lineno=159, col_offset=12), [Call(Attribute(Call(Attribute(Name('self', Load(), lineno=159, col_offset=29), 'thetype', Load(), lineno=159, col_offset=29), [Str('abcba', lineno=159, col_offset=42)], [], None, None, lineno=159, col_offset=29), 'difference', Load(), lineno=159, col_offset=29), [Call(Name('C', Load(), lineno=159, col_offset=62), [Str('a', lineno=159, col_offset=64)], [], None, None, lineno=159, col_offset=62), Call(Name('C', Load(), lineno=159, col_offset=70), [Str('b', lineno=159, col_offset=72)], [], None, None, lineno=159, col_offset=70)], [], None, None, lineno=159, col_offset=29), Call(Name('set', Load(), lineno=159, col_offset=79), [Str('c', lineno=159, col_offset=83)], [], None, None, lineno=159, col_offset=79)], [], None, None, lineno=159, col_offset=12), lineno=159, col_offset=12)], [], lineno=153, col_offset=8)], [], lineno=145, col_offset=4), FunctionDef('test_sub', arguments([Name('self', Param(), lineno=161, col_offset=17)], None, None, []), [Assign([Name('i', Store(), lineno=162, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=162, col_offset=12), 's', Load(), lineno=162, col_offset=12), 'difference', Load(), lineno=162, col_offset=12), [Attribute(Name('self', Load(), lineno=162, col_offset=30), 'otherword', Load(), lineno=162, col_offset=30)], [], None, None, lineno=162, col_offset=12), lineno=162, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=163, col_offset=8), 'assertEqual', Load(), lineno=163, col_offset=8), [BinOp(Attribute(Name('self', Load(), lineno=163, col_offset=25), 's', Load(), lineno=163, col_offset=25), Sub(), Call(Name('set', Load(), lineno=163, col_offset=34), [Attribute(Name('self', Load(), lineno=163, col_offset=38), 'otherword', Load(), lineno=163, col_offset=38)], [], None, None, lineno=163, col_offset=34), lineno=163, col_offset=25), Name('i', Load(), lineno=163, col_offset=55)], [], None, None, lineno=163, col_offset=8), lineno=163, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=164, col_offset=8), 'assertEqual', Load(), lineno=164, col_offset=8), [BinOp(Attribute(Name('self', Load(), lineno=164, col_offset=25), 's', Load(), lineno=164, col_offset=25), Sub(), Call(Name('frozenset', Load(), lineno=164, col_offset=34), [Attribute(Name('self', Load(), lineno=164, col_offset=44), 'otherword', Load(), lineno=164, col_offset=44)], [], None, None, lineno=164, col_offset=34), lineno=164, col_offset=25), Name('i', Load(), lineno=164, col_offset=61)], [], None, None, lineno=164, col_offset=8), lineno=164, col_offset=8), TryExcept([Expr(BinOp(Attribute(Name('self', Load(), lineno=166, col_offset=12), 's', Load(), lineno=166, col_offset=12), Sub(), Attribute(Name('self', Load(), lineno=166, col_offset=21), 'otherword', Load(), lineno=166, col_offset=21), lineno=166, col_offset=12), lineno=166, col_offset=12)], [ExceptHandler(Name('TypeError', Load(), lineno=167, col_offset=15), None, [Pass( lineno=168, col_offset=12)], lineno=167, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=170, col_offset=12), 'fail', Load(), lineno=170, col_offset=12), [Str('s-t did not screen-out general iterables', lineno=170, col_offset=22)], [], None, None, lineno=170, col_offset=12), lineno=170, col_offset=12)], lineno=165, col_offset=8)], [], lineno=161, col_offset=4), FunctionDef('test_symmetric_difference', arguments([Name('self', Param(), lineno=172, col_offset=34)], None, None, []), [Assign([Name('i', Store(), lineno=173, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=173, col_offset=12), 's', Load(), lineno=173, col_offset=12), 'symmetric_difference', Load(), lineno=173, col_offset=12), [Attribute(Name('self', Load(), lineno=173, col_offset=40), 'otherword', Load(), lineno=173, col_offset=40)], [], None, None, lineno=173, col_offset=12), lineno=173, col_offset=8), For(Name('c', Store(), lineno=174, col_offset=12), Attribute(Name('self', Load(), lineno=174, col_offset=17), 'letters', Load(), lineno=174, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=175, col_offset=12), 'assertEqual', Load(), lineno=175, col_offset=12), [Compare(Name('c', Load(), lineno=175, col_offset=29), [In()], [Name('i', Load(), lineno=175, col_offset=34)], lineno=175, col_offset=29), BinOp(Compare(Name('c', Load(), lineno=175, col_offset=38), [In()], [Attribute(Name('self', Load(), lineno=175, col_offset=43), 'd', Load(), lineno=175, col_offset=43)], lineno=175, col_offset=38), BitXor(), Compare(Name('c', Load(), lineno=175, col_offset=54), [In()], [Attribute(Name('self', Load(), lineno=175, col_offset=59), 'otherword', Load(), lineno=175, col_offset=59)], lineno=175, col_offset=54), lineno=175, col_offset=37)], [], None, None, lineno=175, col_offset=12), lineno=175, col_offset=12)], [], lineno=174, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=176, col_offset=8), 'assertEqual', Load(), lineno=176, col_offset=8), [Attribute(Name('self', Load(), lineno=176, col_offset=25), 's', Load(), lineno=176, col_offset=25), Call(Attribute(Name('self', Load(), lineno=176, col_offset=33), 'thetype', Load(), lineno=176, col_offset=33), [Attribute(Name('self', Load(), lineno=176, col_offset=46), 'word', Load(), lineno=176, col_offset=46)], [], None, None, lineno=176, col_offset=33)], [], None, None, lineno=176, col_offset=8), lineno=176, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=177, col_offset=8), 'assertEqual', Load(), lineno=177, col_offset=8), [Call(Name('type', Load(), lineno=177, col_offset=25), [Name('i', Load(), lineno=177, col_offset=30)], [], None, None, lineno=177, col_offset=25), Attribute(Name('self', Load(), lineno=177, col_offset=34), 'thetype', Load(), lineno=177, col_offset=34)], [], None, None, lineno=177, col_offset=8), lineno=177, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=178, col_offset=8), 'assertRaises', Load(), lineno=178, col_offset=8), [Name('PassThru', Load(), lineno=178, col_offset=26), Attribute(Attribute(Name('self', Load(), lineno=178, col_offset=36), 's', Load(), lineno=178, col_offset=36), 'symmetric_difference', Load(), lineno=178, col_offset=36), Call(Name('check_pass_thru', Load(), lineno=178, col_offset=65), [], [], None, None, lineno=178, col_offset=65)], [], None, None, lineno=178, col_offset=8), lineno=178, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=179, col_offset=8), 'assertRaises', Load(), lineno=179, col_offset=8), [Name('TypeError', Load(), lineno=179, col_offset=26), Attribute(Attribute(Name('self', Load(), lineno=179, col_offset=37), 's', Load(), lineno=179, col_offset=37), 'symmetric_difference', Load(), lineno=179, col_offset=37), List([List([], Load(), lineno=179, col_offset=67)], Load(), lineno=179, col_offset=66)], [], None, None, lineno=179, col_offset=8), lineno=179, col_offset=8), For(Name('C', Store(), lineno=180, col_offset=12), Tuple([Name('set', Load(), lineno=180, col_offset=17), Name('frozenset', Load(), lineno=180, col_offset=22), Attribute(Name('dict', Load(), lineno=180, col_offset=33), 'fromkeys', Load(), lineno=180, col_offset=33), Name('str', Load(), lineno=180, col_offset=48), Name('unicode', Load(), lineno=180, col_offset=53), Name('list', Load(), lineno=180, col_offset=62), Name('tuple', Load(), lineno=180, col_offset=68)], Load(), lineno=180, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=181, col_offset=12), 'assertEqual', Load(), lineno=181, col_offset=12), [Call(Attribute(Call(Attribute(Name('self', Load(), lineno=181, col_offset=29), 'thetype', Load(), lineno=181, col_offset=29), [Str('abcba', lineno=181, col_offset=42)], [], None, None, lineno=181, col_offset=29), 'symmetric_difference', Load(), lineno=181, col_offset=29), [Call(Name('C', Load(), lineno=181, col_offset=72), [Str('cdc', lineno=181, col_offset=74)], [], None, None, lineno=181, col_offset=72)], [], None, None, lineno=181, col_offset=29), Call(Name('set', Load(), lineno=181, col_offset=83), [Str('abd', lineno=181, col_offset=87)], [], None, None, lineno=181, col_offset=83)], [], None, None, lineno=181, col_offset=12), lineno=181, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=182, col_offset=12), 'assertEqual', Load(), lineno=182, col_offset=12), [Call(Attribute(Call(Attribute(Name('self', Load(), lineno=182, col_offset=29), 'thetype', Load(), lineno=182, col_offset=29), [Str('abcba', lineno=182, col_offset=42)], [], None, None, lineno=182, col_offset=29), 'symmetric_difference', Load(), lineno=182, col_offset=29), [Call(Name('C', Load(), lineno=182, col_offset=72), [Str('efgfe', lineno=182, col_offset=74)], [], None, None, lineno=182, col_offset=72)], [], None, None, lineno=182, col_offset=29), Call(Name('set', Load(), lineno=182, col_offset=85), [Str('abcefg', lineno=182, col_offset=89)], [], None, None, lineno=182, col_offset=85)], [], None, None, lineno=182, col_offset=12), lineno=182, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=183, col_offset=12), 'assertEqual', Load(), lineno=183, col_offset=12), [Call(Attribute(Call(Attribute(Name('self', Load(), lineno=183, col_offset=29), 'thetype', Load(), lineno=183, col_offset=29), [Str('abcba', lineno=183, col_offset=42)], [], None, None, lineno=183, col_offset=29), 'symmetric_difference', Load(), lineno=183, col_offset=29), [Call(Name('C', Load(), lineno=183, col_offset=72), [Str('ccb', lineno=183, col_offset=74)], [], None, None, lineno=183, col_offset=72)], [], None, None, lineno=183, col_offset=29), Call(Name('set', Load(), lineno=183, col_offset=83), [Str('a', lineno=183, col_offset=87)], [], None, None, lineno=183, col_offset=83)], [], None, None, lineno=183, col_offset=12), lineno=183, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=184, col_offset=12), 'assertEqual', Load(), lineno=184, col_offset=12), [Call(Attribute(Call(Attribute(Name('self', Load(), lineno=184, col_offset=29), 'thetype', Load(), lineno=184, col_offset=29), [Str('abcba', lineno=184, col_offset=42)], [], None, None, lineno=184, col_offset=29), 'symmetric_difference', Load(), lineno=184, col_offset=29), [Call(Name('C', Load(), lineno=184, col_offset=72), [Str('ef', lineno=184, col_offset=74)], [], None, None, lineno=184, col_offset=72)], [], None, None, lineno=184, col_offset=29), Call(Name('set', Load(), lineno=184, col_offset=82), [Str('abcef', lineno=184, col_offset=86)], [], None, None, lineno=184, col_offset=82)], [], None, None, lineno=184, col_offset=12), lineno=184, col_offset=12)], [], lineno=180, col_offset=8)], [], lineno=172, col_offset=4), FunctionDef('test_xor', arguments([Name('self', Param(), lineno=186, col_offset=17)], None, None, []), [Assign([Name('i', Store(), lineno=187, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=187, col_offset=12), 's', Load(), lineno=187, col_offset=12), 'symmetric_difference', Load(), lineno=187, col_offset=12), [Attribute(Name('self', Load(), lineno=187, col_offset=40), 'otherword', Load(), lineno=187, col_offset=40)], [], None, None, lineno=187, col_offset=12), lineno=187, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=188, col_offset=8), 'assertEqual', Load(), lineno=188, col_offset=8), [BinOp(Attribute(Name('self', Load(), lineno=188, col_offset=25), 's', Load(), lineno=188, col_offset=25), BitXor(), Call(Name('set', Load(), lineno=188, col_offset=34), [Attribute(Name('self', Load(), lineno=188, col_offset=38), 'otherword', Load(), lineno=188, col_offset=38)], [], None, None, lineno=188, col_offset=34), lineno=188, col_offset=25), Name('i', Load(), lineno=188, col_offset=55)], [], None, None, lineno=188, col_offset=8), lineno=188, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=189, col_offset=8), 'assertEqual', Load(), lineno=189, col_offset=8), [BinOp(Attribute(Name('self', Load(), lineno=189, col_offset=25), 's', Load(), lineno=189, col_offset=25), BitXor(), Call(Name('frozenset', Load(), lineno=189, col_offset=34), [Attribute(Name('self', Load(), lineno=189, col_offset=44), 'otherword', Load(), lineno=189, col_offset=44)], [], None, None, lineno=189, col_offset=34), lineno=189, col_offset=25), Name('i', Load(), lineno=189, col_offset=61)], [], None, None, lineno=189, col_offset=8), lineno=189, col_offset=8), TryExcept([Expr(BinOp(Attribute(Name('self', Load(), lineno=191, col_offset=12), 's', Load(), lineno=191, col_offset=12), BitXor(), Attribute(Name('self', Load(), lineno=191, col_offset=21), 'otherword', Load(), lineno=191, col_offset=21), lineno=191, col_offset=12), lineno=191, col_offset=12)], [ExceptHandler(Name('TypeError', Load(), lineno=192, col_offset=15), None, [Pass( lineno=193, col_offset=12)], lineno=192, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=195, col_offset=12), 'fail', Load(), lineno=195, col_offset=12), [Str('s^t did not screen-out general iterables', lineno=195, col_offset=22)], [], None, None, lineno=195, col_offset=12), lineno=195, col_offset=12)], lineno=190, col_offset=8)], [], lineno=186, col_offset=4), FunctionDef('test_equality', arguments([Name('self', Param(), lineno=197, col_offset=22)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=198, col_offset=8), 'assertEqual', Load(), lineno=198, col_offset=8), [Attribute(Name('self', Load(), lineno=198, col_offset=25), 's', Load(), lineno=198, col_offset=25), Call(Name('set', Load(), lineno=198, col_offset=33), [Attribute(Name('self', Load(), lineno=198, col_offset=37), 'word', Load(), lineno=198, col_offset=37)], [], None, None, lineno=198, col_offset=33)], [], None, None, lineno=198, col_offset=8), lineno=198, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=199, col_offset=8), 'assertEqual', Load(), lineno=199, col_offset=8), [Attribute(Name('self', Load(), lineno=199, col_offset=25), 's', Load(), lineno=199, col_offset=25), Call(Name('frozenset', Load(), lineno=199, col_offset=33), [Attribute(Name('self', Load(), lineno=199, col_offset=43), 'word', Load(), lineno=199, col_offset=43)], [], None, None, lineno=199, col_offset=33)], [], None, None, lineno=199, col_offset=8), lineno=199, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=200, col_offset=8), 'assertEqual', Load(), lineno=200, col_offset=8), [Compare(Attribute(Name('self', Load(), lineno=200, col_offset=25), 's', Load(), lineno=200, col_offset=25), [Eq()], [Attribute(Name('self', Load(), lineno=200, col_offset=35), 'word', Load(), lineno=200, col_offset=35)], lineno=200, col_offset=25), Name('False', Load(), lineno=200, col_offset=46)], [], None, None, lineno=200, col_offset=8), lineno=200, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=201, col_offset=8), 'assertNotEqual', Load(), lineno=201, col_offset=8), [Attribute(Name('self', Load(), lineno=201, col_offset=28), 's', Load(), lineno=201, col_offset=28), Call(Name('set', Load(), lineno=201, col_offset=36), [Attribute(Name('self', Load(), lineno=201, col_offset=40), 'otherword', Load(), lineno=201, col_offset=40)], [], None, None, lineno=201, col_offset=36)], [], None, None, lineno=201, col_offset=8), lineno=201, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=202, col_offset=8), 'assertNotEqual', Load(), lineno=202, col_offset=8), [Attribute(Name('self', Load(), lineno=202, col_offset=28), 's', Load(), lineno=202, col_offset=28), Call(Name('frozenset', Load(), lineno=202, col_offset=36), [Attribute(Name('self', Load(), lineno=202, col_offset=46), 'otherword', Load(), lineno=202, col_offset=46)], [], None, None, lineno=202, col_offset=36)], [], None, None, lineno=202, col_offset=8), lineno=202, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=203, col_offset=8), 'assertEqual', Load(), lineno=203, col_offset=8), [Compare(Attribute(Name('self', Load(), lineno=203, col_offset=25), 's', Load(), lineno=203, col_offset=25), [NotEq()], [Attribute(Name('self', Load(), lineno=203, col_offset=35), 'word', Load(), lineno=203, col_offset=35)], lineno=203, col_offset=25), Name('True', Load(), lineno=203, col_offset=46)], [], None, None, lineno=203, col_offset=8), lineno=203, col_offset=8)], [], lineno=197, col_offset=4), FunctionDef('test_setOfFrozensets', arguments([Name('self', Param(), lineno=205, col_offset=29)], None, None, []), [Assign([Name('t', Store(), lineno=206, col_offset=8)], Call(Name('map', Load(), lineno=206, col_offset=12), [Name('frozenset', Load(), lineno=206, col_offset=16), List([Str('abcdef', lineno=206, col_offset=28), Str('bcd', lineno=206, col_offset=38), Str('bdcb', lineno=206, col_offset=45), Str('fed', lineno=206, col_offset=53), Str('fedccba', lineno=206, col_offset=60)], Load(), lineno=206, col_offset=27)], [], None, None, lineno=206, col_offset=12), lineno=206, col_offset=8), Assign([Name('s', Store(), lineno=207, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=207, col_offset=12), 'thetype', Load(), lineno=207, col_offset=12), [Name('t', Load(), lineno=207, col_offset=25)], [], None, None, lineno=207, col_offset=12), lineno=207, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=208, col_offset=8), 'assertEqual', Load(), lineno=208, col_offset=8), [Call(Name('len', Load(), lineno=208, col_offset=25), [Name('s', Load(), lineno=208, col_offset=29)], [], None, None, lineno=208, col_offset=25), Num(3, lineno=208, col_offset=33)], [], None, None, lineno=208, col_offset=8), lineno=208, col_offset=8)], [], lineno=205, col_offset=4), FunctionDef('test_compare', arguments([Name('self', Param(), lineno=210, col_offset=21)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=211, col_offset=8), 'assertRaises', Load(), lineno=211, col_offset=8), [Name('TypeError', Load(), lineno=211, col_offset=26), Attribute(Attribute(Name('self', Load(), lineno=211, col_offset=37), 's', Load(), lineno=211, col_offset=37), '__cmp__', Load(), lineno=211, col_offset=37), Attribute(Name('self', Load(), lineno=211, col_offset=53), 's', Load(), lineno=211, col_offset=53)], [], None, None, lineno=211, col_offset=8), lineno=211, col_offset=8)], [], lineno=210, col_offset=4), FunctionDef('test_sub_and_super', arguments([Name('self', Param(), lineno=213, col_offset=27)], None, None, []), [Assign([Tuple([Name('p', Store(), lineno=214, col_offset=8), Name('q', Store(), lineno=214, col_offset=11), Name('r', Store(), lineno=214, col_offset=14)], Store(), lineno=214, col_offset=8)], Call(Name('map', Load(), lineno=214, col_offset=18), [Attribute(Name('self', Load(), lineno=214, col_offset=22), 'thetype', Load(), lineno=214, col_offset=22), List([Str('ab', lineno=214, col_offset=37), Str('abcde', lineno=214, col_offset=43), Str('def', lineno=214, col_offset=52)], Load(), lineno=214, col_offset=36)], [], None, None, lineno=214, col_offset=18), lineno=214, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=215, col_offset=8), 'assertTrue', Load(), lineno=215, col_offset=8), [Compare(Name('p', Load(), lineno=215, col_offset=24), [Lt()], [Name('q', Load(), lineno=215, col_offset=28)], lineno=215, col_offset=24)], [], None, None, lineno=215, col_offset=8), lineno=215, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=216, col_offset=8), 'assertTrue', Load(), lineno=216, col_offset=8), [Compare(Name('p', Load(), lineno=216, col_offset=24), [LtE()], [Name('q', Load(), lineno=216, col_offset=29)], lineno=216, col_offset=24)], [], None, None, lineno=216, col_offset=8), lineno=216, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=217, col_offset=8), 'assertTrue', Load(), lineno=217, col_offset=8), [Compare(Name('q', Load(), lineno=217, col_offset=24), [LtE()], [Name('q', Load(), lineno=217, col_offset=29)], lineno=217, col_offset=24)], [], None, None, lineno=217, col_offset=8), lineno=217, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=218, col_offset=8), 'assertTrue', Load(), lineno=218, col_offset=8), [Compare(Name('q', Load(), lineno=218, col_offset=24), [Gt()], [Name('p', Load(), lineno=218, col_offset=28)], lineno=218, col_offset=24)], [], None, None, lineno=218, col_offset=8), lineno=218, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=219, col_offset=8), 'assertTrue', Load(), lineno=219, col_offset=8), [Compare(Name('q', Load(), lineno=219, col_offset=24), [GtE()], [Name('p', Load(), lineno=219, col_offset=29)], lineno=219, col_offset=24)], [], None, None, lineno=219, col_offset=8), lineno=219, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=220, col_offset=8), 'assertFalse', Load(), lineno=220, col_offset=8), [Compare(Name('q', Load(), lineno=220, col_offset=25), [Lt()], [Name('r', Load(), lineno=220, col_offset=29)], lineno=220, col_offset=25)], [], None, None, lineno=220, col_offset=8), lineno=220, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=221, col_offset=8), 'assertFalse', Load(), lineno=221, col_offset=8), [Compare(Name('q', Load(), lineno=221, col_offset=25), [LtE()], [Name('r', Load(), lineno=221, col_offset=30)], lineno=221, col_offset=25)], [], None, None, lineno=221, col_offset=8), lineno=221, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=222, col_offset=8), 'assertFalse', Load(), lineno=222, col_offset=8), [Compare(Name('q', Load(), lineno=222, col_offset=25), [Gt()], [Name('r', Load(), lineno=222, col_offset=29)], lineno=222, col_offset=25)], [], None, None, lineno=222, col_offset=8), lineno=222, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=223, col_offset=8), 'assertFalse', Load(), lineno=223, col_offset=8), [Compare(Name('q', Load(), lineno=223, col_offset=25), [GtE()], [Name('r', Load(), lineno=223, col_offset=30)], lineno=223, col_offset=25)], [], None, None, lineno=223, col_offset=8), lineno=223, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=224, col_offset=8), 'assertTrue', Load(), lineno=224, col_offset=8), [Call(Attribute(Call(Name('set', Load(), lineno=224, col_offset=24), [Str('a', lineno=224, col_offset=28)], [], None, None, lineno=224, col_offset=24), 'issubset', Load(), lineno=224, col_offset=24), [Str('abc', lineno=224, col_offset=42)], [], None, None, lineno=224, col_offset=24)], [], None, None, lineno=224, col_offset=8), lineno=224, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=225, col_offset=8), 'assertTrue', Load(), lineno=225, col_offset=8), [Call(Attribute(Call(Name('set', Load(), lineno=225, col_offset=24), [Str('abc', lineno=225, col_offset=28)], [], None, None, lineno=225, col_offset=24), 'issuperset', Load(), lineno=225, col_offset=24), [Str('a', lineno=225, col_offset=46)], [], None, None, lineno=225, col_offset=24)], [], None, None, lineno=225, col_offset=8), lineno=225, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=226, col_offset=8), 'assertFalse', Load(), lineno=226, col_offset=8), [Call(Attribute(Call(Name('set', Load(), lineno=226, col_offset=25), [Str('a', lineno=226, col_offset=29)], [], None, None, lineno=226, col_offset=25), 'issubset', Load(), lineno=226, col_offset=25), [Str('cbs', lineno=226, col_offset=43)], [], None, None, lineno=226, col_offset=25)], [], None, None, lineno=226, col_offset=8), lineno=226, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=227, col_offset=8), 'assertFalse', Load(), lineno=227, col_offset=8), [Call(Attribute(Call(Name('set', Load(), lineno=227, col_offset=25), [Str('cbs', lineno=227, col_offset=29)], [], None, None, lineno=227, col_offset=25), 'issuperset', Load(), lineno=227, col_offset=25), [Str('a', lineno=227, col_offset=47)], [], None, None, lineno=227, col_offset=25)], [], None, None, lineno=227, col_offset=8), lineno=227, col_offset=8)], [], lineno=213, col_offset=4), FunctionDef('test_pickling', arguments([Name('self', Param(), lineno=229, col_offset=22)], None, None, []), [For(Name('i', Store(), lineno=230, col_offset=12), Call(Name('range', Load(), lineno=230, col_offset=17), [BinOp(Attribute(Name('pickle', Load(), lineno=230, col_offset=23), 'HIGHEST_PROTOCOL', Load(), lineno=230, col_offset=23), Add(), Num(1, lineno=230, col_offset=49), lineno=230, col_offset=23)], [], None, None, lineno=230, col_offset=17), [Assign([Name('p', Store(), lineno=231, col_offset=12)], Call(Attribute(Name('pickle', Load(), lineno=231, col_offset=16), 'dumps', Load(), lineno=231, col_offset=16), [Attribute(Name('self', Load(), lineno=231, col_offset=29), 's', Load(), lineno=231, col_offset=29), Name('i', Load(), lineno=231, col_offset=37)], [], None, None, lineno=231, col_offset=16), lineno=231, col_offset=12), Assign([Name('dup', Store(), lineno=232, col_offset=12)], Call(Attribute(Name('pickle', Load(), lineno=232, col_offset=18), 'loads', Load(), lineno=232, col_offset=18), [Name('p', Load(), lineno=232, col_offset=31)], [], None, None, lineno=232, col_offset=18), lineno=232, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=233, col_offset=12), 'assertEqual', Load(), lineno=233, col_offset=12), [Attribute(Name('self', Load(), lineno=233, col_offset=29), 's', Load(), lineno=233, col_offset=29), Name('dup', Load(), lineno=233, col_offset=37), BinOp(Str('%s != %s', lineno=233, col_offset=42), Mod(), Tuple([Attribute(Name('self', Load(), lineno=233, col_offset=56), 's', Load(), lineno=233, col_offset=56), Name('dup', Load(), lineno=233, col_offset=64)], Load(), lineno=233, col_offset=56), lineno=233, col_offset=42)], [], None, None, lineno=233, col_offset=12), lineno=233, col_offset=12), If(Compare(Call(Name('type', Load(), lineno=234, col_offset=15), [Attribute(Name('self', Load(), lineno=234, col_offset=20), 's', Load(), lineno=234, col_offset=20)], [], None, None, lineno=234, col_offset=15), [NotIn()], [Tuple([Name('set', Load(), lineno=234, col_offset=36), Name('frozenset', Load(), lineno=234, col_offset=41)], Load(), lineno=234, col_offset=36)], lineno=234, col_offset=15), [Assign([Attribute(Attribute(Name('self', Load(), lineno=235, col_offset=16), 's', Load(), lineno=235, col_offset=16), 'x', Store(), lineno=235, col_offset=16)], Num(10, lineno=235, col_offset=27), lineno=235, col_offset=16), Assign([Name('p', Store(), lineno=236, col_offset=16)], Call(Attribute(Name('pickle', Load(), lineno=236, col_offset=20), 'dumps', Load(), lineno=236, col_offset=20), [Attribute(Name('self', Load(), lineno=236, col_offset=33), 's', Load(), lineno=236, col_offset=33)], [], None, None, lineno=236, col_offset=20), lineno=236, col_offset=16), Assign([Name('dup', Store(), lineno=237, col_offset=16)], Call(Attribute(Name('pickle', Load(), lineno=237, col_offset=22), 'loads', Load(), lineno=237, col_offset=22), [Name('p', Load(), lineno=237, col_offset=35)], [], None, None, lineno=237, col_offset=22), lineno=237, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=238, col_offset=16), 'assertEqual', Load(), lineno=238, col_offset=16), [Attribute(Attribute(Name('self', Load(), lineno=238, col_offset=33), 's', Load(), lineno=238, col_offset=33), 'x', Load(), lineno=238, col_offset=33), Attribute(Name('dup', Load(), lineno=238, col_offset=43), 'x', Load(), lineno=238, col_offset=43)], [], None, None, lineno=238, col_offset=16), lineno=238, col_offset=16)], [], lineno=234, col_offset=12)], [], lineno=230, col_offset=8)], [], lineno=229, col_offset=4), FunctionDef('test_deepcopy', arguments([Name('self', Param(), lineno=240, col_offset=22)], None, None, []), [ClassDef('Tracer', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=242, col_offset=25), Name('value', Param(), lineno=242, col_offset=31)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=243, col_offset=16), 'value', Store(), lineno=243, col_offset=16)], Name('value', Load(), lineno=243, col_offset=29), lineno=243, col_offset=16)], [], lineno=242, col_offset=12), FunctionDef('__hash__', arguments([Name('self', Param(), lineno=244, col_offset=25)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=245, col_offset=23), 'value', Load(), lineno=245, col_offset=23), lineno=245, col_offset=16)], [], lineno=244, col_offset=12), FunctionDef('__deepcopy__', arguments([Name('self', Param(), lineno=246, col_offset=29), Name('memo', Param(), lineno=246, col_offset=35)], None, None, [Name('None', Load(), lineno=246, col_offset=40)]), [Return(Call(Name('Tracer', Load(), lineno=247, col_offset=23), [BinOp(Attribute(Name('self', Load(), lineno=247, col_offset=30), 'value', Load(), lineno=247, col_offset=30), Add(), Num(1, lineno=247, col_offset=43), lineno=247, col_offset=30)], [], None, None, lineno=247, col_offset=23), lineno=247, col_offset=16)], [], lineno=246, col_offset=12)], [], lineno=241, col_offset=8), Assign([Name('t', Store(), lineno=248, col_offset=8)], Call(Name('Tracer', Load(), lineno=248, col_offset=12), [Num(10, lineno=248, col_offset=19)], [], None, None, lineno=248, col_offset=12), lineno=248, col_offset=8), Assign([Name('s', Store(), lineno=249, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=249, col_offset=12), 'thetype', Load(), lineno=249, col_offset=12), [List([Name('t', Load(), lineno=249, col_offset=26)], Load(), lineno=249, col_offset=25)], [], None, None, lineno=249, col_offset=12), lineno=249, col_offset=8), Assign([Name('dup', Store(), lineno=250, col_offset=8)], Call(Attribute(Name('copy', Load(), lineno=250, col_offset=14), 'deepcopy', Load(), lineno=250, col_offset=14), [Name('s', Load(), lineno=250, col_offset=28)], [], None, None, lineno=250, col_offset=14), lineno=250, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=251, col_offset=8), 'assertNotEqual', Load(), lineno=251, col_offset=8), [Call(Name('id', Load(), lineno=251, col_offset=28), [Name('s', Load(), lineno=251, col_offset=31)], [], None, None, lineno=251, col_offset=28), Call(Name('id', Load(), lineno=251, col_offset=35), [Name('dup', Load(), lineno=251, col_offset=38)], [], None, None, lineno=251, col_offset=35)], [], None, None, lineno=251, col_offset=8), lineno=251, col_offset=8), For(Name('elem', Store(), lineno=252, col_offset=12), Name('dup', Load(), lineno=252, col_offset=20), [Assign([Name('newt', Store(), lineno=253, col_offset=12)], Name('elem', Load(), lineno=253, col_offset=19), lineno=253, col_offset=12)], [], lineno=252, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=254, col_offset=8), 'assertNotEqual', Load(), lineno=254, col_offset=8), [Call(Name('id', Load(), lineno=254, col_offset=28), [Name('t', Load(), lineno=254, col_offset=31)], [], None, None, lineno=254, col_offset=28), Call(Name('id', Load(), lineno=254, col_offset=35), [Name('newt', Load(), lineno=254, col_offset=38)], [], None, None, lineno=254, col_offset=35)], [], None, None, lineno=254, col_offset=8), lineno=254, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=255, col_offset=8), 'assertEqual', Load(), lineno=255, col_offset=8), [BinOp(Attribute(Name('t', Load(), lineno=255, col_offset=25), 'value', Load(), lineno=255, col_offset=25), Add(), Num(1, lineno=255, col_offset=35), lineno=255, col_offset=25), Attribute(Name('newt', Load(), lineno=255, col_offset=38), 'value', Load(), lineno=255, col_offset=38)], [], None, None, lineno=255, col_offset=8), lineno=255, col_offset=8)], [], lineno=240, col_offset=4), FunctionDef('test_gc', arguments([Name('self', Param(), lineno=257, col_offset=16)], None, None, []), [ClassDef('A', [], [Pass( lineno=260, col_offset=12)], [], lineno=259, col_offset=8), Assign([Name('s', Store(), lineno=261, col_offset=8)], Call(Name('set', Load(), lineno=261, col_offset=12), [GeneratorExp(Call(Name('A', Load(), lineno=261, col_offset=16), [], [], None, None, lineno=261, col_offset=16), [comprehension(Name('i', Store(), lineno=261, col_offset=24), Call(Name('xrange', Load(), lineno=261, col_offset=29), [Num(1000, lineno=261, col_offset=36)], [], None, None, lineno=261, col_offset=29), [])], lineno=261, col_offset=16)], [], None, None, lineno=261, col_offset=12), lineno=261, col_offset=8), For(Name('elem', Store(), lineno=262, col_offset=12), Name('s', Load(), lineno=262, col_offset=20), [Assign([Attribute(Name('elem', Load(), lineno=263, col_offset=12), 'cycle', Store(), lineno=263, col_offset=12)], Name('s', Load(), lineno=263, col_offset=25), lineno=263, col_offset=12), Assign([Attribute(Name('elem', Load(), lineno=264, col_offset=12), 'sub', Store(), lineno=264, col_offset=12)], Name('elem', Load(), lineno=264, col_offset=23), lineno=264, col_offset=12), Assign([Attribute(Name('elem', Load(), lineno=265, col_offset=12), 'set', Store(), lineno=265, col_offset=12)], Call(Name('set', Load(), lineno=265, col_offset=23), [List([Name('elem', Load(), lineno=265, col_offset=28)], Load(), lineno=265, col_offset=27)], [], None, None, lineno=265, col_offset=23), lineno=265, col_offset=12)], [], lineno=262, col_offset=8)], [], lineno=257, col_offset=4), FunctionDef('test_subclass_with_custom_hash', arguments([Name('self', Param(), lineno=267, col_offset=39)], None, None, []), [ClassDef('H', [Attribute(Name('self', Load(), lineno=269, col_offset=16), 'thetype', Load(), lineno=269, col_offset=16)], [FunctionDef('__hash__', arguments([Name('self', Param(), lineno=270, col_offset=25)], None, None, []), [Return(Call(Name('int', Load(), lineno=271, col_offset=23), [BinOp(Call(Name('id', Load(), lineno=271, col_offset=27), [Name('self', Load(), lineno=271, col_offset=30)], [], None, None, lineno=271, col_offset=27), BitAnd(), Num(2147483647, lineno=271, col_offset=38), lineno=271, col_offset=27)], [], None, None, lineno=271, col_offset=23), lineno=271, col_offset=16)], [], lineno=270, col_offset=12)], [], lineno=269, col_offset=8), Assign([Name('s', Store(), lineno=272, col_offset=8)], Call(Name('H', Load(), lineno=272, col_offset=10), [], [], None, None, lineno=272, col_offset=10), lineno=272, col_offset=8), Assign([Name('f', Store(), lineno=273, col_offset=8)], Call(Name('set', Load(), lineno=273, col_offset=10), [], [], None, None, lineno=273, col_offset=10), lineno=273, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=274, col_offset=8), 'add', Load(), lineno=274, col_offset=8), [Name('s', Load(), lineno=274, col_offset=14)], [], None, None, lineno=274, col_offset=8), lineno=274, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=275, col_offset=8), 'assertIn', Load(), lineno=275, col_offset=8), [Name('s', Load(), lineno=275, col_offset=22), Name('f', Load(), lineno=275, col_offset=25)], [], None, None, lineno=275, col_offset=8), lineno=275, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=276, col_offset=8), 'remove', Load(), lineno=276, col_offset=8), [Name('s', Load(), lineno=276, col_offset=17)], [], None, None, lineno=276, col_offset=8), lineno=276, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=277, col_offset=8), 'add', Load(), lineno=277, col_offset=8), [Name('s', Load(), lineno=277, col_offset=14)], [], None, None, lineno=277, col_offset=8), lineno=277, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=278, col_offset=8), 'discard', Load(), lineno=278, col_offset=8), [Name('s', Load(), lineno=278, col_offset=18)], [], None, None, lineno=278, col_offset=8), lineno=278, col_offset=8)], [], lineno=267, col_offset=4), FunctionDef('test_badcmp', arguments([Name('self', Param(), lineno=280, col_offset=20)], None, None, []), [Assign([Name('s', Store(), lineno=281, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=281, col_offset=12), 'thetype', Load(), lineno=281, col_offset=12), [List([Call(Name('BadCmp', Load(), lineno=281, col_offset=26), [], [], None, None, lineno=281, col_offset=26)], Load(), lineno=281, col_offset=25)], [], None, None, lineno=281, col_offset=12), lineno=281, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=283, col_offset=8), 'assertRaises', Load(), lineno=283, col_offset=8), [Name('RuntimeError', Load(), lineno=283, col_offset=26), Attribute(Name('self', Load(), lineno=283, col_offset=40), 'thetype', Load(), lineno=283, col_offset=40), List([Call(Name('BadCmp', Load(), lineno=283, col_offset=55), [], [], None, None, lineno=283, col_offset=55), Call(Name('BadCmp', Load(), lineno=283, col_offset=65), [], [], None, None, lineno=283, col_offset=65)], Load(), lineno=283, col_offset=54)], [], None, None, lineno=283, col_offset=8), lineno=283, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=284, col_offset=8), 'assertRaises', Load(), lineno=284, col_offset=8), [Name('RuntimeError', Load(), lineno=284, col_offset=26), Attribute(Name('s', Load(), lineno=284, col_offset=40), '__contains__', Load(), lineno=284, col_offset=40), Call(Name('BadCmp', Load(), lineno=284, col_offset=56), [], [], None, None, lineno=284, col_offset=56)], [], None, None, lineno=284, col_offset=8), lineno=284, col_offset=8), If(Call(Name('hasattr', Load(), lineno=286, col_offset=11), [Name('s', Load(), lineno=286, col_offset=19), Str('add', lineno=286, col_offset=22)], [], None, None, lineno=286, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=287, col_offset=12), 'assertRaises', Load(), lineno=287, col_offset=12), [Name('RuntimeError', Load(), lineno=287, col_offset=30), Attribute(Name('s', Load(), lineno=287, col_offset=44), 'add', Load(), lineno=287, col_offset=44), Call(Name('BadCmp', Load(), lineno=287, col_offset=51), [], [], None, None, lineno=287, col_offset=51)], [], None, None, lineno=287, col_offset=12), lineno=287, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=288, col_offset=12), 'assertRaises', Load(), lineno=288, col_offset=12), [Name('RuntimeError', Load(), lineno=288, col_offset=30), Attribute(Name('s', Load(), lineno=288, col_offset=44), 'discard', Load(), lineno=288, col_offset=44), Call(Name('BadCmp', Load(), lineno=288, col_offset=55), [], [], None, None, lineno=288, col_offset=55)], [], None, None, lineno=288, col_offset=12), lineno=288, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=289, col_offset=12), 'assertRaises', Load(), lineno=289, col_offset=12), [Name('RuntimeError', Load(), lineno=289, col_offset=30), Attribute(Name('s', Load(), lineno=289, col_offset=44), 'remove', Load(), lineno=289, col_offset=44), Call(Name('BadCmp', Load(), lineno=289, col_offset=54), [], [], None, None, lineno=289, col_offset=54)], [], None, None, lineno=289, col_offset=12), lineno=289, col_offset=12)], [], lineno=286, col_offset=8)], [], lineno=280, col_offset=4), FunctionDef('test_cyclical_repr', arguments([Name('self', Param(), lineno=291, col_offset=27)], None, None, []), [Assign([Name('w', Store(), lineno=292, col_offset=8)], Call(Name('ReprWrapper', Load(), lineno=292, col_offset=12), [], [], None, None, lineno=292, col_offset=12), lineno=292, col_offset=8), Assign([Name('s', Store(), lineno=293, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=293, col_offset=12), 'thetype', Load(), lineno=293, col_offset=12), [List([Name('w', Load(), lineno=293, col_offset=26)], Load(), lineno=293, col_offset=25)], [], None, None, lineno=293, col_offset=12), lineno=293, col_offset=8), Assign([Attribute(Name('w', Load(), lineno=294, col_offset=8), 'value', Store(), lineno=294, col_offset=8)], Name('s', Load(), lineno=294, col_offset=18), lineno=294, col_offset=8), Assign([Name('name', Store(), lineno=295, col_offset=8)], Subscript(Call(Attribute(Call(Name('repr', Load(), lineno=295, col_offset=15), [Name('s', Load(), lineno=295, col_offset=20)], [], None, None, lineno=295, col_offset=15), 'partition', Load(), lineno=295, col_offset=15), [Str('(', lineno=295, col_offset=33)], [], None, None, lineno=295, col_offset=15), Index(Num(0, lineno=295, col_offset=38)), Load(), lineno=295, col_offset=15), lineno=295, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=296, col_offset=8), 'assertEqual', Load(), lineno=296, col_offset=8), [Call(Name('repr', Load(), lineno=296, col_offset=25), [Name('s', Load(), lineno=296, col_offset=30)], [], None, None, lineno=296, col_offset=25), BinOp(Str('%s([%s(...)])', lineno=296, col_offset=34), Mod(), Tuple([Name('name', Load(), lineno=296, col_offset=53), Name('name', Load(), lineno=296, col_offset=59)], Load(), lineno=296, col_offset=53), lineno=296, col_offset=34)], [], None, None, lineno=296, col_offset=8), lineno=296, col_offset=8)], [], lineno=291, col_offset=4), FunctionDef('test_cyclical_print', arguments([Name('self', Param(), lineno=298, col_offset=28)], None, None, []), [Assign([Name('w', Store(), lineno=299, col_offset=8)], Call(Name('ReprWrapper', Load(), lineno=299, col_offset=12), [], [], None, None, lineno=299, col_offset=12), lineno=299, col_offset=8), Assign([Name('s', Store(), lineno=300, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=300, col_offset=12), 'thetype', Load(), lineno=300, col_offset=12), [List([Name('w', Load(), lineno=300, col_offset=26)], Load(), lineno=300, col_offset=25)], [], None, None, lineno=300, col_offset=12), lineno=300, col_offset=8), Assign([Attribute(Name('w', Load(), lineno=301, col_offset=8), 'value', Store(), lineno=301, col_offset=8)], Name('s', Load(), lineno=301, col_offset=18), lineno=301, col_offset=8), Assign([Name('fo', Store(), lineno=302, col_offset=8)], Call(Name('open', Load(), lineno=302, col_offset=13), [Attribute(Name('test_support', Load(), lineno=302, col_offset=18), 'TESTFN', Load(), lineno=302, col_offset=18), Str('wb', lineno=302, col_offset=39)], [], None, None, lineno=302, col_offset=13), lineno=302, col_offset=8), TryFinally([Print(Name('fo', Load(), lineno=304, col_offset=21), [Name('s', Load(), lineno=304, col_offset=25)], False, lineno=304, col_offset=12), Expr(Call(Attribute(Name('fo', Load(), lineno=305, col_offset=12), 'close', Load(), lineno=305, col_offset=12), [], [], None, None, lineno=305, col_offset=12), lineno=305, col_offset=12), Assign([Name('fo', Store(), lineno=306, col_offset=12)], Call(Name('open', Load(), lineno=306, col_offset=17), [Attribute(Name('test_support', Load(), lineno=306, col_offset=22), 'TESTFN', Load(), lineno=306, col_offset=22), Str('rb', lineno=306, col_offset=43)], [], None, None, lineno=306, col_offset=17), lineno=306, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=307, col_offset=12), 'assertEqual', Load(), lineno=307, col_offset=12), [Call(Attribute(Name('fo', Load(), lineno=307, col_offset=29), 'read', Load(), lineno=307, col_offset=29), [], [], None, None, lineno=307, col_offset=29), Call(Name('repr', Load(), lineno=307, col_offset=40), [Name('s', Load(), lineno=307, col_offset=45)], [], None, None, lineno=307, col_offset=40)], [], None, None, lineno=307, col_offset=12), lineno=307, col_offset=12)], [Expr(Call(Attribute(Name('fo', Load(), lineno=309, col_offset=12), 'close', Load(), lineno=309, col_offset=12), [], [], None, None, lineno=309, col_offset=12), lineno=309, col_offset=12), Expr(Call(Attribute(Name('test_support', Load(), lineno=310, col_offset=12), 'unlink', Load(), lineno=310, col_offset=12), [Attribute(Name('test_support', Load(), lineno=310, col_offset=32), 'TESTFN', Load(), lineno=310, col_offset=32)], [], None, None, lineno=310, col_offset=12), lineno=310, col_offset=12)], lineno=303, col_offset=8)], [], lineno=298, col_offset=4), FunctionDef('test_do_not_rehash_dict_keys', arguments([Name('self', Param(), lineno=312, col_offset=37)], None, None, []), [Assign([Name('n', Store(), lineno=313, col_offset=8)], Num(10, lineno=313, col_offset=12), lineno=313, col_offset=8), Assign([Name('d', Store(), lineno=314, col_offset=8)], Call(Attribute(Name('dict', Load(), lineno=314, col_offset=12), 'fromkeys', Load(), lineno=314, col_offset=12), [Call(Name('map', Load(), lineno=314, col_offset=26), [Name('HashCountingInt', Load(), lineno=314, col_offset=30), Call(Name('xrange', Load(), lineno=314, col_offset=47), [Name('n', Load(), lineno=314, col_offset=54)], [], None, None, lineno=314, col_offset=47)], [], None, None, lineno=314, col_offset=26)], [], None, None, lineno=314, col_offset=12), lineno=314, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=315, col_offset=8), 'assertEqual', Load(), lineno=315, col_offset=8), [Call(Name('sum', Load(), lineno=315, col_offset=25), [GeneratorExp(Attribute(Name('elem', Load(), lineno=315, col_offset=29), 'hash_count', Load(), lineno=315, col_offset=29), [comprehension(Name('elem', Store(), lineno=315, col_offset=49), Name('d', Load(), lineno=315, col_offset=57), [])], lineno=315, col_offset=29)], [], None, None, lineno=315, col_offset=25), Name('n', Load(), lineno=315, col_offset=61)], [], None, None, lineno=315, col_offset=8), lineno=315, col_offset=8), Assign([Name('s', Store(), lineno=316, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=316, col_offset=12), 'thetype', Load(), lineno=316, col_offset=12), [Name('d', Load(), lineno=316, col_offset=25)], [], None, None, lineno=316, col_offset=12), lineno=316, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=317, col_offset=8), 'assertEqual', Load(), lineno=317, col_offset=8), [Call(Name('sum', Load(), lineno=317, col_offset=25), [GeneratorExp(Attribute(Name('elem', Load(), lineno=317, col_offset=29), 'hash_count', Load(), lineno=317, col_offset=29), [comprehension(Name('elem', Store(), lineno=317, col_offset=49), Name('d', Load(), lineno=317, col_offset=57), [])], lineno=317, col_offset=29)], [], None, None, lineno=317, col_offset=25), Name('n', Load(), lineno=317, col_offset=61)], [], None, None, lineno=317, col_offset=8), lineno=317, col_offset=8), Expr(Call(Attribute(Name('s', Load(), lineno=318, col_offset=8), 'difference', Load(), lineno=318, col_offset=8), [Name('d', Load(), lineno=318, col_offset=21)], [], None, None, lineno=318, col_offset=8), lineno=318, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=319, col_offset=8), 'assertEqual', Load(), lineno=319, col_offset=8), [Call(Name('sum', Load(), lineno=319, col_offset=25), [GeneratorExp(Attribute(Name('elem', Load(), lineno=319, col_offset=29), 'hash_count', Load(), lineno=319, col_offset=29), [comprehension(Name('elem', Store(), lineno=319, col_offset=49), Name('d', Load(), lineno=319, col_offset=57), [])], lineno=319, col_offset=29)], [], None, None, lineno=319, col_offset=25), Name('n', Load(), lineno=319, col_offset=61)], [], None, None, lineno=319, col_offset=8), lineno=319, col_offset=8), If(Call(Name('hasattr', Load(), lineno=320, col_offset=11), [Name('s', Load(), lineno=320, col_offset=19), Str('symmetric_difference_update', lineno=320, col_offset=22)], [], None, None, lineno=320, col_offset=11), [Expr(Call(Attribute(Name('s', Load(), lineno=321, col_offset=12), 'symmetric_difference_update', Load(), lineno=321, col_offset=12), [Name('d', Load(), lineno=321, col_offset=42)], [], None, None, lineno=321, col_offset=12), lineno=321, col_offset=12)], [], lineno=320, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=322, col_offset=8), 'assertEqual', Load(), lineno=322, col_offset=8), [Call(Name('sum', Load(), lineno=322, col_offset=25), [GeneratorExp(Attribute(Name('elem', Load(), lineno=322, col_offset=29), 'hash_count', Load(), lineno=322, col_offset=29), [comprehension(Name('elem', Store(), lineno=322, col_offset=49), Name('d', Load(), lineno=322, col_offset=57), [])], lineno=322, col_offset=29)], [], None, None, lineno=322, col_offset=25), Name('n', Load(), lineno=322, col_offset=61)], [], None, None, lineno=322, col_offset=8), lineno=322, col_offset=8), Assign([Name('d2', Store(), lineno=323, col_offset=8)], Call(Attribute(Name('dict', Load(), lineno=323, col_offset=13), 'fromkeys', Load(), lineno=323, col_offset=13), [Call(Name('set', Load(), lineno=323, col_offset=27), [Name('d', Load(), lineno=323, col_offset=31)], [], None, None, lineno=323, col_offset=27)], [], None, None, lineno=323, col_offset=13), lineno=323, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=324, col_offset=8), 'assertEqual', Load(), lineno=324, col_offset=8), [Call(Name('sum', Load(), lineno=324, col_offset=25), [GeneratorExp(Attribute(Name('elem', Load(), lineno=324, col_offset=29), 'hash_count', Load(), lineno=324, col_offset=29), [comprehension(Name('elem', Store(), lineno=324, col_offset=49), Name('d', Load(), lineno=324, col_offset=57), [])], lineno=324, col_offset=29)], [], None, None, lineno=324, col_offset=25), Name('n', Load(), lineno=324, col_offset=61)], [], None, None, lineno=324, col_offset=8), lineno=324, col_offset=8), Assign([Name('d3', Store(), lineno=325, col_offset=8)], Call(Attribute(Name('dict', Load(), lineno=325, col_offset=13), 'fromkeys', Load(), lineno=325, col_offset=13), [Call(Name('frozenset', Load(), lineno=325, col_offset=27), [Name('d', Load(), lineno=325, col_offset=37)], [], None, None, lineno=325, col_offset=27)], [], None, None, lineno=325, col_offset=13), lineno=325, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=326, col_offset=8), 'assertEqual', Load(), lineno=326, col_offset=8), [Call(Name('sum', Load(), lineno=326, col_offset=25), [GeneratorExp(Attribute(Name('elem', Load(), lineno=326, col_offset=29), 'hash_count', Load(), lineno=326, col_offset=29), [comprehension(Name('elem', Store(), lineno=326, col_offset=49), Name('d', Load(), lineno=326, col_offset=57), [])], lineno=326, col_offset=29)], [], None, None, lineno=326, col_offset=25), Name('n', Load(), lineno=326, col_offset=61)], [], None, None, lineno=326, col_offset=8), lineno=326, col_offset=8), Assign([Name('d3', Store(), lineno=327, col_offset=8)], Call(Attribute(Name('dict', Load(), lineno=327, col_offset=13), 'fromkeys', Load(), lineno=327, col_offset=13), [Call(Name('frozenset', Load(), lineno=327, col_offset=27), [Name('d', Load(), lineno=327, col_offset=37)], [], None, None, lineno=327, col_offset=27), Num(123, lineno=327, col_offset=41)], [], None, None, lineno=327, col_offset=13), lineno=327, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=328, col_offset=8), 'assertEqual', Load(), lineno=328, col_offset=8), [Call(Name('sum', Load(), lineno=328, col_offset=25), [GeneratorExp(Attribute(Name('elem', Load(), lineno=328, col_offset=29), 'hash_count', Load(), lineno=328, col_offset=29), [comprehension(Name('elem', Store(), lineno=328, col_offset=49), Name('d', Load(), lineno=328, col_offset=57), [])], lineno=328, col_offset=29)], [], None, None, lineno=328, col_offset=25), Name('n', Load(), lineno=328, col_offset=61)], [], None, None, lineno=328, col_offset=8), lineno=328, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=329, col_offset=8), 'assertEqual', Load(), lineno=329, col_offset=8), [Name('d3', Load(), lineno=329, col_offset=25), Call(Attribute(Name('dict', Load(), lineno=329, col_offset=29), 'fromkeys', Load(), lineno=329, col_offset=29), [Name('d', Load(), lineno=329, col_offset=43), Num(123, lineno=329, col_offset=46)], [], None, None, lineno=329, col_offset=29)], [], None, None, lineno=329, col_offset=8), lineno=329, col_offset=8)], [], lineno=312, col_offset=4), FunctionDef('test_container_iterator', arguments([Name('self', Param(), lineno=331, col_offset=32)], None, None, []), [ClassDef('C', [Name('object', Load(), lineno=333, col_offset=16)], [Pass( lineno=334, col_offset=12)], [], lineno=333, col_offset=8), Assign([Name('obj', Store(), lineno=335, col_offset=8)], Call(Name('C', Load(), lineno=335, col_offset=14), [], [], None, None, lineno=335, col_offset=14), lineno=335, col_offset=8), Assign([Name('ref', Store(), lineno=336, col_offset=8)], Call(Attribute(Name('weakref', Load(), lineno=336, col_offset=14), 'ref', Load(), lineno=336, col_offset=14), [Name('obj', Load(), lineno=336, col_offset=26)], [], None, None, lineno=336, col_offset=14), lineno=336, col_offset=8), Assign([Name('container', Store(), lineno=337, col_offset=8)], Call(Name('set', Load(), lineno=337, col_offset=20), [List([Name('obj', Load(), lineno=337, col_offset=25), Num(1, lineno=337, col_offset=30)], Load(), lineno=337, col_offset=24)], [], None, None, lineno=337, col_offset=20), lineno=337, col_offset=8), Assign([Attribute(Name('obj', Load(), lineno=338, col_offset=8), 'x', Store(), lineno=338, col_offset=8)], Call(Name('iter', Load(), lineno=338, col_offset=16), [Name('container', Load(), lineno=338, col_offset=21)], [], None, None, lineno=338, col_offset=16), lineno=338, col_offset=8), Delete([Name('obj', Del(), lineno=339, col_offset=12), Name('container', Del(), lineno=339, col_offset=17)], lineno=339, col_offset=8), Expr(Call(Attribute(Name('gc', Load(), lineno=340, col_offset=8), 'collect', Load(), lineno=340, col_offset=8), [], [], None, None, lineno=340, col_offset=8), lineno=340, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=341, col_offset=8), 'assertTrue', Load(), lineno=341, col_offset=8), [Compare(Call(Name('ref', Load(), lineno=341, col_offset=24), [], [], None, None, lineno=341, col_offset=24), [Is()], [Name('None', Load(), lineno=341, col_offset=33)], lineno=341, col_offset=24), Str('Cycle was not collected', lineno=341, col_offset=39)], [], None, None, lineno=341, col_offset=8), lineno=341, col_offset=8)], [], lineno=331, col_offset=4)], [], lineno=39, col_offset=0), ClassDef('TestSet', [Name('TestJointOps', Load(), lineno=343, col_offset=14)], [Assign([Name('thetype', Store(), lineno=344, col_offset=4)], Name('set', Load(), lineno=344, col_offset=14), lineno=344, col_offset=4), FunctionDef('test_init', arguments([Name('self', Param(), lineno=346, col_offset=18)], None, None, []), [Assign([Name('s', Store(), lineno=347, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=347, col_offset=12), 'thetype', Load(), lineno=347, col_offset=12), [], [], None, None, lineno=347, col_offset=12), lineno=347, col_offset=8), Expr(Call(Attribute(Name('s', Load(), lineno=348, col_offset=8), '__init__', Load(), lineno=348, col_offset=8), [Attribute(Name('self', Load(), lineno=348, col_offset=19), 'word', Load(), lineno=348, col_offset=19)], [], None, None, lineno=348, col_offset=8), lineno=348, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=349, col_offset=8), 'assertEqual', Load(), lineno=349, col_offset=8), [Name('s', Load(), lineno=349, col_offset=25), Call(Name('set', Load(), lineno=349, col_offset=28), [Attribute(Name('self', Load(), lineno=349, col_offset=32), 'word', Load(), lineno=349, col_offset=32)], [], None, None, lineno=349, col_offset=28)], [], None, None, lineno=349, col_offset=8), lineno=349, col_offset=8), Expr(Call(Attribute(Name('s', Load(), lineno=350, col_offset=8), '__init__', Load(), lineno=350, col_offset=8), [Attribute(Name('self', Load(), lineno=350, col_offset=19), 'otherword', Load(), lineno=350, col_offset=19)], [], None, None, lineno=350, col_offset=8), lineno=350, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=351, col_offset=8), 'assertEqual', Load(), lineno=351, col_offset=8), [Name('s', Load(), lineno=351, col_offset=25), Call(Name('set', Load(), lineno=351, col_offset=28), [Attribute(Name('self', Load(), lineno=351, col_offset=32), 'otherword', Load(), lineno=351, col_offset=32)], [], None, None, lineno=351, col_offset=28)], [], None, None, lineno=351, col_offset=8), lineno=351, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=352, col_offset=8), 'assertRaises', Load(), lineno=352, col_offset=8), [Name('TypeError', Load(), lineno=352, col_offset=26), Attribute(Name('s', Load(), lineno=352, col_offset=37), '__init__', Load(), lineno=352, col_offset=37), Name('s', Load(), lineno=352, col_offset=49), Num(2, lineno=352, col_offset=52)], [], None, None, lineno=352, col_offset=8), lineno=352, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=353, col_offset=8), 'assertRaises', Load(), lineno=353, col_offset=8), [Name('TypeError', Load(), lineno=353, col_offset=26), Attribute(Name('s', Load(), lineno=353, col_offset=37), '__init__', Load(), lineno=353, col_offset=37), Num(1, lineno=353, col_offset=49)], [], None, None, lineno=353, col_offset=8), lineno=353, col_offset=8)], [], lineno=346, col_offset=4), FunctionDef('test_constructor_identity', arguments([Name('self', Param(), lineno=355, col_offset=34)], None, None, []), [Assign([Name('s', Store(), lineno=356, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=356, col_offset=12), 'thetype', Load(), lineno=356, col_offset=12), [Call(Name('range', Load(), lineno=356, col_offset=25), [Num(3, lineno=356, col_offset=31)], [], None, None, lineno=356, col_offset=25)], [], None, None, lineno=356, col_offset=12), lineno=356, col_offset=8), Assign([Name('t', Store(), lineno=357, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=357, col_offset=12), 'thetype', Load(), lineno=357, col_offset=12), [Name('s', Load(), lineno=357, col_offset=25)], [], None, None, lineno=357, col_offset=12), lineno=357, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=358, col_offset=8), 'assertNotEqual', Load(), lineno=358, col_offset=8), [Call(Name('id', Load(), lineno=358, col_offset=28), [Name('s', Load(), lineno=358, col_offset=31)], [], None, None, lineno=358, col_offset=28), Call(Name('id', Load(), lineno=358, col_offset=35), [Name('t', Load(), lineno=358, col_offset=38)], [], None, None, lineno=358, col_offset=35)], [], None, None, lineno=358, col_offset=8), lineno=358, col_offset=8)], [], lineno=355, col_offset=4), FunctionDef('test_hash', arguments([Name('self', Param(), lineno=360, col_offset=18)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=361, col_offset=8), 'assertRaises', Load(), lineno=361, col_offset=8), [Name('TypeError', Load(), lineno=361, col_offset=26), Name('hash', Load(), lineno=361, col_offset=37), Attribute(Name('self', Load(), lineno=361, col_offset=43), 's', Load(), lineno=361, col_offset=43)], [], None, None, lineno=361, col_offset=8), lineno=361, col_offset=8)], [], lineno=360, col_offset=4), FunctionDef('test_clear', arguments([Name('self', Param(), lineno=363, col_offset=19)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=364, col_offset=8), 's', Load(), lineno=364, col_offset=8), 'clear', Load(), lineno=364, col_offset=8), [], [], None, None, lineno=364, col_offset=8), lineno=364, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=365, col_offset=8), 'assertEqual', Load(), lineno=365, col_offset=8), [Attribute(Name('self', Load(), lineno=365, col_offset=25), 's', Load(), lineno=365, col_offset=25), Call(Name('set', Load(), lineno=365, col_offset=33), [], [], None, None, lineno=365, col_offset=33)], [], None, None, lineno=365, col_offset=8), lineno=365, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=366, col_offset=8), 'assertEqual', Load(), lineno=366, col_offset=8), [Call(Name('len', Load(), lineno=366, col_offset=25), [Attribute(Name('self', Load(), lineno=366, col_offset=29), 's', Load(), lineno=366, col_offset=29)], [], None, None, lineno=366, col_offset=25), Num(0, lineno=366, col_offset=38)], [], None, None, lineno=366, col_offset=8), lineno=366, col_offset=8)], [], lineno=363, col_offset=4), FunctionDef('test_copy', arguments([Name('self', Param(), lineno=368, col_offset=18)], None, None, []), [Assign([Name('dup', Store(), lineno=369, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=369, col_offset=14), 's', Load(), lineno=369, col_offset=14), 'copy', Load(), lineno=369, col_offset=14), [], [], None, None, lineno=369, col_offset=14), lineno=369, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=370, col_offset=8), 'assertEqual', Load(), lineno=370, col_offset=8), [Attribute(Name('self', Load(), lineno=370, col_offset=25), 's', Load(), lineno=370, col_offset=25), Name('dup', Load(), lineno=370, col_offset=33)], [], None, None, lineno=370, col_offset=8), lineno=370, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=371, col_offset=8), 'assertNotEqual', Load(), lineno=371, col_offset=8), [Call(Name('id', Load(), lineno=371, col_offset=28), [Attribute(Name('self', Load(), lineno=371, col_offset=31), 's', Load(), lineno=371, col_offset=31)], [], None, None, lineno=371, col_offset=28), Call(Name('id', Load(), lineno=371, col_offset=40), [Name('dup', Load(), lineno=371, col_offset=43)], [], None, None, lineno=371, col_offset=40)], [], None, None, lineno=371, col_offset=8), lineno=371, col_offset=8)], [], lineno=368, col_offset=4), FunctionDef('test_add', arguments([Name('self', Param(), lineno=373, col_offset=17)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=374, col_offset=8), 's', Load(), lineno=374, col_offset=8), 'add', Load(), lineno=374, col_offset=8), [Str('Q', lineno=374, col_offset=19)], [], None, None, lineno=374, col_offset=8), lineno=374, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=375, col_offset=8), 'assertIn', Load(), lineno=375, col_offset=8), [Str('Q', lineno=375, col_offset=22), Attribute(Name('self', Load(), lineno=375, col_offset=27), 's', Load(), lineno=375, col_offset=27)], [], None, None, lineno=375, col_offset=8), lineno=375, col_offset=8), Assign([Name('dup', Store(), lineno=376, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=376, col_offset=14), 's', Load(), lineno=376, col_offset=14), 'copy', Load(), lineno=376, col_offset=14), [], [], None, None, lineno=376, col_offset=14), lineno=376, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=377, col_offset=8), 's', Load(), lineno=377, col_offset=8), 'add', Load(), lineno=377, col_offset=8), [Str('Q', lineno=377, col_offset=19)], [], None, None, lineno=377, col_offset=8), lineno=377, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=378, col_offset=8), 'assertEqual', Load(), lineno=378, col_offset=8), [Attribute(Name('self', Load(), lineno=378, col_offset=25), 's', Load(), lineno=378, col_offset=25), Name('dup', Load(), lineno=378, col_offset=33)], [], None, None, lineno=378, col_offset=8), lineno=378, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=379, col_offset=8), 'assertRaises', Load(), lineno=379, col_offset=8), [Name('TypeError', Load(), lineno=379, col_offset=26), Attribute(Attribute(Name('self', Load(), lineno=379, col_offset=37), 's', Load(), lineno=379, col_offset=37), 'add', Load(), lineno=379, col_offset=37), List([], Load(), lineno=379, col_offset=49)], [], None, None, lineno=379, col_offset=8), lineno=379, col_offset=8)], [], lineno=373, col_offset=4), FunctionDef('test_remove', arguments([Name('self', Param(), lineno=381, col_offset=20)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=382, col_offset=8), 's', Load(), lineno=382, col_offset=8), 'remove', Load(), lineno=382, col_offset=8), [Str('a', lineno=382, col_offset=22)], [], None, None, lineno=382, col_offset=8), lineno=382, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=383, col_offset=8), 'assertNotIn', Load(), lineno=383, col_offset=8), [Str('a', lineno=383, col_offset=25), Attribute(Name('self', Load(), lineno=383, col_offset=30), 's', Load(), lineno=383, col_offset=30)], [], None, None, lineno=383, col_offset=8), lineno=383, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=384, col_offset=8), 'assertRaises', Load(), lineno=384, col_offset=8), [Name('KeyError', Load(), lineno=384, col_offset=26), Attribute(Attribute(Name('self', Load(), lineno=384, col_offset=36), 's', Load(), lineno=384, col_offset=36), 'remove', Load(), lineno=384, col_offset=36), Str('Q', lineno=384, col_offset=51)], [], None, None, lineno=384, col_offset=8), lineno=384, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=385, col_offset=8), 'assertRaises', Load(), lineno=385, col_offset=8), [Name('TypeError', Load(), lineno=385, col_offset=26), Attribute(Attribute(Name('self', Load(), lineno=385, col_offset=37), 's', Load(), lineno=385, col_offset=37), 'remove', Load(), lineno=385, col_offset=37), List([], Load(), lineno=385, col_offset=52)], [], None, None, lineno=385, col_offset=8), lineno=385, col_offset=8), Assign([Name('s', Store(), lineno=386, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=386, col_offset=12), 'thetype', Load(), lineno=386, col_offset=12), [List([Call(Name('frozenset', Load(), lineno=386, col_offset=26), [Attribute(Name('self', Load(), lineno=386, col_offset=36), 'word', Load(), lineno=386, col_offset=36)], [], None, None, lineno=386, col_offset=26)], Load(), lineno=386, col_offset=25)], [], None, None, lineno=386, col_offset=12), lineno=386, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=387, col_offset=8), 'assertIn', Load(), lineno=387, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=387, col_offset=22), 'thetype', Load(), lineno=387, col_offset=22), [Attribute(Name('self', Load(), lineno=387, col_offset=35), 'word', Load(), lineno=387, col_offset=35)], [], None, None, lineno=387, col_offset=22), Name('s', Load(), lineno=387, col_offset=47)], [], None, None, lineno=387, col_offset=8), lineno=387, col_offset=8), Expr(Call(Attribute(Name('s', Load(), lineno=388, col_offset=8), 'remove', Load(), lineno=388, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=388, col_offset=17), 'thetype', Load(), lineno=388, col_offset=17), [Attribute(Name('self', Load(), lineno=388, col_offset=30), 'word', Load(), lineno=388, col_offset=30)], [], None, None, lineno=388, col_offset=17)], [], None, None, lineno=388, col_offset=8), lineno=388, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=389, col_offset=8), 'assertNotIn', Load(), lineno=389, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=389, col_offset=25), 'thetype', Load(), lineno=389, col_offset=25), [Attribute(Name('self', Load(), lineno=389, col_offset=38), 'word', Load(), lineno=389, col_offset=38)], [], None, None, lineno=389, col_offset=25), Name('s', Load(), lineno=389, col_offset=50)], [], None, None, lineno=389, col_offset=8), lineno=389, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=390, col_offset=8), 'assertRaises', Load(), lineno=390, col_offset=8), [Name('KeyError', Load(), lineno=390, col_offset=26), Attribute(Attribute(Name('self', Load(), lineno=390, col_offset=36), 's', Load(), lineno=390, col_offset=36), 'remove', Load(), lineno=390, col_offset=36), Call(Attribute(Name('self', Load(), lineno=390, col_offset=51), 'thetype', Load(), lineno=390, col_offset=51), [Attribute(Name('self', Load(), lineno=390, col_offset=64), 'word', Load(), lineno=390, col_offset=64)], [], None, None, lineno=390, col_offset=51)], [], None, None, lineno=390, col_offset=8), lineno=390, col_offset=8)], [], lineno=381, col_offset=4), FunctionDef('test_remove_keyerror_unpacking', arguments([Name('self', Param(), lineno=392, col_offset=39)], None, None, []), [For(Name('v1', Store(), lineno=394, col_offset=12), List([Str('Q', lineno=394, col_offset=19), Tuple([Num(1, lineno=394, col_offset=25)], Load(), lineno=394, col_offset=25)], Load(), lineno=394, col_offset=18), [TryExcept([Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=396, col_offset=16), 's', Load(), lineno=396, col_offset=16), 'remove', Load(), lineno=396, col_offset=16), [Name('v1', Load(), lineno=396, col_offset=30)], [], None, None, lineno=396, col_offset=16), lineno=396, col_offset=16)], [ExceptHandler(Name('KeyError', Load(), lineno=397, col_offset=19), Name('e', Store(), lineno=397, col_offset=29), [Assign([Name('v2', Store(), lineno=398, col_offset=16)], Subscript(Attribute(Name('e', Load(), lineno=398, col_offset=21), 'args', Load(), lineno=398, col_offset=21), Index(Num(0, lineno=398, col_offset=28)), Load(), lineno=398, col_offset=21), lineno=398, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=399, col_offset=16), 'assertEqual', Load(), lineno=399, col_offset=16), [Name('v1', Load(), lineno=399, col_offset=33), Name('v2', Load(), lineno=399, col_offset=37)], [], None, None, lineno=399, col_offset=16), lineno=399, col_offset=16)], lineno=397, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=401, col_offset=16), 'fail', Load(), lineno=401, col_offset=16), [], [], None, None, lineno=401, col_offset=16), lineno=401, col_offset=16)], lineno=395, col_offset=12)], [], lineno=394, col_offset=8)], [], lineno=392, col_offset=4), FunctionDef('test_remove_keyerror_set', arguments([Name('self', Param(), lineno=403, col_offset=33)], None, None, []), [Assign([Name('key', Store(), lineno=404, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=404, col_offset=14), 'thetype', Load(), lineno=404, col_offset=14), [List([Num(3, lineno=404, col_offset=28), Num(4, lineno=404, col_offset=31)], Load(), lineno=404, col_offset=27)], [], None, None, lineno=404, col_offset=14), lineno=404, col_offset=8), TryExcept([Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=406, col_offset=12), 's', Load(), lineno=406, col_offset=12), 'remove', Load(), lineno=406, col_offset=12), [Name('key', Load(), lineno=406, col_offset=26)], [], None, None, lineno=406, col_offset=12), lineno=406, col_offset=12)], [ExceptHandler(Name('KeyError', Load(), lineno=407, col_offset=15), Name('e', Store(), lineno=407, col_offset=27), [Expr(Call(Attribute(Name('self', Load(), lineno=408, col_offset=12), 'assertTrue', Load(), lineno=408, col_offset=12), [Compare(Subscript(Attribute(Name('e', Load(), lineno=408, col_offset=28), 'args', Load(), lineno=408, col_offset=28), Index(Num(0, lineno=408, col_offset=35)), Load(), lineno=408, col_offset=28), [Is()], [Name('key', Load(), lineno=408, col_offset=41)], lineno=408, col_offset=28), Call(Attribute(Str('KeyError should be {0}, not {1}', lineno=409, col_offset=25), 'format', Load(), lineno=409, col_offset=25), [Name('key', Load(), lineno=409, col_offset=66), Subscript(Attribute(Name('e', Load(), lineno=410, col_offset=66), 'args', Load(), lineno=410, col_offset=66), Index(Num(0, lineno=410, col_offset=73)), Load(), lineno=410, col_offset=66)], [], None, None, lineno=409, col_offset=25)], [], None, None, lineno=408, col_offset=12), lineno=408, col_offset=12)], lineno=407, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=412, col_offset=12), 'fail', Load(), lineno=412, col_offset=12), [], [], None, None, lineno=412, col_offset=12), lineno=412, col_offset=12)], lineno=405, col_offset=8)], [], lineno=403, col_offset=4), FunctionDef('test_discard', arguments([Name('self', Param(), lineno=414, col_offset=21)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=415, col_offset=8), 's', Load(), lineno=415, col_offset=8), 'discard', Load(), lineno=415, col_offset=8), [Str('a', lineno=415, col_offset=23)], [], None, None, lineno=415, col_offset=8), lineno=415, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=416, col_offset=8), 'assertNotIn', Load(), lineno=416, col_offset=8), [Str('a', lineno=416, col_offset=25), Attribute(Name('self', Load(), lineno=416, col_offset=30), 's', Load(), lineno=416, col_offset=30)], [], None, None, lineno=416, col_offset=8), lineno=416, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=417, col_offset=8), 's', Load(), lineno=417, col_offset=8), 'discard', Load(), lineno=417, col_offset=8), [Str('Q', lineno=417, col_offset=23)], [], None, None, lineno=417, col_offset=8), lineno=417, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=418, col_offset=8), 'assertRaises', Load(), lineno=418, col_offset=8), [Name('TypeError', Load(), lineno=418, col_offset=26), Attribute(Attribute(Name('self', Load(), lineno=418, col_offset=37), 's', Load(), lineno=418, col_offset=37), 'discard', Load(), lineno=418, col_offset=37), List([], Load(), lineno=418, col_offset=53)], [], None, None, lineno=418, col_offset=8), lineno=418, col_offset=8), Assign([Name('s', Store(), lineno=419, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=419, col_offset=12), 'thetype', Load(), lineno=419, col_offset=12), [List([Call(Name('frozenset', Load(), lineno=419, col_offset=26), [Attribute(Name('self', Load(), lineno=419, col_offset=36), 'word', Load(), lineno=419, col_offset=36)], [], None, None, lineno=419, col_offset=26)], Load(), lineno=419, col_offset=25)], [], None, None, lineno=419, col_offset=12), lineno=419, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=420, col_offset=8), 'assertIn', Load(), lineno=420, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=420, col_offset=22), 'thetype', Load(), lineno=420, col_offset=22), [Attribute(Name('self', Load(), lineno=420, col_offset=35), 'word', Load(), lineno=420, col_offset=35)], [], None, None, lineno=420, col_offset=22), Name('s', Load(), lineno=420, col_offset=47)], [], None, None, lineno=420, col_offset=8), lineno=420, col_offset=8), Expr(Call(Attribute(Name('s', Load(), lineno=421, col_offset=8), 'discard', Load(), lineno=421, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=421, col_offset=18), 'thetype', Load(), lineno=421, col_offset=18), [Attribute(Name('self', Load(), lineno=421, col_offset=31), 'word', Load(), lineno=421, col_offset=31)], [], None, None, lineno=421, col_offset=18)], [], None, None, lineno=421, col_offset=8), lineno=421, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=422, col_offset=8), 'assertNotIn', Load(), lineno=422, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=422, col_offset=25), 'thetype', Load(), lineno=422, col_offset=25), [Attribute(Name('self', Load(), lineno=422, col_offset=38), 'word', Load(), lineno=422, col_offset=38)], [], None, None, lineno=422, col_offset=25), Name('s', Load(), lineno=422, col_offset=50)], [], None, None, lineno=422, col_offset=8), lineno=422, col_offset=8), Expr(Call(Attribute(Name('s', Load(), lineno=423, col_offset=8), 'discard', Load(), lineno=423, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=423, col_offset=18), 'thetype', Load(), lineno=423, col_offset=18), [Attribute(Name('self', Load(), lineno=423, col_offset=31), 'word', Load(), lineno=423, col_offset=31)], [], None, None, lineno=423, col_offset=18)], [], None, None, lineno=423, col_offset=8), lineno=423, col_offset=8)], [], lineno=414, col_offset=4), FunctionDef('test_pop', arguments([Name('self', Param(), lineno=425, col_offset=17)], None, None, []), [For(Name('i', Store(), lineno=426, col_offset=12), Call(Name('xrange', Load(), lineno=426, col_offset=17), [Call(Name('len', Load(), lineno=426, col_offset=24), [Attribute(Name('self', Load(), lineno=426, col_offset=28), 's', Load(), lineno=426, col_offset=28)], [], None, None, lineno=426, col_offset=24)], [], None, None, lineno=426, col_offset=17), [Assign([Name('elem', Store(), lineno=427, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=427, col_offset=19), 's', Load(), lineno=427, col_offset=19), 'pop', Load(), lineno=427, col_offset=19), [], [], None, None, lineno=427, col_offset=19), lineno=427, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=428, col_offset=12), 'assertNotIn', Load(), lineno=428, col_offset=12), [Name('elem', Load(), lineno=428, col_offset=29), Attribute(Name('self', Load(), lineno=428, col_offset=35), 's', Load(), lineno=428, col_offset=35)], [], None, None, lineno=428, col_offset=12), lineno=428, col_offset=12)], [], lineno=426, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=429, col_offset=8), 'assertRaises', Load(), lineno=429, col_offset=8), [Name('KeyError', Load(), lineno=429, col_offset=26), Attribute(Attribute(Name('self', Load(), lineno=429, col_offset=36), 's', Load(), lineno=429, col_offset=36), 'pop', Load(), lineno=429, col_offset=36)], [], None, None, lineno=429, col_offset=8), lineno=429, col_offset=8)], [], lineno=425, col_offset=4), FunctionDef('test_update', arguments([Name('self', Param(), lineno=431, col_offset=20)], None, None, []), [Assign([Name('retval', Store(), lineno=432, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=432, col_offset=17), 's', Load(), lineno=432, col_offset=17), 'update', Load(), lineno=432, col_offset=17), [Attribute(Name('self', Load(), lineno=432, col_offset=31), 'otherword', Load(), lineno=432, col_offset=31)], [], None, None, lineno=432, col_offset=17), lineno=432, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=433, col_offset=8), 'assertEqual', Load(), lineno=433, col_offset=8), [Name('retval', Load(), lineno=433, col_offset=25), Name('None', Load(), lineno=433, col_offset=33)], [], None, None, lineno=433, col_offset=8), lineno=433, col_offset=8), For(Name('c', Store(), lineno=434, col_offset=12), BinOp(Attribute(Name('self', Load(), lineno=434, col_offset=18), 'word', Load(), lineno=434, col_offset=18), Add(), Attribute(Name('self', Load(), lineno=434, col_offset=30), 'otherword', Load(), lineno=434, col_offset=30), lineno=434, col_offset=18), [Expr(Call(Attribute(Name('self', Load(), lineno=435, col_offset=12), 'assertIn', Load(), lineno=435, col_offset=12), [Name('c', Load(), lineno=435, col_offset=26), Attribute(Name('self', Load(), lineno=435, col_offset=29), 's', Load(), lineno=435, col_offset=29)], [], None, None, lineno=435, col_offset=12), lineno=435, col_offset=12)], [], lineno=434, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=436, col_offset=8), 'assertRaises', Load(), lineno=436, col_offset=8), [Name('PassThru', Load(), lineno=436, col_offset=26), Attribute(Attribute(Name('self', Load(), lineno=436, col_offset=36), 's', Load(), lineno=436, col_offset=36), 'update', Load(), lineno=436, col_offset=36), Call(Name('check_pass_thru', Load(), lineno=436, col_offset=51), [], [], None, None, lineno=436, col_offset=51)], [], None, None, lineno=436, col_offset=8), lineno=436, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=437, col_offset=8), 'assertRaises', Load(), lineno=437, col_offset=8), [Name('TypeError', Load(), lineno=437, col_offset=26), Attribute(Attribute(Name('self', Load(), lineno=437, col_offset=37), 's', Load(), lineno=437, col_offset=37), 'update', Load(), lineno=437, col_offset=37), List([List([], Load(), lineno=437, col_offset=53)], Load(), lineno=437, col_offset=52)], [], None, None, lineno=437, col_offset=8), lineno=437, col_offset=8), For(Tuple([Name('p', Store(), lineno=438, col_offset=12), Name('q', Store(), lineno=438, col_offset=15)], Store(), lineno=438, col_offset=12), Tuple([Tuple([Str('cdc', lineno=438, col_offset=22), Str('abcd', lineno=438, col_offset=29)], Load(), lineno=438, col_offset=22), Tuple([Str('efgfe', lineno=438, col_offset=39), Str('abcefg', lineno=438, col_offset=48)], Load(), lineno=438, col_offset=39), Tuple([Str('ccb', lineno=438, col_offset=60), Str('abc', lineno=438, col_offset=67)], Load(), lineno=438, col_offset=60), Tuple([Str('ef', lineno=438, col_offset=76), Str('abcef', lineno=438, col_offset=82)], Load(), lineno=438, col_offset=76)], Load(), lineno=438, col_offset=21), [For(Name('C', Store(), lineno=439, col_offset=16), Tuple([Name('set', Load(), lineno=439, col_offset=21), Name('frozenset', Load(), lineno=439, col_offset=26), Attribute(Name('dict', Load(), lineno=439, col_offset=37), 'fromkeys', Load(), lineno=439, col_offset=37), Name('str', Load(), lineno=439, col_offset=52), Name('unicode', Load(), lineno=439, col_offset=57), Name('list', Load(), lineno=439, col_offset=66), Name('tuple', Load(), lineno=439, col_offset=72)], Load(), lineno=439, col_offset=21), [Assign([Name('s', Store(), lineno=440, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=440, col_offset=20), 'thetype', Load(), lineno=440, col_offset=20), [Str('abcba', lineno=440, col_offset=33)], [], None, None, lineno=440, col_offset=20), lineno=440, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=441, col_offset=16), 'assertEqual', Load(), lineno=441, col_offset=16), [Call(Attribute(Name('s', Load(), lineno=441, col_offset=33), 'update', Load(), lineno=441, col_offset=33), [Call(Name('C', Load(), lineno=441, col_offset=42), [Name('p', Load(), lineno=441, col_offset=44)], [], None, None, lineno=441, col_offset=42)], [], None, None, lineno=441, col_offset=33), Name('None', Load(), lineno=441, col_offset=49)], [], None, None, lineno=441, col_offset=16), lineno=441, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=442, col_offset=16), 'assertEqual', Load(), lineno=442, col_offset=16), [Name('s', Load(), lineno=442, col_offset=33), Call(Name('set', Load(), lineno=442, col_offset=36), [Name('q', Load(), lineno=442, col_offset=40)], [], None, None, lineno=442, col_offset=36)], [], None, None, lineno=442, col_offset=16), lineno=442, col_offset=16)], [], lineno=439, col_offset=12)], [], lineno=438, col_offset=8), For(Name('p', Store(), lineno=443, col_offset=12), Tuple([Str('cdc', lineno=443, col_offset=18), Str('efgfe', lineno=443, col_offset=25), Str('ccb', lineno=443, col_offset=34), Str('ef', lineno=443, col_offset=41), Str('abcda', lineno=443, col_offset=47)], Load(), lineno=443, col_offset=18), [Assign([Name('q', Store(), lineno=444, col_offset=12)], Str('ahi', lineno=444, col_offset=16), lineno=444, col_offset=12), For(Name('C', Store(), lineno=445, col_offset=16), Tuple([Name('set', Load(), lineno=445, col_offset=21), Name('frozenset', Load(), lineno=445, col_offset=26), Attribute(Name('dict', Load(), lineno=445, col_offset=37), 'fromkeys', Load(), lineno=445, col_offset=37), Name('str', Load(), lineno=445, col_offset=52), Name('unicode', Load(), lineno=445, col_offset=57), Name('list', Load(), lineno=445, col_offset=66), Name('tuple', Load(), lineno=445, col_offset=72)], Load(), lineno=445, col_offset=21), [Assign([Name('s', Store(), lineno=446, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=446, col_offset=20), 'thetype', Load(), lineno=446, col_offset=20), [Str('abcba', lineno=446, col_offset=33)], [], None, None, lineno=446, col_offset=20), lineno=446, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=447, col_offset=16), 'assertEqual', Load(), lineno=447, col_offset=16), [Call(Attribute(Name('s', Load(), lineno=447, col_offset=33), 'update', Load(), lineno=447, col_offset=33), [Call(Name('C', Load(), lineno=447, col_offset=42), [Name('p', Load(), lineno=447, col_offset=44)], [], None, None, lineno=447, col_offset=42), Call(Name('C', Load(), lineno=447, col_offset=48), [Name('q', Load(), lineno=447, col_offset=50)], [], None, None, lineno=447, col_offset=48)], [], None, None, lineno=447, col_offset=33), Name('None', Load(), lineno=447, col_offset=55)], [], None, None, lineno=447, col_offset=16), lineno=447, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=448, col_offset=16), 'assertEqual', Load(), lineno=448, col_offset=16), [Name('s', Load(), lineno=448, col_offset=33), BinOp(BinOp(Call(Name('set', Load(), lineno=448, col_offset=36), [Name('s', Load(), lineno=448, col_offset=40)], [], None, None, lineno=448, col_offset=36), BitOr(), Call(Name('set', Load(), lineno=448, col_offset=45), [Name('p', Load(), lineno=448, col_offset=49)], [], None, None, lineno=448, col_offset=45), lineno=448, col_offset=36), BitOr(), Call(Name('set', Load(), lineno=448, col_offset=54), [Name('q', Load(), lineno=448, col_offset=58)], [], None, None, lineno=448, col_offset=54), lineno=448, col_offset=52)], [], None, None, lineno=448, col_offset=16), lineno=448, col_offset=16)], [], lineno=445, col_offset=12)], [], lineno=443, col_offset=8)], [], lineno=431, col_offset=4), FunctionDef('test_ior', arguments([Name('self', Param(), lineno=450, col_offset=17)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=451, col_offset=8), 's', Store(), lineno=451, col_offset=8), BitOr(), Call(Name('set', Load(), lineno=451, col_offset=18), [Attribute(Name('self', Load(), lineno=451, col_offset=22), 'otherword', Load(), lineno=451, col_offset=22)], [], None, None, lineno=451, col_offset=18), lineno=451, col_offset=8), For(Name('c', Store(), lineno=452, col_offset=12), BinOp(Attribute(Name('self', Load(), lineno=452, col_offset=18), 'word', Load(), lineno=452, col_offset=18), Add(), Attribute(Name('self', Load(), lineno=452, col_offset=30), 'otherword', Load(), lineno=452, col_offset=30), lineno=452, col_offset=18), [Expr(Call(Attribute(Name('self', Load(), lineno=453, col_offset=12), 'assertIn', Load(), lineno=453, col_offset=12), [Name('c', Load(), lineno=453, col_offset=26), Attribute(Name('self', Load(), lineno=453, col_offset=29), 's', Load(), lineno=453, col_offset=29)], [], None, None, lineno=453, col_offset=12), lineno=453, col_offset=12)], [], lineno=452, col_offset=8)], [], lineno=450, col_offset=4), FunctionDef('test_intersection_update', arguments([Name('self', Param(), lineno=455, col_offset=33)], None, None, []), [Assign([Name('retval', Store(), lineno=456, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=456, col_offset=17), 's', Load(), lineno=456, col_offset=17), 'intersection_update', Load(), lineno=456, col_offset=17), [Attribute(Name('self', Load(), lineno=456, col_offset=44), 'otherword', Load(), lineno=456, col_offset=44)], [], None, None, lineno=456, col_offset=17), lineno=456, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=457, col_offset=8), 'assertEqual', Load(), lineno=457, col_offset=8), [Name('retval', Load(), lineno=457, col_offset=25), Name('None', Load(), lineno=457, col_offset=33)], [], None, None, lineno=457, col_offset=8), lineno=457, col_offset=8), For(Name('c', Store(), lineno=458, col_offset=12), BinOp(Attribute(Name('self', Load(), lineno=458, col_offset=18), 'word', Load(), lineno=458, col_offset=18), Add(), Attribute(Name('self', Load(), lineno=458, col_offset=30), 'otherword', Load(), lineno=458, col_offset=30), lineno=458, col_offset=18), [If(BoolOp(And(), [Compare(Name('c', Load(), lineno=459, col_offset=15), [In()], [Attribute(Name('self', Load(), lineno=459, col_offset=20), 'otherword', Load(), lineno=459, col_offset=20)], lineno=459, col_offset=15), Compare(Name('c', Load(), lineno=459, col_offset=39), [In()], [Attribute(Name('self', Load(), lineno=459, col_offset=44), 'word', Load(), lineno=459, col_offset=44)], lineno=459, col_offset=39)], lineno=459, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=460, col_offset=16), 'assertIn', Load(), lineno=460, col_offset=16), [Name('c', Load(), lineno=460, col_offset=30), Attribute(Name('self', Load(), lineno=460, col_offset=33), 's', Load(), lineno=460, col_offset=33)], [], None, None, lineno=460, col_offset=16), lineno=460, col_offset=16)], [Expr(Call(Attribute(Name('self', Load(), lineno=462, col_offset=16), 'assertNotIn', Load(), lineno=462, col_offset=16), [Name('c', Load(), lineno=462, col_offset=33), Attribute(Name('self', Load(), lineno=462, col_offset=36), 's', Load(), lineno=462, col_offset=36)], [], None, None, lineno=462, col_offset=16), lineno=462, col_offset=16)], lineno=459, col_offset=12)], [], lineno=458, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=463, col_offset=8), 'assertRaises', Load(), lineno=463, col_offset=8), [Name('PassThru', Load(), lineno=463, col_offset=26), Attribute(Attribute(Name('self', Load(), lineno=463, col_offset=36), 's', Load(), lineno=463, col_offset=36), 'intersection_update', Load(), lineno=463, col_offset=36), Call(Name('check_pass_thru', Load(), lineno=463, col_offset=64), [], [], None, None, lineno=463, col_offset=64)], [], None, None, lineno=463, col_offset=8), lineno=463, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=464, col_offset=8), 'assertRaises', Load(), lineno=464, col_offset=8), [Name('TypeError', Load(), lineno=464, col_offset=26), Attribute(Attribute(Name('self', Load(), lineno=464, col_offset=37), 's', Load(), lineno=464, col_offset=37), 'intersection_update', Load(), lineno=464, col_offset=37), List([List([], Load(), lineno=464, col_offset=66)], Load(), lineno=464, col_offset=65)], [], None, None, lineno=464, col_offset=8), lineno=464, col_offset=8), For(Tuple([Name('p', Store(), lineno=465, col_offset=12), Name('q', Store(), lineno=465, col_offset=15)], Store(), lineno=465, col_offset=12), Tuple([Tuple([Str('cdc', lineno=465, col_offset=22), Str('c', lineno=465, col_offset=29)], Load(), lineno=465, col_offset=22), Tuple([Str('efgfe', lineno=465, col_offset=36), Str('', lineno=465, col_offset=45)], Load(), lineno=465, col_offset=36), Tuple([Str('ccb', lineno=465, col_offset=51), Str('bc', lineno=465, col_offset=58)], Load(), lineno=465, col_offset=51), Tuple([Str('ef', lineno=465, col_offset=66), Str('', lineno=465, col_offset=72)], Load(), lineno=465, col_offset=66)], Load(), lineno=465, col_offset=21), [For(Name('C', Store(), lineno=466, col_offset=16), Tuple([Name('set', Load(), lineno=466, col_offset=21), Name('frozenset', Load(), lineno=466, col_offset=26), Attribute(Name('dict', Load(), lineno=466, col_offset=37), 'fromkeys', Load(), lineno=466, col_offset=37), Name('str', Load(), lineno=466, col_offset=52), Name('unicode', Load(), lineno=466, col_offset=57), Name('list', Load(), lineno=466, col_offset=66), Name('tuple', Load(), lineno=466, col_offset=72)], Load(), lineno=466, col_offset=21), [Assign([Name('s', Store(), lineno=467, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=467, col_offset=20), 'thetype', Load(), lineno=467, col_offset=20), [Str('abcba', lineno=467, col_offset=33)], [], None, None, lineno=467, col_offset=20), lineno=467, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=468, col_offset=16), 'assertEqual', Load(), lineno=468, col_offset=16), [Call(Attribute(Name('s', Load(), lineno=468, col_offset=33), 'intersection_update', Load(), lineno=468, col_offset=33), [Call(Name('C', Load(), lineno=468, col_offset=55), [Name('p', Load(), lineno=468, col_offset=57)], [], None, None, lineno=468, col_offset=55)], [], None, None, lineno=468, col_offset=33), Name('None', Load(), lineno=468, col_offset=62)], [], None, None, lineno=468, col_offset=16), lineno=468, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=469, col_offset=16), 'assertEqual', Load(), lineno=469, col_offset=16), [Name('s', Load(), lineno=469, col_offset=33), Call(Name('set', Load(), lineno=469, col_offset=36), [Name('q', Load(), lineno=469, col_offset=40)], [], None, None, lineno=469, col_offset=36)], [], None, None, lineno=469, col_offset=16), lineno=469, col_offset=16), Assign([Name('ss', Store(), lineno=470, col_offset=16)], Str('abcba', lineno=470, col_offset=21), lineno=470, col_offset=16), Assign([Name('s', Store(), lineno=471, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=471, col_offset=20), 'thetype', Load(), lineno=471, col_offset=20), [Name('ss', Load(), lineno=471, col_offset=33)], [], None, None, lineno=471, col_offset=20), lineno=471, col_offset=16), Assign([Name('t', Store(), lineno=472, col_offset=16)], Str('cbc', lineno=472, col_offset=20), lineno=472, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=473, col_offset=16), 'assertEqual', Load(), lineno=473, col_offset=16), [Call(Attribute(Name('s', Load(), lineno=473, col_offset=33), 'intersection_update', Load(), lineno=473, col_offset=33), [Call(Name('C', Load(), lineno=473, col_offset=55), [Name('p', Load(), lineno=473, col_offset=57)], [], None, None, lineno=473, col_offset=55), Call(Name('C', Load(), lineno=473, col_offset=61), [Name('t', Load(), lineno=473, col_offset=63)], [], None, None, lineno=473, col_offset=61)], [], None, None, lineno=473, col_offset=33), Name('None', Load(), lineno=473, col_offset=68)], [], None, None, lineno=473, col_offset=16), lineno=473, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=474, col_offset=16), 'assertEqual', Load(), lineno=474, col_offset=16), [Name('s', Load(), lineno=474, col_offset=33), BinOp(BinOp(Call(Name('set', Load(), lineno=474, col_offset=36), [Str('abcba', lineno=474, col_offset=40)], [], None, None, lineno=474, col_offset=36), BitAnd(), Call(Name('set', Load(), lineno=474, col_offset=49), [Name('p', Load(), lineno=474, col_offset=53)], [], None, None, lineno=474, col_offset=49), lineno=474, col_offset=36), BitAnd(), Call(Name('set', Load(), lineno=474, col_offset=56), [Name('t', Load(), lineno=474, col_offset=60)], [], None, None, lineno=474, col_offset=56), lineno=474, col_offset=55)], [], None, None, lineno=474, col_offset=16), lineno=474, col_offset=16)], [], lineno=466, col_offset=12)], [], lineno=465, col_offset=8)], [], lineno=455, col_offset=4), FunctionDef('test_iand', arguments([Name('self', Param(), lineno=476, col_offset=18)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=477, col_offset=8), 's', Store(), lineno=477, col_offset=8), BitAnd(), Call(Name('set', Load(), lineno=477, col_offset=18), [Attribute(Name('self', Load(), lineno=477, col_offset=22), 'otherword', Load(), lineno=477, col_offset=22)], [], None, None, lineno=477, col_offset=18), lineno=477, col_offset=8), For(Name('c', Store(), lineno=478, col_offset=12), BinOp(Attribute(Name('self', Load(), lineno=478, col_offset=18), 'word', Load(), lineno=478, col_offset=18), Add(), Attribute(Name('self', Load(), lineno=478, col_offset=30), 'otherword', Load(), lineno=478, col_offset=30), lineno=478, col_offset=18), [If(BoolOp(And(), [Compare(Name('c', Load(), lineno=479, col_offset=15), [In()], [Attribute(Name('self', Load(), lineno=479, col_offset=20), 'otherword', Load(), lineno=479, col_offset=20)], lineno=479, col_offset=15), Compare(Name('c', Load(), lineno=479, col_offset=39), [In()], [Attribute(Name('self', Load(), lineno=479, col_offset=44), 'word', Load(), lineno=479, col_offset=44)], lineno=479, col_offset=39)], lineno=479, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=480, col_offset=16), 'assertIn', Load(), lineno=480, col_offset=16), [Name('c', Load(), lineno=480, col_offset=30), Attribute(Name('self', Load(), lineno=480, col_offset=33), 's', Load(), lineno=480, col_offset=33)], [], None, None, lineno=480, col_offset=16), lineno=480, col_offset=16)], [Expr(Call(Attribute(Name('self', Load(), lineno=482, col_offset=16), 'assertNotIn', Load(), lineno=482, col_offset=16), [Name('c', Load(), lineno=482, col_offset=33), Attribute(Name('self', Load(), lineno=482, col_offset=36), 's', Load(), lineno=482, col_offset=36)], [], None, None, lineno=482, col_offset=16), lineno=482, col_offset=16)], lineno=479, col_offset=12)], [], lineno=478, col_offset=8)], [], lineno=476, col_offset=4), FunctionDef('test_difference_update', arguments([Name('self', Param(), lineno=484, col_offset=31)], None, None, []), [Assign([Name('retval', Store(), lineno=485, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=485, col_offset=17), 's', Load(), lineno=485, col_offset=17), 'difference_update', Load(), lineno=485, col_offset=17), [Attribute(Name('self', Load(), lineno=485, col_offset=42), 'otherword', Load(), lineno=485, col_offset=42)], [], None, None, lineno=485, col_offset=17), lineno=485, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=486, col_offset=8), 'assertEqual', Load(), lineno=486, col_offset=8), [Name('retval', Load(), lineno=486, col_offset=25), Name('None', Load(), lineno=486, col_offset=33)], [], None, None, lineno=486, col_offset=8), lineno=486, col_offset=8), For(Name('c', Store(), lineno=487, col_offset=12), BinOp(Attribute(Name('self', Load(), lineno=487, col_offset=18), 'word', Load(), lineno=487, col_offset=18), Add(), Attribute(Name('self', Load(), lineno=487, col_offset=30), 'otherword', Load(), lineno=487, col_offset=30), lineno=487, col_offset=18), [If(BoolOp(And(), [Compare(Name('c', Load(), lineno=488, col_offset=15), [In()], [Attribute(Name('self', Load(), lineno=488, col_offset=20), 'word', Load(), lineno=488, col_offset=20)], lineno=488, col_offset=15), Compare(Name('c', Load(), lineno=488, col_offset=34), [NotIn()], [Attribute(Name('self', Load(), lineno=488, col_offset=43), 'otherword', Load(), lineno=488, col_offset=43)], lineno=488, col_offset=34)], lineno=488, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=489, col_offset=16), 'assertIn', Load(), lineno=489, col_offset=16), [Name('c', Load(), lineno=489, col_offset=30), Attribute(Name('self', Load(), lineno=489, col_offset=33), 's', Load(), lineno=489, col_offset=33)], [], None, None, lineno=489, col_offset=16), lineno=489, col_offset=16)], [Expr(Call(Attribute(Name('self', Load(), lineno=491, col_offset=16), 'assertNotIn', Load(), lineno=491, col_offset=16), [Name('c', Load(), lineno=491, col_offset=33), Attribute(Name('self', Load(), lineno=491, col_offset=36), 's', Load(), lineno=491, col_offset=36)], [], None, None, lineno=491, col_offset=16), lineno=491, col_offset=16)], lineno=488, col_offset=12)], [], lineno=487, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=492, col_offset=8), 'assertRaises', Load(), lineno=492, col_offset=8), [Name('PassThru', Load(), lineno=492, col_offset=26), Attribute(Attribute(Name('self', Load(), lineno=492, col_offset=36), 's', Load(), lineno=492, col_offset=36), 'difference_update', Load(), lineno=492, col_offset=36), Call(Name('check_pass_thru', Load(), lineno=492, col_offset=62), [], [], None, None, lineno=492, col_offset=62)], [], None, None, lineno=492, col_offset=8), lineno=492, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=493, col_offset=8), 'assertRaises', Load(), lineno=493, col_offset=8), [Name('TypeError', Load(), lineno=493, col_offset=26), Attribute(Attribute(Name('self', Load(), lineno=493, col_offset=37), 's', Load(), lineno=493, col_offset=37), 'difference_update', Load(), lineno=493, col_offset=37), List([List([], Load(), lineno=493, col_offset=64)], Load(), lineno=493, col_offset=63)], [], None, None, lineno=493, col_offset=8), lineno=493, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=494, col_offset=8), 'assertRaises', Load(), lineno=494, col_offset=8), [Name('TypeError', Load(), lineno=494, col_offset=26), Attribute(Attribute(Name('self', Load(), lineno=494, col_offset=37), 's', Load(), lineno=494, col_offset=37), 'symmetric_difference_update', Load(), lineno=494, col_offset=37), List([List([], Load(), lineno=494, col_offset=74)], Load(), lineno=494, col_offset=73)], [], None, None, lineno=494, col_offset=8), lineno=494, col_offset=8), For(Tuple([Name('p', Store(), lineno=495, col_offset=12), Name('q', Store(), lineno=495, col_offset=15)], Store(), lineno=495, col_offset=12), Tuple([Tuple([Str('cdc', lineno=495, col_offset=22), Str('ab', lineno=495, col_offset=29)], Load(), lineno=495, col_offset=22), Tuple([Str('efgfe', lineno=495, col_offset=37), Str('abc', lineno=495, col_offset=46)], Load(), lineno=495, col_offset=37), Tuple([Str('ccb', lineno=495, col_offset=55), Str('a', lineno=495, col_offset=62)], Load(), lineno=495, col_offset=55), Tuple([Str('ef', lineno=495, col_offset=69), Str('abc', lineno=495, col_offset=75)], Load(), lineno=495, col_offset=69)], Load(), lineno=495, col_offset=21), [For(Name('C', Store(), lineno=496, col_offset=16), Tuple([Name('set', Load(), lineno=496, col_offset=21), Name('frozenset', Load(), lineno=496, col_offset=26), Attribute(Name('dict', Load(), lineno=496, col_offset=37), 'fromkeys', Load(), lineno=496, col_offset=37), Name('str', Load(), lineno=496, col_offset=52), Name('unicode', Load(), lineno=496, col_offset=57), Name('list', Load(), lineno=496, col_offset=66), Name('tuple', Load(), lineno=496, col_offset=72)], Load(), lineno=496, col_offset=21), [Assign([Name('s', Store(), lineno=497, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=497, col_offset=20), 'thetype', Load(), lineno=497, col_offset=20), [Str('abcba', lineno=497, col_offset=33)], [], None, None, lineno=497, col_offset=20), lineno=497, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=498, col_offset=16), 'assertEqual', Load(), lineno=498, col_offset=16), [Call(Attribute(Name('s', Load(), lineno=498, col_offset=33), 'difference_update', Load(), lineno=498, col_offset=33), [Call(Name('C', Load(), lineno=498, col_offset=53), [Name('p', Load(), lineno=498, col_offset=55)], [], None, None, lineno=498, col_offset=53)], [], None, None, lineno=498, col_offset=33), Name('None', Load(), lineno=498, col_offset=60)], [], None, None, lineno=498, col_offset=16), lineno=498, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=499, col_offset=16), 'assertEqual', Load(), lineno=499, col_offset=16), [Name('s', Load(), lineno=499, col_offset=33), Call(Name('set', Load(), lineno=499, col_offset=36), [Name('q', Load(), lineno=499, col_offset=40)], [], None, None, lineno=499, col_offset=36)], [], None, None, lineno=499, col_offset=16), lineno=499, col_offset=16), Assign([Name('s', Store(), lineno=501, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=501, col_offset=20), 'thetype', Load(), lineno=501, col_offset=20), [Str('abcdefghih', lineno=501, col_offset=33)], [], None, None, lineno=501, col_offset=20), lineno=501, col_offset=16), Expr(Call(Attribute(Name('s', Load(), lineno=502, col_offset=16), 'difference_update', Load(), lineno=502, col_offset=16), [], [], None, None, lineno=502, col_offset=16), lineno=502, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=503, col_offset=16), 'assertEqual', Load(), lineno=503, col_offset=16), [Name('s', Load(), lineno=503, col_offset=33), Call(Attribute(Name('self', Load(), lineno=503, col_offset=36), 'thetype', Load(), lineno=503, col_offset=36), [Str('abcdefghih', lineno=503, col_offset=49)], [], None, None, lineno=503, col_offset=36)], [], None, None, lineno=503, col_offset=16), lineno=503, col_offset=16), Assign([Name('s', Store(), lineno=505, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=505, col_offset=20), 'thetype', Load(), lineno=505, col_offset=20), [Str('abcdefghih', lineno=505, col_offset=33)], [], None, None, lineno=505, col_offset=20), lineno=505, col_offset=16), Expr(Call(Attribute(Name('s', Load(), lineno=506, col_offset=16), 'difference_update', Load(), lineno=506, col_offset=16), [Call(Name('C', Load(), lineno=506, col_offset=36), [Str('aba', lineno=506, col_offset=38)], [], None, None, lineno=506, col_offset=36)], [], None, None, lineno=506, col_offset=16), lineno=506, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=507, col_offset=16), 'assertEqual', Load(), lineno=507, col_offset=16), [Name('s', Load(), lineno=507, col_offset=33), Call(Attribute(Name('self', Load(), lineno=507, col_offset=36), 'thetype', Load(), lineno=507, col_offset=36), [Str('cdefghih', lineno=507, col_offset=49)], [], None, None, lineno=507, col_offset=36)], [], None, None, lineno=507, col_offset=16), lineno=507, col_offset=16), Assign([Name('s', Store(), lineno=509, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=509, col_offset=20), 'thetype', Load(), lineno=509, col_offset=20), [Str('abcdefghih', lineno=509, col_offset=33)], [], None, None, lineno=509, col_offset=20), lineno=509, col_offset=16), Expr(Call(Attribute(Name('s', Load(), lineno=510, col_offset=16), 'difference_update', Load(), lineno=510, col_offset=16), [Call(Name('C', Load(), lineno=510, col_offset=36), [Str('cdc', lineno=510, col_offset=38)], [], None, None, lineno=510, col_offset=36), Call(Name('C', Load(), lineno=510, col_offset=46), [Str('aba', lineno=510, col_offset=48)], [], None, None, lineno=510, col_offset=46)], [], None, None, lineno=510, col_offset=16), lineno=510, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=511, col_offset=16), 'assertEqual', Load(), lineno=511, col_offset=16), [Name('s', Load(), lineno=511, col_offset=33), Call(Attribute(Name('self', Load(), lineno=511, col_offset=36), 'thetype', Load(), lineno=511, col_offset=36), [Str('efghih', lineno=511, col_offset=49)], [], None, None, lineno=511, col_offset=36)], [], None, None, lineno=511, col_offset=16), lineno=511, col_offset=16)], [], lineno=496, col_offset=12)], [], lineno=495, col_offset=8)], [], lineno=484, col_offset=4), FunctionDef('test_isub', arguments([Name('self', Param(), lineno=513, col_offset=18)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=514, col_offset=8), 's', Store(), lineno=514, col_offset=8), Sub(), Call(Name('set', Load(), lineno=514, col_offset=18), [Attribute(Name('self', Load(), lineno=514, col_offset=22), 'otherword', Load(), lineno=514, col_offset=22)], [], None, None, lineno=514, col_offset=18), lineno=514, col_offset=8), For(Name('c', Store(), lineno=515, col_offset=12), BinOp(Attribute(Name('self', Load(), lineno=515, col_offset=18), 'word', Load(), lineno=515, col_offset=18), Add(), Attribute(Name('self', Load(), lineno=515, col_offset=30), 'otherword', Load(), lineno=515, col_offset=30), lineno=515, col_offset=18), [If(BoolOp(And(), [Compare(Name('c', Load(), lineno=516, col_offset=15), [In()], [Attribute(Name('self', Load(), lineno=516, col_offset=20), 'word', Load(), lineno=516, col_offset=20)], lineno=516, col_offset=15), Compare(Name('c', Load(), lineno=516, col_offset=34), [NotIn()], [Attribute(Name('self', Load(), lineno=516, col_offset=43), 'otherword', Load(), lineno=516, col_offset=43)], lineno=516, col_offset=34)], lineno=516, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=517, col_offset=16), 'assertIn', Load(), lineno=517, col_offset=16), [Name('c', Load(), lineno=517, col_offset=30), Attribute(Name('self', Load(), lineno=517, col_offset=33), 's', Load(), lineno=517, col_offset=33)], [], None, None, lineno=517, col_offset=16), lineno=517, col_offset=16)], [Expr(Call(Attribute(Name('self', Load(), lineno=519, col_offset=16), 'assertNotIn', Load(), lineno=519, col_offset=16), [Name('c', Load(), lineno=519, col_offset=33), Attribute(Name('self', Load(), lineno=519, col_offset=36), 's', Load(), lineno=519, col_offset=36)], [], None, None, lineno=519, col_offset=16), lineno=519, col_offset=16)], lineno=516, col_offset=12)], [], lineno=515, col_offset=8)], [], lineno=513, col_offset=4), FunctionDef('test_symmetric_difference_update', arguments([Name('self', Param(), lineno=521, col_offset=41)], None, None, []), [Assign([Name('retval', Store(), lineno=522, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=522, col_offset=17), 's', Load(), lineno=522, col_offset=17), 'symmetric_difference_update', Load(), lineno=522, col_offset=17), [Attribute(Name('self', Load(), lineno=522, col_offset=52), 'otherword', Load(), lineno=522, col_offset=52)], [], None, None, lineno=522, col_offset=17), lineno=522, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=523, col_offset=8), 'assertEqual', Load(), lineno=523, col_offset=8), [Name('retval', Load(), lineno=523, col_offset=25), Name('None', Load(), lineno=523, col_offset=33)], [], None, None, lineno=523, col_offset=8), lineno=523, col_offset=8), For(Name('c', Store(), lineno=524, col_offset=12), BinOp(Attribute(Name('self', Load(), lineno=524, col_offset=18), 'word', Load(), lineno=524, col_offset=18), Add(), Attribute(Name('self', Load(), lineno=524, col_offset=30), 'otherword', Load(), lineno=524, col_offset=30), lineno=524, col_offset=18), [If(BinOp(Compare(Name('c', Load(), lineno=525, col_offset=16), [In()], [Attribute(Name('self', Load(), lineno=525, col_offset=21), 'word', Load(), lineno=525, col_offset=21)], lineno=525, col_offset=16), BitXor(), Compare(Name('c', Load(), lineno=525, col_offset=35), [In()], [Attribute(Name('self', Load(), lineno=525, col_offset=40), 'otherword', Load(), lineno=525, col_offset=40)], lineno=525, col_offset=35), lineno=525, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=526, col_offset=16), 'assertIn', Load(), lineno=526, col_offset=16), [Name('c', Load(), lineno=526, col_offset=30), Attribute(Name('self', Load(), lineno=526, col_offset=33), 's', Load(), lineno=526, col_offset=33)], [], None, None, lineno=526, col_offset=16), lineno=526, col_offset=16)], [Expr(Call(Attribute(Name('self', Load(), lineno=528, col_offset=16), 'assertNotIn', Load(), lineno=528, col_offset=16), [Name('c', Load(), lineno=528, col_offset=33), Attribute(Name('self', Load(), lineno=528, col_offset=36), 's', Load(), lineno=528, col_offset=36)], [], None, None, lineno=528, col_offset=16), lineno=528, col_offset=16)], lineno=525, col_offset=12)], [], lineno=524, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=529, col_offset=8), 'assertRaises', Load(), lineno=529, col_offset=8), [Name('PassThru', Load(), lineno=529, col_offset=26), Attribute(Attribute(Name('self', Load(), lineno=529, col_offset=36), 's', Load(), lineno=529, col_offset=36), 'symmetric_difference_update', Load(), lineno=529, col_offset=36), Call(Name('check_pass_thru', Load(), lineno=529, col_offset=72), [], [], None, None, lineno=529, col_offset=72)], [], None, None, lineno=529, col_offset=8), lineno=529, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=530, col_offset=8), 'assertRaises', Load(), lineno=530, col_offset=8), [Name('TypeError', Load(), lineno=530, col_offset=26), Attribute(Attribute(Name('self', Load(), lineno=530, col_offset=37), 's', Load(), lineno=530, col_offset=37), 'symmetric_difference_update', Load(), lineno=530, col_offset=37), List([List([], Load(), lineno=530, col_offset=74)], Load(), lineno=530, col_offset=73)], [], None, None, lineno=530, col_offset=8), lineno=530, col_offset=8), For(Tuple([Name('p', Store(), lineno=531, col_offset=12), Name('q', Store(), lineno=531, col_offset=15)], Store(), lineno=531, col_offset=12), Tuple([Tuple([Str('cdc', lineno=531, col_offset=22), Str('abd', lineno=531, col_offset=29)], Load(), lineno=531, col_offset=22), Tuple([Str('efgfe', lineno=531, col_offset=38), Str('abcefg', lineno=531, col_offset=47)], Load(), lineno=531, col_offset=38), Tuple([Str('ccb', lineno=531, col_offset=59), Str('a', lineno=531, col_offset=66)], Load(), lineno=531, col_offset=59), Tuple([Str('ef', lineno=531, col_offset=73), Str('abcef', lineno=531, col_offset=79)], Load(), lineno=531, col_offset=73)], Load(), lineno=531, col_offset=21), [For(Name('C', Store(), lineno=532, col_offset=16), Tuple([Name('set', Load(), lineno=532, col_offset=21), Name('frozenset', Load(), lineno=532, col_offset=26), Attribute(Name('dict', Load(), lineno=532, col_offset=37), 'fromkeys', Load(), lineno=532, col_offset=37), Name('str', Load(), lineno=532, col_offset=52), Name('unicode', Load(), lineno=532, col_offset=57), Name('list', Load(), lineno=532, col_offset=66), Name('tuple', Load(), lineno=532, col_offset=72)], Load(), lineno=532, col_offset=21), [Assign([Name('s', Store(), lineno=533, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=533, col_offset=20), 'thetype', Load(), lineno=533, col_offset=20), [Str('abcba', lineno=533, col_offset=33)], [], None, None, lineno=533, col_offset=20), lineno=533, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=534, col_offset=16), 'assertEqual', Load(), lineno=534, col_offset=16), [Call(Attribute(Name('s', Load(), lineno=534, col_offset=33), 'symmetric_difference_update', Load(), lineno=534, col_offset=33), [Call(Name('C', Load(), lineno=534, col_offset=63), [Name('p', Load(), lineno=534, col_offset=65)], [], None, None, lineno=534, col_offset=63)], [], None, None, lineno=534, col_offset=33), Name('None', Load(), lineno=534, col_offset=70)], [], None, None, lineno=534, col_offset=16), lineno=534, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=535, col_offset=16), 'assertEqual', Load(), lineno=535, col_offset=16), [Name('s', Load(), lineno=535, col_offset=33), Call(Name('set', Load(), lineno=535, col_offset=36), [Name('q', Load(), lineno=535, col_offset=40)], [], None, None, lineno=535, col_offset=36)], [], None, None, lineno=535, col_offset=16), lineno=535, col_offset=16)], [], lineno=532, col_offset=12)], [], lineno=531, col_offset=8)], [], lineno=521, col_offset=4), FunctionDef('test_ixor', arguments([Name('self', Param(), lineno=537, col_offset=18)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=538, col_offset=8), 's', Store(), lineno=538, col_offset=8), BitXor(), Call(Name('set', Load(), lineno=538, col_offset=18), [Attribute(Name('self', Load(), lineno=538, col_offset=22), 'otherword', Load(), lineno=538, col_offset=22)], [], None, None, lineno=538, col_offset=18), lineno=538, col_offset=8), For(Name('c', Store(), lineno=539, col_offset=12), BinOp(Attribute(Name('self', Load(), lineno=539, col_offset=18), 'word', Load(), lineno=539, col_offset=18), Add(), Attribute(Name('self', Load(), lineno=539, col_offset=30), 'otherword', Load(), lineno=539, col_offset=30), lineno=539, col_offset=18), [If(BinOp(Compare(Name('c', Load(), lineno=540, col_offset=16), [In()], [Attribute(Name('self', Load(), lineno=540, col_offset=21), 'word', Load(), lineno=540, col_offset=21)], lineno=540, col_offset=16), BitXor(), Compare(Name('c', Load(), lineno=540, col_offset=35), [In()], [Attribute(Name('self', Load(), lineno=540, col_offset=40), 'otherword', Load(), lineno=540, col_offset=40)], lineno=540, col_offset=35), lineno=540, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=541, col_offset=16), 'assertIn', Load(), lineno=541, col_offset=16), [Name('c', Load(), lineno=541, col_offset=30), Attribute(Name('self', Load(), lineno=541, col_offset=33), 's', Load(), lineno=541, col_offset=33)], [], None, None, lineno=541, col_offset=16), lineno=541, col_offset=16)], [Expr(Call(Attribute(Name('self', Load(), lineno=543, col_offset=16), 'assertNotIn', Load(), lineno=543, col_offset=16), [Name('c', Load(), lineno=543, col_offset=33), Attribute(Name('self', Load(), lineno=543, col_offset=36), 's', Load(), lineno=543, col_offset=36)], [], None, None, lineno=543, col_offset=16), lineno=543, col_offset=16)], lineno=540, col_offset=12)], [], lineno=539, col_offset=8)], [], lineno=537, col_offset=4), FunctionDef('test_inplace_on_self', arguments([Name('self', Param(), lineno=545, col_offset=29)], None, None, []), [Assign([Name('t', Store(), lineno=546, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=546, col_offset=12), 's', Load(), lineno=546, col_offset=12), 'copy', Load(), lineno=546, col_offset=12), [], [], None, None, lineno=546, col_offset=12), lineno=546, col_offset=8), AugAssign(Name('t', Store(), lineno=547, col_offset=8), BitOr(), Name('t', Load(), lineno=547, col_offset=13), lineno=547, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=548, col_offset=8), 'assertEqual', Load(), lineno=548, col_offset=8), [Name('t', Load(), lineno=548, col_offset=25), Attribute(Name('self', Load(), lineno=548, col_offset=28), 's', Load(), lineno=548, col_offset=28)], [], None, None, lineno=548, col_offset=8), lineno=548, col_offset=8), AugAssign(Name('t', Store(), lineno=549, col_offset=8), BitAnd(), Name('t', Load(), lineno=549, col_offset=13), lineno=549, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=550, col_offset=8), 'assertEqual', Load(), lineno=550, col_offset=8), [Name('t', Load(), lineno=550, col_offset=25), Attribute(Name('self', Load(), lineno=550, col_offset=28), 's', Load(), lineno=550, col_offset=28)], [], None, None, lineno=550, col_offset=8), lineno=550, col_offset=8), AugAssign(Name('t', Store(), lineno=551, col_offset=8), Sub(), Name('t', Load(), lineno=551, col_offset=13), lineno=551, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=552, col_offset=8), 'assertEqual', Load(), lineno=552, col_offset=8), [Name('t', Load(), lineno=552, col_offset=25), Call(Attribute(Name('self', Load(), lineno=552, col_offset=28), 'thetype', Load(), lineno=552, col_offset=28), [], [], None, None, lineno=552, col_offset=28)], [], None, None, lineno=552, col_offset=8), lineno=552, col_offset=8), Assign([Name('t', Store(), lineno=553, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=553, col_offset=12), 's', Load(), lineno=553, col_offset=12), 'copy', Load(), lineno=553, col_offset=12), [], [], None, None, lineno=553, col_offset=12), lineno=553, col_offset=8), AugAssign(Name('t', Store(), lineno=554, col_offset=8), BitXor(), Name('t', Load(), lineno=554, col_offset=13), lineno=554, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=555, col_offset=8), 'assertEqual', Load(), lineno=555, col_offset=8), [Name('t', Load(), lineno=555, col_offset=25), Call(Attribute(Name('self', Load(), lineno=555, col_offset=28), 'thetype', Load(), lineno=555, col_offset=28), [], [], None, None, lineno=555, col_offset=28)], [], None, None, lineno=555, col_offset=8), lineno=555, col_offset=8)], [], lineno=545, col_offset=4), FunctionDef('test_weakref', arguments([Name('self', Param(), lineno=557, col_offset=21)], None, None, []), [Assign([Name('s', Store(), lineno=558, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=558, col_offset=12), 'thetype', Load(), lineno=558, col_offset=12), [Str('gallahad', lineno=558, col_offset=25)], [], None, None, lineno=558, col_offset=12), lineno=558, col_offset=8), Assign([Name('p', Store(), lineno=559, col_offset=8)], Call(Attribute(Name('weakref', Load(), lineno=559, col_offset=12), 'proxy', Load(), lineno=559, col_offset=12), [Name('s', Load(), lineno=559, col_offset=26)], [], None, None, lineno=559, col_offset=12), lineno=559, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=560, col_offset=8), 'assertEqual', Load(), lineno=560, col_offset=8), [Call(Name('str', Load(), lineno=560, col_offset=25), [Name('p', Load(), lineno=560, col_offset=29)], [], None, None, lineno=560, col_offset=25), Call(Name('str', Load(), lineno=560, col_offset=33), [Name('s', Load(), lineno=560, col_offset=37)], [], None, None, lineno=560, col_offset=33)], [], None, None, lineno=560, col_offset=8), lineno=560, col_offset=8), Assign([Name('s', Store(), lineno=561, col_offset=8)], Name('None', Load(), lineno=561, col_offset=12), lineno=561, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=562, col_offset=8), 'assertRaises', Load(), lineno=562, col_offset=8), [Name('ReferenceError', Load(), lineno=562, col_offset=26), Name('str', Load(), lineno=562, col_offset=42), Name('p', Load(), lineno=562, col_offset=47)], [], None, None, lineno=562, col_offset=8), lineno=562, col_offset=8)], [], lineno=557, col_offset=4), If(Call(Name('hasattr', Load(), lineno=565, col_offset=7), [Name('set', Load(), lineno=565, col_offset=15), Str('test_c_api', lineno=565, col_offset=20)], [], None, None, lineno=565, col_offset=7), [FunctionDef('test_c_api', arguments([Name('self', Param(), lineno=566, col_offset=23)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=567, col_offset=12), 'assertEqual', Load(), lineno=567, col_offset=12), [Call(Attribute(Call(Name('set', Load(), lineno=567, col_offset=29), [], [], None, None, lineno=567, col_offset=29), 'test_c_api', Load(), lineno=567, col_offset=29), [], [], None, None, lineno=567, col_offset=29), Name('True', Load(), lineno=567, col_offset=49)], [], None, None, lineno=567, col_offset=12), lineno=567, col_offset=12)], [], lineno=566, col_offset=8)], [], lineno=565, col_offset=4)], [], lineno=343, col_offset=0), ClassDef('SetSubclass', [Name('set', Load(), lineno=569, col_offset=18)], [Pass( lineno=570, col_offset=4)], [], lineno=569, col_offset=0), ClassDef('TestSetSubclass', [Name('TestSet', Load(), lineno=572, col_offset=22)], [Assign([Name('thetype', Store(), lineno=573, col_offset=4)], Name('SetSubclass', Load(), lineno=573, col_offset=14), lineno=573, col_offset=4)], [], lineno=572, col_offset=0), ClassDef('SetSubclassWithKeywordArgs', [Name('set', Load(), lineno=575, col_offset=33)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=576, col_offset=17), Name('iterable', Param(), lineno=576, col_offset=23), Name('newarg', Param(), lineno=576, col_offset=36)], None, None, [List([], Load(), lineno=576, col_offset=32), Name('None', Load(), lineno=576, col_offset=43)]), [Expr(Call(Attribute(Name('set', Load(), lineno=577, col_offset=8), '__init__', Load(), lineno=577, col_offset=8), [Name('self', Load(), lineno=577, col_offset=21), Name('iterable', Load(), lineno=577, col_offset=27)], [], None, None, lineno=577, col_offset=8), lineno=577, col_offset=8)], [], lineno=576, col_offset=4)], [], lineno=575, col_offset=0), ClassDef('TestSetSubclassWithKeywordArgs', [Name('TestSet', Load(), lineno=579, col_offset=37)], [FunctionDef('test_keywords_in_subclass', arguments([Name('self', Param(), lineno=581, col_offset=34)], None, None, []), [Expr(Str('SF bug #1486663 -- this used to erroneously raise a TypeError', lineno=582, col_offset=8), lineno=582, col_offset=8), Expr(Call(Name('SetSubclassWithKeywordArgs', Load(), lineno=583, col_offset=8), [], [keyword('newarg', Num(1, lineno=583, col_offset=42))], None, None, lineno=583, col_offset=8), lineno=583, col_offset=8)], [], lineno=581, col_offset=4)], [], lineno=579, col_offset=0), ClassDef('TestFrozenSet', [Name('TestJointOps', Load(), lineno=585, col_offset=20)], [Assign([Name('thetype', Store(), lineno=586, col_offset=4)], Name('frozenset', Load(), lineno=586, col_offset=14), lineno=586, col_offset=4), FunctionDef('test_init', arguments([Name('self', Param(), lineno=588, col_offset=18)], None, None, []), [Assign([Name('s', Store(), lineno=589, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=589, col_offset=12), 'thetype', Load(), lineno=589, col_offset=12), [Attribute(Name('self', Load(), lineno=589, col_offset=25), 'word', Load(), lineno=589, col_offset=25)], [], None, None, lineno=589, col_offset=12), lineno=589, col_offset=8), Expr(Call(Attribute(Name('s', Load(), lineno=590, col_offset=8), '__init__', Load(), lineno=590, col_offset=8), [Attribute(Name('self', Load(), lineno=590, col_offset=19), 'otherword', Load(), lineno=590, col_offset=19)], [], None, None, lineno=590, col_offset=8), lineno=590, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=591, col_offset=8), 'assertEqual', Load(), lineno=591, col_offset=8), [Name('s', Load(), lineno=591, col_offset=25), Call(Name('set', Load(), lineno=591, col_offset=28), [Attribute(Name('self', Load(), lineno=591, col_offset=32), 'word', Load(), lineno=591, col_offset=32)], [], None, None, lineno=591, col_offset=28)], [], None, None, lineno=591, col_offset=8), lineno=591, col_offset=8)], [], lineno=588, col_offset=4), FunctionDef('test_singleton_empty_frozenset', arguments([Name('self', Param(), lineno=593, col_offset=39)], None, None, []), [Assign([Name('f', Store(), lineno=594, col_offset=8)], Call(Name('frozenset', Load(), lineno=594, col_offset=12), [], [], None, None, lineno=594, col_offset=12), lineno=594, col_offset=8), Assign([Name('efs', Store(), lineno=595, col_offset=8)], List([Call(Name('frozenset', Load(), lineno=595, col_offset=15), [], [], None, None, lineno=595, col_offset=15), Call(Name('frozenset', Load(), lineno=595, col_offset=28), [List([], Load(), lineno=595, col_offset=38)], [], None, None, lineno=595, col_offset=28), Call(Name('frozenset', Load(), lineno=595, col_offset=43), [Tuple([], Load(), lineno=595, col_offset=53)], [], None, None, lineno=595, col_offset=43), Call(Name('frozenset', Load(), lineno=595, col_offset=58), [Str('', lineno=595, col_offset=68)], [], None, None, lineno=595, col_offset=58), Call(Name('frozenset', Load(), lineno=596, col_offset=15), [], [], None, None, lineno=596, col_offset=15), Call(Name('frozenset', Load(), lineno=596, col_offset=28), [List([], Load(), lineno=596, col_offset=38)], [], None, None, lineno=596, col_offset=28), Call(Name('frozenset', Load(), lineno=596, col_offset=43), [Tuple([], Load(), lineno=596, col_offset=53)], [], None, None, lineno=596, col_offset=43), Call(Name('frozenset', Load(), lineno=596, col_offset=58), [Str('', lineno=596, col_offset=68)], [], None, None, lineno=596, col_offset=58), Call(Name('frozenset', Load(), lineno=597, col_offset=15), [Call(Name('xrange', Load(), lineno=597, col_offset=25), [Num(0, lineno=597, col_offset=32)], [], None, None, lineno=597, col_offset=25)], [], None, None, lineno=597, col_offset=15), Call(Name('frozenset', Load(), lineno=597, col_offset=37), [Call(Name('frozenset', Load(), lineno=597, col_offset=47), [], [], None, None, lineno=597, col_offset=47)], [], None, None, lineno=597, col_offset=37), Call(Name('frozenset', Load(), lineno=598, col_offset=15), [Name('f', Load(), lineno=598, col_offset=25)], [], None, None, lineno=598, col_offset=15), Name('f', Load(), lineno=598, col_offset=29)], Load(), lineno=595, col_offset=14), lineno=595, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=600, col_offset=8), 'assertEqual', Load(), lineno=600, col_offset=8), [Call(Name('len', Load(), lineno=600, col_offset=25), [Call(Name('set', Load(), lineno=600, col_offset=29), [Call(Name('map', Load(), lineno=600, col_offset=33), [Name('id', Load(), lineno=600, col_offset=37), Name('efs', Load(), lineno=600, col_offset=41)], [], None, None, lineno=600, col_offset=33)], [], None, None, lineno=600, col_offset=29)], [], None, None, lineno=600, col_offset=25), Num(1, lineno=600, col_offset=49)], [], None, None, lineno=600, col_offset=8), lineno=600, col_offset=8)], [], lineno=593, col_offset=4), FunctionDef('test_constructor_identity', arguments([Name('self', Param(), lineno=602, col_offset=34)], None, None, []), [Assign([Name('s', Store(), lineno=603, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=603, col_offset=12), 'thetype', Load(), lineno=603, col_offset=12), [Call(Name('range', Load(), lineno=603, col_offset=25), [Num(3, lineno=603, col_offset=31)], [], None, None, lineno=603, col_offset=25)], [], None, None, lineno=603, col_offset=12), lineno=603, col_offset=8), Assign([Name('t', Store(), lineno=604, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=604, col_offset=12), 'thetype', Load(), lineno=604, col_offset=12), [Name('s', Load(), lineno=604, col_offset=25)], [], None, None, lineno=604, col_offset=12), lineno=604, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=605, col_offset=8), 'assertEqual', Load(), lineno=605, col_offset=8), [Call(Name('id', Load(), lineno=605, col_offset=25), [Name('s', Load(), lineno=605, col_offset=28)], [], None, None, lineno=605, col_offset=25), Call(Name('id', Load(), lineno=605, col_offset=32), [Name('t', Load(), lineno=605, col_offset=35)], [], None, None, lineno=605, col_offset=32)], [], None, None, lineno=605, col_offset=8), lineno=605, col_offset=8)], [], lineno=602, col_offset=4), FunctionDef('test_hash', arguments([Name('self', Param(), lineno=607, col_offset=18)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=608, col_offset=8), 'assertEqual', Load(), lineno=608, col_offset=8), [Call(Name('hash', Load(), lineno=608, col_offset=25), [Call(Attribute(Name('self', Load(), lineno=608, col_offset=30), 'thetype', Load(), lineno=608, col_offset=30), [Str('abcdeb', lineno=608, col_offset=43)], [], None, None, lineno=608, col_offset=30)], [], None, None, lineno=608, col_offset=25), Call(Name('hash', Load(), lineno=609, col_offset=25), [Call(Attribute(Name('self', Load(), lineno=609, col_offset=30), 'thetype', Load(), lineno=609, col_offset=30), [Str('ebecda', lineno=609, col_offset=43)], [], None, None, lineno=609, col_offset=30)], [], None, None, lineno=609, col_offset=25)], [], None, None, lineno=608, col_offset=8), lineno=608, col_offset=8), Assign([Name('n', Store(), lineno=612, col_offset=8)], Num(100, lineno=612, col_offset=12), lineno=612, col_offset=8), Assign([Name('seq', Store(), lineno=613, col_offset=8)], ListComp(Call(Name('randrange', Load(), lineno=613, col_offset=15), [Name('n', Load(), lineno=613, col_offset=25)], [], None, None, lineno=613, col_offset=15), [comprehension(Name('i', Store(), lineno=613, col_offset=32), Call(Name('xrange', Load(), lineno=613, col_offset=37), [Name('n', Load(), lineno=613, col_offset=44)], [], None, None, lineno=613, col_offset=37), [])], lineno=613, col_offset=15), lineno=613, col_offset=8), Assign([Name('results', Store(), lineno=614, col_offset=8)], Call(Name('set', Load(), lineno=614, col_offset=18), [], [], None, None, lineno=614, col_offset=18), lineno=614, col_offset=8), For(Name('i', Store(), lineno=615, col_offset=12), Call(Name('xrange', Load(), lineno=615, col_offset=17), [Num(200, lineno=615, col_offset=24)], [], None, None, lineno=615, col_offset=17), [Expr(Call(Name('shuffle', Load(), lineno=616, col_offset=12), [Name('seq', Load(), lineno=616, col_offset=20)], [], None, None, lineno=616, col_offset=12), lineno=616, col_offset=12), Expr(Call(Attribute(Name('results', Load(), lineno=617, col_offset=12), 'add', Load(), lineno=617, col_offset=12), [Call(Name('hash', Load(), lineno=617, col_offset=24), [Call(Attribute(Name('self', Load(), lineno=617, col_offset=29), 'thetype', Load(), lineno=617, col_offset=29), [Name('seq', Load(), lineno=617, col_offset=42)], [], None, None, lineno=617, col_offset=29)], [], None, None, lineno=617, col_offset=24)], [], None, None, lineno=617, col_offset=12), lineno=617, col_offset=12)], [], lineno=615, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=618, col_offset=8), 'assertEqual', Load(), lineno=618, col_offset=8), [Call(Name('len', Load(), lineno=618, col_offset=25), [Name('results', Load(), lineno=618, col_offset=29)], [], None, None, lineno=618, col_offset=25), Num(1, lineno=618, col_offset=39)], [], None, None, lineno=618, col_offset=8), lineno=618, col_offset=8)], [], lineno=607, col_offset=4), FunctionDef('test_copy', arguments([Name('self', Param(), lineno=620, col_offset=18)], None, None, []), [Assign([Name('dup', Store(), lineno=621, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=621, col_offset=14), 's', Load(), lineno=621, col_offset=14), 'copy', Load(), lineno=621, col_offset=14), [], [], None, None, lineno=621, col_offset=14), lineno=621, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=622, col_offset=8), 'assertEqual', Load(), lineno=622, col_offset=8), [Call(Name('id', Load(), lineno=622, col_offset=25), [Attribute(Name('self', Load(), lineno=622, col_offset=28), 's', Load(), lineno=622, col_offset=28)], [], None, None, lineno=622, col_offset=25), Call(Name('id', Load(), lineno=622, col_offset=37), [Name('dup', Load(), lineno=622, col_offset=40)], [], None, None, lineno=622, col_offset=37)], [], None, None, lineno=622, col_offset=8), lineno=622, col_offset=8)], [], lineno=620, col_offset=4), FunctionDef('test_frozen_as_dictkey', arguments([Name('self', Param(), lineno=624, col_offset=31)], None, None, []), [Assign([Name('seq', Store(), lineno=625, col_offset=8)], BinOp(BinOp(Call(Name('range', Load(), lineno=625, col_offset=14), [Num(10, lineno=625, col_offset=20)], [], None, None, lineno=625, col_offset=14), Add(), Call(Name('list', Load(), lineno=625, col_offset=26), [Str('abcdefg', lineno=625, col_offset=31)], [], None, None, lineno=625, col_offset=26), lineno=625, col_offset=14), Add(), List([Str('apple', lineno=625, col_offset=45)], Load(), lineno=625, col_offset=44), lineno=625, col_offset=42), lineno=625, col_offset=8), Assign([Name('key1', Store(), lineno=626, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=626, col_offset=15), 'thetype', Load(), lineno=626, col_offset=15), [Name('seq', Load(), lineno=626, col_offset=28)], [], None, None, lineno=626, col_offset=15), lineno=626, col_offset=8), Assign([Name('key2', Store(), lineno=627, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=627, col_offset=15), 'thetype', Load(), lineno=627, col_offset=15), [Call(Name('reversed', Load(), lineno=627, col_offset=28), [Name('seq', Load(), lineno=627, col_offset=37)], [], None, None, lineno=627, col_offset=28)], [], None, None, lineno=627, col_offset=15), lineno=627, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=628, col_offset=8), 'assertEqual', Load(), lineno=628, col_offset=8), [Name('key1', Load(), lineno=628, col_offset=25), Name('key2', Load(), lineno=628, col_offset=31)], [], None, None, lineno=628, col_offset=8), lineno=628, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=629, col_offset=8), 'assertNotEqual', Load(), lineno=629, col_offset=8), [Call(Name('id', Load(), lineno=629, col_offset=28), [Name('key1', Load(), lineno=629, col_offset=31)], [], None, None, lineno=629, col_offset=28), Call(Name('id', Load(), lineno=629, col_offset=38), [Name('key2', Load(), lineno=629, col_offset=41)], [], None, None, lineno=629, col_offset=38)], [], None, None, lineno=629, col_offset=8), lineno=629, col_offset=8), Assign([Name('d', Store(), lineno=630, col_offset=8)], Dict([], [], lineno=630, col_offset=12), lineno=630, col_offset=8), Assign([Subscript(Name('d', Load(), lineno=631, col_offset=8), Index(Name('key1', Load(), lineno=631, col_offset=10)), Store(), lineno=631, col_offset=8)], Num(42, lineno=631, col_offset=18), lineno=631, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=632, col_offset=8), 'assertEqual', Load(), lineno=632, col_offset=8), [Subscript(Name('d', Load(), lineno=632, col_offset=25), Index(Name('key2', Load(), lineno=632, col_offset=27)), Load(), lineno=632, col_offset=25), Num(42, lineno=632, col_offset=34)], [], None, None, lineno=632, col_offset=8), lineno=632, col_offset=8)], [], lineno=624, col_offset=4), FunctionDef('test_hash_caching', arguments([Name('self', Param(), lineno=634, col_offset=26)], None, None, []), [Assign([Name('f', Store(), lineno=635, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=635, col_offset=12), 'thetype', Load(), lineno=635, col_offset=12), [Str('abcdcda', lineno=635, col_offset=25)], [], None, None, lineno=635, col_offset=12), lineno=635, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=636, col_offset=8), 'assertEqual', Load(), lineno=636, col_offset=8), [Call(Name('hash', Load(), lineno=636, col_offset=25), [Name('f', Load(), lineno=636, col_offset=30)], [], None, None, lineno=636, col_offset=25), Call(Name('hash', Load(), lineno=636, col_offset=34), [Name('f', Load(), lineno=636, col_offset=39)], [], None, None, lineno=636, col_offset=34)], [], None, None, lineno=636, col_offset=8), lineno=636, col_offset=8)], [], lineno=634, col_offset=4), FunctionDef('test_hash_effectiveness', arguments([Name('self', Param(), lineno=638, col_offset=32)], None, None, []), [Assign([Name('n', Store(), lineno=639, col_offset=8)], Num(13, lineno=639, col_offset=12), lineno=639, col_offset=8), Assign([Name('hashvalues', Store(), lineno=640, col_offset=8)], Call(Name('set', Load(), lineno=640, col_offset=21), [], [], None, None, lineno=640, col_offset=21), lineno=640, col_offset=8), Assign([Name('addhashvalue', Store(), lineno=641, col_offset=8)], Attribute(Name('hashvalues', Load(), lineno=641, col_offset=23), 'add', Load(), lineno=641, col_offset=23), lineno=641, col_offset=8), Assign([Name('elemmasks', Store(), lineno=642, col_offset=8)], ListComp(Tuple([BinOp(Name('i', Load(), lineno=642, col_offset=22), Add(), Num(1, lineno=642, col_offset=24), lineno=642, col_offset=22), BinOp(Num(1, lineno=642, col_offset=27), LShift(), Name('i', Load(), lineno=642, col_offset=30), lineno=642, col_offset=27)], Load(), lineno=642, col_offset=22), [comprehension(Name('i', Store(), lineno=642, col_offset=37), Call(Name('range', Load(), lineno=642, col_offset=42), [Name('n', Load(), lineno=642, col_offset=48)], [], None, None, lineno=642, col_offset=42), [])], lineno=642, col_offset=21), lineno=642, col_offset=8), For(Name('i', Store(), lineno=643, col_offset=12), Call(Name('xrange', Load(), lineno=643, col_offset=17), [BinOp(Num(2, lineno=643, col_offset=24), Pow(), Name('n', Load(), lineno=643, col_offset=27), lineno=643, col_offset=24)], [], None, None, lineno=643, col_offset=17), [Expr(Call(Name('addhashvalue', Load(), lineno=644, col_offset=12), [Call(Name('hash', Load(), lineno=644, col_offset=25), [Call(Name('frozenset', Load(), lineno=644, col_offset=30), [ListComp(Name('e', Load(), lineno=644, col_offset=41), [comprehension(Tuple([Name('e', Store(), lineno=644, col_offset=47), Name('m', Store(), lineno=644, col_offset=50)], Store(), lineno=644, col_offset=47), Name('elemmasks', Load(), lineno=644, col_offset=55), [BinOp(Name('m', Load(), lineno=644, col_offset=68), BitAnd(), Name('i', Load(), lineno=644, col_offset=70), lineno=644, col_offset=68)])], lineno=644, col_offset=41)], [], None, None, lineno=644, col_offset=30)], [], None, None, lineno=644, col_offset=25)], [], None, None, lineno=644, col_offset=12), lineno=644, col_offset=12)], [], lineno=643, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=645, col_offset=8), 'assertEqual', Load(), lineno=645, col_offset=8), [Call(Name('len', Load(), lineno=645, col_offset=25), [Name('hashvalues', Load(), lineno=645, col_offset=29)], [], None, None, lineno=645, col_offset=25), BinOp(Num(2, lineno=645, col_offset=42), Pow(), Name('n', Load(), lineno=645, col_offset=45), lineno=645, col_offset=42)], [], None, None, lineno=645, col_offset=8), lineno=645, col_offset=8)], [], lineno=638, col_offset=4)], [], lineno=585, col_offset=0), ClassDef('FrozenSetSubclass', [Name('frozenset', Load(), lineno=647, col_offset=24)], [Pass( lineno=648, col_offset=4)], [], lineno=647, col_offset=0), ClassDef('TestFrozenSetSubclass', [Name('TestFrozenSet', Load(), lineno=650, col_offset=28)], [Assign([Name('thetype', Store(), lineno=651, col_offset=4)], Name('FrozenSetSubclass', Load(), lineno=651, col_offset=14), lineno=651, col_offset=4), FunctionDef('test_constructor_identity', arguments([Name('self', Param(), lineno=653, col_offset=34)], None, None, []), [Assign([Name('s', Store(), lineno=654, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=654, col_offset=12), 'thetype', Load(), lineno=654, col_offset=12), [Call(Name('range', Load(), lineno=654, col_offset=25), [Num(3, lineno=654, col_offset=31)], [], None, None, lineno=654, col_offset=25)], [], None, None, lineno=654, col_offset=12), lineno=654, col_offset=8), Assign([Name('t', Store(), lineno=655, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=655, col_offset=12), 'thetype', Load(), lineno=655, col_offset=12), [Name('s', Load(), lineno=655, col_offset=25)], [], None, None, lineno=655, col_offset=12), lineno=655, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=656, col_offset=8), 'assertNotEqual', Load(), lineno=656, col_offset=8), [Call(Name('id', Load(), lineno=656, col_offset=28), [Name('s', Load(), lineno=656, col_offset=31)], [], None, None, lineno=656, col_offset=28), Call(Name('id', Load(), lineno=656, col_offset=35), [Name('t', Load(), lineno=656, col_offset=38)], [], None, None, lineno=656, col_offset=35)], [], None, None, lineno=656, col_offset=8), lineno=656, col_offset=8)], [], lineno=653, col_offset=4), FunctionDef('test_copy', arguments([Name('self', Param(), lineno=658, col_offset=18)], None, None, []), [Assign([Name('dup', Store(), lineno=659, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=659, col_offset=14), 's', Load(), lineno=659, col_offset=14), 'copy', Load(), lineno=659, col_offset=14), [], [], None, None, lineno=659, col_offset=14), lineno=659, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=660, col_offset=8), 'assertNotEqual', Load(), lineno=660, col_offset=8), [Call(Name('id', Load(), lineno=660, col_offset=28), [Attribute(Name('self', Load(), lineno=660, col_offset=31), 's', Load(), lineno=660, col_offset=31)], [], None, None, lineno=660, col_offset=28), Call(Name('id', Load(), lineno=660, col_offset=40), [Name('dup', Load(), lineno=660, col_offset=43)], [], None, None, lineno=660, col_offset=40)], [], None, None, lineno=660, col_offset=8), lineno=660, col_offset=8)], [], lineno=658, col_offset=4), FunctionDef('test_nested_empty_constructor', arguments([Name('self', Param(), lineno=662, col_offset=38)], None, None, []), [Assign([Name('s', Store(), lineno=663, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=663, col_offset=12), 'thetype', Load(), lineno=663, col_offset=12), [], [], None, None, lineno=663, col_offset=12), lineno=663, col_offset=8), Assign([Name('t', Store(), lineno=664, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=664, col_offset=12), 'thetype', Load(), lineno=664, col_offset=12), [Name('s', Load(), lineno=664, col_offset=25)], [], None, None, lineno=664, col_offset=12), lineno=664, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=665, col_offset=8), 'assertEqual', Load(), lineno=665, col_offset=8), [Name('s', Load(), lineno=665, col_offset=25), Name('t', Load(), lineno=665, col_offset=28)], [], None, None, lineno=665, col_offset=8), lineno=665, col_offset=8)], [], lineno=662, col_offset=4), FunctionDef('test_singleton_empty_frozenset', arguments([Name('self', Param(), lineno=667, col_offset=39)], None, None, []), [Assign([Name('Frozenset', Store(), lineno=668, col_offset=8)], Attribute(Name('self', Load(), lineno=668, col_offset=20), 'thetype', Load(), lineno=668, col_offset=20), lineno=668, col_offset=8), Assign([Name('f', Store(), lineno=669, col_offset=8)], Call(Name('frozenset', Load(), lineno=669, col_offset=12), [], [], None, None, lineno=669, col_offset=12), lineno=669, col_offset=8), Assign([Name('F', Store(), lineno=670, col_offset=8)], Call(Name('Frozenset', Load(), lineno=670, col_offset=12), [], [], None, None, lineno=670, col_offset=12), lineno=670, col_offset=8), Assign([Name('efs', Store(), lineno=671, col_offset=8)], List([Call(Name('Frozenset', Load(), lineno=671, col_offset=15), [], [], None, None, lineno=671, col_offset=15), Call(Name('Frozenset', Load(), lineno=671, col_offset=28), [List([], Load(), lineno=671, col_offset=38)], [], None, None, lineno=671, col_offset=28), Call(Name('Frozenset', Load(), lineno=671, col_offset=43), [Tuple([], Load(), lineno=671, col_offset=53)], [], None, None, lineno=671, col_offset=43), Call(Name('Frozenset', Load(), lineno=671, col_offset=58), [Str('', lineno=671, col_offset=68)], [], None, None, lineno=671, col_offset=58), Call(Name('Frozenset', Load(), lineno=672, col_offset=15), [], [], None, None, lineno=672, col_offset=15), Call(Name('Frozenset', Load(), lineno=672, col_offset=28), [List([], Load(), lineno=672, col_offset=38)], [], None, None, lineno=672, col_offset=28), Call(Name('Frozenset', Load(), lineno=672, col_offset=43), [Tuple([], Load(), lineno=672, col_offset=53)], [], None, None, lineno=672, col_offset=43), Call(Name('Frozenset', Load(), lineno=672, col_offset=58), [Str('', lineno=672, col_offset=68)], [], None, None, lineno=672, col_offset=58), Call(Name('Frozenset', Load(), lineno=673, col_offset=15), [Call(Name('xrange', Load(), lineno=673, col_offset=25), [Num(0, lineno=673, col_offset=32)], [], None, None, lineno=673, col_offset=25)], [], None, None, lineno=673, col_offset=15), Call(Name('Frozenset', Load(), lineno=673, col_offset=37), [Call(Name('Frozenset', Load(), lineno=673, col_offset=47), [], [], None, None, lineno=673, col_offset=47)], [], None, None, lineno=673, col_offset=37), Call(Name('Frozenset', Load(), lineno=674, col_offset=15), [Call(Name('frozenset', Load(), lineno=674, col_offset=25), [], [], None, None, lineno=674, col_offset=25)], [], None, None, lineno=674, col_offset=15), Name('f', Load(), lineno=674, col_offset=39), Name('F', Load(), lineno=674, col_offset=42), Call(Name('Frozenset', Load(), lineno=674, col_offset=45), [Name('f', Load(), lineno=674, col_offset=55)], [], None, None, lineno=674, col_offset=45), Call(Name('Frozenset', Load(), lineno=674, col_offset=59), [Name('F', Load(), lineno=674, col_offset=69)], [], None, None, lineno=674, col_offset=59)], Load(), lineno=671, col_offset=14), lineno=671, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=676, col_offset=8), 'assertEqual', Load(), lineno=676, col_offset=8), [Call(Name('len', Load(), lineno=676, col_offset=25), [Call(Name('set', Load(), lineno=676, col_offset=29), [Call(Name('map', Load(), lineno=676, col_offset=33), [Name('id', Load(), lineno=676, col_offset=37), Name('efs', Load(), lineno=676, col_offset=41)], [], None, None, lineno=676, col_offset=33)], [], None, None, lineno=676, col_offset=29)], [], None, None, lineno=676, col_offset=25), Call(Name('len', Load(), lineno=676, col_offset=49), [Name('efs', Load(), lineno=676, col_offset=53)], [], None, None, lineno=676, col_offset=49)], [], None, None, lineno=676, col_offset=8), lineno=676, col_offset=8)], [], lineno=667, col_offset=4)], [], lineno=650, col_offset=0), Assign([Name('empty_set', Store(), lineno=680, col_offset=0)], Call(Name('set', Load(), lineno=680, col_offset=12), [], [], None, None, lineno=680, col_offset=12), lineno=680, col_offset=0), ClassDef('TestBasicOps', [Attribute(Name('unittest', Load(), lineno=684, col_offset=19), 'TestCase', Load(), lineno=684, col_offset=19)], [FunctionDef('test_repr', arguments([Name('self', Param(), lineno=686, col_offset=18)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=687, col_offset=11), 'repr', Load(), lineno=687, col_offset=11), [IsNot()], [Name('None', Load(), lineno=687, col_offset=28)], lineno=687, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=688, col_offset=12), 'assertEqual', Load(), lineno=688, col_offset=12), [Call(Name('repr', Load(), lineno=688, col_offset=29), [Attribute(Name('self', Load(), lineno=688, col_offset=34), 'set', Load(), lineno=688, col_offset=34)], [], None, None, lineno=688, col_offset=29), Attribute(Name('self', Load(), lineno=688, col_offset=45), 'repr', Load(), lineno=688, col_offset=45)], [], None, None, lineno=688, col_offset=12), lineno=688, col_offset=12)], [], lineno=687, col_offset=8)], [], lineno=686, col_offset=4), FunctionDef('test_print', arguments([Name('self', Param(), lineno=690, col_offset=19)], None, None, []), [Assign([Name('fo', Store(), lineno=691, col_offset=8)], Call(Name('open', Load(), lineno=691, col_offset=13), [Attribute(Name('test_support', Load(), lineno=691, col_offset=18), 'TESTFN', Load(), lineno=691, col_offset=18), Str('wb', lineno=691, col_offset=39)], [], None, None, lineno=691, col_offset=13), lineno=691, col_offset=8), TryFinally([Print(Name('fo', Load(), lineno=693, col_offset=21), [Attribute(Name('self', Load(), lineno=693, col_offset=25), 'set', Load(), lineno=693, col_offset=25)], False, lineno=693, col_offset=12), Expr(Call(Attribute(Name('fo', Load(), lineno=694, col_offset=12), 'close', Load(), lineno=694, col_offset=12), [], [], None, None, lineno=694, col_offset=12), lineno=694, col_offset=12), Assign([Name('fo', Store(), lineno=695, col_offset=12)], Call(Name('open', Load(), lineno=695, col_offset=17), [Attribute(Name('test_support', Load(), lineno=695, col_offset=22), 'TESTFN', Load(), lineno=695, col_offset=22), Str('rb', lineno=695, col_offset=43)], [], None, None, lineno=695, col_offset=17), lineno=695, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=696, col_offset=12), 'assertEqual', Load(), lineno=696, col_offset=12), [Call(Attribute(Name('fo', Load(), lineno=696, col_offset=29), 'read', Load(), lineno=696, col_offset=29), [], [], None, None, lineno=696, col_offset=29), Call(Name('repr', Load(), lineno=696, col_offset=40), [Attribute(Name('self', Load(), lineno=696, col_offset=45), 'set', Load(), lineno=696, col_offset=45)], [], None, None, lineno=696, col_offset=40)], [], None, None, lineno=696, col_offset=12), lineno=696, col_offset=12)], [Expr(Call(Attribute(Name('fo', Load(), lineno=698, col_offset=12), 'close', Load(), lineno=698, col_offset=12), [], [], None, None, lineno=698, col_offset=12), lineno=698, col_offset=12), Expr(Call(Attribute(Name('test_support', Load(), lineno=699, col_offset=12), 'unlink', Load(), lineno=699, col_offset=12), [Attribute(Name('test_support', Load(), lineno=699, col_offset=32), 'TESTFN', Load(), lineno=699, col_offset=32)], [], None, None, lineno=699, col_offset=12), lineno=699, col_offset=12)], lineno=692, col_offset=8)], [], lineno=690, col_offset=4), FunctionDef('test_length', arguments([Name('self', Param(), lineno=701, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=702, col_offset=8), 'assertEqual', Load(), lineno=702, col_offset=8), [Call(Name('len', Load(), lineno=702, col_offset=25), [Attribute(Name('self', Load(), lineno=702, col_offset=29), 'set', Load(), lineno=702, col_offset=29)], [], None, None, lineno=702, col_offset=25), Attribute(Name('self', Load(), lineno=702, col_offset=40), 'length', Load(), lineno=702, col_offset=40)], [], None, None, lineno=702, col_offset=8), lineno=702, col_offset=8)], [], lineno=701, col_offset=4), FunctionDef('test_self_equality', arguments([Name('self', Param(), lineno=704, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=705, col_offset=8), 'assertEqual', Load(), lineno=705, col_offset=8), [Attribute(Name('self', Load(), lineno=705, col_offset=25), 'set', Load(), lineno=705, col_offset=25), Attribute(Name('self', Load(), lineno=705, col_offset=35), 'set', Load(), lineno=705, col_offset=35)], [], None, None, lineno=705, col_offset=8), lineno=705, col_offset=8)], [], lineno=704, col_offset=4), FunctionDef('test_equivalent_equality', arguments([Name('self', Param(), lineno=707, col_offset=33)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=708, col_offset=8), 'assertEqual', Load(), lineno=708, col_offset=8), [Attribute(Name('self', Load(), lineno=708, col_offset=25), 'set', Load(), lineno=708, col_offset=25), Attribute(Name('self', Load(), lineno=708, col_offset=35), 'dup', Load(), lineno=708, col_offset=35)], [], None, None, lineno=708, col_offset=8), lineno=708, col_offset=8)], [], lineno=707, col_offset=4), FunctionDef('test_copy', arguments([Name('self', Param(), lineno=710, col_offset=18)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=711, col_offset=8), 'assertEqual', Load(), lineno=711, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=711, col_offset=25), 'set', Load(), lineno=711, col_offset=25), 'copy', Load(), lineno=711, col_offset=25), [], [], None, None, lineno=711, col_offset=25), Attribute(Name('self', Load(), lineno=711, col_offset=42), 'dup', Load(), lineno=711, col_offset=42)], [], None, None, lineno=711, col_offset=8), lineno=711, col_offset=8)], [], lineno=710, col_offset=4), FunctionDef('test_self_union', arguments([Name('self', Param(), lineno=713, col_offset=24)], None, None, []), [Assign([Name('result', Store(), lineno=714, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=714, col_offset=17), 'set', Load(), lineno=714, col_offset=17), BitOr(), Attribute(Name('self', Load(), lineno=714, col_offset=28), 'set', Load(), lineno=714, col_offset=28), lineno=714, col_offset=17), lineno=714, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=715, col_offset=8), 'assertEqual', Load(), lineno=715, col_offset=8), [Name('result', Load(), lineno=715, col_offset=25), Attribute(Name('self', Load(), lineno=715, col_offset=33), 'dup', Load(), lineno=715, col_offset=33)], [], None, None, lineno=715, col_offset=8), lineno=715, col_offset=8)], [], lineno=713, col_offset=4), FunctionDef('test_empty_union', arguments([Name('self', Param(), lineno=717, col_offset=25)], None, None, []), [Assign([Name('result', Store(), lineno=718, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=718, col_offset=17), 'set', Load(), lineno=718, col_offset=17), BitOr(), Name('empty_set', Load(), lineno=718, col_offset=28), lineno=718, col_offset=17), lineno=718, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=719, col_offset=8), 'assertEqual', Load(), lineno=719, col_offset=8), [Name('result', Load(), lineno=719, col_offset=25), Attribute(Name('self', Load(), lineno=719, col_offset=33), 'dup', Load(), lineno=719, col_offset=33)], [], None, None, lineno=719, col_offset=8), lineno=719, col_offset=8)], [], lineno=717, col_offset=4), FunctionDef('test_union_empty', arguments([Name('self', Param(), lineno=721, col_offset=25)], None, None, []), [Assign([Name('result', Store(), lineno=722, col_offset=8)], BinOp(Name('empty_set', Load(), lineno=722, col_offset=17), BitOr(), Attribute(Name('self', Load(), lineno=722, col_offset=29), 'set', Load(), lineno=722, col_offset=29), lineno=722, col_offset=17), lineno=722, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=723, col_offset=8), 'assertEqual', Load(), lineno=723, col_offset=8), [Name('result', Load(), lineno=723, col_offset=25), Attribute(Name('self', Load(), lineno=723, col_offset=33), 'dup', Load(), lineno=723, col_offset=33)], [], None, None, lineno=723, col_offset=8), lineno=723, col_offset=8)], [], lineno=721, col_offset=4), FunctionDef('test_self_intersection', arguments([Name('self', Param(), lineno=725, col_offset=31)], None, None, []), [Assign([Name('result', Store(), lineno=726, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=726, col_offset=17), 'set', Load(), lineno=726, col_offset=17), BitAnd(), Attribute(Name('self', Load(), lineno=726, col_offset=28), 'set', Load(), lineno=726, col_offset=28), lineno=726, col_offset=17), lineno=726, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=727, col_offset=8), 'assertEqual', Load(), lineno=727, col_offset=8), [Name('result', Load(), lineno=727, col_offset=25), Attribute(Name('self', Load(), lineno=727, col_offset=33), 'dup', Load(), lineno=727, col_offset=33)], [], None, None, lineno=727, col_offset=8), lineno=727, col_offset=8)], [], lineno=725, col_offset=4), FunctionDef('test_empty_intersection', arguments([Name('self', Param(), lineno=729, col_offset=32)], None, None, []), [Assign([Name('result', Store(), lineno=730, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=730, col_offset=17), 'set', Load(), lineno=730, col_offset=17), BitAnd(), Name('empty_set', Load(), lineno=730, col_offset=28), lineno=730, col_offset=17), lineno=730, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=731, col_offset=8), 'assertEqual', Load(), lineno=731, col_offset=8), [Name('result', Load(), lineno=731, col_offset=25), Name('empty_set', Load(), lineno=731, col_offset=33)], [], None, None, lineno=731, col_offset=8), lineno=731, col_offset=8)], [], lineno=729, col_offset=4), FunctionDef('test_intersection_empty', arguments([Name('self', Param(), lineno=733, col_offset=32)], None, None, []), [Assign([Name('result', Store(), lineno=734, col_offset=8)], BinOp(Name('empty_set', Load(), lineno=734, col_offset=17), BitAnd(), Attribute(Name('self', Load(), lineno=734, col_offset=29), 'set', Load(), lineno=734, col_offset=29), lineno=734, col_offset=17), lineno=734, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=735, col_offset=8), 'assertEqual', Load(), lineno=735, col_offset=8), [Name('result', Load(), lineno=735, col_offset=25), Name('empty_set', Load(), lineno=735, col_offset=33)], [], None, None, lineno=735, col_offset=8), lineno=735, col_offset=8)], [], lineno=733, col_offset=4), FunctionDef('test_self_isdisjoint', arguments([Name('self', Param(), lineno=737, col_offset=29)], None, None, []), [Assign([Name('result', Store(), lineno=738, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=738, col_offset=17), 'set', Load(), lineno=738, col_offset=17), 'isdisjoint', Load(), lineno=738, col_offset=17), [Attribute(Name('self', Load(), lineno=738, col_offset=37), 'set', Load(), lineno=738, col_offset=37)], [], None, None, lineno=738, col_offset=17), lineno=738, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=739, col_offset=8), 'assertEqual', Load(), lineno=739, col_offset=8), [Name('result', Load(), lineno=739, col_offset=25), UnaryOp(Not(), Attribute(Name('self', Load(), lineno=739, col_offset=37), 'set', Load(), lineno=739, col_offset=37), lineno=739, col_offset=33)], [], None, None, lineno=739, col_offset=8), lineno=739, col_offset=8)], [], lineno=737, col_offset=4), FunctionDef('test_empty_isdisjoint', arguments([Name('self', Param(), lineno=741, col_offset=30)], None, None, []), [Assign([Name('result', Store(), lineno=742, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=742, col_offset=17), 'set', Load(), lineno=742, col_offset=17), 'isdisjoint', Load(), lineno=742, col_offset=17), [Name('empty_set', Load(), lineno=742, col_offset=37)], [], None, None, lineno=742, col_offset=17), lineno=742, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=743, col_offset=8), 'assertEqual', Load(), lineno=743, col_offset=8), [Name('result', Load(), lineno=743, col_offset=25), Name('True', Load(), lineno=743, col_offset=33)], [], None, None, lineno=743, col_offset=8), lineno=743, col_offset=8)], [], lineno=741, col_offset=4), FunctionDef('test_isdisjoint_empty', arguments([Name('self', Param(), lineno=745, col_offset=30)], None, None, []), [Assign([Name('result', Store(), lineno=746, col_offset=8)], Call(Attribute(Name('empty_set', Load(), lineno=746, col_offset=17), 'isdisjoint', Load(), lineno=746, col_offset=17), [Attribute(Name('self', Load(), lineno=746, col_offset=38), 'set', Load(), lineno=746, col_offset=38)], [], None, None, lineno=746, col_offset=17), lineno=746, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=747, col_offset=8), 'assertEqual', Load(), lineno=747, col_offset=8), [Name('result', Load(), lineno=747, col_offset=25), Name('True', Load(), lineno=747, col_offset=33)], [], None, None, lineno=747, col_offset=8), lineno=747, col_offset=8)], [], lineno=745, col_offset=4), FunctionDef('test_self_symmetric_difference', arguments([Name('self', Param(), lineno=749, col_offset=39)], None, None, []), [Assign([Name('result', Store(), lineno=750, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=750, col_offset=17), 'set', Load(), lineno=750, col_offset=17), BitXor(), Attribute(Name('self', Load(), lineno=750, col_offset=28), 'set', Load(), lineno=750, col_offset=28), lineno=750, col_offset=17), lineno=750, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=751, col_offset=8), 'assertEqual', Load(), lineno=751, col_offset=8), [Name('result', Load(), lineno=751, col_offset=25), Name('empty_set', Load(), lineno=751, col_offset=33)], [], None, None, lineno=751, col_offset=8), lineno=751, col_offset=8)], [], lineno=749, col_offset=4), FunctionDef('test_empty_symmetric_difference', arguments([Name('self', Param(), lineno=753, col_offset=40)], None, None, []), [Assign([Name('result', Store(), lineno=754, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=754, col_offset=17), 'set', Load(), lineno=754, col_offset=17), BitXor(), Name('empty_set', Load(), lineno=754, col_offset=28), lineno=754, col_offset=17), lineno=754, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=755, col_offset=8), 'assertEqual', Load(), lineno=755, col_offset=8), [Name('result', Load(), lineno=755, col_offset=25), Attribute(Name('self', Load(), lineno=755, col_offset=33), 'set', Load(), lineno=755, col_offset=33)], [], None, None, lineno=755, col_offset=8), lineno=755, col_offset=8)], [], lineno=753, col_offset=4), FunctionDef('test_self_difference', arguments([Name('self', Param(), lineno=757, col_offset=29)], None, None, []), [Assign([Name('result', Store(), lineno=758, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=758, col_offset=17), 'set', Load(), lineno=758, col_offset=17), Sub(), Attribute(Name('self', Load(), lineno=758, col_offset=28), 'set', Load(), lineno=758, col_offset=28), lineno=758, col_offset=17), lineno=758, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=759, col_offset=8), 'assertEqual', Load(), lineno=759, col_offset=8), [Name('result', Load(), lineno=759, col_offset=25), Name('empty_set', Load(), lineno=759, col_offset=33)], [], None, None, lineno=759, col_offset=8), lineno=759, col_offset=8)], [], lineno=757, col_offset=4), FunctionDef('test_empty_difference', arguments([Name('self', Param(), lineno=761, col_offset=30)], None, None, []), [Assign([Name('result', Store(), lineno=762, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=762, col_offset=17), 'set', Load(), lineno=762, col_offset=17), Sub(), Name('empty_set', Load(), lineno=762, col_offset=28), lineno=762, col_offset=17), lineno=762, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=763, col_offset=8), 'assertEqual', Load(), lineno=763, col_offset=8), [Name('result', Load(), lineno=763, col_offset=25), Attribute(Name('self', Load(), lineno=763, col_offset=33), 'dup', Load(), lineno=763, col_offset=33)], [], None, None, lineno=763, col_offset=8), lineno=763, col_offset=8)], [], lineno=761, col_offset=4), FunctionDef('test_empty_difference_rev', arguments([Name('self', Param(), lineno=765, col_offset=34)], None, None, []), [Assign([Name('result', Store(), lineno=766, col_offset=8)], BinOp(Name('empty_set', Load(), lineno=766, col_offset=17), Sub(), Attribute(Name('self', Load(), lineno=766, col_offset=29), 'set', Load(), lineno=766, col_offset=29), lineno=766, col_offset=17), lineno=766, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=767, col_offset=8), 'assertEqual', Load(), lineno=767, col_offset=8), [Name('result', Load(), lineno=767, col_offset=25), Name('empty_set', Load(), lineno=767, col_offset=33)], [], None, None, lineno=767, col_offset=8), lineno=767, col_offset=8)], [], lineno=765, col_offset=4), FunctionDef('test_iteration', arguments([Name('self', Param(), lineno=769, col_offset=23)], None, None, []), [For(Name('v', Store(), lineno=770, col_offset=12), Attribute(Name('self', Load(), lineno=770, col_offset=17), 'set', Load(), lineno=770, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=771, col_offset=12), 'assertIn', Load(), lineno=771, col_offset=12), [Name('v', Load(), lineno=771, col_offset=26), Attribute(Name('self', Load(), lineno=771, col_offset=29), 'values', Load(), lineno=771, col_offset=29)], [], None, None, lineno=771, col_offset=12), lineno=771, col_offset=12)], [], lineno=770, col_offset=8), Assign([Name('setiter', Store(), lineno=772, col_offset=8)], Call(Name('iter', Load(), lineno=772, col_offset=18), [Attribute(Name('self', Load(), lineno=772, col_offset=23), 'set', Load(), lineno=772, col_offset=23)], [], None, None, lineno=772, col_offset=18), lineno=772, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=775, col_offset=8), 'assertEqual', Load(), lineno=775, col_offset=8), [Call(Attribute(Name('setiter', Load(), lineno=775, col_offset=25), '__length_hint__', Load(), lineno=775, col_offset=25), [], [], None, None, lineno=775, col_offset=25), Call(Name('len', Load(), lineno=775, col_offset=52), [Attribute(Name('self', Load(), lineno=775, col_offset=56), 'set', Load(), lineno=775, col_offset=56)], [], None, None, lineno=775, col_offset=52)], [], None, None, lineno=775, col_offset=8), lineno=775, col_offset=8)], [], lineno=769, col_offset=4), FunctionDef('test_pickling', arguments([Name('self', Param(), lineno=777, col_offset=22)], None, None, []), [Assign([Name('p', Store(), lineno=778, col_offset=8)], Call(Attribute(Name('pickle', Load(), lineno=778, col_offset=12), 'dumps', Load(), lineno=778, col_offset=12), [Attribute(Name('self', Load(), lineno=778, col_offset=25), 'set', Load(), lineno=778, col_offset=25)], [], None, None, lineno=778, col_offset=12), lineno=778, col_offset=8), Assign([Name('copy', Store(), lineno=779, col_offset=8)], Call(Attribute(Name('pickle', Load(), lineno=779, col_offset=15), 'loads', Load(), lineno=779, col_offset=15), [Name('p', Load(), lineno=779, col_offset=28)], [], None, None, lineno=779, col_offset=15), lineno=779, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=780, col_offset=8), 'assertEqual', Load(), lineno=780, col_offset=8), [Attribute(Name('self', Load(), lineno=780, col_offset=25), 'set', Load(), lineno=780, col_offset=25), Name('copy', Load(), lineno=780, col_offset=35), BinOp(Str('%s != %s', lineno=781, col_offset=25), Mod(), Tuple([Attribute(Name('self', Load(), lineno=781, col_offset=39), 'set', Load(), lineno=781, col_offset=39), Name('copy', Load(), lineno=781, col_offset=49)], Load(), lineno=781, col_offset=39), lineno=781, col_offset=25)], [], None, None, lineno=780, col_offset=8), lineno=780, col_offset=8)], [], lineno=777, col_offset=4)], [], lineno=684, col_offset=0), ClassDef('TestBasicOpsEmpty', [Name('TestBasicOps', Load(), lineno=785, col_offset=24)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=786, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=787, col_offset=8), 'case', Store(), lineno=787, col_offset=8)], Str('empty set', lineno=787, col_offset=22), lineno=787, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=788, col_offset=8), 'values', Store(), lineno=788, col_offset=8)], List([], Load(), lineno=788, col_offset=22), lineno=788, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=789, col_offset=8), 'set', Store(), lineno=789, col_offset=8)], Call(Name('set', Load(), lineno=789, col_offset=22), [Attribute(Name('self', Load(), lineno=789, col_offset=26), 'values', Load(), lineno=789, col_offset=26)], [], None, None, lineno=789, col_offset=22), lineno=789, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=790, col_offset=8), 'dup', Store(), lineno=790, col_offset=8)], Call(Name('set', Load(), lineno=790, col_offset=22), [Attribute(Name('self', Load(), lineno=790, col_offset=26), 'values', Load(), lineno=790, col_offset=26)], [], None, None, lineno=790, col_offset=22), lineno=790, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=791, col_offset=8), 'length', Store(), lineno=791, col_offset=8)], Num(0, lineno=791, col_offset=22), lineno=791, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=792, col_offset=8), 'repr', Store(), lineno=792, col_offset=8)], Str('set([])', lineno=792, col_offset=22), lineno=792, col_offset=8)], [], lineno=786, col_offset=4)], [], lineno=785, col_offset=0), ClassDef('TestBasicOpsSingleton', [Name('TestBasicOps', Load(), lineno=796, col_offset=28)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=797, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=798, col_offset=8), 'case', Store(), lineno=798, col_offset=8)], Str('unit set (number)', lineno=798, col_offset=22), lineno=798, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=799, col_offset=8), 'values', Store(), lineno=799, col_offset=8)], List([Num(3, lineno=799, col_offset=23)], Load(), lineno=799, col_offset=22), lineno=799, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=800, col_offset=8), 'set', Store(), lineno=800, col_offset=8)], Call(Name('set', Load(), lineno=800, col_offset=22), [Attribute(Name('self', Load(), lineno=800, col_offset=26), 'values', Load(), lineno=800, col_offset=26)], [], None, None, lineno=800, col_offset=22), lineno=800, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=801, col_offset=8), 'dup', Store(), lineno=801, col_offset=8)], Call(Name('set', Load(), lineno=801, col_offset=22), [Attribute(Name('self', Load(), lineno=801, col_offset=26), 'values', Load(), lineno=801, col_offset=26)], [], None, None, lineno=801, col_offset=22), lineno=801, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=802, col_offset=8), 'length', Store(), lineno=802, col_offset=8)], Num(1, lineno=802, col_offset=22), lineno=802, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=803, col_offset=8), 'repr', Store(), lineno=803, col_offset=8)], Str('set([3])', lineno=803, col_offset=22), lineno=803, col_offset=8)], [], lineno=797, col_offset=4), FunctionDef('test_in', arguments([Name('self', Param(), lineno=805, col_offset=16)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=806, col_offset=8), 'assertIn', Load(), lineno=806, col_offset=8), [Num(3, lineno=806, col_offset=22), Attribute(Name('self', Load(), lineno=806, col_offset=25), 'set', Load(), lineno=806, col_offset=25)], [], None, None, lineno=806, col_offset=8), lineno=806, col_offset=8)], [], lineno=805, col_offset=4), FunctionDef('test_not_in', arguments([Name('self', Param(), lineno=808, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=809, col_offset=8), 'assertNotIn', Load(), lineno=809, col_offset=8), [Num(2, lineno=809, col_offset=25), Attribute(Name('self', Load(), lineno=809, col_offset=28), 'set', Load(), lineno=809, col_offset=28)], [], None, None, lineno=809, col_offset=8), lineno=809, col_offset=8)], [], lineno=808, col_offset=4)], [], lineno=796, col_offset=0), ClassDef('TestBasicOpsTuple', [Name('TestBasicOps', Load(), lineno=813, col_offset=24)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=814, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=815, col_offset=8), 'case', Store(), lineno=815, col_offset=8)], Str('unit set (tuple)', lineno=815, col_offset=22), lineno=815, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=816, col_offset=8), 'values', Store(), lineno=816, col_offset=8)], List([Tuple([Num(0, lineno=816, col_offset=24), Str('zero', lineno=816, col_offset=27)], Load(), lineno=816, col_offset=24)], Load(), lineno=816, col_offset=22), lineno=816, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=817, col_offset=8), 'set', Store(), lineno=817, col_offset=8)], Call(Name('set', Load(), lineno=817, col_offset=22), [Attribute(Name('self', Load(), lineno=817, col_offset=26), 'values', Load(), lineno=817, col_offset=26)], [], None, None, lineno=817, col_offset=22), lineno=817, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=818, col_offset=8), 'dup', Store(), lineno=818, col_offset=8)], Call(Name('set', Load(), lineno=818, col_offset=22), [Attribute(Name('self', Load(), lineno=818, col_offset=26), 'values', Load(), lineno=818, col_offset=26)], [], None, None, lineno=818, col_offset=22), lineno=818, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=819, col_offset=8), 'length', Store(), lineno=819, col_offset=8)], Num(1, lineno=819, col_offset=22), lineno=819, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=820, col_offset=8), 'repr', Store(), lineno=820, col_offset=8)], Str("set([(0, 'zero')])", lineno=820, col_offset=22), lineno=820, col_offset=8)], [], lineno=814, col_offset=4), FunctionDef('test_in', arguments([Name('self', Param(), lineno=822, col_offset=16)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=823, col_offset=8), 'assertIn', Load(), lineno=823, col_offset=8), [Tuple([Num(0, lineno=823, col_offset=23), Str('zero', lineno=823, col_offset=26)], Load(), lineno=823, col_offset=23), Attribute(Name('self', Load(), lineno=823, col_offset=35), 'set', Load(), lineno=823, col_offset=35)], [], None, None, lineno=823, col_offset=8), lineno=823, col_offset=8)], [], lineno=822, col_offset=4), FunctionDef('test_not_in', arguments([Name('self', Param(), lineno=825, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=826, col_offset=8), 'assertNotIn', Load(), lineno=826, col_offset=8), [Num(9, lineno=826, col_offset=25), Attribute(Name('self', Load(), lineno=826, col_offset=28), 'set', Load(), lineno=826, col_offset=28)], [], None, None, lineno=826, col_offset=8), lineno=826, col_offset=8)], [], lineno=825, col_offset=4)], [], lineno=813, col_offset=0), ClassDef('TestBasicOpsTriple', [Name('TestBasicOps', Load(), lineno=830, col_offset=25)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=831, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=832, col_offset=8), 'case', Store(), lineno=832, col_offset=8)], Str('triple set', lineno=832, col_offset=22), lineno=832, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=833, col_offset=8), 'values', Store(), lineno=833, col_offset=8)], List([Num(0, lineno=833, col_offset=23), Str('zero', lineno=833, col_offset=26), Attribute(Name('operator', Load(), lineno=833, col_offset=34), 'add', Load(), lineno=833, col_offset=34)], Load(), lineno=833, col_offset=22), lineno=833, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=834, col_offset=8), 'set', Store(), lineno=834, col_offset=8)], Call(Name('set', Load(), lineno=834, col_offset=22), [Attribute(Name('self', Load(), lineno=834, col_offset=26), 'values', Load(), lineno=834, col_offset=26)], [], None, None, lineno=834, col_offset=22), lineno=834, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=835, col_offset=8), 'dup', Store(), lineno=835, col_offset=8)], Call(Name('set', Load(), lineno=835, col_offset=22), [Attribute(Name('self', Load(), lineno=835, col_offset=26), 'values', Load(), lineno=835, col_offset=26)], [], None, None, lineno=835, col_offset=22), lineno=835, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=836, col_offset=8), 'length', Store(), lineno=836, col_offset=8)], Num(3, lineno=836, col_offset=22), lineno=836, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=837, col_offset=8), 'repr', Store(), lineno=837, col_offset=8)], Name('None', Load(), lineno=837, col_offset=22), lineno=837, col_offset=8)], [], lineno=831, col_offset=4)], [], lineno=830, col_offset=0), FunctionDef('baditer', arguments([], None, None, []), [Raise(Name('TypeError', Load(), lineno=842, col_offset=10), None, None, lineno=842, col_offset=4), Expr(Yield(Name('True', Load(), lineno=843, col_offset=10), lineno=843, col_offset=4), lineno=843, col_offset=4)], [], lineno=841, col_offset=0), FunctionDef('gooditer', arguments([], None, None, []), [Expr(Yield(Name('True', Load(), lineno=846, col_offset=10), lineno=846, col_offset=4), lineno=846, col_offset=4)], [], lineno=845, col_offset=0), ClassDef('TestExceptionPropagation', [Attribute(Name('unittest', Load(), lineno=848, col_offset=31), 'TestCase', Load(), lineno=848, col_offset=31)], [Expr(Str('SF 628246:  Set constructor should not trap iterator TypeErrors', lineno=849, col_offset=4), lineno=849, col_offset=4), FunctionDef('test_instanceWithException', arguments([Name('self', Param(), lineno=851, col_offset=35)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=852, col_offset=8), 'assertRaises', Load(), lineno=852, col_offset=8), [Name('TypeError', Load(), lineno=852, col_offset=26), Name('set', Load(), lineno=852, col_offset=37), Call(Name('baditer', Load(), lineno=852, col_offset=42), [], [], None, None, lineno=852, col_offset=42)], [], None, None, lineno=852, col_offset=8), lineno=852, col_offset=8)], [], lineno=851, col_offset=4), FunctionDef('test_instancesWithoutException', arguments([Name('self', Param(), lineno=854, col_offset=39)], None, None, []), [Expr(Call(Name('set', Load(), lineno=856, col_offset=8), [List([Num(1, lineno=856, col_offset=13), Num(2, lineno=856, col_offset=15), Num(3, lineno=856, col_offset=17)], Load(), lineno=856, col_offset=12)], [], None, None, lineno=856, col_offset=8), lineno=856, col_offset=8), Expr(Call(Name('set', Load(), lineno=857, col_offset=8), [Tuple([Num(1, lineno=857, col_offset=13), Num(2, lineno=857, col_offset=15), Num(3, lineno=857, col_offset=17)], Load(), lineno=857, col_offset=13)], [], None, None, lineno=857, col_offset=8), lineno=857, col_offset=8), Expr(Call(Name('set', Load(), lineno=858, col_offset=8), [Dict([Str('one', lineno=858, col_offset=13), Str('two', lineno=858, col_offset=22), Str('three', lineno=858, col_offset=31)], [Num(1, lineno=858, col_offset=19), Num(2, lineno=858, col_offset=28), Num(3, lineno=858, col_offset=39)], lineno=858, col_offset=12)], [], None, None, lineno=858, col_offset=8), lineno=858, col_offset=8), Expr(Call(Name('set', Load(), lineno=859, col_offset=8), [Call(Name('xrange', Load(), lineno=859, col_offset=12), [Num(3, lineno=859, col_offset=19)], [], None, None, lineno=859, col_offset=12)], [], None, None, lineno=859, col_offset=8), lineno=859, col_offset=8), Expr(Call(Name('set', Load(), lineno=860, col_offset=8), [Str('abc', lineno=860, col_offset=12)], [], None, None, lineno=860, col_offset=8), lineno=860, col_offset=8), Expr(Call(Name('set', Load(), lineno=861, col_offset=8), [Call(Name('gooditer', Load(), lineno=861, col_offset=12), [], [], None, None, lineno=861, col_offset=12)], [], None, None, lineno=861, col_offset=8), lineno=861, col_offset=8)], [], lineno=854, col_offset=4), FunctionDef('test_changingSizeWhileIterating', arguments([Name('self', Param(), lineno=863, col_offset=40)], None, None, []), [Assign([Name('s', Store(), lineno=864, col_offset=8)], Call(Name('set', Load(), lineno=864, col_offset=12), [List([Num(1, lineno=864, col_offset=17), Num(2, lineno=864, col_offset=19), Num(3, lineno=864, col_offset=21)], Load(), lineno=864, col_offset=16)], [], None, None, lineno=864, col_offset=12), lineno=864, col_offset=8), TryExcept([For(Name('i', Store(), lineno=866, col_offset=16), Name('s', Load(), lineno=866, col_offset=21), [Expr(Call(Attribute(Name('s', Load(), lineno=867, col_offset=16), 'update', Load(), lineno=867, col_offset=16), [List([Num(4, lineno=867, col_offset=26)], Load(), lineno=867, col_offset=25)], [], None, None, lineno=867, col_offset=16), lineno=867, col_offset=16)], [], lineno=866, col_offset=12)], [ExceptHandler(Name('RuntimeError', Load(), lineno=868, col_offset=15), None, [Pass( lineno=869, col_offset=12)], lineno=868, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=871, col_offset=12), 'fail', Load(), lineno=871, col_offset=12), [Str('no exception when changing size during iteration', lineno=871, col_offset=22)], [], None, None, lineno=871, col_offset=12), lineno=871, col_offset=12)], lineno=865, col_offset=8)], [], lineno=863, col_offset=4)], [], lineno=848, col_offset=0), ClassDef('TestSetOfSets', [Attribute(Name('unittest', Load(), lineno=875, col_offset=20), 'TestCase', Load(), lineno=875, col_offset=20)], [FunctionDef('test_constructor', arguments([Name('self', Param(), lineno=876, col_offset=25)], None, None, []), [Assign([Name('inner', Store(), lineno=877, col_offset=8)], Call(Name('frozenset', Load(), lineno=877, col_offset=16), [List([Num(1, lineno=877, col_offset=27)], Load(), lineno=877, col_offset=26)], [], None, None, lineno=877, col_offset=16), lineno=877, col_offset=8), Assign([Name('outer', Store(), lineno=878, col_offset=8)], Call(Name('set', Load(), lineno=878, col_offset=16), [List([Name('inner', Load(), lineno=878, col_offset=21)], Load(), lineno=878, col_offset=20)], [], None, None, lineno=878, col_offset=16), lineno=878, col_offset=8), Assign([Name('element', Store(), lineno=879, col_offset=8)], Call(Attribute(Name('outer', Load(), lineno=879, col_offset=18), 'pop', Load(), lineno=879, col_offset=18), [], [], None, None, lineno=879, col_offset=18), lineno=879, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=880, col_offset=8), 'assertEqual', Load(), lineno=880, col_offset=8), [Call(Name('type', Load(), lineno=880, col_offset=25), [Name('element', Load(), lineno=880, col_offset=30)], [], None, None, lineno=880, col_offset=25), Name('frozenset', Load(), lineno=880, col_offset=40)], [], None, None, lineno=880, col_offset=8), lineno=880, col_offset=8), Expr(Call(Attribute(Name('outer', Load(), lineno=881, col_offset=8), 'add', Load(), lineno=881, col_offset=8), [Name('inner', Load(), lineno=881, col_offset=18)], [], None, None, lineno=881, col_offset=8), lineno=881, col_offset=8), Expr(Call(Attribute(Name('outer', Load(), lineno=882, col_offset=8), 'remove', Load(), lineno=882, col_offset=8), [Name('inner', Load(), lineno=882, col_offset=21)], [], None, None, lineno=882, col_offset=8), lineno=882, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=883, col_offset=8), 'assertEqual', Load(), lineno=883, col_offset=8), [Name('outer', Load(), lineno=883, col_offset=25), Call(Name('set', Load(), lineno=883, col_offset=32), [], [], None, None, lineno=883, col_offset=32)], [], None, None, lineno=883, col_offset=8), lineno=883, col_offset=8), Expr(Call(Attribute(Name('outer', Load(), lineno=884, col_offset=8), 'discard', Load(), lineno=884, col_offset=8), [Name('inner', Load(), lineno=884, col_offset=22)], [], None, None, lineno=884, col_offset=8), lineno=884, col_offset=8)], [], lineno=876, col_offset=4)], [], lineno=875, col_offset=0), ClassDef('TestBinaryOps', [Attribute(Name('unittest', Load(), lineno=888, col_offset=20), 'TestCase', Load(), lineno=888, col_offset=20)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=889, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=890, col_offset=8), 'set', Store(), lineno=890, col_offset=8)], Call(Name('set', Load(), lineno=890, col_offset=19), [Tuple([Num(2, lineno=890, col_offset=24), Num(4, lineno=890, col_offset=27), Num(6, lineno=890, col_offset=30)], Load(), lineno=890, col_offset=24)], [], None, None, lineno=890, col_offset=19), lineno=890, col_offset=8)], [], lineno=889, col_offset=4), FunctionDef('test_eq', arguments([Name('self', Param(), lineno=892, col_offset=16)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=893, col_offset=8), 'assertEqual', Load(), lineno=893, col_offset=8), [Attribute(Name('self', Load(), lineno=893, col_offset=25), 'set', Load(), lineno=893, col_offset=25), Call(Name('set', Load(), lineno=893, col_offset=35), [Dict([Num(2, lineno=893, col_offset=40), Num(4, lineno=893, col_offset=44), Num(6, lineno=893, col_offset=48)], [Num(1, lineno=893, col_offset=42), Num(3, lineno=893, col_offset=46), Num(5, lineno=893, col_offset=50)], lineno=893, col_offset=39)], [], None, None, lineno=893, col_offset=35)], [], None, None, lineno=893, col_offset=8), lineno=893, col_offset=8)], [], lineno=892, col_offset=4), FunctionDef('test_union_subset', arguments([Name('self', Param(), lineno=895, col_offset=26)], None, None, []), [Assign([Name('result', Store(), lineno=896, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=896, col_offset=17), 'set', Load(), lineno=896, col_offset=17), BitOr(), Call(Name('set', Load(), lineno=896, col_offset=28), [List([Num(2, lineno=896, col_offset=33)], Load(), lineno=896, col_offset=32)], [], None, None, lineno=896, col_offset=28), lineno=896, col_offset=17), lineno=896, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=897, col_offset=8), 'assertEqual', Load(), lineno=897, col_offset=8), [Name('result', Load(), lineno=897, col_offset=25), Call(Name('set', Load(), lineno=897, col_offset=33), [Tuple([Num(2, lineno=897, col_offset=38), Num(4, lineno=897, col_offset=41), Num(6, lineno=897, col_offset=44)], Load(), lineno=897, col_offset=38)], [], None, None, lineno=897, col_offset=33)], [], None, None, lineno=897, col_offset=8), lineno=897, col_offset=8)], [], lineno=895, col_offset=4), FunctionDef('test_union_superset', arguments([Name('self', Param(), lineno=899, col_offset=28)], None, None, []), [Assign([Name('result', Store(), lineno=900, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=900, col_offset=17), 'set', Load(), lineno=900, col_offset=17), BitOr(), Call(Name('set', Load(), lineno=900, col_offset=28), [List([Num(2, lineno=900, col_offset=33), Num(4, lineno=900, col_offset=36), Num(6, lineno=900, col_offset=39), Num(8, lineno=900, col_offset=42)], Load(), lineno=900, col_offset=32)], [], None, None, lineno=900, col_offset=28), lineno=900, col_offset=17), lineno=900, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=901, col_offset=8), 'assertEqual', Load(), lineno=901, col_offset=8), [Name('result', Load(), lineno=901, col_offset=25), Call(Name('set', Load(), lineno=901, col_offset=33), [List([Num(2, lineno=901, col_offset=38), Num(4, lineno=901, col_offset=41), Num(6, lineno=901, col_offset=44), Num(8, lineno=901, col_offset=47)], Load(), lineno=901, col_offset=37)], [], None, None, lineno=901, col_offset=33)], [], None, None, lineno=901, col_offset=8), lineno=901, col_offset=8)], [], lineno=899, col_offset=4), FunctionDef('test_union_overlap', arguments([Name('self', Param(), lineno=903, col_offset=27)], None, None, []), [Assign([Name('result', Store(), lineno=904, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=904, col_offset=17), 'set', Load(), lineno=904, col_offset=17), BitOr(), Call(Name('set', Load(), lineno=904, col_offset=28), [List([Num(3, lineno=904, col_offset=33), Num(4, lineno=904, col_offset=36), Num(5, lineno=904, col_offset=39)], Load(), lineno=904, col_offset=32)], [], None, None, lineno=904, col_offset=28), lineno=904, col_offset=17), lineno=904, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=905, col_offset=8), 'assertEqual', Load(), lineno=905, col_offset=8), [Name('result', Load(), lineno=905, col_offset=25), Call(Name('set', Load(), lineno=905, col_offset=33), [List([Num(2, lineno=905, col_offset=38), Num(3, lineno=905, col_offset=41), Num(4, lineno=905, col_offset=44), Num(5, lineno=905, col_offset=47), Num(6, lineno=905, col_offset=50)], Load(), lineno=905, col_offset=37)], [], None, None, lineno=905, col_offset=33)], [], None, None, lineno=905, col_offset=8), lineno=905, col_offset=8)], [], lineno=903, col_offset=4), FunctionDef('test_union_non_overlap', arguments([Name('self', Param(), lineno=907, col_offset=31)], None, None, []), [Assign([Name('result', Store(), lineno=908, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=908, col_offset=17), 'set', Load(), lineno=908, col_offset=17), BitOr(), Call(Name('set', Load(), lineno=908, col_offset=28), [List([Num(8, lineno=908, col_offset=33)], Load(), lineno=908, col_offset=32)], [], None, None, lineno=908, col_offset=28), lineno=908, col_offset=17), lineno=908, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=909, col_offset=8), 'assertEqual', Load(), lineno=909, col_offset=8), [Name('result', Load(), lineno=909, col_offset=25), Call(Name('set', Load(), lineno=909, col_offset=33), [List([Num(2, lineno=909, col_offset=38), Num(4, lineno=909, col_offset=41), Num(6, lineno=909, col_offset=44), Num(8, lineno=909, col_offset=47)], Load(), lineno=909, col_offset=37)], [], None, None, lineno=909, col_offset=33)], [], None, None, lineno=909, col_offset=8), lineno=909, col_offset=8)], [], lineno=907, col_offset=4), FunctionDef('test_intersection_subset', arguments([Name('self', Param(), lineno=911, col_offset=33)], None, None, []), [Assign([Name('result', Store(), lineno=912, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=912, col_offset=17), 'set', Load(), lineno=912, col_offset=17), BitAnd(), Call(Name('set', Load(), lineno=912, col_offset=28), [Tuple([Num(2, lineno=912, col_offset=33), Num(4, lineno=912, col_offset=36)], Load(), lineno=912, col_offset=33)], [], None, None, lineno=912, col_offset=28), lineno=912, col_offset=17), lineno=912, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=913, col_offset=8), 'assertEqual', Load(), lineno=913, col_offset=8), [Name('result', Load(), lineno=913, col_offset=25), Call(Name('set', Load(), lineno=913, col_offset=33), [Tuple([Num(2, lineno=913, col_offset=38), Num(4, lineno=913, col_offset=41)], Load(), lineno=913, col_offset=38)], [], None, None, lineno=913, col_offset=33)], [], None, None, lineno=913, col_offset=8), lineno=913, col_offset=8)], [], lineno=911, col_offset=4), FunctionDef('test_intersection_superset', arguments([Name('self', Param(), lineno=915, col_offset=35)], None, None, []), [Assign([Name('result', Store(), lineno=916, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=916, col_offset=17), 'set', Load(), lineno=916, col_offset=17), BitAnd(), Call(Name('set', Load(), lineno=916, col_offset=28), [List([Num(2, lineno=916, col_offset=33), Num(4, lineno=916, col_offset=36), Num(6, lineno=916, col_offset=39), Num(8, lineno=916, col_offset=42)], Load(), lineno=916, col_offset=32)], [], None, None, lineno=916, col_offset=28), lineno=916, col_offset=17), lineno=916, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=917, col_offset=8), 'assertEqual', Load(), lineno=917, col_offset=8), [Name('result', Load(), lineno=917, col_offset=25), Call(Name('set', Load(), lineno=917, col_offset=33), [List([Num(2, lineno=917, col_offset=38), Num(4, lineno=917, col_offset=41), Num(6, lineno=917, col_offset=44)], Load(), lineno=917, col_offset=37)], [], None, None, lineno=917, col_offset=33)], [], None, None, lineno=917, col_offset=8), lineno=917, col_offset=8)], [], lineno=915, col_offset=4), FunctionDef('test_intersection_overlap', arguments([Name('self', Param(), lineno=919, col_offset=34)], None, None, []), [Assign([Name('result', Store(), lineno=920, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=920, col_offset=17), 'set', Load(), lineno=920, col_offset=17), BitAnd(), Call(Name('set', Load(), lineno=920, col_offset=28), [List([Num(3, lineno=920, col_offset=33), Num(4, lineno=920, col_offset=36), Num(5, lineno=920, col_offset=39)], Load(), lineno=920, col_offset=32)], [], None, None, lineno=920, col_offset=28), lineno=920, col_offset=17), lineno=920, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=921, col_offset=8), 'assertEqual', Load(), lineno=921, col_offset=8), [Name('result', Load(), lineno=921, col_offset=25), Call(Name('set', Load(), lineno=921, col_offset=33), [List([Num(4, lineno=921, col_offset=38)], Load(), lineno=921, col_offset=37)], [], None, None, lineno=921, col_offset=33)], [], None, None, lineno=921, col_offset=8), lineno=921, col_offset=8)], [], lineno=919, col_offset=4), FunctionDef('test_intersection_non_overlap', arguments([Name('self', Param(), lineno=923, col_offset=38)], None, None, []), [Assign([Name('result', Store(), lineno=924, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=924, col_offset=17), 'set', Load(), lineno=924, col_offset=17), BitAnd(), Call(Name('set', Load(), lineno=924, col_offset=28), [List([Num(8, lineno=924, col_offset=33)], Load(), lineno=924, col_offset=32)], [], None, None, lineno=924, col_offset=28), lineno=924, col_offset=17), lineno=924, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=925, col_offset=8), 'assertEqual', Load(), lineno=925, col_offset=8), [Name('result', Load(), lineno=925, col_offset=25), Name('empty_set', Load(), lineno=925, col_offset=33)], [], None, None, lineno=925, col_offset=8), lineno=925, col_offset=8)], [], lineno=923, col_offset=4), FunctionDef('test_isdisjoint_subset', arguments([Name('self', Param(), lineno=927, col_offset=31)], None, None, []), [Assign([Name('result', Store(), lineno=928, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=928, col_offset=17), 'set', Load(), lineno=928, col_offset=17), 'isdisjoint', Load(), lineno=928, col_offset=17), [Call(Name('set', Load(), lineno=928, col_offset=37), [Tuple([Num(2, lineno=928, col_offset=42), Num(4, lineno=928, col_offset=45)], Load(), lineno=928, col_offset=42)], [], None, None, lineno=928, col_offset=37)], [], None, None, lineno=928, col_offset=17), lineno=928, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=929, col_offset=8), 'assertEqual', Load(), lineno=929, col_offset=8), [Name('result', Load(), lineno=929, col_offset=25), Name('False', Load(), lineno=929, col_offset=33)], [], None, None, lineno=929, col_offset=8), lineno=929, col_offset=8)], [], lineno=927, col_offset=4), FunctionDef('test_isdisjoint_superset', arguments([Name('self', Param(), lineno=931, col_offset=33)], None, None, []), [Assign([Name('result', Store(), lineno=932, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=932, col_offset=17), 'set', Load(), lineno=932, col_offset=17), 'isdisjoint', Load(), lineno=932, col_offset=17), [Call(Name('set', Load(), lineno=932, col_offset=37), [List([Num(2, lineno=932, col_offset=42), Num(4, lineno=932, col_offset=45), Num(6, lineno=932, col_offset=48), Num(8, lineno=932, col_offset=51)], Load(), lineno=932, col_offset=41)], [], None, None, lineno=932, col_offset=37)], [], None, None, lineno=932, col_offset=17), lineno=932, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=933, col_offset=8), 'assertEqual', Load(), lineno=933, col_offset=8), [Name('result', Load(), lineno=933, col_offset=25), Name('False', Load(), lineno=933, col_offset=33)], [], None, None, lineno=933, col_offset=8), lineno=933, col_offset=8)], [], lineno=931, col_offset=4), FunctionDef('test_isdisjoint_overlap', arguments([Name('self', Param(), lineno=935, col_offset=32)], None, None, []), [Assign([Name('result', Store(), lineno=936, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=936, col_offset=17), 'set', Load(), lineno=936, col_offset=17), 'isdisjoint', Load(), lineno=936, col_offset=17), [Call(Name('set', Load(), lineno=936, col_offset=37), [List([Num(3, lineno=936, col_offset=42), Num(4, lineno=936, col_offset=45), Num(5, lineno=936, col_offset=48)], Load(), lineno=936, col_offset=41)], [], None, None, lineno=936, col_offset=37)], [], None, None, lineno=936, col_offset=17), lineno=936, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=937, col_offset=8), 'assertEqual', Load(), lineno=937, col_offset=8), [Name('result', Load(), lineno=937, col_offset=25), Name('False', Load(), lineno=937, col_offset=33)], [], None, None, lineno=937, col_offset=8), lineno=937, col_offset=8)], [], lineno=935, col_offset=4), FunctionDef('test_isdisjoint_non_overlap', arguments([Name('self', Param(), lineno=939, col_offset=36)], None, None, []), [Assign([Name('result', Store(), lineno=940, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=940, col_offset=17), 'set', Load(), lineno=940, col_offset=17), 'isdisjoint', Load(), lineno=940, col_offset=17), [Call(Name('set', Load(), lineno=940, col_offset=37), [List([Num(8, lineno=940, col_offset=42)], Load(), lineno=940, col_offset=41)], [], None, None, lineno=940, col_offset=37)], [], None, None, lineno=940, col_offset=17), lineno=940, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=941, col_offset=8), 'assertEqual', Load(), lineno=941, col_offset=8), [Name('result', Load(), lineno=941, col_offset=25), Name('True', Load(), lineno=941, col_offset=33)], [], None, None, lineno=941, col_offset=8), lineno=941, col_offset=8)], [], lineno=939, col_offset=4), FunctionDef('test_sym_difference_subset', arguments([Name('self', Param(), lineno=943, col_offset=35)], None, None, []), [Assign([Name('result', Store(), lineno=944, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=944, col_offset=17), 'set', Load(), lineno=944, col_offset=17), BitXor(), Call(Name('set', Load(), lineno=944, col_offset=28), [Tuple([Num(2, lineno=944, col_offset=33), Num(4, lineno=944, col_offset=36)], Load(), lineno=944, col_offset=33)], [], None, None, lineno=944, col_offset=28), lineno=944, col_offset=17), lineno=944, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=945, col_offset=8), 'assertEqual', Load(), lineno=945, col_offset=8), [Name('result', Load(), lineno=945, col_offset=25), Call(Name('set', Load(), lineno=945, col_offset=33), [List([Num(6, lineno=945, col_offset=38)], Load(), lineno=945, col_offset=37)], [], None, None, lineno=945, col_offset=33)], [], None, None, lineno=945, col_offset=8), lineno=945, col_offset=8)], [], lineno=943, col_offset=4), FunctionDef('test_sym_difference_superset', arguments([Name('self', Param(), lineno=947, col_offset=37)], None, None, []), [Assign([Name('result', Store(), lineno=948, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=948, col_offset=17), 'set', Load(), lineno=948, col_offset=17), BitXor(), Call(Name('set', Load(), lineno=948, col_offset=28), [Tuple([Num(2, lineno=948, col_offset=33), Num(4, lineno=948, col_offset=36), Num(6, lineno=948, col_offset=39), Num(8, lineno=948, col_offset=42)], Load(), lineno=948, col_offset=33)], [], None, None, lineno=948, col_offset=28), lineno=948, col_offset=17), lineno=948, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=949, col_offset=8), 'assertEqual', Load(), lineno=949, col_offset=8), [Name('result', Load(), lineno=949, col_offset=25), Call(Name('set', Load(), lineno=949, col_offset=33), [List([Num(8, lineno=949, col_offset=38)], Load(), lineno=949, col_offset=37)], [], None, None, lineno=949, col_offset=33)], [], None, None, lineno=949, col_offset=8), lineno=949, col_offset=8)], [], lineno=947, col_offset=4), FunctionDef('test_sym_difference_overlap', arguments([Name('self', Param(), lineno=951, col_offset=36)], None, None, []), [Assign([Name('result', Store(), lineno=952, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=952, col_offset=17), 'set', Load(), lineno=952, col_offset=17), BitXor(), Call(Name('set', Load(), lineno=952, col_offset=28), [Tuple([Num(3, lineno=952, col_offset=33), Num(4, lineno=952, col_offset=36), Num(5, lineno=952, col_offset=39)], Load(), lineno=952, col_offset=33)], [], None, None, lineno=952, col_offset=28), lineno=952, col_offset=17), lineno=952, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=953, col_offset=8), 'assertEqual', Load(), lineno=953, col_offset=8), [Name('result', Load(), lineno=953, col_offset=25), Call(Name('set', Load(), lineno=953, col_offset=33), [List([Num(2, lineno=953, col_offset=38), Num(3, lineno=953, col_offset=41), Num(5, lineno=953, col_offset=44), Num(6, lineno=953, col_offset=47)], Load(), lineno=953, col_offset=37)], [], None, None, lineno=953, col_offset=33)], [], None, None, lineno=953, col_offset=8), lineno=953, col_offset=8)], [], lineno=951, col_offset=4), FunctionDef('test_sym_difference_non_overlap', arguments([Name('self', Param(), lineno=955, col_offset=40)], None, None, []), [Assign([Name('result', Store(), lineno=956, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=956, col_offset=17), 'set', Load(), lineno=956, col_offset=17), BitXor(), Call(Name('set', Load(), lineno=956, col_offset=28), [List([Num(8, lineno=956, col_offset=33)], Load(), lineno=956, col_offset=32)], [], None, None, lineno=956, col_offset=28), lineno=956, col_offset=17), lineno=956, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=957, col_offset=8), 'assertEqual', Load(), lineno=957, col_offset=8), [Name('result', Load(), lineno=957, col_offset=25), Call(Name('set', Load(), lineno=957, col_offset=33), [List([Num(2, lineno=957, col_offset=38), Num(4, lineno=957, col_offset=41), Num(6, lineno=957, col_offset=44), Num(8, lineno=957, col_offset=47)], Load(), lineno=957, col_offset=37)], [], None, None, lineno=957, col_offset=33)], [], None, None, lineno=957, col_offset=8), lineno=957, col_offset=8)], [], lineno=955, col_offset=4), FunctionDef('test_cmp', arguments([Name('self', Param(), lineno=959, col_offset=17)], None, None, []), [Assign([Tuple([Name('a', Store(), lineno=960, col_offset=8), Name('b', Store(), lineno=960, col_offset=11)], Store(), lineno=960, col_offset=8)], Tuple([Call(Name('set', Load(), lineno=960, col_offset=15), [Str('a', lineno=960, col_offset=19)], [], None, None, lineno=960, col_offset=15), Call(Name('set', Load(), lineno=960, col_offset=25), [Str('b', lineno=960, col_offset=29)], [], None, None, lineno=960, col_offset=25)], Load(), lineno=960, col_offset=15), lineno=960, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=961, col_offset=8), 'assertRaises', Load(), lineno=961, col_offset=8), [Name('TypeError', Load(), lineno=961, col_offset=26), Name('cmp', Load(), lineno=961, col_offset=37), Name('a', Load(), lineno=961, col_offset=42), Name('b', Load(), lineno=961, col_offset=45)], [], None, None, lineno=961, col_offset=8), lineno=961, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=967, col_offset=8), 'assertEqual', Load(), lineno=967, col_offset=8), [Call(Name('cmp', Load(), lineno=967, col_offset=25), [Name('a', Load(), lineno=967, col_offset=29), Name('a', Load(), lineno=967, col_offset=32)], [], None, None, lineno=967, col_offset=25), Num(0, lineno=967, col_offset=36)], [], None, None, lineno=967, col_offset=8), lineno=967, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=969, col_offset=8), 'assertRaises', Load(), lineno=969, col_offset=8), [Name('TypeError', Load(), lineno=969, col_offset=26), Name('cmp', Load(), lineno=969, col_offset=37), Name('a', Load(), lineno=969, col_offset=42), Num(12, lineno=969, col_offset=45)], [], None, None, lineno=969, col_offset=8), lineno=969, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=970, col_offset=8), 'assertRaises', Load(), lineno=970, col_offset=8), [Name('TypeError', Load(), lineno=970, col_offset=26), Name('cmp', Load(), lineno=970, col_offset=37), Str('abc', lineno=970, col_offset=42), Name('a', Load(), lineno=970, col_offset=49)], [], None, None, lineno=970, col_offset=8), lineno=970, col_offset=8)], [], lineno=959, col_offset=4)], [], lineno=888, col_offset=0), ClassDef('TestUpdateOps', [Attribute(Name('unittest', Load(), lineno=974, col_offset=20), 'TestCase', Load(), lineno=974, col_offset=20)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=975, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=976, col_offset=8), 'set', Store(), lineno=976, col_offset=8)], Call(Name('set', Load(), lineno=976, col_offset=19), [Tuple([Num(2, lineno=976, col_offset=24), Num(4, lineno=976, col_offset=27), Num(6, lineno=976, col_offset=30)], Load(), lineno=976, col_offset=24)], [], None, None, lineno=976, col_offset=19), lineno=976, col_offset=8)], [], lineno=975, col_offset=4), FunctionDef('test_union_subset', arguments([Name('self', Param(), lineno=978, col_offset=26)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=979, col_offset=8), 'set', Store(), lineno=979, col_offset=8), BitOr(), Call(Name('set', Load(), lineno=979, col_offset=20), [List([Num(2, lineno=979, col_offset=25)], Load(), lineno=979, col_offset=24)], [], None, None, lineno=979, col_offset=20), lineno=979, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=980, col_offset=8), 'assertEqual', Load(), lineno=980, col_offset=8), [Attribute(Name('self', Load(), lineno=980, col_offset=25), 'set', Load(), lineno=980, col_offset=25), Call(Name('set', Load(), lineno=980, col_offset=35), [Tuple([Num(2, lineno=980, col_offset=40), Num(4, lineno=980, col_offset=43), Num(6, lineno=980, col_offset=46)], Load(), lineno=980, col_offset=40)], [], None, None, lineno=980, col_offset=35)], [], None, None, lineno=980, col_offset=8), lineno=980, col_offset=8)], [], lineno=978, col_offset=4), FunctionDef('test_union_superset', arguments([Name('self', Param(), lineno=982, col_offset=28)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=983, col_offset=8), 'set', Store(), lineno=983, col_offset=8), BitOr(), Call(Name('set', Load(), lineno=983, col_offset=20), [List([Num(2, lineno=983, col_offset=25), Num(4, lineno=983, col_offset=28), Num(6, lineno=983, col_offset=31), Num(8, lineno=983, col_offset=34)], Load(), lineno=983, col_offset=24)], [], None, None, lineno=983, col_offset=20), lineno=983, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=984, col_offset=8), 'assertEqual', Load(), lineno=984, col_offset=8), [Attribute(Name('self', Load(), lineno=984, col_offset=25), 'set', Load(), lineno=984, col_offset=25), Call(Name('set', Load(), lineno=984, col_offset=35), [List([Num(2, lineno=984, col_offset=40), Num(4, lineno=984, col_offset=43), Num(6, lineno=984, col_offset=46), Num(8, lineno=984, col_offset=49)], Load(), lineno=984, col_offset=39)], [], None, None, lineno=984, col_offset=35)], [], None, None, lineno=984, col_offset=8), lineno=984, col_offset=8)], [], lineno=982, col_offset=4), FunctionDef('test_union_overlap', arguments([Name('self', Param(), lineno=986, col_offset=27)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=987, col_offset=8), 'set', Store(), lineno=987, col_offset=8), BitOr(), Call(Name('set', Load(), lineno=987, col_offset=20), [List([Num(3, lineno=987, col_offset=25), Num(4, lineno=987, col_offset=28), Num(5, lineno=987, col_offset=31)], Load(), lineno=987, col_offset=24)], [], None, None, lineno=987, col_offset=20), lineno=987, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=988, col_offset=8), 'assertEqual', Load(), lineno=988, col_offset=8), [Attribute(Name('self', Load(), lineno=988, col_offset=25), 'set', Load(), lineno=988, col_offset=25), Call(Name('set', Load(), lineno=988, col_offset=35), [List([Num(2, lineno=988, col_offset=40), Num(3, lineno=988, col_offset=43), Num(4, lineno=988, col_offset=46), Num(5, lineno=988, col_offset=49), Num(6, lineno=988, col_offset=52)], Load(), lineno=988, col_offset=39)], [], None, None, lineno=988, col_offset=35)], [], None, None, lineno=988, col_offset=8), lineno=988, col_offset=8)], [], lineno=986, col_offset=4), FunctionDef('test_union_non_overlap', arguments([Name('self', Param(), lineno=990, col_offset=31)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=991, col_offset=8), 'set', Store(), lineno=991, col_offset=8), BitOr(), Call(Name('set', Load(), lineno=991, col_offset=20), [List([Num(8, lineno=991, col_offset=25)], Load(), lineno=991, col_offset=24)], [], None, None, lineno=991, col_offset=20), lineno=991, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=992, col_offset=8), 'assertEqual', Load(), lineno=992, col_offset=8), [Attribute(Name('self', Load(), lineno=992, col_offset=25), 'set', Load(), lineno=992, col_offset=25), Call(Name('set', Load(), lineno=992, col_offset=35), [List([Num(2, lineno=992, col_offset=40), Num(4, lineno=992, col_offset=43), Num(6, lineno=992, col_offset=46), Num(8, lineno=992, col_offset=49)], Load(), lineno=992, col_offset=39)], [], None, None, lineno=992, col_offset=35)], [], None, None, lineno=992, col_offset=8), lineno=992, col_offset=8)], [], lineno=990, col_offset=4), FunctionDef('test_union_method_call', arguments([Name('self', Param(), lineno=994, col_offset=31)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=995, col_offset=8), 'set', Load(), lineno=995, col_offset=8), 'update', Load(), lineno=995, col_offset=8), [Call(Name('set', Load(), lineno=995, col_offset=24), [List([Num(3, lineno=995, col_offset=29), Num(4, lineno=995, col_offset=32), Num(5, lineno=995, col_offset=35)], Load(), lineno=995, col_offset=28)], [], None, None, lineno=995, col_offset=24)], [], None, None, lineno=995, col_offset=8), lineno=995, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=996, col_offset=8), 'assertEqual', Load(), lineno=996, col_offset=8), [Attribute(Name('self', Load(), lineno=996, col_offset=25), 'set', Load(), lineno=996, col_offset=25), Call(Name('set', Load(), lineno=996, col_offset=35), [List([Num(2, lineno=996, col_offset=40), Num(3, lineno=996, col_offset=43), Num(4, lineno=996, col_offset=46), Num(5, lineno=996, col_offset=49), Num(6, lineno=996, col_offset=52)], Load(), lineno=996, col_offset=39)], [], None, None, lineno=996, col_offset=35)], [], None, None, lineno=996, col_offset=8), lineno=996, col_offset=8)], [], lineno=994, col_offset=4), FunctionDef('test_intersection_subset', arguments([Name('self', Param(), lineno=998, col_offset=33)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=999, col_offset=8), 'set', Store(), lineno=999, col_offset=8), BitAnd(), Call(Name('set', Load(), lineno=999, col_offset=20), [Tuple([Num(2, lineno=999, col_offset=25), Num(4, lineno=999, col_offset=28)], Load(), lineno=999, col_offset=25)], [], None, None, lineno=999, col_offset=20), lineno=999, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1000, col_offset=8), 'assertEqual', Load(), lineno=1000, col_offset=8), [Attribute(Name('self', Load(), lineno=1000, col_offset=25), 'set', Load(), lineno=1000, col_offset=25), Call(Name('set', Load(), lineno=1000, col_offset=35), [Tuple([Num(2, lineno=1000, col_offset=40), Num(4, lineno=1000, col_offset=43)], Load(), lineno=1000, col_offset=40)], [], None, None, lineno=1000, col_offset=35)], [], None, None, lineno=1000, col_offset=8), lineno=1000, col_offset=8)], [], lineno=998, col_offset=4), FunctionDef('test_intersection_superset', arguments([Name('self', Param(), lineno=1002, col_offset=35)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=1003, col_offset=8), 'set', Store(), lineno=1003, col_offset=8), BitAnd(), Call(Name('set', Load(), lineno=1003, col_offset=20), [List([Num(2, lineno=1003, col_offset=25), Num(4, lineno=1003, col_offset=28), Num(6, lineno=1003, col_offset=31), Num(8, lineno=1003, col_offset=34)], Load(), lineno=1003, col_offset=24)], [], None, None, lineno=1003, col_offset=20), lineno=1003, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1004, col_offset=8), 'assertEqual', Load(), lineno=1004, col_offset=8), [Attribute(Name('self', Load(), lineno=1004, col_offset=25), 'set', Load(), lineno=1004, col_offset=25), Call(Name('set', Load(), lineno=1004, col_offset=35), [List([Num(2, lineno=1004, col_offset=40), Num(4, lineno=1004, col_offset=43), Num(6, lineno=1004, col_offset=46)], Load(), lineno=1004, col_offset=39)], [], None, None, lineno=1004, col_offset=35)], [], None, None, lineno=1004, col_offset=8), lineno=1004, col_offset=8)], [], lineno=1002, col_offset=4), FunctionDef('test_intersection_overlap', arguments([Name('self', Param(), lineno=1006, col_offset=34)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=1007, col_offset=8), 'set', Store(), lineno=1007, col_offset=8), BitAnd(), Call(Name('set', Load(), lineno=1007, col_offset=20), [List([Num(3, lineno=1007, col_offset=25), Num(4, lineno=1007, col_offset=28), Num(5, lineno=1007, col_offset=31)], Load(), lineno=1007, col_offset=24)], [], None, None, lineno=1007, col_offset=20), lineno=1007, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1008, col_offset=8), 'assertEqual', Load(), lineno=1008, col_offset=8), [Attribute(Name('self', Load(), lineno=1008, col_offset=25), 'set', Load(), lineno=1008, col_offset=25), Call(Name('set', Load(), lineno=1008, col_offset=35), [List([Num(4, lineno=1008, col_offset=40)], Load(), lineno=1008, col_offset=39)], [], None, None, lineno=1008, col_offset=35)], [], None, None, lineno=1008, col_offset=8), lineno=1008, col_offset=8)], [], lineno=1006, col_offset=4), FunctionDef('test_intersection_non_overlap', arguments([Name('self', Param(), lineno=1010, col_offset=38)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=1011, col_offset=8), 'set', Store(), lineno=1011, col_offset=8), BitAnd(), Call(Name('set', Load(), lineno=1011, col_offset=20), [List([Num(8, lineno=1011, col_offset=25)], Load(), lineno=1011, col_offset=24)], [], None, None, lineno=1011, col_offset=20), lineno=1011, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1012, col_offset=8), 'assertEqual', Load(), lineno=1012, col_offset=8), [Attribute(Name('self', Load(), lineno=1012, col_offset=25), 'set', Load(), lineno=1012, col_offset=25), Name('empty_set', Load(), lineno=1012, col_offset=35)], [], None, None, lineno=1012, col_offset=8), lineno=1012, col_offset=8)], [], lineno=1010, col_offset=4), FunctionDef('test_intersection_method_call', arguments([Name('self', Param(), lineno=1014, col_offset=38)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1015, col_offset=8), 'set', Load(), lineno=1015, col_offset=8), 'intersection_update', Load(), lineno=1015, col_offset=8), [Call(Name('set', Load(), lineno=1015, col_offset=37), [List([Num(3, lineno=1015, col_offset=42), Num(4, lineno=1015, col_offset=45), Num(5, lineno=1015, col_offset=48)], Load(), lineno=1015, col_offset=41)], [], None, None, lineno=1015, col_offset=37)], [], None, None, lineno=1015, col_offset=8), lineno=1015, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1016, col_offset=8), 'assertEqual', Load(), lineno=1016, col_offset=8), [Attribute(Name('self', Load(), lineno=1016, col_offset=25), 'set', Load(), lineno=1016, col_offset=25), Call(Name('set', Load(), lineno=1016, col_offset=35), [List([Num(4, lineno=1016, col_offset=40)], Load(), lineno=1016, col_offset=39)], [], None, None, lineno=1016, col_offset=35)], [], None, None, lineno=1016, col_offset=8), lineno=1016, col_offset=8)], [], lineno=1014, col_offset=4), FunctionDef('test_sym_difference_subset', arguments([Name('self', Param(), lineno=1018, col_offset=35)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=1019, col_offset=8), 'set', Store(), lineno=1019, col_offset=8), BitXor(), Call(Name('set', Load(), lineno=1019, col_offset=20), [Tuple([Num(2, lineno=1019, col_offset=25), Num(4, lineno=1019, col_offset=28)], Load(), lineno=1019, col_offset=25)], [], None, None, lineno=1019, col_offset=20), lineno=1019, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1020, col_offset=8), 'assertEqual', Load(), lineno=1020, col_offset=8), [Attribute(Name('self', Load(), lineno=1020, col_offset=25), 'set', Load(), lineno=1020, col_offset=25), Call(Name('set', Load(), lineno=1020, col_offset=35), [List([Num(6, lineno=1020, col_offset=40)], Load(), lineno=1020, col_offset=39)], [], None, None, lineno=1020, col_offset=35)], [], None, None, lineno=1020, col_offset=8), lineno=1020, col_offset=8)], [], lineno=1018, col_offset=4), FunctionDef('test_sym_difference_superset', arguments([Name('self', Param(), lineno=1022, col_offset=37)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=1023, col_offset=8), 'set', Store(), lineno=1023, col_offset=8), BitXor(), Call(Name('set', Load(), lineno=1023, col_offset=20), [Tuple([Num(2, lineno=1023, col_offset=25), Num(4, lineno=1023, col_offset=28), Num(6, lineno=1023, col_offset=31), Num(8, lineno=1023, col_offset=34)], Load(), lineno=1023, col_offset=25)], [], None, None, lineno=1023, col_offset=20), lineno=1023, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1024, col_offset=8), 'assertEqual', Load(), lineno=1024, col_offset=8), [Attribute(Name('self', Load(), lineno=1024, col_offset=25), 'set', Load(), lineno=1024, col_offset=25), Call(Name('set', Load(), lineno=1024, col_offset=35), [List([Num(8, lineno=1024, col_offset=40)], Load(), lineno=1024, col_offset=39)], [], None, None, lineno=1024, col_offset=35)], [], None, None, lineno=1024, col_offset=8), lineno=1024, col_offset=8)], [], lineno=1022, col_offset=4), FunctionDef('test_sym_difference_overlap', arguments([Name('self', Param(), lineno=1026, col_offset=36)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=1027, col_offset=8), 'set', Store(), lineno=1027, col_offset=8), BitXor(), Call(Name('set', Load(), lineno=1027, col_offset=20), [Tuple([Num(3, lineno=1027, col_offset=25), Num(4, lineno=1027, col_offset=28), Num(5, lineno=1027, col_offset=31)], Load(), lineno=1027, col_offset=25)], [], None, None, lineno=1027, col_offset=20), lineno=1027, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1028, col_offset=8), 'assertEqual', Load(), lineno=1028, col_offset=8), [Attribute(Name('self', Load(), lineno=1028, col_offset=25), 'set', Load(), lineno=1028, col_offset=25), Call(Name('set', Load(), lineno=1028, col_offset=35), [List([Num(2, lineno=1028, col_offset=40), Num(3, lineno=1028, col_offset=43), Num(5, lineno=1028, col_offset=46), Num(6, lineno=1028, col_offset=49)], Load(), lineno=1028, col_offset=39)], [], None, None, lineno=1028, col_offset=35)], [], None, None, lineno=1028, col_offset=8), lineno=1028, col_offset=8)], [], lineno=1026, col_offset=4), FunctionDef('test_sym_difference_non_overlap', arguments([Name('self', Param(), lineno=1030, col_offset=40)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=1031, col_offset=8), 'set', Store(), lineno=1031, col_offset=8), BitXor(), Call(Name('set', Load(), lineno=1031, col_offset=20), [List([Num(8, lineno=1031, col_offset=25)], Load(), lineno=1031, col_offset=24)], [], None, None, lineno=1031, col_offset=20), lineno=1031, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1032, col_offset=8), 'assertEqual', Load(), lineno=1032, col_offset=8), [Attribute(Name('self', Load(), lineno=1032, col_offset=25), 'set', Load(), lineno=1032, col_offset=25), Call(Name('set', Load(), lineno=1032, col_offset=35), [List([Num(2, lineno=1032, col_offset=40), Num(4, lineno=1032, col_offset=43), Num(6, lineno=1032, col_offset=46), Num(8, lineno=1032, col_offset=49)], Load(), lineno=1032, col_offset=39)], [], None, None, lineno=1032, col_offset=35)], [], None, None, lineno=1032, col_offset=8), lineno=1032, col_offset=8)], [], lineno=1030, col_offset=4), FunctionDef('test_sym_difference_method_call', arguments([Name('self', Param(), lineno=1034, col_offset=40)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1035, col_offset=8), 'set', Load(), lineno=1035, col_offset=8), 'symmetric_difference_update', Load(), lineno=1035, col_offset=8), [Call(Name('set', Load(), lineno=1035, col_offset=45), [List([Num(3, lineno=1035, col_offset=50), Num(4, lineno=1035, col_offset=53), Num(5, lineno=1035, col_offset=56)], Load(), lineno=1035, col_offset=49)], [], None, None, lineno=1035, col_offset=45)], [], None, None, lineno=1035, col_offset=8), lineno=1035, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1036, col_offset=8), 'assertEqual', Load(), lineno=1036, col_offset=8), [Attribute(Name('self', Load(), lineno=1036, col_offset=25), 'set', Load(), lineno=1036, col_offset=25), Call(Name('set', Load(), lineno=1036, col_offset=35), [List([Num(2, lineno=1036, col_offset=40), Num(3, lineno=1036, col_offset=43), Num(5, lineno=1036, col_offset=46), Num(6, lineno=1036, col_offset=49)], Load(), lineno=1036, col_offset=39)], [], None, None, lineno=1036, col_offset=35)], [], None, None, lineno=1036, col_offset=8), lineno=1036, col_offset=8)], [], lineno=1034, col_offset=4), FunctionDef('test_difference_subset', arguments([Name('self', Param(), lineno=1038, col_offset=31)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=1039, col_offset=8), 'set', Store(), lineno=1039, col_offset=8), Sub(), Call(Name('set', Load(), lineno=1039, col_offset=20), [Tuple([Num(2, lineno=1039, col_offset=25), Num(4, lineno=1039, col_offset=28)], Load(), lineno=1039, col_offset=25)], [], None, None, lineno=1039, col_offset=20), lineno=1039, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1040, col_offset=8), 'assertEqual', Load(), lineno=1040, col_offset=8), [Attribute(Name('self', Load(), lineno=1040, col_offset=25), 'set', Load(), lineno=1040, col_offset=25), Call(Name('set', Load(), lineno=1040, col_offset=35), [List([Num(6, lineno=1040, col_offset=40)], Load(), lineno=1040, col_offset=39)], [], None, None, lineno=1040, col_offset=35)], [], None, None, lineno=1040, col_offset=8), lineno=1040, col_offset=8)], [], lineno=1038, col_offset=4), FunctionDef('test_difference_superset', arguments([Name('self', Param(), lineno=1042, col_offset=33)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=1043, col_offset=8), 'set', Store(), lineno=1043, col_offset=8), Sub(), Call(Name('set', Load(), lineno=1043, col_offset=20), [Tuple([Num(2, lineno=1043, col_offset=25), Num(4, lineno=1043, col_offset=28), Num(6, lineno=1043, col_offset=31), Num(8, lineno=1043, col_offset=34)], Load(), lineno=1043, col_offset=25)], [], None, None, lineno=1043, col_offset=20), lineno=1043, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1044, col_offset=8), 'assertEqual', Load(), lineno=1044, col_offset=8), [Attribute(Name('self', Load(), lineno=1044, col_offset=25), 'set', Load(), lineno=1044, col_offset=25), Call(Name('set', Load(), lineno=1044, col_offset=35), [List([], Load(), lineno=1044, col_offset=39)], [], None, None, lineno=1044, col_offset=35)], [], None, None, lineno=1044, col_offset=8), lineno=1044, col_offset=8)], [], lineno=1042, col_offset=4), FunctionDef('test_difference_overlap', arguments([Name('self', Param(), lineno=1046, col_offset=32)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=1047, col_offset=8), 'set', Store(), lineno=1047, col_offset=8), Sub(), Call(Name('set', Load(), lineno=1047, col_offset=20), [Tuple([Num(3, lineno=1047, col_offset=25), Num(4, lineno=1047, col_offset=28), Num(5, lineno=1047, col_offset=31)], Load(), lineno=1047, col_offset=25)], [], None, None, lineno=1047, col_offset=20), lineno=1047, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1048, col_offset=8), 'assertEqual', Load(), lineno=1048, col_offset=8), [Attribute(Name('self', Load(), lineno=1048, col_offset=25), 'set', Load(), lineno=1048, col_offset=25), Call(Name('set', Load(), lineno=1048, col_offset=35), [List([Num(2, lineno=1048, col_offset=40), Num(6, lineno=1048, col_offset=43)], Load(), lineno=1048, col_offset=39)], [], None, None, lineno=1048, col_offset=35)], [], None, None, lineno=1048, col_offset=8), lineno=1048, col_offset=8)], [], lineno=1046, col_offset=4), FunctionDef('test_difference_non_overlap', arguments([Name('self', Param(), lineno=1050, col_offset=36)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=1051, col_offset=8), 'set', Store(), lineno=1051, col_offset=8), Sub(), Call(Name('set', Load(), lineno=1051, col_offset=20), [List([Num(8, lineno=1051, col_offset=25)], Load(), lineno=1051, col_offset=24)], [], None, None, lineno=1051, col_offset=20), lineno=1051, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1052, col_offset=8), 'assertEqual', Load(), lineno=1052, col_offset=8), [Attribute(Name('self', Load(), lineno=1052, col_offset=25), 'set', Load(), lineno=1052, col_offset=25), Call(Name('set', Load(), lineno=1052, col_offset=35), [List([Num(2, lineno=1052, col_offset=40), Num(4, lineno=1052, col_offset=43), Num(6, lineno=1052, col_offset=46)], Load(), lineno=1052, col_offset=39)], [], None, None, lineno=1052, col_offset=35)], [], None, None, lineno=1052, col_offset=8), lineno=1052, col_offset=8)], [], lineno=1050, col_offset=4), FunctionDef('test_difference_method_call', arguments([Name('self', Param(), lineno=1054, col_offset=36)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1055, col_offset=8), 'set', Load(), lineno=1055, col_offset=8), 'difference_update', Load(), lineno=1055, col_offset=8), [Call(Name('set', Load(), lineno=1055, col_offset=35), [List([Num(3, lineno=1055, col_offset=40), Num(4, lineno=1055, col_offset=43), Num(5, lineno=1055, col_offset=46)], Load(), lineno=1055, col_offset=39)], [], None, None, lineno=1055, col_offset=35)], [], None, None, lineno=1055, col_offset=8), lineno=1055, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1056, col_offset=8), 'assertEqual', Load(), lineno=1056, col_offset=8), [Attribute(Name('self', Load(), lineno=1056, col_offset=25), 'set', Load(), lineno=1056, col_offset=25), Call(Name('set', Load(), lineno=1056, col_offset=35), [List([Num(2, lineno=1056, col_offset=40), Num(6, lineno=1056, col_offset=43)], Load(), lineno=1056, col_offset=39)], [], None, None, lineno=1056, col_offset=35)], [], None, None, lineno=1056, col_offset=8), lineno=1056, col_offset=8)], [], lineno=1054, col_offset=4)], [], lineno=974, col_offset=0), ClassDef('TestMutate', [Attribute(Name('unittest', Load(), lineno=1060, col_offset=17), 'TestCase', Load(), lineno=1060, col_offset=17)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=1061, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1062, col_offset=8), 'values', Store(), lineno=1062, col_offset=8)], List([Str('a', lineno=1062, col_offset=23), Str('b', lineno=1062, col_offset=28), Str('c', lineno=1062, col_offset=33)], Load(), lineno=1062, col_offset=22), lineno=1062, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1063, col_offset=8), 'set', Store(), lineno=1063, col_offset=8)], Call(Name('set', Load(), lineno=1063, col_offset=19), [Attribute(Name('self', Load(), lineno=1063, col_offset=23), 'values', Load(), lineno=1063, col_offset=23)], [], None, None, lineno=1063, col_offset=19), lineno=1063, col_offset=8)], [], lineno=1061, col_offset=4), FunctionDef('test_add_present', arguments([Name('self', Param(), lineno=1065, col_offset=25)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1066, col_offset=8), 'set', Load(), lineno=1066, col_offset=8), 'add', Load(), lineno=1066, col_offset=8), [Str('c', lineno=1066, col_offset=21)], [], None, None, lineno=1066, col_offset=8), lineno=1066, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1067, col_offset=8), 'assertEqual', Load(), lineno=1067, col_offset=8), [Attribute(Name('self', Load(), lineno=1067, col_offset=25), 'set', Load(), lineno=1067, col_offset=25), Call(Name('set', Load(), lineno=1067, col_offset=35), [Str('abc', lineno=1067, col_offset=39)], [], None, None, lineno=1067, col_offset=35)], [], None, None, lineno=1067, col_offset=8), lineno=1067, col_offset=8)], [], lineno=1065, col_offset=4), FunctionDef('test_add_absent', arguments([Name('self', Param(), lineno=1069, col_offset=24)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1070, col_offset=8), 'set', Load(), lineno=1070, col_offset=8), 'add', Load(), lineno=1070, col_offset=8), [Str('d', lineno=1070, col_offset=21)], [], None, None, lineno=1070, col_offset=8), lineno=1070, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1071, col_offset=8), 'assertEqual', Load(), lineno=1071, col_offset=8), [Attribute(Name('self', Load(), lineno=1071, col_offset=25), 'set', Load(), lineno=1071, col_offset=25), Call(Name('set', Load(), lineno=1071, col_offset=35), [Str('abcd', lineno=1071, col_offset=39)], [], None, None, lineno=1071, col_offset=35)], [], None, None, lineno=1071, col_offset=8), lineno=1071, col_offset=8)], [], lineno=1069, col_offset=4), FunctionDef('test_add_until_full', arguments([Name('self', Param(), lineno=1073, col_offset=28)], None, None, []), [Assign([Name('tmp', Store(), lineno=1074, col_offset=8)], Call(Name('set', Load(), lineno=1074, col_offset=14), [], [], None, None, lineno=1074, col_offset=14), lineno=1074, col_offset=8), Assign([Name('expected_len', Store(), lineno=1075, col_offset=8)], Num(0, lineno=1075, col_offset=23), lineno=1075, col_offset=8), For(Name('v', Store(), lineno=1076, col_offset=12), Attribute(Name('self', Load(), lineno=1076, col_offset=17), 'values', Load(), lineno=1076, col_offset=17), [Expr(Call(Attribute(Name('tmp', Load(), lineno=1077, col_offset=12), 'add', Load(), lineno=1077, col_offset=12), [Name('v', Load(), lineno=1077, col_offset=20)], [], None, None, lineno=1077, col_offset=12), lineno=1077, col_offset=12), AugAssign(Name('expected_len', Store(), lineno=1078, col_offset=12), Add(), Num(1, lineno=1078, col_offset=28), lineno=1078, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1079, col_offset=12), 'assertEqual', Load(), lineno=1079, col_offset=12), [Call(Name('len', Load(), lineno=1079, col_offset=29), [Name('tmp', Load(), lineno=1079, col_offset=33)], [], None, None, lineno=1079, col_offset=29), Name('expected_len', Load(), lineno=1079, col_offset=39)], [], None, None, lineno=1079, col_offset=12), lineno=1079, col_offset=12)], [], lineno=1076, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1080, col_offset=8), 'assertEqual', Load(), lineno=1080, col_offset=8), [Name('tmp', Load(), lineno=1080, col_offset=25), Attribute(Name('self', Load(), lineno=1080, col_offset=30), 'set', Load(), lineno=1080, col_offset=30)], [], None, None, lineno=1080, col_offset=8), lineno=1080, col_offset=8)], [], lineno=1073, col_offset=4), FunctionDef('test_remove_present', arguments([Name('self', Param(), lineno=1082, col_offset=28)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1083, col_offset=8), 'set', Load(), lineno=1083, col_offset=8), 'remove', Load(), lineno=1083, col_offset=8), [Str('b', lineno=1083, col_offset=24)], [], None, None, lineno=1083, col_offset=8), lineno=1083, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1084, col_offset=8), 'assertEqual', Load(), lineno=1084, col_offset=8), [Attribute(Name('self', Load(), lineno=1084, col_offset=25), 'set', Load(), lineno=1084, col_offset=25), Call(Name('set', Load(), lineno=1084, col_offset=35), [Str('ac', lineno=1084, col_offset=39)], [], None, None, lineno=1084, col_offset=35)], [], None, None, lineno=1084, col_offset=8), lineno=1084, col_offset=8)], [], lineno=1082, col_offset=4), FunctionDef('test_remove_absent', arguments([Name('self', Param(), lineno=1086, col_offset=27)], None, None, []), [TryExcept([Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1088, col_offset=12), 'set', Load(), lineno=1088, col_offset=12), 'remove', Load(), lineno=1088, col_offset=12), [Str('d', lineno=1088, col_offset=28)], [], None, None, lineno=1088, col_offset=12), lineno=1088, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1089, col_offset=12), 'fail', Load(), lineno=1089, col_offset=12), [Str('Removing missing element should have raised LookupError', lineno=1089, col_offset=22)], [], None, None, lineno=1089, col_offset=12), lineno=1089, col_offset=12)], [ExceptHandler(Name('LookupError', Load(), lineno=1090, col_offset=15), None, [Pass( lineno=1091, col_offset=12)], lineno=1090, col_offset=8)], [], lineno=1087, col_offset=8)], [], lineno=1086, col_offset=4), FunctionDef('test_remove_until_empty', arguments([Name('self', Param(), lineno=1093, col_offset=32)], None, None, []), [Assign([Name('expected_len', Store(), lineno=1094, col_offset=8)], Call(Name('len', Load(), lineno=1094, col_offset=23), [Attribute(Name('self', Load(), lineno=1094, col_offset=27), 'set', Load(), lineno=1094, col_offset=27)], [], None, None, lineno=1094, col_offset=23), lineno=1094, col_offset=8), For(Name('v', Store(), lineno=1095, col_offset=12), Attribute(Name('self', Load(), lineno=1095, col_offset=17), 'values', Load(), lineno=1095, col_offset=17), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1096, col_offset=12), 'set', Load(), lineno=1096, col_offset=12), 'remove', Load(), lineno=1096, col_offset=12), [Name('v', Load(), lineno=1096, col_offset=28)], [], None, None, lineno=1096, col_offset=12), lineno=1096, col_offset=12), AugAssign(Name('expected_len', Store(), lineno=1097, col_offset=12), Sub(), Num(1, lineno=1097, col_offset=28), lineno=1097, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1098, col_offset=12), 'assertEqual', Load(), lineno=1098, col_offset=12), [Call(Name('len', Load(), lineno=1098, col_offset=29), [Attribute(Name('self', Load(), lineno=1098, col_offset=33), 'set', Load(), lineno=1098, col_offset=33)], [], None, None, lineno=1098, col_offset=29), Name('expected_len', Load(), lineno=1098, col_offset=44)], [], None, None, lineno=1098, col_offset=12), lineno=1098, col_offset=12)], [], lineno=1095, col_offset=8)], [], lineno=1093, col_offset=4), FunctionDef('test_discard_present', arguments([Name('self', Param(), lineno=1100, col_offset=29)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1101, col_offset=8), 'set', Load(), lineno=1101, col_offset=8), 'discard', Load(), lineno=1101, col_offset=8), [Str('c', lineno=1101, col_offset=25)], [], None, None, lineno=1101, col_offset=8), lineno=1101, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1102, col_offset=8), 'assertEqual', Load(), lineno=1102, col_offset=8), [Attribute(Name('self', Load(), lineno=1102, col_offset=25), 'set', Load(), lineno=1102, col_offset=25), Call(Name('set', Load(), lineno=1102, col_offset=35), [Str('ab', lineno=1102, col_offset=39)], [], None, None, lineno=1102, col_offset=35)], [], None, None, lineno=1102, col_offset=8), lineno=1102, col_offset=8)], [], lineno=1100, col_offset=4), FunctionDef('test_discard_absent', arguments([Name('self', Param(), lineno=1104, col_offset=28)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1105, col_offset=8), 'set', Load(), lineno=1105, col_offset=8), 'discard', Load(), lineno=1105, col_offset=8), [Str('d', lineno=1105, col_offset=25)], [], None, None, lineno=1105, col_offset=8), lineno=1105, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1106, col_offset=8), 'assertEqual', Load(), lineno=1106, col_offset=8), [Attribute(Name('self', Load(), lineno=1106, col_offset=25), 'set', Load(), lineno=1106, col_offset=25), Call(Name('set', Load(), lineno=1106, col_offset=35), [Str('abc', lineno=1106, col_offset=39)], [], None, None, lineno=1106, col_offset=35)], [], None, None, lineno=1106, col_offset=8), lineno=1106, col_offset=8)], [], lineno=1104, col_offset=4), FunctionDef('test_clear', arguments([Name('self', Param(), lineno=1108, col_offset=19)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1109, col_offset=8), 'set', Load(), lineno=1109, col_offset=8), 'clear', Load(), lineno=1109, col_offset=8), [], [], None, None, lineno=1109, col_offset=8), lineno=1109, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1110, col_offset=8), 'assertEqual', Load(), lineno=1110, col_offset=8), [Call(Name('len', Load(), lineno=1110, col_offset=25), [Attribute(Name('self', Load(), lineno=1110, col_offset=29), 'set', Load(), lineno=1110, col_offset=29)], [], None, None, lineno=1110, col_offset=25), Num(0, lineno=1110, col_offset=40)], [], None, None, lineno=1110, col_offset=8), lineno=1110, col_offset=8)], [], lineno=1108, col_offset=4), FunctionDef('test_pop', arguments([Name('self', Param(), lineno=1112, col_offset=17)], None, None, []), [Assign([Name('popped', Store(), lineno=1113, col_offset=8)], Dict([], [], lineno=1113, col_offset=17), lineno=1113, col_offset=8), While(Attribute(Name('self', Load(), lineno=1114, col_offset=14), 'set', Load(), lineno=1114, col_offset=14), [Assign([Subscript(Name('popped', Load(), lineno=1115, col_offset=12), Index(Call(Attribute(Attribute(Name('self', Load(), lineno=1115, col_offset=19), 'set', Load(), lineno=1115, col_offset=19), 'pop', Load(), lineno=1115, col_offset=19), [], [], None, None, lineno=1115, col_offset=19)), Store(), lineno=1115, col_offset=12)], Name('None', Load(), lineno=1115, col_offset=37), lineno=1115, col_offset=12)], [], lineno=1114, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1116, col_offset=8), 'assertEqual', Load(), lineno=1116, col_offset=8), [Call(Name('len', Load(), lineno=1116, col_offset=25), [Name('popped', Load(), lineno=1116, col_offset=29)], [], None, None, lineno=1116, col_offset=25), Call(Name('len', Load(), lineno=1116, col_offset=38), [Attribute(Name('self', Load(), lineno=1116, col_offset=42), 'values', Load(), lineno=1116, col_offset=42)], [], None, None, lineno=1116, col_offset=38)], [], None, None, lineno=1116, col_offset=8), lineno=1116, col_offset=8), For(Name('v', Store(), lineno=1117, col_offset=12), Attribute(Name('self', Load(), lineno=1117, col_offset=17), 'values', Load(), lineno=1117, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=1118, col_offset=12), 'assertIn', Load(), lineno=1118, col_offset=12), [Name('v', Load(), lineno=1118, col_offset=26), Name('popped', Load(), lineno=1118, col_offset=29)], [], None, None, lineno=1118, col_offset=12), lineno=1118, col_offset=12)], [], lineno=1117, col_offset=8)], [], lineno=1112, col_offset=4), FunctionDef('test_update_empty_tuple', arguments([Name('self', Param(), lineno=1120, col_offset=32)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1121, col_offset=8), 'set', Load(), lineno=1121, col_offset=8), 'update', Load(), lineno=1121, col_offset=8), [Tuple([], Load(), lineno=1121, col_offset=24)], [], None, None, lineno=1121, col_offset=8), lineno=1121, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1122, col_offset=8), 'assertEqual', Load(), lineno=1122, col_offset=8), [Attribute(Name('self', Load(), lineno=1122, col_offset=25), 'set', Load(), lineno=1122, col_offset=25), Call(Name('set', Load(), lineno=1122, col_offset=35), [Attribute(Name('self', Load(), lineno=1122, col_offset=39), 'values', Load(), lineno=1122, col_offset=39)], [], None, None, lineno=1122, col_offset=35)], [], None, None, lineno=1122, col_offset=8), lineno=1122, col_offset=8)], [], lineno=1120, col_offset=4), FunctionDef('test_update_unit_tuple_overlap', arguments([Name('self', Param(), lineno=1124, col_offset=39)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1125, col_offset=8), 'set', Load(), lineno=1125, col_offset=8), 'update', Load(), lineno=1125, col_offset=8), [Tuple([Str('a', lineno=1125, col_offset=25)], Load(), lineno=1125, col_offset=25)], [], None, None, lineno=1125, col_offset=8), lineno=1125, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1126, col_offset=8), 'assertEqual', Load(), lineno=1126, col_offset=8), [Attribute(Name('self', Load(), lineno=1126, col_offset=25), 'set', Load(), lineno=1126, col_offset=25), Call(Name('set', Load(), lineno=1126, col_offset=35), [Attribute(Name('self', Load(), lineno=1126, col_offset=39), 'values', Load(), lineno=1126, col_offset=39)], [], None, None, lineno=1126, col_offset=35)], [], None, None, lineno=1126, col_offset=8), lineno=1126, col_offset=8)], [], lineno=1124, col_offset=4), FunctionDef('test_update_unit_tuple_non_overlap', arguments([Name('self', Param(), lineno=1128, col_offset=43)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1129, col_offset=8), 'set', Load(), lineno=1129, col_offset=8), 'update', Load(), lineno=1129, col_offset=8), [Tuple([Str('a', lineno=1129, col_offset=25), Str('z', lineno=1129, col_offset=30)], Load(), lineno=1129, col_offset=25)], [], None, None, lineno=1129, col_offset=8), lineno=1129, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1130, col_offset=8), 'assertEqual', Load(), lineno=1130, col_offset=8), [Attribute(Name('self', Load(), lineno=1130, col_offset=25), 'set', Load(), lineno=1130, col_offset=25), Call(Name('set', Load(), lineno=1130, col_offset=35), [BinOp(Attribute(Name('self', Load(), lineno=1130, col_offset=39), 'values', Load(), lineno=1130, col_offset=39), Add(), List([Str('z', lineno=1130, col_offset=54)], Load(), lineno=1130, col_offset=53), lineno=1130, col_offset=39)], [], None, None, lineno=1130, col_offset=35)], [], None, None, lineno=1130, col_offset=8), lineno=1130, col_offset=8)], [], lineno=1128, col_offset=4)], [], lineno=1060, col_offset=0), ClassDef('TestSubsets', [Attribute(Name('unittest', Load(), lineno=1134, col_offset=18), 'TestCase', Load(), lineno=1134, col_offset=18)], [Assign([Name('case2method', Store(), lineno=1136, col_offset=4)], Dict([Str('<=', lineno=1136, col_offset=19), Str('>=', lineno=1137, col_offset=19)], [Str('issubset', lineno=1136, col_offset=25), Str('issuperset', lineno=1137, col_offset=25)], lineno=1136, col_offset=18), lineno=1136, col_offset=4), Assign([Name('reverse', Store(), lineno=1140, col_offset=4)], Dict([Str('==', lineno=1140, col_offset=15), Str('!=', lineno=1141, col_offset=15), Str('<', lineno=1142, col_offset=15), Str('>', lineno=1143, col_offset=15), Str('<=', lineno=1144, col_offset=15), Str('>=', lineno=1145, col_offset=15)], [Str('==', lineno=1140, col_offset=21), Str('!=', lineno=1141, col_offset=21), Str('>', lineno=1142, col_offset=21), Str('<', lineno=1143, col_offset=21), Str('>=', lineno=1144, col_offset=21), Str('<=', lineno=1145, col_offset=21)], lineno=1140, col_offset=14), lineno=1140, col_offset=4), FunctionDef('test_issubset', arguments([Name('self', Param(), lineno=1148, col_offset=22)], None, None, []), [Assign([Name('x', Store(), lineno=1149, col_offset=8)], Attribute(Name('self', Load(), lineno=1149, col_offset=12), 'left', Load(), lineno=1149, col_offset=12), lineno=1149, col_offset=8), Assign([Name('y', Store(), lineno=1150, col_offset=8)], Attribute(Name('self', Load(), lineno=1150, col_offset=12), 'right', Load(), lineno=1150, col_offset=12), lineno=1150, col_offset=8), For(Name('case', Store(), lineno=1151, col_offset=12), Tuple([Str('!=', lineno=1151, col_offset=20), Str('==', lineno=1151, col_offset=26), Str('<', lineno=1151, col_offset=32), Str('<=', lineno=1151, col_offset=37), Str('>', lineno=1151, col_offset=43), Str('>=', lineno=1151, col_offset=48)], Load(), lineno=1151, col_offset=20), [Assign([Name('expected', Store(), lineno=1152, col_offset=12)], Compare(Name('case', Load(), lineno=1152, col_offset=23), [In()], [Attribute(Name('self', Load(), lineno=1152, col_offset=31), 'cases', Load(), lineno=1152, col_offset=31)], lineno=1152, col_offset=23), lineno=1152, col_offset=12), Assign([Name('result', Store(), lineno=1154, col_offset=12)], Call(Name('eval', Load(), lineno=1154, col_offset=21), [BinOp(BinOp(Str('x', lineno=1154, col_offset=26), Add(), Name('case', Load(), lineno=1154, col_offset=32), lineno=1154, col_offset=26), Add(), Str('y', lineno=1154, col_offset=39), lineno=1154, col_offset=37), Call(Name('locals', Load(), lineno=1154, col_offset=44), [], [], None, None, lineno=1154, col_offset=44)], [], None, None, lineno=1154, col_offset=21), lineno=1154, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1155, col_offset=12), 'assertEqual', Load(), lineno=1155, col_offset=12), [Name('result', Load(), lineno=1155, col_offset=29), Name('expected', Load(), lineno=1155, col_offset=37)], [], None, None, lineno=1155, col_offset=12), lineno=1155, col_offset=12), If(Compare(Name('case', Load(), lineno=1157, col_offset=15), [In()], [Attribute(Name('TestSubsets', Load(), lineno=1157, col_offset=23), 'case2method', Load(), lineno=1157, col_offset=23)], lineno=1157, col_offset=15), [Assign([Name('method', Store(), lineno=1158, col_offset=16)], Call(Name('getattr', Load(), lineno=1158, col_offset=25), [Name('x', Load(), lineno=1158, col_offset=33), Subscript(Attribute(Name('TestSubsets', Load(), lineno=1158, col_offset=36), 'case2method', Load(), lineno=1158, col_offset=36), Index(Name('case', Load(), lineno=1158, col_offset=60)), Load(), lineno=1158, col_offset=36)], [], None, None, lineno=1158, col_offset=25), lineno=1158, col_offset=16), Assign([Name('result', Store(), lineno=1159, col_offset=16)], Call(Name('method', Load(), lineno=1159, col_offset=25), [Name('y', Load(), lineno=1159, col_offset=32)], [], None, None, lineno=1159, col_offset=25), lineno=1159, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=1160, col_offset=16), 'assertEqual', Load(), lineno=1160, col_offset=16), [Name('result', Load(), lineno=1160, col_offset=33), Name('expected', Load(), lineno=1160, col_offset=41)], [], None, None, lineno=1160, col_offset=16), lineno=1160, col_offset=16)], [], lineno=1157, col_offset=12), Assign([Name('rcase', Store(), lineno=1163, col_offset=12)], Subscript(Attribute(Name('TestSubsets', Load(), lineno=1163, col_offset=20), 'reverse', Load(), lineno=1163, col_offset=20), Index(Name('case', Load(), lineno=1163, col_offset=40)), Load(), lineno=1163, col_offset=20), lineno=1163, col_offset=12), Assign([Name('result', Store(), lineno=1164, col_offset=12)], Call(Name('eval', Load(), lineno=1164, col_offset=21), [BinOp(BinOp(Str('y', lineno=1164, col_offset=26), Add(), Name('rcase', Load(), lineno=1164, col_offset=32), lineno=1164, col_offset=26), Add(), Str('x', lineno=1164, col_offset=40), lineno=1164, col_offset=38), Call(Name('locals', Load(), lineno=1164, col_offset=45), [], [], None, None, lineno=1164, col_offset=45)], [], None, None, lineno=1164, col_offset=21), lineno=1164, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1165, col_offset=12), 'assertEqual', Load(), lineno=1165, col_offset=12), [Name('result', Load(), lineno=1165, col_offset=29), Name('expected', Load(), lineno=1165, col_offset=37)], [], None, None, lineno=1165, col_offset=12), lineno=1165, col_offset=12), If(Compare(Name('rcase', Load(), lineno=1166, col_offset=15), [In()], [Attribute(Name('TestSubsets', Load(), lineno=1166, col_offset=24), 'case2method', Load(), lineno=1166, col_offset=24)], lineno=1166, col_offset=15), [Assign([Name('method', Store(), lineno=1167, col_offset=16)], Call(Name('getattr', Load(), lineno=1167, col_offset=25), [Name('y', Load(), lineno=1167, col_offset=33), Subscript(Attribute(Name('TestSubsets', Load(), lineno=1167, col_offset=36), 'case2method', Load(), lineno=1167, col_offset=36), Index(Name('rcase', Load(), lineno=1167, col_offset=60)), Load(), lineno=1167, col_offset=36)], [], None, None, lineno=1167, col_offset=25), lineno=1167, col_offset=16), Assign([Name('result', Store(), lineno=1168, col_offset=16)], Call(Name('method', Load(), lineno=1168, col_offset=25), [Name('x', Load(), lineno=1168, col_offset=32)], [], None, None, lineno=1168, col_offset=25), lineno=1168, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=1169, col_offset=16), 'assertEqual', Load(), lineno=1169, col_offset=16), [Name('result', Load(), lineno=1169, col_offset=33), Name('expected', Load(), lineno=1169, col_offset=41)], [], None, None, lineno=1169, col_offset=16), lineno=1169, col_offset=16)], [], lineno=1166, col_offset=12)], [], lineno=1151, col_offset=8)], [], lineno=1148, col_offset=4)], [], lineno=1134, col_offset=0), ClassDef('TestSubsetEqualEmpty', [Name('TestSubsets', Load(), lineno=1172, col_offset=27)], [Assign([Name('left', Store(), lineno=1173, col_offset=4)], Call(Name('set', Load(), lineno=1173, col_offset=12), [], [], None, None, lineno=1173, col_offset=12), lineno=1173, col_offset=4), Assign([Name('right', Store(), lineno=1174, col_offset=4)], Call(Name('set', Load(), lineno=1174, col_offset=12), [], [], None, None, lineno=1174, col_offset=12), lineno=1174, col_offset=4), Assign([Name('name', Store(), lineno=1175, col_offset=4)], Str('both empty', lineno=1175, col_offset=12), lineno=1175, col_offset=4), Assign([Name('cases', Store(), lineno=1176, col_offset=4)], Tuple([Str('==', lineno=1176, col_offset=12), Str('<=', lineno=1176, col_offset=18), Str('>=', lineno=1176, col_offset=24)], Load(), lineno=1176, col_offset=12), lineno=1176, col_offset=4)], [], lineno=1172, col_offset=0), ClassDef('TestSubsetEqualNonEmpty', [Name('TestSubsets', Load(), lineno=1180, col_offset=30)], [Assign([Name('left', Store(), lineno=1181, col_offset=4)], Call(Name('set', Load(), lineno=1181, col_offset=12), [List([Num(1, lineno=1181, col_offset=17), Num(2, lineno=1181, col_offset=20)], Load(), lineno=1181, col_offset=16)], [], None, None, lineno=1181, col_offset=12), lineno=1181, col_offset=4), Assign([Name('right', Store(), lineno=1182, col_offset=4)], Call(Name('set', Load(), lineno=1182, col_offset=12), [List([Num(1, lineno=1182, col_offset=17), Num(2, lineno=1182, col_offset=20)], Load(), lineno=1182, col_offset=16)], [], None, None, lineno=1182, col_offset=12), lineno=1182, col_offset=4), Assign([Name('name', Store(), lineno=1183, col_offset=4)], Str('equal pair', lineno=1183, col_offset=12), lineno=1183, col_offset=4), Assign([Name('cases', Store(), lineno=1184, col_offset=4)], Tuple([Str('==', lineno=1184, col_offset=12), Str('<=', lineno=1184, col_offset=18), Str('>=', lineno=1184, col_offset=24)], Load(), lineno=1184, col_offset=12), lineno=1184, col_offset=4)], [], lineno=1180, col_offset=0), ClassDef('TestSubsetEmptyNonEmpty', [Name('TestSubsets', Load(), lineno=1188, col_offset=30)], [Assign([Name('left', Store(), lineno=1189, col_offset=4)], Call(Name('set', Load(), lineno=1189, col_offset=12), [], [], None, None, lineno=1189, col_offset=12), lineno=1189, col_offset=4), Assign([Name('right', Store(), lineno=1190, col_offset=4)], Call(Name('set', Load(), lineno=1190, col_offset=12), [List([Num(1, lineno=1190, col_offset=17), Num(2, lineno=1190, col_offset=20)], Load(), lineno=1190, col_offset=16)], [], None, None, lineno=1190, col_offset=12), lineno=1190, col_offset=4), Assign([Name('name', Store(), lineno=1191, col_offset=4)], Str('one empty, one non-empty', lineno=1191, col_offset=12), lineno=1191, col_offset=4), Assign([Name('cases', Store(), lineno=1192, col_offset=4)], Tuple([Str('!=', lineno=1192, col_offset=12), Str('<', lineno=1192, col_offset=18), Str('<=', lineno=1192, col_offset=23)], Load(), lineno=1192, col_offset=12), lineno=1192, col_offset=4)], [], lineno=1188, col_offset=0), ClassDef('TestSubsetPartial', [Name('TestSubsets', Load(), lineno=1196, col_offset=24)], [Assign([Name('left', Store(), lineno=1197, col_offset=4)], Call(Name('set', Load(), lineno=1197, col_offset=12), [List([Num(1, lineno=1197, col_offset=17)], Load(), lineno=1197, col_offset=16)], [], None, None, lineno=1197, col_offset=12), lineno=1197, col_offset=4), Assign([Name('right', Store(), lineno=1198, col_offset=4)], Call(Name('set', Load(), lineno=1198, col_offset=12), [List([Num(1, lineno=1198, col_offset=17), Num(2, lineno=1198, col_offset=20)], Load(), lineno=1198, col_offset=16)], [], None, None, lineno=1198, col_offset=12), lineno=1198, col_offset=4), Assign([Name('name', Store(), lineno=1199, col_offset=4)], Str('one a non-empty proper subset of other', lineno=1199, col_offset=12), lineno=1199, col_offset=4), Assign([Name('cases', Store(), lineno=1200, col_offset=4)], Tuple([Str('!=', lineno=1200, col_offset=12), Str('<', lineno=1200, col_offset=18), Str('<=', lineno=1200, col_offset=23)], Load(), lineno=1200, col_offset=12), lineno=1200, col_offset=4)], [], lineno=1196, col_offset=0), ClassDef('TestSubsetNonOverlap', [Name('TestSubsets', Load(), lineno=1204, col_offset=27)], [Assign([Name('left', Store(), lineno=1205, col_offset=4)], Call(Name('set', Load(), lineno=1205, col_offset=12), [List([Num(1, lineno=1205, col_offset=17)], Load(), lineno=1205, col_offset=16)], [], None, None, lineno=1205, col_offset=12), lineno=1205, col_offset=4), Assign([Name('right', Store(), lineno=1206, col_offset=4)], Call(Name('set', Load(), lineno=1206, col_offset=12), [List([Num(2, lineno=1206, col_offset=17)], Load(), lineno=1206, col_offset=16)], [], None, None, lineno=1206, col_offset=12), lineno=1206, col_offset=4), Assign([Name('name', Store(), lineno=1207, col_offset=4)], Str('neither empty, neither contains', lineno=1207, col_offset=12), lineno=1207, col_offset=4), Assign([Name('cases', Store(), lineno=1208, col_offset=4)], Str('!=', lineno=1208, col_offset=12), lineno=1208, col_offset=4)], [], lineno=1204, col_offset=0), ClassDef('TestOnlySetsInBinaryOps', [Attribute(Name('unittest', Load(), lineno=1212, col_offset=30), 'TestCase', Load(), lineno=1212, col_offset=30)], [FunctionDef('test_eq_ne', arguments([Name('self', Param(), lineno=1214, col_offset=19)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1216, col_offset=8), 'assertEqual', Load(), lineno=1216, col_offset=8), [Compare(Attribute(Name('self', Load(), lineno=1216, col_offset=25), 'other', Load(), lineno=1216, col_offset=25), [Eq()], [Attribute(Name('self', Load(), lineno=1216, col_offset=39), 'set', Load(), lineno=1216, col_offset=39)], lineno=1216, col_offset=25), Name('False', Load(), lineno=1216, col_offset=49)], [], None, None, lineno=1216, col_offset=8), lineno=1216, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1217, col_offset=8), 'assertEqual', Load(), lineno=1217, col_offset=8), [Compare(Attribute(Name('self', Load(), lineno=1217, col_offset=25), 'set', Load(), lineno=1217, col_offset=25), [Eq()], [Attribute(Name('self', Load(), lineno=1217, col_offset=37), 'other', Load(), lineno=1217, col_offset=37)], lineno=1217, col_offset=25), Name('False', Load(), lineno=1217, col_offset=49)], [], None, None, lineno=1217, col_offset=8), lineno=1217, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1218, col_offset=8), 'assertEqual', Load(), lineno=1218, col_offset=8), [Compare(Attribute(Name('self', Load(), lineno=1218, col_offset=25), 'other', Load(), lineno=1218, col_offset=25), [NotEq()], [Attribute(Name('self', Load(), lineno=1218, col_offset=39), 'set', Load(), lineno=1218, col_offset=39)], lineno=1218, col_offset=25), Name('True', Load(), lineno=1218, col_offset=49)], [], None, None, lineno=1218, col_offset=8), lineno=1218, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1219, col_offset=8), 'assertEqual', Load(), lineno=1219, col_offset=8), [Compare(Attribute(Name('self', Load(), lineno=1219, col_offset=25), 'set', Load(), lineno=1219, col_offset=25), [NotEq()], [Attribute(Name('self', Load(), lineno=1219, col_offset=37), 'other', Load(), lineno=1219, col_offset=37)], lineno=1219, col_offset=25), Name('True', Load(), lineno=1219, col_offset=49)], [], None, None, lineno=1219, col_offset=8), lineno=1219, col_offset=8)], [], lineno=1214, col_offset=4), FunctionDef('test_ge_gt_le_lt', arguments([Name('self', Param(), lineno=1221, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1222, col_offset=8), 'assertRaises', Load(), lineno=1222, col_offset=8), [Name('TypeError', Load(), lineno=1222, col_offset=26), Lambda(arguments([], None, None, []), Compare(Attribute(Name('self', Load(), lineno=1222, col_offset=45), 'set', Load(), lineno=1222, col_offset=45), [Lt()], [Attribute(Name('self', Load(), lineno=1222, col_offset=56), 'other', Load(), lineno=1222, col_offset=56)], lineno=1222, col_offset=45), lineno=1222, col_offset=37)], [], None, None, lineno=1222, col_offset=8), lineno=1222, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1223, col_offset=8), 'assertRaises', Load(), lineno=1223, col_offset=8), [Name('TypeError', Load(), lineno=1223, col_offset=26), Lambda(arguments([], None, None, []), Compare(Attribute(Name('self', Load(), lineno=1223, col_offset=45), 'set', Load(), lineno=1223, col_offset=45), [LtE()], [Attribute(Name('self', Load(), lineno=1223, col_offset=57), 'other', Load(), lineno=1223, col_offset=57)], lineno=1223, col_offset=45), lineno=1223, col_offset=37)], [], None, None, lineno=1223, col_offset=8), lineno=1223, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1224, col_offset=8), 'assertRaises', Load(), lineno=1224, col_offset=8), [Name('TypeError', Load(), lineno=1224, col_offset=26), Lambda(arguments([], None, None, []), Compare(Attribute(Name('self', Load(), lineno=1224, col_offset=45), 'set', Load(), lineno=1224, col_offset=45), [Gt()], [Attribute(Name('self', Load(), lineno=1224, col_offset=56), 'other', Load(), lineno=1224, col_offset=56)], lineno=1224, col_offset=45), lineno=1224, col_offset=37)], [], None, None, lineno=1224, col_offset=8), lineno=1224, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1225, col_offset=8), 'assertRaises', Load(), lineno=1225, col_offset=8), [Name('TypeError', Load(), lineno=1225, col_offset=26), Lambda(arguments([], None, None, []), Compare(Attribute(Name('self', Load(), lineno=1225, col_offset=45), 'set', Load(), lineno=1225, col_offset=45), [GtE()], [Attribute(Name('self', Load(), lineno=1225, col_offset=57), 'other', Load(), lineno=1225, col_offset=57)], lineno=1225, col_offset=45), lineno=1225, col_offset=37)], [], None, None, lineno=1225, col_offset=8), lineno=1225, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1227, col_offset=8), 'assertRaises', Load(), lineno=1227, col_offset=8), [Name('TypeError', Load(), lineno=1227, col_offset=26), Lambda(arguments([], None, None, []), Compare(Attribute(Name('self', Load(), lineno=1227, col_offset=45), 'other', Load(), lineno=1227, col_offset=45), [Lt()], [Attribute(Name('self', Load(), lineno=1227, col_offset=58), 'set', Load(), lineno=1227, col_offset=58)], lineno=1227, col_offset=45), lineno=1227, col_offset=37)], [], None, None, lineno=1227, col_offset=8), lineno=1227, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1228, col_offset=8), 'assertRaises', Load(), lineno=1228, col_offset=8), [Name('TypeError', Load(), lineno=1228, col_offset=26), Lambda(arguments([], None, None, []), Compare(Attribute(Name('self', Load(), lineno=1228, col_offset=45), 'other', Load(), lineno=1228, col_offset=45), [LtE()], [Attribute(Name('self', Load(), lineno=1228, col_offset=59), 'set', Load(), lineno=1228, col_offset=59)], lineno=1228, col_offset=45), lineno=1228, col_offset=37)], [], None, None, lineno=1228, col_offset=8), lineno=1228, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1229, col_offset=8), 'assertRaises', Load(), lineno=1229, col_offset=8), [Name('TypeError', Load(), lineno=1229, col_offset=26), Lambda(arguments([], None, None, []), Compare(Attribute(Name('self', Load(), lineno=1229, col_offset=45), 'other', Load(), lineno=1229, col_offset=45), [Gt()], [Attribute(Name('self', Load(), lineno=1229, col_offset=58), 'set', Load(), lineno=1229, col_offset=58)], lineno=1229, col_offset=45), lineno=1229, col_offset=37)], [], None, None, lineno=1229, col_offset=8), lineno=1229, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1230, col_offset=8), 'assertRaises', Load(), lineno=1230, col_offset=8), [Name('TypeError', Load(), lineno=1230, col_offset=26), Lambda(arguments([], None, None, []), Compare(Attribute(Name('self', Load(), lineno=1230, col_offset=45), 'other', Load(), lineno=1230, col_offset=45), [GtE()], [Attribute(Name('self', Load(), lineno=1230, col_offset=59), 'set', Load(), lineno=1230, col_offset=59)], lineno=1230, col_offset=45), lineno=1230, col_offset=37)], [], None, None, lineno=1230, col_offset=8), lineno=1230, col_offset=8)], [], lineno=1221, col_offset=4), FunctionDef('test_update_operator', arguments([Name('self', Param(), lineno=1232, col_offset=29)], None, None, []), [TryExcept([AugAssign(Attribute(Name('self', Load(), lineno=1234, col_offset=12), 'set', Store(), lineno=1234, col_offset=12), BitOr(), Attribute(Name('self', Load(), lineno=1234, col_offset=24), 'other', Load(), lineno=1234, col_offset=24), lineno=1234, col_offset=12)], [ExceptHandler(Name('TypeError', Load(), lineno=1235, col_offset=15), None, [Pass( lineno=1236, col_offset=12)], lineno=1235, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=1238, col_offset=12), 'fail', Load(), lineno=1238, col_offset=12), [Str('expected TypeError', lineno=1238, col_offset=22)], [], None, None, lineno=1238, col_offset=12), lineno=1238, col_offset=12)], lineno=1233, col_offset=8)], [], lineno=1232, col_offset=4), FunctionDef('test_update', arguments([Name('self', Param(), lineno=1240, col_offset=20)], None, None, []), [If(Attribute(Name('self', Load(), lineno=1241, col_offset=11), 'otherIsIterable', Load(), lineno=1241, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1242, col_offset=12), 'set', Load(), lineno=1242, col_offset=12), 'update', Load(), lineno=1242, col_offset=12), [Attribute(Name('self', Load(), lineno=1242, col_offset=28), 'other', Load(), lineno=1242, col_offset=28)], [], None, None, lineno=1242, col_offset=12), lineno=1242, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=1244, col_offset=12), 'assertRaises', Load(), lineno=1244, col_offset=12), [Name('TypeError', Load(), lineno=1244, col_offset=30), Attribute(Attribute(Name('self', Load(), lineno=1244, col_offset=41), 'set', Load(), lineno=1244, col_offset=41), 'update', Load(), lineno=1244, col_offset=41), Attribute(Name('self', Load(), lineno=1244, col_offset=58), 'other', Load(), lineno=1244, col_offset=58)], [], None, None, lineno=1244, col_offset=12), lineno=1244, col_offset=12)], lineno=1241, col_offset=8)], [], lineno=1240, col_offset=4), FunctionDef('test_union', arguments([Name('self', Param(), lineno=1246, col_offset=19)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1247, col_offset=8), 'assertRaises', Load(), lineno=1247, col_offset=8), [Name('TypeError', Load(), lineno=1247, col_offset=26), Lambda(arguments([], None, None, []), BinOp(Attribute(Name('self', Load(), lineno=1247, col_offset=45), 'set', Load(), lineno=1247, col_offset=45), BitOr(), Attribute(Name('self', Load(), lineno=1247, col_offset=56), 'other', Load(), lineno=1247, col_offset=56), lineno=1247, col_offset=45), lineno=1247, col_offset=37)], [], None, None, lineno=1247, col_offset=8), lineno=1247, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1248, col_offset=8), 'assertRaises', Load(), lineno=1248, col_offset=8), [Name('TypeError', Load(), lineno=1248, col_offset=26), Lambda(arguments([], None, None, []), BinOp(Attribute(Name('self', Load(), lineno=1248, col_offset=45), 'other', Load(), lineno=1248, col_offset=45), BitOr(), Attribute(Name('self', Load(), lineno=1248, col_offset=58), 'set', Load(), lineno=1248, col_offset=58), lineno=1248, col_offset=45), lineno=1248, col_offset=37)], [], None, None, lineno=1248, col_offset=8), lineno=1248, col_offset=8), If(Attribute(Name('self', Load(), lineno=1249, col_offset=11), 'otherIsIterable', Load(), lineno=1249, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1250, col_offset=12), 'set', Load(), lineno=1250, col_offset=12), 'union', Load(), lineno=1250, col_offset=12), [Attribute(Name('self', Load(), lineno=1250, col_offset=27), 'other', Load(), lineno=1250, col_offset=27)], [], None, None, lineno=1250, col_offset=12), lineno=1250, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=1252, col_offset=12), 'assertRaises', Load(), lineno=1252, col_offset=12), [Name('TypeError', Load(), lineno=1252, col_offset=30), Attribute(Attribute(Name('self', Load(), lineno=1252, col_offset=41), 'set', Load(), lineno=1252, col_offset=41), 'union', Load(), lineno=1252, col_offset=41), Attribute(Name('self', Load(), lineno=1252, col_offset=57), 'other', Load(), lineno=1252, col_offset=57)], [], None, None, lineno=1252, col_offset=12), lineno=1252, col_offset=12)], lineno=1249, col_offset=8)], [], lineno=1246, col_offset=4), FunctionDef('test_intersection_update_operator', arguments([Name('self', Param(), lineno=1254, col_offset=42)], None, None, []), [TryExcept([AugAssign(Attribute(Name('self', Load(), lineno=1256, col_offset=12), 'set', Store(), lineno=1256, col_offset=12), BitAnd(), Attribute(Name('self', Load(), lineno=1256, col_offset=24), 'other', Load(), lineno=1256, col_offset=24), lineno=1256, col_offset=12)], [ExceptHandler(Name('TypeError', Load(), lineno=1257, col_offset=15), None, [Pass( lineno=1258, col_offset=12)], lineno=1257, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=1260, col_offset=12), 'fail', Load(), lineno=1260, col_offset=12), [Str('expected TypeError', lineno=1260, col_offset=22)], [], None, None, lineno=1260, col_offset=12), lineno=1260, col_offset=12)], lineno=1255, col_offset=8)], [], lineno=1254, col_offset=4), FunctionDef('test_intersection_update', arguments([Name('self', Param(), lineno=1262, col_offset=33)], None, None, []), [If(Attribute(Name('self', Load(), lineno=1263, col_offset=11), 'otherIsIterable', Load(), lineno=1263, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1264, col_offset=12), 'set', Load(), lineno=1264, col_offset=12), 'intersection_update', Load(), lineno=1264, col_offset=12), [Attribute(Name('self', Load(), lineno=1264, col_offset=41), 'other', Load(), lineno=1264, col_offset=41)], [], None, None, lineno=1264, col_offset=12), lineno=1264, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=1266, col_offset=12), 'assertRaises', Load(), lineno=1266, col_offset=12), [Name('TypeError', Load(), lineno=1266, col_offset=30), Attribute(Attribute(Name('self', Load(), lineno=1267, col_offset=30), 'set', Load(), lineno=1267, col_offset=30), 'intersection_update', Load(), lineno=1267, col_offset=30), Attribute(Name('self', Load(), lineno=1268, col_offset=30), 'other', Load(), lineno=1268, col_offset=30)], [], None, None, lineno=1266, col_offset=12), lineno=1266, col_offset=12)], lineno=1263, col_offset=8)], [], lineno=1262, col_offset=4), FunctionDef('test_intersection', arguments([Name('self', Param(), lineno=1270, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1271, col_offset=8), 'assertRaises', Load(), lineno=1271, col_offset=8), [Name('TypeError', Load(), lineno=1271, col_offset=26), Lambda(arguments([], None, None, []), BinOp(Attribute(Name('self', Load(), lineno=1271, col_offset=45), 'set', Load(), lineno=1271, col_offset=45), BitAnd(), Attribute(Name('self', Load(), lineno=1271, col_offset=56), 'other', Load(), lineno=1271, col_offset=56), lineno=1271, col_offset=45), lineno=1271, col_offset=37)], [], None, None, lineno=1271, col_offset=8), lineno=1271, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1272, col_offset=8), 'assertRaises', Load(), lineno=1272, col_offset=8), [Name('TypeError', Load(), lineno=1272, col_offset=26), Lambda(arguments([], None, None, []), BinOp(Attribute(Name('self', Load(), lineno=1272, col_offset=45), 'other', Load(), lineno=1272, col_offset=45), BitAnd(), Attribute(Name('self', Load(), lineno=1272, col_offset=58), 'set', Load(), lineno=1272, col_offset=58), lineno=1272, col_offset=45), lineno=1272, col_offset=37)], [], None, None, lineno=1272, col_offset=8), lineno=1272, col_offset=8), If(Attribute(Name('self', Load(), lineno=1273, col_offset=11), 'otherIsIterable', Load(), lineno=1273, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1274, col_offset=12), 'set', Load(), lineno=1274, col_offset=12), 'intersection', Load(), lineno=1274, col_offset=12), [Attribute(Name('self', Load(), lineno=1274, col_offset=34), 'other', Load(), lineno=1274, col_offset=34)], [], None, None, lineno=1274, col_offset=12), lineno=1274, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=1276, col_offset=12), 'assertRaises', Load(), lineno=1276, col_offset=12), [Name('TypeError', Load(), lineno=1276, col_offset=30), Attribute(Attribute(Name('self', Load(), lineno=1276, col_offset=41), 'set', Load(), lineno=1276, col_offset=41), 'intersection', Load(), lineno=1276, col_offset=41), Attribute(Name('self', Load(), lineno=1276, col_offset=64), 'other', Load(), lineno=1276, col_offset=64)], [], None, None, lineno=1276, col_offset=12), lineno=1276, col_offset=12)], lineno=1273, col_offset=8)], [], lineno=1270, col_offset=4), FunctionDef('test_sym_difference_update_operator', arguments([Name('self', Param(), lineno=1278, col_offset=44)], None, None, []), [TryExcept([AugAssign(Attribute(Name('self', Load(), lineno=1280, col_offset=12), 'set', Store(), lineno=1280, col_offset=12), BitXor(), Attribute(Name('self', Load(), lineno=1280, col_offset=24), 'other', Load(), lineno=1280, col_offset=24), lineno=1280, col_offset=12)], [ExceptHandler(Name('TypeError', Load(), lineno=1281, col_offset=15), None, [Pass( lineno=1282, col_offset=12)], lineno=1281, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=1284, col_offset=12), 'fail', Load(), lineno=1284, col_offset=12), [Str('expected TypeError', lineno=1284, col_offset=22)], [], None, None, lineno=1284, col_offset=12), lineno=1284, col_offset=12)], lineno=1279, col_offset=8)], [], lineno=1278, col_offset=4), FunctionDef('test_sym_difference_update', arguments([Name('self', Param(), lineno=1286, col_offset=35)], None, None, []), [If(Attribute(Name('self', Load(), lineno=1287, col_offset=11), 'otherIsIterable', Load(), lineno=1287, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1288, col_offset=12), 'set', Load(), lineno=1288, col_offset=12), 'symmetric_difference_update', Load(), lineno=1288, col_offset=12), [Attribute(Name('self', Load(), lineno=1288, col_offset=49), 'other', Load(), lineno=1288, col_offset=49)], [], None, None, lineno=1288, col_offset=12), lineno=1288, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=1290, col_offset=12), 'assertRaises', Load(), lineno=1290, col_offset=12), [Name('TypeError', Load(), lineno=1290, col_offset=30), Attribute(Attribute(Name('self', Load(), lineno=1291, col_offset=30), 'set', Load(), lineno=1291, col_offset=30), 'symmetric_difference_update', Load(), lineno=1291, col_offset=30), Attribute(Name('self', Load(), lineno=1292, col_offset=30), 'other', Load(), lineno=1292, col_offset=30)], [], None, None, lineno=1290, col_offset=12), lineno=1290, col_offset=12)], lineno=1287, col_offset=8)], [], lineno=1286, col_offset=4), FunctionDef('test_sym_difference', arguments([Name('self', Param(), lineno=1294, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1295, col_offset=8), 'assertRaises', Load(), lineno=1295, col_offset=8), [Name('TypeError', Load(), lineno=1295, col_offset=26), Lambda(arguments([], None, None, []), BinOp(Attribute(Name('self', Load(), lineno=1295, col_offset=45), 'set', Load(), lineno=1295, col_offset=45), BitXor(), Attribute(Name('self', Load(), lineno=1295, col_offset=56), 'other', Load(), lineno=1295, col_offset=56), lineno=1295, col_offset=45), lineno=1295, col_offset=37)], [], None, None, lineno=1295, col_offset=8), lineno=1295, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1296, col_offset=8), 'assertRaises', Load(), lineno=1296, col_offset=8), [Name('TypeError', Load(), lineno=1296, col_offset=26), Lambda(arguments([], None, None, []), BinOp(Attribute(Name('self', Load(), lineno=1296, col_offset=45), 'other', Load(), lineno=1296, col_offset=45), BitXor(), Attribute(Name('self', Load(), lineno=1296, col_offset=58), 'set', Load(), lineno=1296, col_offset=58), lineno=1296, col_offset=45), lineno=1296, col_offset=37)], [], None, None, lineno=1296, col_offset=8), lineno=1296, col_offset=8), If(Attribute(Name('self', Load(), lineno=1297, col_offset=11), 'otherIsIterable', Load(), lineno=1297, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1298, col_offset=12), 'set', Load(), lineno=1298, col_offset=12), 'symmetric_difference', Load(), lineno=1298, col_offset=12), [Attribute(Name('self', Load(), lineno=1298, col_offset=42), 'other', Load(), lineno=1298, col_offset=42)], [], None, None, lineno=1298, col_offset=12), lineno=1298, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=1300, col_offset=12), 'assertRaises', Load(), lineno=1300, col_offset=12), [Name('TypeError', Load(), lineno=1300, col_offset=30), Attribute(Attribute(Name('self', Load(), lineno=1300, col_offset=41), 'set', Load(), lineno=1300, col_offset=41), 'symmetric_difference', Load(), lineno=1300, col_offset=41), Attribute(Name('self', Load(), lineno=1300, col_offset=72), 'other', Load(), lineno=1300, col_offset=72)], [], None, None, lineno=1300, col_offset=12), lineno=1300, col_offset=12)], lineno=1297, col_offset=8)], [], lineno=1294, col_offset=4), FunctionDef('test_difference_update_operator', arguments([Name('self', Param(), lineno=1302, col_offset=40)], None, None, []), [TryExcept([AugAssign(Attribute(Name('self', Load(), lineno=1304, col_offset=12), 'set', Store(), lineno=1304, col_offset=12), Sub(), Attribute(Name('self', Load(), lineno=1304, col_offset=24), 'other', Load(), lineno=1304, col_offset=24), lineno=1304, col_offset=12)], [ExceptHandler(Name('TypeError', Load(), lineno=1305, col_offset=15), None, [Pass( lineno=1306, col_offset=12)], lineno=1305, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=1308, col_offset=12), 'fail', Load(), lineno=1308, col_offset=12), [Str('expected TypeError', lineno=1308, col_offset=22)], [], None, None, lineno=1308, col_offset=12), lineno=1308, col_offset=12)], lineno=1303, col_offset=8)], [], lineno=1302, col_offset=4), FunctionDef('test_difference_update', arguments([Name('self', Param(), lineno=1310, col_offset=31)], None, None, []), [If(Attribute(Name('self', Load(), lineno=1311, col_offset=11), 'otherIsIterable', Load(), lineno=1311, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1312, col_offset=12), 'set', Load(), lineno=1312, col_offset=12), 'difference_update', Load(), lineno=1312, col_offset=12), [Attribute(Name('self', Load(), lineno=1312, col_offset=39), 'other', Load(), lineno=1312, col_offset=39)], [], None, None, lineno=1312, col_offset=12), lineno=1312, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=1314, col_offset=12), 'assertRaises', Load(), lineno=1314, col_offset=12), [Name('TypeError', Load(), lineno=1314, col_offset=30), Attribute(Attribute(Name('self', Load(), lineno=1315, col_offset=30), 'set', Load(), lineno=1315, col_offset=30), 'difference_update', Load(), lineno=1315, col_offset=30), Attribute(Name('self', Load(), lineno=1316, col_offset=30), 'other', Load(), lineno=1316, col_offset=30)], [], None, None, lineno=1314, col_offset=12), lineno=1314, col_offset=12)], lineno=1311, col_offset=8)], [], lineno=1310, col_offset=4), FunctionDef('test_difference', arguments([Name('self', Param(), lineno=1318, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1319, col_offset=8), 'assertRaises', Load(), lineno=1319, col_offset=8), [Name('TypeError', Load(), lineno=1319, col_offset=26), Lambda(arguments([], None, None, []), BinOp(Attribute(Name('self', Load(), lineno=1319, col_offset=45), 'set', Load(), lineno=1319, col_offset=45), Sub(), Attribute(Name('self', Load(), lineno=1319, col_offset=56), 'other', Load(), lineno=1319, col_offset=56), lineno=1319, col_offset=45), lineno=1319, col_offset=37)], [], None, None, lineno=1319, col_offset=8), lineno=1319, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1320, col_offset=8), 'assertRaises', Load(), lineno=1320, col_offset=8), [Name('TypeError', Load(), lineno=1320, col_offset=26), Lambda(arguments([], None, None, []), BinOp(Attribute(Name('self', Load(), lineno=1320, col_offset=45), 'other', Load(), lineno=1320, col_offset=45), Sub(), Attribute(Name('self', Load(), lineno=1320, col_offset=58), 'set', Load(), lineno=1320, col_offset=58), lineno=1320, col_offset=45), lineno=1320, col_offset=37)], [], None, None, lineno=1320, col_offset=8), lineno=1320, col_offset=8), If(Attribute(Name('self', Load(), lineno=1321, col_offset=11), 'otherIsIterable', Load(), lineno=1321, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1322, col_offset=12), 'set', Load(), lineno=1322, col_offset=12), 'difference', Load(), lineno=1322, col_offset=12), [Attribute(Name('self', Load(), lineno=1322, col_offset=32), 'other', Load(), lineno=1322, col_offset=32)], [], None, None, lineno=1322, col_offset=12), lineno=1322, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=1324, col_offset=12), 'assertRaises', Load(), lineno=1324, col_offset=12), [Name('TypeError', Load(), lineno=1324, col_offset=30), Attribute(Attribute(Name('self', Load(), lineno=1324, col_offset=41), 'set', Load(), lineno=1324, col_offset=41), 'difference', Load(), lineno=1324, col_offset=41), Attribute(Name('self', Load(), lineno=1324, col_offset=62), 'other', Load(), lineno=1324, col_offset=62)], [], None, None, lineno=1324, col_offset=12), lineno=1324, col_offset=12)], lineno=1321, col_offset=8)], [], lineno=1318, col_offset=4)], [], lineno=1212, col_offset=0), ClassDef('TestOnlySetsNumeric', [Name('TestOnlySetsInBinaryOps', Load(), lineno=1328, col_offset=26)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=1329, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1330, col_offset=8), 'set', Store(), lineno=1330, col_offset=8)], Call(Name('set', Load(), lineno=1330, col_offset=21), [Tuple([Num(1, lineno=1330, col_offset=26), Num(2, lineno=1330, col_offset=29), Num(3, lineno=1330, col_offset=32)], Load(), lineno=1330, col_offset=26)], [], None, None, lineno=1330, col_offset=21), lineno=1330, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1331, col_offset=8), 'other', Store(), lineno=1331, col_offset=8)], Num(19, lineno=1331, col_offset=21), lineno=1331, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1332, col_offset=8), 'otherIsIterable', Store(), lineno=1332, col_offset=8)], Name('False', Load(), lineno=1332, col_offset=31), lineno=1332, col_offset=8)], [], lineno=1329, col_offset=4)], [], lineno=1328, col_offset=0), ClassDef('TestOnlySetsDict', [Name('TestOnlySetsInBinaryOps', Load(), lineno=1336, col_offset=23)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=1337, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1338, col_offset=8), 'set', Store(), lineno=1338, col_offset=8)], Call(Name('set', Load(), lineno=1338, col_offset=21), [Tuple([Num(1, lineno=1338, col_offset=26), Num(2, lineno=1338, col_offset=29), Num(3, lineno=1338, col_offset=32)], Load(), lineno=1338, col_offset=26)], [], None, None, lineno=1338, col_offset=21), lineno=1338, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1339, col_offset=8), 'other', Store(), lineno=1339, col_offset=8)], Dict([Num(1, lineno=1339, col_offset=22), Num(3, lineno=1339, col_offset=27)], [Num(2, lineno=1339, col_offset=24), Num(4, lineno=1339, col_offset=29)], lineno=1339, col_offset=21), lineno=1339, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1340, col_offset=8), 'otherIsIterable', Store(), lineno=1340, col_offset=8)], Name('True', Load(), lineno=1340, col_offset=31), lineno=1340, col_offset=8)], [], lineno=1337, col_offset=4)], [], lineno=1336, col_offset=0), ClassDef('TestOnlySetsOperator', [Name('TestOnlySetsInBinaryOps', Load(), lineno=1344, col_offset=27)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=1345, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1346, col_offset=8), 'set', Store(), lineno=1346, col_offset=8)], Call(Name('set', Load(), lineno=1346, col_offset=21), [Tuple([Num(1, lineno=1346, col_offset=26), Num(2, lineno=1346, col_offset=29), Num(3, lineno=1346, col_offset=32)], Load(), lineno=1346, col_offset=26)], [], None, None, lineno=1346, col_offset=21), lineno=1346, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1347, col_offset=8), 'other', Store(), lineno=1347, col_offset=8)], Attribute(Name('operator', Load(), lineno=1347, col_offset=21), 'add', Load(), lineno=1347, col_offset=21), lineno=1347, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1348, col_offset=8), 'otherIsIterable', Store(), lineno=1348, col_offset=8)], Name('False', Load(), lineno=1348, col_offset=31), lineno=1348, col_offset=8)], [], lineno=1345, col_offset=4), FunctionDef('test_ge_gt_le_lt', arguments([Name('self', Param(), lineno=1350, col_offset=25)], None, None, []), [With(Call(Attribute(Name('test_support', Load(), lineno=1351, col_offset=13), 'check_py3k_warnings', Load(), lineno=1351, col_offset=13), [], [], None, None, lineno=1351, col_offset=13), None, [Expr(Call(Attribute(Call(Name('super', Load(), lineno=1352, col_offset=12), [Name('TestOnlySetsOperator', Load(), lineno=1352, col_offset=18), Name('self', Load(), lineno=1352, col_offset=40)], [], None, None, lineno=1352, col_offset=12), 'test_ge_gt_le_lt', Load(), lineno=1352, col_offset=12), [], [], None, None, lineno=1352, col_offset=12), lineno=1352, col_offset=12)], lineno=1351, col_offset=13)], [], lineno=1350, col_offset=4)], [], lineno=1344, col_offset=0), ClassDef('TestOnlySetsTuple', [Name('TestOnlySetsInBinaryOps', Load(), lineno=1356, col_offset=24)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=1357, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1358, col_offset=8), 'set', Store(), lineno=1358, col_offset=8)], Call(Name('set', Load(), lineno=1358, col_offset=21), [Tuple([Num(1, lineno=1358, col_offset=26), Num(2, lineno=1358, col_offset=29), Num(3, lineno=1358, col_offset=32)], Load(), lineno=1358, col_offset=26)], [], None, None, lineno=1358, col_offset=21), lineno=1358, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1359, col_offset=8), 'other', Store(), lineno=1359, col_offset=8)], Tuple([Num(2, lineno=1359, col_offset=22), Num(4, lineno=1359, col_offset=25), Num(6, lineno=1359, col_offset=28)], Load(), lineno=1359, col_offset=22), lineno=1359, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1360, col_offset=8), 'otherIsIterable', Store(), lineno=1360, col_offset=8)], Name('True', Load(), lineno=1360, col_offset=31), lineno=1360, col_offset=8)], [], lineno=1357, col_offset=4)], [], lineno=1356, col_offset=0), ClassDef('TestOnlySetsString', [Name('TestOnlySetsInBinaryOps', Load(), lineno=1364, col_offset=25)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=1365, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1366, col_offset=8), 'set', Store(), lineno=1366, col_offset=8)], Call(Name('set', Load(), lineno=1366, col_offset=21), [Tuple([Num(1, lineno=1366, col_offset=26), Num(2, lineno=1366, col_offset=29), Num(3, lineno=1366, col_offset=32)], Load(), lineno=1366, col_offset=26)], [], None, None, lineno=1366, col_offset=21), lineno=1366, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1367, col_offset=8), 'other', Store(), lineno=1367, col_offset=8)], Str('abc', lineno=1367, col_offset=21), lineno=1367, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1368, col_offset=8), 'otherIsIterable', Store(), lineno=1368, col_offset=8)], Name('True', Load(), lineno=1368, col_offset=31), lineno=1368, col_offset=8)], [], lineno=1365, col_offset=4)], [], lineno=1364, col_offset=0), ClassDef('TestOnlySetsGenerator', [Name('TestOnlySetsInBinaryOps', Load(), lineno=1372, col_offset=28)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=1373, col_offset=14)], None, None, []), [FunctionDef('gen', arguments([], None, None, []), [For(Name('i', Store(), lineno=1375, col_offset=16), Call(Name('xrange', Load(), lineno=1375, col_offset=21), [Num(0, lineno=1375, col_offset=28), Num(10, lineno=1375, col_offset=31), Num(2, lineno=1375, col_offset=35)], [], None, None, lineno=1375, col_offset=21), [Expr(Yield(Name('i', Load(), lineno=1376, col_offset=22), lineno=1376, col_offset=16), lineno=1376, col_offset=16)], [], lineno=1375, col_offset=12)], [], lineno=1374, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1377, col_offset=8), 'set', Store(), lineno=1377, col_offset=8)], Call(Name('set', Load(), lineno=1377, col_offset=21), [Tuple([Num(1, lineno=1377, col_offset=26), Num(2, lineno=1377, col_offset=29), Num(3, lineno=1377, col_offset=32)], Load(), lineno=1377, col_offset=26)], [], None, None, lineno=1377, col_offset=21), lineno=1377, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1378, col_offset=8), 'other', Store(), lineno=1378, col_offset=8)], Call(Name('gen', Load(), lineno=1378, col_offset=21), [], [], None, None, lineno=1378, col_offset=21), lineno=1378, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1379, col_offset=8), 'otherIsIterable', Store(), lineno=1379, col_offset=8)], Name('True', Load(), lineno=1379, col_offset=31), lineno=1379, col_offset=8)], [], lineno=1373, col_offset=4)], [], lineno=1372, col_offset=0), ClassDef('TestCopying', [Attribute(Name('unittest', Load(), lineno=1383, col_offset=18), 'TestCase', Load(), lineno=1383, col_offset=18)], [FunctionDef('test_copy', arguments([Name('self', Param(), lineno=1385, col_offset=18)], None, None, []), [Assign([Name('dup', Store(), lineno=1386, col_offset=8)], Call(Name('list', Load(), lineno=1386, col_offset=14), [Call(Attribute(Attribute(Name('self', Load(), lineno=1386, col_offset=19), 'set', Load(), lineno=1386, col_offset=19), 'copy', Load(), lineno=1386, col_offset=19), [], [], None, None, lineno=1386, col_offset=19)], [], None, None, lineno=1386, col_offset=14), lineno=1386, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1387, col_offset=8), 'assertEqual', Load(), lineno=1387, col_offset=8), [Call(Name('len', Load(), lineno=1387, col_offset=25), [Name('dup', Load(), lineno=1387, col_offset=29)], [], None, None, lineno=1387, col_offset=25), Call(Name('len', Load(), lineno=1387, col_offset=35), [Attribute(Name('self', Load(), lineno=1387, col_offset=39), 'set', Load(), lineno=1387, col_offset=39)], [], None, None, lineno=1387, col_offset=35)], [], None, None, lineno=1387, col_offset=8), lineno=1387, col_offset=8), For(Name('el', Store(), lineno=1388, col_offset=12), Attribute(Name('self', Load(), lineno=1388, col_offset=18), 'set', Load(), lineno=1388, col_offset=18), [Expr(Call(Attribute(Name('self', Load(), lineno=1389, col_offset=12), 'assertIn', Load(), lineno=1389, col_offset=12), [Name('el', Load(), lineno=1389, col_offset=26), Name('dup', Load(), lineno=1389, col_offset=30)], [], None, None, lineno=1389, col_offset=12), lineno=1389, col_offset=12), Assign([Name('pos', Store(), lineno=1390, col_offset=12)], Call(Attribute(Name('dup', Load(), lineno=1390, col_offset=18), 'index', Load(), lineno=1390, col_offset=18), [Name('el', Load(), lineno=1390, col_offset=28)], [], None, None, lineno=1390, col_offset=18), lineno=1390, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1391, col_offset=12), 'assertIs', Load(), lineno=1391, col_offset=12), [Name('el', Load(), lineno=1391, col_offset=26), Call(Attribute(Name('dup', Load(), lineno=1391, col_offset=30), 'pop', Load(), lineno=1391, col_offset=30), [Name('pos', Load(), lineno=1391, col_offset=38)], [], None, None, lineno=1391, col_offset=30)], [], None, None, lineno=1391, col_offset=12), lineno=1391, col_offset=12)], [], lineno=1388, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1392, col_offset=8), 'assertFalse', Load(), lineno=1392, col_offset=8), [Name('dup', Load(), lineno=1392, col_offset=25)], [], None, None, lineno=1392, col_offset=8), lineno=1392, col_offset=8)], [], lineno=1385, col_offset=4), FunctionDef('test_deep_copy', arguments([Name('self', Param(), lineno=1394, col_offset=23)], None, None, []), [Assign([Name('dup', Store(), lineno=1395, col_offset=8)], Call(Attribute(Name('copy', Load(), lineno=1395, col_offset=14), 'deepcopy', Load(), lineno=1395, col_offset=14), [Attribute(Name('self', Load(), lineno=1395, col_offset=28), 'set', Load(), lineno=1395, col_offset=28)], [], None, None, lineno=1395, col_offset=14), lineno=1395, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1396, col_offset=8), 'assertSetEqual', Load(), lineno=1396, col_offset=8), [Name('dup', Load(), lineno=1396, col_offset=28), Attribute(Name('self', Load(), lineno=1396, col_offset=33), 'set', Load(), lineno=1396, col_offset=33)], [], None, None, lineno=1396, col_offset=8), lineno=1396, col_offset=8)], [], lineno=1394, col_offset=4)], [], lineno=1383, col_offset=0), ClassDef('TestCopyingEmpty', [Name('TestCopying', Load(), lineno=1400, col_offset=23)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=1401, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1402, col_offset=8), 'set', Store(), lineno=1402, col_offset=8)], Call(Name('set', Load(), lineno=1402, col_offset=19), [], [], None, None, lineno=1402, col_offset=19), lineno=1402, col_offset=8)], [], lineno=1401, col_offset=4)], [], lineno=1400, col_offset=0), ClassDef('TestCopyingSingleton', [Name('TestCopying', Load(), lineno=1406, col_offset=27)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=1407, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1408, col_offset=8), 'set', Store(), lineno=1408, col_offset=8)], Call(Name('set', Load(), lineno=1408, col_offset=19), [List([Str('hello', lineno=1408, col_offset=24)], Load(), lineno=1408, col_offset=23)], [], None, None, lineno=1408, col_offset=19), lineno=1408, col_offset=8)], [], lineno=1407, col_offset=4)], [], lineno=1406, col_offset=0), ClassDef('TestCopyingTriple', [Name('TestCopying', Load(), lineno=1412, col_offset=24)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=1413, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1414, col_offset=8), 'set', Store(), lineno=1414, col_offset=8)], Call(Name('set', Load(), lineno=1414, col_offset=19), [List([Str('zero', lineno=1414, col_offset=24), Num(0, lineno=1414, col_offset=32), Name('None', Load(), lineno=1414, col_offset=35)], Load(), lineno=1414, col_offset=23)], [], None, None, lineno=1414, col_offset=19), lineno=1414, col_offset=8)], [], lineno=1413, col_offset=4)], [], lineno=1412, col_offset=0), ClassDef('TestCopyingTuple', [Name('TestCopying', Load(), lineno=1418, col_offset=23)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=1419, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1420, col_offset=8), 'set', Store(), lineno=1420, col_offset=8)], Call(Name('set', Load(), lineno=1420, col_offset=19), [List([Tuple([Num(1, lineno=1420, col_offset=25), Num(2, lineno=1420, col_offset=28)], Load(), lineno=1420, col_offset=25)], Load(), lineno=1420, col_offset=23)], [], None, None, lineno=1420, col_offset=19), lineno=1420, col_offset=8)], [], lineno=1419, col_offset=4)], [], lineno=1418, col_offset=0), ClassDef('TestCopyingNested', [Name('TestCopying', Load(), lineno=1424, col_offset=24)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=1425, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1426, col_offset=8), 'set', Store(), lineno=1426, col_offset=8)], Call(Name('set', Load(), lineno=1426, col_offset=19), [List([Tuple([Tuple([Num(1, lineno=1426, col_offset=26), Num(2, lineno=1426, col_offset=29)], Load(), lineno=1426, col_offset=26), Tuple([Num(3, lineno=1426, col_offset=34), Num(4, lineno=1426, col_offset=37)], Load(), lineno=1426, col_offset=34)], Load(), lineno=1426, col_offset=25)], Load(), lineno=1426, col_offset=23)], [], None, None, lineno=1426, col_offset=19), lineno=1426, col_offset=8)], [], lineno=1425, col_offset=4)], [], lineno=1424, col_offset=0), ClassDef('TestIdentities', [Attribute(Name('unittest', Load(), lineno=1430, col_offset=21), 'TestCase', Load(), lineno=1430, col_offset=21)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=1431, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1432, col_offset=8), 'a', Store(), lineno=1432, col_offset=8)], Call(Name('set', Load(), lineno=1432, col_offset=17), [Str('abracadabra', lineno=1432, col_offset=21)], [], None, None, lineno=1432, col_offset=17), lineno=1432, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1433, col_offset=8), 'b', Store(), lineno=1433, col_offset=8)], Call(Name('set', Load(), lineno=1433, col_offset=17), [Str('alacazam', lineno=1433, col_offset=21)], [], None, None, lineno=1433, col_offset=17), lineno=1433, col_offset=8)], [], lineno=1431, col_offset=4), FunctionDef('test_binopsVsSubsets', arguments([Name('self', Param(), lineno=1435, col_offset=29)], None, None, []), [Assign([Tuple([Name('a', Store(), lineno=1436, col_offset=8), Name('b', Store(), lineno=1436, col_offset=11)], Store(), lineno=1436, col_offset=8)], Tuple([Attribute(Name('self', Load(), lineno=1436, col_offset=15), 'a', Load(), lineno=1436, col_offset=15), Attribute(Name('self', Load(), lineno=1436, col_offset=23), 'b', Load(), lineno=1436, col_offset=23)], Load(), lineno=1436, col_offset=15), lineno=1436, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1437, col_offset=8), 'assertTrue', Load(), lineno=1437, col_offset=8), [Compare(BinOp(Name('a', Load(), lineno=1437, col_offset=24), Sub(), Name('b', Load(), lineno=1437, col_offset=28), lineno=1437, col_offset=24), [Lt()], [Name('a', Load(), lineno=1437, col_offset=32)], lineno=1437, col_offset=24)], [], None, None, lineno=1437, col_offset=8), lineno=1437, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1438, col_offset=8), 'assertTrue', Load(), lineno=1438, col_offset=8), [Compare(BinOp(Name('b', Load(), lineno=1438, col_offset=24), Sub(), Name('a', Load(), lineno=1438, col_offset=28), lineno=1438, col_offset=24), [Lt()], [Name('b', Load(), lineno=1438, col_offset=32)], lineno=1438, col_offset=24)], [], None, None, lineno=1438, col_offset=8), lineno=1438, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1439, col_offset=8), 'assertTrue', Load(), lineno=1439, col_offset=8), [Compare(BinOp(Name('a', Load(), lineno=1439, col_offset=24), BitAnd(), Name('b', Load(), lineno=1439, col_offset=28), lineno=1439, col_offset=24), [Lt()], [Name('a', Load(), lineno=1439, col_offset=32)], lineno=1439, col_offset=24)], [], None, None, lineno=1439, col_offset=8), lineno=1439, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1440, col_offset=8), 'assertTrue', Load(), lineno=1440, col_offset=8), [Compare(BinOp(Name('a', Load(), lineno=1440, col_offset=24), BitAnd(), Name('b', Load(), lineno=1440, col_offset=28), lineno=1440, col_offset=24), [Lt()], [Name('b', Load(), lineno=1440, col_offset=32)], lineno=1440, col_offset=24)], [], None, None, lineno=1440, col_offset=8), lineno=1440, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1441, col_offset=8), 'assertTrue', Load(), lineno=1441, col_offset=8), [Compare(BinOp(Name('a', Load(), lineno=1441, col_offset=24), BitOr(), Name('b', Load(), lineno=1441, col_offset=28), lineno=1441, col_offset=24), [Gt()], [Name('a', Load(), lineno=1441, col_offset=32)], lineno=1441, col_offset=24)], [], None, None, lineno=1441, col_offset=8), lineno=1441, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1442, col_offset=8), 'assertTrue', Load(), lineno=1442, col_offset=8), [Compare(BinOp(Name('a', Load(), lineno=1442, col_offset=24), BitOr(), Name('b', Load(), lineno=1442, col_offset=28), lineno=1442, col_offset=24), [Gt()], [Name('b', Load(), lineno=1442, col_offset=32)], lineno=1442, col_offset=24)], [], None, None, lineno=1442, col_offset=8), lineno=1442, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1443, col_offset=8), 'assertTrue', Load(), lineno=1443, col_offset=8), [Compare(BinOp(Name('a', Load(), lineno=1443, col_offset=24), BitXor(), Name('b', Load(), lineno=1443, col_offset=28), lineno=1443, col_offset=24), [Lt()], [BinOp(Name('a', Load(), lineno=1443, col_offset=32), BitOr(), Name('b', Load(), lineno=1443, col_offset=36), lineno=1443, col_offset=32)], lineno=1443, col_offset=24)], [], None, None, lineno=1443, col_offset=8), lineno=1443, col_offset=8)], [], lineno=1435, col_offset=4), FunctionDef('test_commutativity', arguments([Name('self', Param(), lineno=1445, col_offset=27)], None, None, []), [Assign([Tuple([Name('a', Store(), lineno=1446, col_offset=8), Name('b', Store(), lineno=1446, col_offset=11)], Store(), lineno=1446, col_offset=8)], Tuple([Attribute(Name('self', Load(), lineno=1446, col_offset=15), 'a', Load(), lineno=1446, col_offset=15), Attribute(Name('self', Load(), lineno=1446, col_offset=23), 'b', Load(), lineno=1446, col_offset=23)], Load(), lineno=1446, col_offset=15), lineno=1446, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1447, col_offset=8), 'assertEqual', Load(), lineno=1447, col_offset=8), [BinOp(Name('a', Load(), lineno=1447, col_offset=25), BitAnd(), Name('b', Load(), lineno=1447, col_offset=27), lineno=1447, col_offset=25), BinOp(Name('b', Load(), lineno=1447, col_offset=30), BitAnd(), Name('a', Load(), lineno=1447, col_offset=32), lineno=1447, col_offset=30)], [], None, None, lineno=1447, col_offset=8), lineno=1447, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1448, col_offset=8), 'assertEqual', Load(), lineno=1448, col_offset=8), [BinOp(Name('a', Load(), lineno=1448, col_offset=25), BitOr(), Name('b', Load(), lineno=1448, col_offset=27), lineno=1448, col_offset=25), BinOp(Name('b', Load(), lineno=1448, col_offset=30), BitOr(), Name('a', Load(), lineno=1448, col_offset=32), lineno=1448, col_offset=30)], [], None, None, lineno=1448, col_offset=8), lineno=1448, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1449, col_offset=8), 'assertEqual', Load(), lineno=1449, col_offset=8), [BinOp(Name('a', Load(), lineno=1449, col_offset=25), BitXor(), Name('b', Load(), lineno=1449, col_offset=27), lineno=1449, col_offset=25), BinOp(Name('b', Load(), lineno=1449, col_offset=30), BitXor(), Name('a', Load(), lineno=1449, col_offset=32), lineno=1449, col_offset=30)], [], None, None, lineno=1449, col_offset=8), lineno=1449, col_offset=8), If(Compare(Name('a', Load(), lineno=1450, col_offset=11), [NotEq()], [Name('b', Load(), lineno=1450, col_offset=16)], lineno=1450, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=1451, col_offset=12), 'assertNotEqual', Load(), lineno=1451, col_offset=12), [BinOp(Name('a', Load(), lineno=1451, col_offset=32), Sub(), Name('b', Load(), lineno=1451, col_offset=34), lineno=1451, col_offset=32), BinOp(Name('b', Load(), lineno=1451, col_offset=37), Sub(), Name('a', Load(), lineno=1451, col_offset=39), lineno=1451, col_offset=37)], [], None, None, lineno=1451, col_offset=12), lineno=1451, col_offset=12)], [], lineno=1450, col_offset=8)], [], lineno=1445, col_offset=4), FunctionDef('test_summations', arguments([Name('self', Param(), lineno=1453, col_offset=24)], None, None, []), [Assign([Tuple([Name('a', Store(), lineno=1455, col_offset=8), Name('b', Store(), lineno=1455, col_offset=11)], Store(), lineno=1455, col_offset=8)], Tuple([Attribute(Name('self', Load(), lineno=1455, col_offset=15), 'a', Load(), lineno=1455, col_offset=15), Attribute(Name('self', Load(), lineno=1455, col_offset=23), 'b', Load(), lineno=1455, col_offset=23)], Load(), lineno=1455, col_offset=15), lineno=1455, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1456, col_offset=8), 'assertEqual', Load(), lineno=1456, col_offset=8), [BinOp(BinOp(BinOp(Name('a', Load(), lineno=1456, col_offset=26), Sub(), Name('b', Load(), lineno=1456, col_offset=28), lineno=1456, col_offset=26), BitOr(), BinOp(Name('a', Load(), lineno=1456, col_offset=32), BitAnd(), Name('b', Load(), lineno=1456, col_offset=34), lineno=1456, col_offset=32), lineno=1456, col_offset=25), BitOr(), BinOp(Name('b', Load(), lineno=1456, col_offset=38), Sub(), Name('a', Load(), lineno=1456, col_offset=40), lineno=1456, col_offset=38), lineno=1456, col_offset=36), BinOp(Name('a', Load(), lineno=1456, col_offset=44), BitOr(), Name('b', Load(), lineno=1456, col_offset=46), lineno=1456, col_offset=44)], [], None, None, lineno=1456, col_offset=8), lineno=1456, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1457, col_offset=8), 'assertEqual', Load(), lineno=1457, col_offset=8), [BinOp(BinOp(Name('a', Load(), lineno=1457, col_offset=26), BitAnd(), Name('b', Load(), lineno=1457, col_offset=28), lineno=1457, col_offset=26), BitOr(), BinOp(Name('a', Load(), lineno=1457, col_offset=32), BitXor(), Name('b', Load(), lineno=1457, col_offset=34), lineno=1457, col_offset=32), lineno=1457, col_offset=25), BinOp(Name('a', Load(), lineno=1457, col_offset=38), BitOr(), Name('b', Load(), lineno=1457, col_offset=40), lineno=1457, col_offset=38)], [], None, None, lineno=1457, col_offset=8), lineno=1457, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1458, col_offset=8), 'assertEqual', Load(), lineno=1458, col_offset=8), [BinOp(Name('a', Load(), lineno=1458, col_offset=25), BitOr(), BinOp(Name('b', Load(), lineno=1458, col_offset=28), Sub(), Name('a', Load(), lineno=1458, col_offset=30), lineno=1458, col_offset=28), lineno=1458, col_offset=25), BinOp(Name('a', Load(), lineno=1458, col_offset=34), BitOr(), Name('b', Load(), lineno=1458, col_offset=36), lineno=1458, col_offset=34)], [], None, None, lineno=1458, col_offset=8), lineno=1458, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1459, col_offset=8), 'assertEqual', Load(), lineno=1459, col_offset=8), [BinOp(BinOp(Name('a', Load(), lineno=1459, col_offset=26), Sub(), Name('b', Load(), lineno=1459, col_offset=28), lineno=1459, col_offset=26), BitOr(), Name('b', Load(), lineno=1459, col_offset=31), lineno=1459, col_offset=25), BinOp(Name('a', Load(), lineno=1459, col_offset=34), BitOr(), Name('b', Load(), lineno=1459, col_offset=36), lineno=1459, col_offset=34)], [], None, None, lineno=1459, col_offset=8), lineno=1459, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1460, col_offset=8), 'assertEqual', Load(), lineno=1460, col_offset=8), [BinOp(BinOp(Name('a', Load(), lineno=1460, col_offset=26), Sub(), Name('b', Load(), lineno=1460, col_offset=28), lineno=1460, col_offset=26), BitOr(), BinOp(Name('a', Load(), lineno=1460, col_offset=32), BitAnd(), Name('b', Load(), lineno=1460, col_offset=34), lineno=1460, col_offset=32), lineno=1460, col_offset=25), Name('a', Load(), lineno=1460, col_offset=38)], [], None, None, lineno=1460, col_offset=8), lineno=1460, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1461, col_offset=8), 'assertEqual', Load(), lineno=1461, col_offset=8), [BinOp(BinOp(Name('b', Load(), lineno=1461, col_offset=26), Sub(), Name('a', Load(), lineno=1461, col_offset=28), lineno=1461, col_offset=26), BitOr(), BinOp(Name('a', Load(), lineno=1461, col_offset=32), BitAnd(), Name('b', Load(), lineno=1461, col_offset=34), lineno=1461, col_offset=32), lineno=1461, col_offset=25), Name('b', Load(), lineno=1461, col_offset=38)], [], None, None, lineno=1461, col_offset=8), lineno=1461, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1462, col_offset=8), 'assertEqual', Load(), lineno=1462, col_offset=8), [BinOp(BinOp(Name('a', Load(), lineno=1462, col_offset=26), Sub(), Name('b', Load(), lineno=1462, col_offset=28), lineno=1462, col_offset=26), BitOr(), BinOp(Name('b', Load(), lineno=1462, col_offset=32), Sub(), Name('a', Load(), lineno=1462, col_offset=34), lineno=1462, col_offset=32), lineno=1462, col_offset=25), BinOp(Name('a', Load(), lineno=1462, col_offset=38), BitXor(), Name('b', Load(), lineno=1462, col_offset=40), lineno=1462, col_offset=38)], [], None, None, lineno=1462, col_offset=8), lineno=1462, col_offset=8)], [], lineno=1453, col_offset=4), FunctionDef('test_exclusion', arguments([Name('self', Param(), lineno=1464, col_offset=23)], None, None, []), [Assign([Tuple([Name('a', Store(), lineno=1466, col_offset=8), Name('b', Store(), lineno=1466, col_offset=11), Name('zero', Store(), lineno=1466, col_offset=14)], Store(), lineno=1466, col_offset=8)], Tuple([Attribute(Name('self', Load(), lineno=1466, col_offset=21), 'a', Load(), lineno=1466, col_offset=21), Attribute(Name('self', Load(), lineno=1466, col_offset=29), 'b', Load(), lineno=1466, col_offset=29), Call(Name('set', Load(), lineno=1466, col_offset=37), [], [], None, None, lineno=1466, col_offset=37)], Load(), lineno=1466, col_offset=21), lineno=1466, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1467, col_offset=8), 'assertEqual', Load(), lineno=1467, col_offset=8), [BinOp(BinOp(Name('a', Load(), lineno=1467, col_offset=26), Sub(), Name('b', Load(), lineno=1467, col_offset=28), lineno=1467, col_offset=26), BitAnd(), Name('b', Load(), lineno=1467, col_offset=31), lineno=1467, col_offset=25), Name('zero', Load(), lineno=1467, col_offset=34)], [], None, None, lineno=1467, col_offset=8), lineno=1467, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1468, col_offset=8), 'assertEqual', Load(), lineno=1468, col_offset=8), [BinOp(BinOp(Name('b', Load(), lineno=1468, col_offset=26), Sub(), Name('a', Load(), lineno=1468, col_offset=28), lineno=1468, col_offset=26), BitAnd(), Name('a', Load(), lineno=1468, col_offset=31), lineno=1468, col_offset=25), Name('zero', Load(), lineno=1468, col_offset=34)], [], None, None, lineno=1468, col_offset=8), lineno=1468, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1469, col_offset=8), 'assertEqual', Load(), lineno=1469, col_offset=8), [BinOp(BinOp(Name('a', Load(), lineno=1469, col_offset=26), BitAnd(), Name('b', Load(), lineno=1469, col_offset=28), lineno=1469, col_offset=26), BitAnd(), BinOp(Name('a', Load(), lineno=1469, col_offset=32), BitXor(), Name('b', Load(), lineno=1469, col_offset=34), lineno=1469, col_offset=32), lineno=1469, col_offset=25), Name('zero', Load(), lineno=1469, col_offset=38)], [], None, None, lineno=1469, col_offset=8), lineno=1469, col_offset=8)], [], lineno=1464, col_offset=4)], [], lineno=1430, col_offset=0), FunctionDef('R', arguments([Name('seqn', Param(), lineno=1473, col_offset=6)], None, None, []), [Expr(Str('Regular generator', lineno=1474, col_offset=4), lineno=1474, col_offset=4), For(Name('i', Store(), lineno=1475, col_offset=8), Name('seqn', Load(), lineno=1475, col_offset=13), [Expr(Yield(Name('i', Load(), lineno=1476, col_offset=14), lineno=1476, col_offset=8), lineno=1476, col_offset=8)], [], lineno=1475, col_offset=4)], [], lineno=1473, col_offset=0), ClassDef('G', [], [Expr(Str('Sequence using __getitem__', lineno=1479, col_offset=4), lineno=1479, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=1480, col_offset=17), Name('seqn', Param(), lineno=1480, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1481, col_offset=8), 'seqn', Store(), lineno=1481, col_offset=8)], Name('seqn', Load(), lineno=1481, col_offset=20), lineno=1481, col_offset=8)], [], lineno=1480, col_offset=4), FunctionDef('__getitem__', arguments([Name('self', Param(), lineno=1482, col_offset=20), Name('i', Param(), lineno=1482, col_offset=26)], None, None, []), [Return(Subscript(Attribute(Name('self', Load(), lineno=1483, col_offset=15), 'seqn', Load(), lineno=1483, col_offset=15), Index(Name('i', Load(), lineno=1483, col_offset=25)), Load(), lineno=1483, col_offset=15), lineno=1483, col_offset=8)], [], lineno=1482, col_offset=4)], [], lineno=1478, col_offset=0), ClassDef('I', [], [Expr(Str('Sequence using iterator protocol', lineno=1486, col_offset=4), lineno=1486, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=1487, col_offset=17), Name('seqn', Param(), lineno=1487, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1488, col_offset=8), 'seqn', Store(), lineno=1488, col_offset=8)], Name('seqn', Load(), lineno=1488, col_offset=20), lineno=1488, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1489, col_offset=8), 'i', Store(), lineno=1489, col_offset=8)], Num(0, lineno=1489, col_offset=17), lineno=1489, col_offset=8)], [], lineno=1487, col_offset=4), FunctionDef('__iter__', arguments([Name('self', Param(), lineno=1490, col_offset=17)], None, None, []), [Return(Name('self', Load(), lineno=1491, col_offset=15), lineno=1491, col_offset=8)], [], lineno=1490, col_offset=4), FunctionDef('next', arguments([Name('self', Param(), lineno=1492, col_offset=13)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=1493, col_offset=11), 'i', Load(), lineno=1493, col_offset=11), [GtE()], [Call(Name('len', Load(), lineno=1493, col_offset=21), [Attribute(Name('self', Load(), lineno=1493, col_offset=25), 'seqn', Load(), lineno=1493, col_offset=25)], [], None, None, lineno=1493, col_offset=21)], lineno=1493, col_offset=11), [Raise(Name('StopIteration', Load(), lineno=1493, col_offset=43), None, None, lineno=1493, col_offset=37)], [], lineno=1493, col_offset=8), Assign([Name('v', Store(), lineno=1494, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=1494, col_offset=12), 'seqn', Load(), lineno=1494, col_offset=12), Index(Attribute(Name('self', Load(), lineno=1494, col_offset=22), 'i', Load(), lineno=1494, col_offset=22)), Load(), lineno=1494, col_offset=12), lineno=1494, col_offset=8), AugAssign(Attribute(Name('self', Load(), lineno=1495, col_offset=8), 'i', Store(), lineno=1495, col_offset=8), Add(), Num(1, lineno=1495, col_offset=18), lineno=1495, col_offset=8), Return(Name('v', Load(), lineno=1496, col_offset=15), lineno=1496, col_offset=8)], [], lineno=1492, col_offset=4)], [], lineno=1485, col_offset=0), ClassDef('Ig', [], [Expr(Str('Sequence using iterator protocol defined with a generator', lineno=1499, col_offset=4), lineno=1499, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=1500, col_offset=17), Name('seqn', Param(), lineno=1500, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1501, col_offset=8), 'seqn', Store(), lineno=1501, col_offset=8)], Name('seqn', Load(), lineno=1501, col_offset=20), lineno=1501, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1502, col_offset=8), 'i', Store(), lineno=1502, col_offset=8)], Num(0, lineno=1502, col_offset=17), lineno=1502, col_offset=8)], [], lineno=1500, col_offset=4), FunctionDef('__iter__', arguments([Name('self', Param(), lineno=1503, col_offset=17)], None, None, []), [For(Name('val', Store(), lineno=1504, col_offset=12), Attribute(Name('self', Load(), lineno=1504, col_offset=19), 'seqn', Load(), lineno=1504, col_offset=19), [Expr(Yield(Name('val', Load(), lineno=1505, col_offset=18), lineno=1505, col_offset=12), lineno=1505, col_offset=12)], [], lineno=1504, col_offset=8)], [], lineno=1503, col_offset=4)], [], lineno=1498, col_offset=0), ClassDef('X', [], [Expr(Str('Missing __getitem__ and __iter__', lineno=1508, col_offset=4), lineno=1508, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=1509, col_offset=17), Name('seqn', Param(), lineno=1509, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1510, col_offset=8), 'seqn', Store(), lineno=1510, col_offset=8)], Name('seqn', Load(), lineno=1510, col_offset=20), lineno=1510, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1511, col_offset=8), 'i', Store(), lineno=1511, col_offset=8)], Num(0, lineno=1511, col_offset=17), lineno=1511, col_offset=8)], [], lineno=1509, col_offset=4), FunctionDef('next', arguments([Name('self', Param(), lineno=1512, col_offset=13)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=1513, col_offset=11), 'i', Load(), lineno=1513, col_offset=11), [GtE()], [Call(Name('len', Load(), lineno=1513, col_offset=21), [Attribute(Name('self', Load(), lineno=1513, col_offset=25), 'seqn', Load(), lineno=1513, col_offset=25)], [], None, None, lineno=1513, col_offset=21)], lineno=1513, col_offset=11), [Raise(Name('StopIteration', Load(), lineno=1513, col_offset=43), None, None, lineno=1513, col_offset=37)], [], lineno=1513, col_offset=8), Assign([Name('v', Store(), lineno=1514, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=1514, col_offset=12), 'seqn', Load(), lineno=1514, col_offset=12), Index(Attribute(Name('self', Load(), lineno=1514, col_offset=22), 'i', Load(), lineno=1514, col_offset=22)), Load(), lineno=1514, col_offset=12), lineno=1514, col_offset=8), AugAssign(Attribute(Name('self', Load(), lineno=1515, col_offset=8), 'i', Store(), lineno=1515, col_offset=8), Add(), Num(1, lineno=1515, col_offset=18), lineno=1515, col_offset=8), Return(Name('v', Load(), lineno=1516, col_offset=15), lineno=1516, col_offset=8)], [], lineno=1512, col_offset=4)], [], lineno=1507, col_offset=0), ClassDef('N', [], [Expr(Str('Iterator missing next()', lineno=1519, col_offset=4), lineno=1519, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=1520, col_offset=17), Name('seqn', Param(), lineno=1520, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1521, col_offset=8), 'seqn', Store(), lineno=1521, col_offset=8)], Name('seqn', Load(), lineno=1521, col_offset=20), lineno=1521, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1522, col_offset=8), 'i', Store(), lineno=1522, col_offset=8)], Num(0, lineno=1522, col_offset=17), lineno=1522, col_offset=8)], [], lineno=1520, col_offset=4), FunctionDef('__iter__', arguments([Name('self', Param(), lineno=1523, col_offset=17)], None, None, []), [Return(Name('self', Load(), lineno=1524, col_offset=15), lineno=1524, col_offset=8)], [], lineno=1523, col_offset=4)], [], lineno=1518, col_offset=0), ClassDef('E', [], [Expr(Str('Test propagation of exceptions', lineno=1527, col_offset=4), lineno=1527, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=1528, col_offset=17), Name('seqn', Param(), lineno=1528, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1529, col_offset=8), 'seqn', Store(), lineno=1529, col_offset=8)], Name('seqn', Load(), lineno=1529, col_offset=20), lineno=1529, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1530, col_offset=8), 'i', Store(), lineno=1530, col_offset=8)], Num(0, lineno=1530, col_offset=17), lineno=1530, col_offset=8)], [], lineno=1528, col_offset=4), FunctionDef('__iter__', arguments([Name('self', Param(), lineno=1531, col_offset=17)], None, None, []), [Return(Name('self', Load(), lineno=1532, col_offset=15), lineno=1532, col_offset=8)], [], lineno=1531, col_offset=4), FunctionDef('next', arguments([Name('self', Param(), lineno=1533, col_offset=13)], None, None, []), [Expr(BinOp(Num(3, lineno=1534, col_offset=8), FloorDiv(), Num(0, lineno=1534, col_offset=13), lineno=1534, col_offset=8), lineno=1534, col_offset=8)], [], lineno=1533, col_offset=4)], [], lineno=1526, col_offset=0), ClassDef('S', [], [Expr(Str('Test immediate stop', lineno=1537, col_offset=4), lineno=1537, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=1538, col_offset=17), Name('seqn', Param(), lineno=1538, col_offset=23)], None, None, []), [Pass( lineno=1539, col_offset=8)], [], lineno=1538, col_offset=4), FunctionDef('__iter__', arguments([Name('self', Param(), lineno=1540, col_offset=17)], None, None, []), [Return(Name('self', Load(), lineno=1541, col_offset=15), lineno=1541, col_offset=8)], [], lineno=1540, col_offset=4), FunctionDef('next', arguments([Name('self', Param(), lineno=1542, col_offset=13)], None, None, []), [Raise(Name('StopIteration', Load(), lineno=1543, col_offset=14), None, None, lineno=1543, col_offset=8)], [], lineno=1542, col_offset=4)], [], lineno=1536, col_offset=0), ImportFrom('itertools', [alias('chain', None), alias('imap', None)], 0, lineno=1545, col_offset=0), FunctionDef('L', arguments([Name('seqn', Param(), lineno=1546, col_offset=6)], None, None, []), [Expr(Str('Test multiple tiers of iterators', lineno=1547, col_offset=4), lineno=1547, col_offset=4), Return(Call(Name('chain', Load(), lineno=1548, col_offset=11), [Call(Name('imap', Load(), lineno=1548, col_offset=17), [Lambda(arguments([Name('x', Param(), lineno=1548, col_offset=29)], None, None, []), Name('x', Load(), lineno=1548, col_offset=31), lineno=1548, col_offset=22), Call(Name('R', Load(), lineno=1548, col_offset=34), [Call(Name('Ig', Load(), lineno=1548, col_offset=36), [Call(Name('G', Load(), lineno=1548, col_offset=39), [Name('seqn', Load(), lineno=1548, col_offset=41)], [], None, None, lineno=1548, col_offset=39)], [], None, None, lineno=1548, col_offset=36)], [], None, None, lineno=1548, col_offset=34)], [], None, None, lineno=1548, col_offset=17)], [], None, None, lineno=1548, col_offset=11), lineno=1548, col_offset=4)], [], lineno=1546, col_offset=0), ClassDef('TestVariousIteratorArgs', [Attribute(Name('unittest', Load(), lineno=1550, col_offset=30), 'TestCase', Load(), lineno=1550, col_offset=30)], [FunctionDef('test_constructor', arguments([Name('self', Param(), lineno=1552, col_offset=25)], None, None, []), [For(Name('cons', Store(), lineno=1553, col_offset=12), Tuple([Name('set', Load(), lineno=1553, col_offset=21), Name('frozenset', Load(), lineno=1553, col_offset=26)], Load(), lineno=1553, col_offset=21), [For(Name('s', Store(), lineno=1554, col_offset=16), Tuple([Str('123', lineno=1554, col_offset=22), Str('', lineno=1554, col_offset=29), Call(Name('range', Load(), lineno=1554, col_offset=33), [Num(1000, lineno=1554, col_offset=39)], [], None, None, lineno=1554, col_offset=33), Tuple([Str('do', lineno=1554, col_offset=47), Num(1.2, lineno=1554, col_offset=53)], Load(), lineno=1554, col_offset=47), Call(Name('xrange', Load(), lineno=1554, col_offset=59), [Num(2000, lineno=1554, col_offset=66), Num(2200, lineno=1554, col_offset=71), Num(5, lineno=1554, col_offset=76)], [], None, None, lineno=1554, col_offset=59)], Load(), lineno=1554, col_offset=22), [For(Name('g', Store(), lineno=1555, col_offset=20), Tuple([Name('G', Load(), lineno=1555, col_offset=26), Name('I', Load(), lineno=1555, col_offset=29), Name('Ig', Load(), lineno=1555, col_offset=32), Name('S', Load(), lineno=1555, col_offset=36), Name('L', Load(), lineno=1555, col_offset=39), Name('R', Load(), lineno=1555, col_offset=42)], Load(), lineno=1555, col_offset=26), [Expr(Call(Attribute(Name('self', Load(), lineno=1556, col_offset=20), 'assertSetEqual', Load(), lineno=1556, col_offset=20), [Call(Name('cons', Load(), lineno=1556, col_offset=40), [Call(Name('g', Load(), lineno=1556, col_offset=45), [Name('s', Load(), lineno=1556, col_offset=47)], [], None, None, lineno=1556, col_offset=45)], [], None, None, lineno=1556, col_offset=40), Call(Name('set', Load(), lineno=1556, col_offset=52), [Call(Name('g', Load(), lineno=1556, col_offset=56), [Name('s', Load(), lineno=1556, col_offset=58)], [], None, None, lineno=1556, col_offset=56)], [], None, None, lineno=1556, col_offset=52)], [], None, None, lineno=1556, col_offset=20), lineno=1556, col_offset=20)], [], lineno=1555, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=1557, col_offset=16), 'assertRaises', Load(), lineno=1557, col_offset=16), [Name('TypeError', Load(), lineno=1557, col_offset=34), Name('cons', Load(), lineno=1557, col_offset=45), Call(Name('X', Load(), lineno=1557, col_offset=52), [Name('s', Load(), lineno=1557, col_offset=54)], [], None, None, lineno=1557, col_offset=52)], [], None, None, lineno=1557, col_offset=16), lineno=1557, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=1558, col_offset=16), 'assertRaises', Load(), lineno=1558, col_offset=16), [Name('TypeError', Load(), lineno=1558, col_offset=34), Name('cons', Load(), lineno=1558, col_offset=45), Call(Name('N', Load(), lineno=1558, col_offset=52), [Name('s', Load(), lineno=1558, col_offset=54)], [], None, None, lineno=1558, col_offset=52)], [], None, None, lineno=1558, col_offset=16), lineno=1558, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=1559, col_offset=16), 'assertRaises', Load(), lineno=1559, col_offset=16), [Name('ZeroDivisionError', Load(), lineno=1559, col_offset=34), Name('cons', Load(), lineno=1559, col_offset=53), Call(Name('E', Load(), lineno=1559, col_offset=60), [Name('s', Load(), lineno=1559, col_offset=62)], [], None, None, lineno=1559, col_offset=60)], [], None, None, lineno=1559, col_offset=16), lineno=1559, col_offset=16)], [], lineno=1554, col_offset=12)], [], lineno=1553, col_offset=8)], [], lineno=1552, col_offset=4), FunctionDef('test_inline_methods', arguments([Name('self', Param(), lineno=1561, col_offset=28)], None, None, []), [Assign([Name('s', Store(), lineno=1562, col_offset=8)], Call(Name('set', Load(), lineno=1562, col_offset=12), [Str('november', lineno=1562, col_offset=16)], [], None, None, lineno=1562, col_offset=12), lineno=1562, col_offset=8), For(Name('data', Store(), lineno=1563, col_offset=12), Tuple([Str('123', lineno=1563, col_offset=21), Str('', lineno=1563, col_offset=28), Call(Name('range', Load(), lineno=1563, col_offset=32), [Num(1000, lineno=1563, col_offset=38)], [], None, None, lineno=1563, col_offset=32), Tuple([Str('do', lineno=1563, col_offset=46), Num(1.2, lineno=1563, col_offset=52)], Load(), lineno=1563, col_offset=46), Call(Name('xrange', Load(), lineno=1563, col_offset=58), [Num(2000, lineno=1563, col_offset=65), Num(2200, lineno=1563, col_offset=70), Num(5, lineno=1563, col_offset=75)], [], None, None, lineno=1563, col_offset=58), Str('december', lineno=1563, col_offset=79)], Load(), lineno=1563, col_offset=21), [For(Name('meth', Store(), lineno=1564, col_offset=16), Tuple([Attribute(Name('s', Load(), lineno=1564, col_offset=25), 'union', Load(), lineno=1564, col_offset=25), Attribute(Name('s', Load(), lineno=1564, col_offset=34), 'intersection', Load(), lineno=1564, col_offset=34), Attribute(Name('s', Load(), lineno=1564, col_offset=50), 'difference', Load(), lineno=1564, col_offset=50), Attribute(Name('s', Load(), lineno=1564, col_offset=64), 'symmetric_difference', Load(), lineno=1564, col_offset=64), Attribute(Name('s', Load(), lineno=1564, col_offset=88), 'isdisjoint', Load(), lineno=1564, col_offset=88)], Load(), lineno=1564, col_offset=25), [For(Name('g', Store(), lineno=1565, col_offset=20), Tuple([Name('G', Load(), lineno=1565, col_offset=26), Name('I', Load(), lineno=1565, col_offset=29), Name('Ig', Load(), lineno=1565, col_offset=32), Name('L', Load(), lineno=1565, col_offset=36), Name('R', Load(), lineno=1565, col_offset=39)], Load(), lineno=1565, col_offset=26), [Assign([Name('expected', Store(), lineno=1566, col_offset=20)], Call(Name('meth', Load(), lineno=1566, col_offset=31), [Name('data', Load(), lineno=1566, col_offset=36)], [], None, None, lineno=1566, col_offset=31), lineno=1566, col_offset=20), Assign([Name('actual', Store(), lineno=1567, col_offset=20)], Call(Name('meth', Load(), lineno=1567, col_offset=29), [Call(Name('G', Load(), lineno=1567, col_offset=34), [Name('data', Load(), lineno=1567, col_offset=36)], [], None, None, lineno=1567, col_offset=34)], [], None, None, lineno=1567, col_offset=29), lineno=1567, col_offset=20), If(Call(Name('isinstance', Load(), lineno=1568, col_offset=23), [Name('expected', Load(), lineno=1568, col_offset=34), Name('bool', Load(), lineno=1568, col_offset=44)], [], None, None, lineno=1568, col_offset=23), [Expr(Call(Attribute(Name('self', Load(), lineno=1569, col_offset=24), 'assertEqual', Load(), lineno=1569, col_offset=24), [Name('actual', Load(), lineno=1569, col_offset=41), Name('expected', Load(), lineno=1569, col_offset=49)], [], None, None, lineno=1569, col_offset=24), lineno=1569, col_offset=24)], [Expr(Call(Attribute(Name('self', Load(), lineno=1571, col_offset=24), 'assertSetEqual', Load(), lineno=1571, col_offset=24), [Name('actual', Load(), lineno=1571, col_offset=44), Name('expected', Load(), lineno=1571, col_offset=52)], [], None, None, lineno=1571, col_offset=24), lineno=1571, col_offset=24)], lineno=1568, col_offset=20)], [], lineno=1565, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=1572, col_offset=16), 'assertRaises', Load(), lineno=1572, col_offset=16), [Name('TypeError', Load(), lineno=1572, col_offset=34), Name('meth', Load(), lineno=1572, col_offset=45), Call(Name('X', Load(), lineno=1572, col_offset=51), [Name('s', Load(), lineno=1572, col_offset=53)], [], None, None, lineno=1572, col_offset=51)], [], None, None, lineno=1572, col_offset=16), lineno=1572, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=1573, col_offset=16), 'assertRaises', Load(), lineno=1573, col_offset=16), [Name('TypeError', Load(), lineno=1573, col_offset=34), Name('meth', Load(), lineno=1573, col_offset=45), Call(Name('N', Load(), lineno=1573, col_offset=51), [Name('s', Load(), lineno=1573, col_offset=53)], [], None, None, lineno=1573, col_offset=51)], [], None, None, lineno=1573, col_offset=16), lineno=1573, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=1574, col_offset=16), 'assertRaises', Load(), lineno=1574, col_offset=16), [Name('ZeroDivisionError', Load(), lineno=1574, col_offset=34), Name('meth', Load(), lineno=1574, col_offset=53), Call(Name('E', Load(), lineno=1574, col_offset=59), [Name('s', Load(), lineno=1574, col_offset=61)], [], None, None, lineno=1574, col_offset=59)], [], None, None, lineno=1574, col_offset=16), lineno=1574, col_offset=16)], [], lineno=1564, col_offset=12)], [], lineno=1563, col_offset=8)], [], lineno=1561, col_offset=4), FunctionDef('test_inplace_methods', arguments([Name('self', Param(), lineno=1576, col_offset=29)], None, None, []), [For(Name('data', Store(), lineno=1577, col_offset=12), Tuple([Str('123', lineno=1577, col_offset=21), Str('', lineno=1577, col_offset=28), Call(Name('range', Load(), lineno=1577, col_offset=32), [Num(1000, lineno=1577, col_offset=38)], [], None, None, lineno=1577, col_offset=32), Tuple([Str('do', lineno=1577, col_offset=46), Num(1.2, lineno=1577, col_offset=52)], Load(), lineno=1577, col_offset=46), Call(Name('xrange', Load(), lineno=1577, col_offset=58), [Num(2000, lineno=1577, col_offset=65), Num(2200, lineno=1577, col_offset=70), Num(5, lineno=1577, col_offset=75)], [], None, None, lineno=1577, col_offset=58), Str('december', lineno=1577, col_offset=79)], Load(), lineno=1577, col_offset=21), [For(Name('methname', Store(), lineno=1578, col_offset=16), Tuple([Str('update', lineno=1578, col_offset=29), Str('intersection_update', lineno=1578, col_offset=39), Str('difference_update', lineno=1579, col_offset=29), Str('symmetric_difference_update', lineno=1579, col_offset=50)], Load(), lineno=1578, col_offset=29), [For(Name('g', Store(), lineno=1580, col_offset=20), Tuple([Name('G', Load(), lineno=1580, col_offset=26), Name('I', Load(), lineno=1580, col_offset=29), Name('Ig', Load(), lineno=1580, col_offset=32), Name('S', Load(), lineno=1580, col_offset=36), Name('L', Load(), lineno=1580, col_offset=39), Name('R', Load(), lineno=1580, col_offset=42)], Load(), lineno=1580, col_offset=26), [Assign([Name('s', Store(), lineno=1581, col_offset=20)], Call(Name('set', Load(), lineno=1581, col_offset=24), [Str('january', lineno=1581, col_offset=28)], [], None, None, lineno=1581, col_offset=24), lineno=1581, col_offset=20), Assign([Name('t', Store(), lineno=1582, col_offset=20)], Call(Attribute(Name('s', Load(), lineno=1582, col_offset=24), 'copy', Load(), lineno=1582, col_offset=24), [], [], None, None, lineno=1582, col_offset=24), lineno=1582, col_offset=20), Expr(Call(Call(Name('getattr', Load(), lineno=1583, col_offset=20), [Name('s', Load(), lineno=1583, col_offset=28), Name('methname', Load(), lineno=1583, col_offset=31)], [], None, None, lineno=1583, col_offset=20), [Call(Name('list', Load(), lineno=1583, col_offset=41), [Call(Name('g', Load(), lineno=1583, col_offset=46), [Name('data', Load(), lineno=1583, col_offset=48)], [], None, None, lineno=1583, col_offset=46)], [], None, None, lineno=1583, col_offset=41)], [], None, None, lineno=1583, col_offset=20), lineno=1583, col_offset=20), Expr(Call(Call(Name('getattr', Load(), lineno=1584, col_offset=20), [Name('t', Load(), lineno=1584, col_offset=28), Name('methname', Load(), lineno=1584, col_offset=31)], [], None, None, lineno=1584, col_offset=20), [Call(Name('g', Load(), lineno=1584, col_offset=41), [Name('data', Load(), lineno=1584, col_offset=43)], [], None, None, lineno=1584, col_offset=41)], [], None, None, lineno=1584, col_offset=20), lineno=1584, col_offset=20), Expr(Call(Attribute(Name('self', Load(), lineno=1585, col_offset=20), 'assertSetEqual', Load(), lineno=1585, col_offset=20), [Name('s', Load(), lineno=1585, col_offset=40), Name('t', Load(), lineno=1585, col_offset=43)], [], None, None, lineno=1585, col_offset=20), lineno=1585, col_offset=20)], [], lineno=1580, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=1587, col_offset=16), 'assertRaises', Load(), lineno=1587, col_offset=16), [Name('TypeError', Load(), lineno=1587, col_offset=34), Call(Name('getattr', Load(), lineno=1587, col_offset=45), [Call(Name('set', Load(), lineno=1587, col_offset=53), [Str('january', lineno=1587, col_offset=57)], [], None, None, lineno=1587, col_offset=53), Name('methname', Load(), lineno=1587, col_offset=69)], [], None, None, lineno=1587, col_offset=45), Call(Name('X', Load(), lineno=1587, col_offset=80), [Name('data', Load(), lineno=1587, col_offset=82)], [], None, None, lineno=1587, col_offset=80)], [], None, None, lineno=1587, col_offset=16), lineno=1587, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=1588, col_offset=16), 'assertRaises', Load(), lineno=1588, col_offset=16), [Name('TypeError', Load(), lineno=1588, col_offset=34), Call(Name('getattr', Load(), lineno=1588, col_offset=45), [Call(Name('set', Load(), lineno=1588, col_offset=53), [Str('january', lineno=1588, col_offset=57)], [], None, None, lineno=1588, col_offset=53), Name('methname', Load(), lineno=1588, col_offset=69)], [], None, None, lineno=1588, col_offset=45), Call(Name('N', Load(), lineno=1588, col_offset=80), [Name('data', Load(), lineno=1588, col_offset=82)], [], None, None, lineno=1588, col_offset=80)], [], None, None, lineno=1588, col_offset=16), lineno=1588, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=1589, col_offset=16), 'assertRaises', Load(), lineno=1589, col_offset=16), [Name('ZeroDivisionError', Load(), lineno=1589, col_offset=34), Call(Name('getattr', Load(), lineno=1589, col_offset=53), [Call(Name('set', Load(), lineno=1589, col_offset=61), [Str('january', lineno=1589, col_offset=65)], [], None, None, lineno=1589, col_offset=61), Name('methname', Load(), lineno=1589, col_offset=77)], [], None, None, lineno=1589, col_offset=53), Call(Name('E', Load(), lineno=1589, col_offset=88), [Name('data', Load(), lineno=1589, col_offset=90)], [], None, None, lineno=1589, col_offset=88)], [], None, None, lineno=1589, col_offset=16), lineno=1589, col_offset=16)], [], lineno=1578, col_offset=12)], [], lineno=1577, col_offset=8)], [], lineno=1576, col_offset=4)], [], lineno=1550, col_offset=0), FunctionDef('powerset', arguments([Name('U', Param(), lineno=1593, col_offset=13)], None, None, []), [Expr(Str('Generates all subsets of a set or sequence U.', lineno=1594, col_offset=4), lineno=1594, col_offset=4), Assign([Name('U', Store(), lineno=1595, col_offset=4)], Call(Name('iter', Load(), lineno=1595, col_offset=8), [Name('U', Load(), lineno=1595, col_offset=13)], [], None, None, lineno=1595, col_offset=8), lineno=1595, col_offset=4), TryExcept([Assign([Name('x', Store(), lineno=1597, col_offset=8)], Call(Name('frozenset', Load(), lineno=1597, col_offset=12), [List([Call(Attribute(Name('U', Load(), lineno=1597, col_offset=23), 'next', Load(), lineno=1597, col_offset=23), [], [], None, None, lineno=1597, col_offset=23)], Load(), lineno=1597, col_offset=22)], [], None, None, lineno=1597, col_offset=12), lineno=1597, col_offset=8), For(Name('S', Store(), lineno=1598, col_offset=12), Call(Name('powerset', Load(), lineno=1598, col_offset=17), [Name('U', Load(), lineno=1598, col_offset=26)], [], None, None, lineno=1598, col_offset=17), [Expr(Yield(Name('S', Load(), lineno=1599, col_offset=18), lineno=1599, col_offset=12), lineno=1599, col_offset=12), Expr(Yield(BinOp(Name('S', Load(), lineno=1600, col_offset=18), BitOr(), Name('x', Load(), lineno=1600, col_offset=22), lineno=1600, col_offset=18), lineno=1600, col_offset=12), lineno=1600, col_offset=12)], [], lineno=1598, col_offset=8)], [ExceptHandler(Name('StopIteration', Load(), lineno=1601, col_offset=11), None, [Expr(Yield(Call(Name('frozenset', Load(), lineno=1602, col_offset=14), [], [], None, None, lineno=1602, col_offset=14), lineno=1602, col_offset=8), lineno=1602, col_offset=8)], lineno=1601, col_offset=4)], [], lineno=1596, col_offset=4)], [], lineno=1593, col_offset=0), FunctionDef('cube', arguments([Name('n', Param(), lineno=1604, col_offset=9)], None, None, []), [Expr(Str('Graph of n-dimensional hypercube.', lineno=1605, col_offset=4), lineno=1605, col_offset=4), Assign([Name('singletons', Store(), lineno=1606, col_offset=4)], ListComp(Call(Name('frozenset', Load(), lineno=1606, col_offset=18), [List([Name('x', Load(), lineno=1606, col_offset=29)], Load(), lineno=1606, col_offset=28)], [], None, None, lineno=1606, col_offset=18), [comprehension(Name('x', Store(), lineno=1606, col_offset=37), Call(Name('range', Load(), lineno=1606, col_offset=42), [Name('n', Load(), lineno=1606, col_offset=48)], [], None, None, lineno=1606, col_offset=42), [])], lineno=1606, col_offset=18), lineno=1606, col_offset=4), Return(Call(Name('dict', Load(), lineno=1607, col_offset=11), [ListComp(Tuple([Name('x', Load(), lineno=1607, col_offset=18), Call(Name('frozenset', Load(), lineno=1607, col_offset=21), [ListComp(BinOp(Name('x', Load(), lineno=1607, col_offset=32), BitXor(), Name('s', Load(), lineno=1607, col_offset=34), lineno=1607, col_offset=32), [comprehension(Name('s', Store(), lineno=1607, col_offset=40), Name('singletons', Load(), lineno=1607, col_offset=45), [])], lineno=1607, col_offset=32)], [], None, None, lineno=1607, col_offset=21)], Load(), lineno=1607, col_offset=18), [comprehension(Name('x', Store(), lineno=1608, col_offset=21), Call(Name('powerset', Load(), lineno=1608, col_offset=26), [Call(Name('range', Load(), lineno=1608, col_offset=35), [Name('n', Load(), lineno=1608, col_offset=41)], [], None, None, lineno=1608, col_offset=35)], [], None, None, lineno=1608, col_offset=26), [])], lineno=1607, col_offset=17)], [], None, None, lineno=1607, col_offset=11), lineno=1607, col_offset=4)], [], lineno=1604, col_offset=0), FunctionDef('linegraph', arguments([Name('G', Param(), lineno=1610, col_offset=14)], None, None, []), [Expr(Str('Graph, the vertices of which are edges of G,\n    with two vertices being adjacent iff the corresponding\n    edges share a vertex.', lineno=1613, col_offset=-1), lineno=1613, col_offset=-1), Assign([Name('L', Store(), lineno=1614, col_offset=4)], Dict([], [], lineno=1614, col_offset=8), lineno=1614, col_offset=4), For(Name('x', Store(), lineno=1615, col_offset=8), Name('G', Load(), lineno=1615, col_offset=13), [For(Name('y', Store(), lineno=1616, col_offset=12), Subscript(Name('G', Load(), lineno=1616, col_offset=17), Index(Name('x', Load(), lineno=1616, col_offset=19)), Load(), lineno=1616, col_offset=17), [Assign([Name('nx', Store(), lineno=1617, col_offset=12)], ListComp(Call(Name('frozenset', Load(), lineno=1617, col_offset=18), [List([Name('x', Load(), lineno=1617, col_offset=29), Name('z', Load(), lineno=1617, col_offset=31)], Load(), lineno=1617, col_offset=28)], [], None, None, lineno=1617, col_offset=18), [comprehension(Name('z', Store(), lineno=1617, col_offset=39), Subscript(Name('G', Load(), lineno=1617, col_offset=44), Index(Name('x', Load(), lineno=1617, col_offset=46)), Load(), lineno=1617, col_offset=44), [Compare(Name('z', Load(), lineno=1617, col_offset=52), [NotEq()], [Name('y', Load(), lineno=1617, col_offset=57)], lineno=1617, col_offset=52)])], lineno=1617, col_offset=18), lineno=1617, col_offset=12), Assign([Name('ny', Store(), lineno=1618, col_offset=12)], ListComp(Call(Name('frozenset', Load(), lineno=1618, col_offset=18), [List([Name('y', Load(), lineno=1618, col_offset=29), Name('z', Load(), lineno=1618, col_offset=31)], Load(), lineno=1618, col_offset=28)], [], None, None, lineno=1618, col_offset=18), [comprehension(Name('z', Store(), lineno=1618, col_offset=39), Subscript(Name('G', Load(), lineno=1618, col_offset=44), Index(Name('y', Load(), lineno=1618, col_offset=46)), Load(), lineno=1618, col_offset=44), [Compare(Name('z', Load(), lineno=1618, col_offset=52), [NotEq()], [Name('x', Load(), lineno=1618, col_offset=57)], lineno=1618, col_offset=52)])], lineno=1618, col_offset=18), lineno=1618, col_offset=12), Assign([Subscript(Name('L', Load(), lineno=1619, col_offset=12), Index(Call(Name('frozenset', Load(), lineno=1619, col_offset=14), [List([Name('x', Load(), lineno=1619, col_offset=25), Name('y', Load(), lineno=1619, col_offset=27)], Load(), lineno=1619, col_offset=24)], [], None, None, lineno=1619, col_offset=14)), Store(), lineno=1619, col_offset=12)], Call(Name('frozenset', Load(), lineno=1619, col_offset=34), [BinOp(Name('nx', Load(), lineno=1619, col_offset=44), Add(), Name('ny', Load(), lineno=1619, col_offset=47), lineno=1619, col_offset=44)], [], None, None, lineno=1619, col_offset=34), lineno=1619, col_offset=12)], [], lineno=1616, col_offset=8)], [], lineno=1615, col_offset=4), Return(Name('L', Load(), lineno=1620, col_offset=11), lineno=1620, col_offset=4)], [], lineno=1610, col_offset=0), FunctionDef('faces', arguments([Name('G', Param(), lineno=1622, col_offset=10)], None, None, []), [Expr(Str('Return a set of faces in G.  Where a face is a set of vertices on that face', lineno=1623, col_offset=4), lineno=1623, col_offset=4), Assign([Name('f', Store(), lineno=1625, col_offset=4)], Call(Name('set', Load(), lineno=1625, col_offset=8), [], [], None, None, lineno=1625, col_offset=8), lineno=1625, col_offset=4), For(Tuple([Name('v1', Store(), lineno=1626, col_offset=8), Name('edges', Store(), lineno=1626, col_offset=12)], Store(), lineno=1626, col_offset=8), Call(Attribute(Name('G', Load(), lineno=1626, col_offset=21), 'items', Load(), lineno=1626, col_offset=21), [], [], None, None, lineno=1626, col_offset=21), [For(Name('v2', Store(), lineno=1627, col_offset=12), Name('edges', Load(), lineno=1627, col_offset=18), [For(Name('v3', Store(), lineno=1628, col_offset=16), Subscript(Name('G', Load(), lineno=1628, col_offset=22), Index(Name('v2', Load(), lineno=1628, col_offset=24)), Load(), lineno=1628, col_offset=22), [If(Compare(Name('v1', Load(), lineno=1629, col_offset=19), [Eq()], [Name('v3', Load(), lineno=1629, col_offset=25)], lineno=1629, col_offset=19), [Continue( lineno=1630, col_offset=20)], [], lineno=1629, col_offset=16), If(Compare(Name('v1', Load(), lineno=1631, col_offset=19), [In()], [Subscript(Name('G', Load(), lineno=1631, col_offset=25), Index(Name('v3', Load(), lineno=1631, col_offset=27)), Load(), lineno=1631, col_offset=25)], lineno=1631, col_offset=19), [Expr(Call(Attribute(Name('f', Load(), lineno=1632, col_offset=20), 'add', Load(), lineno=1632, col_offset=20), [Call(Name('frozenset', Load(), lineno=1632, col_offset=26), [List([Name('v1', Load(), lineno=1632, col_offset=37), Name('v2', Load(), lineno=1632, col_offset=41), Name('v3', Load(), lineno=1632, col_offset=45)], Load(), lineno=1632, col_offset=36)], [], None, None, lineno=1632, col_offset=26)], [], None, None, lineno=1632, col_offset=20), lineno=1632, col_offset=20)], [For(Name('v4', Store(), lineno=1634, col_offset=24), Subscript(Name('G', Load(), lineno=1634, col_offset=30), Index(Name('v3', Load(), lineno=1634, col_offset=32)), Load(), lineno=1634, col_offset=30), [If(Compare(Name('v4', Load(), lineno=1635, col_offset=27), [Eq()], [Name('v2', Load(), lineno=1635, col_offset=33)], lineno=1635, col_offset=27), [Continue( lineno=1636, col_offset=28)], [], lineno=1635, col_offset=24), If(Compare(Name('v1', Load(), lineno=1637, col_offset=27), [In()], [Subscript(Name('G', Load(), lineno=1637, col_offset=33), Index(Name('v4', Load(), lineno=1637, col_offset=35)), Load(), lineno=1637, col_offset=33)], lineno=1637, col_offset=27), [Expr(Call(Attribute(Name('f', Load(), lineno=1638, col_offset=28), 'add', Load(), lineno=1638, col_offset=28), [Call(Name('frozenset', Load(), lineno=1638, col_offset=34), [List([Name('v1', Load(), lineno=1638, col_offset=45), Name('v2', Load(), lineno=1638, col_offset=49), Name('v3', Load(), lineno=1638, col_offset=53), Name('v4', Load(), lineno=1638, col_offset=57)], Load(), lineno=1638, col_offset=44)], [], None, None, lineno=1638, col_offset=34)], [], None, None, lineno=1638, col_offset=28), lineno=1638, col_offset=28)], [For(Name('v5', Store(), lineno=1640, col_offset=32), Subscript(Name('G', Load(), lineno=1640, col_offset=38), Index(Name('v4', Load(), lineno=1640, col_offset=40)), Load(), lineno=1640, col_offset=38), [If(BoolOp(Or(), [Compare(Name('v5', Load(), lineno=1641, col_offset=35), [Eq()], [Name('v3', Load(), lineno=1641, col_offset=41)], lineno=1641, col_offset=35), Compare(Name('v5', Load(), lineno=1641, col_offset=47), [Eq()], [Name('v2', Load(), lineno=1641, col_offset=53)], lineno=1641, col_offset=47)], lineno=1641, col_offset=35), [Continue( lineno=1642, col_offset=36)], [], lineno=1641, col_offset=32), If(Compare(Name('v1', Load(), lineno=1643, col_offset=35), [In()], [Subscript(Name('G', Load(), lineno=1643, col_offset=41), Index(Name('v5', Load(), lineno=1643, col_offset=43)), Load(), lineno=1643, col_offset=41)], lineno=1643, col_offset=35), [Expr(Call(Attribute(Name('f', Load(), lineno=1644, col_offset=36), 'add', Load(), lineno=1644, col_offset=36), [Call(Name('frozenset', Load(), lineno=1644, col_offset=42), [List([Name('v1', Load(), lineno=1644, col_offset=53), Name('v2', Load(), lineno=1644, col_offset=57), Name('v3', Load(), lineno=1644, col_offset=61), Name('v4', Load(), lineno=1644, col_offset=65), Name('v5', Load(), lineno=1644, col_offset=69)], Load(), lineno=1644, col_offset=52)], [], None, None, lineno=1644, col_offset=42)], [], None, None, lineno=1644, col_offset=36), lineno=1644, col_offset=36)], [], lineno=1643, col_offset=32)], [], lineno=1640, col_offset=28)], lineno=1637, col_offset=24)], [], lineno=1634, col_offset=20)], lineno=1631, col_offset=16)], [], lineno=1628, col_offset=12)], [], lineno=1627, col_offset=8)], [], lineno=1626, col_offset=4), Return(Name('f', Load(), lineno=1645, col_offset=11), lineno=1645, col_offset=4)], [], lineno=1622, col_offset=0), ClassDef('TestGraphs', [Attribute(Name('unittest', Load(), lineno=1648, col_offset=17), 'TestCase', Load(), lineno=1648, col_offset=17)], [FunctionDef('test_cube', arguments([Name('self', Param(), lineno=1650, col_offset=18)], None, None, []), [Assign([Name('g', Store(), lineno=1652, col_offset=8)], Call(Name('cube', Load(), lineno=1652, col_offset=12), [Num(3, lineno=1652, col_offset=17)], [], None, None, lineno=1652, col_offset=12), lineno=1652, col_offset=8), Assign([Name('vertices1', Store(), lineno=1653, col_offset=8)], Call(Name('set', Load(), lineno=1653, col_offset=20), [Name('g', Load(), lineno=1653, col_offset=24)], [], None, None, lineno=1653, col_offset=20), lineno=1653, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1654, col_offset=8), 'assertEqual', Load(), lineno=1654, col_offset=8), [Call(Name('len', Load(), lineno=1654, col_offset=25), [Name('vertices1', Load(), lineno=1654, col_offset=29)], [], None, None, lineno=1654, col_offset=25), Num(8, lineno=1654, col_offset=41)], [], None, None, lineno=1654, col_offset=8), lineno=1654, col_offset=8), For(Name('edge', Store(), lineno=1655, col_offset=12), Call(Attribute(Name('g', Load(), lineno=1655, col_offset=20), 'values', Load(), lineno=1655, col_offset=20), [], [], None, None, lineno=1655, col_offset=20), [Expr(Call(Attribute(Name('self', Load(), lineno=1656, col_offset=12), 'assertEqual', Load(), lineno=1656, col_offset=12), [Call(Name('len', Load(), lineno=1656, col_offset=29), [Name('edge', Load(), lineno=1656, col_offset=33)], [], None, None, lineno=1656, col_offset=29), Num(3, lineno=1656, col_offset=40)], [], None, None, lineno=1656, col_offset=12), lineno=1656, col_offset=12)], [], lineno=1655, col_offset=8), Assign([Name('vertices2', Store(), lineno=1657, col_offset=8)], Call(Name('set', Load(), lineno=1657, col_offset=20), [GeneratorExp(Name('v', Load(), lineno=1657, col_offset=24), [comprehension(Name('edges', Store(), lineno=1657, col_offset=30), Call(Attribute(Name('g', Load(), lineno=1657, col_offset=39), 'values', Load(), lineno=1657, col_offset=39), [], [], None, None, lineno=1657, col_offset=39), []), comprehension(Name('v', Store(), lineno=1657, col_offset=54), Name('edges', Load(), lineno=1657, col_offset=59), [])], lineno=1657, col_offset=24)], [], None, None, lineno=1657, col_offset=20), lineno=1657, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1658, col_offset=8), 'assertEqual', Load(), lineno=1658, col_offset=8), [Name('vertices1', Load(), lineno=1658, col_offset=25), Name('vertices2', Load(), lineno=1658, col_offset=36)], [], None, None, lineno=1658, col_offset=8), lineno=1658, col_offset=8), Assign([Name('cubefaces', Store(), lineno=1660, col_offset=8)], Call(Name('faces', Load(), lineno=1660, col_offset=20), [Name('g', Load(), lineno=1660, col_offset=26)], [], None, None, lineno=1660, col_offset=20), lineno=1660, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1661, col_offset=8), 'assertEqual', Load(), lineno=1661, col_offset=8), [Call(Name('len', Load(), lineno=1661, col_offset=25), [Name('cubefaces', Load(), lineno=1661, col_offset=29)], [], None, None, lineno=1661, col_offset=25), Num(6, lineno=1661, col_offset=41)], [], None, None, lineno=1661, col_offset=8), lineno=1661, col_offset=8), For(Name('face', Store(), lineno=1662, col_offset=12), Name('cubefaces', Load(), lineno=1662, col_offset=20), [Expr(Call(Attribute(Name('self', Load(), lineno=1663, col_offset=12), 'assertEqual', Load(), lineno=1663, col_offset=12), [Call(Name('len', Load(), lineno=1663, col_offset=29), [Name('face', Load(), lineno=1663, col_offset=33)], [], None, None, lineno=1663, col_offset=29), Num(4, lineno=1663, col_offset=40)], [], None, None, lineno=1663, col_offset=12), lineno=1663, col_offset=12)], [], lineno=1662, col_offset=8)], [], lineno=1650, col_offset=4), FunctionDef('test_cuboctahedron', arguments([Name('self', Param(), lineno=1665, col_offset=27)], None, None, []), [Assign([Name('g', Store(), lineno=1671, col_offset=8)], Call(Name('cube', Load(), lineno=1671, col_offset=12), [Num(3, lineno=1671, col_offset=17)], [], None, None, lineno=1671, col_offset=12), lineno=1671, col_offset=8), Assign([Name('cuboctahedron', Store(), lineno=1672, col_offset=8)], Call(Name('linegraph', Load(), lineno=1672, col_offset=24), [Name('g', Load(), lineno=1672, col_offset=34)], [], None, None, lineno=1672, col_offset=24), lineno=1672, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1673, col_offset=8), 'assertEqual', Load(), lineno=1673, col_offset=8), [Call(Name('len', Load(), lineno=1673, col_offset=25), [Name('cuboctahedron', Load(), lineno=1673, col_offset=29)], [], None, None, lineno=1673, col_offset=25), Num(12, lineno=1673, col_offset=45)], [], None, None, lineno=1673, col_offset=8), lineno=1673, col_offset=8), Assign([Name('vertices', Store(), lineno=1675, col_offset=8)], Call(Name('set', Load(), lineno=1675, col_offset=19), [Name('cuboctahedron', Load(), lineno=1675, col_offset=23)], [], None, None, lineno=1675, col_offset=19), lineno=1675, col_offset=8), For(Name('edges', Store(), lineno=1676, col_offset=12), Call(Attribute(Name('cuboctahedron', Load(), lineno=1676, col_offset=21), 'values', Load(), lineno=1676, col_offset=21), [], [], None, None, lineno=1676, col_offset=21), [Expr(Call(Attribute(Name('self', Load(), lineno=1677, col_offset=12), 'assertEqual', Load(), lineno=1677, col_offset=12), [Call(Name('len', Load(), lineno=1677, col_offset=29), [Name('edges', Load(), lineno=1677, col_offset=33)], [], None, None, lineno=1677, col_offset=29), Num(4, lineno=1677, col_offset=41)], [], None, None, lineno=1677, col_offset=12), lineno=1677, col_offset=12)], [], lineno=1676, col_offset=8), Assign([Name('othervertices', Store(), lineno=1678, col_offset=8)], Call(Name('set', Load(), lineno=1678, col_offset=24), [GeneratorExp(Name('edge', Load(), lineno=1678, col_offset=28), [comprehension(Name('edges', Store(), lineno=1678, col_offset=37), Call(Attribute(Name('cuboctahedron', Load(), lineno=1678, col_offset=46), 'values', Load(), lineno=1678, col_offset=46), [], [], None, None, lineno=1678, col_offset=46), []), comprehension(Name('edge', Store(), lineno=1678, col_offset=73), Name('edges', Load(), lineno=1678, col_offset=81), [])], lineno=1678, col_offset=28)], [], None, None, lineno=1678, col_offset=24), lineno=1678, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1679, col_offset=8), 'assertEqual', Load(), lineno=1679, col_offset=8), [Name('vertices', Load(), lineno=1679, col_offset=25), Name('othervertices', Load(), lineno=1679, col_offset=35)], [], None, None, lineno=1679, col_offset=8), lineno=1679, col_offset=8), Assign([Name('cubofaces', Store(), lineno=1681, col_offset=8)], Call(Name('faces', Load(), lineno=1681, col_offset=20), [Name('cuboctahedron', Load(), lineno=1681, col_offset=26)], [], None, None, lineno=1681, col_offset=20), lineno=1681, col_offset=8), Assign([Name('facesizes', Store(), lineno=1682, col_offset=8)], Call(Attribute(Name('collections', Load(), lineno=1682, col_offset=20), 'defaultdict', Load(), lineno=1682, col_offset=20), [Name('int', Load(), lineno=1682, col_offset=44)], [], None, None, lineno=1682, col_offset=20), lineno=1682, col_offset=8), For(Name('face', Store(), lineno=1683, col_offset=12), Name('cubofaces', Load(), lineno=1683, col_offset=20), [AugAssign(Subscript(Name('facesizes', Load(), lineno=1684, col_offset=12), Index(Call(Name('len', Load(), lineno=1684, col_offset=22), [Name('face', Load(), lineno=1684, col_offset=26)], [], None, None, lineno=1684, col_offset=22)), Store(), lineno=1684, col_offset=12), Add(), Num(1, lineno=1684, col_offset=36), lineno=1684, col_offset=12)], [], lineno=1683, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1685, col_offset=8), 'assertEqual', Load(), lineno=1685, col_offset=8), [Subscript(Name('facesizes', Load(), lineno=1685, col_offset=25), Index(Num(3, lineno=1685, col_offset=35)), Load(), lineno=1685, col_offset=25), Num(8, lineno=1685, col_offset=39)], [], None, None, lineno=1685, col_offset=8), lineno=1685, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1686, col_offset=8), 'assertEqual', Load(), lineno=1686, col_offset=8), [Subscript(Name('facesizes', Load(), lineno=1686, col_offset=25), Index(Num(4, lineno=1686, col_offset=35)), Load(), lineno=1686, col_offset=25), Num(6, lineno=1686, col_offset=39)], [], None, None, lineno=1686, col_offset=8), lineno=1686, col_offset=8), For(Name('vertex', Store(), lineno=1688, col_offset=12), Name('cuboctahedron', Load(), lineno=1688, col_offset=22), [Assign([Name('edge', Store(), lineno=1689, col_offset=12)], Name('vertex', Load(), lineno=1689, col_offset=19), lineno=1689, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1690, col_offset=12), 'assertEqual', Load(), lineno=1690, col_offset=12), [Call(Name('len', Load(), lineno=1690, col_offset=29), [Name('edge', Load(), lineno=1690, col_offset=33)], [], None, None, lineno=1690, col_offset=29), Num(2, lineno=1690, col_offset=40)], [], None, None, lineno=1690, col_offset=12), lineno=1690, col_offset=12), For(Name('cubevert', Store(), lineno=1691, col_offset=16), Name('edge', Load(), lineno=1691, col_offset=28), [Expr(Call(Attribute(Name('self', Load(), lineno=1692, col_offset=16), 'assertIn', Load(), lineno=1692, col_offset=16), [Name('cubevert', Load(), lineno=1692, col_offset=30), Name('g', Load(), lineno=1692, col_offset=40)], [], None, None, lineno=1692, col_offset=16), lineno=1692, col_offset=16)], [], lineno=1691, col_offset=12)], [], lineno=1688, col_offset=8)], [], lineno=1665, col_offset=4)], [], lineno=1648, col_offset=0), FunctionDef('test_main', arguments([Name('verbose', Param(), lineno=1697, col_offset=14)], None, None, [Name('None', Load(), lineno=1697, col_offset=22)]), [Assign([Name('test_classes', Store(), lineno=1698, col_offset=4)], Tuple([Name('TestSet', Load(), lineno=1699, col_offset=8), Name('TestSetSubclass', Load(), lineno=1700, col_offset=8), Name('TestSetSubclassWithKeywordArgs', Load(), lineno=1701, col_offset=8), Name('TestFrozenSet', Load(), lineno=1702, col_offset=8), Name('TestFrozenSetSubclass', Load(), lineno=1703, col_offset=8), Name('TestSetOfSets', Load(), lineno=1704, col_offset=8), Name('TestExceptionPropagation', Load(), lineno=1705, col_offset=8), Name('TestBasicOpsEmpty', Load(), lineno=1706, col_offset=8), Name('TestBasicOpsSingleton', Load(), lineno=1707, col_offset=8), Name('TestBasicOpsTuple', Load(), lineno=1708, col_offset=8), Name('TestBasicOpsTriple', Load(), lineno=1709, col_offset=8), Name('TestBinaryOps', Load(), lineno=1710, col_offset=8), Name('TestUpdateOps', Load(), lineno=1711, col_offset=8), Name('TestMutate', Load(), lineno=1712, col_offset=8), Name('TestSubsetEqualEmpty', Load(), lineno=1713, col_offset=8), Name('TestSubsetEqualNonEmpty', Load(), lineno=1714, col_offset=8), Name('TestSubsetEmptyNonEmpty', Load(), lineno=1715, col_offset=8), Name('TestSubsetPartial', Load(), lineno=1716, col_offset=8), Name('TestSubsetNonOverlap', Load(), lineno=1717, col_offset=8), Name('TestOnlySetsNumeric', Load(), lineno=1718, col_offset=8), Name('TestOnlySetsDict', Load(), lineno=1719, col_offset=8), Name('TestOnlySetsOperator', Load(), lineno=1720, col_offset=8), Name('TestOnlySetsTuple', Load(), lineno=1721, col_offset=8), Name('TestOnlySetsString', Load(), lineno=1722, col_offset=8), Name('TestOnlySetsGenerator', Load(), lineno=1723, col_offset=8), Name('TestCopyingEmpty', Load(), lineno=1724, col_offset=8), Name('TestCopyingSingleton', Load(), lineno=1725, col_offset=8), Name('TestCopyingTriple', Load(), lineno=1726, col_offset=8), Name('TestCopyingTuple', Load(), lineno=1727, col_offset=8), Name('TestCopyingNested', Load(), lineno=1728, col_offset=8), Name('TestIdentities', Load(), lineno=1729, col_offset=8), Name('TestVariousIteratorArgs', Load(), lineno=1730, col_offset=8), Name('TestGraphs', Load(), lineno=1731, col_offset=8)], Load(), lineno=1699, col_offset=8), lineno=1698, col_offset=4), Expr(Call(Attribute(Name('test_support', Load(), lineno=1734, col_offset=4), 'run_unittest', Load(), lineno=1734, col_offset=4), [], [], Name('test_classes', Load(), lineno=1734, col_offset=31), None, lineno=1734, col_offset=4), lineno=1734, col_offset=4), If(BoolOp(And(), [Name('verbose', Load(), lineno=1737, col_offset=7), Call(Name('hasattr', Load(), lineno=1737, col_offset=19), [Name('sys', Load(), lineno=1737, col_offset=27), Str('gettotalrefcount', lineno=1737, col_offset=32)], [], None, None, lineno=1737, col_offset=19)], lineno=1737, col_offset=7), [Import([alias('gc', None)], lineno=1738, col_offset=8), Assign([Name('counts', Store(), lineno=1739, col_offset=8)], BinOp(List([Name('None', Load(), lineno=1739, col_offset=18)], Load(), lineno=1739, col_offset=17), Mult(), Num(5, lineno=1739, col_offset=26), lineno=1739, col_offset=17), lineno=1739, col_offset=8), For(Name('i', Store(), lineno=1740, col_offset=12), Call(Name('xrange', Load(), lineno=1740, col_offset=17), [Call(Name('len', Load(), lineno=1740, col_offset=24), [Name('counts', Load(), lineno=1740, col_offset=28)], [], None, None, lineno=1740, col_offset=24)], [], None, None, lineno=1740, col_offset=17), [Expr(Call(Attribute(Name('test_support', Load(), lineno=1741, col_offset=12), 'run_unittest', Load(), lineno=1741, col_offset=12), [], [], Name('test_classes', Load(), lineno=1741, col_offset=39), None, lineno=1741, col_offset=12), lineno=1741, col_offset=12), Expr(Call(Attribute(Name('gc', Load(), lineno=1742, col_offset=12), 'collect', Load(), lineno=1742, col_offset=12), [], [], None, None, lineno=1742, col_offset=12), lineno=1742, col_offset=12), Assign([Subscript(Name('counts', Load(), lineno=1743, col_offset=12), Index(Name('i', Load(), lineno=1743, col_offset=19)), Store(), lineno=1743, col_offset=12)], Call(Attribute(Name('sys', Load(), lineno=1743, col_offset=24), 'gettotalrefcount', Load(), lineno=1743, col_offset=24), [], [], None, None, lineno=1743, col_offset=24), lineno=1743, col_offset=12)], [], lineno=1740, col_offset=8), Print(None, [Name('counts', Load(), lineno=1744, col_offset=14)], True, lineno=1744, col_offset=8)], [], lineno=1737, col_offset=4)], [], lineno=1697, col_offset=0), If(Compare(Name('__name__', Load(), lineno=1746, col_offset=3), [Eq()], [Str('__main__', lineno=1746, col_offset=15)], lineno=1746, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=1747, col_offset=4), [], [keyword('verbose', Name('True', Load(), lineno=1747, col_offset=22))], None, None, lineno=1747, col_offset=4), lineno=1747, col_offset=4)], [], lineno=1746, col_offset=0)])
