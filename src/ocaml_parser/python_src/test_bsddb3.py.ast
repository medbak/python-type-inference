Module([Expr(Str('\nRun all test cases.\n', lineno=4, col_offset=-1), lineno=4, col_offset=-1), Import([alias('os', None)], lineno=5, col_offset=0), Import([alias('sys', None)], lineno=6, col_offset=0), Import([alias('tempfile', None)], lineno=7, col_offset=0), Import([alias('time', None)], lineno=8, col_offset=0), Import([alias('unittest', None)], lineno=9, col_offset=0), ImportFrom('test.test_support', [alias('requires', None), alias('run_unittest', None), alias('import_module', None)], 0, lineno=10, col_offset=0), Expr(Call(Name('import_module', Load(), lineno=13, col_offset=0), [Str('_bsddb', lineno=13, col_offset=14)], [], None, None, lineno=13, col_offset=0), lineno=13, col_offset=0), Expr(Call(Name('import_module', Load(), lineno=15, col_offset=0), [Str('bsddb', lineno=15, col_offset=14)], [keyword('deprecated', Name('True', Load(), lineno=15, col_offset=34))], None, None, lineno=15, col_offset=0), lineno=15, col_offset=0), If(Compare(Name('__name__', Load(), lineno=19, col_offset=3), [NotEq()], [Str('__main__', lineno=19, col_offset=15)], lineno=19, col_offset=3), [Expr(Call(Name('requires', Load(), lineno=20, col_offset=4), [Str('bsddb', lineno=20, col_offset=13)], [], None, None, lineno=20, col_offset=4), lineno=20, col_offset=4)], [], lineno=19, col_offset=0), Assign([Name('verbose', Store(), lineno=22, col_offset=0)], Name('False', Load(), lineno=22, col_offset=10), lineno=22, col_offset=0), If(Compare(Str('verbose', lineno=23, col_offset=3), [In()], [Attribute(Name('sys', Load(), lineno=23, col_offset=16), 'argv', Load(), lineno=23, col_offset=16)], lineno=23, col_offset=3), [Assign([Name('verbose', Store(), lineno=24, col_offset=4)], Name('True', Load(), lineno=24, col_offset=14), lineno=24, col_offset=4), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=25, col_offset=4), 'argv', Load(), lineno=25, col_offset=4), 'remove', Load(), lineno=25, col_offset=4), [Str('verbose', lineno=25, col_offset=20)], [], None, None, lineno=25, col_offset=4), lineno=25, col_offset=4)], [], lineno=23, col_offset=0), If(Compare(Str('silent', lineno=27, col_offset=3), [In()], [Attribute(Name('sys', Load(), lineno=27, col_offset=15), 'argv', Load(), lineno=27, col_offset=15)], lineno=27, col_offset=3), [Assign([Name('verbose', Store(), lineno=28, col_offset=4)], Name('False', Load(), lineno=28, col_offset=14), lineno=28, col_offset=4), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=29, col_offset=4), 'argv', Load(), lineno=29, col_offset=4), 'remove', Load(), lineno=29, col_offset=4), [Str('silent', lineno=29, col_offset=20)], [], None, None, lineno=29, col_offset=4), lineno=29, col_offset=4)], [], lineno=27, col_offset=0), ClassDef('TimingCheck', [Attribute(Name('unittest', Load(), lineno=32, col_offset=18), 'TestCase', Load(), lineno=32, col_offset=18)], [Expr(Str('This class is not a real test.  Its purpose is to print a message\n    periodically when the test runs slowly.  This will prevent the buildbots\n    from timing out on slow machines.', lineno=36, col_offset=-1), lineno=36, col_offset=-1), Assign([Name('_PRINT_WORKING_MSG_INTERVAL', Store(), lineno=41, col_offset=4)], BinOp(Num(4, lineno=41, col_offset=34), Mult(), Num(60, lineno=41, col_offset=38), lineno=41, col_offset=34), lineno=41, col_offset=4), Assign([Name('next_time', Store(), lineno=45, col_offset=4)], BinOp(Call(Attribute(Name('time', Load(), lineno=45, col_offset=16), 'time', Load(), lineno=45, col_offset=16), [], [], None, None, lineno=45, col_offset=16), Add(), Name('_PRINT_WORKING_MSG_INTERVAL', Load(), lineno=45, col_offset=30), lineno=45, col_offset=16), lineno=45, col_offset=4), FunctionDef('testCheckElapsedTime', arguments([Name('self', Param(), lineno=47, col_offset=29)], None, None, []), [Assign([Name('now', Store(), lineno=49, col_offset=8)], Call(Attribute(Name('time', Load(), lineno=49, col_offset=14), 'time', Load(), lineno=49, col_offset=14), [], [], None, None, lineno=49, col_offset=14), lineno=49, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=50, col_offset=11), 'next_time', Load(), lineno=50, col_offset=11), [LtE()], [Name('now', Load(), lineno=50, col_offset=29)], lineno=50, col_offset=11), [Assign([Attribute(Name('TimingCheck', Load(), lineno=51, col_offset=12), 'next_time', Store(), lineno=51, col_offset=12)], BinOp(Name('now', Load(), lineno=51, col_offset=36), Add(), Attribute(Name('self', Load(), lineno=51, col_offset=42), '_PRINT_WORKING_MSG_INTERVAL', Load(), lineno=51, col_offset=42), lineno=51, col_offset=36), lineno=51, col_offset=12), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=52, col_offset=12), '__stdout__', Load(), lineno=52, col_offset=12), 'write', Load(), lineno=52, col_offset=12), [Str('  test_bsddb3 still working, be patient...\n', lineno=52, col_offset=33)], [], None, None, lineno=52, col_offset=12), lineno=52, col_offset=12), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=53, col_offset=12), '__stdout__', Load(), lineno=53, col_offset=12), 'flush', Load(), lineno=53, col_offset=12), [], [], None, None, lineno=53, col_offset=12), lineno=53, col_offset=12)], [], lineno=50, col_offset=8)], [], lineno=47, col_offset=4)], [], lineno=32, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [ImportFrom('bsddb', [alias('db', None)], 0, lineno=58, col_offset=4), ImportFrom('bsddb.test', [alias('test_all', None)], 0, lineno=59, col_offset=4), Expr(Call(Attribute(Name('test_all', Load(), lineno=60, col_offset=4), 'set_test_path_prefix', Load(), lineno=60, col_offset=4), [Call(Attribute(Attribute(Name('os', Load(), lineno=60, col_offset=34), 'path', Load(), lineno=60, col_offset=34), 'join', Load(), lineno=60, col_offset=34), [Call(Attribute(Name('tempfile', Load(), lineno=60, col_offset=47), 'gettempdir', Load(), lineno=60, col_offset=47), [], [], None, None, lineno=60, col_offset=47), BinOp(Str('z-test_bsddb3-%s', lineno=61, col_offset=33), Mod(), Call(Attribute(Name('os', Load(), lineno=62, col_offset=33), 'getpid', Load(), lineno=62, col_offset=33), [], [], None, None, lineno=62, col_offset=33), lineno=61, col_offset=33)], [], None, None, lineno=60, col_offset=34)], [], None, None, lineno=60, col_offset=4), lineno=60, col_offset=4), Print(Attribute(Name('sys', Load(), lineno=65, col_offset=12), 'stderr', Load(), lineno=65, col_offset=12), [Attribute(Name('db', Load(), lineno=65, col_offset=24), 'DB_VERSION_STRING', Load(), lineno=65, col_offset=24)], True, lineno=65, col_offset=4), Print(Attribute(Name('sys', Load(), lineno=66, col_offset=12), 'stderr', Load(), lineno=66, col_offset=12), [Str('Test path prefix: ', lineno=66, col_offset=24), Call(Attribute(Name('test_all', Load(), lineno=66, col_offset=46), 'get_test_path_prefix', Load(), lineno=66, col_offset=46), [], [], None, None, lineno=66, col_offset=46)], True, lineno=66, col_offset=4), TryFinally([Expr(Call(Name('run_unittest', Load(), lineno=68, col_offset=8), [Call(Attribute(Name('test_all', Load(), lineno=68, col_offset=21), 'suite', Load(), lineno=68, col_offset=21), [], [keyword('module_prefix', Str('bsddb.test.', lineno=68, col_offset=50)), keyword('timing_check', Name('TimingCheck', Load(), lineno=69, col_offset=49))], None, None, lineno=68, col_offset=21)], [], None, None, lineno=68, col_offset=8), lineno=68, col_offset=8)], [TryExcept([Expr(Call(Attribute(Name('test_all', Load(), lineno=75, col_offset=12), 'remove_test_path_directory', Load(), lineno=75, col_offset=12), [], [], None, None, lineno=75, col_offset=12), lineno=75, col_offset=12)], [ExceptHandler(None, None, [Pass( lineno=77, col_offset=12)], lineno=76, col_offset=8)], [], lineno=74, col_offset=8)], lineno=67, col_offset=4)], [], lineno=57, col_offset=0), If(Compare(Name('__name__', Load(), lineno=80, col_offset=3), [Eq()], [Str('__main__', lineno=80, col_offset=15)], lineno=80, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=81, col_offset=4), [], [], None, None, lineno=81, col_offset=4), lineno=81, col_offset=4)], [], lineno=80, col_offset=0)])
