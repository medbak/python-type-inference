Module([Expr(Str('pyversioncheck - Module to help with checking versions', lineno=1, col_offset=0), lineno=1, col_offset=0), Import([alias('types', None)], lineno=2, col_offset=0), Import([alias('rfc822', None)], lineno=3, col_offset=0), Import([alias('urllib', None)], lineno=4, col_offset=0), Import([alias('sys', None)], lineno=5, col_offset=0), Assign([Name('VERBOSE_SILENT', Store(), lineno=8, col_offset=0)], Num(0, lineno=8, col_offset=15), lineno=8, col_offset=0), Assign([Name('VERBOSE_NORMAL', Store(), lineno=9, col_offset=0)], Num(1, lineno=9, col_offset=15), lineno=9, col_offset=0), Assign([Name('VERBOSE_EACHFILE', Store(), lineno=10, col_offset=0)], Num(2, lineno=10, col_offset=17), lineno=10, col_offset=0), Assign([Name('VERBOSE_CHECKALL', Store(), lineno=11, col_offset=0)], Num(3, lineno=11, col_offset=17), lineno=11, col_offset=0), Assign([Name('_TESTDIR', Store(), lineno=15, col_offset=0)], Str('http://www.cwi.nl/~jack/versiontestdir/', lineno=15, col_offset=9), lineno=15, col_offset=0), FunctionDef('versioncheck', arguments([Name('package', Param(), lineno=17, col_offset=17), Name('url', Param(), lineno=17, col_offset=26), Name('version', Param(), lineno=17, col_offset=31), Name('verbose', Param(), lineno=17, col_offset=40)], None, None, [Num(0, lineno=17, col_offset=48)]), [Assign([Tuple([Name('ok', Store(), lineno=18, col_offset=4), Name('newversion', Store(), lineno=18, col_offset=8), Name('fp', Store(), lineno=18, col_offset=20)], Store(), lineno=18, col_offset=4)], Call(Name('checkonly', Load(), lineno=18, col_offset=25), [Name('package', Load(), lineno=18, col_offset=35), Name('url', Load(), lineno=18, col_offset=44), Name('version', Load(), lineno=18, col_offset=49), Name('verbose', Load(), lineno=18, col_offset=58)], [], None, None, lineno=18, col_offset=25), lineno=18, col_offset=4), If(Compare(Name('verbose', Load(), lineno=19, col_offset=7), [Gt()], [Name('VERBOSE_NORMAL', Load(), lineno=19, col_offset=17)], lineno=19, col_offset=7), [Return(Name('ok', Load(), lineno=20, col_offset=15), lineno=20, col_offset=8)], [], lineno=19, col_offset=4), If(Compare(Name('ok', Load(), lineno=21, col_offset=7), [Lt()], [Num(0, lineno=21, col_offset=12)], lineno=21, col_offset=7), [Print(None, [BinOp(Str('%s: No correctly formatted current version file found', lineno=22, col_offset=14), Mod(), Name('package', Load(), lineno=22, col_offset=71), lineno=22, col_offset=14)], True, lineno=22, col_offset=8)], [If(Compare(Name('ok', Load(), lineno=23, col_offset=9), [Eq()], [Num(1, lineno=23, col_offset=15)], lineno=23, col_offset=9), [Print(None, [BinOp(Str('%s: up-to-date (version %s)', lineno=24, col_offset=14), Mod(), Tuple([Name('package', Load(), lineno=24, col_offset=45), Name('version', Load(), lineno=24, col_offset=54)], Load(), lineno=24, col_offset=45), lineno=24, col_offset=14)], True, lineno=24, col_offset=8)], [Print(None, [BinOp(Str('%s: version %s installed, version %s found:', lineno=26, col_offset=14), Mod(), Tuple([Name('package', Load(), lineno=27, col_offset=25), Name('version', Load(), lineno=27, col_offset=34), Name('newversion', Load(), lineno=27, col_offset=43)], Load(), lineno=27, col_offset=25), lineno=26, col_offset=14)], True, lineno=26, col_offset=8), If(Compare(Name('verbose', Load(), lineno=28, col_offset=11), [Gt()], [Name('VERBOSE_SILENT', Load(), lineno=28, col_offset=21)], lineno=28, col_offset=11), [While(Num(1, lineno=29, col_offset=18), [Assign([Name('line', Store(), lineno=30, col_offset=16)], Call(Attribute(Name('fp', Load(), lineno=30, col_offset=23), 'readline', Load(), lineno=30, col_offset=23), [], [], None, None, lineno=30, col_offset=23), lineno=30, col_offset=16), If(UnaryOp(Not(), Name('line', Load(), lineno=31, col_offset=23), lineno=31, col_offset=19), [Break( lineno=31, col_offset=29)], [], lineno=31, col_offset=16), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=32, col_offset=16), 'stdout', Load(), lineno=32, col_offset=16), 'write', Load(), lineno=32, col_offset=16), [BinOp(Str('\t', lineno=32, col_offset=33), Add(), Name('line', Load(), lineno=32, col_offset=38), lineno=32, col_offset=33)], [], None, None, lineno=32, col_offset=16), lineno=32, col_offset=16)], [], lineno=29, col_offset=12)], [], lineno=28, col_offset=8)], lineno=23, col_offset=9)], lineno=21, col_offset=4), Return(Name('ok', Load(), lineno=33, col_offset=11), lineno=33, col_offset=4)], [], lineno=17, col_offset=0), FunctionDef('checkonly', arguments([Name('package', Param(), lineno=35, col_offset=14), Name('url', Param(), lineno=35, col_offset=23), Name('version', Param(), lineno=35, col_offset=28), Name('verbose', Param(), lineno=35, col_offset=37)], None, None, [Num(0, lineno=35, col_offset=45)]), [If(Compare(Name('verbose', Load(), lineno=36, col_offset=7), [GtE()], [Name('VERBOSE_EACHFILE', Load(), lineno=36, col_offset=18)], lineno=36, col_offset=7), [Print(None, [BinOp(Str('%s:', lineno=37, col_offset=14), Mod(), Name('package', Load(), lineno=37, col_offset=20), lineno=37, col_offset=14)], True, lineno=37, col_offset=8)], [], lineno=36, col_offset=4), If(Compare(Call(Name('type', Load(), lineno=38, col_offset=7), [Name('url', Load(), lineno=38, col_offset=12)], [], None, None, lineno=38, col_offset=7), [Eq()], [Attribute(Name('types', Load(), lineno=38, col_offset=20), 'StringType', Load(), lineno=38, col_offset=20)], lineno=38, col_offset=7), [Assign([Tuple([Name('ok', Store(), lineno=39, col_offset=8), Name('newversion', Store(), lineno=39, col_offset=12), Name('fp', Store(), lineno=39, col_offset=24)], Store(), lineno=39, col_offset=8)], Call(Name('_check1version', Load(), lineno=39, col_offset=29), [Name('package', Load(), lineno=39, col_offset=44), Name('url', Load(), lineno=39, col_offset=53), Name('version', Load(), lineno=39, col_offset=58), Name('verbose', Load(), lineno=39, col_offset=67)], [], None, None, lineno=39, col_offset=29), lineno=39, col_offset=8)], [For(Name('u', Store(), lineno=41, col_offset=12), Name('url', Load(), lineno=41, col_offset=17), [Assign([Tuple([Name('ok', Store(), lineno=42, col_offset=12), Name('newversion', Store(), lineno=42, col_offset=16), Name('fp', Store(), lineno=42, col_offset=28)], Store(), lineno=42, col_offset=12)], Call(Name('_check1version', Load(), lineno=42, col_offset=33), [Name('package', Load(), lineno=42, col_offset=48), Name('u', Load(), lineno=42, col_offset=57), Name('version', Load(), lineno=42, col_offset=60), Name('verbose', Load(), lineno=42, col_offset=69)], [], None, None, lineno=42, col_offset=33), lineno=42, col_offset=12), If(BoolOp(And(), [Compare(Name('ok', Load(), lineno=43, col_offset=15), [GtE()], [Num(0, lineno=43, col_offset=21)], lineno=43, col_offset=15), Compare(Name('verbose', Load(), lineno=43, col_offset=27), [Lt()], [Name('VERBOSE_CHECKALL', Load(), lineno=43, col_offset=37)], lineno=43, col_offset=27)], lineno=43, col_offset=15), [Break( lineno=44, col_offset=16)], [], lineno=43, col_offset=12)], [], lineno=41, col_offset=8)], lineno=38, col_offset=4), Return(Tuple([Name('ok', Load(), lineno=45, col_offset=11), Name('newversion', Load(), lineno=45, col_offset=15), Name('fp', Load(), lineno=45, col_offset=27)], Load(), lineno=45, col_offset=11), lineno=45, col_offset=4)], [], lineno=35, col_offset=0), FunctionDef('_check1version', arguments([Name('package', Param(), lineno=47, col_offset=19), Name('url', Param(), lineno=47, col_offset=28), Name('version', Param(), lineno=47, col_offset=33), Name('verbose', Param(), lineno=47, col_offset=42)], None, None, [Num(0, lineno=47, col_offset=50)]), [If(Compare(Name('verbose', Load(), lineno=48, col_offset=7), [GtE()], [Name('VERBOSE_EACHFILE', Load(), lineno=48, col_offset=18)], lineno=48, col_offset=7), [Print(None, [BinOp(Str('  Checking %s', lineno=49, col_offset=14), Mod(), Name('url', Load(), lineno=49, col_offset=30), lineno=49, col_offset=14)], True, lineno=49, col_offset=8)], [], lineno=48, col_offset=4), TryExcept([Assign([Name('fp', Store(), lineno=51, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=51, col_offset=13), 'urlopen', Load(), lineno=51, col_offset=13), [Name('url', Load(), lineno=51, col_offset=28)], [], None, None, lineno=51, col_offset=13), lineno=51, col_offset=8)], [ExceptHandler(Name('IOError', Load(), lineno=52, col_offset=11), Name('arg', Store(), lineno=52, col_offset=20), [If(Compare(Name('verbose', Load(), lineno=53, col_offset=11), [GtE()], [Name('VERBOSE_EACHFILE', Load(), lineno=53, col_offset=22)], lineno=53, col_offset=11), [Print(None, [Str('    Cannot open:', lineno=54, col_offset=18), Name('arg', Load(), lineno=54, col_offset=38)], True, lineno=54, col_offset=12)], [], lineno=53, col_offset=8), Return(Tuple([Num(-1, lineno=55, col_offset=16), Name('None', Load(), lineno=55, col_offset=19), Name('None', Load(), lineno=55, col_offset=25)], Load(), lineno=55, col_offset=15), lineno=55, col_offset=8)], lineno=52, col_offset=4)], [], lineno=50, col_offset=4), Assign([Name('msg', Store(), lineno=56, col_offset=4)], Call(Attribute(Name('rfc822', Load(), lineno=56, col_offset=10), 'Message', Load(), lineno=56, col_offset=10), [Name('fp', Load(), lineno=56, col_offset=25)], [keyword('seekable', Num(0, lineno=56, col_offset=38))], None, None, lineno=56, col_offset=10), lineno=56, col_offset=4), Assign([Name('newversion', Store(), lineno=57, col_offset=4)], Call(Attribute(Name('msg', Load(), lineno=57, col_offset=17), 'getheader', Load(), lineno=57, col_offset=17), [Str('current-version', lineno=57, col_offset=31)], [], None, None, lineno=57, col_offset=17), lineno=57, col_offset=4), If(UnaryOp(Not(), Name('newversion', Load(), lineno=58, col_offset=11), lineno=58, col_offset=7), [If(Compare(Name('verbose', Load(), lineno=59, col_offset=11), [GtE()], [Name('VERBOSE_EACHFILE', Load(), lineno=59, col_offset=22)], lineno=59, col_offset=11), [Print(None, [Str('    No "Current-Version:" header in URL or URL not found', lineno=60, col_offset=18)], True, lineno=60, col_offset=12)], [], lineno=59, col_offset=8), Return(Tuple([Num(-1, lineno=61, col_offset=16), Name('None', Load(), lineno=61, col_offset=19), Name('None', Load(), lineno=61, col_offset=25)], Load(), lineno=61, col_offset=15), lineno=61, col_offset=8)], [], lineno=58, col_offset=4), Assign([Name('version', Store(), lineno=62, col_offset=4)], Call(Attribute(Call(Attribute(Name('version', Load(), lineno=62, col_offset=14), 'lower', Load(), lineno=62, col_offset=14), [], [], None, None, lineno=62, col_offset=14), 'strip', Load(), lineno=62, col_offset=14), [], [], None, None, lineno=62, col_offset=14), lineno=62, col_offset=4), Assign([Name('newversion', Store(), lineno=63, col_offset=4)], Call(Attribute(Call(Attribute(Name('newversion', Load(), lineno=63, col_offset=17), 'lower', Load(), lineno=63, col_offset=17), [], [], None, None, lineno=63, col_offset=17), 'strip', Load(), lineno=63, col_offset=17), [], [], None, None, lineno=63, col_offset=17), lineno=63, col_offset=4), If(Compare(Name('version', Load(), lineno=64, col_offset=7), [Eq()], [Name('newversion', Load(), lineno=64, col_offset=18)], lineno=64, col_offset=7), [If(Compare(Name('verbose', Load(), lineno=65, col_offset=11), [GtE()], [Name('VERBOSE_EACHFILE', Load(), lineno=65, col_offset=22)], lineno=65, col_offset=11), [Print(None, [BinOp(Str('    Version identical (%s)', lineno=66, col_offset=18), Mod(), Name('newversion', Load(), lineno=66, col_offset=47), lineno=66, col_offset=18)], True, lineno=66, col_offset=12)], [], lineno=65, col_offset=8), Return(Tuple([Num(1, lineno=67, col_offset=15), Name('version', Load(), lineno=67, col_offset=18), Name('fp', Load(), lineno=67, col_offset=27)], Load(), lineno=67, col_offset=15), lineno=67, col_offset=8)], [If(Compare(Name('verbose', Load(), lineno=69, col_offset=11), [GtE()], [Name('VERBOSE_EACHFILE', Load(), lineno=69, col_offset=22)], lineno=69, col_offset=11), [Print(None, [BinOp(Str('    Versions different (installed: %s, new: %s)', lineno=70, col_offset=18), Mod(), Tuple([Name('version', Load(), lineno=71, col_offset=25), Name('newversion', Load(), lineno=71, col_offset=34)], Load(), lineno=71, col_offset=25), lineno=70, col_offset=18)], True, lineno=70, col_offset=12)], [], lineno=69, col_offset=8), Return(Tuple([Num(0, lineno=72, col_offset=15), Name('newversion', Load(), lineno=72, col_offset=18), Name('fp', Load(), lineno=72, col_offset=30)], Load(), lineno=72, col_offset=15), lineno=72, col_offset=8)], lineno=64, col_offset=4)], [], lineno=47, col_offset=0), FunctionDef('_test', arguments([], None, None, []), [Print(None, [Str('--- TEST VERBOSE=1', lineno=76, col_offset=10)], True, lineno=76, col_offset=4), Print(None, [Str('--- Testing existing and identical version file', lineno=77, col_offset=10)], True, lineno=77, col_offset=4), Expr(Call(Name('versioncheck', Load(), lineno=78, col_offset=4), [Str('VersionTestPackage', lineno=78, col_offset=17), BinOp(Name('_TESTDIR', Load(), lineno=78, col_offset=39), Add(), Str('Version10.txt', lineno=78, col_offset=48), lineno=78, col_offset=39), Str('1.0', lineno=78, col_offset=65)], [keyword('verbose', Num(1, lineno=78, col_offset=80))], None, None, lineno=78, col_offset=4), lineno=78, col_offset=4), Print(None, [Str('--- Testing existing package with new version', lineno=79, col_offset=10)], True, lineno=79, col_offset=4), Expr(Call(Name('versioncheck', Load(), lineno=80, col_offset=4), [Str('VersionTestPackage', lineno=80, col_offset=17), BinOp(Name('_TESTDIR', Load(), lineno=80, col_offset=39), Add(), Str('Version11.txt', lineno=80, col_offset=48), lineno=80, col_offset=39), Str('1.0', lineno=80, col_offset=65)], [keyword('verbose', Num(1, lineno=80, col_offset=80))], None, None, lineno=80, col_offset=4), lineno=80, col_offset=4), Print(None, [Str('--- Testing package with non-existing version file', lineno=81, col_offset=10)], True, lineno=81, col_offset=4), Expr(Call(Name('versioncheck', Load(), lineno=82, col_offset=4), [Str('VersionTestPackage', lineno=82, col_offset=17), BinOp(Name('_TESTDIR', Load(), lineno=82, col_offset=39), Add(), Str('nonexistent.txt', lineno=82, col_offset=48), lineno=82, col_offset=39), Str('1.0', lineno=82, col_offset=67)], [keyword('verbose', Num(1, lineno=82, col_offset=82))], None, None, lineno=82, col_offset=4), lineno=82, col_offset=4), Print(None, [Str('--- Test package with 2 locations, first non-existing second ok', lineno=83, col_offset=10)], True, lineno=83, col_offset=4), Assign([Name('versfiles', Store(), lineno=84, col_offset=4)], List([BinOp(Name('_TESTDIR', Load(), lineno=84, col_offset=17), Add(), Str('nonexistent.txt', lineno=84, col_offset=26), lineno=84, col_offset=17), BinOp(Name('_TESTDIR', Load(), lineno=84, col_offset=45), Add(), Str('Version10.txt', lineno=84, col_offset=54), lineno=84, col_offset=45)], Load(), lineno=84, col_offset=16), lineno=84, col_offset=4), Expr(Call(Name('versioncheck', Load(), lineno=85, col_offset=4), [Str('VersionTestPackage', lineno=85, col_offset=17), Name('versfiles', Load(), lineno=85, col_offset=39), Str('1.0', lineno=85, col_offset=50)], [keyword('verbose', Num(1, lineno=85, col_offset=65))], None, None, lineno=85, col_offset=4), lineno=85, col_offset=4), Print(None, [Str('--- TEST VERBOSE=2', lineno=86, col_offset=10)], True, lineno=86, col_offset=4), Print(None, [Str('--- Testing existing and identical version file', lineno=87, col_offset=10)], True, lineno=87, col_offset=4), Expr(Call(Name('versioncheck', Load(), lineno=88, col_offset=4), [Str('VersionTestPackage', lineno=88, col_offset=17), BinOp(Name('_TESTDIR', Load(), lineno=88, col_offset=39), Add(), Str('Version10.txt', lineno=88, col_offset=48), lineno=88, col_offset=39), Str('1.0', lineno=88, col_offset=65)], [keyword('verbose', Num(2, lineno=88, col_offset=80))], None, None, lineno=88, col_offset=4), lineno=88, col_offset=4), Print(None, [Str('--- Testing existing package with new version', lineno=89, col_offset=10)], True, lineno=89, col_offset=4), Expr(Call(Name('versioncheck', Load(), lineno=90, col_offset=4), [Str('VersionTestPackage', lineno=90, col_offset=17), BinOp(Name('_TESTDIR', Load(), lineno=90, col_offset=39), Add(), Str('Version11.txt', lineno=90, col_offset=48), lineno=90, col_offset=39), Str('1.0', lineno=90, col_offset=65)], [keyword('verbose', Num(2, lineno=90, col_offset=80))], None, None, lineno=90, col_offset=4), lineno=90, col_offset=4), Print(None, [Str('--- Testing package with non-existing version file', lineno=91, col_offset=10)], True, lineno=91, col_offset=4), Expr(Call(Name('versioncheck', Load(), lineno=92, col_offset=4), [Str('VersionTestPackage', lineno=92, col_offset=17), BinOp(Name('_TESTDIR', Load(), lineno=92, col_offset=39), Add(), Str('nonexistent.txt', lineno=92, col_offset=48), lineno=92, col_offset=39), Str('1.0', lineno=92, col_offset=67)], [keyword('verbose', Num(2, lineno=92, col_offset=82))], None, None, lineno=92, col_offset=4), lineno=92, col_offset=4), Print(None, [Str('--- Test package with 2 locations, first non-existing second ok', lineno=93, col_offset=10)], True, lineno=93, col_offset=4), Assign([Name('versfiles', Store(), lineno=94, col_offset=4)], List([BinOp(Name('_TESTDIR', Load(), lineno=94, col_offset=17), Add(), Str('nonexistent.txt', lineno=94, col_offset=26), lineno=94, col_offset=17), BinOp(Name('_TESTDIR', Load(), lineno=94, col_offset=45), Add(), Str('Version10.txt', lineno=94, col_offset=54), lineno=94, col_offset=45)], Load(), lineno=94, col_offset=16), lineno=94, col_offset=4), Expr(Call(Name('versioncheck', Load(), lineno=95, col_offset=4), [Str('VersionTestPackage', lineno=95, col_offset=17), Name('versfiles', Load(), lineno=95, col_offset=39), Str('1.0', lineno=95, col_offset=50)], [keyword('verbose', Num(2, lineno=95, col_offset=65))], None, None, lineno=95, col_offset=4), lineno=95, col_offset=4)], [], lineno=75, col_offset=0), If(Compare(Name('__name__', Load(), lineno=97, col_offset=3), [Eq()], [Str('__main__', lineno=97, col_offset=15)], lineno=97, col_offset=3), [Expr(Call(Name('_test', Load(), lineno=98, col_offset=4), [], [], None, None, lineno=98, col_offset=4), lineno=98, col_offset=4)], [], lineno=97, col_offset=0)])
