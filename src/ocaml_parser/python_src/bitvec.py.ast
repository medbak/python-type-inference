Module([Import([alias('sys', None)], lineno=7, col_offset=0), Assign([Name('rprt', Store(), lineno=7, col_offset=12)], Attribute(Attribute(Name('sys', Load(), lineno=7, col_offset=19), 'stderr', Load(), lineno=7, col_offset=19), 'write', Load(), lineno=7, col_offset=19), lineno=7, col_offset=12), ClassDef('error', [Name('Exception', Load(), lineno=9, col_offset=12)], [Pass( lineno=10, col_offset=4)], [], lineno=9, col_offset=0), FunctionDef('_check_value', arguments([Name('value', Param(), lineno=13, col_offset=17)], None, None, []), [If(BoolOp(Or(), [Compare(Call(Name('type', Load(), lineno=14, col_offset=7), [Name('value', Load(), lineno=14, col_offset=12)], [], None, None, lineno=14, col_offset=7), [NotEq()], [Call(Name('type', Load(), lineno=14, col_offset=22), [Num(0, lineno=14, col_offset=27)], [], None, None, lineno=14, col_offset=22)], lineno=14, col_offset=7), UnaryOp(Not(), Compare(Num(0, lineno=14, col_offset=37), [LtE(), Lt()], [Name('value', Load(), lineno=14, col_offset=42), Num(2, lineno=14, col_offset=50)], lineno=14, col_offset=37), lineno=14, col_offset=33)], lineno=14, col_offset=7), [Raise(Name('error', Load(), lineno=15, col_offset=14), Str('bitvec() items must have int value 0 or 1', lineno=15, col_offset=21), None, lineno=15, col_offset=8)], [], lineno=14, col_offset=4)], [], lineno=13, col_offset=0), Import([alias('math', None)], lineno=18, col_offset=0), FunctionDef('_compute_len', arguments([Name('param', Param(), lineno=20, col_offset=17)], None, None, []), [Assign([Tuple([Name('mant', Store(), lineno=21, col_offset=4), Name('l', Store(), lineno=21, col_offset=10)], Store(), lineno=21, col_offset=4)], Call(Attribute(Name('math', Load(), lineno=21, col_offset=14), 'frexp', Load(), lineno=21, col_offset=14), [Call(Name('float', Load(), lineno=21, col_offset=25), [Name('param', Load(), lineno=21, col_offset=31)], [], None, None, lineno=21, col_offset=25)], [], None, None, lineno=21, col_offset=14), lineno=21, col_offset=4), Assign([Name('bitmask', Store(), lineno=22, col_offset=4)], BinOp(Num(1L, lineno=22, col_offset=14), LShift(), Name('l', Load(), lineno=22, col_offset=20), lineno=22, col_offset=14), lineno=22, col_offset=4), If(Compare(Name('bitmask', Load(), lineno=23, col_offset=7), [LtE()], [Name('param', Load(), lineno=23, col_offset=18)], lineno=23, col_offset=7), [Raise(Call(Name('RuntimeError', Load(), lineno=24, col_offset=14), [BinOp(Str('(param, l) = %r', lineno=24, col_offset=27), Mod(), Tuple([Tuple([Name('param', Load(), lineno=24, col_offset=49), Name('l', Load(), lineno=24, col_offset=56)], Load(), lineno=24, col_offset=49)], Load(), lineno=24, col_offset=48), lineno=24, col_offset=27)], [], None, None, lineno=24, col_offset=14), None, None, lineno=24, col_offset=8)], [], lineno=23, col_offset=4), While(Name('l', Load(), lineno=25, col_offset=10), [Assign([Name('bitmask', Store(), lineno=26, col_offset=8)], BinOp(Name('bitmask', Load(), lineno=26, col_offset=18), RShift(), Num(1, lineno=26, col_offset=29), lineno=26, col_offset=18), lineno=26, col_offset=8), If(BinOp(Name('param', Load(), lineno=27, col_offset=11), BitAnd(), Name('bitmask', Load(), lineno=27, col_offset=19), lineno=27, col_offset=11), [Break( lineno=28, col_offset=12)], [], lineno=27, col_offset=8), Assign([Name('l', Store(), lineno=29, col_offset=8)], BinOp(Name('l', Load(), lineno=29, col_offset=12), Sub(), Num(1, lineno=29, col_offset=16), lineno=29, col_offset=12), lineno=29, col_offset=8)], [], lineno=25, col_offset=4), Return(Name('l', Load(), lineno=30, col_offset=11), lineno=30, col_offset=4)], [], lineno=20, col_offset=0), FunctionDef('_check_key', arguments([Name('len', Param(), lineno=33, col_offset=15), Name('key', Param(), lineno=33, col_offset=20)], None, None, []), [If(Compare(Call(Name('type', Load(), lineno=34, col_offset=7), [Name('key', Load(), lineno=34, col_offset=12)], [], None, None, lineno=34, col_offset=7), [NotEq()], [Call(Name('type', Load(), lineno=34, col_offset=20), [Num(0, lineno=34, col_offset=25)], [], None, None, lineno=34, col_offset=20)], lineno=34, col_offset=7), [Raise(Name('TypeError', Load(), lineno=35, col_offset=14), Str('sequence subscript not int', lineno=35, col_offset=25), None, lineno=35, col_offset=8)], [], lineno=34, col_offset=4), If(Compare(Name('key', Load(), lineno=36, col_offset=7), [Lt()], [Num(0, lineno=36, col_offset=13)], lineno=36, col_offset=7), [Assign([Name('key', Store(), lineno=37, col_offset=8)], BinOp(Name('key', Load(), lineno=37, col_offset=14), Add(), Name('len', Load(), lineno=37, col_offset=20), lineno=37, col_offset=14), lineno=37, col_offset=8)], [], lineno=36, col_offset=4), If(UnaryOp(Not(), Compare(Num(0, lineno=38, col_offset=11), [LtE(), Lt()], [Name('key', Load(), lineno=38, col_offset=16), Name('len', Load(), lineno=38, col_offset=22)], lineno=38, col_offset=11), lineno=38, col_offset=7), [Raise(Name('IndexError', Load(), lineno=39, col_offset=14), Str('list index out of range', lineno=39, col_offset=26), None, lineno=39, col_offset=8)], [], lineno=38, col_offset=4), Return(Name('key', Load(), lineno=40, col_offset=11), lineno=40, col_offset=4)], [], lineno=33, col_offset=0), FunctionDef('_check_slice', arguments([Name('len', Param(), lineno=42, col_offset=17), Name('i', Param(), lineno=42, col_offset=22), Name('j', Param(), lineno=42, col_offset=25)], None, None, []), [Assign([Tuple([Name('i', Store(), lineno=44, col_offset=4), Name('j', Store(), lineno=44, col_offset=7)], Store(), lineno=44, col_offset=4)], Tuple([Call(Name('max', Load(), lineno=44, col_offset=11), [Name('i', Load(), lineno=44, col_offset=15), Num(0, lineno=44, col_offset=18)], [], None, None, lineno=44, col_offset=11), Call(Name('min', Load(), lineno=44, col_offset=22), [Name('len', Load(), lineno=44, col_offset=26), Name('j', Load(), lineno=44, col_offset=31)], [], None, None, lineno=44, col_offset=22)], Load(), lineno=44, col_offset=11), lineno=44, col_offset=4), If(Compare(Name('i', Load(), lineno=45, col_offset=7), [Gt()], [Name('j', Load(), lineno=45, col_offset=11)], lineno=45, col_offset=7), [Assign([Name('i', Store(), lineno=46, col_offset=8)], Name('j', Load(), lineno=46, col_offset=12), lineno=46, col_offset=8)], [], lineno=45, col_offset=4), Return(Tuple([Name('i', Load(), lineno=47, col_offset=11), Name('j', Load(), lineno=47, col_offset=14)], Load(), lineno=47, col_offset=11), lineno=47, col_offset=4)], [], lineno=42, col_offset=0), ClassDef('BitVec', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=52, col_offset=17)], 'params', None, []), [Assign([Attribute(Name('self', Load(), lineno=53, col_offset=8), '_data', Store(), lineno=53, col_offset=8)], Num(0L, lineno=53, col_offset=21), lineno=53, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=54, col_offset=8), '_len', Store(), lineno=54, col_offset=8)], Num(0, lineno=54, col_offset=20), lineno=54, col_offset=8), If(UnaryOp(Not(), Call(Name('len', Load(), lineno=55, col_offset=15), [Name('params', Load(), lineno=55, col_offset=19)], [], None, None, lineno=55, col_offset=15), lineno=55, col_offset=11), [Pass( lineno=56, col_offset=12)], [If(Compare(Call(Name('len', Load(), lineno=57, col_offset=13), [Name('params', Load(), lineno=57, col_offset=17)], [], None, None, lineno=57, col_offset=13), [Eq()], [Num(1, lineno=57, col_offset=28)], lineno=57, col_offset=13), [Assign([Tuple([Name('param', Store(), lineno=58, col_offset=12)], Store(), lineno=58, col_offset=12)], Name('params', Load(), lineno=58, col_offset=21), lineno=58, col_offset=12), If(Compare(Call(Name('type', Load(), lineno=59, col_offset=15), [Name('param', Load(), lineno=59, col_offset=20)], [], None, None, lineno=59, col_offset=15), [Eq()], [Call(Name('type', Load(), lineno=59, col_offset=30), [List([], Load(), lineno=59, col_offset=35)], [], None, None, lineno=59, col_offset=30)], lineno=59, col_offset=15), [Assign([Name('value', Store(), lineno=60, col_offset=16)], Num(0L, lineno=60, col_offset=24), lineno=60, col_offset=16), Assign([Name('bit_mask', Store(), lineno=61, col_offset=16)], Num(1L, lineno=61, col_offset=27), lineno=61, col_offset=16), For(Name('item', Store(), lineno=62, col_offset=20), Name('param', Load(), lineno=62, col_offset=28), [If(Name('item', Load(), lineno=65, col_offset=23), [Assign([Name('value', Store(), lineno=66, col_offset=24)], BinOp(Name('value', Load(), lineno=66, col_offset=32), BitOr(), Name('bit_mask', Load(), lineno=66, col_offset=40), lineno=66, col_offset=32), lineno=66, col_offset=24)], [], lineno=65, col_offset=20), Assign([Name('bit_mask', Store(), lineno=67, col_offset=20)], BinOp(Name('bit_mask', Load(), lineno=67, col_offset=31), LShift(), Num(1, lineno=67, col_offset=43), lineno=67, col_offset=31), lineno=67, col_offset=20)], [], lineno=62, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=68, col_offset=16), '_data', Store(), lineno=68, col_offset=16)], Name('value', Load(), lineno=68, col_offset=29), lineno=68, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=69, col_offset=16), '_len', Store(), lineno=69, col_offset=16)], Call(Name('len', Load(), lineno=69, col_offset=28), [Name('param', Load(), lineno=69, col_offset=32)], [], None, None, lineno=69, col_offset=28), lineno=69, col_offset=16)], [If(Compare(Call(Name('type', Load(), lineno=70, col_offset=17), [Name('param', Load(), lineno=70, col_offset=22)], [], None, None, lineno=70, col_offset=17), [Eq()], [Call(Name('type', Load(), lineno=70, col_offset=32), [Num(0L, lineno=70, col_offset=37)], [], None, None, lineno=70, col_offset=32)], lineno=70, col_offset=17), [If(Compare(Name('param', Load(), lineno=71, col_offset=19), [Lt()], [Num(0, lineno=71, col_offset=27)], lineno=71, col_offset=19), [Raise(Name('error', Load(), lineno=72, col_offset=26), Str("bitvec() can't handle negative longs", lineno=72, col_offset=33), None, lineno=72, col_offset=20)], [], lineno=71, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=73, col_offset=16), '_data', Store(), lineno=73, col_offset=16)], Name('param', Load(), lineno=73, col_offset=29), lineno=73, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=74, col_offset=16), '_len', Store(), lineno=74, col_offset=16)], Call(Name('_compute_len', Load(), lineno=74, col_offset=28), [Name('param', Load(), lineno=74, col_offset=41)], [], None, None, lineno=74, col_offset=28), lineno=74, col_offset=16)], [Raise(Name('error', Load(), lineno=76, col_offset=22), Str('bitvec() requires array or long parameter', lineno=76, col_offset=29), None, lineno=76, col_offset=16)], lineno=70, col_offset=17)], lineno=59, col_offset=12)], [If(Compare(Call(Name('len', Load(), lineno=77, col_offset=13), [Name('params', Load(), lineno=77, col_offset=17)], [], None, None, lineno=77, col_offset=13), [Eq()], [Num(2, lineno=77, col_offset=28)], lineno=77, col_offset=13), [Assign([Tuple([Name('param', Store(), lineno=78, col_offset=12), Name('length', Store(), lineno=78, col_offset=19)], Store(), lineno=78, col_offset=12)], Name('params', Load(), lineno=78, col_offset=28), lineno=78, col_offset=12), If(Compare(Call(Name('type', Load(), lineno=79, col_offset=15), [Name('param', Load(), lineno=79, col_offset=20)], [], None, None, lineno=79, col_offset=15), [Eq()], [Call(Name('type', Load(), lineno=79, col_offset=30), [Num(0L, lineno=79, col_offset=35)], [], None, None, lineno=79, col_offset=30)], lineno=79, col_offset=15), [If(Compare(Name('param', Load(), lineno=80, col_offset=19), [Lt()], [Num(0, lineno=80, col_offset=27)], lineno=80, col_offset=19), [Raise(Name('error', Load(), lineno=81, col_offset=26), Str("can't handle negative longs", lineno=82, col_offset=22), None, lineno=81, col_offset=20)], [], lineno=80, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=83, col_offset=16), '_data', Store(), lineno=83, col_offset=16)], Name('param', Load(), lineno=83, col_offset=29), lineno=83, col_offset=16), If(Compare(Call(Name('type', Load(), lineno=84, col_offset=19), [Name('length', Load(), lineno=84, col_offset=24)], [], None, None, lineno=84, col_offset=19), [NotEq()], [Call(Name('type', Load(), lineno=84, col_offset=35), [Num(0, lineno=84, col_offset=40)], [], None, None, lineno=84, col_offset=35)], lineno=84, col_offset=19), [Raise(Name('error', Load(), lineno=85, col_offset=26), Str("bitvec()'s 2nd parameter must be int", lineno=85, col_offset=33), None, lineno=85, col_offset=20)], [], lineno=84, col_offset=16), Assign([Name('computed_length', Store(), lineno=86, col_offset=16)], Call(Name('_compute_len', Load(), lineno=86, col_offset=34), [Name('param', Load(), lineno=86, col_offset=47)], [], None, None, lineno=86, col_offset=34), lineno=86, col_offset=16), If(Compare(Name('computed_length', Load(), lineno=87, col_offset=19), [Gt()], [Name('length', Load(), lineno=87, col_offset=37)], lineno=87, col_offset=19), [Print(None, [Str('warning: bitvec() value is longer than the length indicates, truncating value', lineno=88, col_offset=26)], True, lineno=88, col_offset=20), Assign([Attribute(Name('self', Load(), lineno=89, col_offset=20), '_data', Store(), lineno=89, col_offset=20)], BinOp(Attribute(Name('self', Load(), lineno=89, col_offset=33), '_data', Load(), lineno=89, col_offset=33), BitAnd(), BinOp(BinOp(Num(1L, lineno=90, col_offset=32), LShift(), Name('length', Load(), lineno=90, col_offset=38), lineno=90, col_offset=32), Sub(), Num(1, lineno=90, col_offset=48), lineno=90, col_offset=31), lineno=89, col_offset=33), lineno=89, col_offset=20)], [], lineno=87, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=91, col_offset=16), '_len', Store(), lineno=91, col_offset=16)], Name('length', Load(), lineno=91, col_offset=28), lineno=91, col_offset=16)], [Raise(Name('error', Load(), lineno=93, col_offset=22), Str('bitvec() requires array or long parameter', lineno=93, col_offset=29), None, lineno=93, col_offset=16)], lineno=79, col_offset=12)], [Raise(Name('error', Load(), lineno=95, col_offset=18), Str('bitvec() requires 0 -- 2 parameter(s)', lineno=95, col_offset=25), None, lineno=95, col_offset=12)], lineno=77, col_offset=13)], lineno=57, col_offset=13)], lineno=55, col_offset=8)], [], lineno=52, col_offset=4), FunctionDef('append', arguments([Name('self', Param(), lineno=98, col_offset=15), Name('item', Param(), lineno=98, col_offset=21)], None, None, []), [Assign([Subscript(Name('self', Load(), lineno=101, col_offset=8), Slice(Attribute(Name('self', Load(), lineno=101, col_offset=13), '_len', Load(), lineno=101, col_offset=13), Attribute(Name('self', Load(), lineno=101, col_offset=23), '_len', Load(), lineno=101, col_offset=23), None), Store(), lineno=101, col_offset=8)], Call(Name('BitVec', Load(), lineno=102, col_offset=18), [Call(Name('long', Load(), lineno=102, col_offset=25), [UnaryOp(Not(), UnaryOp(Not(), Name('item', Load(), lineno=102, col_offset=38), lineno=102, col_offset=34), lineno=102, col_offset=30)], [], None, None, lineno=102, col_offset=25), Num(1, lineno=102, col_offset=45)], [], None, None, lineno=102, col_offset=18), lineno=101, col_offset=8)], [], lineno=98, col_offset=4), FunctionDef('count', arguments([Name('self', Param(), lineno=105, col_offset=14), Name('value', Param(), lineno=105, col_offset=20)], None, None, []), [If(Name('value', Load(), lineno=107, col_offset=11), [Assign([Name('data', Store(), lineno=108, col_offset=12)], Attribute(Name('self', Load(), lineno=108, col_offset=19), '_data', Load(), lineno=108, col_offset=19), lineno=108, col_offset=12)], [Assign([Name('data', Store(), lineno=110, col_offset=12)], Attribute(UnaryOp(Invert(), Name('self', Load(), lineno=110, col_offset=21), lineno=110, col_offset=20), '_data', Load(), lineno=110, col_offset=20), lineno=110, col_offset=12)], lineno=107, col_offset=8), Assign([Name('count', Store(), lineno=111, col_offset=8)], Num(0, lineno=111, col_offset=16), lineno=111, col_offset=8), While(Name('data', Load(), lineno=112, col_offset=14), [Assign([Tuple([Name('data', Store(), lineno=113, col_offset=12), Name('count', Store(), lineno=113, col_offset=18)], Store(), lineno=113, col_offset=12)], Tuple([BinOp(Name('data', Load(), lineno=113, col_offset=26), RShift(), Num(1, lineno=113, col_offset=34), lineno=113, col_offset=26), BinOp(Name('count', Load(), lineno=113, col_offset=37), Add(), Compare(BinOp(Name('data', Load(), lineno=113, col_offset=46), BitAnd(), Num(1, lineno=113, col_offset=53), lineno=113, col_offset=46), [NotEq()], [Num(0, lineno=113, col_offset=58)], lineno=113, col_offset=46), lineno=113, col_offset=37)], Load(), lineno=113, col_offset=26), lineno=113, col_offset=12)], [], lineno=112, col_offset=8), Return(Name('count', Load(), lineno=114, col_offset=15), lineno=114, col_offset=8)], [], lineno=105, col_offset=4), FunctionDef('index', arguments([Name('self', Param(), lineno=117, col_offset=14), Name('value', Param(), lineno=117, col_offset=20)], None, None, []), [If(Name('value', Load(), lineno=119, col_offset=11), [Assign([Name('data', Store(), lineno=120, col_offset=12)], Attribute(Name('self', Load(), lineno=120, col_offset=19), '_data', Load(), lineno=120, col_offset=19), lineno=120, col_offset=12)], [Assign([Name('data', Store(), lineno=122, col_offset=12)], Attribute(UnaryOp(Invert(), Name('self', Load(), lineno=122, col_offset=21), lineno=122, col_offset=20), '_data', Load(), lineno=122, col_offset=20), lineno=122, col_offset=12)], lineno=119, col_offset=8), Assign([Name('index', Store(), lineno=123, col_offset=8)], Num(0, lineno=123, col_offset=16), lineno=123, col_offset=8), If(UnaryOp(Not(), Name('data', Load(), lineno=124, col_offset=15), lineno=124, col_offset=11), [Raise(Name('ValueError', Load(), lineno=125, col_offset=18), Str('list.index(x): x not in list', lineno=125, col_offset=30), None, lineno=125, col_offset=12)], [], lineno=124, col_offset=8), While(UnaryOp(Not(), BinOp(Name('data', Load(), lineno=126, col_offset=19), BitAnd(), Num(1, lineno=126, col_offset=26), lineno=126, col_offset=19), lineno=126, col_offset=14), [Assign([Tuple([Name('data', Store(), lineno=127, col_offset=12), Name('index', Store(), lineno=127, col_offset=18)], Store(), lineno=127, col_offset=12)], Tuple([BinOp(Name('data', Load(), lineno=127, col_offset=26), RShift(), Num(1, lineno=127, col_offset=34), lineno=127, col_offset=26), BinOp(Name('index', Load(), lineno=127, col_offset=37), Add(), Num(1, lineno=127, col_offset=45), lineno=127, col_offset=37)], Load(), lineno=127, col_offset=26), lineno=127, col_offset=12)], [], lineno=126, col_offset=8), Return(Name('index', Load(), lineno=128, col_offset=15), lineno=128, col_offset=8)], [], lineno=117, col_offset=4), FunctionDef('insert', arguments([Name('self', Param(), lineno=131, col_offset=15), Name('index', Param(), lineno=131, col_offset=21), Name('item', Param(), lineno=131, col_offset=28)], None, None, []), [Assign([Subscript(Name('self', Load(), lineno=134, col_offset=8), Slice(Name('index', Load(), lineno=134, col_offset=13), Name('index', Load(), lineno=134, col_offset=19), None), Store(), lineno=134, col_offset=8)], Call(Name('BitVec', Load(), lineno=134, col_offset=28), [Call(Name('long', Load(), lineno=134, col_offset=35), [UnaryOp(Not(), UnaryOp(Not(), Name('item', Load(), lineno=134, col_offset=48), lineno=134, col_offset=44), lineno=134, col_offset=40)], [], None, None, lineno=134, col_offset=35), Num(1, lineno=134, col_offset=55)], [], None, None, lineno=134, col_offset=28), lineno=134, col_offset=8)], [], lineno=131, col_offset=4), FunctionDef('remove', arguments([Name('self', Param(), lineno=137, col_offset=15), Name('value', Param(), lineno=137, col_offset=21)], None, None, []), [Delete([Subscript(Name('self', Load(), lineno=138, col_offset=12), Index(Call(Attribute(Name('self', Load(), lineno=138, col_offset=17), 'index', Load(), lineno=138, col_offset=17), [Name('value', Load(), lineno=138, col_offset=28)], [], None, None, lineno=138, col_offset=17)), Del(), lineno=138, col_offset=12)], lineno=138, col_offset=8)], [], lineno=137, col_offset=4), FunctionDef('reverse', arguments([Name('self', Param(), lineno=141, col_offset=16)], None, None, []), [Assign([Tuple([Name('data', Store(), lineno=144, col_offset=8), Name('result', Store(), lineno=144, col_offset=14)], Store(), lineno=144, col_offset=8)], Tuple([Attribute(Name('self', Load(), lineno=144, col_offset=23), '_data', Load(), lineno=144, col_offset=23), Num(0L, lineno=144, col_offset=35)], Load(), lineno=144, col_offset=23), lineno=144, col_offset=8), For(Name('i', Store(), lineno=145, col_offset=12), Call(Name('range', Load(), lineno=145, col_offset=17), [Attribute(Name('self', Load(), lineno=145, col_offset=23), '_len', Load(), lineno=145, col_offset=23)], [], None, None, lineno=145, col_offset=17), [If(UnaryOp(Not(), Name('data', Load(), lineno=146, col_offset=19), lineno=146, col_offset=15), [Assign([Name('result', Store(), lineno=147, col_offset=16)], BinOp(Name('result', Load(), lineno=147, col_offset=25), LShift(), BinOp(Attribute(Name('self', Load(), lineno=147, col_offset=36), '_len', Load(), lineno=147, col_offset=36), Sub(), Name('i', Load(), lineno=147, col_offset=48), lineno=147, col_offset=36), lineno=147, col_offset=25), lineno=147, col_offset=16), Break( lineno=148, col_offset=16)], [], lineno=146, col_offset=12), Assign([Tuple([Name('result', Store(), lineno=149, col_offset=12), Name('data', Store(), lineno=149, col_offset=20)], Store(), lineno=149, col_offset=12)], Tuple([BinOp(BinOp(Name('result', Load(), lineno=149, col_offset=28), LShift(), Num(1, lineno=149, col_offset=38), lineno=149, col_offset=28), BitOr(), BinOp(Name('data', Load(), lineno=149, col_offset=44), BitAnd(), Num(1, lineno=149, col_offset=51), lineno=149, col_offset=44), lineno=149, col_offset=27), BinOp(Name('data', Load(), lineno=149, col_offset=55), RShift(), Num(1, lineno=149, col_offset=63), lineno=149, col_offset=55)], Load(), lineno=149, col_offset=27), lineno=149, col_offset=12)], [], lineno=145, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=150, col_offset=8), '_data', Store(), lineno=150, col_offset=8)], Name('result', Load(), lineno=150, col_offset=21), lineno=150, col_offset=8)], [], lineno=141, col_offset=4), FunctionDef('sort', arguments([Name('self', Param(), lineno=153, col_offset=13)], None, None, []), [Assign([Name('c', Store(), lineno=154, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=154, col_offset=12), 'count', Load(), lineno=154, col_offset=12), [Num(1, lineno=154, col_offset=23)], [], None, None, lineno=154, col_offset=12), lineno=154, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=155, col_offset=8), '_data', Store(), lineno=155, col_offset=8)], BinOp(BinOp(BinOp(Num(1L, lineno=155, col_offset=23), LShift(), Name('c', Load(), lineno=155, col_offset=29), lineno=155, col_offset=23), Sub(), Num(1, lineno=155, col_offset=34), lineno=155, col_offset=22), LShift(), BinOp(Attribute(Name('self', Load(), lineno=155, col_offset=41), '_len', Load(), lineno=155, col_offset=41), Sub(), Name('c', Load(), lineno=155, col_offset=53), lineno=155, col_offset=41), lineno=155, col_offset=21), lineno=155, col_offset=8)], [], lineno=153, col_offset=4), FunctionDef('copy', arguments([Name('self', Param(), lineno=158, col_offset=13)], None, None, []), [Return(Call(Name('BitVec', Load(), lineno=159, col_offset=15), [Attribute(Name('self', Load(), lineno=159, col_offset=22), '_data', Load(), lineno=159, col_offset=22), Attribute(Name('self', Load(), lineno=159, col_offset=34), '_len', Load(), lineno=159, col_offset=34)], [], None, None, lineno=159, col_offset=15), lineno=159, col_offset=8)], [], lineno=158, col_offset=4), FunctionDef('seq', arguments([Name('self', Param(), lineno=162, col_offset=12)], None, None, []), [Assign([Name('result', Store(), lineno=163, col_offset=8)], List([], Load(), lineno=163, col_offset=17), lineno=163, col_offset=8), For(Name('i', Store(), lineno=164, col_offset=12), Name('self', Load(), lineno=164, col_offset=17), [Expr(Call(Attribute(Name('result', Load(), lineno=165, col_offset=12), 'append', Load(), lineno=165, col_offset=12), [Name('i', Load(), lineno=165, col_offset=26)], [], None, None, lineno=165, col_offset=12), lineno=165, col_offset=12)], [], lineno=164, col_offset=8), Return(Name('result', Load(), lineno=166, col_offset=15), lineno=166, col_offset=8)], [], lineno=162, col_offset=4), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=169, col_offset=17)], None, None, []), [Return(BinOp(Str('bitvec(%r, %r)', lineno=171, col_offset=15), Mod(), Tuple([Attribute(Name('self', Load(), lineno=171, col_offset=35), '_data', Load(), lineno=171, col_offset=35), Attribute(Name('self', Load(), lineno=171, col_offset=47), '_len', Load(), lineno=171, col_offset=47)], Load(), lineno=171, col_offset=35), lineno=171, col_offset=15), lineno=171, col_offset=8)], [], lineno=169, col_offset=4), FunctionDef('__cmp__', arguments([Name('self', Param(), lineno=173, col_offset=16), Name('other', Param(), lineno=173, col_offset=22)], 'rest', None, []), [If(Compare(Call(Name('type', Load(), lineno=175, col_offset=11), [Name('other', Load(), lineno=175, col_offset=16)], [], None, None, lineno=175, col_offset=11), [NotEq()], [Call(Name('type', Load(), lineno=175, col_offset=26), [Name('self', Load(), lineno=175, col_offset=31)], [], None, None, lineno=175, col_offset=26)], lineno=175, col_offset=11), [Assign([Name('other', Store(), lineno=176, col_offset=12)], Call(Name('apply', Load(), lineno=176, col_offset=20), [Name('bitvec', Load(), lineno=176, col_offset=26), BinOp(Tuple([Name('other', Load(), lineno=176, col_offset=35)], Load(), lineno=176, col_offset=35), Add(), Name('rest', Load(), lineno=176, col_offset=46), lineno=176, col_offset=34)], [], None, None, lineno=176, col_offset=20), lineno=176, col_offset=12)], [], lineno=175, col_offset=8), Assign([Name('length', Store(), lineno=178, col_offset=8)], Attribute(Name('self', Load(), lineno=178, col_offset=17), '_len', Load(), lineno=178, col_offset=17), lineno=178, col_offset=8), If(BoolOp(Or(), [Compare(Name('length', Load(), lineno=179, col_offset=11), [Eq()], [Num(0, lineno=179, col_offset=21)], lineno=179, col_offset=11), Compare(Attribute(Name('other', Load(), lineno=179, col_offset=26), '_len', Load(), lineno=179, col_offset=26), [Eq()], [Num(0, lineno=179, col_offset=40)], lineno=179, col_offset=26)], lineno=179, col_offset=11), [Return(Call(Name('cmp', Load(), lineno=180, col_offset=19), [Name('length', Load(), lineno=180, col_offset=23), Attribute(Name('other', Load(), lineno=180, col_offset=31), '_len', Load(), lineno=180, col_offset=31)], [], None, None, lineno=180, col_offset=19), lineno=180, col_offset=12)], [], lineno=179, col_offset=8), If(Compare(Name('length', Load(), lineno=181, col_offset=11), [NotEq()], [Attribute(Name('other', Load(), lineno=181, col_offset=21), '_len', Load(), lineno=181, col_offset=21)], lineno=181, col_offset=11), [Assign([Name('min_length', Store(), lineno=182, col_offset=12)], Call(Name('min', Load(), lineno=182, col_offset=25), [Name('length', Load(), lineno=182, col_offset=29), Attribute(Name('other', Load(), lineno=182, col_offset=37), '_len', Load(), lineno=182, col_offset=37)], [], None, None, lineno=182, col_offset=25), lineno=182, col_offset=12), Return(BoolOp(Or(), [Call(Name('cmp', Load(), lineno=183, col_offset=19), [Subscript(Name('self', Load(), lineno=183, col_offset=23), Slice(None, Name('min_length', Load(), lineno=183, col_offset=29), None), Load(), lineno=183, col_offset=23), Subscript(Name('other', Load(), lineno=183, col_offset=42), Slice(None, Name('min_length', Load(), lineno=183, col_offset=49), None), Load(), lineno=183, col_offset=42)], [], None, None, lineno=183, col_offset=19), Call(Name('cmp', Load(), lineno=184, col_offset=22), [Subscript(Name('self', Load(), lineno=184, col_offset=26), Slice(Name('min_length', Load(), lineno=184, col_offset=31), None, None), Load(), lineno=184, col_offset=26), Subscript(Name('other', Load(), lineno=184, col_offset=45), Slice(Name('min_length', Load(), lineno=184, col_offset=51), None, None), Load(), lineno=184, col_offset=45)], [], None, None, lineno=184, col_offset=22)], lineno=183, col_offset=19), lineno=183, col_offset=12)], [], lineno=181, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=186, col_offset=11), '_data', Load(), lineno=186, col_offset=11), [Eq()], [Attribute(Name('other', Load(), lineno=186, col_offset=25), '_data', Load(), lineno=186, col_offset=25)], lineno=186, col_offset=11), [Return(Num(0, lineno=187, col_offset=19), lineno=187, col_offset=12)], [], lineno=186, col_offset=8), If(Compare(Name('length', Load(), lineno=188, col_offset=11), [Eq()], [Num(1, lineno=188, col_offset=21)], lineno=188, col_offset=11), [Return(Call(Name('cmp', Load(), lineno=189, col_offset=19), [Subscript(Name('self', Load(), lineno=189, col_offset=23), Index(Num(0, lineno=189, col_offset=28)), Load(), lineno=189, col_offset=23), Subscript(Name('other', Load(), lineno=189, col_offset=32), Index(Num(0, lineno=189, col_offset=38)), Load(), lineno=189, col_offset=32)], [], None, None, lineno=189, col_offset=19), lineno=189, col_offset=12)], [Assign([Name('length', Store(), lineno=191, col_offset=12)], BinOp(Name('length', Load(), lineno=191, col_offset=21), RShift(), Num(1, lineno=191, col_offset=31), lineno=191, col_offset=21), lineno=191, col_offset=12), Return(BoolOp(Or(), [Call(Name('cmp', Load(), lineno=192, col_offset=19), [Subscript(Name('self', Load(), lineno=192, col_offset=23), Slice(None, Name('length', Load(), lineno=192, col_offset=29), None), Load(), lineno=192, col_offset=23), Subscript(Name('other', Load(), lineno=192, col_offset=38), Slice(None, Name('length', Load(), lineno=192, col_offset=45), None), Load(), lineno=192, col_offset=38)], [], None, None, lineno=192, col_offset=19), Call(Name('cmp', Load(), lineno=193, col_offset=22), [Subscript(Name('self', Load(), lineno=193, col_offset=26), Slice(Name('length', Load(), lineno=193, col_offset=31), None, None), Load(), lineno=193, col_offset=26), Subscript(Name('other', Load(), lineno=193, col_offset=41), Slice(Name('length', Load(), lineno=193, col_offset=47), None, None), Load(), lineno=193, col_offset=41)], [], None, None, lineno=193, col_offset=22)], lineno=192, col_offset=19), lineno=192, col_offset=12)], lineno=188, col_offset=8)], [], lineno=173, col_offset=4), FunctionDef('__len__', arguments([Name('self', Param(), lineno=196, col_offset=16)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=198, col_offset=15), '_len', Load(), lineno=198, col_offset=15), lineno=198, col_offset=8)], [], lineno=196, col_offset=4), FunctionDef('__getitem__', arguments([Name('self', Param(), lineno=200, col_offset=20), Name('key', Param(), lineno=200, col_offset=26)], None, None, []), [Assign([Name('key', Store(), lineno=202, col_offset=8)], Call(Name('_check_key', Load(), lineno=202, col_offset=14), [Attribute(Name('self', Load(), lineno=202, col_offset=25), '_len', Load(), lineno=202, col_offset=25), Name('key', Load(), lineno=202, col_offset=36)], [], None, None, lineno=202, col_offset=14), lineno=202, col_offset=8), Return(Compare(BinOp(Attribute(Name('self', Load(), lineno=203, col_offset=15), '_data', Load(), lineno=203, col_offset=15), BitAnd(), BinOp(Num(1L, lineno=203, col_offset=29), LShift(), Name('key', Load(), lineno=203, col_offset=35), lineno=203, col_offset=29), lineno=203, col_offset=15), [NotEq()], [Num(0, lineno=203, col_offset=43)], lineno=203, col_offset=15), lineno=203, col_offset=8)], [], lineno=200, col_offset=4), FunctionDef('__setitem__', arguments([Name('self', Param(), lineno=205, col_offset=20), Name('key', Param(), lineno=205, col_offset=26), Name('value', Param(), lineno=205, col_offset=31)], None, None, []), [Assign([Name('key', Store(), lineno=207, col_offset=8)], Call(Name('_check_key', Load(), lineno=207, col_offset=14), [Attribute(Name('self', Load(), lineno=207, col_offset=25), '_len', Load(), lineno=207, col_offset=25), Name('key', Load(), lineno=207, col_offset=36)], [], None, None, lineno=207, col_offset=14), lineno=207, col_offset=8), If(Name('value', Load(), lineno=209, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=210, col_offset=12), '_data', Store(), lineno=210, col_offset=12)], BinOp(Attribute(Name('self', Load(), lineno=210, col_offset=25), '_data', Load(), lineno=210, col_offset=25), BitOr(), BinOp(Num(1L, lineno=210, col_offset=39), LShift(), Name('key', Load(), lineno=210, col_offset=45), lineno=210, col_offset=39), lineno=210, col_offset=25), lineno=210, col_offset=12)], [Assign([Attribute(Name('self', Load(), lineno=212, col_offset=12), '_data', Store(), lineno=212, col_offset=12)], BinOp(Attribute(Name('self', Load(), lineno=212, col_offset=25), '_data', Load(), lineno=212, col_offset=25), BitAnd(), UnaryOp(Invert(), BinOp(Num(1L, lineno=212, col_offset=40), LShift(), Name('key', Load(), lineno=212, col_offset=46), lineno=212, col_offset=40), lineno=212, col_offset=38), lineno=212, col_offset=25), lineno=212, col_offset=12)], lineno=209, col_offset=8)], [], lineno=205, col_offset=4), FunctionDef('__delitem__', arguments([Name('self', Param(), lineno=214, col_offset=20), Name('key', Param(), lineno=214, col_offset=26)], None, None, []), [Assign([Name('key', Store(), lineno=216, col_offset=8)], Call(Name('_check_key', Load(), lineno=216, col_offset=14), [Attribute(Name('self', Load(), lineno=216, col_offset=25), '_len', Load(), lineno=216, col_offset=25), Name('key', Load(), lineno=216, col_offset=36)], [], None, None, lineno=216, col_offset=14), lineno=216, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=218, col_offset=8), '_data', Store(), lineno=218, col_offset=8)], BinOp(Attribute(Subscript(Name('self', Load(), lineno=218, col_offset=21), Slice(None, Name('key', Load(), lineno=218, col_offset=27), None), Load(), lineno=218, col_offset=21), '_data', Load(), lineno=218, col_offset=21), BitOr(), BinOp(Attribute(Subscript(Name('self', Load(), lineno=218, col_offset=40), Slice(BinOp(Name('key', Load(), lineno=218, col_offset=45), Add(), Num(1, lineno=218, col_offset=49), lineno=218, col_offset=45), None, None), Load(), lineno=218, col_offset=40), '_data', Load(), lineno=218, col_offset=40), RShift(), Name('key', Load(), lineno=218, col_offset=62), lineno=218, col_offset=40), lineno=218, col_offset=21), lineno=218, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=219, col_offset=8), '_len', Store(), lineno=219, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=219, col_offset=20), '_len', Load(), lineno=219, col_offset=20), Sub(), Num(1, lineno=219, col_offset=32), lineno=219, col_offset=20), lineno=219, col_offset=8)], [], lineno=214, col_offset=4), FunctionDef('__getslice__', arguments([Name('self', Param(), lineno=221, col_offset=21), Name('i', Param(), lineno=221, col_offset=27), Name('j', Param(), lineno=221, col_offset=30)], None, None, []), [Assign([Tuple([Name('i', Store(), lineno=223, col_offset=8), Name('j', Store(), lineno=223, col_offset=11)], Store(), lineno=223, col_offset=8)], Call(Name('_check_slice', Load(), lineno=223, col_offset=15), [Attribute(Name('self', Load(), lineno=223, col_offset=28), '_len', Load(), lineno=223, col_offset=28), Name('i', Load(), lineno=223, col_offset=39), Name('j', Load(), lineno=223, col_offset=42)], [], None, None, lineno=223, col_offset=15), lineno=223, col_offset=8), If(Compare(Name('i', Load(), lineno=224, col_offset=11), [GtE()], [Name('j', Load(), lineno=224, col_offset=16)], lineno=224, col_offset=11), [Return(Call(Name('BitVec', Load(), lineno=225, col_offset=19), [Num(0L, lineno=225, col_offset=26), Num(0, lineno=225, col_offset=30)], [], None, None, lineno=225, col_offset=19), lineno=225, col_offset=12)], [], lineno=224, col_offset=8), If(Name('i', Load(), lineno=226, col_offset=11), [Assign([Name('ndata', Store(), lineno=227, col_offset=12)], BinOp(Attribute(Name('self', Load(), lineno=227, col_offset=20), '_data', Load(), lineno=227, col_offset=20), RShift(), Name('i', Load(), lineno=227, col_offset=34), lineno=227, col_offset=20), lineno=227, col_offset=12)], [Assign([Name('ndata', Store(), lineno=229, col_offset=12)], Attribute(Name('self', Load(), lineno=229, col_offset=20), '_data', Load(), lineno=229, col_offset=20), lineno=229, col_offset=12)], lineno=226, col_offset=8), Assign([Name('nlength', Store(), lineno=230, col_offset=8)], BinOp(Name('j', Load(), lineno=230, col_offset=18), Sub(), Name('i', Load(), lineno=230, col_offset=22), lineno=230, col_offset=18), lineno=230, col_offset=8), If(Compare(Name('j', Load(), lineno=231, col_offset=11), [NotEq()], [Attribute(Name('self', Load(), lineno=231, col_offset=16), '_len', Load(), lineno=231, col_offset=16)], lineno=231, col_offset=11), [Assign([Name('ndata', Store(), lineno=234, col_offset=12)], BinOp(Name('ndata', Load(), lineno=234, col_offset=20), BitAnd(), BinOp(BinOp(Num(1L, lineno=234, col_offset=30), LShift(), Name('nlength', Load(), lineno=234, col_offset=36), lineno=234, col_offset=30), Sub(), Num(1, lineno=234, col_offset=47), lineno=234, col_offset=29), lineno=234, col_offset=20), lineno=234, col_offset=12)], [], lineno=231, col_offset=8), Return(Call(Name('BitVec', Load(), lineno=235, col_offset=15), [Name('ndata', Load(), lineno=235, col_offset=22), Name('nlength', Load(), lineno=235, col_offset=29)], [], None, None, lineno=235, col_offset=15), lineno=235, col_offset=8)], [], lineno=221, col_offset=4), FunctionDef('__setslice__', arguments([Name('self', Param(), lineno=237, col_offset=21), Name('i', Param(), lineno=237, col_offset=27), Name('j', Param(), lineno=237, col_offset=30), Name('sequence', Param(), lineno=237, col_offset=33)], 'rest', None, []), [Assign([Tuple([Name('i', Store(), lineno=239, col_offset=8), Name('j', Store(), lineno=239, col_offset=11)], Store(), lineno=239, col_offset=8)], Call(Name('_check_slice', Load(), lineno=239, col_offset=15), [Attribute(Name('self', Load(), lineno=239, col_offset=28), '_len', Load(), lineno=239, col_offset=28), Name('i', Load(), lineno=239, col_offset=39), Name('j', Load(), lineno=239, col_offset=42)], [], None, None, lineno=239, col_offset=15), lineno=239, col_offset=8), If(Compare(Call(Name('type', Load(), lineno=240, col_offset=11), [Name('sequence', Load(), lineno=240, col_offset=16)], [], None, None, lineno=240, col_offset=11), [NotEq()], [Call(Name('type', Load(), lineno=240, col_offset=29), [Name('self', Load(), lineno=240, col_offset=34)], [], None, None, lineno=240, col_offset=29)], lineno=240, col_offset=11), [Assign([Name('sequence', Store(), lineno=241, col_offset=12)], Call(Name('apply', Load(), lineno=241, col_offset=23), [Name('bitvec', Load(), lineno=241, col_offset=29), BinOp(Tuple([Name('sequence', Load(), lineno=241, col_offset=38)], Load(), lineno=241, col_offset=38), Add(), Name('rest', Load(), lineno=241, col_offset=52), lineno=241, col_offset=37)], [], None, None, lineno=241, col_offset=23), lineno=241, col_offset=12)], [], lineno=240, col_offset=8), Assign([Name('ls_part', Store(), lineno=243, col_offset=8)], Subscript(Name('self', Load(), lineno=243, col_offset=18), Slice(None, Name('i', Load(), lineno=243, col_offset=24), None), Load(), lineno=243, col_offset=18), lineno=243, col_offset=8), Assign([Name('ms_part', Store(), lineno=244, col_offset=8)], Subscript(Name('self', Load(), lineno=244, col_offset=18), Slice(Name('j', Load(), lineno=244, col_offset=23), None, None), Load(), lineno=244, col_offset=18), lineno=244, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=245, col_offset=8), '_data', Store(), lineno=245, col_offset=8)], BinOp(Attribute(Name('ls_part', Load(), lineno=245, col_offset=21), '_data', Load(), lineno=245, col_offset=21), BitOr(), BinOp(BinOp(Attribute(Name('sequence', Load(), lineno=246, col_offset=20), '_data', Load(), lineno=246, col_offset=20), BitOr(), BinOp(Attribute(Name('ms_part', Load(), lineno=247, col_offset=19), '_data', Load(), lineno=247, col_offset=19), LShift(), Attribute(Name('sequence', Load(), lineno=247, col_offset=36), '_len', Load(), lineno=247, col_offset=36), lineno=247, col_offset=19), lineno=246, col_offset=20), LShift(), Attribute(Name('ls_part', Load(), lineno=247, col_offset=55), '_len', Load(), lineno=247, col_offset=55), lineno=246, col_offset=19), lineno=245, col_offset=21), lineno=245, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=248, col_offset=8), '_len', Store(), lineno=248, col_offset=8)], BinOp(BinOp(BinOp(Attribute(Name('self', Load(), lineno=248, col_offset=20), '_len', Load(), lineno=248, col_offset=20), Sub(), Name('j', Load(), lineno=248, col_offset=32), lineno=248, col_offset=20), Add(), Name('i', Load(), lineno=248, col_offset=36), lineno=248, col_offset=34), Add(), Attribute(Name('sequence', Load(), lineno=248, col_offset=40), '_len', Load(), lineno=248, col_offset=40), lineno=248, col_offset=38), lineno=248, col_offset=8)], [], lineno=237, col_offset=4), FunctionDef('__delslice__', arguments([Name('self', Param(), lineno=250, col_offset=21), Name('i', Param(), lineno=250, col_offset=27), Name('j', Param(), lineno=250, col_offset=30)], None, None, []), [Assign([Tuple([Name('i', Store(), lineno=252, col_offset=8), Name('j', Store(), lineno=252, col_offset=11)], Store(), lineno=252, col_offset=8)], Call(Name('_check_slice', Load(), lineno=252, col_offset=15), [Attribute(Name('self', Load(), lineno=252, col_offset=28), '_len', Load(), lineno=252, col_offset=28), Name('i', Load(), lineno=252, col_offset=39), Name('j', Load(), lineno=252, col_offset=42)], [], None, None, lineno=252, col_offset=15), lineno=252, col_offset=8), If(BoolOp(And(), [Compare(Name('i', Load(), lineno=253, col_offset=11), [Eq()], [Num(0, lineno=253, col_offset=16)], lineno=253, col_offset=11), Compare(Name('j', Load(), lineno=253, col_offset=22), [Eq()], [Attribute(Name('self', Load(), lineno=253, col_offset=27), '_len', Load(), lineno=253, col_offset=27)], lineno=253, col_offset=22)], lineno=253, col_offset=11), [Assign([Tuple([Attribute(Name('self', Load(), lineno=254, col_offset=12), '_data', Store(), lineno=254, col_offset=12), Attribute(Name('self', Load(), lineno=254, col_offset=24), '_len', Store(), lineno=254, col_offset=24)], Store(), lineno=254, col_offset=12)], Tuple([Num(0L, lineno=254, col_offset=36), Num(0, lineno=254, col_offset=40)], Load(), lineno=254, col_offset=36), lineno=254, col_offset=12)], [If(Compare(Name('i', Load(), lineno=255, col_offset=13), [Lt()], [Name('j', Load(), lineno=255, col_offset=17)], lineno=255, col_offset=13), [Assign([Attribute(Name('self', Load(), lineno=256, col_offset=12), '_data', Store(), lineno=256, col_offset=12)], BinOp(Attribute(Subscript(Name('self', Load(), lineno=256, col_offset=25), Slice(None, Name('i', Load(), lineno=256, col_offset=31), None), Load(), lineno=256, col_offset=25), '_data', Load(), lineno=256, col_offset=25), BitOr(), BinOp(Attribute(Subscript(Name('self', Load(), lineno=256, col_offset=43), Slice(Name('j', Load(), lineno=256, col_offset=48), None, None), Load(), lineno=256, col_offset=43), '_data', Load(), lineno=256, col_offset=43), RShift(), Name('i', Load(), lineno=256, col_offset=61), lineno=256, col_offset=43), lineno=256, col_offset=25), lineno=256, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=257, col_offset=12), '_len', Store(), lineno=257, col_offset=12)], BinOp(BinOp(Attribute(Name('self', Load(), lineno=257, col_offset=24), '_len', Load(), lineno=257, col_offset=24), Sub(), Name('j', Load(), lineno=257, col_offset=36), lineno=257, col_offset=24), Add(), Name('i', Load(), lineno=257, col_offset=40), lineno=257, col_offset=38), lineno=257, col_offset=12)], [], lineno=255, col_offset=13)], lineno=253, col_offset=8)], [], lineno=250, col_offset=4), FunctionDef('__add__', arguments([Name('self', Param(), lineno=259, col_offset=16), Name('other', Param(), lineno=259, col_offset=22)], None, None, []), [Assign([Name('retval', Store(), lineno=261, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=261, col_offset=17), 'copy', Load(), lineno=261, col_offset=17), [], [], None, None, lineno=261, col_offset=17), lineno=261, col_offset=8), Assign([Subscript(Name('retval', Load(), lineno=262, col_offset=8), Slice(Attribute(Name('self', Load(), lineno=262, col_offset=15), '_len', Load(), lineno=262, col_offset=15), Attribute(Name('self', Load(), lineno=262, col_offset=25), '_len', Load(), lineno=262, col_offset=25), None), Store(), lineno=262, col_offset=8)], Name('other', Load(), lineno=262, col_offset=38), lineno=262, col_offset=8), Return(Name('retval', Load(), lineno=263, col_offset=15), lineno=263, col_offset=8)], [], lineno=259, col_offset=4), FunctionDef('__mul__', arguments([Name('self', Param(), lineno=265, col_offset=16), Name('multiplier', Param(), lineno=265, col_offset=22)], None, None, []), [If(Compare(Call(Name('type', Load(), lineno=267, col_offset=11), [Name('multiplier', Load(), lineno=267, col_offset=16)], [], None, None, lineno=267, col_offset=11), [NotEq()], [Call(Name('type', Load(), lineno=267, col_offset=31), [Num(0, lineno=267, col_offset=36)], [], None, None, lineno=267, col_offset=31)], lineno=267, col_offset=11), [Raise(Name('TypeError', Load(), lineno=268, col_offset=18), Str('sequence subscript not int', lineno=268, col_offset=29), None, lineno=268, col_offset=12)], [], lineno=267, col_offset=8), If(Compare(Name('multiplier', Load(), lineno=269, col_offset=11), [LtE()], [Num(0, lineno=269, col_offset=25)], lineno=269, col_offset=11), [Return(Call(Name('BitVec', Load(), lineno=270, col_offset=19), [Num(0L, lineno=270, col_offset=26), Num(0, lineno=270, col_offset=30)], [], None, None, lineno=270, col_offset=19), lineno=270, col_offset=12)], [If(Compare(Name('multiplier', Load(), lineno=271, col_offset=13), [Eq()], [Num(1, lineno=271, col_offset=27)], lineno=271, col_offset=13), [Return(Call(Attribute(Name('self', Load(), lineno=272, col_offset=19), 'copy', Load(), lineno=272, col_offset=19), [], [], None, None, lineno=272, col_offset=19), lineno=272, col_offset=12)], [], lineno=271, col_offset=13)], lineno=269, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=274, col_offset=11), '_data', Load(), lineno=274, col_offset=11), [Eq()], [Num(0L, lineno=274, col_offset=25)], lineno=274, col_offset=11), [Return(Call(Name('BitVec', Load(), lineno=275, col_offset=19), [Num(0L, lineno=275, col_offset=26), BinOp(Attribute(Name('self', Load(), lineno=275, col_offset=30), '_len', Load(), lineno=275, col_offset=30), Mult(), Name('multiplier', Load(), lineno=275, col_offset=42), lineno=275, col_offset=30)], [], None, None, lineno=275, col_offset=19), lineno=275, col_offset=12)], [If(Compare(Attribute(UnaryOp(Invert(), Name('self', Load(), lineno=276, col_offset=15), lineno=276, col_offset=14), '_data', Load(), lineno=276, col_offset=14), [Eq()], [Num(0L, lineno=276, col_offset=30)], lineno=276, col_offset=13), [Return(UnaryOp(Invert(), Call(Name('BitVec', Load(), lineno=277, col_offset=20), [Num(0L, lineno=277, col_offset=27), BinOp(Attribute(Name('self', Load(), lineno=277, col_offset=31), '_len', Load(), lineno=277, col_offset=31), Mult(), Name('multiplier', Load(), lineno=277, col_offset=43), lineno=277, col_offset=31)], [], None, None, lineno=277, col_offset=20), lineno=277, col_offset=19), lineno=277, col_offset=12)], [], lineno=276, col_offset=13)], lineno=274, col_offset=8), Assign([Name('retval', Store(), lineno=279, col_offset=8)], Call(Name('BitVec', Load(), lineno=279, col_offset=17), [Num(0L, lineno=279, col_offset=24), Num(0, lineno=279, col_offset=28)], [], None, None, lineno=279, col_offset=17), lineno=279, col_offset=8), While(Name('multiplier', Load(), lineno=280, col_offset=14), [Assign([Tuple([Name('retval', Store(), lineno=281, col_offset=12), Name('multiplier', Store(), lineno=281, col_offset=20)], Store(), lineno=281, col_offset=12)], Tuple([BinOp(Name('retval', Load(), lineno=281, col_offset=33), Add(), Name('self', Load(), lineno=281, col_offset=42), lineno=281, col_offset=33), BinOp(Name('multiplier', Load(), lineno=281, col_offset=48), Sub(), Num(1, lineno=281, col_offset=61), lineno=281, col_offset=48)], Load(), lineno=281, col_offset=33), lineno=281, col_offset=12)], [], lineno=280, col_offset=8), Return(Name('retval', Load(), lineno=282, col_offset=15), lineno=282, col_offset=8)], [], lineno=265, col_offset=4), FunctionDef('__and__', arguments([Name('self', Param(), lineno=284, col_offset=16), Name('otherseq', Param(), lineno=284, col_offset=22)], 'rest', None, []), [If(Compare(Call(Name('type', Load(), lineno=286, col_offset=11), [Name('otherseq', Load(), lineno=286, col_offset=16)], [], None, None, lineno=286, col_offset=11), [NotEq()], [Call(Name('type', Load(), lineno=286, col_offset=29), [Name('self', Load(), lineno=286, col_offset=34)], [], None, None, lineno=286, col_offset=29)], lineno=286, col_offset=11), [Assign([Name('otherseq', Store(), lineno=287, col_offset=12)], Call(Name('apply', Load(), lineno=287, col_offset=23), [Name('bitvec', Load(), lineno=287, col_offset=29), BinOp(Tuple([Name('otherseq', Load(), lineno=287, col_offset=38)], Load(), lineno=287, col_offset=38), Add(), Name('rest', Load(), lineno=287, col_offset=52), lineno=287, col_offset=37)], [], None, None, lineno=287, col_offset=23), lineno=287, col_offset=12)], [], lineno=286, col_offset=8), Return(Call(Name('BitVec', Load(), lineno=289, col_offset=15), [BinOp(Attribute(Name('self', Load(), lineno=289, col_offset=22), '_data', Load(), lineno=289, col_offset=22), BitAnd(), Attribute(Name('otherseq', Load(), lineno=289, col_offset=35), '_data', Load(), lineno=289, col_offset=35), lineno=289, col_offset=22), Call(Name('min', Load(), lineno=290, col_offset=18), [Attribute(Name('self', Load(), lineno=290, col_offset=22), '_len', Load(), lineno=290, col_offset=22), Attribute(Name('otherseq', Load(), lineno=290, col_offset=33), '_len', Load(), lineno=290, col_offset=33)], [], None, None, lineno=290, col_offset=18)], [], None, None, lineno=289, col_offset=15), lineno=289, col_offset=8)], [], lineno=284, col_offset=4), FunctionDef('__xor__', arguments([Name('self', Param(), lineno=293, col_offset=16), Name('otherseq', Param(), lineno=293, col_offset=22)], 'rest', None, []), [If(Compare(Call(Name('type', Load(), lineno=295, col_offset=11), [Name('otherseq', Load(), lineno=295, col_offset=16)], [], None, None, lineno=295, col_offset=11), [NotEq()], [Call(Name('type', Load(), lineno=295, col_offset=29), [Name('self', Load(), lineno=295, col_offset=34)], [], None, None, lineno=295, col_offset=29)], lineno=295, col_offset=11), [Assign([Name('otherseq', Store(), lineno=296, col_offset=12)], Call(Name('apply', Load(), lineno=296, col_offset=23), [Name('bitvec', Load(), lineno=296, col_offset=29), BinOp(Tuple([Name('otherseq', Load(), lineno=296, col_offset=38)], Load(), lineno=296, col_offset=38), Add(), Name('rest', Load(), lineno=296, col_offset=52), lineno=296, col_offset=37)], [], None, None, lineno=296, col_offset=23), lineno=296, col_offset=12)], [], lineno=295, col_offset=8), Return(Call(Name('BitVec', Load(), lineno=298, col_offset=15), [BinOp(Attribute(Name('self', Load(), lineno=298, col_offset=22), '_data', Load(), lineno=298, col_offset=22), BitXor(), Attribute(Name('otherseq', Load(), lineno=298, col_offset=35), '_data', Load(), lineno=298, col_offset=35), lineno=298, col_offset=22), Call(Name('max', Load(), lineno=299, col_offset=18), [Attribute(Name('self', Load(), lineno=299, col_offset=22), '_len', Load(), lineno=299, col_offset=22), Attribute(Name('otherseq', Load(), lineno=299, col_offset=33), '_len', Load(), lineno=299, col_offset=33)], [], None, None, lineno=299, col_offset=18)], [], None, None, lineno=298, col_offset=15), lineno=298, col_offset=8)], [], lineno=293, col_offset=4), FunctionDef('__or__', arguments([Name('self', Param(), lineno=302, col_offset=15), Name('otherseq', Param(), lineno=302, col_offset=21)], 'rest', None, []), [If(Compare(Call(Name('type', Load(), lineno=304, col_offset=11), [Name('otherseq', Load(), lineno=304, col_offset=16)], [], None, None, lineno=304, col_offset=11), [NotEq()], [Call(Name('type', Load(), lineno=304, col_offset=29), [Name('self', Load(), lineno=304, col_offset=34)], [], None, None, lineno=304, col_offset=29)], lineno=304, col_offset=11), [Assign([Name('otherseq', Store(), lineno=305, col_offset=12)], Call(Name('apply', Load(), lineno=305, col_offset=23), [Name('bitvec', Load(), lineno=305, col_offset=29), BinOp(Tuple([Name('otherseq', Load(), lineno=305, col_offset=38)], Load(), lineno=305, col_offset=38), Add(), Name('rest', Load(), lineno=305, col_offset=52), lineno=305, col_offset=37)], [], None, None, lineno=305, col_offset=23), lineno=305, col_offset=12)], [], lineno=304, col_offset=8), Return(Call(Name('BitVec', Load(), lineno=307, col_offset=15), [BinOp(Attribute(Name('self', Load(), lineno=307, col_offset=22), '_data', Load(), lineno=307, col_offset=22), BitOr(), Attribute(Name('otherseq', Load(), lineno=307, col_offset=35), '_data', Load(), lineno=307, col_offset=35), lineno=307, col_offset=22), Call(Name('max', Load(), lineno=308, col_offset=18), [Attribute(Name('self', Load(), lineno=308, col_offset=22), '_len', Load(), lineno=308, col_offset=22), Attribute(Name('otherseq', Load(), lineno=308, col_offset=33), '_len', Load(), lineno=308, col_offset=33)], [], None, None, lineno=308, col_offset=18)], [], None, None, lineno=307, col_offset=15), lineno=307, col_offset=8)], [], lineno=302, col_offset=4), FunctionDef('__invert__', arguments([Name('self', Param(), lineno=311, col_offset=19)], None, None, []), [Return(Call(Name('BitVec', Load(), lineno=313, col_offset=15), [BinOp(UnaryOp(Invert(), Attribute(Name('self', Load(), lineno=313, col_offset=23), '_data', Load(), lineno=313, col_offset=23), lineno=313, col_offset=22), BitAnd(), BinOp(BinOp(Num(1L, lineno=313, col_offset=38), LShift(), Attribute(Name('self', Load(), lineno=313, col_offset=44), '_len', Load(), lineno=313, col_offset=44), lineno=313, col_offset=38), Sub(), Num(1, lineno=313, col_offset=57), lineno=313, col_offset=37), lineno=313, col_offset=22), Attribute(Name('self', Load(), lineno=314, col_offset=18), '_len', Load(), lineno=314, col_offset=18)], [], None, None, lineno=313, col_offset=15), lineno=313, col_offset=8)], [], lineno=311, col_offset=4), FunctionDef('__coerce__', arguments([Name('self', Param(), lineno=316, col_offset=19), Name('otherseq', Param(), lineno=316, col_offset=25)], 'rest', None, []), [If(Compare(Call(Name('type', Load(), lineno=319, col_offset=11), [Name('otherseq', Load(), lineno=319, col_offset=16)], [], None, None, lineno=319, col_offset=11), [NotEq()], [Call(Name('type', Load(), lineno=319, col_offset=29), [Name('self', Load(), lineno=319, col_offset=34)], [], None, None, lineno=319, col_offset=29)], lineno=319, col_offset=11), [Assign([Name('otherseq', Store(), lineno=320, col_offset=12)], Call(Name('apply', Load(), lineno=320, col_offset=23), [Name('bitvec', Load(), lineno=320, col_offset=29), BinOp(Tuple([Name('otherseq', Load(), lineno=320, col_offset=38)], Load(), lineno=320, col_offset=38), Add(), Name('rest', Load(), lineno=320, col_offset=52), lineno=320, col_offset=37)], [], None, None, lineno=320, col_offset=23), lineno=320, col_offset=12)], [], lineno=319, col_offset=8), Return(Tuple([Name('self', Load(), lineno=321, col_offset=15), Name('otherseq', Load(), lineno=321, col_offset=21)], Load(), lineno=321, col_offset=15), lineno=321, col_offset=8)], [], lineno=316, col_offset=4), FunctionDef('__int__', arguments([Name('self', Param(), lineno=323, col_offset=16)], None, None, []), [Return(Call(Name('int', Load(), lineno=324, col_offset=15), [Attribute(Name('self', Load(), lineno=324, col_offset=19), '_data', Load(), lineno=324, col_offset=19)], [], None, None, lineno=324, col_offset=15), lineno=324, col_offset=8)], [], lineno=323, col_offset=4), FunctionDef('__long__', arguments([Name('self', Param(), lineno=326, col_offset=17)], None, None, []), [Return(Call(Name('long', Load(), lineno=327, col_offset=15), [Attribute(Name('self', Load(), lineno=327, col_offset=20), '_data', Load(), lineno=327, col_offset=20)], [], None, None, lineno=327, col_offset=15), lineno=327, col_offset=8)], [], lineno=326, col_offset=4), FunctionDef('__float__', arguments([Name('self', Param(), lineno=329, col_offset=18)], None, None, []), [Return(Call(Name('float', Load(), lineno=330, col_offset=15), [Attribute(Name('self', Load(), lineno=330, col_offset=21), '_data', Load(), lineno=330, col_offset=21)], [], None, None, lineno=330, col_offset=15), lineno=330, col_offset=8)], [], lineno=329, col_offset=4)], [], lineno=50, col_offset=0), Assign([Name('bitvec', Store(), lineno=333, col_offset=0)], Name('BitVec', Load(), lineno=333, col_offset=9), lineno=333, col_offset=0)])
