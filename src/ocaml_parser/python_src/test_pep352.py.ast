Module([Import([alias('unittest', None)], lineno=1, col_offset=0), Import([alias('__builtin__', None)], lineno=2, col_offset=0), Import([alias('exceptions', None)], lineno=3, col_offset=0), Import([alias('warnings', None)], lineno=4, col_offset=0), ImportFrom('test.test_support', [alias('run_unittest', None), alias('check_warnings', None)], 0, lineno=5, col_offset=0), Import([alias('os', None)], lineno=6, col_offset=0), Import([alias('sys', None)], lineno=7, col_offset=0), ImportFrom('platform', [alias('system', 'platform_system')], 0, lineno=8, col_offset=0), Assign([Name('DEPRECATION_WARNINGS', Store(), lineno=10, col_offset=0)], List([Str('BaseException.message has been deprecated', lineno=10, col_offset=24)], Load(), lineno=10, col_offset=23), lineno=10, col_offset=0), If(Attribute(Name('sys', Load(), lineno=12, col_offset=3), 'py3kwarning', Load(), lineno=12, col_offset=3), [Expr(Call(Attribute(Name('DEPRECATION_WARNINGS', Load(), lineno=13, col_offset=4), 'extend', Load(), lineno=13, col_offset=4), [List([Str('exceptions must derive from BaseException', lineno=14, col_offset=9), Str("catching classes that don't inherit from BaseException is not allowed", lineno=15, col_offset=9), Str('__get(item|slice)__ not supported for exception classes', lineno=16, col_offset=9)], Load(), lineno=14, col_offset=8)], [], None, None, lineno=13, col_offset=4), lineno=13, col_offset=4)], [], lineno=12, col_offset=0), Assign([Name('_deprecations', Store(), lineno=18, col_offset=0)], ListComp(Tuple([Name('msg', Load(), lineno=18, col_offset=18), Name('DeprecationWarning', Load(), lineno=18, col_offset=23)], Load(), lineno=18, col_offset=18), [comprehension(Name('msg', Store(), lineno=18, col_offset=47), Name('DEPRECATION_WARNINGS', Load(), lineno=18, col_offset=54), [])], lineno=18, col_offset=17), lineno=18, col_offset=0), FunctionDef('ignore_deprecation_warnings', arguments([Name('func', Param(), lineno=21, col_offset=32)], None, None, []), [Expr(Str('Ignore the known DeprecationWarnings.', lineno=22, col_offset=4), lineno=22, col_offset=4), FunctionDef('wrapper', arguments([], 'args', 'kw', []), [With(Call(Name('check_warnings', Load(), lineno=24, col_offset=13), [], [keyword('quiet', Name('True', Load(), lineno=24, col_offset=50))], Name('_deprecations', Load(), lineno=24, col_offset=29), None, lineno=24, col_offset=13), None, [Return(Call(Name('func', Load(), lineno=25, col_offset=19), [], [], Name('args', Load(), lineno=25, col_offset=25), Name('kw', Load(), lineno=25, col_offset=33), lineno=25, col_offset=19), lineno=25, col_offset=12)], lineno=24, col_offset=13)], [], lineno=23, col_offset=4), Return(Name('wrapper', Load(), lineno=26, col_offset=11), lineno=26, col_offset=4)], [], lineno=21, col_offset=0), ClassDef('ExceptionClassTests', [Attribute(Name('unittest', Load(), lineno=28, col_offset=26), 'TestCase', Load(), lineno=28, col_offset=26)], [Expr(Str('Tests for anything relating to exception objects themselves (e.g.,\n    inheritance hierarchy)', lineno=31, col_offset=-1), lineno=31, col_offset=-1), FunctionDef('test_builtins_new_style', arguments([Name('self', Param(), lineno=33, col_offset=32)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=34, col_offset=8), 'assertTrue', Load(), lineno=34, col_offset=8), [Call(Name('issubclass', Load(), lineno=34, col_offset=24), [Name('Exception', Load(), lineno=34, col_offset=35), Name('object', Load(), lineno=34, col_offset=46)], [], None, None, lineno=34, col_offset=24)], [], None, None, lineno=34, col_offset=8), lineno=34, col_offset=8)], [], lineno=33, col_offset=4), FunctionDef('verify_instance_interface', arguments([Name('self', Param(), lineno=37, col_offset=34), Name('ins', Param(), lineno=37, col_offset=40)], None, None, []), [For(Name('attr', Store(), lineno=38, col_offset=12), Tuple([Str('args', lineno=38, col_offset=21), Str('message', lineno=38, col_offset=29), Str('__str__', lineno=38, col_offset=40), Str('__repr__', lineno=38, col_offset=51), Str('__getitem__', lineno=38, col_offset=63)], Load(), lineno=38, col_offset=21), [Expr(Call(Attribute(Name('self', Load(), lineno=39, col_offset=12), 'assertTrue', Load(), lineno=39, col_offset=12), [Call(Name('hasattr', Load(), lineno=39, col_offset=28), [Name('ins', Load(), lineno=39, col_offset=36), Name('attr', Load(), lineno=39, col_offset=41)], [], None, None, lineno=39, col_offset=28), BinOp(Str('%s missing %s attribute', lineno=40, col_offset=28), Mod(), Tuple([Attribute(Attribute(Name('ins', Load(), lineno=41, col_offset=29), '__class__', Load(), lineno=41, col_offset=29), '__name__', Load(), lineno=41, col_offset=29), Name('attr', Load(), lineno=41, col_offset=53)], Load(), lineno=41, col_offset=29), lineno=40, col_offset=28)], [], None, None, lineno=39, col_offset=12), lineno=39, col_offset=12)], [], lineno=38, col_offset=8)], [Name('ignore_deprecation_warnings', Load(), lineno=36, col_offset=5)], lineno=36, col_offset=4), FunctionDef('test_inheritance', arguments([Name('self', Param(), lineno=43, col_offset=25)], None, None, []), [Assign([Name('exc_set', Store(), lineno=45, col_offset=8)], Call(Name('set', Load(), lineno=45, col_offset=18), [GeneratorExp(Name('x', Load(), lineno=45, col_offset=22), [comprehension(Name('x', Store(), lineno=45, col_offset=28), Call(Name('dir', Load(), lineno=45, col_offset=33), [Name('exceptions', Load(), lineno=45, col_offset=37)], [], None, None, lineno=45, col_offset=33), [UnaryOp(Not(), Call(Attribute(Name('x', Load(), lineno=45, col_offset=56), 'startswith', Load(), lineno=45, col_offset=56), [Str('_', lineno=45, col_offset=69)], [], None, None, lineno=45, col_offset=56), lineno=45, col_offset=52)])], lineno=45, col_offset=22)], [], None, None, lineno=45, col_offset=18), lineno=45, col_offset=8), Assign([Name('inheritance_tree', Store(), lineno=46, col_offset=8)], Call(Name('open', Load(), lineno=46, col_offset=27), [Call(Attribute(Attribute(Name('os', Load(), lineno=46, col_offset=32), 'path', Load(), lineno=46, col_offset=32), 'join', Load(), lineno=46, col_offset=32), [Subscript(Call(Attribute(Attribute(Name('os', Load(), lineno=46, col_offset=45), 'path', Load(), lineno=46, col_offset=45), 'split', Load(), lineno=46, col_offset=45), [Name('__file__', Load(), lineno=46, col_offset=59)], [], None, None, lineno=46, col_offset=45), Index(Num(0, lineno=46, col_offset=69)), Load(), lineno=46, col_offset=45), Str('exception_hierarchy.txt', lineno=47, col_offset=48)], [], None, None, lineno=46, col_offset=32)], [], None, None, lineno=46, col_offset=27), lineno=46, col_offset=8), TryFinally([Assign([Name('superclass_name', Store(), lineno=49, col_offset=12)], Call(Attribute(Call(Attribute(Name('inheritance_tree', Load(), lineno=49, col_offset=30), 'readline', Load(), lineno=49, col_offset=30), [], [], None, None, lineno=49, col_offset=30), 'rstrip', Load(), lineno=49, col_offset=30), [], [], None, None, lineno=49, col_offset=30), lineno=49, col_offset=12), TryExcept([Assign([Name('last_exc', Store(), lineno=51, col_offset=16)], Call(Name('getattr', Load(), lineno=51, col_offset=27), [Name('__builtin__', Load(), lineno=51, col_offset=35), Name('superclass_name', Load(), lineno=51, col_offset=48)], [], None, None, lineno=51, col_offset=27), lineno=51, col_offset=16)], [ExceptHandler(Name('AttributeError', Load(), lineno=52, col_offset=19), None, [Expr(Call(Attribute(Name('self', Load(), lineno=53, col_offset=16), 'fail', Load(), lineno=53, col_offset=16), [BinOp(Str('base class %s not a built-in', lineno=53, col_offset=26), Mod(), Name('superclass_name', Load(), lineno=53, col_offset=59), lineno=53, col_offset=26)], [], None, None, lineno=53, col_offset=16), lineno=53, col_offset=16)], lineno=52, col_offset=12)], [], lineno=50, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=54, col_offset=12), 'assertIn', Load(), lineno=54, col_offset=12), [Name('superclass_name', Load(), lineno=54, col_offset=26), Name('exc_set', Load(), lineno=54, col_offset=43)], [], None, None, lineno=54, col_offset=12), lineno=54, col_offset=12), Expr(Call(Attribute(Name('exc_set', Load(), lineno=55, col_offset=12), 'discard', Load(), lineno=55, col_offset=12), [Name('superclass_name', Load(), lineno=55, col_offset=28)], [], None, None, lineno=55, col_offset=12), lineno=55, col_offset=12), Assign([Name('superclasses', Store(), lineno=56, col_offset=12)], List([], Load(), lineno=56, col_offset=27), lineno=56, col_offset=12), Assign([Name('last_depth', Store(), lineno=57, col_offset=12)], Num(0, lineno=57, col_offset=25), lineno=57, col_offset=12), For(Name('exc_line', Store(), lineno=58, col_offset=16), Name('inheritance_tree', Load(), lineno=58, col_offset=28), [Assign([Name('exc_line', Store(), lineno=59, col_offset=16)], Call(Attribute(Name('exc_line', Load(), lineno=59, col_offset=27), 'rstrip', Load(), lineno=59, col_offset=27), [], [], None, None, lineno=59, col_offset=27), lineno=59, col_offset=16), Assign([Name('depth', Store(), lineno=60, col_offset=16)], Call(Attribute(Name('exc_line', Load(), lineno=60, col_offset=24), 'rindex', Load(), lineno=60, col_offset=24), [Str('-', lineno=60, col_offset=40)], [], None, None, lineno=60, col_offset=24), lineno=60, col_offset=16), Assign([Name('exc_name', Store(), lineno=61, col_offset=16)], Subscript(Name('exc_line', Load(), lineno=61, col_offset=27), Slice(BinOp(Name('depth', Load(), lineno=61, col_offset=36), Add(), Num(2, lineno=61, col_offset=42), lineno=61, col_offset=36), None, None), Load(), lineno=61, col_offset=27), lineno=61, col_offset=16), If(Compare(Str('(', lineno=62, col_offset=19), [In()], [Name('exc_name', Load(), lineno=62, col_offset=26)], lineno=62, col_offset=19), [Assign([Name('paren_index', Store(), lineno=63, col_offset=20)], Call(Attribute(Name('exc_name', Load(), lineno=63, col_offset=34), 'index', Load(), lineno=63, col_offset=34), [Str('(', lineno=63, col_offset=49)], [], None, None, lineno=63, col_offset=34), lineno=63, col_offset=20), Assign([Name('platform_name', Store(), lineno=64, col_offset=20)], Subscript(Name('exc_name', Load(), lineno=64, col_offset=36), Slice(BinOp(Name('paren_index', Load(), lineno=64, col_offset=45), Add(), Num(1, lineno=64, col_offset=57), lineno=64, col_offset=45), Num(-1, lineno=64, col_offset=60), None), Load(), lineno=64, col_offset=36), lineno=64, col_offset=20), Assign([Name('exc_name', Store(), lineno=65, col_offset=20)], Subscript(Name('exc_name', Load(), lineno=65, col_offset=31), Slice(None, BinOp(Name('paren_index', Load(), lineno=65, col_offset=41), Sub(), Num(1, lineno=65, col_offset=53), lineno=65, col_offset=41), None), Load(), lineno=65, col_offset=31), lineno=65, col_offset=20), If(Compare(Call(Name('platform_system', Load(), lineno=66, col_offset=23), [], [], None, None, lineno=66, col_offset=23), [NotEq()], [Name('platform_name', Load(), lineno=66, col_offset=44)], lineno=66, col_offset=23), [Expr(Call(Attribute(Name('exc_set', Load(), lineno=67, col_offset=24), 'discard', Load(), lineno=67, col_offset=24), [Name('exc_name', Load(), lineno=67, col_offset=40)], [], None, None, lineno=67, col_offset=24), lineno=67, col_offset=24), Continue( lineno=68, col_offset=24)], [], lineno=66, col_offset=20)], [], lineno=62, col_offset=16), If(Compare(Str('[', lineno=69, col_offset=19), [In()], [Name('exc_name', Load(), lineno=69, col_offset=26)], lineno=69, col_offset=19), [Assign([Name('left_bracket', Store(), lineno=70, col_offset=20)], Call(Attribute(Name('exc_name', Load(), lineno=70, col_offset=35), 'index', Load(), lineno=70, col_offset=35), [Str('[', lineno=70, col_offset=50)], [], None, None, lineno=70, col_offset=35), lineno=70, col_offset=20), Assign([Name('exc_name', Store(), lineno=71, col_offset=20)], Subscript(Name('exc_name', Load(), lineno=71, col_offset=31), Slice(None, BinOp(Name('left_bracket', Load(), lineno=71, col_offset=41), Sub(), Num(1, lineno=71, col_offset=54), lineno=71, col_offset=41), None), Load(), lineno=71, col_offset=31), lineno=71, col_offset=20)], [], lineno=69, col_offset=16), TryExcept([Assign([Name('exc', Store(), lineno=73, col_offset=20)], Call(Name('getattr', Load(), lineno=73, col_offset=26), [Name('__builtin__', Load(), lineno=73, col_offset=34), Name('exc_name', Load(), lineno=73, col_offset=47)], [], None, None, lineno=73, col_offset=26), lineno=73, col_offset=20)], [ExceptHandler(Name('AttributeError', Load(), lineno=74, col_offset=23), None, [Expr(Call(Attribute(Name('self', Load(), lineno=75, col_offset=20), 'fail', Load(), lineno=75, col_offset=20), [BinOp(Str('%s not a built-in exception', lineno=75, col_offset=30), Mod(), Name('exc_name', Load(), lineno=75, col_offset=62), lineno=75, col_offset=30)], [], None, None, lineno=75, col_offset=20), lineno=75, col_offset=20)], lineno=74, col_offset=16)], [], lineno=72, col_offset=16), If(Compare(Name('last_depth', Load(), lineno=76, col_offset=19), [Lt()], [Name('depth', Load(), lineno=76, col_offset=32)], lineno=76, col_offset=19), [Expr(Call(Attribute(Name('superclasses', Load(), lineno=77, col_offset=20), 'append', Load(), lineno=77, col_offset=20), [Tuple([Name('last_depth', Load(), lineno=77, col_offset=41), Name('last_exc', Load(), lineno=77, col_offset=53)], Load(), lineno=77, col_offset=41)], [], None, None, lineno=77, col_offset=20), lineno=77, col_offset=20)], [If(Compare(Name('last_depth', Load(), lineno=78, col_offset=21), [Gt()], [Name('depth', Load(), lineno=78, col_offset=34)], lineno=78, col_offset=21), [While(Compare(Subscript(Subscript(Name('superclasses', Load(), lineno=79, col_offset=26), Index(Num(-1, lineno=79, col_offset=40)), Load(), lineno=79, col_offset=26), Index(Num(0, lineno=79, col_offset=43)), Load(), lineno=79, col_offset=26), [GtE()], [Name('depth', Load(), lineno=79, col_offset=49)], lineno=79, col_offset=26), [Expr(Call(Attribute(Name('superclasses', Load(), lineno=80, col_offset=24), 'pop', Load(), lineno=80, col_offset=24), [], [], None, None, lineno=80, col_offset=24), lineno=80, col_offset=24)], [], lineno=79, col_offset=20)], [], lineno=78, col_offset=21)], lineno=76, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=81, col_offset=16), 'assertTrue', Load(), lineno=81, col_offset=16), [Call(Name('issubclass', Load(), lineno=81, col_offset=32), [Name('exc', Load(), lineno=81, col_offset=43), Subscript(Subscript(Name('superclasses', Load(), lineno=81, col_offset=48), Index(Num(-1, lineno=81, col_offset=62)), Load(), lineno=81, col_offset=48), Index(Num(1, lineno=81, col_offset=65)), Load(), lineno=81, col_offset=48)], [], None, None, lineno=81, col_offset=32), BinOp(Str('%s is not a subclass of %s', lineno=82, col_offset=16), Mod(), Tuple([Attribute(Name('exc', Load(), lineno=82, col_offset=48), '__name__', Load(), lineno=82, col_offset=48), Attribute(Subscript(Subscript(Name('superclasses', Load(), lineno=83, col_offset=20), Index(Num(-1, lineno=83, col_offset=34)), Load(), lineno=83, col_offset=20), Index(Num(1, lineno=83, col_offset=37)), Load(), lineno=83, col_offset=20), '__name__', Load(), lineno=83, col_offset=20)], Load(), lineno=82, col_offset=48), lineno=82, col_offset=16)], [], None, None, lineno=81, col_offset=16), lineno=81, col_offset=16), TryExcept([Expr(Call(Attribute(Name('self', Load(), lineno=85, col_offset=20), 'verify_instance_interface', Load(), lineno=85, col_offset=20), [Call(Name('exc', Load(), lineno=85, col_offset=51), [], [], None, None, lineno=85, col_offset=51)], [], None, None, lineno=85, col_offset=20), lineno=85, col_offset=20)], [ExceptHandler(Name('TypeError', Load(), lineno=86, col_offset=23), None, [Pass( lineno=87, col_offset=20)], lineno=86, col_offset=16)], [], lineno=84, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=88, col_offset=16), 'assertIn', Load(), lineno=88, col_offset=16), [Name('exc_name', Load(), lineno=88, col_offset=30), Name('exc_set', Load(), lineno=88, col_offset=40)], [], None, None, lineno=88, col_offset=16), lineno=88, col_offset=16), Expr(Call(Attribute(Name('exc_set', Load(), lineno=89, col_offset=16), 'discard', Load(), lineno=89, col_offset=16), [Name('exc_name', Load(), lineno=89, col_offset=32)], [], None, None, lineno=89, col_offset=16), lineno=89, col_offset=16), Assign([Name('last_exc', Store(), lineno=90, col_offset=16)], Name('exc', Load(), lineno=90, col_offset=27), lineno=90, col_offset=16), Assign([Name('last_depth', Store(), lineno=91, col_offset=16)], Name('depth', Load(), lineno=91, col_offset=29), lineno=91, col_offset=16)], [], lineno=58, col_offset=12)], [Expr(Call(Attribute(Name('inheritance_tree', Load(), lineno=93, col_offset=12), 'close', Load(), lineno=93, col_offset=12), [], [], None, None, lineno=93, col_offset=12), lineno=93, col_offset=12)], lineno=48, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=94, col_offset=8), 'assertEqual', Load(), lineno=94, col_offset=8), [Call(Name('len', Load(), lineno=94, col_offset=25), [Name('exc_set', Load(), lineno=94, col_offset=29)], [], None, None, lineno=94, col_offset=25), Num(0, lineno=94, col_offset=39), BinOp(Str('%s not accounted for', lineno=94, col_offset=42), Mod(), Name('exc_set', Load(), lineno=94, col_offset=67), lineno=94, col_offset=42)], [], None, None, lineno=94, col_offset=8), lineno=94, col_offset=8)], [], lineno=43, col_offset=4), Assign([Name('interface_tests', Store(), lineno=96, col_offset=4)], Tuple([Str('length', lineno=96, col_offset=23), Str('args', lineno=96, col_offset=33), Str('message', lineno=96, col_offset=41), Str('str', lineno=96, col_offset=52), Str('unicode', lineno=96, col_offset=59), Str('repr', lineno=96, col_offset=70), Str('indexing', lineno=97, col_offset=12)], Load(), lineno=96, col_offset=23), lineno=96, col_offset=4), FunctionDef('interface_test_driver', arguments([Name('self', Param(), lineno=99, col_offset=30), Name('results', Param(), lineno=99, col_offset=36)], None, None, []), [For(Tuple([Name('test_name', Store(), lineno=100, col_offset=12), Tuple([Name('given', Store(), lineno=100, col_offset=24), Name('expected', Store(), lineno=100, col_offset=31)], Store(), lineno=100, col_offset=24)], Store(), lineno=100, col_offset=12), Call(Name('zip', Load(), lineno=100, col_offset=44), [Attribute(Name('self', Load(), lineno=100, col_offset=48), 'interface_tests', Load(), lineno=100, col_offset=48), Name('results', Load(), lineno=100, col_offset=70)], [], None, None, lineno=100, col_offset=44), [Expr(Call(Attribute(Name('self', Load(), lineno=101, col_offset=12), 'assertEqual', Load(), lineno=101, col_offset=12), [Name('given', Load(), lineno=101, col_offset=29), Name('expected', Load(), lineno=101, col_offset=36), BinOp(Str('%s: %s != %s', lineno=101, col_offset=46), Mod(), Tuple([Name('test_name', Load(), lineno=101, col_offset=64), Name('given', Load(), lineno=102, col_offset=16), Name('expected', Load(), lineno=102, col_offset=23)], Load(), lineno=101, col_offset=64), lineno=101, col_offset=46)], [], None, None, lineno=101, col_offset=12), lineno=101, col_offset=12)], [], lineno=100, col_offset=8)], [], lineno=99, col_offset=4), FunctionDef('test_interface_single_arg', arguments([Name('self', Param(), lineno=105, col_offset=34)], None, None, []), [Assign([Name('arg', Store(), lineno=107, col_offset=8)], Str('spam', lineno=107, col_offset=14), lineno=107, col_offset=8), Assign([Name('exc', Store(), lineno=108, col_offset=8)], Call(Name('Exception', Load(), lineno=108, col_offset=14), [Name('arg', Load(), lineno=108, col_offset=24)], [], None, None, lineno=108, col_offset=14), lineno=108, col_offset=8), Assign([Name('results', Store(), lineno=109, col_offset=8)], Tuple([List([Call(Name('len', Load(), lineno=109, col_offset=20), [Attribute(Name('exc', Load(), lineno=109, col_offset=24), 'args', Load(), lineno=109, col_offset=24)], [], None, None, lineno=109, col_offset=20), Num(1, lineno=109, col_offset=35)], Load(), lineno=109, col_offset=19), List([Subscript(Attribute(Name('exc', Load(), lineno=109, col_offset=40), 'args', Load(), lineno=109, col_offset=40), Index(Num(0, lineno=109, col_offset=49)), Load(), lineno=109, col_offset=40), Name('arg', Load(), lineno=109, col_offset=53)], Load(), lineno=109, col_offset=39), List([Attribute(Name('exc', Load(), lineno=109, col_offset=60), 'message', Load(), lineno=109, col_offset=60), Name('arg', Load(), lineno=109, col_offset=73)], Load(), lineno=109, col_offset=59), List([Call(Name('str', Load(), lineno=110, col_offset=20), [Name('exc', Load(), lineno=110, col_offset=24)], [], None, None, lineno=110, col_offset=20), Call(Name('str', Load(), lineno=110, col_offset=30), [Name('arg', Load(), lineno=110, col_offset=34)], [], None, None, lineno=110, col_offset=30)], Load(), lineno=110, col_offset=19), List([Call(Name('unicode', Load(), lineno=110, col_offset=42), [Name('exc', Load(), lineno=110, col_offset=50)], [], None, None, lineno=110, col_offset=42), Call(Name('unicode', Load(), lineno=110, col_offset=56), [Name('arg', Load(), lineno=110, col_offset=64)], [], None, None, lineno=110, col_offset=56)], Load(), lineno=110, col_offset=41), List([Call(Name('repr', Load(), lineno=111, col_offset=20), [Name('exc', Load(), lineno=111, col_offset=25)], [], None, None, lineno=111, col_offset=20), BinOp(Attribute(Attribute(Name('exc', Load(), lineno=111, col_offset=31), '__class__', Load(), lineno=111, col_offset=31), '__name__', Load(), lineno=111, col_offset=31), Add(), Call(Name('repr', Load(), lineno=111, col_offset=56), [Attribute(Name('exc', Load(), lineno=111, col_offset=61), 'args', Load(), lineno=111, col_offset=61)], [], None, None, lineno=111, col_offset=56), lineno=111, col_offset=31)], Load(), lineno=111, col_offset=19), List([Subscript(Name('exc', Load(), lineno=112, col_offset=20), Index(Num(0, lineno=112, col_offset=24)), Load(), lineno=112, col_offset=20), Name('arg', Load(), lineno=112, col_offset=28)], Load(), lineno=112, col_offset=19)], Load(), lineno=109, col_offset=19), lineno=109, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=113, col_offset=8), 'interface_test_driver', Load(), lineno=113, col_offset=8), [Name('results', Load(), lineno=113, col_offset=35)], [], None, None, lineno=113, col_offset=8), lineno=113, col_offset=8)], [Name('ignore_deprecation_warnings', Load(), lineno=104, col_offset=5)], lineno=104, col_offset=4), FunctionDef('test_interface_multi_arg', arguments([Name('self', Param(), lineno=116, col_offset=33)], None, None, []), [Assign([Name('arg_count', Store(), lineno=118, col_offset=8)], Num(3, lineno=118, col_offset=20), lineno=118, col_offset=8), Assign([Name('args', Store(), lineno=119, col_offset=8)], Call(Name('tuple', Load(), lineno=119, col_offset=15), [Call(Name('range', Load(), lineno=119, col_offset=21), [Name('arg_count', Load(), lineno=119, col_offset=27)], [], None, None, lineno=119, col_offset=21)], [], None, None, lineno=119, col_offset=15), lineno=119, col_offset=8), Assign([Name('exc', Store(), lineno=120, col_offset=8)], Call(Name('Exception', Load(), lineno=120, col_offset=14), [], [], Name('args', Load(), lineno=120, col_offset=25), None, lineno=120, col_offset=14), lineno=120, col_offset=8), Assign([Name('results', Store(), lineno=121, col_offset=8)], Tuple([List([Call(Name('len', Load(), lineno=121, col_offset=20), [Attribute(Name('exc', Load(), lineno=121, col_offset=24), 'args', Load(), lineno=121, col_offset=24)], [], None, None, lineno=121, col_offset=20), Name('arg_count', Load(), lineno=121, col_offset=35)], Load(), lineno=121, col_offset=19), List([Attribute(Name('exc', Load(), lineno=121, col_offset=48), 'args', Load(), lineno=121, col_offset=48), Name('args', Load(), lineno=121, col_offset=58)], Load(), lineno=121, col_offset=47), List([Attribute(Name('exc', Load(), lineno=122, col_offset=20), 'message', Load(), lineno=122, col_offset=20), Str('', lineno=122, col_offset=33)], Load(), lineno=122, col_offset=19), List([Call(Name('str', Load(), lineno=122, col_offset=39), [Name('exc', Load(), lineno=122, col_offset=43)], [], None, None, lineno=122, col_offset=39), Call(Name('str', Load(), lineno=122, col_offset=49), [Name('args', Load(), lineno=122, col_offset=53)], [], None, None, lineno=122, col_offset=49)], Load(), lineno=122, col_offset=38), List([Call(Name('unicode', Load(), lineno=123, col_offset=20), [Name('exc', Load(), lineno=123, col_offset=28)], [], None, None, lineno=123, col_offset=20), Call(Name('unicode', Load(), lineno=123, col_offset=34), [Name('args', Load(), lineno=123, col_offset=42)], [], None, None, lineno=123, col_offset=34)], Load(), lineno=123, col_offset=19), List([Call(Name('repr', Load(), lineno=124, col_offset=20), [Name('exc', Load(), lineno=124, col_offset=25)], [], None, None, lineno=124, col_offset=20), BinOp(Attribute(Attribute(Name('exc', Load(), lineno=124, col_offset=31), '__class__', Load(), lineno=124, col_offset=31), '__name__', Load(), lineno=124, col_offset=31), Add(), Call(Name('repr', Load(), lineno=124, col_offset=56), [Attribute(Name('exc', Load(), lineno=124, col_offset=61), 'args', Load(), lineno=124, col_offset=61)], [], None, None, lineno=124, col_offset=56), lineno=124, col_offset=31)], Load(), lineno=124, col_offset=19), List([Subscript(Name('exc', Load(), lineno=125, col_offset=20), Index(Num(-1, lineno=125, col_offset=25)), Load(), lineno=125, col_offset=20), Subscript(Name('args', Load(), lineno=125, col_offset=29), Index(Num(-1, lineno=125, col_offset=35)), Load(), lineno=125, col_offset=29)], Load(), lineno=125, col_offset=19)], Load(), lineno=121, col_offset=19), lineno=121, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=126, col_offset=8), 'interface_test_driver', Load(), lineno=126, col_offset=8), [Name('results', Load(), lineno=126, col_offset=35)], [], None, None, lineno=126, col_offset=8), lineno=126, col_offset=8)], [Name('ignore_deprecation_warnings', Load(), lineno=115, col_offset=5)], lineno=115, col_offset=4), FunctionDef('test_interface_no_arg', arguments([Name('self', Param(), lineno=129, col_offset=30)], None, None, []), [Assign([Name('exc', Store(), lineno=131, col_offset=8)], Call(Name('Exception', Load(), lineno=131, col_offset=14), [], [], None, None, lineno=131, col_offset=14), lineno=131, col_offset=8), Assign([Name('results', Store(), lineno=132, col_offset=8)], Tuple([List([Call(Name('len', Load(), lineno=132, col_offset=20), [Attribute(Name('exc', Load(), lineno=132, col_offset=24), 'args', Load(), lineno=132, col_offset=24)], [], None, None, lineno=132, col_offset=20), Num(0, lineno=132, col_offset=35)], Load(), lineno=132, col_offset=19), List([Attribute(Name('exc', Load(), lineno=132, col_offset=40), 'args', Load(), lineno=132, col_offset=40), Call(Name('tuple', Load(), lineno=132, col_offset=50), [], [], None, None, lineno=132, col_offset=50)], Load(), lineno=132, col_offset=39), List([Attribute(Name('exc', Load(), lineno=133, col_offset=20), 'message', Load(), lineno=133, col_offset=20), Str('', lineno=133, col_offset=33)], Load(), lineno=133, col_offset=19), List([Call(Name('str', Load(), lineno=134, col_offset=20), [Name('exc', Load(), lineno=134, col_offset=24)], [], None, None, lineno=134, col_offset=20), Str('', lineno=134, col_offset=30)], Load(), lineno=134, col_offset=19), List([Call(Name('unicode', Load(), lineno=134, col_offset=36), [Name('exc', Load(), lineno=134, col_offset=44)], [], None, None, lineno=134, col_offset=36), Str(u'', lineno=134, col_offset=50)], Load(), lineno=134, col_offset=35), List([Call(Name('repr', Load(), lineno=135, col_offset=20), [Name('exc', Load(), lineno=135, col_offset=25)], [], None, None, lineno=135, col_offset=20), BinOp(Attribute(Attribute(Name('exc', Load(), lineno=135, col_offset=31), '__class__', Load(), lineno=135, col_offset=31), '__name__', Load(), lineno=135, col_offset=31), Add(), Str('()', lineno=135, col_offset=56), lineno=135, col_offset=31)], Load(), lineno=135, col_offset=19), List([Name('True', Load(), lineno=135, col_offset=64), Name('True', Load(), lineno=135, col_offset=70)], Load(), lineno=135, col_offset=63)], Load(), lineno=132, col_offset=19), lineno=132, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=136, col_offset=8), 'interface_test_driver', Load(), lineno=136, col_offset=8), [Name('results', Load(), lineno=136, col_offset=35)], [], None, None, lineno=136, col_offset=8), lineno=136, col_offset=8)], [Name('ignore_deprecation_warnings', Load(), lineno=128, col_offset=5)], lineno=128, col_offset=4), FunctionDef('test_message_deprecation', arguments([Name('self', Param(), lineno=139, col_offset=33)], None, None, []), [With(Call(Name('check_warnings', Load(), lineno=141, col_offset=13), [Tuple([Str('', lineno=141, col_offset=29), Name('DeprecationWarning', Load(), lineno=141, col_offset=33)], Load(), lineno=141, col_offset=29)], [], None, None, lineno=141, col_offset=13), None, [Expr(Attribute(Call(Name('BaseException', Load(), lineno=142, col_offset=12), [], [], None, None, lineno=142, col_offset=12), 'message', Load(), lineno=142, col_offset=12), lineno=142, col_offset=12)], lineno=141, col_offset=13)], [], lineno=139, col_offset=4)], [], lineno=28, col_offset=0), ClassDef('UsageTests', [Attribute(Name('unittest', Load(), lineno=145, col_offset=17), 'TestCase', Load(), lineno=145, col_offset=17)], [Expr(Str('Test usage of exceptions', lineno=147, col_offset=4), lineno=147, col_offset=4), FunctionDef('raise_fails', arguments([Name('self', Param(), lineno=149, col_offset=20), Name('object_', Param(), lineno=149, col_offset=26)], None, None, []), [Expr(Str("Make sure that raising 'object_' triggers a TypeError.", lineno=150, col_offset=8), lineno=150, col_offset=8), TryExcept([Raise(Name('object_', Load(), lineno=152, col_offset=18), None, None, lineno=152, col_offset=12)], [ExceptHandler(Name('TypeError', Load(), lineno=153, col_offset=15), None, [Return(None, lineno=154, col_offset=12)], lineno=153, col_offset=8)], [], lineno=151, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=155, col_offset=8), 'fail', Load(), lineno=155, col_offset=8), [BinOp(Str('TypeError expected for raising %s', lineno=155, col_offset=18), Mod(), Call(Name('type', Load(), lineno=155, col_offset=56), [Name('object_', Load(), lineno=155, col_offset=61)], [], None, None, lineno=155, col_offset=56), lineno=155, col_offset=18)], [], None, None, lineno=155, col_offset=8), lineno=155, col_offset=8)], [], lineno=149, col_offset=4), FunctionDef('catch_fails', arguments([Name('self', Param(), lineno=157, col_offset=20), Name('object_', Param(), lineno=157, col_offset=26)], None, None, []), [Expr(Str("Catching 'object_' should raise a TypeError.", lineno=158, col_offset=8), lineno=158, col_offset=8), TryExcept([TryExcept([Raise(Name('StandardError', Load(), lineno=161, col_offset=22), None, None, lineno=161, col_offset=16)], [ExceptHandler(Name('object_', Load(), lineno=162, col_offset=19), None, [Pass( lineno=163, col_offset=16)], lineno=162, col_offset=12)], [], lineno=160, col_offset=12)], [ExceptHandler(Name('TypeError', Load(), lineno=164, col_offset=15), None, [Pass( lineno=165, col_offset=12)], lineno=164, col_offset=8), ExceptHandler(Name('StandardError', Load(), lineno=166, col_offset=15), None, [Expr(Call(Attribute(Name('self', Load(), lineno=167, col_offset=12), 'fail', Load(), lineno=167, col_offset=12), [BinOp(Str('TypeError expected when catching %s', lineno=167, col_offset=22), Mod(), Call(Name('type', Load(), lineno=167, col_offset=62), [Name('object_', Load(), lineno=167, col_offset=67)], [], None, None, lineno=167, col_offset=62), lineno=167, col_offset=22)], [], None, None, lineno=167, col_offset=12), lineno=167, col_offset=12)], lineno=166, col_offset=8)], [], lineno=159, col_offset=8), TryExcept([TryExcept([Raise(Name('StandardError', Load(), lineno=171, col_offset=22), None, None, lineno=171, col_offset=16)], [ExceptHandler(Tuple([Name('object_', Load(), lineno=172, col_offset=20)], Load(), lineno=172, col_offset=20), None, [Pass( lineno=173, col_offset=16)], lineno=172, col_offset=12)], [], lineno=170, col_offset=12)], [ExceptHandler(Name('TypeError', Load(), lineno=174, col_offset=15), None, [Return(None, lineno=175, col_offset=12)], lineno=174, col_offset=8), ExceptHandler(Name('StandardError', Load(), lineno=176, col_offset=15), None, [Expr(Call(Attribute(Name('self', Load(), lineno=177, col_offset=12), 'fail', Load(), lineno=177, col_offset=12), [BinOp(Str('TypeError expected when catching %s as specified in a tuple', lineno=177, col_offset=22), Mod(), Call(Name('type', Load(), lineno=178, col_offset=34), [Name('object_', Load(), lineno=178, col_offset=39)], [], None, None, lineno=178, col_offset=34), lineno=177, col_offset=22)], [], None, None, lineno=177, col_offset=12), lineno=177, col_offset=12)], lineno=176, col_offset=8)], [], lineno=169, col_offset=8)], [], lineno=157, col_offset=4), FunctionDef('test_raise_classic', arguments([Name('self', Param(), lineno=181, col_offset=27)], None, None, []), [ClassDef('ClassicClass', [], [Pass( lineno=184, col_offset=12)], [], lineno=183, col_offset=8), TryExcept([Raise(Name('ClassicClass', Load(), lineno=186, col_offset=18), None, None, lineno=186, col_offset=12)], [ExceptHandler(Name('ClassicClass', Load(), lineno=187, col_offset=15), None, [Pass( lineno=188, col_offset=12)], lineno=187, col_offset=8), ExceptHandler(None, None, [Expr(Call(Attribute(Name('self', Load(), lineno=190, col_offset=12), 'fail', Load(), lineno=190, col_offset=12), [Str('unable to raise classic class', lineno=190, col_offset=22)], [], None, None, lineno=190, col_offset=12), lineno=190, col_offset=12)], lineno=189, col_offset=8)], [], lineno=185, col_offset=8), TryExcept([Raise(Call(Name('ClassicClass', Load(), lineno=192, col_offset=18), [], [], None, None, lineno=192, col_offset=18), None, None, lineno=192, col_offset=12)], [ExceptHandler(Name('ClassicClass', Load(), lineno=193, col_offset=15), None, [Pass( lineno=194, col_offset=12)], lineno=193, col_offset=8), ExceptHandler(None, None, [Expr(Call(Attribute(Name('self', Load(), lineno=196, col_offset=12), 'fail', Load(), lineno=196, col_offset=12), [Str('unable to raise classic class instance', lineno=196, col_offset=22)], [], None, None, lineno=196, col_offset=12), lineno=196, col_offset=12)], lineno=195, col_offset=8)], [], lineno=191, col_offset=8)], [Name('ignore_deprecation_warnings', Load(), lineno=180, col_offset=5)], lineno=180, col_offset=4), FunctionDef('test_raise_new_style_non_exception', arguments([Name('self', Param(), lineno=198, col_offset=43)], None, None, []), [ClassDef('NewStyleClass', [Name('object', Load(), lineno=203, col_offset=28)], [Pass( lineno=204, col_offset=12)], [], lineno=203, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=205, col_offset=8), 'raise_fails', Load(), lineno=205, col_offset=8), [Name('NewStyleClass', Load(), lineno=205, col_offset=25)], [], None, None, lineno=205, col_offset=8), lineno=205, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=206, col_offset=8), 'raise_fails', Load(), lineno=206, col_offset=8), [Call(Name('NewStyleClass', Load(), lineno=206, col_offset=25), [], [], None, None, lineno=206, col_offset=25)], [], None, None, lineno=206, col_offset=8), lineno=206, col_offset=8)], [], lineno=198, col_offset=4), FunctionDef('test_raise_string', arguments([Name('self', Param(), lineno=208, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=210, col_offset=8), 'raise_fails', Load(), lineno=210, col_offset=8), [Str('spam', lineno=210, col_offset=25)], [], None, None, lineno=210, col_offset=8), lineno=210, col_offset=8)], [], lineno=208, col_offset=4), FunctionDef('test_catch_string', arguments([Name('self', Param(), lineno=212, col_offset=26)], None, None, []), [With(Call(Attribute(Name('warnings', Load(), lineno=214, col_offset=13), 'catch_warnings', Load(), lineno=214, col_offset=13), [], [], None, None, lineno=214, col_offset=13), None, [Expr(Call(Attribute(Name('warnings', Load(), lineno=215, col_offset=12), 'resetwarnings', Load(), lineno=215, col_offset=12), [], [], None, None, lineno=215, col_offset=12), lineno=215, col_offset=12), Expr(Call(Attribute(Name('warnings', Load(), lineno=216, col_offset=12), 'filterwarnings', Load(), lineno=216, col_offset=12), [Str('error', lineno=216, col_offset=36)], [], None, None, lineno=216, col_offset=12), lineno=216, col_offset=12), Assign([Name('str_exc', Store(), lineno=217, col_offset=12)], Str('spam', lineno=217, col_offset=22), lineno=217, col_offset=12), With(Call(Attribute(Name('self', Load(), lineno=218, col_offset=17), 'assertRaises', Load(), lineno=218, col_offset=17), [Name('DeprecationWarning', Load(), lineno=218, col_offset=35)], [], None, None, lineno=218, col_offset=17), None, [TryExcept([Raise(Name('StandardError', Load(), lineno=220, col_offset=26), None, None, lineno=220, col_offset=20)], [ExceptHandler(Name('str_exc', Load(), lineno=221, col_offset=23), None, [Pass( lineno=222, col_offset=20)], lineno=221, col_offset=16)], [], lineno=219, col_offset=16)], lineno=218, col_offset=17), With(Call(Attribute(Name('self', Load(), lineno=226, col_offset=17), 'assertRaises', Load(), lineno=226, col_offset=17), [Name('DeprecationWarning', Load(), lineno=226, col_offset=35)], [], None, None, lineno=226, col_offset=17), None, [TryExcept([Raise(Name('StandardError', Load(), lineno=228, col_offset=26), None, None, lineno=228, col_offset=20)], [ExceptHandler(Tuple([Name('AssertionError', Load(), lineno=229, col_offset=24), Name('str_exc', Load(), lineno=229, col_offset=40)], Load(), lineno=229, col_offset=24), None, [Pass( lineno=230, col_offset=20)], lineno=229, col_offset=16)], [], lineno=227, col_offset=16)], lineno=226, col_offset=17)], lineno=214, col_offset=13)], [], lineno=212, col_offset=4)], [], lineno=145, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Name('run_unittest', Load(), lineno=234, col_offset=4), [Name('ExceptionClassTests', Load(), lineno=234, col_offset=17), Name('UsageTests', Load(), lineno=234, col_offset=38)], [], None, None, lineno=234, col_offset=4), lineno=234, col_offset=4)], [], lineno=233, col_offset=0), If(Compare(Name('__name__', Load(), lineno=238, col_offset=3), [Eq()], [Str('__main__', lineno=238, col_offset=15)], lineno=238, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=239, col_offset=4), [], [], None, None, lineno=239, col_offset=4), lineno=239, col_offset=4)], [], lineno=238, col_offset=0)])
