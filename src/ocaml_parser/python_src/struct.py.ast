Module([Expr(Str('Rudimentary parser for C struct definitions.', lineno=1, col_offset=0), lineno=1, col_offset=0), Import([alias('re', None)], lineno=3, col_offset=0), Assign([Name('PyObject_HEAD', Store(), lineno=5, col_offset=0)], Str('PyObject_HEAD', lineno=5, col_offset=16), lineno=5, col_offset=0), Assign([Name('PyObject_VAR_HEAD', Store(), lineno=6, col_offset=0)], Str('PyObject_VAR_HEAD', lineno=6, col_offset=20), lineno=6, col_offset=0), Assign([Name('rx_name', Store(), lineno=8, col_offset=0)], Call(Attribute(Name('re', Load(), lineno=8, col_offset=10), 'compile', Load(), lineno=8, col_offset=10), [Str('} (\\w+);', lineno=8, col_offset=21)], [], None, None, lineno=8, col_offset=10), lineno=8, col_offset=0), ClassDef('Struct', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=11, col_offset=17), Name('name', Param(), lineno=11, col_offset=23), Name('head', Param(), lineno=11, col_offset=29), Name('members', Param(), lineno=11, col_offset=35)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=12, col_offset=8), 'name', Store(), lineno=12, col_offset=8)], Name('name', Load(), lineno=12, col_offset=20), lineno=12, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=13, col_offset=8), 'head', Store(), lineno=13, col_offset=8)], Name('head', Load(), lineno=13, col_offset=20), lineno=13, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=14, col_offset=8), 'members', Store(), lineno=14, col_offset=8)], Name('members', Load(), lineno=14, col_offset=23), lineno=14, col_offset=8)], [], lineno=11, col_offset=4), FunctionDef('get_type', arguments([Name('self', Param(), lineno=16, col_offset=17), Name('name', Param(), lineno=16, col_offset=23)], None, None, []), [For(Tuple([Name('_name', Store(), lineno=17, col_offset=12), Name('type', Store(), lineno=17, col_offset=19)], Store(), lineno=17, col_offset=12), Attribute(Name('self', Load(), lineno=17, col_offset=27), 'members', Load(), lineno=17, col_offset=27), [If(Compare(Name('name', Load(), lineno=18, col_offset=15), [Eq()], [Name('_name', Load(), lineno=18, col_offset=23)], lineno=18, col_offset=15), [Return(Name('type', Load(), lineno=19, col_offset=23), lineno=19, col_offset=16)], [], lineno=18, col_offset=12)], [], lineno=17, col_offset=8), Raise(Name('ValueError', Load(), lineno=20, col_offset=14), BinOp(Str('no member named %s', lineno=20, col_offset=26), Mod(), Name('name', Load(), lineno=20, col_offset=49), lineno=20, col_offset=26), None, lineno=20, col_offset=8)], [], lineno=16, col_offset=4)], [], lineno=10, col_offset=0), FunctionDef('parse', arguments([Name('s', Param(), lineno=22, col_offset=10)], None, None, []), [Expr(Str('Parse a C struct definition.\n\n    The parser is very restricted in what it will accept.\n    ', lineno=26, col_offset=-1), lineno=26, col_offset=-1), Assign([Name('lines', Store(), lineno=28, col_offset=4)], Call(Name('filter', Load(), lineno=28, col_offset=12), [Name('None', Load(), lineno=28, col_offset=19), Call(Attribute(Name('s', Load(), lineno=28, col_offset=25), 'split', Load(), lineno=28, col_offset=25), [Str('\n', lineno=28, col_offset=33)], [], None, None, lineno=28, col_offset=25)], [], None, None, lineno=28, col_offset=12), lineno=28, col_offset=4), Assert(Compare(Call(Attribute(Subscript(Name('lines', Load(), lineno=29, col_offset=11), Index(Num(0, lineno=29, col_offset=17)), Load(), lineno=29, col_offset=11), 'strip', Load(), lineno=29, col_offset=11), [], [], None, None, lineno=29, col_offset=11), [Eq()], [Str('typedef struct {', lineno=29, col_offset=31)], lineno=29, col_offset=11), None, lineno=29, col_offset=4), Assign([Name('pyhead', Store(), lineno=30, col_offset=4)], Call(Attribute(Subscript(Name('lines', Load(), lineno=30, col_offset=13), Index(Num(1, lineno=30, col_offset=19)), Load(), lineno=30, col_offset=13), 'strip', Load(), lineno=30, col_offset=13), [], [], None, None, lineno=30, col_offset=13), lineno=30, col_offset=4), Assert(BoolOp(And(), [Call(Attribute(Name('pyhead', Load(), lineno=31, col_offset=12), 'startswith', Load(), lineno=31, col_offset=12), [Str('PyObject', lineno=31, col_offset=30)], [], None, None, lineno=31, col_offset=12), Call(Attribute(Name('pyhead', Load(), lineno=32, col_offset=12), 'endswith', Load(), lineno=32, col_offset=12), [Str('HEAD', lineno=32, col_offset=28)], [], None, None, lineno=32, col_offset=12)], lineno=31, col_offset=12), None, lineno=31, col_offset=4), Assign([Name('members', Store(), lineno=33, col_offset=4)], List([], Load(), lineno=33, col_offset=14), lineno=33, col_offset=4), For(Name('line', Store(), lineno=34, col_offset=8), Subscript(Name('lines', Load(), lineno=34, col_offset=16), Slice(Num(2, lineno=34, col_offset=22), None, None), Load(), lineno=34, col_offset=16), [Assign([Name('line', Store(), lineno=35, col_offset=8)], Call(Attribute(Name('line', Load(), lineno=35, col_offset=15), 'strip', Load(), lineno=35, col_offset=15), [], [], None, None, lineno=35, col_offset=15), lineno=35, col_offset=8), If(Call(Attribute(Name('line', Load(), lineno=36, col_offset=11), 'startswith', Load(), lineno=36, col_offset=11), [Str('}', lineno=36, col_offset=27)], [], None, None, lineno=36, col_offset=11), [Break( lineno=37, col_offset=12)], [], lineno=36, col_offset=8), Assert(Call(Attribute(Name('line', Load(), lineno=39, col_offset=15), 'endswith', Load(), lineno=39, col_offset=15), [Str(';', lineno=39, col_offset=29)], [], None, None, lineno=39, col_offset=15), None, lineno=39, col_offset=8), Assign([Name('line', Store(), lineno=40, col_offset=8)], Subscript(Name('line', Load(), lineno=40, col_offset=15), Slice(None, Num(-1, lineno=40, col_offset=22), None), Load(), lineno=40, col_offset=15), lineno=40, col_offset=8), Assign([Name('words', Store(), lineno=41, col_offset=8)], Call(Attribute(Name('line', Load(), lineno=41, col_offset=16), 'split', Load(), lineno=41, col_offset=16), [], [], None, None, lineno=41, col_offset=16), lineno=41, col_offset=8), Assign([Name('name', Store(), lineno=42, col_offset=8)], Subscript(Name('words', Load(), lineno=42, col_offset=15), Index(Num(-1, lineno=42, col_offset=22)), Load(), lineno=42, col_offset=15), lineno=42, col_offset=8), Assign([Name('type', Store(), lineno=43, col_offset=8)], Call(Attribute(Str(' ', lineno=43, col_offset=15), 'join', Load(), lineno=43, col_offset=15), [Subscript(Name('words', Load(), lineno=43, col_offset=24), Slice(None, Num(-1, lineno=43, col_offset=32), None), Load(), lineno=43, col_offset=24)], [], None, None, lineno=43, col_offset=15), lineno=43, col_offset=8), If(Compare(Subscript(Name('name', Load(), lineno=44, col_offset=11), Index(Num(0, lineno=44, col_offset=16)), Load(), lineno=44, col_offset=11), [Eq()], [Str('*', lineno=44, col_offset=22)], lineno=44, col_offset=11), [Assign([Name('name', Store(), lineno=45, col_offset=12)], Subscript(Name('name', Load(), lineno=45, col_offset=19), Slice(Num(1, lineno=45, col_offset=24), None, None), Load(), lineno=45, col_offset=19), lineno=45, col_offset=12), AugAssign(Name('type', Store(), lineno=46, col_offset=12), Add(), Str(' *', lineno=46, col_offset=20), lineno=46, col_offset=12)], [], lineno=44, col_offset=8), Expr(Call(Attribute(Name('members', Load(), lineno=47, col_offset=8), 'append', Load(), lineno=47, col_offset=8), [Tuple([Name('name', Load(), lineno=47, col_offset=24), Name('type', Load(), lineno=47, col_offset=30)], Load(), lineno=47, col_offset=24)], [], None, None, lineno=47, col_offset=8), lineno=47, col_offset=8)], [], lineno=34, col_offset=4), Assign([Name('name', Store(), lineno=48, col_offset=4)], Name('None', Load(), lineno=48, col_offset=11), lineno=48, col_offset=4), Assign([Name('mo', Store(), lineno=49, col_offset=4)], Call(Attribute(Name('rx_name', Load(), lineno=49, col_offset=9), 'search', Load(), lineno=49, col_offset=9), [Name('line', Load(), lineno=49, col_offset=24)], [], None, None, lineno=49, col_offset=9), lineno=49, col_offset=4), Assert(Compare(Name('mo', Load(), lineno=50, col_offset=11), [IsNot()], [Name('None', Load(), lineno=50, col_offset=21)], lineno=50, col_offset=11), None, lineno=50, col_offset=4), Assign([Name('name', Store(), lineno=51, col_offset=4)], Call(Attribute(Name('mo', Load(), lineno=51, col_offset=11), 'group', Load(), lineno=51, col_offset=11), [Num(1, lineno=51, col_offset=20)], [], None, None, lineno=51, col_offset=11), lineno=51, col_offset=4), Return(Call(Name('Struct', Load(), lineno=52, col_offset=11), [Name('name', Load(), lineno=52, col_offset=18), Name('pyhead', Load(), lineno=52, col_offset=24), Name('members', Load(), lineno=52, col_offset=32)], [], None, None, lineno=52, col_offset=11), lineno=52, col_offset=4)], [], lineno=22, col_offset=0)])
