Module([Import([alias('os', None)], lineno=1, col_offset=0), ImportFrom('Tkinter', [alias('*', None)], 0, lineno=2, col_offset=0), Import([alias('tkMessageBox', None)], lineno=3, col_offset=0), ClassDef('FileList', [], [ImportFrom('idlelib.EditorWindow', [alias('EditorWindow', None)], 0, lineno=9, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=11, col_offset=17), Name('root', Param(), lineno=11, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=12, col_offset=8), 'root', Store(), lineno=12, col_offset=8)], Name('root', Load(), lineno=12, col_offset=20), lineno=12, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=13, col_offset=8), 'dict', Store(), lineno=13, col_offset=8)], Dict([], [], lineno=13, col_offset=20), lineno=13, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=14, col_offset=8), 'inversedict', Store(), lineno=14, col_offset=8)], Dict([], [], lineno=14, col_offset=27), lineno=14, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=15, col_offset=8), 'vars', Store(), lineno=15, col_offset=8)], Dict([], [], lineno=15, col_offset=20), lineno=15, col_offset=8)], [], lineno=11, col_offset=4), FunctionDef('open', arguments([Name('self', Param(), lineno=17, col_offset=13), Name('filename', Param(), lineno=17, col_offset=19), Name('action', Param(), lineno=17, col_offset=29)], None, None, [Name('None', Load(), lineno=17, col_offset=36)]), [Assert(Name('filename', Load(), lineno=18, col_offset=15), None, lineno=18, col_offset=8), Assign([Name('filename', Store(), lineno=19, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=19, col_offset=19), 'canonize', Load(), lineno=19, col_offset=19), [Name('filename', Load(), lineno=19, col_offset=33)], [], None, None, lineno=19, col_offset=19), lineno=19, col_offset=8), If(Call(Attribute(Attribute(Name('os', Load(), lineno=20, col_offset=11), 'path', Load(), lineno=20, col_offset=11), 'isdir', Load(), lineno=20, col_offset=11), [Name('filename', Load(), lineno=20, col_offset=25)], [], None, None, lineno=20, col_offset=11), [Expr(Call(Attribute(Name('tkMessageBox', Load(), lineno=22, col_offset=12), 'showerror', Load(), lineno=22, col_offset=12), [Str('File Error', lineno=23, col_offset=16), BinOp(Str('%r is a directory.', lineno=24, col_offset=16), Mod(), Tuple([Name('filename', Load(), lineno=24, col_offset=40)], Load(), lineno=24, col_offset=40), lineno=24, col_offset=16)], [keyword('master', Attribute(Name('self', Load(), lineno=25, col_offset=23), 'root', Load(), lineno=25, col_offset=23))], None, None, lineno=22, col_offset=12), lineno=22, col_offset=12), Return(Name('None', Load(), lineno=26, col_offset=19), lineno=26, col_offset=12)], [], lineno=20, col_offset=8), Assign([Name('key', Store(), lineno=27, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=27, col_offset=14), 'path', Load(), lineno=27, col_offset=14), 'normcase', Load(), lineno=27, col_offset=14), [Name('filename', Load(), lineno=27, col_offset=31)], [], None, None, lineno=27, col_offset=14), lineno=27, col_offset=8), If(Compare(Name('key', Load(), lineno=28, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=28, col_offset=18), 'dict', Load(), lineno=28, col_offset=18)], lineno=28, col_offset=11), [Assign([Name('edit', Store(), lineno=29, col_offset=12)], Subscript(Attribute(Name('self', Load(), lineno=29, col_offset=19), 'dict', Load(), lineno=29, col_offset=19), Index(Name('key', Load(), lineno=29, col_offset=29)), Load(), lineno=29, col_offset=19), lineno=29, col_offset=12), Expr(Call(Attribute(Attribute(Name('edit', Load(), lineno=30, col_offset=12), 'top', Load(), lineno=30, col_offset=12), 'wakeup', Load(), lineno=30, col_offset=12), [], [], None, None, lineno=30, col_offset=12), lineno=30, col_offset=12), Return(Name('edit', Load(), lineno=31, col_offset=19), lineno=31, col_offset=12)], [], lineno=28, col_offset=8), If(Name('action', Load(), lineno=32, col_offset=11), [Return(Call(Name('action', Load(), lineno=34, col_offset=19), [Name('filename', Load(), lineno=34, col_offset=26)], [], None, None, lineno=34, col_offset=19), lineno=34, col_offset=12)], [Return(Call(Attribute(Name('self', Load(), lineno=36, col_offset=19), 'EditorWindow', Load(), lineno=36, col_offset=19), [Name('self', Load(), lineno=36, col_offset=37), Name('filename', Load(), lineno=36, col_offset=43), Name('key', Load(), lineno=36, col_offset=53)], [], None, None, lineno=36, col_offset=19), lineno=36, col_offset=12)], lineno=32, col_offset=8)], [], lineno=17, col_offset=4), FunctionDef('gotofileline', arguments([Name('self', Param(), lineno=38, col_offset=21), Name('filename', Param(), lineno=38, col_offset=27), Name('lineno', Param(), lineno=38, col_offset=37)], None, None, [Name('None', Load(), lineno=38, col_offset=44)]), [Assign([Name('edit', Store(), lineno=39, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=39, col_offset=15), 'open', Load(), lineno=39, col_offset=15), [Name('filename', Load(), lineno=39, col_offset=25)], [], None, None, lineno=39, col_offset=15), lineno=39, col_offset=8), If(BoolOp(And(), [Compare(Name('edit', Load(), lineno=40, col_offset=11), [IsNot()], [Name('None', Load(), lineno=40, col_offset=23)], lineno=40, col_offset=11), Compare(Name('lineno', Load(), lineno=40, col_offset=32), [IsNot()], [Name('None', Load(), lineno=40, col_offset=46)], lineno=40, col_offset=32)], lineno=40, col_offset=11), [Expr(Call(Attribute(Name('edit', Load(), lineno=41, col_offset=12), 'gotoline', Load(), lineno=41, col_offset=12), [Name('lineno', Load(), lineno=41, col_offset=26)], [], None, None, lineno=41, col_offset=12), lineno=41, col_offset=12)], [], lineno=40, col_offset=8)], [], lineno=38, col_offset=4), FunctionDef('new', arguments([Name('self', Param(), lineno=43, col_offset=12), Name('filename', Param(), lineno=43, col_offset=18)], None, None, [Name('None', Load(), lineno=43, col_offset=27)]), [Return(Call(Attribute(Name('self', Load(), lineno=44, col_offset=15), 'EditorWindow', Load(), lineno=44, col_offset=15), [Name('self', Load(), lineno=44, col_offset=33), Name('filename', Load(), lineno=44, col_offset=39)], [], None, None, lineno=44, col_offset=15), lineno=44, col_offset=8)], [], lineno=43, col_offset=4), FunctionDef('close_all_callback', arguments([Name('self', Param(), lineno=46, col_offset=27), Name('event', Param(), lineno=46, col_offset=33)], None, None, []), [For(Name('edit', Store(), lineno=47, col_offset=12), Call(Attribute(Attribute(Name('self', Load(), lineno=47, col_offset=20), 'inversedict', Load(), lineno=47, col_offset=20), 'keys', Load(), lineno=47, col_offset=20), [], [], None, None, lineno=47, col_offset=20), [Assign([Name('reply', Store(), lineno=48, col_offset=12)], Call(Attribute(Name('edit', Load(), lineno=48, col_offset=20), 'close', Load(), lineno=48, col_offset=20), [], [], None, None, lineno=48, col_offset=20), lineno=48, col_offset=12), If(Compare(Name('reply', Load(), lineno=49, col_offset=15), [Eq()], [Str('cancel', lineno=49, col_offset=24)], lineno=49, col_offset=15), [Break( lineno=50, col_offset=16)], [], lineno=49, col_offset=12)], [], lineno=47, col_offset=8), Return(Str('break', lineno=51, col_offset=15), lineno=51, col_offset=8)], [], lineno=46, col_offset=4), FunctionDef('unregister_maybe_terminate', arguments([Name('self', Param(), lineno=53, col_offset=35), Name('edit', Param(), lineno=53, col_offset=41)], None, None, []), [TryExcept([Assign([Name('key', Store(), lineno=55, col_offset=12)], Subscript(Attribute(Name('self', Load(), lineno=55, col_offset=18), 'inversedict', Load(), lineno=55, col_offset=18), Index(Name('edit', Load(), lineno=55, col_offset=35)), Load(), lineno=55, col_offset=18), lineno=55, col_offset=12)], [ExceptHandler(Name('KeyError', Load(), lineno=56, col_offset=15), None, [Print(None, [Str("Don't know this EditorWindow object.  (close)", lineno=57, col_offset=18)], True, lineno=57, col_offset=12), Return(None, lineno=58, col_offset=12)], lineno=56, col_offset=8)], [], lineno=54, col_offset=8), If(Name('key', Load(), lineno=59, col_offset=11), [Delete([Subscript(Attribute(Name('self', Load(), lineno=60, col_offset=16), 'dict', Load(), lineno=60, col_offset=16), Index(Name('key', Load(), lineno=60, col_offset=26)), Del(), lineno=60, col_offset=16)], lineno=60, col_offset=12)], [], lineno=59, col_offset=8), Delete([Subscript(Attribute(Name('self', Load(), lineno=61, col_offset=12), 'inversedict', Load(), lineno=61, col_offset=12), Index(Name('edit', Load(), lineno=61, col_offset=29)), Del(), lineno=61, col_offset=12)], lineno=61, col_offset=8), If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=62, col_offset=15), 'inversedict', Load(), lineno=62, col_offset=15), lineno=62, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=63, col_offset=12), 'root', Load(), lineno=63, col_offset=12), 'quit', Load(), lineno=63, col_offset=12), [], [], None, None, lineno=63, col_offset=12), lineno=63, col_offset=12)], [], lineno=62, col_offset=8)], [], lineno=53, col_offset=4), FunctionDef('filename_changed_edit', arguments([Name('self', Param(), lineno=65, col_offset=30), Name('edit', Param(), lineno=65, col_offset=36)], None, None, []), [Expr(Call(Attribute(Name('edit', Load(), lineno=66, col_offset=8), 'saved_change_hook', Load(), lineno=66, col_offset=8), [], [], None, None, lineno=66, col_offset=8), lineno=66, col_offset=8), TryExcept([Assign([Name('key', Store(), lineno=68, col_offset=12)], Subscript(Attribute(Name('self', Load(), lineno=68, col_offset=18), 'inversedict', Load(), lineno=68, col_offset=18), Index(Name('edit', Load(), lineno=68, col_offset=35)), Load(), lineno=68, col_offset=18), lineno=68, col_offset=12)], [ExceptHandler(Name('KeyError', Load(), lineno=69, col_offset=15), None, [Print(None, [Str("Don't know this EditorWindow object.  (rename)", lineno=70, col_offset=18)], True, lineno=70, col_offset=12), Return(None, lineno=71, col_offset=12)], lineno=69, col_offset=8)], [], lineno=67, col_offset=8), Assign([Name('filename', Store(), lineno=72, col_offset=8)], Attribute(Attribute(Name('edit', Load(), lineno=72, col_offset=19), 'io', Load(), lineno=72, col_offset=19), 'filename', Load(), lineno=72, col_offset=19), lineno=72, col_offset=8), If(UnaryOp(Not(), Name('filename', Load(), lineno=73, col_offset=15), lineno=73, col_offset=11), [If(Name('key', Load(), lineno=74, col_offset=15), [Delete([Subscript(Attribute(Name('self', Load(), lineno=75, col_offset=20), 'dict', Load(), lineno=75, col_offset=20), Index(Name('key', Load(), lineno=75, col_offset=30)), Del(), lineno=75, col_offset=20)], lineno=75, col_offset=16)], [], lineno=74, col_offset=12), Assign([Subscript(Attribute(Name('self', Load(), lineno=76, col_offset=12), 'inversedict', Load(), lineno=76, col_offset=12), Index(Name('edit', Load(), lineno=76, col_offset=29)), Store(), lineno=76, col_offset=12)], Name('None', Load(), lineno=76, col_offset=37), lineno=76, col_offset=12), Return(None, lineno=77, col_offset=12)], [], lineno=73, col_offset=8), Assign([Name('filename', Store(), lineno=78, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=78, col_offset=19), 'canonize', Load(), lineno=78, col_offset=19), [Name('filename', Load(), lineno=78, col_offset=33)], [], None, None, lineno=78, col_offset=19), lineno=78, col_offset=8), Assign([Name('newkey', Store(), lineno=79, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=79, col_offset=17), 'path', Load(), lineno=79, col_offset=17), 'normcase', Load(), lineno=79, col_offset=17), [Name('filename', Load(), lineno=79, col_offset=34)], [], None, None, lineno=79, col_offset=17), lineno=79, col_offset=8), If(Compare(Name('newkey', Load(), lineno=80, col_offset=11), [Eq()], [Name('key', Load(), lineno=80, col_offset=21)], lineno=80, col_offset=11), [Return(None, lineno=81, col_offset=12)], [], lineno=80, col_offset=8), If(Compare(Name('newkey', Load(), lineno=82, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=82, col_offset=21), 'dict', Load(), lineno=82, col_offset=21)], lineno=82, col_offset=11), [Assign([Name('conflict', Store(), lineno=83, col_offset=12)], Subscript(Attribute(Name('self', Load(), lineno=83, col_offset=23), 'dict', Load(), lineno=83, col_offset=23), Index(Name('newkey', Load(), lineno=83, col_offset=33)), Load(), lineno=83, col_offset=23), lineno=83, col_offset=12), Assign([Subscript(Attribute(Name('self', Load(), lineno=84, col_offset=12), 'inversedict', Load(), lineno=84, col_offset=12), Index(Name('conflict', Load(), lineno=84, col_offset=29)), Store(), lineno=84, col_offset=12)], Name('None', Load(), lineno=84, col_offset=41), lineno=84, col_offset=12), Expr(Call(Attribute(Name('tkMessageBox', Load(), lineno=85, col_offset=12), 'showerror', Load(), lineno=85, col_offset=12), [Str('Name Conflict', lineno=86, col_offset=16), BinOp(Str('You now have multiple edit windows open for %r', lineno=87, col_offset=16), Mod(), Tuple([Name('filename', Load(), lineno=87, col_offset=68)], Load(), lineno=87, col_offset=68), lineno=87, col_offset=16)], [keyword('master', Attribute(Name('self', Load(), lineno=88, col_offset=23), 'root', Load(), lineno=88, col_offset=23))], None, None, lineno=85, col_offset=12), lineno=85, col_offset=12)], [], lineno=82, col_offset=8), Assign([Subscript(Attribute(Name('self', Load(), lineno=89, col_offset=8), 'dict', Load(), lineno=89, col_offset=8), Index(Name('newkey', Load(), lineno=89, col_offset=18)), Store(), lineno=89, col_offset=8)], Name('edit', Load(), lineno=89, col_offset=28), lineno=89, col_offset=8), Assign([Subscript(Attribute(Name('self', Load(), lineno=90, col_offset=8), 'inversedict', Load(), lineno=90, col_offset=8), Index(Name('edit', Load(), lineno=90, col_offset=25)), Store(), lineno=90, col_offset=8)], Name('newkey', Load(), lineno=90, col_offset=33), lineno=90, col_offset=8), If(Name('key', Load(), lineno=91, col_offset=11), [TryExcept([Delete([Subscript(Attribute(Name('self', Load(), lineno=93, col_offset=20), 'dict', Load(), lineno=93, col_offset=20), Index(Name('key', Load(), lineno=93, col_offset=30)), Del(), lineno=93, col_offset=20)], lineno=93, col_offset=16)], [ExceptHandler(Name('KeyError', Load(), lineno=94, col_offset=19), None, [Pass( lineno=95, col_offset=16)], lineno=94, col_offset=12)], [], lineno=92, col_offset=12)], [], lineno=91, col_offset=8)], [], lineno=65, col_offset=4), FunctionDef('canonize', arguments([Name('self', Param(), lineno=97, col_offset=17), Name('filename', Param(), lineno=97, col_offset=23)], None, None, []), [If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=98, col_offset=15), 'path', Load(), lineno=98, col_offset=15), 'isabs', Load(), lineno=98, col_offset=15), [Name('filename', Load(), lineno=98, col_offset=29)], [], None, None, lineno=98, col_offset=15), lineno=98, col_offset=11), [TryExcept([Assign([Name('pwd', Store(), lineno=100, col_offset=16)], Call(Attribute(Name('os', Load(), lineno=100, col_offset=22), 'getcwd', Load(), lineno=100, col_offset=22), [], [], None, None, lineno=100, col_offset=22), lineno=100, col_offset=16)], [ExceptHandler(Attribute(Name('os', Load(), lineno=101, col_offset=19), 'error', Load(), lineno=101, col_offset=19), None, [Pass( lineno=102, col_offset=16)], lineno=101, col_offset=12)], [Assign([Name('filename', Store(), lineno=104, col_offset=16)], Call(Attribute(Attribute(Name('os', Load(), lineno=104, col_offset=27), 'path', Load(), lineno=104, col_offset=27), 'join', Load(), lineno=104, col_offset=27), [Name('pwd', Load(), lineno=104, col_offset=40), Name('filename', Load(), lineno=104, col_offset=45)], [], None, None, lineno=104, col_offset=27), lineno=104, col_offset=16)], lineno=99, col_offset=12)], [], lineno=98, col_offset=8), Return(Call(Attribute(Attribute(Name('os', Load(), lineno=105, col_offset=15), 'path', Load(), lineno=105, col_offset=15), 'normpath', Load(), lineno=105, col_offset=15), [Name('filename', Load(), lineno=105, col_offset=32)], [], None, None, lineno=105, col_offset=15), lineno=105, col_offset=8)], [], lineno=97, col_offset=4)], [], lineno=6, col_offset=0), FunctionDef('_test', arguments([], None, None, []), [ImportFrom('idlelib.EditorWindow', [alias('fixwordbreaks', None)], 0, lineno=109, col_offset=4), Import([alias('sys', None)], lineno=110, col_offset=4), Assign([Name('root', Store(), lineno=111, col_offset=4)], Call(Name('Tk', Load(), lineno=111, col_offset=11), [], [], None, None, lineno=111, col_offset=11), lineno=111, col_offset=4), Expr(Call(Name('fixwordbreaks', Load(), lineno=112, col_offset=4), [Name('root', Load(), lineno=112, col_offset=18)], [], None, None, lineno=112, col_offset=4), lineno=112, col_offset=4), Expr(Call(Attribute(Name('root', Load(), lineno=113, col_offset=4), 'withdraw', Load(), lineno=113, col_offset=4), [], [], None, None, lineno=113, col_offset=4), lineno=113, col_offset=4), Assign([Name('flist', Store(), lineno=114, col_offset=4)], Call(Name('FileList', Load(), lineno=114, col_offset=12), [Name('root', Load(), lineno=114, col_offset=21)], [], None, None, lineno=114, col_offset=12), lineno=114, col_offset=4), If(Subscript(Attribute(Name('sys', Load(), lineno=115, col_offset=7), 'argv', Load(), lineno=115, col_offset=7), Slice(Num(1, lineno=115, col_offset=16), None, None), Load(), lineno=115, col_offset=7), [For(Name('filename', Store(), lineno=116, col_offset=12), Subscript(Attribute(Name('sys', Load(), lineno=116, col_offset=24), 'argv', Load(), lineno=116, col_offset=24), Slice(Num(1, lineno=116, col_offset=33), None, None), Load(), lineno=116, col_offset=24), [Expr(Call(Attribute(Name('flist', Load(), lineno=117, col_offset=12), 'open', Load(), lineno=117, col_offset=12), [Name('filename', Load(), lineno=117, col_offset=23)], [], None, None, lineno=117, col_offset=12), lineno=117, col_offset=12)], [], lineno=116, col_offset=8)], [Expr(Call(Attribute(Name('flist', Load(), lineno=119, col_offset=8), 'new', Load(), lineno=119, col_offset=8), [], [], None, None, lineno=119, col_offset=8), lineno=119, col_offset=8)], lineno=115, col_offset=4), If(Attribute(Name('flist', Load(), lineno=120, col_offset=7), 'inversedict', Load(), lineno=120, col_offset=7), [Expr(Call(Attribute(Name('root', Load(), lineno=121, col_offset=8), 'mainloop', Load(), lineno=121, col_offset=8), [], [], None, None, lineno=121, col_offset=8), lineno=121, col_offset=8)], [], lineno=120, col_offset=4)], [], lineno=108, col_offset=0), If(Compare(Name('__name__', Load(), lineno=123, col_offset=3), [Eq()], [Str('__main__', lineno=123, col_offset=15)], lineno=123, col_offset=3), [Expr(Call(Name('_test', Load(), lineno=124, col_offset=4), [], [], None, None, lineno=124, col_offset=4), lineno=124, col_offset=4)], [], lineno=123, col_offset=0)])
