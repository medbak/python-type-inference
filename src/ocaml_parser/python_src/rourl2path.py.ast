Module([Expr(Str('riscos specific module for conversion between pathnames and URLs.\nBased on macurl2path.\nDo not import directly, use urllib instead.', lineno=3, col_offset=-1), lineno=3, col_offset=-1), Import([alias('string', None)], lineno=5, col_offset=0), Import([alias('urllib', None)], lineno=6, col_offset=0), Assign([Name('__all__', Store(), lineno=8, col_offset=0)], List([Str('url2pathname', lineno=8, col_offset=11), Str('pathname2url', lineno=8, col_offset=26)], Load(), lineno=8, col_offset=10), lineno=8, col_offset=0), Assign([Name('__slash_dot', Store(), lineno=10, col_offset=0)], Call(Attribute(Name('string', Load(), lineno=10, col_offset=14), 'maketrans', Load(), lineno=10, col_offset=14), [Str('/.', lineno=10, col_offset=31), Str('./', lineno=10, col_offset=37)], [], None, None, lineno=10, col_offset=14), lineno=10, col_offset=0), FunctionDef('url2pathname', arguments([Name('url', Param(), lineno=12, col_offset=17)], None, None, []), [Expr(Str("OS-specific conversion from a relative URL of the 'file' scheme\n    to a file system path; not recommended for general use.", lineno=14, col_offset=-1), lineno=14, col_offset=-1), Assign([Name('tp', Store(), lineno=15, col_offset=4)], Subscript(Call(Attribute(Name('urllib', Load(), lineno=15, col_offset=9), 'splittype', Load(), lineno=15, col_offset=9), [Name('url', Load(), lineno=15, col_offset=26)], [], None, None, lineno=15, col_offset=9), Index(Num(0, lineno=15, col_offset=31)), Load(), lineno=15, col_offset=9), lineno=15, col_offset=4), If(BoolOp(And(), [Name('tp', Load(), lineno=16, col_offset=7), Compare(Name('tp', Load(), lineno=16, col_offset=14), [NotEq()], [Str('file', lineno=16, col_offset=20)], lineno=16, col_offset=14)], lineno=16, col_offset=7), [Raise(Name('RuntimeError', Load(), lineno=17, col_offset=14), Str('Cannot convert non-local URL to pathname', lineno=17, col_offset=28), None, lineno=17, col_offset=8)], [], lineno=16, col_offset=4), If(Compare(Subscript(Name('url', Load(), lineno=19, col_offset=7), Slice(None, Num(3, lineno=19, col_offset=12), None), Load(), lineno=19, col_offset=7), [Eq()], [Str('///', lineno=19, col_offset=18)], lineno=19, col_offset=7), [Assign([Name('url', Store(), lineno=20, col_offset=8)], Subscript(Name('url', Load(), lineno=20, col_offset=14), Slice(Num(2, lineno=20, col_offset=18), None, None), Load(), lineno=20, col_offset=14), lineno=20, col_offset=8)], [If(Compare(Subscript(Name('url', Load(), lineno=21, col_offset=9), Slice(None, Num(2, lineno=21, col_offset=14), None), Load(), lineno=21, col_offset=9), [Eq()], [Str('//', lineno=21, col_offset=20)], lineno=21, col_offset=9), [Raise(Name('RuntimeError', Load(), lineno=22, col_offset=14), Str('Cannot convert non-local URL to pathname', lineno=22, col_offset=28), None, lineno=22, col_offset=8)], [], lineno=21, col_offset=9)], lineno=19, col_offset=4), Assign([Name('components', Store(), lineno=23, col_offset=4)], Call(Attribute(Name('string', Load(), lineno=23, col_offset=17), 'split', Load(), lineno=23, col_offset=17), [Name('url', Load(), lineno=23, col_offset=30), Str('/', lineno=23, col_offset=35)], [], None, None, lineno=23, col_offset=17), lineno=23, col_offset=4), If(UnaryOp(Not(), Subscript(Name('components', Load(), lineno=24, col_offset=11), Index(Num(0, lineno=24, col_offset=22)), Load(), lineno=24, col_offset=11), lineno=24, col_offset=7), [If(Compare(Str('$', lineno=25, col_offset=11), [In()], [Name('components', Load(), lineno=25, col_offset=18)], lineno=25, col_offset=11), [Delete([Subscript(Name('components', Load(), lineno=26, col_offset=16), Index(Num(0, lineno=26, col_offset=27)), Del(), lineno=26, col_offset=16)], lineno=26, col_offset=12)], [Assign([Subscript(Name('components', Load(), lineno=28, col_offset=12), Index(Num(0, lineno=28, col_offset=23)), Store(), lineno=28, col_offset=12)], Str('$', lineno=28, col_offset=28), lineno=28, col_offset=12)], lineno=25, col_offset=8)], [], lineno=24, col_offset=4), Assign([Name('i', Store(), lineno=30, col_offset=4)], Num(0, lineno=30, col_offset=8), lineno=30, col_offset=4), While(Compare(Name('i', Load(), lineno=31, col_offset=10), [Lt()], [Call(Name('len', Load(), lineno=31, col_offset=14), [Name('components', Load(), lineno=31, col_offset=18)], [], None, None, lineno=31, col_offset=14)], lineno=31, col_offset=10), [If(Compare(Subscript(Name('components', Load(), lineno=32, col_offset=11), Index(Name('i', Load(), lineno=32, col_offset=22)), Load(), lineno=32, col_offset=11), [Eq()], [Str('.', lineno=32, col_offset=28)], lineno=32, col_offset=11), [Delete([Subscript(Name('components', Load(), lineno=33, col_offset=16), Index(Name('i', Load(), lineno=33, col_offset=27)), Del(), lineno=33, col_offset=16)], lineno=33, col_offset=12)], [If(BoolOp(And(), [Compare(Subscript(Name('components', Load(), lineno=34, col_offset=13), Index(Name('i', Load(), lineno=34, col_offset=24)), Load(), lineno=34, col_offset=13), [Eq()], [Str('..', lineno=34, col_offset=30)], lineno=34, col_offset=13), Compare(Name('i', Load(), lineno=34, col_offset=39), [Gt()], [Num(0, lineno=34, col_offset=43)], lineno=34, col_offset=39), Compare(Subscript(Name('components', Load(), lineno=35, col_offset=34), Index(BinOp(Name('i', Load(), lineno=35, col_offset=45), Sub(), Num(1, lineno=35, col_offset=47), lineno=35, col_offset=45)), Load(), lineno=35, col_offset=34), [NotIn()], [Tuple([Str('', lineno=35, col_offset=58), Str('..', lineno=35, col_offset=62)], Load(), lineno=35, col_offset=58)], lineno=35, col_offset=34)], lineno=34, col_offset=13), [Delete([Subscript(Name('components', Load(), lineno=36, col_offset=16), Slice(BinOp(Name('i', Load(), lineno=36, col_offset=27), Sub(), Num(1, lineno=36, col_offset=29), lineno=36, col_offset=27), BinOp(Name('i', Load(), lineno=36, col_offset=31), Add(), Num(1, lineno=36, col_offset=33), lineno=36, col_offset=31), None), Del(), lineno=36, col_offset=16)], lineno=36, col_offset=12), AugAssign(Name('i', Store(), lineno=37, col_offset=12), Sub(), Num(1, lineno=37, col_offset=17), lineno=37, col_offset=12)], [If(Compare(Subscript(Name('components', Load(), lineno=38, col_offset=13), Index(Name('i', Load(), lineno=38, col_offset=24)), Load(), lineno=38, col_offset=13), [Eq()], [Str('..', lineno=38, col_offset=30)], lineno=38, col_offset=13), [Assign([Subscript(Name('components', Load(), lineno=39, col_offset=12), Index(Name('i', Load(), lineno=39, col_offset=23)), Store(), lineno=39, col_offset=12)], Str('^', lineno=39, col_offset=28), lineno=39, col_offset=12), AugAssign(Name('i', Store(), lineno=40, col_offset=12), Add(), Num(1, lineno=40, col_offset=17), lineno=40, col_offset=12)], [If(BoolOp(And(), [Compare(Subscript(Name('components', Load(), lineno=41, col_offset=13), Index(Name('i', Load(), lineno=41, col_offset=24)), Load(), lineno=41, col_offset=13), [Eq()], [Str('', lineno=41, col_offset=30)], lineno=41, col_offset=13), Compare(Name('i', Load(), lineno=41, col_offset=37), [Gt()], [Num(0, lineno=41, col_offset=41)], lineno=41, col_offset=37), Compare(Subscript(Name('components', Load(), lineno=41, col_offset=47), Index(BinOp(Name('i', Load(), lineno=41, col_offset=58), Sub(), Num(1, lineno=41, col_offset=60), lineno=41, col_offset=58)), Load(), lineno=41, col_offset=47), [NotEq()], [Str('', lineno=41, col_offset=66)], lineno=41, col_offset=47)], lineno=41, col_offset=13), [Delete([Subscript(Name('components', Load(), lineno=42, col_offset=16), Index(Name('i', Load(), lineno=42, col_offset=27)), Del(), lineno=42, col_offset=16)], lineno=42, col_offset=12)], [AugAssign(Name('i', Store(), lineno=44, col_offset=12), Add(), Num(1, lineno=44, col_offset=17), lineno=44, col_offset=12)], lineno=41, col_offset=13)], lineno=38, col_offset=13)], lineno=34, col_offset=13)], lineno=32, col_offset=8)], [], lineno=31, col_offset=4), Assign([Name('components', Store(), lineno=45, col_offset=4)], Call(Name('map', Load(), lineno=45, col_offset=17), [Lambda(arguments([Name('x', Param(), lineno=45, col_offset=28)], None, None, []), Call(Attribute(Call(Attribute(Name('urllib', Load(), lineno=45, col_offset=31), 'unquote', Load(), lineno=45, col_offset=31), [Name('x', Load(), lineno=45, col_offset=46)], [], None, None, lineno=45, col_offset=31), 'translate', Load(), lineno=45, col_offset=31), [Name('__slash_dot', Load(), lineno=45, col_offset=59)], [], None, None, lineno=45, col_offset=31), lineno=45, col_offset=21), Name('components', Load(), lineno=45, col_offset=73)], [], None, None, lineno=45, col_offset=17), lineno=45, col_offset=4), Return(Call(Attribute(Str('.', lineno=46, col_offset=11), 'join', Load(), lineno=46, col_offset=11), [Name('components', Load(), lineno=46, col_offset=20)], [], None, None, lineno=46, col_offset=11), lineno=46, col_offset=4)], [], lineno=12, col_offset=0), FunctionDef('pathname2url', arguments([Name('pathname', Param(), lineno=48, col_offset=17)], None, None, []), [Expr(Str("OS-specific conversion from a file system path to a relative URL\n    of the 'file' scheme; not recommended for general use.", lineno=50, col_offset=-1), lineno=50, col_offset=-1), Return(Call(Attribute(Name('urllib', Load(), lineno=51, col_offset=11), 'quote', Load(), lineno=51, col_offset=11), [BinOp(Str('///', lineno=51, col_offset=24), Add(), Call(Attribute(Name('pathname', Load(), lineno=51, col_offset=32), 'translate', Load(), lineno=51, col_offset=32), [Name('__slash_dot', Load(), lineno=51, col_offset=51)], [], None, None, lineno=51, col_offset=32), lineno=51, col_offset=24), Str('/$:', lineno=51, col_offset=65)], [], None, None, lineno=51, col_offset=11), lineno=51, col_offset=4)], [], lineno=48, col_offset=0), FunctionDef('test', arguments([], None, None, []), [For(Name('url', Store(), lineno=54, col_offset=8), List([Str('index.html', lineno=54, col_offset=16), Str('/SCSI::SCSI4/$/Anwendung/Comm/Apps/!Fresco/Welcome', lineno=55, col_offset=16), Str('/SCSI::SCSI4/$/Anwendung/Comm/Apps/../!Fresco/Welcome', lineno=56, col_offset=16), Str('../index.html', lineno=57, col_offset=16), Str('bar/index.html', lineno=58, col_offset=16), Str('/foo/bar/index.html', lineno=59, col_offset=16), Str('/foo/bar/', lineno=60, col_offset=16), Str('/', lineno=61, col_offset=16)], Load(), lineno=54, col_offset=15), [Print(None, [BinOp(Str('%r -> %r', lineno=62, col_offset=14), Mod(), Tuple([Name('url', Load(), lineno=62, col_offset=28), Call(Name('url2pathname', Load(), lineno=62, col_offset=33), [Name('url', Load(), lineno=62, col_offset=46)], [], None, None, lineno=62, col_offset=33)], Load(), lineno=62, col_offset=28), lineno=62, col_offset=14)], True, lineno=62, col_offset=8)], [], lineno=54, col_offset=4), Print(None, [Str('*******************************************************', lineno=63, col_offset=10)], True, lineno=63, col_offset=4), For(Name('path', Store(), lineno=64, col_offset=8), List([Str('SCSI::SCSI4.$.Anwendung', lineno=64, col_offset=17), Str('PythonApp:Lib', lineno=65, col_offset=17), Str('PythonApp:Lib.rourl2path/py', lineno=66, col_offset=17)], Load(), lineno=64, col_offset=16), [Print(None, [BinOp(Str('%r -> %r', lineno=67, col_offset=14), Mod(), Tuple([Name('path', Load(), lineno=67, col_offset=28), Call(Name('pathname2url', Load(), lineno=67, col_offset=34), [Name('path', Load(), lineno=67, col_offset=47)], [], None, None, lineno=67, col_offset=34)], Load(), lineno=67, col_offset=28), lineno=67, col_offset=14)], True, lineno=67, col_offset=8)], [], lineno=64, col_offset=4)], [], lineno=53, col_offset=0), If(Compare(Name('__name__', Load(), lineno=69, col_offset=3), [Eq()], [Str('__main__', lineno=69, col_offset=15)], lineno=69, col_offset=3), [Expr(Call(Name('test', Load(), lineno=70, col_offset=4), [], [], None, None, lineno=70, col_offset=4), lineno=70, col_offset=4)], [], lineno=69, col_offset=0)])
