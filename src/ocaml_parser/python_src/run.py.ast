Module([Import([alias('sys', None)], lineno=1, col_offset=0), Import([alias('linecache', None)], lineno=2, col_offset=0), Import([alias('time', None)], lineno=3, col_offset=0), Import([alias('socket', None)], lineno=4, col_offset=0), Import([alias('traceback', None)], lineno=5, col_offset=0), Import([alias('thread', None)], lineno=6, col_offset=0), Import([alias('threading', None)], lineno=7, col_offset=0), Import([alias('Queue', None)], lineno=8, col_offset=0), ImportFrom('idlelib', [alias('CallTips', None)], 0, lineno=10, col_offset=0), ImportFrom('idlelib', [alias('AutoComplete', None)], 0, lineno=11, col_offset=0), ImportFrom('idlelib', [alias('RemoteDebugger', None)], 0, lineno=13, col_offset=0), ImportFrom('idlelib', [alias('RemoteObjectBrowser', None)], 0, lineno=14, col_offset=0), ImportFrom('idlelib', [alias('StackViewer', None)], 0, lineno=15, col_offset=0), ImportFrom('idlelib', [alias('rpc', None)], 0, lineno=16, col_offset=0), Import([alias('__main__', None)], lineno=18, col_offset=0), Assign([Name('LOCALHOST', Store(), lineno=20, col_offset=0)], Str('127.0.0.1', lineno=20, col_offset=12), lineno=20, col_offset=0), TryExcept([Import([alias('warnings', None)], lineno=23, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=24, col_offset=7), None, [Pass( lineno=25, col_offset=4)], lineno=24, col_offset=0)], [FunctionDef('idle_formatwarning_subproc', arguments([Name('message', Param(), lineno=27, col_offset=35), Name('category', Param(), lineno=27, col_offset=44), Name('filename', Param(), lineno=27, col_offset=54), Name('lineno', Param(), lineno=27, col_offset=64), Name('line', Param(), lineno=28, col_offset=35)], None, None, [Name('None', Load(), lineno=28, col_offset=40)]), [Expr(Str('Format warnings the IDLE way', lineno=29, col_offset=8), lineno=29, col_offset=8), Assign([Name('s', Store(), lineno=30, col_offset=8)], Str('\nWarning (from warnings module):\n', lineno=30, col_offset=12), lineno=30, col_offset=8), AugAssign(Name('s', Store(), lineno=31, col_offset=8), Add(), BinOp(Str('  File "%s", line %s\n', lineno=31, col_offset=13), Mod(), Tuple([Name('filename', Load(), lineno=31, col_offset=43), Name('lineno', Load(), lineno=31, col_offset=53)], Load(), lineno=31, col_offset=43), lineno=31, col_offset=13), lineno=31, col_offset=8), If(Compare(Name('line', Load(), lineno=32, col_offset=11), [Is()], [Name('None', Load(), lineno=32, col_offset=19)], lineno=32, col_offset=11), [Assign([Name('line', Store(), lineno=33, col_offset=12)], Call(Attribute(Name('linecache', Load(), lineno=33, col_offset=19), 'getline', Load(), lineno=33, col_offset=19), [Name('filename', Load(), lineno=33, col_offset=37), Name('lineno', Load(), lineno=33, col_offset=47)], [], None, None, lineno=33, col_offset=19), lineno=33, col_offset=12)], [], lineno=32, col_offset=8), Assign([Name('line', Store(), lineno=34, col_offset=8)], Call(Attribute(Name('line', Load(), lineno=34, col_offset=15), 'strip', Load(), lineno=34, col_offset=15), [], [], None, None, lineno=34, col_offset=15), lineno=34, col_offset=8), If(Name('line', Load(), lineno=35, col_offset=11), [AugAssign(Name('s', Store(), lineno=36, col_offset=12), Add(), BinOp(Str('    %s\n', lineno=36, col_offset=17), Mod(), Name('line', Load(), lineno=36, col_offset=30), lineno=36, col_offset=17), lineno=36, col_offset=12)], [], lineno=35, col_offset=8), AugAssign(Name('s', Store(), lineno=37, col_offset=8), Add(), BinOp(Str('%s: %s\n', lineno=37, col_offset=13), Mod(), Tuple([Attribute(Name('category', Load(), lineno=37, col_offset=27), '__name__', Load(), lineno=37, col_offset=27), Name('message', Load(), lineno=37, col_offset=46)], Load(), lineno=37, col_offset=27), lineno=37, col_offset=13), lineno=37, col_offset=8), Return(Name('s', Load(), lineno=38, col_offset=15), lineno=38, col_offset=8)], [], lineno=27, col_offset=4), Assign([Attribute(Name('warnings', Load(), lineno=39, col_offset=4), 'formatwarning', Store(), lineno=39, col_offset=4)], Name('idle_formatwarning_subproc', Load(), lineno=39, col_offset=29), lineno=39, col_offset=4)], lineno=22, col_offset=0), Assign([Name('exit_now', Store(), lineno=45, col_offset=0)], Name('False', Load(), lineno=45, col_offset=11), lineno=45, col_offset=0), Assign([Name('quitting', Store(), lineno=46, col_offset=0)], Name('False', Load(), lineno=46, col_offset=11), lineno=46, col_offset=0), Assign([Name('interruptable', Store(), lineno=47, col_offset=0)], Name('False', Load(), lineno=47, col_offset=16), lineno=47, col_offset=0), FunctionDef('main', arguments([Name('del_exitfunc', Param(), lineno=49, col_offset=9)], None, None, [Name('False', Load(), lineno=49, col_offset=22)]), [Expr(Str("Start the Python execution server in a subprocess\n\n    In the Python subprocess, RPCServer is instantiated with handlerclass\n    MyHandler, which inherits register/unregister methods from RPCHandler via\n    the mix-in class SocketIO.\n\n    When the RPCServer 'server' is instantiated, the TCPServer initialization\n    creates an instance of run.MyHandler and calls its handle() method.\n    handle() instantiates a run.Executive object, passing it a reference to the\n    MyHandler object.  That reference is saved as attribute rpchandler of the\n    Executive instance.  The Executive methods have access to the reference and\n    can pass it on to entities that they command\n    (e.g. RemoteDebugger.Debugger.start_debugger()).  The latter, in turn, can\n    call MyHandler(SocketIO) register/unregister methods via the reference to\n    register and unregister themselves.\n\n    ", lineno=66, col_offset=-1), lineno=66, col_offset=-1), Global(['exit_now'], lineno=67, col_offset=4), Global(['quitting'], lineno=68, col_offset=4), Global(['no_exitfunc'], lineno=69, col_offset=4), Assign([Name('no_exitfunc', Store(), lineno=70, col_offset=4)], Name('del_exitfunc', Load(), lineno=70, col_offset=18), lineno=70, col_offset=4), TryExcept([Assert(Compare(Call(Name('len', Load(), lineno=73, col_offset=15), [Attribute(Name('sys', Load(), lineno=73, col_offset=19), 'argv', Load(), lineno=73, col_offset=19)], [], None, None, lineno=73, col_offset=15), [Gt()], [Num(1, lineno=73, col_offset=31)], lineno=73, col_offset=15), None, lineno=73, col_offset=8), Assign([Name('port', Store(), lineno=74, col_offset=8)], Call(Name('int', Load(), lineno=74, col_offset=15), [Subscript(Attribute(Name('sys', Load(), lineno=74, col_offset=19), 'argv', Load(), lineno=74, col_offset=19), Index(Num(-1, lineno=74, col_offset=29)), Load(), lineno=74, col_offset=19)], [], None, None, lineno=74, col_offset=15), lineno=74, col_offset=8)], [ExceptHandler(None, None, [Print(Attribute(Name('sys', Load(), lineno=76, col_offset=15), 'stderr', Load(), lineno=76, col_offset=15), [Str('IDLE Subprocess: no IP port passed in sys.argv.', lineno=76, col_offset=27)], True, lineno=76, col_offset=8), Return(None, lineno=77, col_offset=8)], lineno=75, col_offset=4)], [], lineno=72, col_offset=4), Assign([Subscript(Attribute(Name('sys', Load(), lineno=78, col_offset=4), 'argv', Load(), lineno=78, col_offset=4), Slice(None, None, None), Store(), lineno=78, col_offset=4)], List([Str('', lineno=78, col_offset=19)], Load(), lineno=78, col_offset=18), lineno=78, col_offset=4), Assign([Name('sockthread', Store(), lineno=79, col_offset=4)], Call(Attribute(Name('threading', Load(), lineno=79, col_offset=17), 'Thread', Load(), lineno=79, col_offset=17), [], [keyword('target', Name('manage_socket', Load(), lineno=79, col_offset=41)), keyword('name', Str('SockThread', lineno=80, col_offset=39)), keyword('args', Tuple([Tuple([Name('LOCALHOST', Load(), lineno=81, col_offset=41), Name('port', Load(), lineno=81, col_offset=52)], Load(), lineno=81, col_offset=41)], Load(), lineno=81, col_offset=40))], None, None, lineno=79, col_offset=17), lineno=79, col_offset=4), Expr(Call(Attribute(Name('sockthread', Load(), lineno=82, col_offset=4), 'setDaemon', Load(), lineno=82, col_offset=4), [Name('True', Load(), lineno=82, col_offset=25)], [], None, None, lineno=82, col_offset=4), lineno=82, col_offset=4), Expr(Call(Attribute(Name('sockthread', Load(), lineno=83, col_offset=4), 'start', Load(), lineno=83, col_offset=4), [], [], None, None, lineno=83, col_offset=4), lineno=83, col_offset=4), While(Num(1, lineno=84, col_offset=10), [TryExcept([If(Name('exit_now', Load(), lineno=86, col_offset=15), [TryExcept([Expr(Call(Name('exit', Load(), lineno=88, col_offset=20), [], [], None, None, lineno=88, col_offset=20), lineno=88, col_offset=20)], [ExceptHandler(Name('KeyboardInterrupt', Load(), lineno=89, col_offset=23), None, [Continue( lineno=91, col_offset=20)], lineno=89, col_offset=16)], [], lineno=87, col_offset=16)], [], lineno=86, col_offset=12), TryExcept([Assign([Tuple([Name('seq', Store(), lineno=93, col_offset=16), Name('request', Store(), lineno=93, col_offset=21)], Store(), lineno=93, col_offset=16)], Call(Attribute(Attribute(Name('rpc', Load(), lineno=93, col_offset=31), 'request_queue', Load(), lineno=93, col_offset=31), 'get', Load(), lineno=93, col_offset=31), [], [keyword('block', Name('True', Load(), lineno=93, col_offset=59)), keyword('timeout', Num(0.05, lineno=93, col_offset=73))], None, None, lineno=93, col_offset=31), lineno=93, col_offset=16)], [ExceptHandler(Attribute(Name('Queue', Load(), lineno=94, col_offset=19), 'Empty', Load(), lineno=94, col_offset=19), None, [Continue( lineno=95, col_offset=16)], lineno=94, col_offset=12)], [], lineno=92, col_offset=12), Assign([Tuple([Name('method', Store(), lineno=96, col_offset=12), Name('args', Store(), lineno=96, col_offset=20), Name('kwargs', Store(), lineno=96, col_offset=26)], Store(), lineno=96, col_offset=12)], Name('request', Load(), lineno=96, col_offset=35), lineno=96, col_offset=12), Assign([Name('ret', Store(), lineno=97, col_offset=12)], Call(Name('method', Load(), lineno=97, col_offset=18), [], [], Name('args', Load(), lineno=97, col_offset=26), Name('kwargs', Load(), lineno=97, col_offset=34), lineno=97, col_offset=18), lineno=97, col_offset=12), Expr(Call(Attribute(Attribute(Name('rpc', Load(), lineno=98, col_offset=12), 'response_queue', Load(), lineno=98, col_offset=12), 'put', Load(), lineno=98, col_offset=12), [Tuple([Name('seq', Load(), lineno=98, col_offset=36), Name('ret', Load(), lineno=98, col_offset=41)], Load(), lineno=98, col_offset=36)], [], None, None, lineno=98, col_offset=12), lineno=98, col_offset=12)], [ExceptHandler(Name('KeyboardInterrupt', Load(), lineno=99, col_offset=15), None, [If(Name('quitting', Load(), lineno=100, col_offset=15), [Assign([Name('exit_now', Store(), lineno=101, col_offset=16)], Name('True', Load(), lineno=101, col_offset=27), lineno=101, col_offset=16)], [], lineno=100, col_offset=12), Continue( lineno=102, col_offset=12)], lineno=99, col_offset=8), ExceptHandler(Name('SystemExit', Load(), lineno=103, col_offset=15), None, [Raise(None, None, None, lineno=104, col_offset=12)], lineno=103, col_offset=8), ExceptHandler(None, None, [Assign([Tuple([Name('type', Store(), lineno=106, col_offset=12), Name('value', Store(), lineno=106, col_offset=18), Name('tb', Store(), lineno=106, col_offset=25)], Store(), lineno=106, col_offset=12)], Call(Attribute(Name('sys', Load(), lineno=106, col_offset=30), 'exc_info', Load(), lineno=106, col_offset=30), [], [], None, None, lineno=106, col_offset=30), lineno=106, col_offset=12), TryExcept([Expr(Call(Name('print_exception', Load(), lineno=108, col_offset=16), [], [], None, None, lineno=108, col_offset=16), lineno=108, col_offset=16), Expr(Call(Attribute(Attribute(Name('rpc', Load(), lineno=109, col_offset=16), 'response_queue', Load(), lineno=109, col_offset=16), 'put', Load(), lineno=109, col_offset=16), [Tuple([Name('seq', Load(), lineno=109, col_offset=40), Name('None', Load(), lineno=109, col_offset=45)], Load(), lineno=109, col_offset=40)], [], None, None, lineno=109, col_offset=16), lineno=109, col_offset=16)], [ExceptHandler(None, None, [Expr(Call(Attribute(Name('traceback', Load(), lineno=112, col_offset=16), 'print_exception', Load(), lineno=112, col_offset=16), [Name('type', Load(), lineno=112, col_offset=42), Name('value', Load(), lineno=112, col_offset=48), Name('tb', Load(), lineno=112, col_offset=55)], [keyword('file', Attribute(Name('sys', Load(), lineno=112, col_offset=64), '__stderr__', Load(), lineno=112, col_offset=64))], None, None, lineno=112, col_offset=16), lineno=112, col_offset=16), Expr(Call(Name('exit', Load(), lineno=113, col_offset=16), [], [], None, None, lineno=113, col_offset=16), lineno=113, col_offset=16)], lineno=110, col_offset=12)], [Continue( lineno=115, col_offset=16)], lineno=107, col_offset=12)], lineno=105, col_offset=8)], [], lineno=85, col_offset=8)], [], lineno=84, col_offset=4)], [], lineno=49, col_offset=0), FunctionDef('manage_socket', arguments([Name('address', Param(), lineno=117, col_offset=18)], None, None, []), [For(Name('i', Store(), lineno=118, col_offset=8), Call(Name('range', Load(), lineno=118, col_offset=13), [Num(3, lineno=118, col_offset=19)], [], None, None, lineno=118, col_offset=13), [Expr(Call(Attribute(Name('time', Load(), lineno=119, col_offset=8), 'sleep', Load(), lineno=119, col_offset=8), [Name('i', Load(), lineno=119, col_offset=19)], [], None, None, lineno=119, col_offset=8), lineno=119, col_offset=8), TryExcept([Assign([Name('server', Store(), lineno=121, col_offset=12)], Call(Name('MyRPCServer', Load(), lineno=121, col_offset=21), [Name('address', Load(), lineno=121, col_offset=33), Name('MyHandler', Load(), lineno=121, col_offset=42)], [], None, None, lineno=121, col_offset=21), lineno=121, col_offset=12), Break( lineno=122, col_offset=12)], [ExceptHandler(Attribute(Name('socket', Load(), lineno=123, col_offset=15), 'error', Load(), lineno=123, col_offset=15), Name('err', Store(), lineno=123, col_offset=29), [Print(Attribute(Name('sys', Load(), lineno=124, col_offset=19), '__stderr__', Load(), lineno=124, col_offset=19), [BinOp(BinOp(Str('IDLE Subprocess: socket error: ', lineno=124, col_offset=34), Add(), Subscript(Attribute(Name('err', Load(), lineno=125, col_offset=42), 'args', Load(), lineno=125, col_offset=42), Index(Num(1, lineno=125, col_offset=51)), Load(), lineno=125, col_offset=42), lineno=124, col_offset=34), Add(), Str(', retrying....', lineno=125, col_offset=56), lineno=125, col_offset=54)], True, lineno=124, col_offset=12)], lineno=123, col_offset=8)], [], lineno=120, col_offset=8)], [Print(Attribute(Name('sys', Load(), lineno=127, col_offset=15), '__stderr__', Load(), lineno=127, col_offset=15), [Str('IDLE Subprocess: Connection to IDLE GUI failed, exiting.', lineno=127, col_offset=31)], True, lineno=127, col_offset=8), Expr(Call(Name('show_socket_error', Load(), lineno=129, col_offset=8), [Name('err', Load(), lineno=129, col_offset=26), Name('address', Load(), lineno=129, col_offset=31)], [], None, None, lineno=129, col_offset=8), lineno=129, col_offset=8), Global(['exit_now'], lineno=130, col_offset=8), Assign([Name('exit_now', Store(), lineno=131, col_offset=8)], Name('True', Load(), lineno=131, col_offset=19), lineno=131, col_offset=8), Return(None, lineno=132, col_offset=8)], lineno=118, col_offset=4), Expr(Call(Attribute(Name('server', Load(), lineno=133, col_offset=4), 'handle_request', Load(), lineno=133, col_offset=4), [], [], None, None, lineno=133, col_offset=4), lineno=133, col_offset=4)], [], lineno=117, col_offset=0), FunctionDef('show_socket_error', arguments([Name('err', Param(), lineno=135, col_offset=22), Name('address', Param(), lineno=135, col_offset=27)], None, None, []), [Import([alias('Tkinter', None)], lineno=136, col_offset=4), Import([alias('tkMessageBox', None)], lineno=137, col_offset=4), Assign([Name('root', Store(), lineno=138, col_offset=4)], Call(Attribute(Name('Tkinter', Load(), lineno=138, col_offset=11), 'Tk', Load(), lineno=138, col_offset=11), [], [], None, None, lineno=138, col_offset=11), lineno=138, col_offset=4), Expr(Call(Attribute(Name('root', Load(), lineno=139, col_offset=4), 'withdraw', Load(), lineno=139, col_offset=4), [], [], None, None, lineno=139, col_offset=4), lineno=139, col_offset=4), If(Compare(Subscript(Attribute(Name('err', Load(), lineno=140, col_offset=7), 'args', Load(), lineno=140, col_offset=7), Index(Num(0, lineno=140, col_offset=16)), Load(), lineno=140, col_offset=7), [Eq()], [Num(61, lineno=140, col_offset=22)], lineno=140, col_offset=7), [Assign([Name('msg', Store(), lineno=141, col_offset=8)], BinOp(Str("IDLE's subprocess can't connect to %s:%d.  This may be due to your personal firewall configuration.  It is safe to allow this internal connection because no data is visible on external ports.", lineno=141, col_offset=14), Mod(), Name('address', Load(), lineno=144, col_offset=34), lineno=141, col_offset=14), lineno=141, col_offset=8), Expr(Call(Attribute(Name('tkMessageBox', Load(), lineno=145, col_offset=8), 'showerror', Load(), lineno=145, col_offset=8), [Str('IDLE Subprocess Error', lineno=145, col_offset=31), Name('msg', Load(), lineno=145, col_offset=56)], [keyword('parent', Name('root', Load(), lineno=145, col_offset=68))], None, None, lineno=145, col_offset=8), lineno=145, col_offset=8)], [Expr(Call(Attribute(Name('tkMessageBox', Load(), lineno=147, col_offset=8), 'showerror', Load(), lineno=147, col_offset=8), [Str('IDLE Subprocess Error', lineno=147, col_offset=31), BinOp(Str('Socket Error: %s', lineno=148, col_offset=31), Mod(), Subscript(Attribute(Name('err', Load(), lineno=148, col_offset=52), 'args', Load(), lineno=148, col_offset=52), Index(Num(1, lineno=148, col_offset=61)), Load(), lineno=148, col_offset=52), lineno=148, col_offset=31)], [], None, None, lineno=147, col_offset=8), lineno=147, col_offset=8)], lineno=140, col_offset=4), Expr(Call(Attribute(Name('root', Load(), lineno=149, col_offset=4), 'destroy', Load(), lineno=149, col_offset=4), [], [], None, None, lineno=149, col_offset=4), lineno=149, col_offset=4)], [], lineno=135, col_offset=0), FunctionDef('print_exception', arguments([], None, None, []), [Import([alias('linecache', None)], lineno=152, col_offset=4), Expr(Call(Attribute(Name('linecache', Load(), lineno=153, col_offset=4), 'checkcache', Load(), lineno=153, col_offset=4), [], [], None, None, lineno=153, col_offset=4), lineno=153, col_offset=4), Expr(Call(Name('flush_stdout', Load(), lineno=154, col_offset=4), [], [], None, None, lineno=154, col_offset=4), lineno=154, col_offset=4), Assign([Name('efile', Store(), lineno=155, col_offset=4)], Attribute(Name('sys', Load(), lineno=155, col_offset=12), 'stderr', Load(), lineno=155, col_offset=12), lineno=155, col_offset=4), Assign([Tuple([Name('typ', Store(), lineno=156, col_offset=4), Name('val', Store(), lineno=156, col_offset=9), Name('tb', Store(), lineno=156, col_offset=14)], Store(), lineno=156, col_offset=4), Name('excinfo', Store(), lineno=156, col_offset=19)], Call(Attribute(Name('sys', Load(), lineno=156, col_offset=29), 'exc_info', Load(), lineno=156, col_offset=29), [], [], None, None, lineno=156, col_offset=29), lineno=156, col_offset=4), Assign([Tuple([Attribute(Name('sys', Load(), lineno=157, col_offset=4), 'last_type', Store(), lineno=157, col_offset=4), Attribute(Name('sys', Load(), lineno=157, col_offset=19), 'last_value', Store(), lineno=157, col_offset=19), Attribute(Name('sys', Load(), lineno=157, col_offset=35), 'last_traceback', Store(), lineno=157, col_offset=35)], Store(), lineno=157, col_offset=4)], Name('excinfo', Load(), lineno=157, col_offset=56), lineno=157, col_offset=4), Assign([Name('tbe', Store(), lineno=158, col_offset=4)], Call(Attribute(Name('traceback', Load(), lineno=158, col_offset=10), 'extract_tb', Load(), lineno=158, col_offset=10), [Name('tb', Load(), lineno=158, col_offset=31)], [], None, None, lineno=158, col_offset=10), lineno=158, col_offset=4), Print(Name('efile', Load(), lineno=159, col_offset=11), [Str('\nTraceback (most recent call last):', lineno=159, col_offset=18)], True, lineno=159, col_offset=4), Assign([Name('exclude', Store(), lineno=160, col_offset=4)], Tuple([Str('run.py', lineno=160, col_offset=15), Str('rpc.py', lineno=160, col_offset=25), Str('threading.py', lineno=160, col_offset=35), Str('Queue.py', lineno=160, col_offset=51), Str('RemoteDebugger.py', lineno=161, col_offset=15), Str('bdb.py', lineno=161, col_offset=36)], Load(), lineno=160, col_offset=15), lineno=160, col_offset=4), Expr(Call(Name('cleanup_traceback', Load(), lineno=162, col_offset=4), [Name('tbe', Load(), lineno=162, col_offset=22), Name('exclude', Load(), lineno=162, col_offset=27)], [], None, None, lineno=162, col_offset=4), lineno=162, col_offset=4), Expr(Call(Attribute(Name('traceback', Load(), lineno=163, col_offset=4), 'print_list', Load(), lineno=163, col_offset=4), [Name('tbe', Load(), lineno=163, col_offset=25)], [keyword('file', Name('efile', Load(), lineno=163, col_offset=35))], None, None, lineno=163, col_offset=4), lineno=163, col_offset=4), Assign([Name('lines', Store(), lineno=164, col_offset=4)], Call(Attribute(Name('traceback', Load(), lineno=164, col_offset=12), 'format_exception_only', Load(), lineno=164, col_offset=12), [Name('typ', Load(), lineno=164, col_offset=44), Name('val', Load(), lineno=164, col_offset=49)], [], None, None, lineno=164, col_offset=12), lineno=164, col_offset=4), For(Name('line', Store(), lineno=165, col_offset=8), Name('lines', Load(), lineno=165, col_offset=16), [Print(Name('efile', Load(), lineno=166, col_offset=15), [Name('line', Load(), lineno=166, col_offset=22)], False, lineno=166, col_offset=8)], [], lineno=165, col_offset=4)], [], lineno=151, col_offset=0), FunctionDef('cleanup_traceback', arguments([Name('tb', Param(), lineno=168, col_offset=22), Name('exclude', Param(), lineno=168, col_offset=26)], None, None, []), [Expr(Str('Remove excluded traces from beginning/end of tb; get cached lines', lineno=169, col_offset=4), lineno=169, col_offset=4), Assign([Name('orig_tb', Store(), lineno=170, col_offset=4)], Subscript(Name('tb', Load(), lineno=170, col_offset=14), Slice(None, None, None), Load(), lineno=170, col_offset=14), lineno=170, col_offset=4), While(Name('tb', Load(), lineno=171, col_offset=10), [For(Name('rpcfile', Store(), lineno=172, col_offset=12), Name('exclude', Load(), lineno=172, col_offset=23), [If(Call(Attribute(Subscript(Subscript(Name('tb', Load(), lineno=173, col_offset=15), Index(Num(0, lineno=173, col_offset=18)), Load(), lineno=173, col_offset=15), Index(Num(0, lineno=173, col_offset=21)), Load(), lineno=173, col_offset=15), 'count', Load(), lineno=173, col_offset=15), [Name('rpcfile', Load(), lineno=173, col_offset=30)], [], None, None, lineno=173, col_offset=15), [Break( lineno=174, col_offset=16)], [], lineno=173, col_offset=12)], [Break( lineno=176, col_offset=12)], lineno=172, col_offset=8), Delete([Subscript(Name('tb', Load(), lineno=177, col_offset=12), Index(Num(0, lineno=177, col_offset=15)), Del(), lineno=177, col_offset=12)], lineno=177, col_offset=8)], [], lineno=171, col_offset=4), While(Name('tb', Load(), lineno=178, col_offset=10), [For(Name('rpcfile', Store(), lineno=179, col_offset=12), Name('exclude', Load(), lineno=179, col_offset=23), [If(Call(Attribute(Subscript(Subscript(Name('tb', Load(), lineno=180, col_offset=15), Index(Num(-1, lineno=180, col_offset=19)), Load(), lineno=180, col_offset=15), Index(Num(0, lineno=180, col_offset=22)), Load(), lineno=180, col_offset=15), 'count', Load(), lineno=180, col_offset=15), [Name('rpcfile', Load(), lineno=180, col_offset=31)], [], None, None, lineno=180, col_offset=15), [Break( lineno=181, col_offset=16)], [], lineno=180, col_offset=12)], [Break( lineno=183, col_offset=12)], lineno=179, col_offset=8), Delete([Subscript(Name('tb', Load(), lineno=184, col_offset=12), Index(Num(-1, lineno=184, col_offset=16)), Del(), lineno=184, col_offset=12)], lineno=184, col_offset=8)], [], lineno=178, col_offset=4), If(Compare(Call(Name('len', Load(), lineno=185, col_offset=7), [Name('tb', Load(), lineno=185, col_offset=11)], [], None, None, lineno=185, col_offset=7), [Eq()], [Num(0, lineno=185, col_offset=18)], lineno=185, col_offset=7), [Assign([Subscript(Name('tb', Load(), lineno=187, col_offset=8), Slice(None, None, None), Store(), lineno=187, col_offset=8)], Subscript(Name('orig_tb', Load(), lineno=187, col_offset=16), Slice(None, None, None), Load(), lineno=187, col_offset=16), lineno=187, col_offset=8), Print(Attribute(Name('sys', Load(), lineno=188, col_offset=15), 'stderr', Load(), lineno=188, col_offset=15), [Str('** IDLE Internal Exception: ', lineno=188, col_offset=27)], True, lineno=188, col_offset=8)], [], lineno=185, col_offset=4), Assign([Name('rpchandler', Store(), lineno=189, col_offset=4)], Attribute(Subscript(Attribute(Name('rpc', Load(), lineno=189, col_offset=17), 'objecttable', Load(), lineno=189, col_offset=17), Index(Str('exec', lineno=189, col_offset=33)), Load(), lineno=189, col_offset=17), 'rpchandler', Load(), lineno=189, col_offset=17), lineno=189, col_offset=4), For(Name('i', Store(), lineno=190, col_offset=8), Call(Name('range', Load(), lineno=190, col_offset=13), [Call(Name('len', Load(), lineno=190, col_offset=19), [Name('tb', Load(), lineno=190, col_offset=23)], [], None, None, lineno=190, col_offset=19)], [], None, None, lineno=190, col_offset=13), [Assign([Tuple([Name('fn', Store(), lineno=191, col_offset=8), Name('ln', Store(), lineno=191, col_offset=12), Name('nm', Store(), lineno=191, col_offset=16), Name('line', Store(), lineno=191, col_offset=20)], Store(), lineno=191, col_offset=8)], Subscript(Name('tb', Load(), lineno=191, col_offset=27), Index(Name('i', Load(), lineno=191, col_offset=30)), Load(), lineno=191, col_offset=27), lineno=191, col_offset=8), If(Compare(Name('nm', Load(), lineno=192, col_offset=11), [Eq()], [Str('?', lineno=192, col_offset=17)], lineno=192, col_offset=11), [Assign([Name('nm', Store(), lineno=193, col_offset=12)], Str('-toplevel-', lineno=193, col_offset=17), lineno=193, col_offset=12)], [], lineno=192, col_offset=8), If(BoolOp(And(), [UnaryOp(Not(), Name('line', Load(), lineno=194, col_offset=15), lineno=194, col_offset=11), Call(Attribute(Name('fn', Load(), lineno=194, col_offset=24), 'startswith', Load(), lineno=194, col_offset=24), [Str('<pyshell#', lineno=194, col_offset=38)], [], None, None, lineno=194, col_offset=24)], lineno=194, col_offset=11), [Assign([Name('line', Store(), lineno=195, col_offset=12)], Call(Attribute(Name('rpchandler', Load(), lineno=195, col_offset=19), 'remotecall', Load(), lineno=195, col_offset=19), [Str('linecache', lineno=195, col_offset=41), Str('getline', lineno=195, col_offset=54), Tuple([Name('fn', Load(), lineno=196, col_offset=47), Name('ln', Load(), lineno=196, col_offset=51)], Load(), lineno=196, col_offset=47), Dict([], [], lineno=196, col_offset=56)], [], None, None, lineno=195, col_offset=19), lineno=195, col_offset=12)], [], lineno=194, col_offset=8), Assign([Subscript(Name('tb', Load(), lineno=197, col_offset=8), Index(Name('i', Load(), lineno=197, col_offset=11)), Store(), lineno=197, col_offset=8)], Tuple([Name('fn', Load(), lineno=197, col_offset=16), Name('ln', Load(), lineno=197, col_offset=20), Name('nm', Load(), lineno=197, col_offset=24), Name('line', Load(), lineno=197, col_offset=28)], Load(), lineno=197, col_offset=16), lineno=197, col_offset=8)], [], lineno=190, col_offset=4)], [], lineno=168, col_offset=0), FunctionDef('flush_stdout', arguments([], None, None, []), [TryExcept([If(Attribute(Attribute(Name('sys', Load(), lineno=201, col_offset=11), 'stdout', Load(), lineno=201, col_offset=11), 'softspace', Load(), lineno=201, col_offset=11), [Assign([Attribute(Attribute(Name('sys', Load(), lineno=202, col_offset=12), 'stdout', Load(), lineno=202, col_offset=12), 'softspace', Store(), lineno=202, col_offset=12)], Num(0, lineno=202, col_offset=35), lineno=202, col_offset=12), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=203, col_offset=12), 'stdout', Load(), lineno=203, col_offset=12), 'write', Load(), lineno=203, col_offset=12), [Str('\n', lineno=203, col_offset=29)], [], None, None, lineno=203, col_offset=12), lineno=203, col_offset=12)], [], lineno=201, col_offset=8)], [ExceptHandler(Tuple([Name('AttributeError', Load(), lineno=204, col_offset=12), Name('EOFError', Load(), lineno=204, col_offset=28)], Load(), lineno=204, col_offset=12), None, [Pass( lineno=205, col_offset=8)], lineno=204, col_offset=4)], [], lineno=200, col_offset=4)], [], lineno=199, col_offset=0), FunctionDef('exit', arguments([], None, None, []), [Expr(Str("Exit subprocess, possibly after first deleting sys.exitfunc\n\n    If config-main.cfg/.def 'General' 'delete-exitfunc' is True, then any\n    sys.exitfunc will be removed before exiting.  (VPython support)\n\n    ", lineno=213, col_offset=-1), lineno=213, col_offset=-1), If(Name('no_exitfunc', Load(), lineno=214, col_offset=7), [TryExcept([Delete([Attribute(Name('sys', Load(), lineno=216, col_offset=16), 'exitfunc', Del(), lineno=216, col_offset=16)], lineno=216, col_offset=12)], [ExceptHandler(Name('AttributeError', Load(), lineno=217, col_offset=15), None, [Pass( lineno=218, col_offset=12)], lineno=217, col_offset=8)], [], lineno=215, col_offset=8)], [], lineno=214, col_offset=4), Expr(Call(Attribute(Name('sys', Load(), lineno=219, col_offset=4), 'exit', Load(), lineno=219, col_offset=4), [Num(0, lineno=219, col_offset=13)], [], None, None, lineno=219, col_offset=4), lineno=219, col_offset=4)], [], lineno=207, col_offset=0), ClassDef('MyRPCServer', [Attribute(Name('rpc', Load(), lineno=221, col_offset=18), 'RPCServer', Load(), lineno=221, col_offset=18)], [FunctionDef('handle_error', arguments([Name('self', Param(), lineno=223, col_offset=21), Name('request', Param(), lineno=223, col_offset=27), Name('client_address', Param(), lineno=223, col_offset=36)], None, None, []), [Expr(Str('Override RPCServer method for IDLE\n\n        Interrupt the MainThread and exit server if link is dropped.\n\n        ', lineno=228, col_offset=-1), lineno=228, col_offset=-1), Global(['quitting'], lineno=229, col_offset=8), TryExcept([Raise(None, None, None, lineno=231, col_offset=12)], [ExceptHandler(Name('SystemExit', Load(), lineno=232, col_offset=15), None, [Raise(None, None, None, lineno=233, col_offset=12)], lineno=232, col_offset=8), ExceptHandler(Name('EOFError', Load(), lineno=234, col_offset=15), None, [Global(['exit_now'], lineno=235, col_offset=12), Assign([Name('exit_now', Store(), lineno=236, col_offset=12)], Name('True', Load(), lineno=236, col_offset=23), lineno=236, col_offset=12), Expr(Call(Attribute(Name('thread', Load(), lineno=237, col_offset=12), 'interrupt_main', Load(), lineno=237, col_offset=12), [], [], None, None, lineno=237, col_offset=12), lineno=237, col_offset=12)], lineno=234, col_offset=8), ExceptHandler(None, None, [Assign([Name('erf', Store(), lineno=239, col_offset=12)], Attribute(Name('sys', Load(), lineno=239, col_offset=18), '__stderr__', Load(), lineno=239, col_offset=18), lineno=239, col_offset=12), Print(Name('erf', Load(), lineno=240, col_offset=19), [BinOp(Str('\n', lineno=240, col_offset=24), Add(), BinOp(Str('-', lineno=240, col_offset=31), Mult(), Num(40, lineno=240, col_offset=35), lineno=240, col_offset=31), lineno=240, col_offset=24)], True, lineno=240, col_offset=12), Print(Name('erf', Load(), lineno=241, col_offset=19), [Str('Unhandled server exception!', lineno=241, col_offset=24)], True, lineno=241, col_offset=12), Print(Name('erf', Load(), lineno=242, col_offset=19), [BinOp(Str('Thread: %s', lineno=242, col_offset=24), Mod(), Call(Attribute(Call(Attribute(Name('threading', Load(), lineno=242, col_offset=39), 'currentThread', Load(), lineno=242, col_offset=39), [], [], None, None, lineno=242, col_offset=39), 'getName', Load(), lineno=242, col_offset=39), [], [], None, None, lineno=242, col_offset=39), lineno=242, col_offset=24)], True, lineno=242, col_offset=12), Print(Name('erf', Load(), lineno=243, col_offset=19), [Str('Client Address: ', lineno=243, col_offset=24), Name('client_address', Load(), lineno=243, col_offset=44)], True, lineno=243, col_offset=12), Print(Name('erf', Load(), lineno=244, col_offset=19), [Str('Request: ', lineno=244, col_offset=24), Call(Name('repr', Load(), lineno=244, col_offset=37), [Name('request', Load(), lineno=244, col_offset=42)], [], None, None, lineno=244, col_offset=37)], True, lineno=244, col_offset=12), Expr(Call(Attribute(Name('traceback', Load(), lineno=245, col_offset=12), 'print_exc', Load(), lineno=245, col_offset=12), [], [keyword('file', Name('erf', Load(), lineno=245, col_offset=37))], None, None, lineno=245, col_offset=12), lineno=245, col_offset=12), Print(Name('erf', Load(), lineno=246, col_offset=19), [Str('\n*** Unrecoverable, server exiting!', lineno=246, col_offset=24)], True, lineno=246, col_offset=12), Print(Name('erf', Load(), lineno=247, col_offset=19), [BinOp(Str('-', lineno=247, col_offset=24), Mult(), Num(40, lineno=247, col_offset=28), lineno=247, col_offset=24)], True, lineno=247, col_offset=12), Assign([Name('quitting', Store(), lineno=248, col_offset=12)], Name('True', Load(), lineno=248, col_offset=23), lineno=248, col_offset=12), Expr(Call(Attribute(Name('thread', Load(), lineno=249, col_offset=12), 'interrupt_main', Load(), lineno=249, col_offset=12), [], [], None, None, lineno=249, col_offset=12), lineno=249, col_offset=12)], lineno=238, col_offset=8)], [], lineno=230, col_offset=8)], [], lineno=223, col_offset=4)], [], lineno=221, col_offset=0), ClassDef('MyHandler', [Attribute(Name('rpc', Load(), lineno=252, col_offset=16), 'RPCHandler', Load(), lineno=252, col_offset=16)], [FunctionDef('handle', arguments([Name('self', Param(), lineno=254, col_offset=15)], None, None, []), [Expr(Str('Override base method', lineno=255, col_offset=8), lineno=255, col_offset=8), Assign([Name('executive', Store(), lineno=256, col_offset=8)], Call(Name('Executive', Load(), lineno=256, col_offset=20), [Name('self', Load(), lineno=256, col_offset=30)], [], None, None, lineno=256, col_offset=20), lineno=256, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=257, col_offset=8), 'register', Load(), lineno=257, col_offset=8), [Str('exec', lineno=257, col_offset=22), Name('executive', Load(), lineno=257, col_offset=30)], [], None, None, lineno=257, col_offset=8), lineno=257, col_offset=8), Assign([Attribute(Name('sys', Load(), lineno=258, col_offset=8), 'stdin', Store(), lineno=258, col_offset=8), Attribute(Name('self', Load(), lineno=258, col_offset=20), 'console', Store(), lineno=258, col_offset=20)], Call(Attribute(Name('self', Load(), lineno=258, col_offset=35), 'get_remote_proxy', Load(), lineno=258, col_offset=35), [Str('stdin', lineno=258, col_offset=57)], [], None, None, lineno=258, col_offset=35), lineno=258, col_offset=8), Assign([Attribute(Name('sys', Load(), lineno=259, col_offset=8), 'stdout', Store(), lineno=259, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=259, col_offset=21), 'get_remote_proxy', Load(), lineno=259, col_offset=21), [Str('stdout', lineno=259, col_offset=43)], [], None, None, lineno=259, col_offset=21), lineno=259, col_offset=8), Assign([Attribute(Name('sys', Load(), lineno=260, col_offset=8), 'stderr', Store(), lineno=260, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=260, col_offset=21), 'get_remote_proxy', Load(), lineno=260, col_offset=21), [Str('stderr', lineno=260, col_offset=43)], [], None, None, lineno=260, col_offset=21), lineno=260, col_offset=8), ImportFrom('idlelib', [alias('IOBinding', None)], 0, lineno=261, col_offset=8), Assign([Attribute(Attribute(Name('sys', Load(), lineno=262, col_offset=8), 'stdin', Load(), lineno=262, col_offset=8), 'encoding', Store(), lineno=262, col_offset=8), Attribute(Attribute(Name('sys', Load(), lineno=262, col_offset=29), 'stdout', Load(), lineno=262, col_offset=29), 'encoding', Store(), lineno=262, col_offset=29), Attribute(Attribute(Name('sys', Load(), lineno=263, col_offset=29), 'stderr', Load(), lineno=263, col_offset=29), 'encoding', Store(), lineno=263, col_offset=29)], Attribute(Name('IOBinding', Load(), lineno=263, col_offset=51), 'encoding', Load(), lineno=263, col_offset=51), lineno=262, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=264, col_offset=8), 'interp', Store(), lineno=264, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=264, col_offset=22), 'get_remote_proxy', Load(), lineno=264, col_offset=22), [Str('interp', lineno=264, col_offset=44)], [], None, None, lineno=264, col_offset=22), lineno=264, col_offset=8), Expr(Call(Attribute(Attribute(Name('rpc', Load(), lineno=265, col_offset=8), 'RPCHandler', Load(), lineno=265, col_offset=8), 'getresponse', Load(), lineno=265, col_offset=8), [Name('self', Load(), lineno=265, col_offset=35)], [keyword('myseq', Name('None', Load(), lineno=265, col_offset=47)), keyword('wait', Num(0.05, lineno=265, col_offset=58))], None, None, lineno=265, col_offset=8), lineno=265, col_offset=8)], [], lineno=254, col_offset=4), FunctionDef('exithook', arguments([Name('self', Param(), lineno=267, col_offset=17)], None, None, []), [Expr(Str('override SocketIO method - wait for MainThread to shut us down', lineno=268, col_offset=8), lineno=268, col_offset=8), Expr(Call(Attribute(Name('time', Load(), lineno=269, col_offset=8), 'sleep', Load(), lineno=269, col_offset=8), [Num(10, lineno=269, col_offset=19)], [], None, None, lineno=269, col_offset=8), lineno=269, col_offset=8)], [], lineno=267, col_offset=4), FunctionDef('EOFhook', arguments([Name('self', Param(), lineno=271, col_offset=16)], None, None, []), [Expr(Str('Override SocketIO method - terminate wait on callback and exit thread', lineno=272, col_offset=8), lineno=272, col_offset=8), Global(['quitting'], lineno=273, col_offset=8), Assign([Name('quitting', Store(), lineno=274, col_offset=8)], Name('True', Load(), lineno=274, col_offset=19), lineno=274, col_offset=8), Expr(Call(Attribute(Name('thread', Load(), lineno=275, col_offset=8), 'interrupt_main', Load(), lineno=275, col_offset=8), [], [], None, None, lineno=275, col_offset=8), lineno=275, col_offset=8)], [], lineno=271, col_offset=4), FunctionDef('decode_interrupthook', arguments([Name('self', Param(), lineno=277, col_offset=29)], None, None, []), [Expr(Str('interrupt awakened thread', lineno=278, col_offset=8), lineno=278, col_offset=8), Global(['quitting'], lineno=279, col_offset=8), Assign([Name('quitting', Store(), lineno=280, col_offset=8)], Name('True', Load(), lineno=280, col_offset=19), lineno=280, col_offset=8), Expr(Call(Attribute(Name('thread', Load(), lineno=281, col_offset=8), 'interrupt_main', Load(), lineno=281, col_offset=8), [], [], None, None, lineno=281, col_offset=8), lineno=281, col_offset=8)], [], lineno=277, col_offset=4)], [], lineno=252, col_offset=0), ClassDef('Executive', [Name('object', Load(), lineno=284, col_offset=16)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=286, col_offset=17), Name('rpchandler', Param(), lineno=286, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=287, col_offset=8), 'rpchandler', Store(), lineno=287, col_offset=8)], Name('rpchandler', Load(), lineno=287, col_offset=26), lineno=287, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=288, col_offset=8), 'locals', Store(), lineno=288, col_offset=8)], Attribute(Name('__main__', Load(), lineno=288, col_offset=22), '__dict__', Load(), lineno=288, col_offset=22), lineno=288, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=289, col_offset=8), 'calltip', Store(), lineno=289, col_offset=8)], Call(Attribute(Name('CallTips', Load(), lineno=289, col_offset=23), 'CallTips', Load(), lineno=289, col_offset=23), [], [], None, None, lineno=289, col_offset=23), lineno=289, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=290, col_offset=8), 'autocomplete', Store(), lineno=290, col_offset=8)], Call(Attribute(Name('AutoComplete', Load(), lineno=290, col_offset=28), 'AutoComplete', Load(), lineno=290, col_offset=28), [], [], None, None, lineno=290, col_offset=28), lineno=290, col_offset=8)], [], lineno=286, col_offset=4), FunctionDef('runcode', arguments([Name('self', Param(), lineno=292, col_offset=16), Name('code', Param(), lineno=292, col_offset=22)], None, None, []), [Global(['interruptable'], lineno=293, col_offset=8), TryExcept([Assign([Attribute(Name('self', Load(), lineno=295, col_offset=12), 'usr_exc_info', Store(), lineno=295, col_offset=12)], Name('None', Load(), lineno=295, col_offset=32), lineno=295, col_offset=12), Assign([Name('interruptable', Store(), lineno=296, col_offset=12)], Name('True', Load(), lineno=296, col_offset=28), lineno=296, col_offset=12), TryFinally([Exec(Name('code', Load(), lineno=298, col_offset=21), Attribute(Name('self', Load(), lineno=298, col_offset=29), 'locals', Load(), lineno=298, col_offset=29), None, lineno=298, col_offset=16)], [Assign([Name('interruptable', Store(), lineno=300, col_offset=16)], Name('False', Load(), lineno=300, col_offset=32), lineno=300, col_offset=16)], lineno=297, col_offset=12)], [ExceptHandler(None, None, [Assign([Attribute(Name('self', Load(), lineno=302, col_offset=12), 'usr_exc_info', Store(), lineno=302, col_offset=12)], Call(Attribute(Name('sys', Load(), lineno=302, col_offset=32), 'exc_info', Load(), lineno=302, col_offset=32), [], [], None, None, lineno=302, col_offset=32), lineno=302, col_offset=12), If(Name('quitting', Load(), lineno=303, col_offset=15), [Expr(Call(Name('exit', Load(), lineno=304, col_offset=16), [], [], None, None, lineno=304, col_offset=16), lineno=304, col_offset=16)], [], lineno=303, col_offset=12), Expr(Call(Name('print_exception', Load(), lineno=306, col_offset=12), [], [], None, None, lineno=306, col_offset=12), lineno=306, col_offset=12), Assign([Name('jit', Store(), lineno=307, col_offset=12)], Call(Attribute(Attribute(Attribute(Name('self', Load(), lineno=307, col_offset=18), 'rpchandler', Load(), lineno=307, col_offset=18), 'console', Load(), lineno=307, col_offset=18), 'getvar', Load(), lineno=307, col_offset=18), [Str('<<toggle-jit-stack-viewer>>', lineno=307, col_offset=49)], [], None, None, lineno=307, col_offset=18), lineno=307, col_offset=12), If(Name('jit', Load(), lineno=308, col_offset=15), [Expr(Call(Attribute(Attribute(Attribute(Name('self', Load(), lineno=309, col_offset=16), 'rpchandler', Load(), lineno=309, col_offset=16), 'interp', Load(), lineno=309, col_offset=16), 'open_remote_stack_viewer', Load(), lineno=309, col_offset=16), [], [], None, None, lineno=309, col_offset=16), lineno=309, col_offset=16)], [], lineno=308, col_offset=12)], lineno=301, col_offset=8)], [Expr(Call(Name('flush_stdout', Load(), lineno=311, col_offset=12), [], [], None, None, lineno=311, col_offset=12), lineno=311, col_offset=12)], lineno=294, col_offset=8)], [], lineno=292, col_offset=4), FunctionDef('interrupt_the_server', arguments([Name('self', Param(), lineno=313, col_offset=29)], None, None, []), [If(Name('interruptable', Load(), lineno=314, col_offset=11), [Expr(Call(Attribute(Name('thread', Load(), lineno=315, col_offset=12), 'interrupt_main', Load(), lineno=315, col_offset=12), [], [], None, None, lineno=315, col_offset=12), lineno=315, col_offset=12)], [], lineno=314, col_offset=8)], [], lineno=313, col_offset=4), FunctionDef('start_the_debugger', arguments([Name('self', Param(), lineno=317, col_offset=27), Name('gui_adap_oid', Param(), lineno=317, col_offset=33)], None, None, []), [Return(Call(Attribute(Name('RemoteDebugger', Load(), lineno=318, col_offset=15), 'start_debugger', Load(), lineno=318, col_offset=15), [Attribute(Name('self', Load(), lineno=318, col_offset=45), 'rpchandler', Load(), lineno=318, col_offset=45), Name('gui_adap_oid', Load(), lineno=318, col_offset=62)], [], None, None, lineno=318, col_offset=15), lineno=318, col_offset=8)], [], lineno=317, col_offset=4), FunctionDef('stop_the_debugger', arguments([Name('self', Param(), lineno=320, col_offset=26), Name('idb_adap_oid', Param(), lineno=320, col_offset=32)], None, None, []), [Expr(Str('Unregister the Idb Adapter.  Link objects and Idb then subject to GC', lineno=321, col_offset=8), lineno=321, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=322, col_offset=8), 'rpchandler', Load(), lineno=322, col_offset=8), 'unregister', Load(), lineno=322, col_offset=8), [Name('idb_adap_oid', Load(), lineno=322, col_offset=35)], [], None, None, lineno=322, col_offset=8), lineno=322, col_offset=8)], [], lineno=320, col_offset=4), FunctionDef('get_the_calltip', arguments([Name('self', Param(), lineno=324, col_offset=24), Name('name', Param(), lineno=324, col_offset=30)], None, None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=325, col_offset=15), 'calltip', Load(), lineno=325, col_offset=15), 'fetch_tip', Load(), lineno=325, col_offset=15), [Name('name', Load(), lineno=325, col_offset=38)], [], None, None, lineno=325, col_offset=15), lineno=325, col_offset=8)], [], lineno=324, col_offset=4), FunctionDef('get_the_completion_list', arguments([Name('self', Param(), lineno=327, col_offset=32), Name('what', Param(), lineno=327, col_offset=38), Name('mode', Param(), lineno=327, col_offset=44)], None, None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=328, col_offset=15), 'autocomplete', Load(), lineno=328, col_offset=15), 'fetch_completions', Load(), lineno=328, col_offset=15), [Name('what', Load(), lineno=328, col_offset=51), Name('mode', Load(), lineno=328, col_offset=57)], [], None, None, lineno=328, col_offset=15), lineno=328, col_offset=8)], [], lineno=327, col_offset=4), FunctionDef('stackviewer', arguments([Name('self', Param(), lineno=330, col_offset=20), Name('flist_oid', Param(), lineno=330, col_offset=26)], None, None, [Name('None', Load(), lineno=330, col_offset=36)]), [If(Attribute(Name('self', Load(), lineno=331, col_offset=11), 'usr_exc_info', Load(), lineno=331, col_offset=11), [Assign([Tuple([Name('typ', Store(), lineno=332, col_offset=12), Name('val', Store(), lineno=332, col_offset=17), Name('tb', Store(), lineno=332, col_offset=22)], Store(), lineno=332, col_offset=12)], Attribute(Name('self', Load(), lineno=332, col_offset=27), 'usr_exc_info', Load(), lineno=332, col_offset=27), lineno=332, col_offset=12)], [Return(Name('None', Load(), lineno=334, col_offset=19), lineno=334, col_offset=12)], lineno=331, col_offset=8), Assign([Name('flist', Store(), lineno=335, col_offset=8)], Name('None', Load(), lineno=335, col_offset=16), lineno=335, col_offset=8), If(Compare(Name('flist_oid', Load(), lineno=336, col_offset=11), [IsNot()], [Name('None', Load(), lineno=336, col_offset=28)], lineno=336, col_offset=11), [Assign([Name('flist', Store(), lineno=337, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=337, col_offset=20), 'rpchandler', Load(), lineno=337, col_offset=20), 'get_remote_proxy', Load(), lineno=337, col_offset=20), [Name('flist_oid', Load(), lineno=337, col_offset=53)], [], None, None, lineno=337, col_offset=20), lineno=337, col_offset=12)], [], lineno=336, col_offset=8), While(BoolOp(And(), [Name('tb', Load(), lineno=338, col_offset=14), Compare(Subscript(Attribute(Attribute(Name('tb', Load(), lineno=338, col_offset=21), 'tb_frame', Load(), lineno=338, col_offset=21), 'f_globals', Load(), lineno=338, col_offset=21), Index(Str('__name__', lineno=338, col_offset=43)), Load(), lineno=338, col_offset=21), [In()], [List([Str('rpc', lineno=338, col_offset=59), Str('run', lineno=338, col_offset=66)], Load(), lineno=338, col_offset=58)], lineno=338, col_offset=21)], lineno=338, col_offset=14), [Assign([Name('tb', Store(), lineno=339, col_offset=12)], Attribute(Name('tb', Load(), lineno=339, col_offset=17), 'tb_next', Load(), lineno=339, col_offset=17), lineno=339, col_offset=12)], [], lineno=338, col_offset=8), Assign([Attribute(Name('sys', Load(), lineno=340, col_offset=8), 'last_type', Store(), lineno=340, col_offset=8)], Name('typ', Load(), lineno=340, col_offset=24), lineno=340, col_offset=8), Assign([Attribute(Name('sys', Load(), lineno=341, col_offset=8), 'last_value', Store(), lineno=341, col_offset=8)], Name('val', Load(), lineno=341, col_offset=25), lineno=341, col_offset=8), Assign([Name('item', Store(), lineno=342, col_offset=8)], Call(Attribute(Name('StackViewer', Load(), lineno=342, col_offset=15), 'StackTreeItem', Load(), lineno=342, col_offset=15), [Name('flist', Load(), lineno=342, col_offset=41), Name('tb', Load(), lineno=342, col_offset=48)], [], None, None, lineno=342, col_offset=15), lineno=342, col_offset=8), Return(Call(Attribute(Name('RemoteObjectBrowser', Load(), lineno=343, col_offset=15), 'remote_object_tree_item', Load(), lineno=343, col_offset=15), [Name('item', Load(), lineno=343, col_offset=59)], [], None, None, lineno=343, col_offset=15), lineno=343, col_offset=8)], [], lineno=330, col_offset=4)], [], lineno=284, col_offset=0)])
