Module([Import([alias('copy_reg', None)], lineno=1, col_offset=0), Import([alias('unittest', None)], lineno=2, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=4, col_offset=0), ImportFrom('test.pickletester', [alias('ExtensionSaver', None)], 0, lineno=5, col_offset=0), ClassDef('C', [], [Pass( lineno=8, col_offset=4)], [], lineno=7, col_offset=0), ClassDef('WithoutSlots', [Name('object', Load(), lineno=11, col_offset=19)], [Pass( lineno=12, col_offset=4)], [], lineno=11, col_offset=0), ClassDef('WithWeakref', [Name('object', Load(), lineno=14, col_offset=18)], [Assign([Name('__slots__', Store(), lineno=15, col_offset=4)], Tuple([Str('__weakref__', lineno=15, col_offset=17)], Load(), lineno=15, col_offset=17), lineno=15, col_offset=4)], [], lineno=14, col_offset=0), ClassDef('WithPrivate', [Name('object', Load(), lineno=17, col_offset=18)], [Assign([Name('__slots__', Store(), lineno=18, col_offset=4)], Tuple([Str('__spam', lineno=18, col_offset=17)], Load(), lineno=18, col_offset=17), lineno=18, col_offset=4)], [], lineno=17, col_offset=0), ClassDef('WithSingleString', [Name('object', Load(), lineno=20, col_offset=23)], [Assign([Name('__slots__', Store(), lineno=21, col_offset=4)], Str('spam', lineno=21, col_offset=16), lineno=21, col_offset=4)], [], lineno=20, col_offset=0), ClassDef('WithInherited', [Name('WithSingleString', Load(), lineno=23, col_offset=20)], [Assign([Name('__slots__', Store(), lineno=24, col_offset=4)], Tuple([Str('eggs', lineno=24, col_offset=17)], Load(), lineno=24, col_offset=17), lineno=24, col_offset=4)], [], lineno=23, col_offset=0), ClassDef('CopyRegTestCase', [Attribute(Name('unittest', Load(), lineno=27, col_offset=22), 'TestCase', Load(), lineno=27, col_offset=22)], [FunctionDef('test_class', arguments([Name('self', Param(), lineno=29, col_offset=19)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=30, col_offset=8), 'assertRaises', Load(), lineno=30, col_offset=8), [Name('TypeError', Load(), lineno=30, col_offset=26), Attribute(Name('copy_reg', Load(), lineno=30, col_offset=37), 'pickle', Load(), lineno=30, col_offset=37), Name('C', Load(), lineno=31, col_offset=26), Name('None', Load(), lineno=31, col_offset=29), Name('None', Load(), lineno=31, col_offset=35)], [], None, None, lineno=30, col_offset=8), lineno=30, col_offset=8)], [], lineno=29, col_offset=4), FunctionDef('test_noncallable_reduce', arguments([Name('self', Param(), lineno=33, col_offset=32)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=34, col_offset=8), 'assertRaises', Load(), lineno=34, col_offset=8), [Name('TypeError', Load(), lineno=34, col_offset=26), Attribute(Name('copy_reg', Load(), lineno=34, col_offset=37), 'pickle', Load(), lineno=34, col_offset=37), Call(Name('type', Load(), lineno=35, col_offset=26), [Num(1, lineno=35, col_offset=31)], [], None, None, lineno=35, col_offset=26), Str('not a callable', lineno=35, col_offset=35)], [], None, None, lineno=34, col_offset=8), lineno=34, col_offset=8)], [], lineno=33, col_offset=4), FunctionDef('test_noncallable_constructor', arguments([Name('self', Param(), lineno=37, col_offset=37)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=38, col_offset=8), 'assertRaises', Load(), lineno=38, col_offset=8), [Name('TypeError', Load(), lineno=38, col_offset=26), Attribute(Name('copy_reg', Load(), lineno=38, col_offset=37), 'pickle', Load(), lineno=38, col_offset=37), Call(Name('type', Load(), lineno=39, col_offset=26), [Num(1, lineno=39, col_offset=31)], [], None, None, lineno=39, col_offset=26), Name('int', Load(), lineno=39, col_offset=35), Str('not a callable', lineno=39, col_offset=40)], [], None, None, lineno=38, col_offset=8), lineno=38, col_offset=8)], [], lineno=37, col_offset=4), FunctionDef('test_bool', arguments([Name('self', Param(), lineno=41, col_offset=18)], None, None, []), [Import([alias('copy', None)], lineno=42, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=43, col_offset=8), 'assertEqual', Load(), lineno=43, col_offset=8), [Name('True', Load(), lineno=43, col_offset=25), Call(Attribute(Name('copy', Load(), lineno=43, col_offset=31), 'copy', Load(), lineno=43, col_offset=31), [Name('True', Load(), lineno=43, col_offset=41)], [], None, None, lineno=43, col_offset=31)], [], None, None, lineno=43, col_offset=8), lineno=43, col_offset=8)], [], lineno=41, col_offset=4), FunctionDef('test_extension_registry', arguments([Name('self', Param(), lineno=45, col_offset=32)], None, None, []), [Assign([Tuple([Name('mod', Store(), lineno=46, col_offset=8), Name('func', Store(), lineno=46, col_offset=13), Name('code', Store(), lineno=46, col_offset=19)], Store(), lineno=46, col_offset=8)], Tuple([Str('junk1 ', lineno=46, col_offset=26), Str(' junk2', lineno=46, col_offset=36), Num(43981, lineno=46, col_offset=46)], Load(), lineno=46, col_offset=26), lineno=46, col_offset=8), Assign([Name('e', Store(), lineno=47, col_offset=8)], Call(Name('ExtensionSaver', Load(), lineno=47, col_offset=12), [Name('code', Load(), lineno=47, col_offset=27)], [], None, None, lineno=47, col_offset=12), lineno=47, col_offset=8), TryFinally([Expr(Call(Attribute(Name('self', Load(), lineno=50, col_offset=12), 'assertRaises', Load(), lineno=50, col_offset=12), [Name('ValueError', Load(), lineno=50, col_offset=30), Attribute(Name('copy_reg', Load(), lineno=50, col_offset=42), 'remove_extension', Load(), lineno=50, col_offset=42), Name('mod', Load(), lineno=51, col_offset=30), Name('func', Load(), lineno=51, col_offset=35), Name('code', Load(), lineno=51, col_offset=41)], [], None, None, lineno=50, col_offset=12), lineno=50, col_offset=12), Expr(Call(Attribute(Name('copy_reg', Load(), lineno=52, col_offset=12), 'add_extension', Load(), lineno=52, col_offset=12), [Name('mod', Load(), lineno=52, col_offset=35), Name('func', Load(), lineno=52, col_offset=40), Name('code', Load(), lineno=52, col_offset=46)], [], None, None, lineno=52, col_offset=12), lineno=52, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=54, col_offset=12), 'assertTrue', Load(), lineno=54, col_offset=12), [Compare(Subscript(Attribute(Name('copy_reg', Load(), lineno=54, col_offset=28), '_extension_registry', Load(), lineno=54, col_offset=28), Index(Tuple([Name('mod', Load(), lineno=54, col_offset=57), Name('func', Load(), lineno=54, col_offset=62)], Load(), lineno=54, col_offset=57)), Load(), lineno=54, col_offset=28), [Eq()], [Name('code', Load(), lineno=54, col_offset=71)], lineno=54, col_offset=28)], [], None, None, lineno=54, col_offset=12), lineno=54, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=55, col_offset=12), 'assertTrue', Load(), lineno=55, col_offset=12), [Compare(Subscript(Attribute(Name('copy_reg', Load(), lineno=55, col_offset=28), '_inverted_registry', Load(), lineno=55, col_offset=28), Index(Name('code', Load(), lineno=55, col_offset=56)), Load(), lineno=55, col_offset=28), [Eq()], [Tuple([Name('mod', Load(), lineno=55, col_offset=66), Name('func', Load(), lineno=55, col_offset=71)], Load(), lineno=55, col_offset=66)], lineno=55, col_offset=28)], [], None, None, lineno=55, col_offset=12), lineno=55, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=57, col_offset=12), 'assertNotIn', Load(), lineno=57, col_offset=12), [Name('code', Load(), lineno=57, col_offset=29), Attribute(Name('copy_reg', Load(), lineno=57, col_offset=35), '_extension_cache', Load(), lineno=57, col_offset=35)], [], None, None, lineno=57, col_offset=12), lineno=57, col_offset=12), Expr(Call(Attribute(Name('copy_reg', Load(), lineno=59, col_offset=12), 'add_extension', Load(), lineno=59, col_offset=12), [Name('mod', Load(), lineno=59, col_offset=35), Name('func', Load(), lineno=59, col_offset=40), Name('code', Load(), lineno=59, col_offset=46)], [], None, None, lineno=59, col_offset=12), lineno=59, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=61, col_offset=12), 'assertRaises', Load(), lineno=61, col_offset=12), [Name('ValueError', Load(), lineno=61, col_offset=30), Attribute(Name('copy_reg', Load(), lineno=61, col_offset=42), 'add_extension', Load(), lineno=61, col_offset=42), Name('mod', Load(), lineno=62, col_offset=30), Name('func', Load(), lineno=62, col_offset=35), BinOp(Name('code', Load(), lineno=62, col_offset=41), Add(), Num(1, lineno=62, col_offset=48), lineno=62, col_offset=41)], [], None, None, lineno=61, col_offset=12), lineno=61, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=63, col_offset=12), 'assertRaises', Load(), lineno=63, col_offset=12), [Name('ValueError', Load(), lineno=63, col_offset=30), Attribute(Name('copy_reg', Load(), lineno=63, col_offset=42), 'remove_extension', Load(), lineno=63, col_offset=42), Name('mod', Load(), lineno=64, col_offset=30), Name('func', Load(), lineno=64, col_offset=35), BinOp(Name('code', Load(), lineno=64, col_offset=41), Add(), Num(1, lineno=64, col_offset=48), lineno=64, col_offset=41)], [], None, None, lineno=63, col_offset=12), lineno=63, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=66, col_offset=12), 'assertRaises', Load(), lineno=66, col_offset=12), [Name('ValueError', Load(), lineno=66, col_offset=30), Attribute(Name('copy_reg', Load(), lineno=66, col_offset=42), 'add_extension', Load(), lineno=66, col_offset=42), Subscript(Name('mod', Load(), lineno=67, col_offset=30), Slice(Num(1, lineno=67, col_offset=34), None, None), Load(), lineno=67, col_offset=30), Name('func', Load(), lineno=67, col_offset=39), Name('code', Load(), lineno=67, col_offset=45)], [], None, None, lineno=66, col_offset=12), lineno=66, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=68, col_offset=12), 'assertRaises', Load(), lineno=68, col_offset=12), [Name('ValueError', Load(), lineno=68, col_offset=30), Attribute(Name('copy_reg', Load(), lineno=68, col_offset=42), 'remove_extension', Load(), lineno=68, col_offset=42), Subscript(Name('mod', Load(), lineno=69, col_offset=30), Slice(Num(1, lineno=69, col_offset=34), None, None), Load(), lineno=69, col_offset=30), Name('func', Load(), lineno=69, col_offset=39), Name('code', Load(), lineno=69, col_offset=45)], [], None, None, lineno=68, col_offset=12), lineno=68, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=71, col_offset=12), 'assertRaises', Load(), lineno=71, col_offset=12), [Name('ValueError', Load(), lineno=71, col_offset=30), Attribute(Name('copy_reg', Load(), lineno=71, col_offset=42), 'add_extension', Load(), lineno=71, col_offset=42), Name('mod', Load(), lineno=72, col_offset=30), Subscript(Name('func', Load(), lineno=72, col_offset=35), Slice(Num(1, lineno=72, col_offset=40), None, None), Load(), lineno=72, col_offset=35), Name('code', Load(), lineno=72, col_offset=45)], [], None, None, lineno=71, col_offset=12), lineno=71, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=73, col_offset=12), 'assertRaises', Load(), lineno=73, col_offset=12), [Name('ValueError', Load(), lineno=73, col_offset=30), Attribute(Name('copy_reg', Load(), lineno=73, col_offset=42), 'remove_extension', Load(), lineno=73, col_offset=42), Name('mod', Load(), lineno=74, col_offset=30), Subscript(Name('func', Load(), lineno=74, col_offset=35), Slice(Num(1, lineno=74, col_offset=40), None, None), Load(), lineno=74, col_offset=35), Name('code', Load(), lineno=74, col_offset=45)], [], None, None, lineno=73, col_offset=12), lineno=73, col_offset=12), If(Compare(BinOp(Name('code', Load(), lineno=76, col_offset=15), Add(), Num(1, lineno=76, col_offset=22), lineno=76, col_offset=15), [NotIn()], [Attribute(Name('copy_reg', Load(), lineno=76, col_offset=31), '_inverted_registry', Load(), lineno=76, col_offset=31)], lineno=76, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=77, col_offset=16), 'assertRaises', Load(), lineno=77, col_offset=16), [Name('ValueError', Load(), lineno=77, col_offset=34), Attribute(Name('copy_reg', Load(), lineno=77, col_offset=46), 'remove_extension', Load(), lineno=77, col_offset=46), Subscript(Name('mod', Load(), lineno=78, col_offset=34), Slice(Num(1, lineno=78, col_offset=38), None, None), Load(), lineno=78, col_offset=34), Subscript(Name('func', Load(), lineno=78, col_offset=43), Slice(Num(1, lineno=78, col_offset=48), None, None), Load(), lineno=78, col_offset=43), BinOp(Name('code', Load(), lineno=78, col_offset=53), Add(), Num(1, lineno=78, col_offset=60), lineno=78, col_offset=53)], [], None, None, lineno=77, col_offset=16), lineno=77, col_offset=16)], [], lineno=76, col_offset=12)], [Expr(Call(Attribute(Name('e', Load(), lineno=81, col_offset=12), 'restore', Load(), lineno=81, col_offset=12), [], [], None, None, lineno=81, col_offset=12), lineno=81, col_offset=12)], lineno=48, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=84, col_offset=8), 'assertNotIn', Load(), lineno=84, col_offset=8), [Tuple([Name('mod', Load(), lineno=84, col_offset=26), Name('func', Load(), lineno=84, col_offset=31)], Load(), lineno=84, col_offset=26), Attribute(Name('copy_reg', Load(), lineno=84, col_offset=38), '_extension_registry', Load(), lineno=84, col_offset=38)], [], None, None, lineno=84, col_offset=8), lineno=84, col_offset=8), For(Name('code', Store(), lineno=90, col_offset=12), Tuple([Num(1, lineno=90, col_offset=20), Num(2147483647, lineno=90, col_offset=23)], Load(), lineno=90, col_offset=20), [Assign([Name('e', Store(), lineno=91, col_offset=12)], Call(Name('ExtensionSaver', Load(), lineno=91, col_offset=16), [Name('code', Load(), lineno=91, col_offset=31)], [], None, None, lineno=91, col_offset=16), lineno=91, col_offset=12), TryFinally([Expr(Call(Attribute(Name('copy_reg', Load(), lineno=93, col_offset=16), 'add_extension', Load(), lineno=93, col_offset=16), [Name('mod', Load(), lineno=93, col_offset=39), Name('func', Load(), lineno=93, col_offset=44), Name('code', Load(), lineno=93, col_offset=50)], [], None, None, lineno=93, col_offset=16), lineno=93, col_offset=16), Expr(Call(Attribute(Name('copy_reg', Load(), lineno=94, col_offset=16), 'remove_extension', Load(), lineno=94, col_offset=16), [Name('mod', Load(), lineno=94, col_offset=42), Name('func', Load(), lineno=94, col_offset=47), Name('code', Load(), lineno=94, col_offset=53)], [], None, None, lineno=94, col_offset=16), lineno=94, col_offset=16)], [Expr(Call(Attribute(Name('e', Load(), lineno=96, col_offset=16), 'restore', Load(), lineno=96, col_offset=16), [], [], None, None, lineno=96, col_offset=16), lineno=96, col_offset=16)], lineno=92, col_offset=12)], [], lineno=90, col_offset=8), For(Name('code', Store(), lineno=99, col_offset=12), Tuple([Num(-1, lineno=99, col_offset=21), Num(0, lineno=99, col_offset=24), Num(2147483648L, lineno=99, col_offset=27)], Load(), lineno=99, col_offset=20), [Expr(Call(Attribute(Name('self', Load(), lineno=100, col_offset=12), 'assertRaises', Load(), lineno=100, col_offset=12), [Name('ValueError', Load(), lineno=100, col_offset=30), Attribute(Name('copy_reg', Load(), lineno=100, col_offset=42), 'add_extension', Load(), lineno=100, col_offset=42), Name('mod', Load(), lineno=101, col_offset=30), Name('func', Load(), lineno=101, col_offset=35), Name('code', Load(), lineno=101, col_offset=41)], [], None, None, lineno=100, col_offset=12), lineno=100, col_offset=12)], [], lineno=99, col_offset=8)], [], lineno=45, col_offset=4), FunctionDef('test_slotnames', arguments([Name('self', Param(), lineno=103, col_offset=23)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=104, col_offset=8), 'assertEqual', Load(), lineno=104, col_offset=8), [Call(Attribute(Name('copy_reg', Load(), lineno=104, col_offset=25), '_slotnames', Load(), lineno=104, col_offset=25), [Name('WithoutSlots', Load(), lineno=104, col_offset=45)], [], None, None, lineno=104, col_offset=25), List([], Load(), lineno=104, col_offset=60)], [], None, None, lineno=104, col_offset=8), lineno=104, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=105, col_offset=8), 'assertEqual', Load(), lineno=105, col_offset=8), [Call(Attribute(Name('copy_reg', Load(), lineno=105, col_offset=25), '_slotnames', Load(), lineno=105, col_offset=25), [Name('WithWeakref', Load(), lineno=105, col_offset=45)], [], None, None, lineno=105, col_offset=25), List([], Load(), lineno=105, col_offset=59)], [], None, None, lineno=105, col_offset=8), lineno=105, col_offset=8), Assign([Name('expected', Store(), lineno=106, col_offset=8)], List([Str('_WithPrivate__spam', lineno=106, col_offset=20)], Load(), lineno=106, col_offset=19), lineno=106, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=107, col_offset=8), 'assertEqual', Load(), lineno=107, col_offset=8), [Call(Attribute(Name('copy_reg', Load(), lineno=107, col_offset=25), '_slotnames', Load(), lineno=107, col_offset=25), [Name('WithPrivate', Load(), lineno=107, col_offset=45)], [], None, None, lineno=107, col_offset=25), Name('expected', Load(), lineno=107, col_offset=59)], [], None, None, lineno=107, col_offset=8), lineno=107, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=108, col_offset=8), 'assertEqual', Load(), lineno=108, col_offset=8), [Call(Attribute(Name('copy_reg', Load(), lineno=108, col_offset=25), '_slotnames', Load(), lineno=108, col_offset=25), [Name('WithSingleString', Load(), lineno=108, col_offset=45)], [], None, None, lineno=108, col_offset=25), List([Str('spam', lineno=108, col_offset=65)], Load(), lineno=108, col_offset=64)], [], None, None, lineno=108, col_offset=8), lineno=108, col_offset=8), Assign([Name('expected', Store(), lineno=109, col_offset=8)], List([Str('eggs', lineno=109, col_offset=20), Str('spam', lineno=109, col_offset=28)], Load(), lineno=109, col_offset=19), lineno=109, col_offset=8), Expr(Call(Attribute(Name('expected', Load(), lineno=110, col_offset=8), 'sort', Load(), lineno=110, col_offset=8), [], [], None, None, lineno=110, col_offset=8), lineno=110, col_offset=8), Assign([Name('result', Store(), lineno=111, col_offset=8)], Call(Attribute(Name('copy_reg', Load(), lineno=111, col_offset=17), '_slotnames', Load(), lineno=111, col_offset=17), [Name('WithInherited', Load(), lineno=111, col_offset=37)], [], None, None, lineno=111, col_offset=17), lineno=111, col_offset=8), Expr(Call(Attribute(Name('result', Load(), lineno=112, col_offset=8), 'sort', Load(), lineno=112, col_offset=8), [], [], None, None, lineno=112, col_offset=8), lineno=112, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=113, col_offset=8), 'assertEqual', Load(), lineno=113, col_offset=8), [Name('result', Load(), lineno=113, col_offset=25), Name('expected', Load(), lineno=113, col_offset=33)], [], None, None, lineno=113, col_offset=8), lineno=113, col_offset=8)], [], lineno=103, col_offset=4)], [], lineno=27, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=117, col_offset=4), 'run_unittest', Load(), lineno=117, col_offset=4), [Name('CopyRegTestCase', Load(), lineno=117, col_offset=30)], [], None, None, lineno=117, col_offset=4), lineno=117, col_offset=4)], [], lineno=116, col_offset=0), If(Compare(Name('__name__', Load(), lineno=120, col_offset=3), [Eq()], [Str('__main__', lineno=120, col_offset=15)], lineno=120, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=121, col_offset=4), [], [], None, None, lineno=121, col_offset=4), lineno=121, col_offset=4)], [], lineno=120, col_offset=0)])
