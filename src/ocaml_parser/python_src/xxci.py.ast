Module([Import([alias('sys', None)], lineno=7, col_offset=0), Import([alias('os', None)], lineno=8, col_offset=0), ImportFrom('stat', [alias('*', None)], 0, lineno=9, col_offset=0), Import([alias('fnmatch', None)], lineno=10, col_offset=0), Assign([Name('EXECMAGIC', Store(), lineno=12, col_offset=0)], Str('\x01`\x00\x08', lineno=12, col_offset=12), lineno=12, col_offset=0), Assign([Name('MAXSIZE', Store(), lineno=14, col_offset=0)], BinOp(Num(200, lineno=14, col_offset=10), Mult(), Num(1024, lineno=14, col_offset=14), lineno=14, col_offset=10), lineno=14, col_offset=0), FunctionDef('getargs', arguments([], None, None, []), [Assign([Name('args', Store(), lineno=17, col_offset=4)], Subscript(Attribute(Name('sys', Load(), lineno=17, col_offset=11), 'argv', Load(), lineno=17, col_offset=11), Slice(Num(1, lineno=17, col_offset=20), None, None), Load(), lineno=17, col_offset=11), lineno=17, col_offset=4), If(Name('args', Load(), lineno=18, col_offset=7), [Return(Name('args', Load(), lineno=19, col_offset=15), lineno=19, col_offset=8)], [], lineno=18, col_offset=4), Print(None, [Str('No arguments, checking almost *, in "ls -t" order', lineno=20, col_offset=10)], True, lineno=20, col_offset=4), Assign([Name('list', Store(), lineno=21, col_offset=4)], List([], Load(), lineno=21, col_offset=11), lineno=21, col_offset=4), For(Name('file', Store(), lineno=22, col_offset=8), Call(Attribute(Name('os', Load(), lineno=22, col_offset=16), 'listdir', Load(), lineno=22, col_offset=16), [Attribute(Name('os', Load(), lineno=22, col_offset=27), 'curdir', Load(), lineno=22, col_offset=27)], [], None, None, lineno=22, col_offset=16), [If(UnaryOp(Not(), Call(Name('skipfile', Load(), lineno=23, col_offset=15), [Name('file', Load(), lineno=23, col_offset=24)], [], None, None, lineno=23, col_offset=15), lineno=23, col_offset=11), [Expr(Call(Attribute(Name('list', Load(), lineno=24, col_offset=12), 'append', Load(), lineno=24, col_offset=12), [Tuple([Call(Name('getmtime', Load(), lineno=24, col_offset=25), [Name('file', Load(), lineno=24, col_offset=34)], [], None, None, lineno=24, col_offset=25), Name('file', Load(), lineno=24, col_offset=41)], Load(), lineno=24, col_offset=25)], [], None, None, lineno=24, col_offset=12), lineno=24, col_offset=12)], [], lineno=23, col_offset=8)], [], lineno=22, col_offset=4), Expr(Call(Attribute(Name('list', Load(), lineno=25, col_offset=4), 'sort', Load(), lineno=25, col_offset=4), [], [], None, None, lineno=25, col_offset=4), lineno=25, col_offset=4), If(UnaryOp(Not(), Name('list', Load(), lineno=26, col_offset=11), lineno=26, col_offset=7), [Print(None, [Str('Nothing to do -- exit 1', lineno=27, col_offset=14)], True, lineno=27, col_offset=8), Expr(Call(Attribute(Name('sys', Load(), lineno=28, col_offset=8), 'exit', Load(), lineno=28, col_offset=8), [Num(1, lineno=28, col_offset=17)], [], None, None, lineno=28, col_offset=8), lineno=28, col_offset=8)], [], lineno=26, col_offset=4), Expr(Call(Attribute(Name('list', Load(), lineno=29, col_offset=4), 'sort', Load(), lineno=29, col_offset=4), [], [], None, None, lineno=29, col_offset=4), lineno=29, col_offset=4), Expr(Call(Attribute(Name('list', Load(), lineno=30, col_offset=4), 'reverse', Load(), lineno=30, col_offset=4), [], [], None, None, lineno=30, col_offset=4), lineno=30, col_offset=4), For(Tuple([Name('mtime', Store(), lineno=31, col_offset=8), Name('file', Store(), lineno=31, col_offset=15)], Store(), lineno=31, col_offset=8), Name('list', Load(), lineno=31, col_offset=23), [Expr(Call(Attribute(Name('args', Load(), lineno=31, col_offset=29), 'append', Load(), lineno=31, col_offset=29), [Name('file', Load(), lineno=31, col_offset=41)], [], None, None, lineno=31, col_offset=29), lineno=31, col_offset=29)], [], lineno=31, col_offset=4), Return(Name('args', Load(), lineno=32, col_offset=11), lineno=32, col_offset=4)], [], lineno=16, col_offset=0), FunctionDef('getmtime', arguments([Name('file', Param(), lineno=34, col_offset=13)], None, None, []), [TryExcept([Assign([Name('st', Store(), lineno=36, col_offset=8)], Call(Attribute(Name('os', Load(), lineno=36, col_offset=13), 'stat', Load(), lineno=36, col_offset=13), [Name('file', Load(), lineno=36, col_offset=21)], [], None, None, lineno=36, col_offset=13), lineno=36, col_offset=8), Return(Subscript(Name('st', Load(), lineno=37, col_offset=15), Index(Name('ST_MTIME', Load(), lineno=37, col_offset=18)), Load(), lineno=37, col_offset=15), lineno=37, col_offset=8)], [ExceptHandler(Attribute(Name('os', Load(), lineno=38, col_offset=11), 'error', Load(), lineno=38, col_offset=11), None, [Return(Num(-1, lineno=39, col_offset=16), lineno=39, col_offset=8)], lineno=38, col_offset=4)], [], lineno=35, col_offset=4)], [], lineno=34, col_offset=0), Assign([Name('badnames', Store(), lineno=41, col_offset=0)], List([Str('tags', lineno=41, col_offset=12), Str('TAGS', lineno=41, col_offset=20), Str('xyzzy', lineno=41, col_offset=28), Str('nohup.out', lineno=41, col_offset=37), Str('core', lineno=41, col_offset=50)], Load(), lineno=41, col_offset=11), lineno=41, col_offset=0), Assign([Name('badprefixes', Store(), lineno=42, col_offset=0)], List([Str('.', lineno=42, col_offset=15), Str(',', lineno=42, col_offset=20), Str('@', lineno=42, col_offset=25), Str('#', lineno=42, col_offset=30), Str('o.', lineno=42, col_offset=35)], Load(), lineno=42, col_offset=14), lineno=42, col_offset=0), Assign([Name('badsuffixes', Store(), lineno=43, col_offset=0)], List([Str('~', lineno=44, col_offset=9), Str('.a', lineno=44, col_offset=14), Str('.o', lineno=44, col_offset=20), Str('.old', lineno=44, col_offset=26), Str('.bak', lineno=44, col_offset=34), Str('.orig', lineno=44, col_offset=42), Str('.new', lineno=44, col_offset=51), Str('.prev', lineno=44, col_offset=59), Str('.not', lineno=44, col_offset=68), Str('.pyc', lineno=45, col_offset=9), Str('.fdc', lineno=45, col_offset=17), Str('.rgb', lineno=45, col_offset=25), Str('.elc', lineno=45, col_offset=33), Str(',v', lineno=45, col_offset=41)], Load(), lineno=44, col_offset=8), lineno=43, col_offset=0), Assign([Name('ignore', Store(), lineno=46, col_offset=0)], List([], Load(), lineno=46, col_offset=9), lineno=46, col_offset=0), FunctionDef('setup', arguments([], None, None, []), [Assign([Subscript(Name('ignore', Load(), lineno=49, col_offset=4), Slice(None, None, None), Store(), lineno=49, col_offset=4)], Name('badnames', Load(), lineno=49, col_offset=16), lineno=49, col_offset=4), For(Name('p', Store(), lineno=50, col_offset=8), Name('badprefixes', Load(), lineno=50, col_offset=13), [Expr(Call(Attribute(Name('ignore', Load(), lineno=51, col_offset=8), 'append', Load(), lineno=51, col_offset=8), [BinOp(Name('p', Load(), lineno=51, col_offset=22), Add(), Str('*', lineno=51, col_offset=26), lineno=51, col_offset=22)], [], None, None, lineno=51, col_offset=8), lineno=51, col_offset=8)], [], lineno=50, col_offset=4), For(Name('p', Store(), lineno=52, col_offset=8), Name('badsuffixes', Load(), lineno=52, col_offset=13), [Expr(Call(Attribute(Name('ignore', Load(), lineno=53, col_offset=8), 'append', Load(), lineno=53, col_offset=8), [BinOp(Str('*', lineno=53, col_offset=22), Add(), Name('p', Load(), lineno=53, col_offset=28), lineno=53, col_offset=22)], [], None, None, lineno=53, col_offset=8), lineno=53, col_offset=8)], [], lineno=52, col_offset=4), TryExcept([Assign([Name('f', Store(), lineno=55, col_offset=8)], Call(Name('open', Load(), lineno=55, col_offset=12), [Str('.xxcign', lineno=55, col_offset=17), Str('r', lineno=55, col_offset=28)], [], None, None, lineno=55, col_offset=12), lineno=55, col_offset=8)], [ExceptHandler(Name('IOError', Load(), lineno=56, col_offset=11), None, [Return(None, lineno=57, col_offset=8)], lineno=56, col_offset=4)], [], lineno=54, col_offset=4), Assign([Subscript(Name('ignore', Load(), lineno=58, col_offset=4), Slice(None, None, None), Store(), lineno=58, col_offset=4)], BinOp(Name('ignore', Load(), lineno=58, col_offset=16), Add(), Call(Attribute(Call(Attribute(Name('f', Load(), lineno=58, col_offset=25), 'read', Load(), lineno=58, col_offset=25), [], [], None, None, lineno=58, col_offset=25), 'split', Load(), lineno=58, col_offset=25), [], [], None, None, lineno=58, col_offset=25), lineno=58, col_offset=16), lineno=58, col_offset=4)], [], lineno=48, col_offset=0), FunctionDef('skipfile', arguments([Name('file', Param(), lineno=60, col_offset=13)], None, None, []), [For(Name('p', Store(), lineno=61, col_offset=8), Name('ignore', Load(), lineno=61, col_offset=13), [If(Call(Attribute(Name('fnmatch', Load(), lineno=62, col_offset=11), 'fnmatch', Load(), lineno=62, col_offset=11), [Name('file', Load(), lineno=62, col_offset=27), Name('p', Load(), lineno=62, col_offset=33)], [], None, None, lineno=62, col_offset=11), [Return(Num(1, lineno=62, col_offset=44), lineno=62, col_offset=37)], [], lineno=62, col_offset=8)], [], lineno=61, col_offset=4), TryExcept([Assign([Name('st', Store(), lineno=64, col_offset=8)], Call(Attribute(Name('os', Load(), lineno=64, col_offset=13), 'lstat', Load(), lineno=64, col_offset=13), [Name('file', Load(), lineno=64, col_offset=22)], [], None, None, lineno=64, col_offset=13), lineno=64, col_offset=8)], [ExceptHandler(Attribute(Name('os', Load(), lineno=65, col_offset=11), 'error', Load(), lineno=65, col_offset=11), None, [Return(Num(1, lineno=66, col_offset=15), lineno=66, col_offset=8)], lineno=65, col_offset=4)], [], lineno=63, col_offset=4), If(UnaryOp(Not(), Call(Name('S_ISREG', Load(), lineno=68, col_offset=11), [Subscript(Name('st', Load(), lineno=68, col_offset=19), Index(Name('ST_MODE', Load(), lineno=68, col_offset=22)), Load(), lineno=68, col_offset=19)], [], None, None, lineno=68, col_offset=11), lineno=68, col_offset=7), [Return(Num(1, lineno=68, col_offset=40), lineno=68, col_offset=33)], [], lineno=68, col_offset=4), If(Compare(Subscript(Name('st', Load(), lineno=70, col_offset=7), Index(Name('ST_SIZE', Load(), lineno=70, col_offset=10)), Load(), lineno=70, col_offset=7), [GtE()], [Name('MAXSIZE', Load(), lineno=70, col_offset=22)], lineno=70, col_offset=7), [Return(Num(1, lineno=70, col_offset=38), lineno=70, col_offset=31)], [], lineno=70, col_offset=4), TryExcept([Assign([Name('data', Store(), lineno=73, col_offset=8)], Call(Attribute(Call(Name('open', Load(), lineno=73, col_offset=15), [Name('file', Load(), lineno=73, col_offset=20), Str('r', lineno=73, col_offset=26)], [], None, None, lineno=73, col_offset=15), 'read', Load(), lineno=73, col_offset=15), [Call(Name('len', Load(), lineno=73, col_offset=36), [Name('EXECMAGIC', Load(), lineno=73, col_offset=40)], [], None, None, lineno=73, col_offset=36)], [], None, None, lineno=73, col_offset=15), lineno=73, col_offset=8), If(Compare(Name('data', Load(), lineno=74, col_offset=11), [Eq()], [Name('EXECMAGIC', Load(), lineno=74, col_offset=19)], lineno=74, col_offset=11), [Return(Num(1, lineno=74, col_offset=37), lineno=74, col_offset=30)], [], lineno=74, col_offset=8)], [ExceptHandler(None, None, [Pass( lineno=76, col_offset=8)], lineno=75, col_offset=4)], [], lineno=72, col_offset=4), Return(Num(0, lineno=77, col_offset=11), lineno=77, col_offset=4)], [], lineno=60, col_offset=0), FunctionDef('badprefix', arguments([Name('file', Param(), lineno=79, col_offset=14)], None, None, []), [For(Name('bad', Store(), lineno=80, col_offset=8), Name('badprefixes', Load(), lineno=80, col_offset=15), [If(Compare(Subscript(Name('file', Load(), lineno=81, col_offset=11), Slice(None, Call(Name('len', Load(), lineno=81, col_offset=17), [Name('bad', Load(), lineno=81, col_offset=21)], [], None, None, lineno=81, col_offset=17), None), Load(), lineno=81, col_offset=11), [Eq()], [Name('bad', Load(), lineno=81, col_offset=30)], lineno=81, col_offset=11), [Return(Num(1, lineno=81, col_offset=42), lineno=81, col_offset=35)], [], lineno=81, col_offset=8)], [], lineno=80, col_offset=4), Return(Num(0, lineno=82, col_offset=11), lineno=82, col_offset=4)], [], lineno=79, col_offset=0), FunctionDef('badsuffix', arguments([Name('file', Param(), lineno=84, col_offset=14)], None, None, []), [For(Name('bad', Store(), lineno=85, col_offset=8), Name('badsuffixes', Load(), lineno=85, col_offset=15), [If(Compare(Subscript(Name('file', Load(), lineno=86, col_offset=11), Slice(UnaryOp(USub(), Call(Name('len', Load(), lineno=86, col_offset=17), [Name('bad', Load(), lineno=86, col_offset=21)], [], None, None, lineno=86, col_offset=17), lineno=86, col_offset=16), None, None), Load(), lineno=86, col_offset=11), [Eq()], [Name('bad', Load(), lineno=86, col_offset=31)], lineno=86, col_offset=11), [Return(Num(1, lineno=86, col_offset=43), lineno=86, col_offset=36)], [], lineno=86, col_offset=8)], [], lineno=85, col_offset=4), Return(Num(0, lineno=87, col_offset=11), lineno=87, col_offset=4)], [], lineno=84, col_offset=0), FunctionDef('go', arguments([Name('args', Param(), lineno=89, col_offset=7)], None, None, []), [For(Name('file', Store(), lineno=90, col_offset=8), Name('args', Load(), lineno=90, col_offset=16), [Print(None, [BinOp(Name('file', Load(), lineno=91, col_offset=14), Add(), Str(':', lineno=91, col_offset=21), lineno=91, col_offset=14)], True, lineno=91, col_offset=8), If(Call(Name('differing', Load(), lineno=92, col_offset=11), [Name('file', Load(), lineno=92, col_offset=21)], [], None, None, lineno=92, col_offset=11), [Expr(Call(Name('showdiffs', Load(), lineno=93, col_offset=12), [Name('file', Load(), lineno=93, col_offset=22)], [], None, None, lineno=93, col_offset=12), lineno=93, col_offset=12), If(Call(Name('askyesno', Load(), lineno=94, col_offset=15), [BinOp(BinOp(Str('Check in ', lineno=94, col_offset=24), Add(), Name('file', Load(), lineno=94, col_offset=38), lineno=94, col_offset=24), Add(), Str(' ? ', lineno=94, col_offset=45), lineno=94, col_offset=43)], [], None, None, lineno=94, col_offset=15), [Assign([Name('sts', Store(), lineno=95, col_offset=16)], Call(Attribute(Name('os', Load(), lineno=95, col_offset=22), 'system', Load(), lineno=95, col_offset=22), [BinOp(Str('rcs -l ', lineno=95, col_offset=32), Add(), Name('file', Load(), lineno=95, col_offset=44), lineno=95, col_offset=32)], [], None, None, lineno=95, col_offset=22), lineno=95, col_offset=16), Assign([Name('sts', Store(), lineno=96, col_offset=16)], Call(Attribute(Name('os', Load(), lineno=96, col_offset=22), 'system', Load(), lineno=96, col_offset=22), [BinOp(Str('ci -l ', lineno=96, col_offset=32), Add(), Name('file', Load(), lineno=96, col_offset=43), lineno=96, col_offset=32)], [], None, None, lineno=96, col_offset=22), lineno=96, col_offset=16)], [], lineno=94, col_offset=12)], [], lineno=92, col_offset=8)], [], lineno=90, col_offset=4)], [], lineno=89, col_offset=0), FunctionDef('differing', arguments([Name('file', Param(), lineno=98, col_offset=14)], None, None, []), [Assign([Name('cmd', Store(), lineno=99, col_offset=4)], BinOp(BinOp(BinOp(Str('co -p ', lineno=99, col_offset=10), Add(), Name('file', Load(), lineno=99, col_offset=21), lineno=99, col_offset=10), Add(), Str(' 2>/dev/null | cmp -s - ', lineno=99, col_offset=28), lineno=99, col_offset=26), Add(), Name('file', Load(), lineno=99, col_offset=57), lineno=99, col_offset=55), lineno=99, col_offset=4), Assign([Name('sts', Store(), lineno=100, col_offset=4)], Call(Attribute(Name('os', Load(), lineno=100, col_offset=10), 'system', Load(), lineno=100, col_offset=10), [Name('cmd', Load(), lineno=100, col_offset=20)], [], None, None, lineno=100, col_offset=10), lineno=100, col_offset=4), Return(Compare(Name('sts', Load(), lineno=101, col_offset=11), [NotEq()], [Num(0, lineno=101, col_offset=18)], lineno=101, col_offset=11), lineno=101, col_offset=4)], [], lineno=98, col_offset=0), FunctionDef('showdiffs', arguments([Name('file', Param(), lineno=103, col_offset=14)], None, None, []), [Assign([Name('cmd', Store(), lineno=104, col_offset=4)], BinOp(BinOp(Str('rcsdiff ', lineno=104, col_offset=10), Add(), Name('file', Load(), lineno=104, col_offset=23), lineno=104, col_offset=10), Add(), Str(' 2>&1 | ${PAGER-more}', lineno=104, col_offset=30), lineno=104, col_offset=28), lineno=104, col_offset=4), Assign([Name('sts', Store(), lineno=105, col_offset=4)], Call(Attribute(Name('os', Load(), lineno=105, col_offset=10), 'system', Load(), lineno=105, col_offset=10), [Name('cmd', Load(), lineno=105, col_offset=20)], [], None, None, lineno=105, col_offset=10), lineno=105, col_offset=4)], [], lineno=103, col_offset=0), FunctionDef('askyesno', arguments([Name('prompt', Param(), lineno=107, col_offset=13)], None, None, []), [Assign([Name('s', Store(), lineno=108, col_offset=4)], Call(Name('raw_input', Load(), lineno=108, col_offset=8), [Name('prompt', Load(), lineno=108, col_offset=18)], [], None, None, lineno=108, col_offset=8), lineno=108, col_offset=4), Return(Compare(Name('s', Load(), lineno=109, col_offset=11), [In()], [List([Str('y', lineno=109, col_offset=17), Str('yes', lineno=109, col_offset=22)], Load(), lineno=109, col_offset=16)], lineno=109, col_offset=11), lineno=109, col_offset=4)], [], lineno=107, col_offset=0), If(Compare(Name('__name__', Load(), lineno=111, col_offset=3), [Eq()], [Str('__main__', lineno=111, col_offset=15)], lineno=111, col_offset=3), [TryExcept([Expr(Call(Name('setup', Load(), lineno=113, col_offset=8), [], [], None, None, lineno=113, col_offset=8), lineno=113, col_offset=8), Expr(Call(Name('go', Load(), lineno=114, col_offset=8), [Call(Name('getargs', Load(), lineno=114, col_offset=11), [], [], None, None, lineno=114, col_offset=11)], [], None, None, lineno=114, col_offset=8), lineno=114, col_offset=8)], [ExceptHandler(Name('KeyboardInterrupt', Load(), lineno=115, col_offset=11), None, [Print(None, [Str('[Intr]', lineno=116, col_offset=14)], True, lineno=116, col_offset=8)], lineno=115, col_offset=4)], [], lineno=112, col_offset=4)], [], lineno=111, col_offset=0)])
