Module([ImportFrom('test', [alias('test_support', None)], 0, lineno=7, col_offset=0), ImportFrom('test', [alias('test_multibytecodec_support', None)], 0, lineno=8, col_offset=0), Import([alias('unittest', None)], lineno=9, col_offset=0), ClassDef('TestGB2312Map', [Attribute(Name('test_multibytecodec_support', Load(), lineno=11, col_offset=20), 'TestBase_Mapping', Load(), lineno=11, col_offset=20), Attribute(Name('unittest', Load(), lineno=12, col_offset=19), 'TestCase', Load(), lineno=12, col_offset=19)], [Assign([Name('encoding', Store(), lineno=13, col_offset=4)], Str('gb2312', lineno=13, col_offset=15), lineno=13, col_offset=4), Assign([Name('mapfileurl', Store(), lineno=14, col_offset=4)], Str('http://people.freebsd.org/~perky/i18n/EUC-CN.TXT', lineno=14, col_offset=17), lineno=14, col_offset=4)], [], lineno=11, col_offset=0), ClassDef('TestGBKMap', [Attribute(Name('test_multibytecodec_support', Load(), lineno=16, col_offset=17), 'TestBase_Mapping', Load(), lineno=16, col_offset=17), Attribute(Name('unittest', Load(), lineno=17, col_offset=19), 'TestCase', Load(), lineno=17, col_offset=19)], [Assign([Name('encoding', Store(), lineno=18, col_offset=4)], Str('gbk', lineno=18, col_offset=15), lineno=18, col_offset=4), Assign([Name('mapfileurl', Store(), lineno=19, col_offset=4)], Str('http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP936.TXT', lineno=19, col_offset=17), lineno=19, col_offset=4)], [], lineno=16, col_offset=0), ClassDef('TestGB18030Map', [Attribute(Name('test_multibytecodec_support', Load(), lineno=22, col_offset=21), 'TestBase_Mapping', Load(), lineno=22, col_offset=21), Attribute(Name('unittest', Load(), lineno=23, col_offset=21), 'TestCase', Load(), lineno=23, col_offset=21)], [Assign([Name('encoding', Store(), lineno=24, col_offset=4)], Str('gb18030', lineno=24, col_offset=15), lineno=24, col_offset=4), Assign([Name('mapfileurl', Store(), lineno=25, col_offset=4)], Str('http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml', lineno=25, col_offset=17), lineno=25, col_offset=4)], [], lineno=22, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=30, col_offset=4), 'run_unittest', Load(), lineno=30, col_offset=4), [Name('__name__', Load(), lineno=30, col_offset=30)], [], None, None, lineno=30, col_offset=4), lineno=30, col_offset=4)], [], lineno=29, col_offset=0), If(Compare(Name('__name__', Load(), lineno=32, col_offset=3), [Eq()], [Str('__main__', lineno=32, col_offset=15)], lineno=32, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=33, col_offset=4), [], [], None, None, lineno=33, col_offset=4), lineno=33, col_offset=4)], [], lineno=32, col_offset=0)])
