Module([Expr(Str("\nThese tests only check url parsing for now.\nWe don't want to require the 'network' resource.\n", lineno=4, col_offset=-1), lineno=4, col_offset=-1), Import([alias('os', None), alias('unittest', None)], lineno=6, col_offset=0), ImportFrom('SimpleHTTPServer', [alias('SimpleHTTPRequestHandler', None)], 0, lineno=7, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=8, col_offset=0), ClassDef('SocketlessRequestHandler', [Name('SimpleHTTPRequestHandler', Load(), lineno=11, col_offset=32)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=12, col_offset=17)], None, None, []), [Pass( lineno=13, col_offset=8)], [], lineno=12, col_offset=4)], [], lineno=11, col_offset=0), ClassDef('SimpleHTTPRequestHandlerTestCase', [Attribute(Name('unittest', Load(), lineno=15, col_offset=39), 'TestCase', Load(), lineno=15, col_offset=39)], [Expr(Str(' Test url parsing ', lineno=16, col_offset=4), lineno=16, col_offset=4), FunctionDef('setUp', arguments([Name('self', Param(), lineno=17, col_offset=15)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=18, col_offset=8), 'translated', Store(), lineno=18, col_offset=8)], Call(Attribute(Name('os', Load(), lineno=18, col_offset=26), 'getcwd', Load(), lineno=18, col_offset=26), [], [], None, None, lineno=18, col_offset=26), lineno=18, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=19, col_offset=8), 'translated', Store(), lineno=19, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=19, col_offset=26), 'path', Load(), lineno=19, col_offset=26), 'join', Load(), lineno=19, col_offset=26), [Attribute(Name('self', Load(), lineno=19, col_offset=39), 'translated', Load(), lineno=19, col_offset=39), Str('filename', lineno=19, col_offset=56)], [], None, None, lineno=19, col_offset=26), lineno=19, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=20, col_offset=8), 'handler', Store(), lineno=20, col_offset=8)], Call(Name('SocketlessRequestHandler', Load(), lineno=20, col_offset=23), [], [], None, None, lineno=20, col_offset=23), lineno=20, col_offset=8)], [], lineno=17, col_offset=4), FunctionDef('test_queryArguments', arguments([Name('self', Param(), lineno=22, col_offset=29)], None, None, []), [Assign([Name('path', Store(), lineno=23, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=23, col_offset=15), 'handler', Load(), lineno=23, col_offset=15), 'translate_path', Load(), lineno=23, col_offset=15), [Str('/filename', lineno=23, col_offset=44)], [], None, None, lineno=23, col_offset=15), lineno=23, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=24, col_offset=8), 'assertEqual', Load(), lineno=24, col_offset=8), [Name('path', Load(), lineno=24, col_offset=26), Attribute(Name('self', Load(), lineno=24, col_offset=32), 'translated', Load(), lineno=24, col_offset=32)], [], None, None, lineno=24, col_offset=8), lineno=24, col_offset=8), Assign([Name('path', Store(), lineno=25, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=25, col_offset=15), 'handler', Load(), lineno=25, col_offset=15), 'translate_path', Load(), lineno=25, col_offset=15), [Str('/filename?foo=bar', lineno=25, col_offset=44)], [], None, None, lineno=25, col_offset=15), lineno=25, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=26, col_offset=8), 'assertEqual', Load(), lineno=26, col_offset=8), [Name('path', Load(), lineno=26, col_offset=26), Attribute(Name('self', Load(), lineno=26, col_offset=32), 'translated', Load(), lineno=26, col_offset=32)], [], None, None, lineno=26, col_offset=8), lineno=26, col_offset=8), Assign([Name('path', Store(), lineno=27, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=27, col_offset=15), 'handler', Load(), lineno=27, col_offset=15), 'translate_path', Load(), lineno=27, col_offset=15), [Str('/filename?a=b&spam=eggs#zot', lineno=27, col_offset=44)], [], None, None, lineno=27, col_offset=15), lineno=27, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=28, col_offset=8), 'assertEqual', Load(), lineno=28, col_offset=8), [Name('path', Load(), lineno=28, col_offset=26), Attribute(Name('self', Load(), lineno=28, col_offset=32), 'translated', Load(), lineno=28, col_offset=32)], [], None, None, lineno=28, col_offset=8), lineno=28, col_offset=8)], [], lineno=22, col_offset=4), FunctionDef('test_startWithDoubleSlash', arguments([Name('self', Param(), lineno=30, col_offset=35)], None, None, []), [Assign([Name('path', Store(), lineno=31, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=31, col_offset=15), 'handler', Load(), lineno=31, col_offset=15), 'translate_path', Load(), lineno=31, col_offset=15), [Str('//filename', lineno=31, col_offset=44)], [], None, None, lineno=31, col_offset=15), lineno=31, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=32, col_offset=8), 'assertEqual', Load(), lineno=32, col_offset=8), [Name('path', Load(), lineno=32, col_offset=26), Attribute(Name('self', Load(), lineno=32, col_offset=32), 'translated', Load(), lineno=32, col_offset=32)], [], None, None, lineno=32, col_offset=8), lineno=32, col_offset=8), Assign([Name('path', Store(), lineno=33, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=33, col_offset=15), 'handler', Load(), lineno=33, col_offset=15), 'translate_path', Load(), lineno=33, col_offset=15), [Str('//filename?foo=bar', lineno=33, col_offset=44)], [], None, None, lineno=33, col_offset=15), lineno=33, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=34, col_offset=8), 'assertEqual', Load(), lineno=34, col_offset=8), [Name('path', Load(), lineno=34, col_offset=26), Attribute(Name('self', Load(), lineno=34, col_offset=32), 'translated', Load(), lineno=34, col_offset=32)], [], None, None, lineno=34, col_offset=8), lineno=34, col_offset=8)], [], lineno=30, col_offset=4)], [], lineno=15, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=38, col_offset=4), 'run_unittest', Load(), lineno=38, col_offset=4), [Name('SimpleHTTPRequestHandlerTestCase', Load(), lineno=38, col_offset=30)], [], None, None, lineno=38, col_offset=4), lineno=38, col_offset=4)], [], lineno=37, col_offset=0), If(Compare(Name('__name__', Load(), lineno=40, col_offset=3), [Eq()], [Str('__main__', lineno=40, col_offset=15)], lineno=40, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=41, col_offset=4), [], [], None, None, lineno=41, col_offset=4), lineno=41, col_offset=4)], [], lineno=40, col_offset=0)])
