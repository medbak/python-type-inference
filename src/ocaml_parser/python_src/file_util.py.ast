Module([Expr(Str('distutils.file_util\n\nUtility functions for operating on single files.\n', lineno=4, col_offset=-1), lineno=4, col_offset=-1), Assign([Name('__revision__', Store(), lineno=6, col_offset=0)], Str('$Id: file_util.py 86238 2010-11-06 04:06:18Z eric.araujo $', lineno=6, col_offset=15), lineno=6, col_offset=0), Import([alias('os', None)], lineno=8, col_offset=0), ImportFrom('distutils.errors', [alias('DistutilsFileError', None)], 0, lineno=9, col_offset=0), ImportFrom('distutils', [alias('log', None)], 0, lineno=10, col_offset=0), Assign([Name('_copy_action', Store(), lineno=13, col_offset=0)], Dict([Name('None', Load(), lineno=13, col_offset=16), Str('hard', lineno=14, col_offset=16), Str('sym', lineno=15, col_offset=16)], [Str('copying', lineno=13, col_offset=22), Str('hard linking', lineno=14, col_offset=24), Str('symbolically linking', lineno=15, col_offset=23)], lineno=13, col_offset=15), lineno=13, col_offset=0), FunctionDef('_copy_file_contents', arguments([Name('src', Param(), lineno=18, col_offset=24), Name('dst', Param(), lineno=18, col_offset=29), Name('buffer_size', Param(), lineno=18, col_offset=34)], None, None, [BinOp(Num(16, lineno=18, col_offset=46), Mult(), Num(1024, lineno=18, col_offset=49), lineno=18, col_offset=46)]), [Expr(Str("Copy the file 'src' to 'dst'.\n\n    Both must be filenames. Any error opening either file, reading from\n    'src', or writing to 'dst', raises DistutilsFileError.  Data is\n    read/written in chunks of 'buffer_size' bytes (default 16k).  No attempt\n    is made to handle anything apart from regular files.\n    ", lineno=25, col_offset=-1), lineno=25, col_offset=-1), Assign([Name('fsrc', Store(), lineno=28, col_offset=4)], Name('None', Load(), lineno=28, col_offset=11), lineno=28, col_offset=4), Assign([Name('fdst', Store(), lineno=29, col_offset=4)], Name('None', Load(), lineno=29, col_offset=11), lineno=29, col_offset=4), TryFinally([TryExcept([Assign([Name('fsrc', Store(), lineno=32, col_offset=12)], Call(Name('open', Load(), lineno=32, col_offset=19), [Name('src', Load(), lineno=32, col_offset=24), Str('rb', lineno=32, col_offset=29)], [], None, None, lineno=32, col_offset=19), lineno=32, col_offset=12)], [ExceptHandler(Attribute(Name('os', Load(), lineno=33, col_offset=15), 'error', Load(), lineno=33, col_offset=15), Tuple([Name('errno', Store(), lineno=33, col_offset=26), Name('errstr', Store(), lineno=33, col_offset=33)], Store(), lineno=33, col_offset=26), [Raise(Call(Name('DistutilsFileError', Load(), lineno=34, col_offset=18), [BinOp(Str("could not open '%s': %s", lineno=34, col_offset=37), Mod(), Tuple([Name('src', Load(), lineno=34, col_offset=66), Name('errstr', Load(), lineno=34, col_offset=71)], Load(), lineno=34, col_offset=66), lineno=34, col_offset=37)], [], None, None, lineno=34, col_offset=18), None, None, lineno=34, col_offset=12)], lineno=33, col_offset=8)], [], lineno=31, col_offset=8), If(Call(Attribute(Attribute(Name('os', Load(), lineno=36, col_offset=11), 'path', Load(), lineno=36, col_offset=11), 'exists', Load(), lineno=36, col_offset=11), [Name('dst', Load(), lineno=36, col_offset=26)], [], None, None, lineno=36, col_offset=11), [TryExcept([Expr(Call(Attribute(Name('os', Load(), lineno=38, col_offset=16), 'unlink', Load(), lineno=38, col_offset=16), [Name('dst', Load(), lineno=38, col_offset=26)], [], None, None, lineno=38, col_offset=16), lineno=38, col_offset=16)], [ExceptHandler(Attribute(Name('os', Load(), lineno=39, col_offset=19), 'error', Load(), lineno=39, col_offset=19), Tuple([Name('errno', Store(), lineno=39, col_offset=30), Name('errstr', Store(), lineno=39, col_offset=37)], Store(), lineno=39, col_offset=30), [Raise(Call(Name('DistutilsFileError', Load(), lineno=40, col_offset=22), [BinOp(Str("could not delete '%s': %s", lineno=41, col_offset=22), Mod(), Tuple([Name('dst', Load(), lineno=41, col_offset=53), Name('errstr', Load(), lineno=41, col_offset=58)], Load(), lineno=41, col_offset=53), lineno=41, col_offset=22)], [], None, None, lineno=40, col_offset=22), None, None, lineno=40, col_offset=16)], lineno=39, col_offset=12)], [], lineno=37, col_offset=12)], [], lineno=36, col_offset=8), TryExcept([Assign([Name('fdst', Store(), lineno=44, col_offset=12)], Call(Name('open', Load(), lineno=44, col_offset=19), [Name('dst', Load(), lineno=44, col_offset=24), Str('wb', lineno=44, col_offset=29)], [], None, None, lineno=44, col_offset=19), lineno=44, col_offset=12)], [ExceptHandler(Attribute(Name('os', Load(), lineno=45, col_offset=15), 'error', Load(), lineno=45, col_offset=15), Tuple([Name('errno', Store(), lineno=45, col_offset=26), Name('errstr', Store(), lineno=45, col_offset=33)], Store(), lineno=45, col_offset=26), [Raise(Call(Name('DistutilsFileError', Load(), lineno=46, col_offset=18), [BinOp(Str("could not create '%s': %s", lineno=47, col_offset=18), Mod(), Tuple([Name('dst', Load(), lineno=47, col_offset=49), Name('errstr', Load(), lineno=47, col_offset=54)], Load(), lineno=47, col_offset=49), lineno=47, col_offset=18)], [], None, None, lineno=46, col_offset=18), None, None, lineno=46, col_offset=12)], lineno=45, col_offset=8)], [], lineno=43, col_offset=8), While(Num(1, lineno=49, col_offset=14), [TryExcept([Assign([Name('buf', Store(), lineno=51, col_offset=16)], Call(Attribute(Name('fsrc', Load(), lineno=51, col_offset=22), 'read', Load(), lineno=51, col_offset=22), [Name('buffer_size', Load(), lineno=51, col_offset=32)], [], None, None, lineno=51, col_offset=22), lineno=51, col_offset=16)], [ExceptHandler(Attribute(Name('os', Load(), lineno=52, col_offset=19), 'error', Load(), lineno=52, col_offset=19), Tuple([Name('errno', Store(), lineno=52, col_offset=30), Name('errstr', Store(), lineno=52, col_offset=37)], Store(), lineno=52, col_offset=30), [Raise(Call(Name('DistutilsFileError', Load(), lineno=53, col_offset=22), [BinOp(Str("could not read from '%s': %s", lineno=54, col_offset=22), Mod(), Tuple([Name('src', Load(), lineno=54, col_offset=56), Name('errstr', Load(), lineno=54, col_offset=61)], Load(), lineno=54, col_offset=56), lineno=54, col_offset=22)], [], None, None, lineno=53, col_offset=22), None, None, lineno=53, col_offset=16)], lineno=52, col_offset=12)], [], lineno=50, col_offset=12), If(UnaryOp(Not(), Name('buf', Load(), lineno=56, col_offset=19), lineno=56, col_offset=15), [Break( lineno=57, col_offset=16)], [], lineno=56, col_offset=12), TryExcept([Expr(Call(Attribute(Name('fdst', Load(), lineno=60, col_offset=16), 'write', Load(), lineno=60, col_offset=16), [Name('buf', Load(), lineno=60, col_offset=27)], [], None, None, lineno=60, col_offset=16), lineno=60, col_offset=16)], [ExceptHandler(Attribute(Name('os', Load(), lineno=61, col_offset=19), 'error', Load(), lineno=61, col_offset=19), Tuple([Name('errno', Store(), lineno=61, col_offset=30), Name('errstr', Store(), lineno=61, col_offset=37)], Store(), lineno=61, col_offset=30), [Raise(Call(Name('DistutilsFileError', Load(), lineno=62, col_offset=22), [BinOp(Str("could not write to '%s': %s", lineno=63, col_offset=22), Mod(), Tuple([Name('dst', Load(), lineno=63, col_offset=55), Name('errstr', Load(), lineno=63, col_offset=60)], Load(), lineno=63, col_offset=55), lineno=63, col_offset=22)], [], None, None, lineno=62, col_offset=22), None, None, lineno=62, col_offset=16)], lineno=61, col_offset=12)], [], lineno=59, col_offset=12)], [], lineno=49, col_offset=8)], [If(Name('fdst', Load(), lineno=66, col_offset=11), [Expr(Call(Attribute(Name('fdst', Load(), lineno=67, col_offset=12), 'close', Load(), lineno=67, col_offset=12), [], [], None, None, lineno=67, col_offset=12), lineno=67, col_offset=12)], [], lineno=66, col_offset=8), If(Name('fsrc', Load(), lineno=68, col_offset=11), [Expr(Call(Attribute(Name('fsrc', Load(), lineno=69, col_offset=12), 'close', Load(), lineno=69, col_offset=12), [], [], None, None, lineno=69, col_offset=12), lineno=69, col_offset=12)], [], lineno=68, col_offset=8)], lineno=30, col_offset=4)], [], lineno=18, col_offset=0), FunctionDef('copy_file', arguments([Name('src', Param(), lineno=71, col_offset=14), Name('dst', Param(), lineno=71, col_offset=19), Name('preserve_mode', Param(), lineno=71, col_offset=24), Name('preserve_times', Param(), lineno=71, col_offset=41), Name('update', Param(), lineno=71, col_offset=59), Name('link', Param(), lineno=72, col_offset=14), Name('verbose', Param(), lineno=72, col_offset=25), Name('dry_run', Param(), lineno=72, col_offset=36)], None, None, [Num(1, lineno=71, col_offset=38), Num(1, lineno=71, col_offset=56), Num(0, lineno=71, col_offset=66), Name('None', Load(), lineno=72, col_offset=19), Num(1, lineno=72, col_offset=33), Num(0, lineno=72, col_offset=44)]), [Expr(Str('Copy a file \'src\' to \'dst\'.\n\n    If \'dst\' is a directory, then \'src\' is copied there with the same name;\n    otherwise, it must be a filename.  (If the file exists, it will be\n    ruthlessly clobbered.)  If \'preserve_mode\' is true (the default),\n    the file\'s mode (type and permission bits, or whatever is analogous on\n    the current platform) is copied.  If \'preserve_times\' is true (the\n    default), the last-modified and last-access times are copied as well.\n    If \'update\' is true, \'src\' will only be copied if \'dst\' does not exist,\n    or if \'dst\' does exist but is older than \'src\'.\n\n    \'link\' allows you to make hard links (os.link) or symbolic links\n    (os.symlink) instead of copying: set it to "hard" or "sym"; if it is\n    None (the default), files are copied.  Don\'t set \'link\' on systems that\n    don\'t support it: \'copy_file()\' doesn\'t check if hard or symbolic\n    linking is available.\n\n    Under Mac OS, uses the native file copy function in macostools; on\n    other systems, uses \'_copy_file_contents()\' to copy file contents.\n\n    Return a tuple (dest_name, copied): \'dest_name\' is the actual name of\n    the output file, and \'copied\' is true if the file was copied (or would\n    have been copied, if \'dry_run\' true).\n    ', lineno=96, col_offset=-1), lineno=96, col_offset=-1), ImportFrom('distutils.dep_util', [alias('newer', None)], 0, lineno=104, col_offset=4), ImportFrom('stat', [alias('ST_ATIME', None), alias('ST_MTIME', None), alias('ST_MODE', None), alias('S_IMODE', None)], 0, lineno=105, col_offset=4), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=107, col_offset=11), 'path', Load(), lineno=107, col_offset=11), 'isfile', Load(), lineno=107, col_offset=11), [Name('src', Load(), lineno=107, col_offset=26)], [], None, None, lineno=107, col_offset=11), lineno=107, col_offset=7), [Raise(Call(Name('DistutilsFileError', Load(), lineno=108, col_offset=14), [BinOp(Str("can't copy '%s': doesn't exist or not a regular file", lineno=109, col_offset=14), Mod(), Name('src', Load(), lineno=109, col_offset=71), lineno=109, col_offset=14)], [], None, None, lineno=108, col_offset=14), None, None, lineno=108, col_offset=8)], [], lineno=107, col_offset=4), If(Call(Attribute(Attribute(Name('os', Load(), lineno=111, col_offset=7), 'path', Load(), lineno=111, col_offset=7), 'isdir', Load(), lineno=111, col_offset=7), [Name('dst', Load(), lineno=111, col_offset=21)], [], None, None, lineno=111, col_offset=7), [Assign([Name('dir', Store(), lineno=112, col_offset=8)], Name('dst', Load(), lineno=112, col_offset=14), lineno=112, col_offset=8), Assign([Name('dst', Store(), lineno=113, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=113, col_offset=14), 'path', Load(), lineno=113, col_offset=14), 'join', Load(), lineno=113, col_offset=14), [Name('dst', Load(), lineno=113, col_offset=27), Call(Attribute(Attribute(Name('os', Load(), lineno=113, col_offset=32), 'path', Load(), lineno=113, col_offset=32), 'basename', Load(), lineno=113, col_offset=32), [Name('src', Load(), lineno=113, col_offset=49)], [], None, None, lineno=113, col_offset=32)], [], None, None, lineno=113, col_offset=14), lineno=113, col_offset=8)], [Assign([Name('dir', Store(), lineno=115, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=115, col_offset=14), 'path', Load(), lineno=115, col_offset=14), 'dirname', Load(), lineno=115, col_offset=14), [Name('dst', Load(), lineno=115, col_offset=30)], [], None, None, lineno=115, col_offset=14), lineno=115, col_offset=8)], lineno=111, col_offset=4), If(BoolOp(And(), [Name('update', Load(), lineno=117, col_offset=7), UnaryOp(Not(), Call(Name('newer', Load(), lineno=117, col_offset=22), [Name('src', Load(), lineno=117, col_offset=28), Name('dst', Load(), lineno=117, col_offset=33)], [], None, None, lineno=117, col_offset=22), lineno=117, col_offset=18)], lineno=117, col_offset=7), [If(Compare(Name('verbose', Load(), lineno=118, col_offset=11), [GtE()], [Num(1, lineno=118, col_offset=22)], lineno=118, col_offset=11), [Expr(Call(Attribute(Name('log', Load(), lineno=119, col_offset=12), 'debug', Load(), lineno=119, col_offset=12), [Str('not copying %s (output up-to-date)', lineno=119, col_offset=22), Name('src', Load(), lineno=119, col_offset=60)], [], None, None, lineno=119, col_offset=12), lineno=119, col_offset=12)], [], lineno=118, col_offset=8), Return(Tuple([Name('dst', Load(), lineno=120, col_offset=15), Num(0, lineno=120, col_offset=20)], Load(), lineno=120, col_offset=15), lineno=120, col_offset=8)], [], lineno=117, col_offset=4), TryExcept([Assign([Name('action', Store(), lineno=123, col_offset=8)], Subscript(Name('_copy_action', Load(), lineno=123, col_offset=17), Index(Name('link', Load(), lineno=123, col_offset=30)), Load(), lineno=123, col_offset=17), lineno=123, col_offset=8)], [ExceptHandler(Name('KeyError', Load(), lineno=124, col_offset=11), None, [Raise(Call(Name('ValueError', Load(), lineno=125, col_offset=14), [BinOp(Str("invalid value '%s' for 'link' argument", lineno=125, col_offset=25), Mod(), Name('link', Load(), lineno=125, col_offset=68), lineno=125, col_offset=25)], [], None, None, lineno=125, col_offset=14), None, None, lineno=125, col_offset=8)], lineno=124, col_offset=4)], [], lineno=122, col_offset=4), If(Compare(Name('verbose', Load(), lineno=127, col_offset=7), [GtE()], [Num(1, lineno=127, col_offset=18)], lineno=127, col_offset=7), [If(Compare(Call(Attribute(Attribute(Name('os', Load(), lineno=128, col_offset=11), 'path', Load(), lineno=128, col_offset=11), 'basename', Load(), lineno=128, col_offset=11), [Name('dst', Load(), lineno=128, col_offset=28)], [], None, None, lineno=128, col_offset=11), [Eq()], [Call(Attribute(Attribute(Name('os', Load(), lineno=128, col_offset=36), 'path', Load(), lineno=128, col_offset=36), 'basename', Load(), lineno=128, col_offset=36), [Name('src', Load(), lineno=128, col_offset=53)], [], None, None, lineno=128, col_offset=36)], lineno=128, col_offset=11), [Expr(Call(Attribute(Name('log', Load(), lineno=129, col_offset=12), 'info', Load(), lineno=129, col_offset=12), [Str('%s %s -> %s', lineno=129, col_offset=21), Name('action', Load(), lineno=129, col_offset=36), Name('src', Load(), lineno=129, col_offset=44), Name('dir', Load(), lineno=129, col_offset=49)], [], None, None, lineno=129, col_offset=12), lineno=129, col_offset=12)], [Expr(Call(Attribute(Name('log', Load(), lineno=131, col_offset=12), 'info', Load(), lineno=131, col_offset=12), [Str('%s %s -> %s', lineno=131, col_offset=21), Name('action', Load(), lineno=131, col_offset=36), Name('src', Load(), lineno=131, col_offset=44), Name('dst', Load(), lineno=131, col_offset=49)], [], None, None, lineno=131, col_offset=12), lineno=131, col_offset=12)], lineno=128, col_offset=8)], [], lineno=127, col_offset=4), If(Name('dry_run', Load(), lineno=133, col_offset=7), [Return(Tuple([Name('dst', Load(), lineno=134, col_offset=16), Num(1, lineno=134, col_offset=21)], Load(), lineno=134, col_offset=16), lineno=134, col_offset=8)], [], lineno=133, col_offset=4), If(Compare(Name('link', Load(), lineno=138, col_offset=7), [Eq()], [Str('hard', lineno=138, col_offset=15)], lineno=138, col_offset=7), [If(UnaryOp(Not(), BoolOp(And(), [Call(Attribute(Attribute(Name('os', Load(), lineno=139, col_offset=16), 'path', Load(), lineno=139, col_offset=16), 'exists', Load(), lineno=139, col_offset=16), [Name('dst', Load(), lineno=139, col_offset=31)], [], None, None, lineno=139, col_offset=16), Call(Attribute(Attribute(Name('os', Load(), lineno=139, col_offset=40), 'path', Load(), lineno=139, col_offset=40), 'samefile', Load(), lineno=139, col_offset=40), [Name('src', Load(), lineno=139, col_offset=57), Name('dst', Load(), lineno=139, col_offset=62)], [], None, None, lineno=139, col_offset=40)], lineno=139, col_offset=16), lineno=139, col_offset=11), [Expr(Call(Attribute(Name('os', Load(), lineno=140, col_offset=12), 'link', Load(), lineno=140, col_offset=12), [Name('src', Load(), lineno=140, col_offset=20), Name('dst', Load(), lineno=140, col_offset=25)], [], None, None, lineno=140, col_offset=12), lineno=140, col_offset=12)], [], lineno=139, col_offset=8)], [If(Compare(Name('link', Load(), lineno=141, col_offset=9), [Eq()], [Str('sym', lineno=141, col_offset=17)], lineno=141, col_offset=9), [If(UnaryOp(Not(), BoolOp(And(), [Call(Attribute(Attribute(Name('os', Load(), lineno=142, col_offset=16), 'path', Load(), lineno=142, col_offset=16), 'exists', Load(), lineno=142, col_offset=16), [Name('dst', Load(), lineno=142, col_offset=31)], [], None, None, lineno=142, col_offset=16), Call(Attribute(Attribute(Name('os', Load(), lineno=142, col_offset=40), 'path', Load(), lineno=142, col_offset=40), 'samefile', Load(), lineno=142, col_offset=40), [Name('src', Load(), lineno=142, col_offset=57), Name('dst', Load(), lineno=142, col_offset=62)], [], None, None, lineno=142, col_offset=40)], lineno=142, col_offset=16), lineno=142, col_offset=11), [Expr(Call(Attribute(Name('os', Load(), lineno=143, col_offset=12), 'symlink', Load(), lineno=143, col_offset=12), [Name('src', Load(), lineno=143, col_offset=23), Name('dst', Load(), lineno=143, col_offset=28)], [], None, None, lineno=143, col_offset=12), lineno=143, col_offset=12)], [], lineno=142, col_offset=8)], [Expr(Call(Name('_copy_file_contents', Load(), lineno=148, col_offset=8), [Name('src', Load(), lineno=148, col_offset=28), Name('dst', Load(), lineno=148, col_offset=33)], [], None, None, lineno=148, col_offset=8), lineno=148, col_offset=8), If(BoolOp(Or(), [Name('preserve_mode', Load(), lineno=149, col_offset=11), Name('preserve_times', Load(), lineno=149, col_offset=28)], lineno=149, col_offset=11), [Assign([Name('st', Store(), lineno=150, col_offset=12)], Call(Attribute(Name('os', Load(), lineno=150, col_offset=17), 'stat', Load(), lineno=150, col_offset=17), [Name('src', Load(), lineno=150, col_offset=25)], [], None, None, lineno=150, col_offset=17), lineno=150, col_offset=12), If(Name('preserve_times', Load(), lineno=154, col_offset=15), [Expr(Call(Attribute(Name('os', Load(), lineno=155, col_offset=16), 'utime', Load(), lineno=155, col_offset=16), [Name('dst', Load(), lineno=155, col_offset=25), Tuple([Subscript(Name('st', Load(), lineno=155, col_offset=31), Index(Name('ST_ATIME', Load(), lineno=155, col_offset=34)), Load(), lineno=155, col_offset=31), Subscript(Name('st', Load(), lineno=155, col_offset=45), Index(Name('ST_MTIME', Load(), lineno=155, col_offset=48)), Load(), lineno=155, col_offset=45)], Load(), lineno=155, col_offset=31)], [], None, None, lineno=155, col_offset=16), lineno=155, col_offset=16)], [], lineno=154, col_offset=12), If(Name('preserve_mode', Load(), lineno=156, col_offset=15), [Expr(Call(Attribute(Name('os', Load(), lineno=157, col_offset=16), 'chmod', Load(), lineno=157, col_offset=16), [Name('dst', Load(), lineno=157, col_offset=25), Call(Name('S_IMODE', Load(), lineno=157, col_offset=30), [Subscript(Name('st', Load(), lineno=157, col_offset=38), Index(Name('ST_MODE', Load(), lineno=157, col_offset=41)), Load(), lineno=157, col_offset=38)], [], None, None, lineno=157, col_offset=30)], [], None, None, lineno=157, col_offset=16), lineno=157, col_offset=16)], [], lineno=156, col_offset=12)], [], lineno=149, col_offset=8)], lineno=141, col_offset=9)], lineno=138, col_offset=4), Return(Tuple([Name('dst', Load(), lineno=159, col_offset=12), Num(1, lineno=159, col_offset=17)], Load(), lineno=159, col_offset=12), lineno=159, col_offset=4)], [], lineno=71, col_offset=0), FunctionDef('move_file', arguments([Name('src', Param(), lineno=162, col_offset=15), Name('dst', Param(), lineno=162, col_offset=20), Name('verbose', Param(), lineno=162, col_offset=25), Name('dry_run', Param(), lineno=162, col_offset=36)], None, None, [Num(1, lineno=162, col_offset=33), Num(0, lineno=162, col_offset=44)]), [Expr(Str("Move a file 'src' to 'dst'.\n\n    If 'dst' is a directory, the file will be moved into it with the same\n    name; otherwise, 'src' is just renamed to 'dst'.  Return the new\n    full name of the file.\n\n    Handles cross-device moves on Unix using 'copy_file()'.  What about\n    other systems???\n    ", lineno=171, col_offset=-1), lineno=171, col_offset=-1), ImportFrom('os.path', [alias('exists', None), alias('isfile', None), alias('isdir', None), alias('basename', None), alias('dirname', None)], 0, lineno=172, col_offset=4), Import([alias('errno', None)], lineno=173, col_offset=4), If(Compare(Name('verbose', Load(), lineno=175, col_offset=7), [GtE()], [Num(1, lineno=175, col_offset=18)], lineno=175, col_offset=7), [Expr(Call(Attribute(Name('log', Load(), lineno=176, col_offset=8), 'info', Load(), lineno=176, col_offset=8), [Str('moving %s -> %s', lineno=176, col_offset=17), Name('src', Load(), lineno=176, col_offset=36), Name('dst', Load(), lineno=176, col_offset=41)], [], None, None, lineno=176, col_offset=8), lineno=176, col_offset=8)], [], lineno=175, col_offset=4), If(Name('dry_run', Load(), lineno=178, col_offset=7), [Return(Name('dst', Load(), lineno=179, col_offset=15), lineno=179, col_offset=8)], [], lineno=178, col_offset=4), If(UnaryOp(Not(), Call(Name('isfile', Load(), lineno=181, col_offset=11), [Name('src', Load(), lineno=181, col_offset=18)], [], None, None, lineno=181, col_offset=11), lineno=181, col_offset=7), [Raise(Call(Name('DistutilsFileError', Load(), lineno=182, col_offset=14), [BinOp(Str("can't move '%s': not a regular file", lineno=182, col_offset=33), Mod(), Name('src', Load(), lineno=182, col_offset=73), lineno=182, col_offset=33)], [], None, None, lineno=182, col_offset=14), None, None, lineno=182, col_offset=8)], [], lineno=181, col_offset=4), If(Call(Name('isdir', Load(), lineno=184, col_offset=7), [Name('dst', Load(), lineno=184, col_offset=13)], [], None, None, lineno=184, col_offset=7), [Assign([Name('dst', Store(), lineno=185, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=185, col_offset=14), 'path', Load(), lineno=185, col_offset=14), 'join', Load(), lineno=185, col_offset=14), [Name('dst', Load(), lineno=185, col_offset=27), Call(Name('basename', Load(), lineno=185, col_offset=32), [Name('src', Load(), lineno=185, col_offset=41)], [], None, None, lineno=185, col_offset=32)], [], None, None, lineno=185, col_offset=14), lineno=185, col_offset=8)], [If(Call(Name('exists', Load(), lineno=186, col_offset=9), [Name('dst', Load(), lineno=186, col_offset=16)], [], None, None, lineno=186, col_offset=9), [Raise(Call(Name('DistutilsFileError', Load(), lineno=187, col_offset=14), [BinOp(Str("can't move '%s': destination '%s' already exists", lineno=188, col_offset=14), Mod(), Tuple([Name('src', Load(), lineno=189, col_offset=15), Name('dst', Load(), lineno=189, col_offset=20)], Load(), lineno=189, col_offset=15), lineno=188, col_offset=14)], [], None, None, lineno=187, col_offset=14), None, None, lineno=187, col_offset=8)], [], lineno=186, col_offset=9)], lineno=184, col_offset=4), If(UnaryOp(Not(), Call(Name('isdir', Load(), lineno=191, col_offset=11), [Call(Name('dirname', Load(), lineno=191, col_offset=17), [Name('dst', Load(), lineno=191, col_offset=25)], [], None, None, lineno=191, col_offset=17)], [], None, None, lineno=191, col_offset=11), lineno=191, col_offset=7), [Raise(Call(Name('DistutilsFileError', Load(), lineno=192, col_offset=14), [BinOp(Str("can't move '%s': destination '%s' not a valid path", lineno=193, col_offset=14), Mod(), Tuple([Name('src', Load(), lineno=194, col_offset=15), Name('dst', Load(), lineno=194, col_offset=20)], Load(), lineno=194, col_offset=15), lineno=193, col_offset=14)], [], None, None, lineno=192, col_offset=14), None, None, lineno=192, col_offset=8)], [], lineno=191, col_offset=4), Assign([Name('copy_it', Store(), lineno=196, col_offset=4)], Num(0, lineno=196, col_offset=14), lineno=196, col_offset=4), TryExcept([Expr(Call(Attribute(Name('os', Load(), lineno=198, col_offset=8), 'rename', Load(), lineno=198, col_offset=8), [Name('src', Load(), lineno=198, col_offset=18), Name('dst', Load(), lineno=198, col_offset=23)], [], None, None, lineno=198, col_offset=8), lineno=198, col_offset=8)], [ExceptHandler(Attribute(Name('os', Load(), lineno=199, col_offset=11), 'error', Load(), lineno=199, col_offset=11), Tuple([Name('num', Store(), lineno=199, col_offset=22), Name('msg', Store(), lineno=199, col_offset=27)], Store(), lineno=199, col_offset=22), [If(Compare(Name('num', Load(), lineno=200, col_offset=11), [Eq()], [Attribute(Name('errno', Load(), lineno=200, col_offset=18), 'EXDEV', Load(), lineno=200, col_offset=18)], lineno=200, col_offset=11), [Assign([Name('copy_it', Store(), lineno=201, col_offset=12)], Num(1, lineno=201, col_offset=22), lineno=201, col_offset=12)], [Raise(Call(Name('DistutilsFileError', Load(), lineno=203, col_offset=18), [BinOp(Str("couldn't move '%s' to '%s': %s", lineno=204, col_offset=18), Mod(), Tuple([Name('src', Load(), lineno=204, col_offset=54), Name('dst', Load(), lineno=204, col_offset=59), Name('msg', Load(), lineno=204, col_offset=64)], Load(), lineno=204, col_offset=54), lineno=204, col_offset=18)], [], None, None, lineno=203, col_offset=18), None, None, lineno=203, col_offset=12)], lineno=200, col_offset=8)], lineno=199, col_offset=4)], [], lineno=197, col_offset=4), If(Name('copy_it', Load(), lineno=206, col_offset=7), [Expr(Call(Name('copy_file', Load(), lineno=207, col_offset=8), [Name('src', Load(), lineno=207, col_offset=18), Name('dst', Load(), lineno=207, col_offset=23)], [keyword('verbose', Name('verbose', Load(), lineno=207, col_offset=36))], None, None, lineno=207, col_offset=8), lineno=207, col_offset=8), TryExcept([Expr(Call(Attribute(Name('os', Load(), lineno=209, col_offset=12), 'unlink', Load(), lineno=209, col_offset=12), [Name('src', Load(), lineno=209, col_offset=22)], [], None, None, lineno=209, col_offset=12), lineno=209, col_offset=12)], [ExceptHandler(Attribute(Name('os', Load(), lineno=210, col_offset=15), 'error', Load(), lineno=210, col_offset=15), Tuple([Name('num', Store(), lineno=210, col_offset=26), Name('msg', Store(), lineno=210, col_offset=31)], Store(), lineno=210, col_offset=26), [TryExcept([Expr(Call(Attribute(Name('os', Load(), lineno=212, col_offset=16), 'unlink', Load(), lineno=212, col_offset=16), [Name('dst', Load(), lineno=212, col_offset=26)], [], None, None, lineno=212, col_offset=16), lineno=212, col_offset=16)], [ExceptHandler(Attribute(Name('os', Load(), lineno=213, col_offset=19), 'error', Load(), lineno=213, col_offset=19), None, [Pass( lineno=214, col_offset=16)], lineno=213, col_offset=12)], [], lineno=211, col_offset=12), Raise(Call(Name('DistutilsFileError', Load(), lineno=215, col_offset=18), [BinOp(BinOp(Str("couldn't move '%s' to '%s' by copy/delete: ", lineno=216, col_offset=19), Add(), Str("delete '%s' failed: %s", lineno=217, col_offset=19), lineno=216, col_offset=19), Mod(), Tuple([Name('src', Load(), lineno=218, col_offset=19), Name('dst', Load(), lineno=218, col_offset=24), Name('src', Load(), lineno=218, col_offset=29), Name('msg', Load(), lineno=218, col_offset=34)], Load(), lineno=218, col_offset=19), lineno=216, col_offset=18)], [], None, None, lineno=215, col_offset=18), None, None, lineno=215, col_offset=12)], lineno=210, col_offset=8)], [], lineno=208, col_offset=8)], [], lineno=206, col_offset=4), Return(Name('dst', Load(), lineno=219, col_offset=11), lineno=219, col_offset=4)], [], lineno=162, col_offset=0), FunctionDef('write_file', arguments([Name('filename', Param(), lineno=222, col_offset=16), Name('contents', Param(), lineno=222, col_offset=26)], None, None, []), [Expr(Str("Create a file with the specified name and write 'contents' (a\n    sequence of strings without line terminators) to it.\n    ", lineno=225, col_offset=-1), lineno=225, col_offset=-1), Assign([Name('f', Store(), lineno=226, col_offset=4)], Call(Name('open', Load(), lineno=226, col_offset=8), [Name('filename', Load(), lineno=226, col_offset=13), Str('w', lineno=226, col_offset=23)], [], None, None, lineno=226, col_offset=8), lineno=226, col_offset=4), TryFinally([For(Name('line', Store(), lineno=228, col_offset=12), Name('contents', Load(), lineno=228, col_offset=20), [Expr(Call(Attribute(Name('f', Load(), lineno=229, col_offset=12), 'write', Load(), lineno=229, col_offset=12), [BinOp(Name('line', Load(), lineno=229, col_offset=20), Add(), Str('\n', lineno=229, col_offset=27), lineno=229, col_offset=20)], [], None, None, lineno=229, col_offset=12), lineno=229, col_offset=12)], [], lineno=228, col_offset=8)], [Expr(Call(Attribute(Name('f', Load(), lineno=231, col_offset=8), 'close', Load(), lineno=231, col_offset=8), [], [], None, None, lineno=231, col_offset=8), lineno=231, col_offset=8)], lineno=227, col_offset=4)], [], lineno=222, col_offset=0)])
