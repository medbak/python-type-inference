Module([Expr(Str('Fixer for intern().\n\nintern(s) -> sys.intern(s)', lineno=6, col_offset=-1), lineno=6, col_offset=-1), ImportFrom(None, [alias('pytree', None)], 2, lineno=9, col_offset=0), ImportFrom(None, [alias('fixer_base', None)], 2, lineno=10, col_offset=0), ImportFrom('fixer_util', [alias('Name', None), alias('Attr', None), alias('touch_import', None)], 2, lineno=11, col_offset=0), ClassDef('FixIntern', [Attribute(Name('fixer_base', Load(), lineno=14, col_offset=16), 'BaseFix', Load(), lineno=14, col_offset=16)], [Assign([Name('BM_compatible', Store(), lineno=15, col_offset=4)], Name('True', Load(), lineno=15, col_offset=20), lineno=15, col_offset=4), Assign([Name('order', Store(), lineno=16, col_offset=4)], Str('pre', lineno=16, col_offset=12), lineno=16, col_offset=4), Assign([Name('PATTERN', Store(), lineno=18, col_offset=4)], Str("\n    power< 'intern'\n           trailer< lpar='('\n                    ( not(arglist | argument<any '=' any>) obj=any\n                      | obj=arglist<(not argument<any '=' any>) any ','> )\n                    rpar=')' >\n           after=any*\n    >\n    ", lineno=26, col_offset=-1), lineno=18, col_offset=4), FunctionDef('transform', arguments([Name('self', Param(), lineno=28, col_offset=18), Name('node', Param(), lineno=28, col_offset=24), Name('results', Param(), lineno=28, col_offset=30)], None, None, []), [Assign([Name('syms', Store(), lineno=29, col_offset=8)], Attribute(Name('self', Load(), lineno=29, col_offset=15), 'syms', Load(), lineno=29, col_offset=15), lineno=29, col_offset=8), Assign([Name('obj', Store(), lineno=30, col_offset=8)], Call(Attribute(Subscript(Name('results', Load(), lineno=30, col_offset=14), Index(Str('obj', lineno=30, col_offset=22)), Load(), lineno=30, col_offset=14), 'clone', Load(), lineno=30, col_offset=14), [], [], None, None, lineno=30, col_offset=14), lineno=30, col_offset=8), If(Compare(Attribute(Name('obj', Load(), lineno=31, col_offset=11), 'type', Load(), lineno=31, col_offset=11), [Eq()], [Attribute(Name('syms', Load(), lineno=31, col_offset=23), 'arglist', Load(), lineno=31, col_offset=23)], lineno=31, col_offset=11), [Assign([Name('newarglist', Store(), lineno=32, col_offset=12)], Call(Attribute(Name('obj', Load(), lineno=32, col_offset=25), 'clone', Load(), lineno=32, col_offset=25), [], [], None, None, lineno=32, col_offset=25), lineno=32, col_offset=12)], [Assign([Name('newarglist', Store(), lineno=34, col_offset=12)], Call(Attribute(Name('pytree', Load(), lineno=34, col_offset=25), 'Node', Load(), lineno=34, col_offset=25), [Attribute(Name('syms', Load(), lineno=34, col_offset=37), 'arglist', Load(), lineno=34, col_offset=37), List([Call(Attribute(Name('obj', Load(), lineno=34, col_offset=52), 'clone', Load(), lineno=34, col_offset=52), [], [], None, None, lineno=34, col_offset=52)], Load(), lineno=34, col_offset=51)], [], None, None, lineno=34, col_offset=25), lineno=34, col_offset=12)], lineno=31, col_offset=8), Assign([Name('after', Store(), lineno=35, col_offset=8)], Subscript(Name('results', Load(), lineno=35, col_offset=16), Index(Str('after', lineno=35, col_offset=24)), Load(), lineno=35, col_offset=16), lineno=35, col_offset=8), If(Name('after', Load(), lineno=36, col_offset=11), [Assign([Name('after', Store(), lineno=37, col_offset=12)], ListComp(Call(Attribute(Name('n', Load(), lineno=37, col_offset=21), 'clone', Load(), lineno=37, col_offset=21), [], [], None, None, lineno=37, col_offset=21), [comprehension(Name('n', Store(), lineno=37, col_offset=35), Name('after', Load(), lineno=37, col_offset=40), [])], lineno=37, col_offset=21), lineno=37, col_offset=12)], [], lineno=36, col_offset=8), Assign([Name('new', Store(), lineno=38, col_offset=8)], Call(Attribute(Name('pytree', Load(), lineno=38, col_offset=14), 'Node', Load(), lineno=38, col_offset=14), [Attribute(Name('syms', Load(), lineno=38, col_offset=26), 'power', Load(), lineno=38, col_offset=26), BinOp(BinOp(Call(Name('Attr', Load(), lineno=39, col_offset=26), [Call(Name('Name', Load(), lineno=39, col_offset=31), [Str(u'sys', lineno=39, col_offset=36)], [], None, None, lineno=39, col_offset=31), Call(Name('Name', Load(), lineno=39, col_offset=45), [Str(u'intern', lineno=39, col_offset=50)], [], None, None, lineno=39, col_offset=45)], [], None, None, lineno=39, col_offset=26), Add(), List([Call(Attribute(Name('pytree', Load(), lineno=40, col_offset=27), 'Node', Load(), lineno=40, col_offset=27), [Attribute(Name('syms', Load(), lineno=40, col_offset=39), 'trailer', Load(), lineno=40, col_offset=39), List([Call(Attribute(Subscript(Name('results', Load(), lineno=41, col_offset=40), Index(Str('lpar', lineno=41, col_offset=48)), Load(), lineno=41, col_offset=40), 'clone', Load(), lineno=41, col_offset=40), [], [], None, None, lineno=41, col_offset=40), Name('newarglist', Load(), lineno=42, col_offset=40), Call(Attribute(Subscript(Name('results', Load(), lineno=43, col_offset=40), Index(Str('rpar', lineno=43, col_offset=48)), Load(), lineno=43, col_offset=40), 'clone', Load(), lineno=43, col_offset=40), [], [], None, None, lineno=43, col_offset=40)], Load(), lineno=41, col_offset=39)], [], None, None, lineno=40, col_offset=27)], Load(), lineno=40, col_offset=26), lineno=39, col_offset=26), Add(), Name('after', Load(), lineno=43, col_offset=69), lineno=43, col_offset=67)], [], None, None, lineno=38, col_offset=14), lineno=38, col_offset=8), Assign([Attribute(Name('new', Load(), lineno=44, col_offset=8), 'prefix', Store(), lineno=44, col_offset=8)], Attribute(Name('node', Load(), lineno=44, col_offset=21), 'prefix', Load(), lineno=44, col_offset=21), lineno=44, col_offset=8), Expr(Call(Name('touch_import', Load(), lineno=45, col_offset=8), [Name('None', Load(), lineno=45, col_offset=21), Str(u'sys', lineno=45, col_offset=27), Name('node', Load(), lineno=45, col_offset=35)], [], None, None, lineno=45, col_offset=8), lineno=45, col_offset=8), Return(Name('new', Load(), lineno=46, col_offset=15), lineno=46, col_offset=8)], [], lineno=28, col_offset=4)], [], lineno=14, col_offset=0)])
