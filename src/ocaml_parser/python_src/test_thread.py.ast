Module([Import([alias('os', None)], lineno=1, col_offset=0), Import([alias('unittest', None)], lineno=2, col_offset=0), Import([alias('random', None)], lineno=3, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=4, col_offset=0), Assign([Name('thread', Store(), lineno=5, col_offset=0)], Call(Attribute(Name('test_support', Load(), lineno=5, col_offset=9), 'import_module', Load(), lineno=5, col_offset=9), [Str('thread', lineno=5, col_offset=36)], [], None, None, lineno=5, col_offset=9), lineno=5, col_offset=0), Import([alias('time', None)], lineno=6, col_offset=0), Import([alias('sys', None)], lineno=7, col_offset=0), Import([alias('weakref', None)], lineno=8, col_offset=0), ImportFrom('test', [alias('lock_tests', None)], 0, lineno=10, col_offset=0), Assign([Name('NUMTASKS', Store(), lineno=12, col_offset=0)], Num(10, lineno=12, col_offset=11), lineno=12, col_offset=0), Assign([Name('NUMTRIPS', Store(), lineno=13, col_offset=0)], Num(3, lineno=13, col_offset=11), lineno=13, col_offset=0), Assign([Name('_print_mutex', Store(), lineno=16, col_offset=0)], Call(Attribute(Name('thread', Load(), lineno=16, col_offset=15), 'allocate_lock', Load(), lineno=16, col_offset=15), [], [], None, None, lineno=16, col_offset=15), lineno=16, col_offset=0), FunctionDef('verbose_print', arguments([Name('arg', Param(), lineno=18, col_offset=18)], None, None, []), [Expr(Str('Helper function for printing out debugging output.', lineno=19, col_offset=4), lineno=19, col_offset=4), If(Attribute(Name('test_support', Load(), lineno=20, col_offset=7), 'verbose', Load(), lineno=20, col_offset=7), [With(Name('_print_mutex', Load(), lineno=21, col_offset=13), None, [Print(None, [Name('arg', Load(), lineno=22, col_offset=18)], True, lineno=22, col_offset=12)], lineno=21, col_offset=13)], [], lineno=20, col_offset=4)], [], lineno=18, col_offset=0), ClassDef('BasicThreadTest', [Attribute(Name('unittest', Load(), lineno=25, col_offset=22), 'TestCase', Load(), lineno=25, col_offset=22)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=27, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=28, col_offset=8), 'done_mutex', Store(), lineno=28, col_offset=8)], Call(Attribute(Name('thread', Load(), lineno=28, col_offset=26), 'allocate_lock', Load(), lineno=28, col_offset=26), [], [], None, None, lineno=28, col_offset=26), lineno=28, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=29, col_offset=8), 'done_mutex', Load(), lineno=29, col_offset=8), 'acquire', Load(), lineno=29, col_offset=8), [], [], None, None, lineno=29, col_offset=8), lineno=29, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=30, col_offset=8), 'running_mutex', Store(), lineno=30, col_offset=8)], Call(Attribute(Name('thread', Load(), lineno=30, col_offset=29), 'allocate_lock', Load(), lineno=30, col_offset=29), [], [], None, None, lineno=30, col_offset=29), lineno=30, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=31, col_offset=8), 'random_mutex', Store(), lineno=31, col_offset=8)], Call(Attribute(Name('thread', Load(), lineno=31, col_offset=28), 'allocate_lock', Load(), lineno=31, col_offset=28), [], [], None, None, lineno=31, col_offset=28), lineno=31, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=32, col_offset=8), 'created', Store(), lineno=32, col_offset=8)], Num(0, lineno=32, col_offset=23), lineno=32, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=33, col_offset=8), 'running', Store(), lineno=33, col_offset=8)], Num(0, lineno=33, col_offset=23), lineno=33, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=34, col_offset=8), 'next_ident', Store(), lineno=34, col_offset=8)], Num(0, lineno=34, col_offset=26), lineno=34, col_offset=8)], [], lineno=27, col_offset=4)], [], lineno=25, col_offset=0), ClassDef('ThreadRunningTests', [Name('BasicThreadTest', Load(), lineno=37, col_offset=25)], [FunctionDef('newtask', arguments([Name('self', Param(), lineno=39, col_offset=16)], None, None, []), [With(Attribute(Name('self', Load(), lineno=40, col_offset=13), 'running_mutex', Load(), lineno=40, col_offset=13), None, [AugAssign(Attribute(Name('self', Load(), lineno=41, col_offset=12), 'next_ident', Store(), lineno=41, col_offset=12), Add(), Num(1, lineno=41, col_offset=31), lineno=41, col_offset=12), Expr(Call(Name('verbose_print', Load(), lineno=42, col_offset=12), [BinOp(Str('creating task %s', lineno=42, col_offset=26), Mod(), Attribute(Name('self', Load(), lineno=42, col_offset=47), 'next_ident', Load(), lineno=42, col_offset=47), lineno=42, col_offset=26)], [], None, None, lineno=42, col_offset=12), lineno=42, col_offset=12), Expr(Call(Attribute(Name('thread', Load(), lineno=43, col_offset=12), 'start_new_thread', Load(), lineno=43, col_offset=12), [Attribute(Name('self', Load(), lineno=43, col_offset=36), 'task', Load(), lineno=43, col_offset=36), Tuple([Attribute(Name('self', Load(), lineno=43, col_offset=48), 'next_ident', Load(), lineno=43, col_offset=48)], Load(), lineno=43, col_offset=48)], [], None, None, lineno=43, col_offset=12), lineno=43, col_offset=12), AugAssign(Attribute(Name('self', Load(), lineno=44, col_offset=12), 'created', Store(), lineno=44, col_offset=12), Add(), Num(1, lineno=44, col_offset=28), lineno=44, col_offset=12), AugAssign(Attribute(Name('self', Load(), lineno=45, col_offset=12), 'running', Store(), lineno=45, col_offset=12), Add(), Num(1, lineno=45, col_offset=28), lineno=45, col_offset=12)], lineno=40, col_offset=13)], [], lineno=39, col_offset=4), FunctionDef('task', arguments([Name('self', Param(), lineno=47, col_offset=13), Name('ident', Param(), lineno=47, col_offset=19)], None, None, []), [With(Attribute(Name('self', Load(), lineno=48, col_offset=13), 'random_mutex', Load(), lineno=48, col_offset=13), None, [Assign([Name('delay', Store(), lineno=49, col_offset=12)], BinOp(Call(Attribute(Name('random', Load(), lineno=49, col_offset=20), 'random', Load(), lineno=49, col_offset=20), [], [], None, None, lineno=49, col_offset=20), Div(), Num(10000.0, lineno=49, col_offset=38), lineno=49, col_offset=20), lineno=49, col_offset=12)], lineno=48, col_offset=13), Expr(Call(Name('verbose_print', Load(), lineno=50, col_offset=8), [BinOp(Str('task %s will run for %sus', lineno=50, col_offset=22), Mod(), Tuple([Name('ident', Load(), lineno=50, col_offset=53), Call(Name('round', Load(), lineno=50, col_offset=60), [BinOp(Name('delay', Load(), lineno=50, col_offset=66), Mult(), Num(1000000.0, lineno=50, col_offset=72), lineno=50, col_offset=66)], [], None, None, lineno=50, col_offset=60)], Load(), lineno=50, col_offset=53), lineno=50, col_offset=22)], [], None, None, lineno=50, col_offset=8), lineno=50, col_offset=8), Expr(Call(Attribute(Name('time', Load(), lineno=51, col_offset=8), 'sleep', Load(), lineno=51, col_offset=8), [Name('delay', Load(), lineno=51, col_offset=19)], [], None, None, lineno=51, col_offset=8), lineno=51, col_offset=8), Expr(Call(Name('verbose_print', Load(), lineno=52, col_offset=8), [BinOp(Str('task %s done', lineno=52, col_offset=22), Mod(), Name('ident', Load(), lineno=52, col_offset=39), lineno=52, col_offset=22)], [], None, None, lineno=52, col_offset=8), lineno=52, col_offset=8), With(Attribute(Name('self', Load(), lineno=53, col_offset=13), 'running_mutex', Load(), lineno=53, col_offset=13), None, [AugAssign(Attribute(Name('self', Load(), lineno=54, col_offset=12), 'running', Store(), lineno=54, col_offset=12), Sub(), Num(1, lineno=54, col_offset=28), lineno=54, col_offset=12), If(BoolOp(And(), [Compare(Attribute(Name('self', Load(), lineno=55, col_offset=15), 'created', Load(), lineno=55, col_offset=15), [Eq()], [Name('NUMTASKS', Load(), lineno=55, col_offset=31)], lineno=55, col_offset=15), Compare(Attribute(Name('self', Load(), lineno=55, col_offset=44), 'running', Load(), lineno=55, col_offset=44), [Eq()], [Num(0, lineno=55, col_offset=60)], lineno=55, col_offset=44)], lineno=55, col_offset=15), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=56, col_offset=16), 'done_mutex', Load(), lineno=56, col_offset=16), 'release', Load(), lineno=56, col_offset=16), [], [], None, None, lineno=56, col_offset=16), lineno=56, col_offset=16)], [], lineno=55, col_offset=12)], lineno=53, col_offset=13)], [], lineno=47, col_offset=4), FunctionDef('test_starting_threads', arguments([Name('self', Param(), lineno=58, col_offset=30)], None, None, []), [For(Name('i', Store(), lineno=60, col_offset=12), Call(Name('range', Load(), lineno=60, col_offset=17), [Name('NUMTASKS', Load(), lineno=60, col_offset=23)], [], None, None, lineno=60, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=61, col_offset=12), 'newtask', Load(), lineno=61, col_offset=12), [], [], None, None, lineno=61, col_offset=12), lineno=61, col_offset=12)], [], lineno=60, col_offset=8), Expr(Call(Name('verbose_print', Load(), lineno=62, col_offset=8), [Str('waiting for tasks to complete...', lineno=62, col_offset=22)], [], None, None, lineno=62, col_offset=8), lineno=62, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=63, col_offset=8), 'done_mutex', Load(), lineno=63, col_offset=8), 'acquire', Load(), lineno=63, col_offset=8), [], [], None, None, lineno=63, col_offset=8), lineno=63, col_offset=8), Expr(Call(Name('verbose_print', Load(), lineno=64, col_offset=8), [Str('all tasks done', lineno=64, col_offset=22)], [], None, None, lineno=64, col_offset=8), lineno=64, col_offset=8)], [], lineno=58, col_offset=4), FunctionDef('test_stack_size', arguments([Name('self', Param(), lineno=66, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=68, col_offset=8), 'assertEqual', Load(), lineno=68, col_offset=8), [Call(Attribute(Name('thread', Load(), lineno=68, col_offset=25), 'stack_size', Load(), lineno=68, col_offset=25), [], [], None, None, lineno=68, col_offset=25), Num(0, lineno=68, col_offset=46), Str('initial stack size is not 0', lineno=68, col_offset=49)], [], None, None, lineno=68, col_offset=8), lineno=68, col_offset=8), Expr(Call(Attribute(Name('thread', Load(), lineno=70, col_offset=8), 'stack_size', Load(), lineno=70, col_offset=8), [Num(0, lineno=70, col_offset=26)], [], None, None, lineno=70, col_offset=8), lineno=70, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=71, col_offset=8), 'assertEqual', Load(), lineno=71, col_offset=8), [Call(Attribute(Name('thread', Load(), lineno=71, col_offset=25), 'stack_size', Load(), lineno=71, col_offset=25), [], [], None, None, lineno=71, col_offset=25), Num(0, lineno=71, col_offset=46), Str('stack_size not reset to default', lineno=71, col_offset=49)], [], None, None, lineno=71, col_offset=8), lineno=71, col_offset=8), If(Compare(Attribute(Name('os', Load(), lineno=73, col_offset=11), 'name', Load(), lineno=73, col_offset=11), [NotIn()], [Tuple([Str('nt', lineno=73, col_offset=27), Str('os2', lineno=73, col_offset=33), Str('posix', lineno=73, col_offset=40)], Load(), lineno=73, col_offset=27)], lineno=73, col_offset=11), [Return(None, lineno=74, col_offset=12)], [], lineno=73, col_offset=8), Assign([Name('tss_supported', Store(), lineno=76, col_offset=8)], Name('True', Load(), lineno=76, col_offset=24), lineno=76, col_offset=8), TryExcept([Expr(Call(Attribute(Name('thread', Load(), lineno=78, col_offset=12), 'stack_size', Load(), lineno=78, col_offset=12), [Num(4096, lineno=78, col_offset=30)], [], None, None, lineno=78, col_offset=12), lineno=78, col_offset=12)], [ExceptHandler(Name('ValueError', Load(), lineno=79, col_offset=15), None, [Expr(Call(Name('verbose_print', Load(), lineno=80, col_offset=12), [Str('caught expected ValueError setting stack_size(4096)', lineno=80, col_offset=26)], [], None, None, lineno=80, col_offset=12), lineno=80, col_offset=12)], lineno=79, col_offset=8), ExceptHandler(Attribute(Name('thread', Load(), lineno=82, col_offset=15), 'error', Load(), lineno=82, col_offset=15), None, [Assign([Name('tss_supported', Store(), lineno=83, col_offset=12)], Name('False', Load(), lineno=83, col_offset=28), lineno=83, col_offset=12), Expr(Call(Name('verbose_print', Load(), lineno=84, col_offset=12), [Str('platform does not support changing thread stack size', lineno=84, col_offset=26)], [], None, None, lineno=84, col_offset=12), lineno=84, col_offset=12)], lineno=82, col_offset=8)], [], lineno=77, col_offset=8), If(Name('tss_supported', Load(), lineno=87, col_offset=11), [Assign([Name('fail_msg', Store(), lineno=88, col_offset=12)], Str('stack_size(%d) failed - should succeed', lineno=88, col_offset=23), lineno=88, col_offset=12), For(Name('tss', Store(), lineno=89, col_offset=16), Tuple([Num(262144, lineno=89, col_offset=24), Num(1048576, lineno=89, col_offset=32), Num(0, lineno=89, col_offset=42)], Load(), lineno=89, col_offset=24), [Expr(Call(Attribute(Name('thread', Load(), lineno=90, col_offset=16), 'stack_size', Load(), lineno=90, col_offset=16), [Name('tss', Load(), lineno=90, col_offset=34)], [], None, None, lineno=90, col_offset=16), lineno=90, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=91, col_offset=16), 'assertEqual', Load(), lineno=91, col_offset=16), [Call(Attribute(Name('thread', Load(), lineno=91, col_offset=33), 'stack_size', Load(), lineno=91, col_offset=33), [], [], None, None, lineno=91, col_offset=33), Name('tss', Load(), lineno=91, col_offset=54), BinOp(Name('fail_msg', Load(), lineno=91, col_offset=59), Mod(), Name('tss', Load(), lineno=91, col_offset=70), lineno=91, col_offset=59)], [], None, None, lineno=91, col_offset=16), lineno=91, col_offset=16), Expr(Call(Name('verbose_print', Load(), lineno=92, col_offset=16), [BinOp(Str('successfully set stack_size(%d)', lineno=92, col_offset=30), Mod(), Name('tss', Load(), lineno=92, col_offset=66), lineno=92, col_offset=30)], [], None, None, lineno=92, col_offset=16), lineno=92, col_offset=16)], [], lineno=89, col_offset=12), For(Name('tss', Store(), lineno=94, col_offset=16), Tuple([Num(262144, lineno=94, col_offset=24), Num(1048576, lineno=94, col_offset=32)], Load(), lineno=94, col_offset=24), [Expr(Call(Name('verbose_print', Load(), lineno=95, col_offset=16), [BinOp(Str('trying stack_size = (%d)', lineno=95, col_offset=30), Mod(), Name('tss', Load(), lineno=95, col_offset=59), lineno=95, col_offset=30)], [], None, None, lineno=95, col_offset=16), lineno=95, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=96, col_offset=16), 'next_ident', Store(), lineno=96, col_offset=16)], Num(0, lineno=96, col_offset=34), lineno=96, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=97, col_offset=16), 'created', Store(), lineno=97, col_offset=16)], Num(0, lineno=97, col_offset=31), lineno=97, col_offset=16), For(Name('i', Store(), lineno=98, col_offset=20), Call(Name('range', Load(), lineno=98, col_offset=25), [Name('NUMTASKS', Load(), lineno=98, col_offset=31)], [], None, None, lineno=98, col_offset=25), [Expr(Call(Attribute(Name('self', Load(), lineno=99, col_offset=20), 'newtask', Load(), lineno=99, col_offset=20), [], [], None, None, lineno=99, col_offset=20), lineno=99, col_offset=20)], [], lineno=98, col_offset=16), Expr(Call(Name('verbose_print', Load(), lineno=101, col_offset=16), [Str('waiting for all tasks to complete', lineno=101, col_offset=30)], [], None, None, lineno=101, col_offset=16), lineno=101, col_offset=16), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=102, col_offset=16), 'done_mutex', Load(), lineno=102, col_offset=16), 'acquire', Load(), lineno=102, col_offset=16), [], [], None, None, lineno=102, col_offset=16), lineno=102, col_offset=16), Expr(Call(Name('verbose_print', Load(), lineno=103, col_offset=16), [Str('all tasks done', lineno=103, col_offset=30)], [], None, None, lineno=103, col_offset=16), lineno=103, col_offset=16)], [], lineno=94, col_offset=12), Expr(Call(Attribute(Name('thread', Load(), lineno=105, col_offset=12), 'stack_size', Load(), lineno=105, col_offset=12), [Num(0, lineno=105, col_offset=30)], [], None, None, lineno=105, col_offset=12), lineno=105, col_offset=12)], [], lineno=87, col_offset=8)], [], lineno=66, col_offset=4), FunctionDef('test__count', arguments([Name('self', Param(), lineno=107, col_offset=20)], None, None, []), [Assign([Name('orig', Store(), lineno=109, col_offset=8)], Call(Attribute(Name('thread', Load(), lineno=109, col_offset=15), '_count', Load(), lineno=109, col_offset=15), [], [], None, None, lineno=109, col_offset=15), lineno=109, col_offset=8), Assign([Name('mut', Store(), lineno=110, col_offset=8)], Call(Attribute(Name('thread', Load(), lineno=110, col_offset=14), 'allocate_lock', Load(), lineno=110, col_offset=14), [], [], None, None, lineno=110, col_offset=14), lineno=110, col_offset=8), Expr(Call(Attribute(Name('mut', Load(), lineno=111, col_offset=8), 'acquire', Load(), lineno=111, col_offset=8), [], [], None, None, lineno=111, col_offset=8), lineno=111, col_offset=8), Assign([Name('started', Store(), lineno=112, col_offset=8)], List([], Load(), lineno=112, col_offset=18), lineno=112, col_offset=8), FunctionDef('task', arguments([], None, None, []), [Expr(Call(Attribute(Name('started', Load(), lineno=114, col_offset=12), 'append', Load(), lineno=114, col_offset=12), [Name('None', Load(), lineno=114, col_offset=27)], [], None, None, lineno=114, col_offset=12), lineno=114, col_offset=12), Expr(Call(Attribute(Name('mut', Load(), lineno=115, col_offset=12), 'acquire', Load(), lineno=115, col_offset=12), [], [], None, None, lineno=115, col_offset=12), lineno=115, col_offset=12), Expr(Call(Attribute(Name('mut', Load(), lineno=116, col_offset=12), 'release', Load(), lineno=116, col_offset=12), [], [], None, None, lineno=116, col_offset=12), lineno=116, col_offset=12)], [], lineno=113, col_offset=8), Expr(Call(Attribute(Name('thread', Load(), lineno=117, col_offset=8), 'start_new_thread', Load(), lineno=117, col_offset=8), [Name('task', Load(), lineno=117, col_offset=32), Tuple([], Load(), lineno=117, col_offset=38)], [], None, None, lineno=117, col_offset=8), lineno=117, col_offset=8), While(UnaryOp(Not(), Name('started', Load(), lineno=118, col_offset=18), lineno=118, col_offset=14), [Expr(Call(Attribute(Name('time', Load(), lineno=119, col_offset=12), 'sleep', Load(), lineno=119, col_offset=12), [Num(0.01, lineno=119, col_offset=23)], [], None, None, lineno=119, col_offset=12), lineno=119, col_offset=12)], [], lineno=118, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=120, col_offset=8), 'assertEqual', Load(), lineno=120, col_offset=8), [Call(Attribute(Name('thread', Load(), lineno=120, col_offset=25), '_count', Load(), lineno=120, col_offset=25), [], [], None, None, lineno=120, col_offset=25), BinOp(Name('orig', Load(), lineno=120, col_offset=42), Add(), Num(1, lineno=120, col_offset=49), lineno=120, col_offset=42)], [], None, None, lineno=120, col_offset=8), lineno=120, col_offset=8), Expr(Call(Attribute(Name('mut', Load(), lineno=122, col_offset=8), 'release', Load(), lineno=122, col_offset=8), [], [], None, None, lineno=122, col_offset=8), lineno=122, col_offset=8), Assign([Name('done', Store(), lineno=126, col_offset=8)], List([], Load(), lineno=126, col_offset=15), lineno=126, col_offset=8), Assign([Name('wr', Store(), lineno=127, col_offset=8)], Call(Attribute(Name('weakref', Load(), lineno=127, col_offset=13), 'ref', Load(), lineno=127, col_offset=13), [Name('task', Load(), lineno=127, col_offset=25), Lambda(arguments([Name('_', Param(), lineno=127, col_offset=38)], None, None, []), Call(Attribute(Name('done', Load(), lineno=127, col_offset=41), 'append', Load(), lineno=127, col_offset=41), [Name('None', Load(), lineno=127, col_offset=53)], [], None, None, lineno=127, col_offset=41), lineno=127, col_offset=31)], [], None, None, lineno=127, col_offset=13), lineno=127, col_offset=8), Delete([Name('task', Del(), lineno=128, col_offset=12)], lineno=128, col_offset=8), While(UnaryOp(Not(), Name('done', Load(), lineno=129, col_offset=18), lineno=129, col_offset=14), [Expr(Call(Attribute(Name('time', Load(), lineno=130, col_offset=12), 'sleep', Load(), lineno=130, col_offset=12), [Num(0.01, lineno=130, col_offset=23)], [], None, None, lineno=130, col_offset=12), lineno=130, col_offset=12)], [], lineno=129, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=131, col_offset=8), 'assertEqual', Load(), lineno=131, col_offset=8), [Call(Attribute(Name('thread', Load(), lineno=131, col_offset=25), '_count', Load(), lineno=131, col_offset=25), [], [], None, None, lineno=131, col_offset=25), Name('orig', Load(), lineno=131, col_offset=42)], [], None, None, lineno=131, col_offset=8), lineno=131, col_offset=8)], [], lineno=107, col_offset=4)], [], lineno=37, col_offset=0), ClassDef('Barrier', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=135, col_offset=17), Name('num_threads', Param(), lineno=135, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=136, col_offset=8), 'num_threads', Store(), lineno=136, col_offset=8)], Name('num_threads', Load(), lineno=136, col_offset=27), lineno=136, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=137, col_offset=8), 'waiting', Store(), lineno=137, col_offset=8)], Num(0, lineno=137, col_offset=23), lineno=137, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=138, col_offset=8), 'checkin_mutex', Store(), lineno=138, col_offset=8)], Call(Attribute(Name('thread', Load(), lineno=138, col_offset=30), 'allocate_lock', Load(), lineno=138, col_offset=30), [], [], None, None, lineno=138, col_offset=30), lineno=138, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=139, col_offset=8), 'checkout_mutex', Store(), lineno=139, col_offset=8)], Call(Attribute(Name('thread', Load(), lineno=139, col_offset=30), 'allocate_lock', Load(), lineno=139, col_offset=30), [], [], None, None, lineno=139, col_offset=30), lineno=139, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=140, col_offset=8), 'checkout_mutex', Load(), lineno=140, col_offset=8), 'acquire', Load(), lineno=140, col_offset=8), [], [], None, None, lineno=140, col_offset=8), lineno=140, col_offset=8)], [], lineno=135, col_offset=4), FunctionDef('enter', arguments([Name('self', Param(), lineno=142, col_offset=14)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=143, col_offset=8), 'checkin_mutex', Load(), lineno=143, col_offset=8), 'acquire', Load(), lineno=143, col_offset=8), [], [], None, None, lineno=143, col_offset=8), lineno=143, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=144, col_offset=8), 'waiting', Store(), lineno=144, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=144, col_offset=23), 'waiting', Load(), lineno=144, col_offset=23), Add(), Num(1, lineno=144, col_offset=38), lineno=144, col_offset=23), lineno=144, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=145, col_offset=11), 'waiting', Load(), lineno=145, col_offset=11), [Eq()], [Attribute(Name('self', Load(), lineno=145, col_offset=27), 'num_threads', Load(), lineno=145, col_offset=27)], lineno=145, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=146, col_offset=12), 'waiting', Store(), lineno=146, col_offset=12)], BinOp(Attribute(Name('self', Load(), lineno=146, col_offset=27), 'num_threads', Load(), lineno=146, col_offset=27), Sub(), Num(1, lineno=146, col_offset=46), lineno=146, col_offset=27), lineno=146, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=147, col_offset=12), 'checkout_mutex', Load(), lineno=147, col_offset=12), 'release', Load(), lineno=147, col_offset=12), [], [], None, None, lineno=147, col_offset=12), lineno=147, col_offset=12), Return(None, lineno=148, col_offset=12)], [], lineno=145, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=149, col_offset=8), 'checkin_mutex', Load(), lineno=149, col_offset=8), 'release', Load(), lineno=149, col_offset=8), [], [], None, None, lineno=149, col_offset=8), lineno=149, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=151, col_offset=8), 'checkout_mutex', Load(), lineno=151, col_offset=8), 'acquire', Load(), lineno=151, col_offset=8), [], [], None, None, lineno=151, col_offset=8), lineno=151, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=152, col_offset=8), 'waiting', Store(), lineno=152, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=152, col_offset=23), 'waiting', Load(), lineno=152, col_offset=23), Sub(), Num(1, lineno=152, col_offset=38), lineno=152, col_offset=23), lineno=152, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=153, col_offset=11), 'waiting', Load(), lineno=153, col_offset=11), [Eq()], [Num(0, lineno=153, col_offset=27)], lineno=153, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=154, col_offset=12), 'checkin_mutex', Load(), lineno=154, col_offset=12), 'release', Load(), lineno=154, col_offset=12), [], [], None, None, lineno=154, col_offset=12), lineno=154, col_offset=12), Return(None, lineno=155, col_offset=12)], [], lineno=153, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=156, col_offset=8), 'checkout_mutex', Load(), lineno=156, col_offset=8), 'release', Load(), lineno=156, col_offset=8), [], [], None, None, lineno=156, col_offset=8), lineno=156, col_offset=8)], [], lineno=142, col_offset=4)], [], lineno=134, col_offset=0), ClassDef('BarrierTest', [Name('BasicThreadTest', Load(), lineno=159, col_offset=18)], [FunctionDef('test_barrier', arguments([Name('self', Param(), lineno=161, col_offset=21)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=162, col_offset=8), 'bar', Store(), lineno=162, col_offset=8)], Call(Name('Barrier', Load(), lineno=162, col_offset=19), [Name('NUMTASKS', Load(), lineno=162, col_offset=27)], [], None, None, lineno=162, col_offset=19), lineno=162, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=163, col_offset=8), 'running', Store(), lineno=163, col_offset=8)], Name('NUMTASKS', Load(), lineno=163, col_offset=23), lineno=163, col_offset=8), For(Name('i', Store(), lineno=164, col_offset=12), Call(Name('range', Load(), lineno=164, col_offset=17), [Name('NUMTASKS', Load(), lineno=164, col_offset=23)], [], None, None, lineno=164, col_offset=17), [Expr(Call(Attribute(Name('thread', Load(), lineno=165, col_offset=12), 'start_new_thread', Load(), lineno=165, col_offset=12), [Attribute(Name('self', Load(), lineno=165, col_offset=36), 'task2', Load(), lineno=165, col_offset=36), Tuple([Name('i', Load(), lineno=165, col_offset=49)], Load(), lineno=165, col_offset=49)], [], None, None, lineno=165, col_offset=12), lineno=165, col_offset=12)], [], lineno=164, col_offset=8), Expr(Call(Name('verbose_print', Load(), lineno=166, col_offset=8), [Str('waiting for tasks to end', lineno=166, col_offset=22)], [], None, None, lineno=166, col_offset=8), lineno=166, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=167, col_offset=8), 'done_mutex', Load(), lineno=167, col_offset=8), 'acquire', Load(), lineno=167, col_offset=8), [], [], None, None, lineno=167, col_offset=8), lineno=167, col_offset=8), Expr(Call(Name('verbose_print', Load(), lineno=168, col_offset=8), [Str('tasks done', lineno=168, col_offset=22)], [], None, None, lineno=168, col_offset=8), lineno=168, col_offset=8)], [], lineno=161, col_offset=4), FunctionDef('task2', arguments([Name('self', Param(), lineno=170, col_offset=14), Name('ident', Param(), lineno=170, col_offset=20)], None, None, []), [For(Name('i', Store(), lineno=171, col_offset=12), Call(Name('range', Load(), lineno=171, col_offset=17), [Name('NUMTRIPS', Load(), lineno=171, col_offset=23)], [], None, None, lineno=171, col_offset=17), [If(Compare(Name('ident', Load(), lineno=172, col_offset=15), [Eq()], [Num(0, lineno=172, col_offset=24)], lineno=172, col_offset=15), [Assign([Name('delay', Store(), lineno=176, col_offset=16)], Num(0, lineno=176, col_offset=24), lineno=176, col_offset=16)], [With(Attribute(Name('self', Load(), lineno=178, col_offset=21), 'random_mutex', Load(), lineno=178, col_offset=21), None, [Assign([Name('delay', Store(), lineno=179, col_offset=20)], BinOp(Call(Attribute(Name('random', Load(), lineno=179, col_offset=28), 'random', Load(), lineno=179, col_offset=28), [], [], None, None, lineno=179, col_offset=28), Div(), Num(10000.0, lineno=179, col_offset=46), lineno=179, col_offset=28), lineno=179, col_offset=20)], lineno=178, col_offset=21)], lineno=172, col_offset=12), Expr(Call(Name('verbose_print', Load(), lineno=180, col_offset=12), [BinOp(Str('task %s will run for %sus', lineno=180, col_offset=26), Mod(), Tuple([Name('ident', Load(), lineno=181, col_offset=27), Call(Name('round', Load(), lineno=181, col_offset=34), [BinOp(Name('delay', Load(), lineno=181, col_offset=40), Mult(), Num(1000000.0, lineno=181, col_offset=48), lineno=181, col_offset=40)], [], None, None, lineno=181, col_offset=34)], Load(), lineno=181, col_offset=27), lineno=180, col_offset=26)], [], None, None, lineno=180, col_offset=12), lineno=180, col_offset=12), Expr(Call(Attribute(Name('time', Load(), lineno=182, col_offset=12), 'sleep', Load(), lineno=182, col_offset=12), [Name('delay', Load(), lineno=182, col_offset=23)], [], None, None, lineno=182, col_offset=12), lineno=182, col_offset=12), Expr(Call(Name('verbose_print', Load(), lineno=183, col_offset=12), [BinOp(Str('task %s entering %s', lineno=183, col_offset=26), Mod(), Tuple([Name('ident', Load(), lineno=183, col_offset=51), Name('i', Load(), lineno=183, col_offset=58)], Load(), lineno=183, col_offset=51), lineno=183, col_offset=26)], [], None, None, lineno=183, col_offset=12), lineno=183, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=184, col_offset=12), 'bar', Load(), lineno=184, col_offset=12), 'enter', Load(), lineno=184, col_offset=12), [], [], None, None, lineno=184, col_offset=12), lineno=184, col_offset=12), Expr(Call(Name('verbose_print', Load(), lineno=185, col_offset=12), [BinOp(Str('task %s leaving barrier', lineno=185, col_offset=26), Mod(), Name('ident', Load(), lineno=185, col_offset=54), lineno=185, col_offset=26)], [], None, None, lineno=185, col_offset=12), lineno=185, col_offset=12)], [], lineno=171, col_offset=8), With(Attribute(Name('self', Load(), lineno=186, col_offset=13), 'running_mutex', Load(), lineno=186, col_offset=13), None, [AugAssign(Attribute(Name('self', Load(), lineno=187, col_offset=12), 'running', Store(), lineno=187, col_offset=12), Sub(), Num(1, lineno=187, col_offset=28), lineno=187, col_offset=12), Assign([Name('finished', Store(), lineno=191, col_offset=12)], Compare(Attribute(Name('self', Load(), lineno=191, col_offset=23), 'running', Load(), lineno=191, col_offset=23), [Eq()], [Num(0, lineno=191, col_offset=39)], lineno=191, col_offset=23), lineno=191, col_offset=12)], lineno=186, col_offset=13), If(Name('finished', Load(), lineno=192, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=193, col_offset=12), 'done_mutex', Load(), lineno=193, col_offset=12), 'release', Load(), lineno=193, col_offset=12), [], [], None, None, lineno=193, col_offset=12), lineno=193, col_offset=12)], [], lineno=192, col_offset=8)], [], lineno=170, col_offset=4)], [], lineno=159, col_offset=0), ClassDef('LockTests', [Attribute(Name('lock_tests', Load(), lineno=196, col_offset=16), 'LockTests', Load(), lineno=196, col_offset=16)], [Assign([Name('locktype', Store(), lineno=197, col_offset=4)], Attribute(Name('thread', Load(), lineno=197, col_offset=15), 'allocate_lock', Load(), lineno=197, col_offset=15), lineno=197, col_offset=4)], [], lineno=196, col_offset=0), ClassDef('TestForkInThread', [Attribute(Name('unittest', Load(), lineno=200, col_offset=23), 'TestCase', Load(), lineno=200, col_offset=23)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=201, col_offset=14)], None, None, []), [Assign([Tuple([Attribute(Name('self', Load(), lineno=202, col_offset=8), 'read_fd', Store(), lineno=202, col_offset=8), Attribute(Name('self', Load(), lineno=202, col_offset=22), 'write_fd', Store(), lineno=202, col_offset=22)], Store(), lineno=202, col_offset=8)], Call(Attribute(Name('os', Load(), lineno=202, col_offset=38), 'pipe', Load(), lineno=202, col_offset=38), [], [], None, None, lineno=202, col_offset=38), lineno=202, col_offset=8)], [], lineno=201, col_offset=4), FunctionDef('test_forkinthread', arguments([Name('self', Param(), lineno=207, col_offset=26)], None, None, []), [FunctionDef('thread1', arguments([], None, None, []), [TryExcept([Assign([Name('pid', Store(), lineno=210, col_offset=16)], Call(Attribute(Name('os', Load(), lineno=210, col_offset=22), 'fork', Load(), lineno=210, col_offset=22), [], [], None, None, lineno=210, col_offset=22), lineno=210, col_offset=16)], [ExceptHandler(Name('RuntimeError', Load(), lineno=211, col_offset=19), None, [Expr(Call(Attribute(Name('sys', Load(), lineno=212, col_offset=16), 'exit', Load(), lineno=212, col_offset=16), [Num(0, lineno=212, col_offset=25)], [], None, None, lineno=212, col_offset=16), lineno=212, col_offset=16)], lineno=211, col_offset=12)], [], lineno=209, col_offset=12), If(Compare(Name('pid', Load(), lineno=214, col_offset=15), [Eq()], [Num(0, lineno=214, col_offset=22)], lineno=214, col_offset=15), [Expr(Call(Attribute(Name('os', Load(), lineno=215, col_offset=16), 'close', Load(), lineno=215, col_offset=16), [Attribute(Name('self', Load(), lineno=215, col_offset=25), 'read_fd', Load(), lineno=215, col_offset=25)], [], None, None, lineno=215, col_offset=16), lineno=215, col_offset=16), Expr(Call(Attribute(Name('os', Load(), lineno=216, col_offset=16), 'write', Load(), lineno=216, col_offset=16), [Attribute(Name('self', Load(), lineno=216, col_offset=25), 'write_fd', Load(), lineno=216, col_offset=25), Str('OK', lineno=216, col_offset=40)], [], None, None, lineno=216, col_offset=16), lineno=216, col_offset=16), Expr(Call(Attribute(Name('sys', Load(), lineno=217, col_offset=16), 'exit', Load(), lineno=217, col_offset=16), [Num(0, lineno=217, col_offset=25)], [], None, None, lineno=217, col_offset=16), lineno=217, col_offset=16)], [Expr(Call(Attribute(Name('os', Load(), lineno=219, col_offset=16), 'close', Load(), lineno=219, col_offset=16), [Attribute(Name('self', Load(), lineno=219, col_offset=25), 'write_fd', Load(), lineno=219, col_offset=25)], [], None, None, lineno=219, col_offset=16), lineno=219, col_offset=16)], lineno=214, col_offset=12)], [], lineno=208, col_offset=8), Expr(Call(Attribute(Name('thread', Load(), lineno=221, col_offset=8), 'start_new_thread', Load(), lineno=221, col_offset=8), [Name('thread1', Load(), lineno=221, col_offset=32), Tuple([], Load(), lineno=221, col_offset=41)], [], None, None, lineno=221, col_offset=8), lineno=221, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=222, col_offset=8), 'assertEqual', Load(), lineno=222, col_offset=8), [Call(Attribute(Name('os', Load(), lineno=222, col_offset=25), 'read', Load(), lineno=222, col_offset=25), [Attribute(Name('self', Load(), lineno=222, col_offset=33), 'read_fd', Load(), lineno=222, col_offset=33), Num(2, lineno=222, col_offset=47)], [], None, None, lineno=222, col_offset=25), Str('OK', lineno=222, col_offset=51), Str('Unable to fork() in thread', lineno=223, col_offset=25)], [], None, None, lineno=222, col_offset=8), lineno=222, col_offset=8)], [Call(Attribute(Name('unittest', Load(), lineno=204, col_offset=5), 'skipIf', Load(), lineno=204, col_offset=5), [Call(Attribute(Attribute(Name('sys', Load(), lineno=204, col_offset=21), 'platform', Load(), lineno=204, col_offset=21), 'startswith', Load(), lineno=204, col_offset=21), [Str('win', lineno=204, col_offset=45)], [], None, None, lineno=204, col_offset=21), Str('This test is only appropriate for POSIX-like systems.', lineno=205, col_offset=21)], [], None, None, lineno=204, col_offset=5), Attribute(Name('test_support', Load(), lineno=206, col_offset=5), 'reap_threads', Load(), lineno=206, col_offset=5)], lineno=204, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=225, col_offset=17)], None, None, []), [TryExcept([Expr(Call(Attribute(Name('os', Load(), lineno=227, col_offset=12), 'close', Load(), lineno=227, col_offset=12), [Attribute(Name('self', Load(), lineno=227, col_offset=21), 'read_fd', Load(), lineno=227, col_offset=21)], [], None, None, lineno=227, col_offset=12), lineno=227, col_offset=12)], [ExceptHandler(Name('OSError', Load(), lineno=228, col_offset=15), None, [Pass( lineno=229, col_offset=12)], lineno=228, col_offset=8)], [], lineno=226, col_offset=8), TryExcept([Expr(Call(Attribute(Name('os', Load(), lineno=232, col_offset=12), 'close', Load(), lineno=232, col_offset=12), [Attribute(Name('self', Load(), lineno=232, col_offset=21), 'write_fd', Load(), lineno=232, col_offset=21)], [], None, None, lineno=232, col_offset=12), lineno=232, col_offset=12)], [ExceptHandler(Name('OSError', Load(), lineno=233, col_offset=15), None, [Pass( lineno=234, col_offset=12)], lineno=233, col_offset=8)], [], lineno=231, col_offset=8)], [], lineno=225, col_offset=4)], [], lineno=200, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=238, col_offset=4), 'run_unittest', Load(), lineno=238, col_offset=4), [Name('ThreadRunningTests', Load(), lineno=238, col_offset=30), Name('BarrierTest', Load(), lineno=238, col_offset=50), Name('LockTests', Load(), lineno=238, col_offset=63), Name('TestForkInThread', Load(), lineno=239, col_offset=30)], [], None, None, lineno=238, col_offset=4), lineno=238, col_offset=4)], [], lineno=237, col_offset=0), If(Compare(Name('__name__', Load(), lineno=241, col_offset=3), [Eq()], [Str('__main__', lineno=241, col_offset=15)], lineno=241, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=242, col_offset=4), [], [], None, None, lineno=242, col_offset=4), lineno=242, col_offset=4)], [], lineno=241, col_offset=0)])
