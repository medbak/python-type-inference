Module([Expr(Str(' Codec for the Punicode encoding, as specified in RFC 3492\n\nWritten by Martin v. L\xf6wis.\n', lineno=5, col_offset=-1), lineno=5, col_offset=-1), Import([alias('codecs', None)], lineno=7, col_offset=0), FunctionDef('segregate', arguments([Name('str', Param(), lineno=11, col_offset=14)], None, None, []), [Expr(Str('3.1 Basic code point segregation', lineno=12, col_offset=4), lineno=12, col_offset=4), Assign([Name('base', Store(), lineno=13, col_offset=4)], List([], Load(), lineno=13, col_offset=11), lineno=13, col_offset=4), Assign([Name('extended', Store(), lineno=14, col_offset=4)], Dict([], [], lineno=14, col_offset=15), lineno=14, col_offset=4), For(Name('c', Store(), lineno=15, col_offset=8), Name('str', Load(), lineno=15, col_offset=13), [If(Compare(Call(Name('ord', Load(), lineno=16, col_offset=11), [Name('c', Load(), lineno=16, col_offset=15)], [], None, None, lineno=16, col_offset=11), [Lt()], [Num(128, lineno=16, col_offset=20)], lineno=16, col_offset=11), [Expr(Call(Attribute(Name('base', Load(), lineno=17, col_offset=12), 'append', Load(), lineno=17, col_offset=12), [Name('c', Load(), lineno=17, col_offset=24)], [], None, None, lineno=17, col_offset=12), lineno=17, col_offset=12)], [Assign([Subscript(Name('extended', Load(), lineno=19, col_offset=12), Index(Name('c', Load(), lineno=19, col_offset=21)), Store(), lineno=19, col_offset=12)], Num(1, lineno=19, col_offset=26), lineno=19, col_offset=12)], lineno=16, col_offset=8)], [], lineno=15, col_offset=4), Assign([Name('extended', Store(), lineno=20, col_offset=4)], Call(Attribute(Name('extended', Load(), lineno=20, col_offset=15), 'keys', Load(), lineno=20, col_offset=15), [], [], None, None, lineno=20, col_offset=15), lineno=20, col_offset=4), Expr(Call(Attribute(Name('extended', Load(), lineno=21, col_offset=4), 'sort', Load(), lineno=21, col_offset=4), [], [], None, None, lineno=21, col_offset=4), lineno=21, col_offset=4), Return(Tuple([Call(Attribute(Call(Attribute(Str('', lineno=22, col_offset=11), 'join', Load(), lineno=22, col_offset=11), [Name('base', Load(), lineno=22, col_offset=19)], [], None, None, lineno=22, col_offset=11), 'encode', Load(), lineno=22, col_offset=11), [Str('ascii', lineno=22, col_offset=32)], [], None, None, lineno=22, col_offset=11), Name('extended', Load(), lineno=22, col_offset=41)], Load(), lineno=22, col_offset=11), lineno=22, col_offset=4)], [], lineno=11, col_offset=0), FunctionDef('selective_len', arguments([Name('str', Param(), lineno=24, col_offset=18), Name('max', Param(), lineno=24, col_offset=23)], None, None, []), [Expr(Str('Return the length of str, considering only characters below max.', lineno=25, col_offset=4), lineno=25, col_offset=4), Assign([Name('res', Store(), lineno=26, col_offset=4)], Num(0, lineno=26, col_offset=10), lineno=26, col_offset=4), For(Name('c', Store(), lineno=27, col_offset=8), Name('str', Load(), lineno=27, col_offset=13), [If(Compare(Call(Name('ord', Load(), lineno=28, col_offset=11), [Name('c', Load(), lineno=28, col_offset=15)], [], None, None, lineno=28, col_offset=11), [Lt()], [Name('max', Load(), lineno=28, col_offset=20)], lineno=28, col_offset=11), [AugAssign(Name('res', Store(), lineno=29, col_offset=12), Add(), Num(1, lineno=29, col_offset=19), lineno=29, col_offset=12)], [], lineno=28, col_offset=8)], [], lineno=27, col_offset=4), Return(Name('res', Load(), lineno=30, col_offset=11), lineno=30, col_offset=4)], [], lineno=24, col_offset=0), FunctionDef('selective_find', arguments([Name('str', Param(), lineno=32, col_offset=19), Name('char', Param(), lineno=32, col_offset=24), Name('index', Param(), lineno=32, col_offset=30), Name('pos', Param(), lineno=32, col_offset=37)], None, None, []), [Expr(Str('Return a pair (index, pos), indicating the next occurrence of\n    char in str. index is the position of the character considering\n    only ordinals up to and including char, and pos is the position in\n    the full string. index/pos is the starting position in the full\n    string.', lineno=37, col_offset=-1), lineno=37, col_offset=-1), Assign([Name('l', Store(), lineno=39, col_offset=4)], Call(Name('len', Load(), lineno=39, col_offset=8), [Name('str', Load(), lineno=39, col_offset=12)], [], None, None, lineno=39, col_offset=8), lineno=39, col_offset=4), While(Num(1, lineno=40, col_offset=10), [AugAssign(Name('pos', Store(), lineno=41, col_offset=8), Add(), Num(1, lineno=41, col_offset=15), lineno=41, col_offset=8), If(Compare(Name('pos', Load(), lineno=42, col_offset=11), [Eq()], [Name('l', Load(), lineno=42, col_offset=18)], lineno=42, col_offset=11), [Return(Tuple([Num(-1, lineno=43, col_offset=21), Num(-1, lineno=43, col_offset=25)], Load(), lineno=43, col_offset=20), lineno=43, col_offset=12)], [], lineno=42, col_offset=8), Assign([Name('c', Store(), lineno=44, col_offset=8)], Subscript(Name('str', Load(), lineno=44, col_offset=12), Index(Name('pos', Load(), lineno=44, col_offset=16)), Load(), lineno=44, col_offset=12), lineno=44, col_offset=8), If(Compare(Name('c', Load(), lineno=45, col_offset=11), [Eq()], [Name('char', Load(), lineno=45, col_offset=16)], lineno=45, col_offset=11), [Return(Tuple([BinOp(Name('index', Load(), lineno=46, col_offset=19), Add(), Num(1, lineno=46, col_offset=25), lineno=46, col_offset=19), Name('pos', Load(), lineno=46, col_offset=28)], Load(), lineno=46, col_offset=19), lineno=46, col_offset=12)], [If(Compare(Name('c', Load(), lineno=47, col_offset=13), [Lt()], [Name('char', Load(), lineno=47, col_offset=17)], lineno=47, col_offset=13), [AugAssign(Name('index', Store(), lineno=48, col_offset=12), Add(), Num(1, lineno=48, col_offset=21), lineno=48, col_offset=12)], [], lineno=47, col_offset=13)], lineno=45, col_offset=8)], [], lineno=40, col_offset=4)], [], lineno=32, col_offset=0), FunctionDef('insertion_unsort', arguments([Name('str', Param(), lineno=50, col_offset=21), Name('extended', Param(), lineno=50, col_offset=26)], None, None, []), [Expr(Str('3.2 Insertion unsort coding', lineno=51, col_offset=4), lineno=51, col_offset=4), Assign([Name('oldchar', Store(), lineno=52, col_offset=4)], Num(128, lineno=52, col_offset=14), lineno=52, col_offset=4), Assign([Name('result', Store(), lineno=53, col_offset=4)], List([], Load(), lineno=53, col_offset=13), lineno=53, col_offset=4), Assign([Name('oldindex', Store(), lineno=54, col_offset=4)], Num(-1, lineno=54, col_offset=16), lineno=54, col_offset=4), For(Name('c', Store(), lineno=55, col_offset=8), Name('extended', Load(), lineno=55, col_offset=13), [Assign([Name('index', Store(), lineno=56, col_offset=8), Name('pos', Store(), lineno=56, col_offset=16)], Num(-1, lineno=56, col_offset=23), lineno=56, col_offset=8), Assign([Name('char', Store(), lineno=57, col_offset=8)], Call(Name('ord', Load(), lineno=57, col_offset=15), [Name('c', Load(), lineno=57, col_offset=19)], [], None, None, lineno=57, col_offset=15), lineno=57, col_offset=8), Assign([Name('curlen', Store(), lineno=58, col_offset=8)], Call(Name('selective_len', Load(), lineno=58, col_offset=17), [Name('str', Load(), lineno=58, col_offset=31), Name('char', Load(), lineno=58, col_offset=36)], [], None, None, lineno=58, col_offset=17), lineno=58, col_offset=8), Assign([Name('delta', Store(), lineno=59, col_offset=8)], BinOp(BinOp(Name('curlen', Load(), lineno=59, col_offset=17), Add(), Num(1, lineno=59, col_offset=24), lineno=59, col_offset=17), Mult(), BinOp(Name('char', Load(), lineno=59, col_offset=30), Sub(), Name('oldchar', Load(), lineno=59, col_offset=37), lineno=59, col_offset=30), lineno=59, col_offset=16), lineno=59, col_offset=8), While(Num(1, lineno=60, col_offset=14), [Assign([Tuple([Name('index', Store(), lineno=61, col_offset=12), Name('pos', Store(), lineno=61, col_offset=18)], Store(), lineno=61, col_offset=12)], Call(Name('selective_find', Load(), lineno=61, col_offset=24), [Name('str', Load(), lineno=61, col_offset=39), Name('c', Load(), lineno=61, col_offset=43), Name('index', Load(), lineno=61, col_offset=45), Name('pos', Load(), lineno=61, col_offset=51)], [], None, None, lineno=61, col_offset=24), lineno=61, col_offset=12), If(Compare(Name('index', Load(), lineno=62, col_offset=15), [Eq()], [Num(-1, lineno=62, col_offset=25)], lineno=62, col_offset=15), [Break( lineno=63, col_offset=16)], [], lineno=62, col_offset=12), AugAssign(Name('delta', Store(), lineno=64, col_offset=12), Add(), BinOp(Name('index', Load(), lineno=64, col_offset=21), Sub(), Name('oldindex', Load(), lineno=64, col_offset=29), lineno=64, col_offset=21), lineno=64, col_offset=12), Expr(Call(Attribute(Name('result', Load(), lineno=65, col_offset=12), 'append', Load(), lineno=65, col_offset=12), [BinOp(Name('delta', Load(), lineno=65, col_offset=26), Sub(), Num(1, lineno=65, col_offset=32), lineno=65, col_offset=26)], [], None, None, lineno=65, col_offset=12), lineno=65, col_offset=12), Assign([Name('oldindex', Store(), lineno=66, col_offset=12)], Name('index', Load(), lineno=66, col_offset=23), lineno=66, col_offset=12), Assign([Name('delta', Store(), lineno=67, col_offset=12)], Num(0, lineno=67, col_offset=20), lineno=67, col_offset=12)], [], lineno=60, col_offset=8), Assign([Name('oldchar', Store(), lineno=68, col_offset=8)], Name('char', Load(), lineno=68, col_offset=18), lineno=68, col_offset=8)], [], lineno=55, col_offset=4), Return(Name('result', Load(), lineno=70, col_offset=11), lineno=70, col_offset=4)], [], lineno=50, col_offset=0), FunctionDef('T', arguments([Name('j', Param(), lineno=72, col_offset=6), Name('bias', Param(), lineno=72, col_offset=9)], None, None, []), [Assign([Name('res', Store(), lineno=74, col_offset=4)], BinOp(BinOp(Num(36, lineno=74, col_offset=10), Mult(), BinOp(Name('j', Load(), lineno=74, col_offset=16), Add(), Num(1, lineno=74, col_offset=20), lineno=74, col_offset=16), lineno=74, col_offset=10), Sub(), Name('bias', Load(), lineno=74, col_offset=25), lineno=74, col_offset=10), lineno=74, col_offset=4), If(Compare(Name('res', Load(), lineno=75, col_offset=7), [Lt()], [Num(1, lineno=75, col_offset=13)], lineno=75, col_offset=7), [Return(Num(1, lineno=75, col_offset=23), lineno=75, col_offset=16)], [], lineno=75, col_offset=4), If(Compare(Name('res', Load(), lineno=76, col_offset=7), [Gt()], [Num(26, lineno=76, col_offset=13)], lineno=76, col_offset=7), [Return(Num(26, lineno=76, col_offset=24), lineno=76, col_offset=17)], [], lineno=76, col_offset=4), Return(Name('res', Load(), lineno=77, col_offset=11), lineno=77, col_offset=4)], [], lineno=72, col_offset=0), Assign([Name('digits', Store(), lineno=79, col_offset=0)], Str('abcdefghijklmnopqrstuvwxyz0123456789', lineno=79, col_offset=9), lineno=79, col_offset=0), FunctionDef('generate_generalized_integer', arguments([Name('N', Param(), lineno=80, col_offset=33), Name('bias', Param(), lineno=80, col_offset=36)], None, None, []), [Expr(Str('3.3 Generalized variable-length integers', lineno=81, col_offset=4), lineno=81, col_offset=4), Assign([Name('result', Store(), lineno=82, col_offset=4)], List([], Load(), lineno=82, col_offset=13), lineno=82, col_offset=4), Assign([Name('j', Store(), lineno=83, col_offset=4)], Num(0, lineno=83, col_offset=8), lineno=83, col_offset=4), While(Num(1, lineno=84, col_offset=10), [Assign([Name('t', Store(), lineno=85, col_offset=8)], Call(Name('T', Load(), lineno=85, col_offset=12), [Name('j', Load(), lineno=85, col_offset=14), Name('bias', Load(), lineno=85, col_offset=17)], [], None, None, lineno=85, col_offset=12), lineno=85, col_offset=8), If(Compare(Name('N', Load(), lineno=86, col_offset=11), [Lt()], [Name('t', Load(), lineno=86, col_offset=15)], lineno=86, col_offset=11), [Expr(Call(Attribute(Name('result', Load(), lineno=87, col_offset=12), 'append', Load(), lineno=87, col_offset=12), [Subscript(Name('digits', Load(), lineno=87, col_offset=26), Index(Name('N', Load(), lineno=87, col_offset=33)), Load(), lineno=87, col_offset=26)], [], None, None, lineno=87, col_offset=12), lineno=87, col_offset=12), Return(Name('result', Load(), lineno=88, col_offset=19), lineno=88, col_offset=12)], [], lineno=86, col_offset=8), Expr(Call(Attribute(Name('result', Load(), lineno=89, col_offset=8), 'append', Load(), lineno=89, col_offset=8), [Subscript(Name('digits', Load(), lineno=89, col_offset=22), Index(BinOp(Name('t', Load(), lineno=89, col_offset=29), Add(), BinOp(BinOp(Name('N', Load(), lineno=89, col_offset=35), Sub(), Name('t', Load(), lineno=89, col_offset=39), lineno=89, col_offset=35), Mod(), BinOp(Num(36, lineno=89, col_offset=45), Sub(), Name('t', Load(), lineno=89, col_offset=50), lineno=89, col_offset=45), lineno=89, col_offset=34), lineno=89, col_offset=29)), Load(), lineno=89, col_offset=22)], [], None, None, lineno=89, col_offset=8), lineno=89, col_offset=8), Assign([Name('N', Store(), lineno=90, col_offset=8)], BinOp(BinOp(Name('N', Load(), lineno=90, col_offset=13), Sub(), Name('t', Load(), lineno=90, col_offset=17), lineno=90, col_offset=13), FloorDiv(), BinOp(Num(36, lineno=90, col_offset=24), Sub(), Name('t', Load(), lineno=90, col_offset=29), lineno=90, col_offset=24), lineno=90, col_offset=12), lineno=90, col_offset=8), AugAssign(Name('j', Store(), lineno=91, col_offset=8), Add(), Num(1, lineno=91, col_offset=13), lineno=91, col_offset=8)], [], lineno=84, col_offset=4)], [], lineno=80, col_offset=0), FunctionDef('adapt', arguments([Name('delta', Param(), lineno=93, col_offset=10), Name('first', Param(), lineno=93, col_offset=17), Name('numchars', Param(), lineno=93, col_offset=24)], None, None, []), [If(Name('first', Load(), lineno=94, col_offset=7), [AugAssign(Name('delta', Store(), lineno=95, col_offset=8), FloorDiv(), Num(700, lineno=95, col_offset=18), lineno=95, col_offset=8)], [AugAssign(Name('delta', Store(), lineno=97, col_offset=8), FloorDiv(), Num(2, lineno=97, col_offset=18), lineno=97, col_offset=8)], lineno=94, col_offset=4), AugAssign(Name('delta', Store(), lineno=98, col_offset=4), Add(), BinOp(Name('delta', Load(), lineno=98, col_offset=13), FloorDiv(), Name('numchars', Load(), lineno=98, col_offset=22), lineno=98, col_offset=13), lineno=98, col_offset=4), Assign([Name('divisions', Store(), lineno=100, col_offset=4)], Num(0, lineno=100, col_offset=16), lineno=100, col_offset=4), While(Compare(Name('delta', Load(), lineno=101, col_offset=10), [Gt()], [Num(455, lineno=101, col_offset=18)], lineno=101, col_offset=10), [Assign([Name('delta', Store(), lineno=102, col_offset=8)], BinOp(Name('delta', Load(), lineno=102, col_offset=16), FloorDiv(), Num(35, lineno=102, col_offset=25), lineno=102, col_offset=16), lineno=102, col_offset=8), AugAssign(Name('divisions', Store(), lineno=103, col_offset=8), Add(), Num(36, lineno=103, col_offset=21), lineno=103, col_offset=8)], [], lineno=101, col_offset=4), Assign([Name('bias', Store(), lineno=104, col_offset=4)], BinOp(Name('divisions', Load(), lineno=104, col_offset=11), Add(), BinOp(BinOp(Num(36, lineno=104, col_offset=24), Mult(), Name('delta', Load(), lineno=104, col_offset=29), lineno=104, col_offset=24), FloorDiv(), BinOp(Name('delta', Load(), lineno=104, col_offset=39), Add(), Num(38, lineno=104, col_offset=47), lineno=104, col_offset=39), lineno=104, col_offset=35), lineno=104, col_offset=11), lineno=104, col_offset=4), Return(Name('bias', Load(), lineno=105, col_offset=11), lineno=105, col_offset=4)], [], lineno=93, col_offset=0), FunctionDef('generate_integers', arguments([Name('baselen', Param(), lineno=108, col_offset=22), Name('deltas', Param(), lineno=108, col_offset=31)], None, None, []), [Expr(Str('3.4 Bias adaptation', lineno=109, col_offset=4), lineno=109, col_offset=4), Assign([Name('result', Store(), lineno=111, col_offset=4)], List([], Load(), lineno=111, col_offset=13), lineno=111, col_offset=4), Assign([Name('bias', Store(), lineno=112, col_offset=4)], Num(72, lineno=112, col_offset=11), lineno=112, col_offset=4), For(Tuple([Name('points', Store(), lineno=113, col_offset=8), Name('delta', Store(), lineno=113, col_offset=16)], Store(), lineno=113, col_offset=8), Call(Name('enumerate', Load(), lineno=113, col_offset=25), [Name('deltas', Load(), lineno=113, col_offset=35)], [], None, None, lineno=113, col_offset=25), [Assign([Name('s', Store(), lineno=114, col_offset=8)], Call(Name('generate_generalized_integer', Load(), lineno=114, col_offset=12), [Name('delta', Load(), lineno=114, col_offset=41), Name('bias', Load(), lineno=114, col_offset=48)], [], None, None, lineno=114, col_offset=12), lineno=114, col_offset=8), Expr(Call(Attribute(Name('result', Load(), lineno=115, col_offset=8), 'extend', Load(), lineno=115, col_offset=8), [Name('s', Load(), lineno=115, col_offset=22)], [], None, None, lineno=115, col_offset=8), lineno=115, col_offset=8), Assign([Name('bias', Store(), lineno=116, col_offset=8)], Call(Name('adapt', Load(), lineno=116, col_offset=15), [Name('delta', Load(), lineno=116, col_offset=21), Compare(Name('points', Load(), lineno=116, col_offset=28), [Eq()], [Num(0, lineno=116, col_offset=36)], lineno=116, col_offset=28), BinOp(BinOp(Name('baselen', Load(), lineno=116, col_offset=39), Add(), Name('points', Load(), lineno=116, col_offset=47), lineno=116, col_offset=39), Add(), Num(1, lineno=116, col_offset=54), lineno=116, col_offset=53)], [], None, None, lineno=116, col_offset=15), lineno=116, col_offset=8)], [], lineno=113, col_offset=4), Return(Call(Attribute(Str('', lineno=117, col_offset=11), 'join', Load(), lineno=117, col_offset=11), [Name('result', Load(), lineno=117, col_offset=19)], [], None, None, lineno=117, col_offset=11), lineno=117, col_offset=4)], [], lineno=108, col_offset=0), FunctionDef('punycode_encode', arguments([Name('text', Param(), lineno=119, col_offset=20)], None, None, []), [Assign([Tuple([Name('base', Store(), lineno=120, col_offset=4), Name('extended', Store(), lineno=120, col_offset=10)], Store(), lineno=120, col_offset=4)], Call(Name('segregate', Load(), lineno=120, col_offset=21), [Name('text', Load(), lineno=120, col_offset=31)], [], None, None, lineno=120, col_offset=21), lineno=120, col_offset=4), Assign([Name('base', Store(), lineno=121, col_offset=4)], Call(Attribute(Name('base', Load(), lineno=121, col_offset=11), 'encode', Load(), lineno=121, col_offset=11), [Str('ascii', lineno=121, col_offset=23)], [], None, None, lineno=121, col_offset=11), lineno=121, col_offset=4), Assign([Name('deltas', Store(), lineno=122, col_offset=4)], Call(Name('insertion_unsort', Load(), lineno=122, col_offset=13), [Name('text', Load(), lineno=122, col_offset=30), Name('extended', Load(), lineno=122, col_offset=36)], [], None, None, lineno=122, col_offset=13), lineno=122, col_offset=4), Assign([Name('extended', Store(), lineno=123, col_offset=4)], Call(Name('generate_integers', Load(), lineno=123, col_offset=15), [Call(Name('len', Load(), lineno=123, col_offset=33), [Name('base', Load(), lineno=123, col_offset=37)], [], None, None, lineno=123, col_offset=33), Name('deltas', Load(), lineno=123, col_offset=44)], [], None, None, lineno=123, col_offset=15), lineno=123, col_offset=4), If(Name('base', Load(), lineno=124, col_offset=7), [Return(BinOp(BinOp(Name('base', Load(), lineno=125, col_offset=15), Add(), Str('-', lineno=125, col_offset=22), lineno=125, col_offset=15), Add(), Name('extended', Load(), lineno=125, col_offset=28), lineno=125, col_offset=26), lineno=125, col_offset=8)], [], lineno=124, col_offset=4), Return(Name('extended', Load(), lineno=126, col_offset=11), lineno=126, col_offset=4)], [], lineno=119, col_offset=0), FunctionDef('decode_generalized_number', arguments([Name('extended', Param(), lineno=130, col_offset=30), Name('extpos', Param(), lineno=130, col_offset=40), Name('bias', Param(), lineno=130, col_offset=48), Name('errors', Param(), lineno=130, col_offset=54)], None, None, []), [Expr(Str('3.3 Generalized variable-length integers', lineno=131, col_offset=4), lineno=131, col_offset=4), Assign([Name('result', Store(), lineno=132, col_offset=4)], Num(0, lineno=132, col_offset=13), lineno=132, col_offset=4), Assign([Name('w', Store(), lineno=133, col_offset=4)], Num(1, lineno=133, col_offset=8), lineno=133, col_offset=4), Assign([Name('j', Store(), lineno=134, col_offset=4)], Num(0, lineno=134, col_offset=8), lineno=134, col_offset=4), While(Num(1, lineno=135, col_offset=10), [TryExcept([Assign([Name('char', Store(), lineno=137, col_offset=12)], Call(Name('ord', Load(), lineno=137, col_offset=19), [Subscript(Name('extended', Load(), lineno=137, col_offset=23), Index(Name('extpos', Load(), lineno=137, col_offset=32)), Load(), lineno=137, col_offset=23)], [], None, None, lineno=137, col_offset=19), lineno=137, col_offset=12)], [ExceptHandler(Name('IndexError', Load(), lineno=138, col_offset=15), None, [If(Compare(Name('errors', Load(), lineno=139, col_offset=15), [Eq()], [Str('strict', lineno=139, col_offset=25)], lineno=139, col_offset=15), [Raise(Name('UnicodeError', Load(), lineno=140, col_offset=22), Str('incomplete punicode string', lineno=140, col_offset=36), None, lineno=140, col_offset=16)], [], lineno=139, col_offset=12), Return(Tuple([BinOp(Name('extpos', Load(), lineno=141, col_offset=19), Add(), Num(1, lineno=141, col_offset=28), lineno=141, col_offset=19), Name('None', Load(), lineno=141, col_offset=31)], Load(), lineno=141, col_offset=19), lineno=141, col_offset=12)], lineno=138, col_offset=8)], [], lineno=136, col_offset=8), AugAssign(Name('extpos', Store(), lineno=142, col_offset=8), Add(), Num(1, lineno=142, col_offset=18), lineno=142, col_offset=8), If(Compare(Num(65, lineno=143, col_offset=11), [LtE(), LtE()], [Name('char', Load(), lineno=143, col_offset=19), Num(90, lineno=143, col_offset=27)], lineno=143, col_offset=11), [Assign([Name('digit', Store(), lineno=144, col_offset=12)], BinOp(Name('char', Load(), lineno=144, col_offset=20), Sub(), Num(65, lineno=144, col_offset=27), lineno=144, col_offset=20), lineno=144, col_offset=12)], [If(Compare(Num(48, lineno=145, col_offset=13), [LtE(), LtE()], [Name('char', Load(), lineno=145, col_offset=21), Num(57, lineno=145, col_offset=29)], lineno=145, col_offset=13), [Assign([Name('digit', Store(), lineno=146, col_offset=12)], BinOp(Name('char', Load(), lineno=146, col_offset=20), Sub(), Num(22, lineno=146, col_offset=27), lineno=146, col_offset=20), lineno=146, col_offset=12)], [If(Compare(Name('errors', Load(), lineno=147, col_offset=13), [Eq()], [Str('strict', lineno=147, col_offset=23)], lineno=147, col_offset=13), [Raise(Call(Name('UnicodeError', Load(), lineno=148, col_offset=18), [BinOp(Str("Invalid extended code point '%s'", lineno=148, col_offset=31), Mod(), Subscript(Name('extended', Load(), lineno=149, col_offset=33), Index(Name('extpos', Load(), lineno=149, col_offset=42)), Load(), lineno=149, col_offset=33), lineno=148, col_offset=31)], [], None, None, lineno=148, col_offset=18), None, None, lineno=148, col_offset=12)], [Return(Tuple([Name('extpos', Load(), lineno=151, col_offset=19), Name('None', Load(), lineno=151, col_offset=27)], Load(), lineno=151, col_offset=19), lineno=151, col_offset=12)], lineno=147, col_offset=13)], lineno=145, col_offset=13)], lineno=143, col_offset=8), Assign([Name('t', Store(), lineno=152, col_offset=8)], Call(Name('T', Load(), lineno=152, col_offset=12), [Name('j', Load(), lineno=152, col_offset=14), Name('bias', Load(), lineno=152, col_offset=17)], [], None, None, lineno=152, col_offset=12), lineno=152, col_offset=8), AugAssign(Name('result', Store(), lineno=153, col_offset=8), Add(), BinOp(Name('digit', Load(), lineno=153, col_offset=18), Mult(), Name('w', Load(), lineno=153, col_offset=26), lineno=153, col_offset=18), lineno=153, col_offset=8), If(Compare(Name('digit', Load(), lineno=154, col_offset=11), [Lt()], [Name('t', Load(), lineno=154, col_offset=19)], lineno=154, col_offset=11), [Return(Tuple([Name('extpos', Load(), lineno=155, col_offset=19), Name('result', Load(), lineno=155, col_offset=27)], Load(), lineno=155, col_offset=19), lineno=155, col_offset=12)], [], lineno=154, col_offset=8), Assign([Name('w', Store(), lineno=156, col_offset=8)], BinOp(Name('w', Load(), lineno=156, col_offset=12), Mult(), BinOp(Num(36, lineno=156, col_offset=17), Sub(), Name('t', Load(), lineno=156, col_offset=22), lineno=156, col_offset=17), lineno=156, col_offset=12), lineno=156, col_offset=8), AugAssign(Name('j', Store(), lineno=157, col_offset=8), Add(), Num(1, lineno=157, col_offset=13), lineno=157, col_offset=8)], [], lineno=135, col_offset=4)], [], lineno=130, col_offset=0), FunctionDef('insertion_sort', arguments([Name('base', Param(), lineno=160, col_offset=19), Name('extended', Param(), lineno=160, col_offset=25), Name('errors', Param(), lineno=160, col_offset=35)], None, None, []), [Expr(Str('3.2 Insertion unsort coding', lineno=161, col_offset=4), lineno=161, col_offset=4), Assign([Name('char', Store(), lineno=162, col_offset=4)], Num(128, lineno=162, col_offset=11), lineno=162, col_offset=4), Assign([Name('pos', Store(), lineno=163, col_offset=4)], Num(-1, lineno=163, col_offset=11), lineno=163, col_offset=4), Assign([Name('bias', Store(), lineno=164, col_offset=4)], Num(72, lineno=164, col_offset=11), lineno=164, col_offset=4), Assign([Name('extpos', Store(), lineno=165, col_offset=4)], Num(0, lineno=165, col_offset=13), lineno=165, col_offset=4), While(Compare(Name('extpos', Load(), lineno=166, col_offset=10), [Lt()], [Call(Name('len', Load(), lineno=166, col_offset=19), [Name('extended', Load(), lineno=166, col_offset=23)], [], None, None, lineno=166, col_offset=19)], lineno=166, col_offset=10), [Assign([Tuple([Name('newpos', Store(), lineno=167, col_offset=8), Name('delta', Store(), lineno=167, col_offset=16)], Store(), lineno=167, col_offset=8)], Call(Name('decode_generalized_number', Load(), lineno=167, col_offset=24), [Name('extended', Load(), lineno=167, col_offset=50), Name('extpos', Load(), lineno=167, col_offset=60), Name('bias', Load(), lineno=168, col_offset=50), Name('errors', Load(), lineno=168, col_offset=56)], [], None, None, lineno=167, col_offset=24), lineno=167, col_offset=8), If(Compare(Name('delta', Load(), lineno=169, col_offset=11), [Is()], [Name('None', Load(), lineno=169, col_offset=20)], lineno=169, col_offset=11), [Return(Name('base', Load(), lineno=172, col_offset=19), lineno=172, col_offset=12)], [], lineno=169, col_offset=8), AugAssign(Name('pos', Store(), lineno=173, col_offset=8), Add(), BinOp(Name('delta', Load(), lineno=173, col_offset=15), Add(), Num(1, lineno=173, col_offset=21), lineno=173, col_offset=15), lineno=173, col_offset=8), AugAssign(Name('char', Store(), lineno=174, col_offset=8), Add(), BinOp(Name('pos', Load(), lineno=174, col_offset=16), FloorDiv(), BinOp(Call(Name('len', Load(), lineno=174, col_offset=24), [Name('base', Load(), lineno=174, col_offset=28)], [], None, None, lineno=174, col_offset=24), Add(), Num(1, lineno=174, col_offset=36), lineno=174, col_offset=24), lineno=174, col_offset=16), lineno=174, col_offset=8), If(Compare(Name('char', Load(), lineno=175, col_offset=11), [Gt()], [Num(1114111, lineno=175, col_offset=18)], lineno=175, col_offset=11), [If(Compare(Name('errors', Load(), lineno=176, col_offset=15), [Eq()], [Str('strict', lineno=176, col_offset=25)], lineno=176, col_offset=15), [Raise(Name('UnicodeError', Load(), lineno=177, col_offset=22), BinOp(Str('Invalid character U+%x', lineno=177, col_offset=37), Mod(), Name('char', Load(), lineno=177, col_offset=64), lineno=177, col_offset=37), None, lineno=177, col_offset=16)], [], lineno=176, col_offset=12), Assign([Name('char', Store(), lineno=178, col_offset=12)], Call(Name('ord', Load(), lineno=178, col_offset=19), [Str('?', lineno=178, col_offset=23)], [], None, None, lineno=178, col_offset=19), lineno=178, col_offset=12)], [], lineno=175, col_offset=8), Assign([Name('pos', Store(), lineno=179, col_offset=8)], BinOp(Name('pos', Load(), lineno=179, col_offset=14), Mod(), BinOp(Call(Name('len', Load(), lineno=179, col_offset=21), [Name('base', Load(), lineno=179, col_offset=25)], [], None, None, lineno=179, col_offset=21), Add(), Num(1, lineno=179, col_offset=33), lineno=179, col_offset=21), lineno=179, col_offset=14), lineno=179, col_offset=8), Assign([Name('base', Store(), lineno=180, col_offset=8)], BinOp(BinOp(Subscript(Name('base', Load(), lineno=180, col_offset=15), Slice(None, Name('pos', Load(), lineno=180, col_offset=21), None), Load(), lineno=180, col_offset=15), Add(), Call(Name('unichr', Load(), lineno=180, col_offset=28), [Name('char', Load(), lineno=180, col_offset=35)], [], None, None, lineno=180, col_offset=28), lineno=180, col_offset=15), Add(), Subscript(Name('base', Load(), lineno=180, col_offset=43), Slice(Name('pos', Load(), lineno=180, col_offset=48), None, None), Load(), lineno=180, col_offset=43), lineno=180, col_offset=41), lineno=180, col_offset=8), Assign([Name('bias', Store(), lineno=181, col_offset=8)], Call(Name('adapt', Load(), lineno=181, col_offset=15), [Name('delta', Load(), lineno=181, col_offset=21), Compare(Name('extpos', Load(), lineno=181, col_offset=29), [Eq()], [Num(0, lineno=181, col_offset=39)], lineno=181, col_offset=29), Call(Name('len', Load(), lineno=181, col_offset=43), [Name('base', Load(), lineno=181, col_offset=47)], [], None, None, lineno=181, col_offset=43)], [], None, None, lineno=181, col_offset=15), lineno=181, col_offset=8), Assign([Name('extpos', Store(), lineno=182, col_offset=8)], Name('newpos', Load(), lineno=182, col_offset=17), lineno=182, col_offset=8)], [], lineno=166, col_offset=4), Return(Name('base', Load(), lineno=183, col_offset=11), lineno=183, col_offset=4)], [], lineno=160, col_offset=0), FunctionDef('punycode_decode', arguments([Name('text', Param(), lineno=185, col_offset=20), Name('errors', Param(), lineno=185, col_offset=26)], None, None, []), [Assign([Name('pos', Store(), lineno=186, col_offset=4)], Call(Attribute(Name('text', Load(), lineno=186, col_offset=10), 'rfind', Load(), lineno=186, col_offset=10), [Str('-', lineno=186, col_offset=21)], [], None, None, lineno=186, col_offset=10), lineno=186, col_offset=4), If(Compare(Name('pos', Load(), lineno=187, col_offset=7), [Eq()], [Num(-1, lineno=187, col_offset=15)], lineno=187, col_offset=7), [Assign([Name('base', Store(), lineno=188, col_offset=8)], Str('', lineno=188, col_offset=15), lineno=188, col_offset=8), Assign([Name('extended', Store(), lineno=189, col_offset=8)], Name('text', Load(), lineno=189, col_offset=19), lineno=189, col_offset=8)], [Assign([Name('base', Store(), lineno=191, col_offset=8)], Subscript(Name('text', Load(), lineno=191, col_offset=15), Slice(None, Name('pos', Load(), lineno=191, col_offset=21), None), Load(), lineno=191, col_offset=15), lineno=191, col_offset=8), Assign([Name('extended', Store(), lineno=192, col_offset=8)], Subscript(Name('text', Load(), lineno=192, col_offset=19), Slice(BinOp(Name('pos', Load(), lineno=192, col_offset=24), Add(), Num(1, lineno=192, col_offset=28), lineno=192, col_offset=24), None, None), Load(), lineno=192, col_offset=19), lineno=192, col_offset=8)], lineno=187, col_offset=4), Assign([Name('base', Store(), lineno=193, col_offset=4)], Call(Name('unicode', Load(), lineno=193, col_offset=11), [Name('base', Load(), lineno=193, col_offset=19), Str('ascii', lineno=193, col_offset=25), Name('errors', Load(), lineno=193, col_offset=34)], [], None, None, lineno=193, col_offset=11), lineno=193, col_offset=4), Assign([Name('extended', Store(), lineno=194, col_offset=4)], Call(Attribute(Name('extended', Load(), lineno=194, col_offset=15), 'upper', Load(), lineno=194, col_offset=15), [], [], None, None, lineno=194, col_offset=15), lineno=194, col_offset=4), Return(Call(Name('insertion_sort', Load(), lineno=195, col_offset=11), [Name('base', Load(), lineno=195, col_offset=26), Name('extended', Load(), lineno=195, col_offset=32), Name('errors', Load(), lineno=195, col_offset=42)], [], None, None, lineno=195, col_offset=11), lineno=195, col_offset=4)], [], lineno=185, col_offset=0), ClassDef('Codec', [Attribute(Name('codecs', Load(), lineno=199, col_offset=12), 'Codec', Load(), lineno=199, col_offset=12)], [FunctionDef('encode', arguments([Name('self', Param(), lineno=201, col_offset=15), Name('input', Param(), lineno=201, col_offset=20), Name('errors', Param(), lineno=201, col_offset=26)], None, None, [Str('strict', lineno=201, col_offset=33)]), [Assign([Name('res', Store(), lineno=202, col_offset=8)], Call(Name('punycode_encode', Load(), lineno=202, col_offset=14), [Name('input', Load(), lineno=202, col_offset=30)], [], None, None, lineno=202, col_offset=14), lineno=202, col_offset=8), Return(Tuple([Name('res', Load(), lineno=203, col_offset=15), Call(Name('len', Load(), lineno=203, col_offset=20), [Name('input', Load(), lineno=203, col_offset=24)], [], None, None, lineno=203, col_offset=20)], Load(), lineno=203, col_offset=15), lineno=203, col_offset=8)], [], lineno=201, col_offset=4), FunctionDef('decode', arguments([Name('self', Param(), lineno=205, col_offset=15), Name('input', Param(), lineno=205, col_offset=20), Name('errors', Param(), lineno=205, col_offset=26)], None, None, [Str('strict', lineno=205, col_offset=33)]), [If(Compare(Name('errors', Load(), lineno=206, col_offset=11), [NotIn()], [Tuple([Str('strict', lineno=206, col_offset=26), Str('replace', lineno=206, col_offset=36), Str('ignore', lineno=206, col_offset=47)], Load(), lineno=206, col_offset=26)], lineno=206, col_offset=11), [Raise(Name('UnicodeError', Load(), lineno=207, col_offset=18), BinOp(Str('Unsupported error handling ', lineno=207, col_offset=32), Add(), Name('errors', Load(), lineno=207, col_offset=62), lineno=207, col_offset=32), None, lineno=207, col_offset=12)], [], lineno=206, col_offset=8), Assign([Name('res', Store(), lineno=208, col_offset=8)], Call(Name('punycode_decode', Load(), lineno=208, col_offset=14), [Name('input', Load(), lineno=208, col_offset=30), Name('errors', Load(), lineno=208, col_offset=37)], [], None, None, lineno=208, col_offset=14), lineno=208, col_offset=8), Return(Tuple([Name('res', Load(), lineno=209, col_offset=15), Call(Name('len', Load(), lineno=209, col_offset=20), [Name('input', Load(), lineno=209, col_offset=24)], [], None, None, lineno=209, col_offset=20)], Load(), lineno=209, col_offset=15), lineno=209, col_offset=8)], [], lineno=205, col_offset=4)], [], lineno=199, col_offset=0), ClassDef('IncrementalEncoder', [Attribute(Name('codecs', Load(), lineno=211, col_offset=25), 'IncrementalEncoder', Load(), lineno=211, col_offset=25)], [FunctionDef('encode', arguments([Name('self', Param(), lineno=212, col_offset=15), Name('input', Param(), lineno=212, col_offset=21), Name('final', Param(), lineno=212, col_offset=28)], None, None, [Name('False', Load(), lineno=212, col_offset=34)]), [Return(Call(Name('punycode_encode', Load(), lineno=213, col_offset=15), [Name('input', Load(), lineno=213, col_offset=31)], [], None, None, lineno=213, col_offset=15), lineno=213, col_offset=8)], [], lineno=212, col_offset=4)], [], lineno=211, col_offset=0), ClassDef('IncrementalDecoder', [Attribute(Name('codecs', Load(), lineno=215, col_offset=25), 'IncrementalDecoder', Load(), lineno=215, col_offset=25)], [FunctionDef('decode', arguments([Name('self', Param(), lineno=216, col_offset=15), Name('input', Param(), lineno=216, col_offset=21), Name('final', Param(), lineno=216, col_offset=28)], None, None, [Name('False', Load(), lineno=216, col_offset=34)]), [If(Compare(Attribute(Name('self', Load(), lineno=217, col_offset=11), 'errors', Load(), lineno=217, col_offset=11), [NotIn()], [Tuple([Str('strict', lineno=217, col_offset=31), Str('replace', lineno=217, col_offset=41), Str('ignore', lineno=217, col_offset=52)], Load(), lineno=217, col_offset=31)], lineno=217, col_offset=11), [Raise(Name('UnicodeError', Load(), lineno=218, col_offset=18), BinOp(Str('Unsupported error handling ', lineno=218, col_offset=32), Add(), Attribute(Name('self', Load(), lineno=218, col_offset=62), 'errors', Load(), lineno=218, col_offset=62), lineno=218, col_offset=32), None, lineno=218, col_offset=12)], [], lineno=217, col_offset=8), Return(Call(Name('punycode_decode', Load(), lineno=219, col_offset=15), [Name('input', Load(), lineno=219, col_offset=31), Attribute(Name('self', Load(), lineno=219, col_offset=38), 'errors', Load(), lineno=219, col_offset=38)], [], None, None, lineno=219, col_offset=15), lineno=219, col_offset=8)], [], lineno=216, col_offset=4)], [], lineno=215, col_offset=0), ClassDef('StreamWriter', [Name('Codec', Load(), lineno=221, col_offset=19), Attribute(Name('codecs', Load(), lineno=221, col_offset=25), 'StreamWriter', Load(), lineno=221, col_offset=25)], [Pass( lineno=222, col_offset=4)], [], lineno=221, col_offset=0), ClassDef('StreamReader', [Name('Codec', Load(), lineno=224, col_offset=19), Attribute(Name('codecs', Load(), lineno=224, col_offset=25), 'StreamReader', Load(), lineno=224, col_offset=25)], [Pass( lineno=225, col_offset=4)], [], lineno=224, col_offset=0), FunctionDef('getregentry', arguments([], None, None, []), [Return(Call(Attribute(Name('codecs', Load(), lineno=230, col_offset=11), 'CodecInfo', Load(), lineno=230, col_offset=11), [], [keyword('name', Str('punycode', lineno=231, col_offset=13)), keyword('encode', Attribute(Call(Name('Codec', Load(), lineno=232, col_offset=15), [], [], None, None, lineno=232, col_offset=15), 'encode', Load(), lineno=232, col_offset=15)), keyword('decode', Attribute(Call(Name('Codec', Load(), lineno=233, col_offset=15), [], [], None, None, lineno=233, col_offset=15), 'decode', Load(), lineno=233, col_offset=15)), keyword('incrementalencoder', Name('IncrementalEncoder', Load(), lineno=234, col_offset=27)), keyword('incrementaldecoder', Name('IncrementalDecoder', Load(), lineno=235, col_offset=27)), keyword('streamwriter', Name('StreamWriter', Load(), lineno=236, col_offset=21)), keyword('streamreader', Name('StreamReader', Load(), lineno=237, col_offset=21))], None, None, lineno=230, col_offset=11), lineno=230, col_offset=4)], [], lineno=229, col_offset=0)])
