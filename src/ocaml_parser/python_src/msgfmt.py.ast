Module([Expr(Str('Generate binary message catalog from textual translation description.\n\nThis program converts a textual Uniforum-style message catalog (.po file) into\na binary GNU catalog (.mo file).  This is essentially the same function as the\nGNU msgfmt program, however, it is a simpler implementation.\n\nUsage: msgfmt.py [OPTIONS] filename.po\n\nOptions:\n    -o file\n    --output-file=file\n        Specify the output file to write to.  If omitted, output will go to a\n        file named filename.mo (based off the input file name).\n\n    -h\n    --help\n        Print this message and exit.\n\n    -V\n    --version\n        Display version information and exit.\n', lineno=26, col_offset=-1), lineno=26, col_offset=-1), Import([alias('sys', None)], lineno=28, col_offset=0), Import([alias('os', None)], lineno=29, col_offset=0), Import([alias('getopt', None)], lineno=30, col_offset=0), Import([alias('struct', None)], lineno=31, col_offset=0), Import([alias('array', None)], lineno=32, col_offset=0), Assign([Name('__version__', Store(), lineno=34, col_offset=0)], Str('1.1', lineno=34, col_offset=14), lineno=34, col_offset=0), Assign([Name('MESSAGES', Store(), lineno=36, col_offset=0)], Dict([], [], lineno=36, col_offset=11), lineno=36, col_offset=0), FunctionDef('usage', arguments([Name('code', Param(), lineno=40, col_offset=10), Name('msg', Param(), lineno=40, col_offset=16)], None, None, [Str('', lineno=40, col_offset=20)]), [Print(Attribute(Name('sys', Load(), lineno=41, col_offset=13), 'stderr', Load(), lineno=41, col_offset=13), [Name('__doc__', Load(), lineno=41, col_offset=25)], True, lineno=41, col_offset=4), If(Name('msg', Load(), lineno=42, col_offset=7), [Print(Attribute(Name('sys', Load(), lineno=43, col_offset=17), 'stderr', Load(), lineno=43, col_offset=17), [Name('msg', Load(), lineno=43, col_offset=29)], True, lineno=43, col_offset=8)], [], lineno=42, col_offset=4), Expr(Call(Attribute(Name('sys', Load(), lineno=44, col_offset=4), 'exit', Load(), lineno=44, col_offset=4), [Name('code', Load(), lineno=44, col_offset=13)], [], None, None, lineno=44, col_offset=4), lineno=44, col_offset=4)], [], lineno=40, col_offset=0), FunctionDef('add', arguments([Name('id', Param(), lineno=48, col_offset=8), Name('str', Param(), lineno=48, col_offset=12), Name('fuzzy', Param(), lineno=48, col_offset=17)], None, None, []), [Expr(Str('Add a non-fuzzy translation to the dictionary.', lineno=49, col_offset=4), lineno=49, col_offset=4), Global(['MESSAGES'], lineno=50, col_offset=4), If(BoolOp(And(), [UnaryOp(Not(), Name('fuzzy', Load(), lineno=51, col_offset=11), lineno=51, col_offset=7), Name('str', Load(), lineno=51, col_offset=21)], lineno=51, col_offset=7), [Assign([Subscript(Name('MESSAGES', Load(), lineno=52, col_offset=8), Index(Name('id', Load(), lineno=52, col_offset=17)), Store(), lineno=52, col_offset=8)], Name('str', Load(), lineno=52, col_offset=23), lineno=52, col_offset=8)], [], lineno=51, col_offset=4)], [], lineno=48, col_offset=0), FunctionDef('generate', arguments([], None, None, []), [Expr(Str('Return the generated output.', lineno=57, col_offset=4), lineno=57, col_offset=4), Global(['MESSAGES'], lineno=58, col_offset=4), Assign([Name('keys', Store(), lineno=59, col_offset=4)], Call(Attribute(Name('MESSAGES', Load(), lineno=59, col_offset=11), 'keys', Load(), lineno=59, col_offset=11), [], [], None, None, lineno=59, col_offset=11), lineno=59, col_offset=4), Expr(Call(Attribute(Name('keys', Load(), lineno=61, col_offset=4), 'sort', Load(), lineno=61, col_offset=4), [], [], None, None, lineno=61, col_offset=4), lineno=61, col_offset=4), Assign([Name('offsets', Store(), lineno=62, col_offset=4)], List([], Load(), lineno=62, col_offset=14), lineno=62, col_offset=4), Assign([Name('ids', Store(), lineno=63, col_offset=4), Name('strs', Store(), lineno=63, col_offset=10)], Str('', lineno=63, col_offset=17), lineno=63, col_offset=4), For(Name('id', Store(), lineno=64, col_offset=8), Name('keys', Load(), lineno=64, col_offset=14), [Expr(Call(Attribute(Name('offsets', Load(), lineno=67, col_offset=8), 'append', Load(), lineno=67, col_offset=8), [Tuple([Call(Name('len', Load(), lineno=67, col_offset=24), [Name('ids', Load(), lineno=67, col_offset=28)], [], None, None, lineno=67, col_offset=24), Call(Name('len', Load(), lineno=67, col_offset=34), [Name('id', Load(), lineno=67, col_offset=38)], [], None, None, lineno=67, col_offset=34), Call(Name('len', Load(), lineno=67, col_offset=43), [Name('strs', Load(), lineno=67, col_offset=47)], [], None, None, lineno=67, col_offset=43), Call(Name('len', Load(), lineno=67, col_offset=54), [Subscript(Name('MESSAGES', Load(), lineno=67, col_offset=58), Index(Name('id', Load(), lineno=67, col_offset=67)), Load(), lineno=67, col_offset=58)], [], None, None, lineno=67, col_offset=54)], Load(), lineno=67, col_offset=24)], [], None, None, lineno=67, col_offset=8), lineno=67, col_offset=8), AugAssign(Name('ids', Store(), lineno=68, col_offset=8), Add(), BinOp(Name('id', Load(), lineno=68, col_offset=15), Add(), Str('\x00', lineno=68, col_offset=20), lineno=68, col_offset=15), lineno=68, col_offset=8), AugAssign(Name('strs', Store(), lineno=69, col_offset=8), Add(), BinOp(Subscript(Name('MESSAGES', Load(), lineno=69, col_offset=16), Index(Name('id', Load(), lineno=69, col_offset=25)), Load(), lineno=69, col_offset=16), Add(), Str('\x00', lineno=69, col_offset=31), lineno=69, col_offset=16), lineno=69, col_offset=8)], [], lineno=64, col_offset=4), Assign([Name('output', Store(), lineno=70, col_offset=4)], Str('', lineno=70, col_offset=13), lineno=70, col_offset=4), Assign([Name('keystart', Store(), lineno=74, col_offset=4)], BinOp(BinOp(Num(7, lineno=74, col_offset=15), Mult(), Num(4, lineno=74, col_offset=17), lineno=74, col_offset=15), Add(), BinOp(Num(16, lineno=74, col_offset=19), Mult(), Call(Name('len', Load(), lineno=74, col_offset=22), [Name('keys', Load(), lineno=74, col_offset=26)], [], None, None, lineno=74, col_offset=22), lineno=74, col_offset=19), lineno=74, col_offset=15), lineno=74, col_offset=4), Assign([Name('valuestart', Store(), lineno=76, col_offset=4)], BinOp(Name('keystart', Load(), lineno=76, col_offset=17), Add(), Call(Name('len', Load(), lineno=76, col_offset=28), [Name('ids', Load(), lineno=76, col_offset=32)], [], None, None, lineno=76, col_offset=28), lineno=76, col_offset=17), lineno=76, col_offset=4), Assign([Name('koffsets', Store(), lineno=77, col_offset=4)], List([], Load(), lineno=77, col_offset=15), lineno=77, col_offset=4), Assign([Name('voffsets', Store(), lineno=78, col_offset=4)], List([], Load(), lineno=78, col_offset=15), lineno=78, col_offset=4), For(Tuple([Name('o1', Store(), lineno=81, col_offset=8), Name('l1', Store(), lineno=81, col_offset=12), Name('o2', Store(), lineno=81, col_offset=16), Name('l2', Store(), lineno=81, col_offset=20)], Store(), lineno=81, col_offset=8), Name('offsets', Load(), lineno=81, col_offset=26), [AugAssign(Name('koffsets', Store(), lineno=82, col_offset=8), Add(), List([Name('l1', Load(), lineno=82, col_offset=21), BinOp(Name('o1', Load(), lineno=82, col_offset=25), Add(), Name('keystart', Load(), lineno=82, col_offset=28), lineno=82, col_offset=25)], Load(), lineno=82, col_offset=20), lineno=82, col_offset=8), AugAssign(Name('voffsets', Store(), lineno=83, col_offset=8), Add(), List([Name('l2', Load(), lineno=83, col_offset=21), BinOp(Name('o2', Load(), lineno=83, col_offset=25), Add(), Name('valuestart', Load(), lineno=83, col_offset=28), lineno=83, col_offset=25)], Load(), lineno=83, col_offset=20), lineno=83, col_offset=8)], [], lineno=81, col_offset=4), Assign([Name('offsets', Store(), lineno=84, col_offset=4)], BinOp(Name('koffsets', Load(), lineno=84, col_offset=14), Add(), Name('voffsets', Load(), lineno=84, col_offset=25), lineno=84, col_offset=14), lineno=84, col_offset=4), Assign([Name('output', Store(), lineno=85, col_offset=4)], Call(Attribute(Name('struct', Load(), lineno=85, col_offset=13), 'pack', Load(), lineno=85, col_offset=13), [Str('Iiiiiii', lineno=85, col_offset=25), Num(2500072158L, lineno=86, col_offset=25), Num(0, lineno=87, col_offset=25), Call(Name('len', Load(), lineno=88, col_offset=25), [Name('keys', Load(), lineno=88, col_offset=29)], [], None, None, lineno=88, col_offset=25), BinOp(Num(7, lineno=89, col_offset=25), Mult(), Num(4, lineno=89, col_offset=27), lineno=89, col_offset=25), BinOp(BinOp(Num(7, lineno=90, col_offset=25), Mult(), Num(4, lineno=90, col_offset=27), lineno=90, col_offset=25), Add(), BinOp(Call(Name('len', Load(), lineno=90, col_offset=29), [Name('keys', Load(), lineno=90, col_offset=33)], [], None, None, lineno=90, col_offset=29), Mult(), Num(8, lineno=90, col_offset=39), lineno=90, col_offset=29), lineno=90, col_offset=25), Num(0, lineno=91, col_offset=25), Num(0, lineno=91, col_offset=28)], [], None, None, lineno=85, col_offset=13), lineno=85, col_offset=4), AugAssign(Name('output', Store(), lineno=92, col_offset=4), Add(), Call(Attribute(Call(Attribute(Name('array', Load(), lineno=92, col_offset=14), 'array', Load(), lineno=92, col_offset=14), [Str('i', lineno=92, col_offset=26), Name('offsets', Load(), lineno=92, col_offset=31)], [], None, None, lineno=92, col_offset=14), 'tostring', Load(), lineno=92, col_offset=14), [], [], None, None, lineno=92, col_offset=14), lineno=92, col_offset=4), AugAssign(Name('output', Store(), lineno=93, col_offset=4), Add(), Name('ids', Load(), lineno=93, col_offset=14), lineno=93, col_offset=4), AugAssign(Name('output', Store(), lineno=94, col_offset=4), Add(), Name('strs', Load(), lineno=94, col_offset=14), lineno=94, col_offset=4), Return(Name('output', Load(), lineno=95, col_offset=11), lineno=95, col_offset=4)], [], lineno=56, col_offset=0), FunctionDef('make', arguments([Name('filename', Param(), lineno=99, col_offset=9), Name('outfile', Param(), lineno=99, col_offset=19)], None, None, []), [Assign([Name('ID', Store(), lineno=100, col_offset=4)], Num(1, lineno=100, col_offset=9), lineno=100, col_offset=4), Assign([Name('STR', Store(), lineno=101, col_offset=4)], Num(2, lineno=101, col_offset=10), lineno=101, col_offset=4), If(Call(Attribute(Name('filename', Load(), lineno=104, col_offset=7), 'endswith', Load(), lineno=104, col_offset=7), [Str('.po', lineno=104, col_offset=25)], [], None, None, lineno=104, col_offset=7), [Assign([Name('infile', Store(), lineno=105, col_offset=8)], Name('filename', Load(), lineno=105, col_offset=17), lineno=105, col_offset=8)], [Assign([Name('infile', Store(), lineno=107, col_offset=8)], BinOp(Name('filename', Load(), lineno=107, col_offset=17), Add(), Str('.po', lineno=107, col_offset=28), lineno=107, col_offset=17), lineno=107, col_offset=8)], lineno=104, col_offset=4), If(Compare(Name('outfile', Load(), lineno=108, col_offset=7), [Is()], [Name('None', Load(), lineno=108, col_offset=18)], lineno=108, col_offset=7), [Assign([Name('outfile', Store(), lineno=109, col_offset=8)], BinOp(Subscript(Call(Attribute(Attribute(Name('os', Load(), lineno=109, col_offset=18), 'path', Load(), lineno=109, col_offset=18), 'splitext', Load(), lineno=109, col_offset=18), [Name('infile', Load(), lineno=109, col_offset=35)], [], None, None, lineno=109, col_offset=18), Index(Num(0, lineno=109, col_offset=43)), Load(), lineno=109, col_offset=18), Add(), Str('.mo', lineno=109, col_offset=48), lineno=109, col_offset=18), lineno=109, col_offset=8)], [], lineno=108, col_offset=4), TryExcept([Assign([Name('lines', Store(), lineno=112, col_offset=8)], Call(Attribute(Call(Name('open', Load(), lineno=112, col_offset=16), [Name('infile', Load(), lineno=112, col_offset=21)], [], None, None, lineno=112, col_offset=16), 'readlines', Load(), lineno=112, col_offset=16), [], [], None, None, lineno=112, col_offset=16), lineno=112, col_offset=8)], [ExceptHandler(Name('IOError', Load(), lineno=113, col_offset=11), Name('msg', Store(), lineno=113, col_offset=20), [Print(Attribute(Name('sys', Load(), lineno=114, col_offset=17), 'stderr', Load(), lineno=114, col_offset=17), [Name('msg', Load(), lineno=114, col_offset=29)], True, lineno=114, col_offset=8), Expr(Call(Attribute(Name('sys', Load(), lineno=115, col_offset=8), 'exit', Load(), lineno=115, col_offset=8), [Num(1, lineno=115, col_offset=17)], [], None, None, lineno=115, col_offset=8), lineno=115, col_offset=8)], lineno=113, col_offset=4)], [], lineno=111, col_offset=4), Assign([Name('section', Store(), lineno=117, col_offset=4)], Name('None', Load(), lineno=117, col_offset=14), lineno=117, col_offset=4), Assign([Name('fuzzy', Store(), lineno=118, col_offset=4)], Num(0, lineno=118, col_offset=12), lineno=118, col_offset=4), Assign([Name('lno', Store(), lineno=121, col_offset=4)], Num(0, lineno=121, col_offset=10), lineno=121, col_offset=4), For(Name('l', Store(), lineno=122, col_offset=8), Name('lines', Load(), lineno=122, col_offset=13), [AugAssign(Name('lno', Store(), lineno=123, col_offset=8), Add(), Num(1, lineno=123, col_offset=15), lineno=123, col_offset=8), If(BoolOp(And(), [Compare(Subscript(Name('l', Load(), lineno=125, col_offset=11), Index(Num(0, lineno=125, col_offset=13)), Load(), lineno=125, col_offset=11), [Eq()], [Str('#', lineno=125, col_offset=19)], lineno=125, col_offset=11), Compare(Name('section', Load(), lineno=125, col_offset=27), [Eq()], [Name('STR', Load(), lineno=125, col_offset=38)], lineno=125, col_offset=27)], lineno=125, col_offset=11), [Expr(Call(Name('add', Load(), lineno=126, col_offset=12), [Name('msgid', Load(), lineno=126, col_offset=16), Name('msgstr', Load(), lineno=126, col_offset=23), Name('fuzzy', Load(), lineno=126, col_offset=31)], [], None, None, lineno=126, col_offset=12), lineno=126, col_offset=12), Assign([Name('section', Store(), lineno=127, col_offset=12)], Name('None', Load(), lineno=127, col_offset=22), lineno=127, col_offset=12), Assign([Name('fuzzy', Store(), lineno=128, col_offset=12)], Num(0, lineno=128, col_offset=20), lineno=128, col_offset=12)], [], lineno=125, col_offset=8), If(BoolOp(And(), [Compare(Subscript(Name('l', Load(), lineno=130, col_offset=11), Slice(None, Num(2, lineno=130, col_offset=14), None), Load(), lineno=130, col_offset=11), [Eq()], [Str('#,', lineno=130, col_offset=20)], lineno=130, col_offset=11), Compare(Str('fuzzy', lineno=130, col_offset=29), [In()], [Name('l', Load(), lineno=130, col_offset=40)], lineno=130, col_offset=29)], lineno=130, col_offset=11), [Assign([Name('fuzzy', Store(), lineno=131, col_offset=12)], Num(1, lineno=131, col_offset=20), lineno=131, col_offset=12)], [], lineno=130, col_offset=8), If(Compare(Subscript(Name('l', Load(), lineno=133, col_offset=11), Index(Num(0, lineno=133, col_offset=13)), Load(), lineno=133, col_offset=11), [Eq()], [Str('#', lineno=133, col_offset=19)], lineno=133, col_offset=11), [Continue( lineno=134, col_offset=12)], [], lineno=133, col_offset=8), If(BoolOp(And(), [Call(Attribute(Name('l', Load(), lineno=136, col_offset=11), 'startswith', Load(), lineno=136, col_offset=11), [Str('msgid', lineno=136, col_offset=24)], [], None, None, lineno=136, col_offset=11), UnaryOp(Not(), Call(Attribute(Name('l', Load(), lineno=136, col_offset=41), 'startswith', Load(), lineno=136, col_offset=41), [Str('msgid_plural', lineno=136, col_offset=54)], [], None, None, lineno=136, col_offset=41), lineno=136, col_offset=37)], lineno=136, col_offset=11), [If(Compare(Name('section', Load(), lineno=137, col_offset=15), [Eq()], [Name('STR', Load(), lineno=137, col_offset=26)], lineno=137, col_offset=15), [Expr(Call(Name('add', Load(), lineno=138, col_offset=16), [Name('msgid', Load(), lineno=138, col_offset=20), Name('msgstr', Load(), lineno=138, col_offset=27), Name('fuzzy', Load(), lineno=138, col_offset=35)], [], None, None, lineno=138, col_offset=16), lineno=138, col_offset=16)], [], lineno=137, col_offset=12), Assign([Name('section', Store(), lineno=139, col_offset=12)], Name('ID', Load(), lineno=139, col_offset=22), lineno=139, col_offset=12), Assign([Name('l', Store(), lineno=140, col_offset=12)], Subscript(Name('l', Load(), lineno=140, col_offset=16), Slice(Num(5, lineno=140, col_offset=18), None, None), Load(), lineno=140, col_offset=16), lineno=140, col_offset=12), Assign([Name('msgid', Store(), lineno=141, col_offset=12), Name('msgstr', Store(), lineno=141, col_offset=20)], Str('', lineno=141, col_offset=29), lineno=141, col_offset=12), Assign([Name('is_plural', Store(), lineno=142, col_offset=12)], Name('False', Load(), lineno=142, col_offset=24), lineno=142, col_offset=12)], [If(Call(Attribute(Name('l', Load(), lineno=144, col_offset=13), 'startswith', Load(), lineno=144, col_offset=13), [Str('msgid_plural', lineno=144, col_offset=26)], [], None, None, lineno=144, col_offset=13), [If(Compare(Name('section', Load(), lineno=145, col_offset=15), [NotEq()], [Name('ID', Load(), lineno=145, col_offset=26)], lineno=145, col_offset=15), [Print(Attribute(Name('sys', Load(), lineno=146, col_offset=25), 'stderr', Load(), lineno=146, col_offset=25), [BinOp(Str('msgid_plural not preceeded by msgid on %s:%d', lineno=146, col_offset=37), Mod(), Tuple([Name('infile', Load(), lineno=147, col_offset=21), Name('lno', Load(), lineno=147, col_offset=29)], Load(), lineno=147, col_offset=21), lineno=146, col_offset=37)], True, lineno=146, col_offset=16), Expr(Call(Attribute(Name('sys', Load(), lineno=148, col_offset=16), 'exit', Load(), lineno=148, col_offset=16), [Num(1, lineno=148, col_offset=25)], [], None, None, lineno=148, col_offset=16), lineno=148, col_offset=16)], [], lineno=145, col_offset=12), Assign([Name('l', Store(), lineno=149, col_offset=12)], Subscript(Name('l', Load(), lineno=149, col_offset=16), Slice(Num(12, lineno=149, col_offset=18), None, None), Load(), lineno=149, col_offset=16), lineno=149, col_offset=12), AugAssign(Name('msgid', Store(), lineno=150, col_offset=12), Add(), Str('\x00', lineno=150, col_offset=21), lineno=150, col_offset=12), Assign([Name('is_plural', Store(), lineno=151, col_offset=12)], Name('True', Load(), lineno=151, col_offset=24), lineno=151, col_offset=12)], [If(Call(Attribute(Name('l', Load(), lineno=153, col_offset=13), 'startswith', Load(), lineno=153, col_offset=13), [Str('msgstr', lineno=153, col_offset=26)], [], None, None, lineno=153, col_offset=13), [Assign([Name('section', Store(), lineno=154, col_offset=12)], Name('STR', Load(), lineno=154, col_offset=22), lineno=154, col_offset=12), If(Call(Attribute(Name('l', Load(), lineno=155, col_offset=15), 'startswith', Load(), lineno=155, col_offset=15), [Str('msgstr[', lineno=155, col_offset=28)], [], None, None, lineno=155, col_offset=15), [If(UnaryOp(Not(), Name('is_plural', Load(), lineno=156, col_offset=23), lineno=156, col_offset=19), [Print(Attribute(Name('sys', Load(), lineno=157, col_offset=29), 'stderr', Load(), lineno=157, col_offset=29), [BinOp(Str('plural without msgid_plural on %s:%d', lineno=157, col_offset=41), Mod(), Tuple([Name('infile', Load(), lineno=158, col_offset=25), Name('lno', Load(), lineno=158, col_offset=33)], Load(), lineno=158, col_offset=25), lineno=157, col_offset=41)], True, lineno=157, col_offset=20), Expr(Call(Attribute(Name('sys', Load(), lineno=159, col_offset=20), 'exit', Load(), lineno=159, col_offset=20), [Num(1, lineno=159, col_offset=29)], [], None, None, lineno=159, col_offset=20), lineno=159, col_offset=20)], [], lineno=156, col_offset=16), Assign([Name('l', Store(), lineno=160, col_offset=16)], Subscript(Call(Attribute(Name('l', Load(), lineno=160, col_offset=20), 'split', Load(), lineno=160, col_offset=20), [Str(']', lineno=160, col_offset=28), Num(1, lineno=160, col_offset=33)], [], None, None, lineno=160, col_offset=20), Index(Num(1, lineno=160, col_offset=36)), Load(), lineno=160, col_offset=20), lineno=160, col_offset=16), If(Name('msgstr', Load(), lineno=161, col_offset=19), [AugAssign(Name('msgstr', Store(), lineno=162, col_offset=20), Add(), Str('\x00', lineno=162, col_offset=30), lineno=162, col_offset=20)], [], lineno=161, col_offset=16)], [If(Name('is_plural', Load(), lineno=164, col_offset=19), [Print(Attribute(Name('sys', Load(), lineno=165, col_offset=29), 'stderr', Load(), lineno=165, col_offset=29), [BinOp(Str('indexed msgstr required for plural on  %s:%d', lineno=165, col_offset=41), Mod(), Tuple([Name('infile', Load(), lineno=166, col_offset=25), Name('lno', Load(), lineno=166, col_offset=33)], Load(), lineno=166, col_offset=25), lineno=165, col_offset=41)], True, lineno=165, col_offset=20), Expr(Call(Attribute(Name('sys', Load(), lineno=167, col_offset=20), 'exit', Load(), lineno=167, col_offset=20), [Num(1, lineno=167, col_offset=29)], [], None, None, lineno=167, col_offset=20), lineno=167, col_offset=20)], [], lineno=164, col_offset=16), Assign([Name('l', Store(), lineno=168, col_offset=16)], Subscript(Name('l', Load(), lineno=168, col_offset=20), Slice(Num(6, lineno=168, col_offset=22), None, None), Load(), lineno=168, col_offset=20), lineno=168, col_offset=16)], lineno=155, col_offset=12)], [], lineno=153, col_offset=13)], lineno=144, col_offset=13)], lineno=136, col_offset=8), Assign([Name('l', Store(), lineno=170, col_offset=8)], Call(Attribute(Name('l', Load(), lineno=170, col_offset=12), 'strip', Load(), lineno=170, col_offset=12), [], [], None, None, lineno=170, col_offset=12), lineno=170, col_offset=8), If(UnaryOp(Not(), Name('l', Load(), lineno=171, col_offset=15), lineno=171, col_offset=11), [Continue( lineno=172, col_offset=12)], [], lineno=171, col_offset=8), Assign([Name('l', Store(), lineno=174, col_offset=8)], Call(Name('eval', Load(), lineno=174, col_offset=12), [Name('l', Load(), lineno=174, col_offset=17)], [], None, None, lineno=174, col_offset=12), lineno=174, col_offset=8), If(Compare(Name('section', Load(), lineno=175, col_offset=11), [Eq()], [Name('ID', Load(), lineno=175, col_offset=22)], lineno=175, col_offset=11), [AugAssign(Name('msgid', Store(), lineno=176, col_offset=12), Add(), Name('l', Load(), lineno=176, col_offset=21), lineno=176, col_offset=12)], [If(Compare(Name('section', Load(), lineno=177, col_offset=13), [Eq()], [Name('STR', Load(), lineno=177, col_offset=24)], lineno=177, col_offset=13), [AugAssign(Name('msgstr', Store(), lineno=178, col_offset=12), Add(), Name('l', Load(), lineno=178, col_offset=22), lineno=178, col_offset=12)], [Print(Attribute(Name('sys', Load(), lineno=180, col_offset=21), 'stderr', Load(), lineno=180, col_offset=21), [BinOp(Str('Syntax error on %s:%d', lineno=180, col_offset=33), Mod(), Tuple([Name('infile', Load(), lineno=180, col_offset=60), Name('lno', Load(), lineno=180, col_offset=68)], Load(), lineno=180, col_offset=60), lineno=180, col_offset=33), Str('before:', lineno=181, col_offset=18)], True, lineno=180, col_offset=12), Print(Attribute(Name('sys', Load(), lineno=182, col_offset=21), 'stderr', Load(), lineno=182, col_offset=21), [Name('l', Load(), lineno=182, col_offset=33)], True, lineno=182, col_offset=12), Expr(Call(Attribute(Name('sys', Load(), lineno=183, col_offset=12), 'exit', Load(), lineno=183, col_offset=12), [Num(1, lineno=183, col_offset=21)], [], None, None, lineno=183, col_offset=12), lineno=183, col_offset=12)], lineno=177, col_offset=13)], lineno=175, col_offset=8)], [], lineno=122, col_offset=4), If(Compare(Name('section', Load(), lineno=185, col_offset=7), [Eq()], [Name('STR', Load(), lineno=185, col_offset=18)], lineno=185, col_offset=7), [Expr(Call(Name('add', Load(), lineno=186, col_offset=8), [Name('msgid', Load(), lineno=186, col_offset=12), Name('msgstr', Load(), lineno=186, col_offset=19), Name('fuzzy', Load(), lineno=186, col_offset=27)], [], None, None, lineno=186, col_offset=8), lineno=186, col_offset=8)], [], lineno=185, col_offset=4), Assign([Name('output', Store(), lineno=189, col_offset=4)], Call(Name('generate', Load(), lineno=189, col_offset=13), [], [], None, None, lineno=189, col_offset=13), lineno=189, col_offset=4), TryExcept([Expr(Call(Attribute(Call(Name('open', Load(), lineno=192, col_offset=8), [Name('outfile', Load(), lineno=192, col_offset=13), Str('wb', lineno=192, col_offset=21)], [], None, None, lineno=192, col_offset=8), 'write', Load(), lineno=192, col_offset=8), [Name('output', Load(), lineno=192, col_offset=33)], [], None, None, lineno=192, col_offset=8), lineno=192, col_offset=8)], [ExceptHandler(Name('IOError', Load(), lineno=193, col_offset=11), Name('msg', Store(), lineno=193, col_offset=19), [Print(Attribute(Name('sys', Load(), lineno=194, col_offset=17), 'stderr', Load(), lineno=194, col_offset=17), [Name('msg', Load(), lineno=194, col_offset=29)], True, lineno=194, col_offset=8)], lineno=193, col_offset=4)], [], lineno=191, col_offset=4)], [], lineno=99, col_offset=0), FunctionDef('main', arguments([], None, None, []), [TryExcept([Assign([Tuple([Name('opts', Store(), lineno=200, col_offset=8), Name('args', Store(), lineno=200, col_offset=14)], Store(), lineno=200, col_offset=8)], Call(Attribute(Name('getopt', Load(), lineno=200, col_offset=21), 'getopt', Load(), lineno=200, col_offset=21), [Subscript(Attribute(Name('sys', Load(), lineno=200, col_offset=35), 'argv', Load(), lineno=200, col_offset=35), Slice(Num(1, lineno=200, col_offset=44), None, None), Load(), lineno=200, col_offset=35), Str('hVo:', lineno=200, col_offset=49), List([Str('help', lineno=201, col_offset=36), Str('version', lineno=201, col_offset=44), Str('output-file=', lineno=201, col_offset=55)], Load(), lineno=201, col_offset=35)], [], None, None, lineno=200, col_offset=21), lineno=200, col_offset=8)], [ExceptHandler(Attribute(Name('getopt', Load(), lineno=202, col_offset=11), 'error', Load(), lineno=202, col_offset=11), Name('msg', Store(), lineno=202, col_offset=25), [Expr(Call(Name('usage', Load(), lineno=203, col_offset=8), [Num(1, lineno=203, col_offset=14), Name('msg', Load(), lineno=203, col_offset=17)], [], None, None, lineno=203, col_offset=8), lineno=203, col_offset=8)], lineno=202, col_offset=4)], [], lineno=199, col_offset=4), Assign([Name('outfile', Store(), lineno=205, col_offset=4)], Name('None', Load(), lineno=205, col_offset=14), lineno=205, col_offset=4), For(Tuple([Name('opt', Store(), lineno=207, col_offset=8), Name('arg', Store(), lineno=207, col_offset=13)], Store(), lineno=207, col_offset=8), Name('opts', Load(), lineno=207, col_offset=20), [If(Compare(Name('opt', Load(), lineno=208, col_offset=11), [In()], [Tuple([Str('-h', lineno=208, col_offset=19), Str('--help', lineno=208, col_offset=25)], Load(), lineno=208, col_offset=19)], lineno=208, col_offset=11), [Expr(Call(Name('usage', Load(), lineno=209, col_offset=12), [Num(0, lineno=209, col_offset=18)], [], None, None, lineno=209, col_offset=12), lineno=209, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=210, col_offset=13), [In()], [Tuple([Str('-V', lineno=210, col_offset=21), Str('--version', lineno=210, col_offset=27)], Load(), lineno=210, col_offset=21)], lineno=210, col_offset=13), [Print(Attribute(Name('sys', Load(), lineno=211, col_offset=21), 'stderr', Load(), lineno=211, col_offset=21), [Str('msgfmt.py', lineno=211, col_offset=33), Name('__version__', Load(), lineno=211, col_offset=46)], True, lineno=211, col_offset=12), Expr(Call(Attribute(Name('sys', Load(), lineno=212, col_offset=12), 'exit', Load(), lineno=212, col_offset=12), [Num(0, lineno=212, col_offset=21)], [], None, None, lineno=212, col_offset=12), lineno=212, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=213, col_offset=13), [In()], [Tuple([Str('-o', lineno=213, col_offset=21), Str('--output-file', lineno=213, col_offset=27)], Load(), lineno=213, col_offset=21)], lineno=213, col_offset=13), [Assign([Name('outfile', Store(), lineno=214, col_offset=12)], Name('arg', Load(), lineno=214, col_offset=22), lineno=214, col_offset=12)], [], lineno=213, col_offset=13)], lineno=210, col_offset=13)], lineno=208, col_offset=8)], [], lineno=207, col_offset=4), If(UnaryOp(Not(), Name('args', Load(), lineno=216, col_offset=11), lineno=216, col_offset=7), [Print(Attribute(Name('sys', Load(), lineno=217, col_offset=17), 'stderr', Load(), lineno=217, col_offset=17), [Str('No input file given', lineno=217, col_offset=29)], True, lineno=217, col_offset=8), Print(Attribute(Name('sys', Load(), lineno=218, col_offset=17), 'stderr', Load(), lineno=218, col_offset=17), [Str("Try `msgfmt --help' for more information.", lineno=218, col_offset=29)], True, lineno=218, col_offset=8), Return(None, lineno=219, col_offset=8)], [], lineno=216, col_offset=4), For(Name('filename', Store(), lineno=221, col_offset=8), Name('args', Load(), lineno=221, col_offset=20), [Expr(Call(Name('make', Load(), lineno=222, col_offset=8), [Name('filename', Load(), lineno=222, col_offset=13), Name('outfile', Load(), lineno=222, col_offset=23)], [], None, None, lineno=222, col_offset=8), lineno=222, col_offset=8)], [], lineno=221, col_offset=4)], [], lineno=198, col_offset=0), If(Compare(Name('__name__', Load(), lineno=225, col_offset=3), [Eq()], [Str('__main__', lineno=225, col_offset=15)], lineno=225, col_offset=3), [Expr(Call(Name('main', Load(), lineno=226, col_offset=4), [], [], None, None, lineno=226, col_offset=4), lineno=226, col_offset=4)], [], lineno=225, col_offset=0)])
