Module([Expr(Str("distutils.command.build_ext\n\nImplements the Distutils 'build_ext' command, for building extension\nmodules (currently limited to C extensions, should accommodate C++\nextensions ASAP).", lineno=5, col_offset=-1), lineno=5, col_offset=-1), Assign([Name('__revision__', Store(), lineno=9, col_offset=0)], Str('$Id: build_ext.py 84683 2010-09-10 20:03:17Z antoine.pitrou $', lineno=9, col_offset=15), lineno=9, col_offset=0), Import([alias('sys', None), alias('os', None), alias('string', None), alias('re', None)], lineno=11, col_offset=0), ImportFrom('types', [alias('*', None)], 0, lineno=12, col_offset=0), ImportFrom('site', [alias('USER_BASE', None), alias('USER_SITE', None)], 0, lineno=13, col_offset=0), ImportFrom('distutils.core', [alias('Command', None)], 0, lineno=14, col_offset=0), ImportFrom('distutils.errors', [alias('*', None)], 0, lineno=15, col_offset=0), ImportFrom('distutils.sysconfig', [alias('customize_compiler', None), alias('get_python_version', None)], 0, lineno=16, col_offset=0), ImportFrom('distutils.dep_util', [alias('newer_group', None)], 0, lineno=17, col_offset=0), ImportFrom('distutils.extension', [alias('Extension', None)], 0, lineno=18, col_offset=0), ImportFrom('distutils.util', [alias('get_platform', None)], 0, lineno=19, col_offset=0), ImportFrom('distutils', [alias('log', None)], 0, lineno=20, col_offset=0), If(Compare(Attribute(Name('os', Load(), lineno=22, col_offset=3), 'name', Load(), lineno=22, col_offset=3), [Eq()], [Str('nt', lineno=22, col_offset=14)], lineno=22, col_offset=3), [ImportFrom('distutils.msvccompiler', [alias('get_build_version', None)], 0, lineno=23, col_offset=4), Assign([Name('MSVC_VERSION', Store(), lineno=24, col_offset=4)], Call(Name('int', Load(), lineno=24, col_offset=19), [Call(Name('get_build_version', Load(), lineno=24, col_offset=23), [], [], None, None, lineno=24, col_offset=23)], [], None, None, lineno=24, col_offset=19), lineno=24, col_offset=4)], [], lineno=22, col_offset=0), Assign([Name('extension_name_re', Store(), lineno=28, col_offset=0)], Call(Attribute(Name('re', Load(), lineno=28, col_offset=20), 'compile', Load(), lineno=28, col_offset=20), [Str('^[a-zA-Z_][a-zA-Z_0-9]*(\\.[a-zA-Z_][a-zA-Z_0-9]*)*$', lineno=29, col_offset=5)], [], None, None, lineno=28, col_offset=20), lineno=28, col_offset=0), FunctionDef('show_compilers', arguments([], None, None, []), [ImportFrom('distutils.ccompiler', [alias('show_compilers', None)], 0, lineno=33, col_offset=4), Expr(Call(Name('show_compilers', Load(), lineno=34, col_offset=4), [], [], None, None, lineno=34, col_offset=4), lineno=34, col_offset=4)], [], lineno=32, col_offset=0), ClassDef('build_ext', [Name('Command', Load(), lineno=37, col_offset=17)], [Assign([Name('description', Store(), lineno=39, col_offset=4)], Str('build C/C++ extensions (compile/link to build directory)', lineno=39, col_offset=18), lineno=39, col_offset=4), Assign([Name('sep_by', Store(), lineno=59, col_offset=4)], BinOp(Str(" (separated by '%s')", lineno=59, col_offset=13), Mod(), Attribute(Name('os', Load(), lineno=59, col_offset=38), 'pathsep', Load(), lineno=59, col_offset=38), lineno=59, col_offset=13), lineno=59, col_offset=4), Assign([Name('user_options', Store(), lineno=60, col_offset=4)], List([Tuple([Str('build-lib=', lineno=61, col_offset=9), Str('b', lineno=61, col_offset=23), Str('directory for compiled extension modules', lineno=62, col_offset=9)], Load(), lineno=61, col_offset=9), Tuple([Str('build-temp=', lineno=63, col_offset=9), Str('t', lineno=63, col_offset=24), Str('directory for temporary files (build by-products)', lineno=64, col_offset=9)], Load(), lineno=63, col_offset=9), Tuple([Str('plat-name=', lineno=65, col_offset=9), Str('p', lineno=65, col_offset=23), BinOp(Str('platform name to cross-compile for, if supported (default: %s)', lineno=66, col_offset=9), Mod(), Call(Name('get_platform', Load(), lineno=67, col_offset=27), [], [], None, None, lineno=67, col_offset=27), lineno=66, col_offset=9)], Load(), lineno=65, col_offset=9), Tuple([Str('inplace', lineno=68, col_offset=9), Str('i', lineno=68, col_offset=20), BinOp(Str('ignore build-lib and put compiled extensions into the source ', lineno=69, col_offset=9), Add(), Str('directory alongside your pure Python modules', lineno=70, col_offset=9), lineno=69, col_offset=9)], Load(), lineno=68, col_offset=9), Tuple([Str('include-dirs=', lineno=71, col_offset=9), Str('I', lineno=71, col_offset=26), BinOp(Str('list of directories to search for header files', lineno=72, col_offset=9), Add(), Name('sep_by', Load(), lineno=72, col_offset=60), lineno=72, col_offset=9)], Load(), lineno=71, col_offset=9), Tuple([Str('define=', lineno=73, col_offset=9), Str('D', lineno=73, col_offset=20), Str('C preprocessor macros to define', lineno=74, col_offset=9)], Load(), lineno=73, col_offset=9), Tuple([Str('undef=', lineno=75, col_offset=9), Str('U', lineno=75, col_offset=19), Str('C preprocessor macros to undefine', lineno=76, col_offset=9)], Load(), lineno=75, col_offset=9), Tuple([Str('libraries=', lineno=77, col_offset=9), Str('l', lineno=77, col_offset=23), Str('external C libraries to link with', lineno=78, col_offset=9)], Load(), lineno=77, col_offset=9), Tuple([Str('library-dirs=', lineno=79, col_offset=9), Str('L', lineno=79, col_offset=26), BinOp(Str('directories to search for external C libraries', lineno=80, col_offset=9), Add(), Name('sep_by', Load(), lineno=80, col_offset=60), lineno=80, col_offset=9)], Load(), lineno=79, col_offset=9), Tuple([Str('rpath=', lineno=81, col_offset=9), Str('R', lineno=81, col_offset=19), Str('directories to search for shared C libraries at runtime', lineno=82, col_offset=9)], Load(), lineno=81, col_offset=9), Tuple([Str('link-objects=', lineno=83, col_offset=9), Str('O', lineno=83, col_offset=26), Str('extra explicit link objects to include in the link', lineno=84, col_offset=9)], Load(), lineno=83, col_offset=9), Tuple([Str('debug', lineno=85, col_offset=9), Str('g', lineno=85, col_offset=18), Str('compile/link with debugging information', lineno=86, col_offset=9)], Load(), lineno=85, col_offset=9), Tuple([Str('force', lineno=87, col_offset=9), Str('f', lineno=87, col_offset=18), Str('forcibly build everything (ignore file timestamps)', lineno=88, col_offset=9)], Load(), lineno=87, col_offset=9), Tuple([Str('compiler=', lineno=89, col_offset=9), Str('c', lineno=89, col_offset=22), Str('specify the compiler type', lineno=90, col_offset=9)], Load(), lineno=89, col_offset=9), Tuple([Str('swig-cpp', lineno=91, col_offset=9), Name('None', Load(), lineno=91, col_offset=21), Str('make SWIG create C++ files (default is C)', lineno=92, col_offset=9)], Load(), lineno=91, col_offset=9), Tuple([Str('swig-opts=', lineno=93, col_offset=9), Name('None', Load(), lineno=93, col_offset=23), Str('list of SWIG command line options', lineno=94, col_offset=9)], Load(), lineno=93, col_offset=9), Tuple([Str('swig=', lineno=95, col_offset=9), Name('None', Load(), lineno=95, col_offset=18), Str('path to the SWIG executable', lineno=96, col_offset=9)], Load(), lineno=95, col_offset=9), Tuple([Str('user', lineno=97, col_offset=9), Name('None', Load(), lineno=97, col_offset=17), Str('add user include, library and rpath', lineno=98, col_offset=9)], Load(), lineno=97, col_offset=9)], Load(), lineno=60, col_offset=19), lineno=60, col_offset=4), Assign([Name('boolean_options', Store(), lineno=101, col_offset=4)], List([Str('inplace', lineno=101, col_offset=23), Str('debug', lineno=101, col_offset=34), Str('force', lineno=101, col_offset=43), Str('swig-cpp', lineno=101, col_offset=52), Str('user', lineno=101, col_offset=64)], Load(), lineno=101, col_offset=22), lineno=101, col_offset=4), Assign([Name('help_options', Store(), lineno=103, col_offset=4)], List([Tuple([Str('help-compiler', lineno=104, col_offset=9), Name('None', Load(), lineno=104, col_offset=26), Str('list available compilers', lineno=105, col_offset=9), Name('show_compilers', Load(), lineno=105, col_offset=37)], Load(), lineno=104, col_offset=9)], Load(), lineno=103, col_offset=19), lineno=103, col_offset=4), FunctionDef('initialize_options', arguments([Name('self', Param(), lineno=108, col_offset=28)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=109, col_offset=8), 'extensions', Store(), lineno=109, col_offset=8)], Name('None', Load(), lineno=109, col_offset=26), lineno=109, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=110, col_offset=8), 'build_lib', Store(), lineno=110, col_offset=8)], Name('None', Load(), lineno=110, col_offset=25), lineno=110, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=111, col_offset=8), 'plat_name', Store(), lineno=111, col_offset=8)], Name('None', Load(), lineno=111, col_offset=25), lineno=111, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=112, col_offset=8), 'build_temp', Store(), lineno=112, col_offset=8)], Name('None', Load(), lineno=112, col_offset=26), lineno=112, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=113, col_offset=8), 'inplace', Store(), lineno=113, col_offset=8)], Num(0, lineno=113, col_offset=23), lineno=113, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=114, col_offset=8), 'package', Store(), lineno=114, col_offset=8)], Name('None', Load(), lineno=114, col_offset=23), lineno=114, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=116, col_offset=8), 'include_dirs', Store(), lineno=116, col_offset=8)], Name('None', Load(), lineno=116, col_offset=28), lineno=116, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=117, col_offset=8), 'define', Store(), lineno=117, col_offset=8)], Name('None', Load(), lineno=117, col_offset=22), lineno=117, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=118, col_offset=8), 'undef', Store(), lineno=118, col_offset=8)], Name('None', Load(), lineno=118, col_offset=21), lineno=118, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=119, col_offset=8), 'libraries', Store(), lineno=119, col_offset=8)], Name('None', Load(), lineno=119, col_offset=25), lineno=119, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=120, col_offset=8), 'library_dirs', Store(), lineno=120, col_offset=8)], Name('None', Load(), lineno=120, col_offset=28), lineno=120, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=121, col_offset=8), 'rpath', Store(), lineno=121, col_offset=8)], Name('None', Load(), lineno=121, col_offset=21), lineno=121, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=122, col_offset=8), 'link_objects', Store(), lineno=122, col_offset=8)], Name('None', Load(), lineno=122, col_offset=28), lineno=122, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=123, col_offset=8), 'debug', Store(), lineno=123, col_offset=8)], Name('None', Load(), lineno=123, col_offset=21), lineno=123, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=124, col_offset=8), 'force', Store(), lineno=124, col_offset=8)], Name('None', Load(), lineno=124, col_offset=21), lineno=124, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=125, col_offset=8), 'compiler', Store(), lineno=125, col_offset=8)], Name('None', Load(), lineno=125, col_offset=24), lineno=125, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=126, col_offset=8), 'swig', Store(), lineno=126, col_offset=8)], Name('None', Load(), lineno=126, col_offset=20), lineno=126, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=127, col_offset=8), 'swig_cpp', Store(), lineno=127, col_offset=8)], Name('None', Load(), lineno=127, col_offset=24), lineno=127, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=128, col_offset=8), 'swig_opts', Store(), lineno=128, col_offset=8)], Name('None', Load(), lineno=128, col_offset=25), lineno=128, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=129, col_offset=8), 'user', Store(), lineno=129, col_offset=8)], Name('None', Load(), lineno=129, col_offset=20), lineno=129, col_offset=8)], [], lineno=108, col_offset=4), FunctionDef('finalize_options', arguments([Name('self', Param(), lineno=131, col_offset=25)], None, None, []), [ImportFrom('distutils', [alias('sysconfig', None)], 0, lineno=132, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=134, col_offset=8), 'set_undefined_options', Load(), lineno=134, col_offset=8), [Str('build', lineno=134, col_offset=35), Tuple([Str('build_lib', lineno=135, col_offset=36), Str('build_lib', lineno=135, col_offset=49)], Load(), lineno=135, col_offset=36), Tuple([Str('build_temp', lineno=136, col_offset=36), Str('build_temp', lineno=136, col_offset=50)], Load(), lineno=136, col_offset=36), Tuple([Str('compiler', lineno=137, col_offset=36), Str('compiler', lineno=137, col_offset=48)], Load(), lineno=137, col_offset=36), Tuple([Str('debug', lineno=138, col_offset=36), Str('debug', lineno=138, col_offset=45)], Load(), lineno=138, col_offset=36), Tuple([Str('force', lineno=139, col_offset=36), Str('force', lineno=139, col_offset=45)], Load(), lineno=139, col_offset=36), Tuple([Str('plat_name', lineno=140, col_offset=36), Str('plat_name', lineno=140, col_offset=49)], Load(), lineno=140, col_offset=36)], [], None, None, lineno=134, col_offset=8), lineno=134, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=143, col_offset=11), 'package', Load(), lineno=143, col_offset=11), [Is()], [Name('None', Load(), lineno=143, col_offset=27)], lineno=143, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=144, col_offset=12), 'package', Store(), lineno=144, col_offset=12)], Attribute(Attribute(Name('self', Load(), lineno=144, col_offset=27), 'distribution', Load(), lineno=144, col_offset=27), 'ext_package', Load(), lineno=144, col_offset=27), lineno=144, col_offset=12)], [], lineno=143, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=146, col_offset=8), 'extensions', Store(), lineno=146, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=146, col_offset=26), 'distribution', Load(), lineno=146, col_offset=26), 'ext_modules', Load(), lineno=146, col_offset=26), lineno=146, col_offset=8), Assign([Name('py_include', Store(), lineno=150, col_offset=8)], Call(Attribute(Name('sysconfig', Load(), lineno=150, col_offset=21), 'get_python_inc', Load(), lineno=150, col_offset=21), [], [], None, None, lineno=150, col_offset=21), lineno=150, col_offset=8), Assign([Name('plat_py_include', Store(), lineno=151, col_offset=8)], Call(Attribute(Name('sysconfig', Load(), lineno=151, col_offset=26), 'get_python_inc', Load(), lineno=151, col_offset=26), [], [keyword('plat_specific', Num(1, lineno=151, col_offset=65))], None, None, lineno=151, col_offset=26), lineno=151, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=152, col_offset=11), 'include_dirs', Load(), lineno=152, col_offset=11), [Is()], [Name('None', Load(), lineno=152, col_offset=32)], lineno=152, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=153, col_offset=12), 'include_dirs', Store(), lineno=153, col_offset=12)], BoolOp(Or(), [Attribute(Attribute(Name('self', Load(), lineno=153, col_offset=32), 'distribution', Load(), lineno=153, col_offset=32), 'include_dirs', Load(), lineno=153, col_offset=32), List([], Load(), lineno=153, col_offset=66)], lineno=153, col_offset=32), lineno=153, col_offset=12)], [], lineno=152, col_offset=8), If(Call(Name('isinstance', Load(), lineno=154, col_offset=11), [Attribute(Name('self', Load(), lineno=154, col_offset=22), 'include_dirs', Load(), lineno=154, col_offset=22), Name('str', Load(), lineno=154, col_offset=41)], [], None, None, lineno=154, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=155, col_offset=12), 'include_dirs', Store(), lineno=155, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=155, col_offset=32), 'include_dirs', Load(), lineno=155, col_offset=32), 'split', Load(), lineno=155, col_offset=32), [Attribute(Name('os', Load(), lineno=155, col_offset=56), 'pathsep', Load(), lineno=155, col_offset=56)], [], None, None, lineno=155, col_offset=32), lineno=155, col_offset=12)], [], lineno=154, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=159, col_offset=8), 'include_dirs', Load(), lineno=159, col_offset=8), 'append', Load(), lineno=159, col_offset=8), [Name('py_include', Load(), lineno=159, col_offset=33)], [], None, None, lineno=159, col_offset=8), lineno=159, col_offset=8), If(Compare(Name('plat_py_include', Load(), lineno=160, col_offset=11), [NotEq()], [Name('py_include', Load(), lineno=160, col_offset=30)], lineno=160, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=161, col_offset=12), 'include_dirs', Load(), lineno=161, col_offset=12), 'append', Load(), lineno=161, col_offset=12), [Name('plat_py_include', Load(), lineno=161, col_offset=37)], [], None, None, lineno=161, col_offset=12), lineno=161, col_offset=12)], [], lineno=160, col_offset=8), If(Call(Name('isinstance', Load(), lineno=163, col_offset=11), [Attribute(Name('self', Load(), lineno=163, col_offset=22), 'libraries', Load(), lineno=163, col_offset=22), Name('str', Load(), lineno=163, col_offset=38)], [], None, None, lineno=163, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=164, col_offset=12), 'libraries', Store(), lineno=164, col_offset=12)], List([Attribute(Name('self', Load(), lineno=164, col_offset=30), 'libraries', Load(), lineno=164, col_offset=30)], Load(), lineno=164, col_offset=29), lineno=164, col_offset=12)], [], lineno=163, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=168, col_offset=11), 'libraries', Load(), lineno=168, col_offset=11), [Is()], [Name('None', Load(), lineno=168, col_offset=29)], lineno=168, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=169, col_offset=12), 'libraries', Store(), lineno=169, col_offset=12)], List([], Load(), lineno=169, col_offset=29), lineno=169, col_offset=12)], [], lineno=168, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=170, col_offset=11), 'library_dirs', Load(), lineno=170, col_offset=11), [Is()], [Name('None', Load(), lineno=170, col_offset=32)], lineno=170, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=171, col_offset=12), 'library_dirs', Store(), lineno=171, col_offset=12)], List([], Load(), lineno=171, col_offset=32), lineno=171, col_offset=12)], [If(Compare(Call(Name('type', Load(), lineno=172, col_offset=13), [Attribute(Name('self', Load(), lineno=172, col_offset=18), 'library_dirs', Load(), lineno=172, col_offset=18)], [], None, None, lineno=172, col_offset=13), [Is()], [Name('StringType', Load(), lineno=172, col_offset=40)], lineno=172, col_offset=13), [Assign([Attribute(Name('self', Load(), lineno=173, col_offset=12), 'library_dirs', Store(), lineno=173, col_offset=12)], Call(Attribute(Name('string', Load(), lineno=173, col_offset=32), 'split', Load(), lineno=173, col_offset=32), [Attribute(Name('self', Load(), lineno=173, col_offset=45), 'library_dirs', Load(), lineno=173, col_offset=45), Attribute(Name('os', Load(), lineno=173, col_offset=64), 'pathsep', Load(), lineno=173, col_offset=64)], [], None, None, lineno=173, col_offset=32), lineno=173, col_offset=12)], [], lineno=172, col_offset=13)], lineno=170, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=175, col_offset=11), 'rpath', Load(), lineno=175, col_offset=11), [Is()], [Name('None', Load(), lineno=175, col_offset=25)], lineno=175, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=176, col_offset=12), 'rpath', Store(), lineno=176, col_offset=12)], List([], Load(), lineno=176, col_offset=25), lineno=176, col_offset=12)], [If(Compare(Call(Name('type', Load(), lineno=177, col_offset=13), [Attribute(Name('self', Load(), lineno=177, col_offset=18), 'rpath', Load(), lineno=177, col_offset=18)], [], None, None, lineno=177, col_offset=13), [Is()], [Name('StringType', Load(), lineno=177, col_offset=33)], lineno=177, col_offset=13), [Assign([Attribute(Name('self', Load(), lineno=178, col_offset=12), 'rpath', Store(), lineno=178, col_offset=12)], Call(Attribute(Name('string', Load(), lineno=178, col_offset=25), 'split', Load(), lineno=178, col_offset=25), [Attribute(Name('self', Load(), lineno=178, col_offset=38), 'rpath', Load(), lineno=178, col_offset=38), Attribute(Name('os', Load(), lineno=178, col_offset=50), 'pathsep', Load(), lineno=178, col_offset=50)], [], None, None, lineno=178, col_offset=25), lineno=178, col_offset=12)], [], lineno=177, col_offset=13)], lineno=175, col_offset=8), If(Compare(Attribute(Name('os', Load(), lineno=183, col_offset=11), 'name', Load(), lineno=183, col_offset=11), [Eq()], [Str('nt', lineno=183, col_offset=22)], lineno=183, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=187, col_offset=12), 'library_dirs', Load(), lineno=187, col_offset=12), 'append', Load(), lineno=187, col_offset=12), [Call(Attribute(Attribute(Name('os', Load(), lineno=187, col_offset=37), 'path', Load(), lineno=187, col_offset=37), 'join', Load(), lineno=187, col_offset=37), [Attribute(Name('sys', Load(), lineno=187, col_offset=50), 'exec_prefix', Load(), lineno=187, col_offset=50), Str('libs', lineno=187, col_offset=67)], [], None, None, lineno=187, col_offset=37)], [], None, None, lineno=187, col_offset=12), lineno=187, col_offset=12), If(Attribute(Name('self', Load(), lineno=188, col_offset=15), 'debug', Load(), lineno=188, col_offset=15), [Assign([Attribute(Name('self', Load(), lineno=189, col_offset=16), 'build_temp', Store(), lineno=189, col_offset=16)], Call(Attribute(Attribute(Name('os', Load(), lineno=189, col_offset=34), 'path', Load(), lineno=189, col_offset=34), 'join', Load(), lineno=189, col_offset=34), [Attribute(Name('self', Load(), lineno=189, col_offset=47), 'build_temp', Load(), lineno=189, col_offset=47), Str('Debug', lineno=189, col_offset=64)], [], None, None, lineno=189, col_offset=34), lineno=189, col_offset=16)], [Assign([Attribute(Name('self', Load(), lineno=191, col_offset=16), 'build_temp', Store(), lineno=191, col_offset=16)], Call(Attribute(Attribute(Name('os', Load(), lineno=191, col_offset=34), 'path', Load(), lineno=191, col_offset=34), 'join', Load(), lineno=191, col_offset=34), [Attribute(Name('self', Load(), lineno=191, col_offset=47), 'build_temp', Load(), lineno=191, col_offset=47), Str('Release', lineno=191, col_offset=64)], [], None, None, lineno=191, col_offset=34), lineno=191, col_offset=16)], lineno=188, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=195, col_offset=12), 'include_dirs', Load(), lineno=195, col_offset=12), 'append', Load(), lineno=195, col_offset=12), [Call(Attribute(Attribute(Name('os', Load(), lineno=195, col_offset=37), 'path', Load(), lineno=195, col_offset=37), 'join', Load(), lineno=195, col_offset=37), [Attribute(Name('sys', Load(), lineno=195, col_offset=50), 'exec_prefix', Load(), lineno=195, col_offset=50), Str('PC', lineno=195, col_offset=67)], [], None, None, lineno=195, col_offset=37)], [], None, None, lineno=195, col_offset=12), lineno=195, col_offset=12), If(Compare(Name('MSVC_VERSION', Load(), lineno=196, col_offset=15), [Eq()], [Num(9, lineno=196, col_offset=31)], lineno=196, col_offset=15), [If(Compare(Attribute(Name('self', Load(), lineno=198, col_offset=19), 'plat_name', Load(), lineno=198, col_offset=19), [Eq()], [Str('win32', lineno=198, col_offset=37)], lineno=198, col_offset=19), [Assign([Name('suffix', Store(), lineno=199, col_offset=20)], Str('', lineno=199, col_offset=29), lineno=199, col_offset=20)], [Assign([Name('suffix', Store(), lineno=202, col_offset=20)], Subscript(Attribute(Name('self', Load(), lineno=202, col_offset=29), 'plat_name', Load(), lineno=202, col_offset=29), Slice(Num(4, lineno=202, col_offset=44), None, None), Load(), lineno=202, col_offset=29), lineno=202, col_offset=20)], lineno=198, col_offset=16), Assign([Name('new_lib', Store(), lineno=203, col_offset=16)], Call(Attribute(Attribute(Name('os', Load(), lineno=203, col_offset=26), 'path', Load(), lineno=203, col_offset=26), 'join', Load(), lineno=203, col_offset=26), [Attribute(Name('sys', Load(), lineno=203, col_offset=39), 'exec_prefix', Load(), lineno=203, col_offset=39), Str('PCbuild', lineno=203, col_offset=56)], [], None, None, lineno=203, col_offset=26), lineno=203, col_offset=16), If(Name('suffix', Load(), lineno=204, col_offset=19), [Assign([Name('new_lib', Store(), lineno=205, col_offset=20)], Call(Attribute(Attribute(Name('os', Load(), lineno=205, col_offset=30), 'path', Load(), lineno=205, col_offset=30), 'join', Load(), lineno=205, col_offset=30), [Name('new_lib', Load(), lineno=205, col_offset=43), Name('suffix', Load(), lineno=205, col_offset=52)], [], None, None, lineno=205, col_offset=30), lineno=205, col_offset=20)], [], lineno=204, col_offset=16), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=206, col_offset=16), 'library_dirs', Load(), lineno=206, col_offset=16), 'append', Load(), lineno=206, col_offset=16), [Name('new_lib', Load(), lineno=206, col_offset=41)], [], None, None, lineno=206, col_offset=16), lineno=206, col_offset=16)], [If(Compare(Name('MSVC_VERSION', Load(), lineno=208, col_offset=17), [Eq()], [Num(8, lineno=208, col_offset=33)], lineno=208, col_offset=17), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=209, col_offset=16), 'library_dirs', Load(), lineno=209, col_offset=16), 'append', Load(), lineno=209, col_offset=16), [Call(Attribute(Attribute(Name('os', Load(), lineno=209, col_offset=41), 'path', Load(), lineno=209, col_offset=41), 'join', Load(), lineno=209, col_offset=41), [Attribute(Name('sys', Load(), lineno=209, col_offset=54), 'exec_prefix', Load(), lineno=209, col_offset=54), Str('PC', lineno=210, col_offset=41), Str('VS8.0', lineno=210, col_offset=47), Str('win32release', lineno=210, col_offset=56)], [], None, None, lineno=209, col_offset=41)], [], None, None, lineno=209, col_offset=16), lineno=209, col_offset=16)], [If(Compare(Name('MSVC_VERSION', Load(), lineno=211, col_offset=17), [Eq()], [Num(7, lineno=211, col_offset=33)], lineno=211, col_offset=17), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=212, col_offset=16), 'library_dirs', Load(), lineno=212, col_offset=16), 'append', Load(), lineno=212, col_offset=16), [Call(Attribute(Attribute(Name('os', Load(), lineno=212, col_offset=41), 'path', Load(), lineno=212, col_offset=41), 'join', Load(), lineno=212, col_offset=41), [Attribute(Name('sys', Load(), lineno=212, col_offset=54), 'exec_prefix', Load(), lineno=212, col_offset=54), Str('PC', lineno=213, col_offset=41), Str('VS7.1', lineno=213, col_offset=47)], [], None, None, lineno=212, col_offset=41)], [], None, None, lineno=212, col_offset=16), lineno=212, col_offset=16)], [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=215, col_offset=16), 'library_dirs', Load(), lineno=215, col_offset=16), 'append', Load(), lineno=215, col_offset=16), [Call(Attribute(Attribute(Name('os', Load(), lineno=215, col_offset=41), 'path', Load(), lineno=215, col_offset=41), 'join', Load(), lineno=215, col_offset=41), [Attribute(Name('sys', Load(), lineno=215, col_offset=54), 'exec_prefix', Load(), lineno=215, col_offset=54), Str('PC', lineno=216, col_offset=41), Str('VC6', lineno=216, col_offset=47)], [], None, None, lineno=215, col_offset=41)], [], None, None, lineno=215, col_offset=16), lineno=215, col_offset=16)], lineno=211, col_offset=17)], lineno=208, col_offset=17)], lineno=196, col_offset=12)], [], lineno=183, col_offset=8), If(Compare(Attribute(Name('os', Load(), lineno=220, col_offset=11), 'name', Load(), lineno=220, col_offset=11), [Eq()], [Str('os2', lineno=220, col_offset=22)], lineno=220, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=221, col_offset=12), 'library_dirs', Load(), lineno=221, col_offset=12), 'append', Load(), lineno=221, col_offset=12), [Call(Attribute(Attribute(Name('os', Load(), lineno=221, col_offset=37), 'path', Load(), lineno=221, col_offset=37), 'join', Load(), lineno=221, col_offset=37), [Attribute(Name('sys', Load(), lineno=221, col_offset=50), 'exec_prefix', Load(), lineno=221, col_offset=50), Str('Config', lineno=221, col_offset=67)], [], None, None, lineno=221, col_offset=37)], [], None, None, lineno=221, col_offset=12), lineno=221, col_offset=12)], [], lineno=220, col_offset=8), If(BoolOp(Or(), [Compare(Subscript(Attribute(Name('sys', Load(), lineno=225, col_offset=11), 'platform', Load(), lineno=225, col_offset=11), Slice(None, Num(6, lineno=225, col_offset=25), None), Load(), lineno=225, col_offset=11), [Eq()], [Str('cygwin', lineno=225, col_offset=31)], lineno=225, col_offset=11), Compare(Subscript(Attribute(Name('sys', Load(), lineno=225, col_offset=43), 'platform', Load(), lineno=225, col_offset=43), Slice(None, Num(6, lineno=225, col_offset=57), None), Load(), lineno=225, col_offset=43), [Eq()], [Str('atheos', lineno=225, col_offset=63)], lineno=225, col_offset=43)], lineno=225, col_offset=11), [If(Call(Attribute(Attribute(Name('sys', Load(), lineno=226, col_offset=15), 'executable', Load(), lineno=226, col_offset=15), 'startswith', Load(), lineno=226, col_offset=15), [Call(Attribute(Attribute(Name('os', Load(), lineno=226, col_offset=41), 'path', Load(), lineno=226, col_offset=41), 'join', Load(), lineno=226, col_offset=41), [Attribute(Name('sys', Load(), lineno=226, col_offset=54), 'exec_prefix', Load(), lineno=226, col_offset=54), Str('bin', lineno=226, col_offset=71)], [], None, None, lineno=226, col_offset=41)], [], None, None, lineno=226, col_offset=15), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=228, col_offset=16), 'library_dirs', Load(), lineno=228, col_offset=16), 'append', Load(), lineno=228, col_offset=16), [Call(Attribute(Attribute(Name('os', Load(), lineno=228, col_offset=41), 'path', Load(), lineno=228, col_offset=41), 'join', Load(), lineno=228, col_offset=41), [Attribute(Name('sys', Load(), lineno=228, col_offset=54), 'prefix', Load(), lineno=228, col_offset=54), Str('lib', lineno=228, col_offset=66), BinOp(Str('python', lineno=229, col_offset=54), Add(), Call(Name('get_python_version', Load(), lineno=229, col_offset=65), [], [], None, None, lineno=229, col_offset=65), lineno=229, col_offset=54), Str('config', lineno=230, col_offset=54)], [], None, None, lineno=228, col_offset=41)], [], None, None, lineno=228, col_offset=16), lineno=228, col_offset=16)], [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=233, col_offset=16), 'library_dirs', Load(), lineno=233, col_offset=16), 'append', Load(), lineno=233, col_offset=16), [Str('.', lineno=233, col_offset=41)], [], None, None, lineno=233, col_offset=16), lineno=233, col_offset=16)], lineno=226, col_offset=12)], [], lineno=225, col_offset=8), Expr(Call(Attribute(Name('sysconfig', Load(), lineno=237, col_offset=8), 'get_config_var', Load(), lineno=237, col_offset=8), [Str('Py_ENABLE_SHARED', lineno=237, col_offset=33)], [], None, None, lineno=237, col_offset=8), lineno=237, col_offset=8), If(BoolOp(And(), [BoolOp(Or(), [Call(Attribute(Attribute(Name('sys', Load(), lineno=238, col_offset=13), 'platform', Load(), lineno=238, col_offset=13), 'startswith', Load(), lineno=238, col_offset=13), [Str('linux', lineno=238, col_offset=37)], [], None, None, lineno=238, col_offset=13), Call(Attribute(Attribute(Name('sys', Load(), lineno=238, col_offset=49), 'platform', Load(), lineno=238, col_offset=49), 'startswith', Load(), lineno=238, col_offset=49), [Str('gnu', lineno=238, col_offset=73)], [], None, None, lineno=238, col_offset=49), Call(Attribute(Attribute(Name('sys', Load(), lineno=239, col_offset=16), 'platform', Load(), lineno=239, col_offset=16), 'startswith', Load(), lineno=239, col_offset=16), [Str('sunos', lineno=239, col_offset=40)], [], None, None, lineno=239, col_offset=16)], lineno=238, col_offset=13), Call(Attribute(Name('sysconfig', Load(), lineno=240, col_offset=16), 'get_config_var', Load(), lineno=240, col_offset=16), [Str('Py_ENABLE_SHARED', lineno=240, col_offset=41)], [], None, None, lineno=240, col_offset=16)], lineno=238, col_offset=12), [If(Call(Attribute(Attribute(Name('sys', Load(), lineno=241, col_offset=15), 'executable', Load(), lineno=241, col_offset=15), 'startswith', Load(), lineno=241, col_offset=15), [Call(Attribute(Attribute(Name('os', Load(), lineno=241, col_offset=41), 'path', Load(), lineno=241, col_offset=41), 'join', Load(), lineno=241, col_offset=41), [Attribute(Name('sys', Load(), lineno=241, col_offset=54), 'exec_prefix', Load(), lineno=241, col_offset=54), Str('bin', lineno=241, col_offset=71)], [], None, None, lineno=241, col_offset=41)], [], None, None, lineno=241, col_offset=15), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=243, col_offset=16), 'library_dirs', Load(), lineno=243, col_offset=16), 'append', Load(), lineno=243, col_offset=16), [Call(Attribute(Name('sysconfig', Load(), lineno=243, col_offset=41), 'get_config_var', Load(), lineno=243, col_offset=41), [Str('LIBDIR', lineno=243, col_offset=66)], [], None, None, lineno=243, col_offset=41)], [], None, None, lineno=243, col_offset=16), lineno=243, col_offset=16)], [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=246, col_offset=16), 'library_dirs', Load(), lineno=246, col_offset=16), 'append', Load(), lineno=246, col_offset=16), [Str('.', lineno=246, col_offset=41)], [], None, None, lineno=246, col_offset=16), lineno=246, col_offset=16)], lineno=241, col_offset=12)], [], lineno=238, col_offset=8), If(Attribute(Name('self', Load(), lineno=253, col_offset=11), 'define', Load(), lineno=253, col_offset=11), [Assign([Name('defines', Store(), lineno=254, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=254, col_offset=22), 'define', Load(), lineno=254, col_offset=22), 'split', Load(), lineno=254, col_offset=22), [Str(',', lineno=254, col_offset=40)], [], None, None, lineno=254, col_offset=22), lineno=254, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=255, col_offset=12), 'define', Store(), lineno=255, col_offset=12)], Call(Name('map', Load(), lineno=255, col_offset=26), [Lambda(arguments([Name('symbol', Param(), lineno=255, col_offset=37)], None, None, []), Tuple([Name('symbol', Load(), lineno=255, col_offset=46), Str('1', lineno=255, col_offset=54)], Load(), lineno=255, col_offset=46), lineno=255, col_offset=30), Name('defines', Load(), lineno=255, col_offset=60)], [], None, None, lineno=255, col_offset=26), lineno=255, col_offset=12)], [], lineno=253, col_offset=8), If(Attribute(Name('self', Load(), lineno=260, col_offset=11), 'undef', Load(), lineno=260, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=261, col_offset=12), 'undef', Store(), lineno=261, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=261, col_offset=25), 'undef', Load(), lineno=261, col_offset=25), 'split', Load(), lineno=261, col_offset=25), [Str(',', lineno=261, col_offset=42)], [], None, None, lineno=261, col_offset=25), lineno=261, col_offset=12)], [], lineno=260, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=263, col_offset=11), 'swig_opts', Load(), lineno=263, col_offset=11), [Is()], [Name('None', Load(), lineno=263, col_offset=29)], lineno=263, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=264, col_offset=12), 'swig_opts', Store(), lineno=264, col_offset=12)], List([], Load(), lineno=264, col_offset=29), lineno=264, col_offset=12)], [Assign([Attribute(Name('self', Load(), lineno=266, col_offset=12), 'swig_opts', Store(), lineno=266, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=266, col_offset=29), 'swig_opts', Load(), lineno=266, col_offset=29), 'split', Load(), lineno=266, col_offset=29), [Str(' ', lineno=266, col_offset=50)], [], None, None, lineno=266, col_offset=29), lineno=266, col_offset=12)], lineno=263, col_offset=8), If(Attribute(Name('self', Load(), lineno=269, col_offset=11), 'user', Load(), lineno=269, col_offset=11), [Assign([Name('user_include', Store(), lineno=270, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=270, col_offset=27), 'path', Load(), lineno=270, col_offset=27), 'join', Load(), lineno=270, col_offset=27), [Name('USER_BASE', Load(), lineno=270, col_offset=40), Str('include', lineno=270, col_offset=51)], [], None, None, lineno=270, col_offset=27), lineno=270, col_offset=12), Assign([Name('user_lib', Store(), lineno=271, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=271, col_offset=23), 'path', Load(), lineno=271, col_offset=23), 'join', Load(), lineno=271, col_offset=23), [Name('USER_BASE', Load(), lineno=271, col_offset=36), Str('lib', lineno=271, col_offset=47)], [], None, None, lineno=271, col_offset=23), lineno=271, col_offset=12), If(Call(Attribute(Attribute(Name('os', Load(), lineno=272, col_offset=15), 'path', Load(), lineno=272, col_offset=15), 'isdir', Load(), lineno=272, col_offset=15), [Name('user_include', Load(), lineno=272, col_offset=29)], [], None, None, lineno=272, col_offset=15), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=273, col_offset=16), 'include_dirs', Load(), lineno=273, col_offset=16), 'append', Load(), lineno=273, col_offset=16), [Name('user_include', Load(), lineno=273, col_offset=41)], [], None, None, lineno=273, col_offset=16), lineno=273, col_offset=16)], [], lineno=272, col_offset=12), If(Call(Attribute(Attribute(Name('os', Load(), lineno=274, col_offset=15), 'path', Load(), lineno=274, col_offset=15), 'isdir', Load(), lineno=274, col_offset=15), [Name('user_lib', Load(), lineno=274, col_offset=29)], [], None, None, lineno=274, col_offset=15), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=275, col_offset=16), 'library_dirs', Load(), lineno=275, col_offset=16), 'append', Load(), lineno=275, col_offset=16), [Name('user_lib', Load(), lineno=275, col_offset=41)], [], None, None, lineno=275, col_offset=16), lineno=275, col_offset=16), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=276, col_offset=16), 'rpath', Load(), lineno=276, col_offset=16), 'append', Load(), lineno=276, col_offset=16), [Name('user_lib', Load(), lineno=276, col_offset=34)], [], None, None, lineno=276, col_offset=16), lineno=276, col_offset=16)], [], lineno=274, col_offset=12)], [], lineno=269, col_offset=8)], [], lineno=131, col_offset=4), FunctionDef('run', arguments([Name('self', Param(), lineno=278, col_offset=12)], None, None, []), [ImportFrom('distutils.ccompiler', [alias('new_compiler', None)], 0, lineno=279, col_offset=8), If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=293, col_offset=15), 'extensions', Load(), lineno=293, col_offset=15), lineno=293, col_offset=11), [Return(None, lineno=294, col_offset=12)], [], lineno=293, col_offset=8), If(Call(Attribute(Attribute(Name('self', Load(), lineno=299, col_offset=11), 'distribution', Load(), lineno=299, col_offset=11), 'has_c_libraries', Load(), lineno=299, col_offset=11), [], [], None, None, lineno=299, col_offset=11), [Assign([Name('build_clib', Store(), lineno=300, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=300, col_offset=25), 'get_finalized_command', Load(), lineno=300, col_offset=25), [Str('build_clib', lineno=300, col_offset=52)], [], None, None, lineno=300, col_offset=25), lineno=300, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=301, col_offset=12), 'libraries', Load(), lineno=301, col_offset=12), 'extend', Load(), lineno=301, col_offset=12), [BoolOp(Or(), [Call(Attribute(Name('build_clib', Load(), lineno=301, col_offset=34), 'get_library_names', Load(), lineno=301, col_offset=34), [], [], None, None, lineno=301, col_offset=34), List([], Load(), lineno=301, col_offset=68)], lineno=301, col_offset=34)], [], None, None, lineno=301, col_offset=12), lineno=301, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=302, col_offset=12), 'library_dirs', Load(), lineno=302, col_offset=12), 'append', Load(), lineno=302, col_offset=12), [Attribute(Name('build_clib', Load(), lineno=302, col_offset=37), 'build_clib', Load(), lineno=302, col_offset=37)], [], None, None, lineno=302, col_offset=12), lineno=302, col_offset=12)], [], lineno=299, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=306, col_offset=8), 'compiler', Store(), lineno=306, col_offset=8)], Call(Name('new_compiler', Load(), lineno=306, col_offset=24), [], [keyword('compiler', Attribute(Name('self', Load(), lineno=306, col_offset=46), 'compiler', Load(), lineno=306, col_offset=46)), keyword('verbose', Attribute(Name('self', Load(), lineno=307, col_offset=45), 'verbose', Load(), lineno=307, col_offset=45)), keyword('dry_run', Attribute(Name('self', Load(), lineno=308, col_offset=45), 'dry_run', Load(), lineno=308, col_offset=45)), keyword('force', Attribute(Name('self', Load(), lineno=309, col_offset=43), 'force', Load(), lineno=309, col_offset=43))], None, None, lineno=306, col_offset=24), lineno=306, col_offset=8), Expr(Call(Name('customize_compiler', Load(), lineno=310, col_offset=8), [Attribute(Name('self', Load(), lineno=310, col_offset=27), 'compiler', Load(), lineno=310, col_offset=27)], [], None, None, lineno=310, col_offset=8), lineno=310, col_offset=8), If(BoolOp(And(), [Compare(Attribute(Name('os', Load(), lineno=314, col_offset=11), 'name', Load(), lineno=314, col_offset=11), [Eq()], [Str('nt', lineno=314, col_offset=22)], lineno=314, col_offset=11), Compare(Attribute(Name('self', Load(), lineno=314, col_offset=31), 'plat_name', Load(), lineno=314, col_offset=31), [NotEq()], [Call(Name('get_platform', Load(), lineno=314, col_offset=49), [], [], None, None, lineno=314, col_offset=49)], lineno=314, col_offset=31)], lineno=314, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=315, col_offset=12), 'compiler', Load(), lineno=315, col_offset=12), 'initialize', Load(), lineno=315, col_offset=12), [Attribute(Name('self', Load(), lineno=315, col_offset=37), 'plat_name', Load(), lineno=315, col_offset=37)], [], None, None, lineno=315, col_offset=12), lineno=315, col_offset=12)], [], lineno=314, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=321, col_offset=11), 'include_dirs', Load(), lineno=321, col_offset=11), [IsNot()], [Name('None', Load(), lineno=321, col_offset=36)], lineno=321, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=322, col_offset=12), 'compiler', Load(), lineno=322, col_offset=12), 'set_include_dirs', Load(), lineno=322, col_offset=12), [Attribute(Name('self', Load(), lineno=322, col_offset=43), 'include_dirs', Load(), lineno=322, col_offset=43)], [], None, None, lineno=322, col_offset=12), lineno=322, col_offset=12)], [], lineno=321, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=323, col_offset=11), 'define', Load(), lineno=323, col_offset=11), [IsNot()], [Name('None', Load(), lineno=323, col_offset=30)], lineno=323, col_offset=11), [For(Tuple([Name('name', Store(), lineno=325, col_offset=17), Name('value', Store(), lineno=325, col_offset=23)], Store(), lineno=325, col_offset=17), Attribute(Name('self', Load(), lineno=325, col_offset=33), 'define', Load(), lineno=325, col_offset=33), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=326, col_offset=16), 'compiler', Load(), lineno=326, col_offset=16), 'define_macro', Load(), lineno=326, col_offset=16), [Name('name', Load(), lineno=326, col_offset=43), Name('value', Load(), lineno=326, col_offset=49)], [], None, None, lineno=326, col_offset=16), lineno=326, col_offset=16)], [], lineno=325, col_offset=12)], [], lineno=323, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=327, col_offset=11), 'undef', Load(), lineno=327, col_offset=11), [IsNot()], [Name('None', Load(), lineno=327, col_offset=29)], lineno=327, col_offset=11), [For(Name('macro', Store(), lineno=328, col_offset=16), Attribute(Name('self', Load(), lineno=328, col_offset=25), 'undef', Load(), lineno=328, col_offset=25), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=329, col_offset=16), 'compiler', Load(), lineno=329, col_offset=16), 'undefine_macro', Load(), lineno=329, col_offset=16), [Name('macro', Load(), lineno=329, col_offset=45)], [], None, None, lineno=329, col_offset=16), lineno=329, col_offset=16)], [], lineno=328, col_offset=12)], [], lineno=327, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=330, col_offset=11), 'libraries', Load(), lineno=330, col_offset=11), [IsNot()], [Name('None', Load(), lineno=330, col_offset=33)], lineno=330, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=331, col_offset=12), 'compiler', Load(), lineno=331, col_offset=12), 'set_libraries', Load(), lineno=331, col_offset=12), [Attribute(Name('self', Load(), lineno=331, col_offset=40), 'libraries', Load(), lineno=331, col_offset=40)], [], None, None, lineno=331, col_offset=12), lineno=331, col_offset=12)], [], lineno=330, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=332, col_offset=11), 'library_dirs', Load(), lineno=332, col_offset=11), [IsNot()], [Name('None', Load(), lineno=332, col_offset=36)], lineno=332, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=333, col_offset=12), 'compiler', Load(), lineno=333, col_offset=12), 'set_library_dirs', Load(), lineno=333, col_offset=12), [Attribute(Name('self', Load(), lineno=333, col_offset=43), 'library_dirs', Load(), lineno=333, col_offset=43)], [], None, None, lineno=333, col_offset=12), lineno=333, col_offset=12)], [], lineno=332, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=334, col_offset=11), 'rpath', Load(), lineno=334, col_offset=11), [IsNot()], [Name('None', Load(), lineno=334, col_offset=29)], lineno=334, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=335, col_offset=12), 'compiler', Load(), lineno=335, col_offset=12), 'set_runtime_library_dirs', Load(), lineno=335, col_offset=12), [Attribute(Name('self', Load(), lineno=335, col_offset=51), 'rpath', Load(), lineno=335, col_offset=51)], [], None, None, lineno=335, col_offset=12), lineno=335, col_offset=12)], [], lineno=334, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=336, col_offset=11), 'link_objects', Load(), lineno=336, col_offset=11), [IsNot()], [Name('None', Load(), lineno=336, col_offset=36)], lineno=336, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=337, col_offset=12), 'compiler', Load(), lineno=337, col_offset=12), 'set_link_objects', Load(), lineno=337, col_offset=12), [Attribute(Name('self', Load(), lineno=337, col_offset=43), 'link_objects', Load(), lineno=337, col_offset=43)], [], None, None, lineno=337, col_offset=12), lineno=337, col_offset=12)], [], lineno=336, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=340, col_offset=8), 'build_extensions', Load(), lineno=340, col_offset=8), [], [], None, None, lineno=340, col_offset=8), lineno=340, col_offset=8)], [], lineno=278, col_offset=4), FunctionDef('check_extensions_list', arguments([Name('self', Param(), lineno=342, col_offset=30), Name('extensions', Param(), lineno=342, col_offset=36)], None, None, []), [Expr(Str("Ensure that the list of extensions (presumably provided as a\n        command option 'extensions') is valid, i.e. it is a list of\n        Extension objects.  We also support the old-style list of 2-tuples,\n        where the tuples are (ext_name, build_info), which are converted to\n        Extension instances here.\n\n        Raise DistutilsSetupError if the structure is invalid anywhere;\n        just returns otherwise.\n        ", lineno=351, col_offset=-1), lineno=351, col_offset=-1), If(UnaryOp(Not(), Call(Name('isinstance', Load(), lineno=352, col_offset=15), [Name('extensions', Load(), lineno=352, col_offset=26), Name('list', Load(), lineno=352, col_offset=38)], [], None, None, lineno=352, col_offset=15), lineno=352, col_offset=11), [Raise(Name('DistutilsSetupError', Load(), lineno=353, col_offset=18), Str("'ext_modules' option must be a list of Extension instances", lineno=354, col_offset=18), None, lineno=353, col_offset=12)], [], lineno=352, col_offset=8), For(Tuple([Name('i', Store(), lineno=356, col_offset=12), Name('ext', Store(), lineno=356, col_offset=15)], Store(), lineno=356, col_offset=12), Call(Name('enumerate', Load(), lineno=356, col_offset=22), [Name('extensions', Load(), lineno=356, col_offset=32)], [], None, None, lineno=356, col_offset=22), [If(Call(Name('isinstance', Load(), lineno=357, col_offset=15), [Name('ext', Load(), lineno=357, col_offset=26), Name('Extension', Load(), lineno=357, col_offset=31)], [], None, None, lineno=357, col_offset=15), [Continue( lineno=358, col_offset=16)], [], lineno=357, col_offset=12), If(BoolOp(Or(), [UnaryOp(Not(), Call(Name('isinstance', Load(), lineno=361, col_offset=19), [Name('ext', Load(), lineno=361, col_offset=30), Name('tuple', Load(), lineno=361, col_offset=35)], [], None, None, lineno=361, col_offset=19), lineno=361, col_offset=15), Compare(Call(Name('len', Load(), lineno=361, col_offset=45), [Name('ext', Load(), lineno=361, col_offset=49)], [], None, None, lineno=361, col_offset=45), [NotEq()], [Num(2, lineno=361, col_offset=57)], lineno=361, col_offset=45)], lineno=361, col_offset=15), [Raise(Name('DistutilsSetupError', Load(), lineno=362, col_offset=22), Str("each element of 'ext_modules' option must be an Extension instance or 2-tuple", lineno=363, col_offset=23), None, lineno=362, col_offset=16)], [], lineno=361, col_offset=12), Assign([Tuple([Name('ext_name', Store(), lineno=366, col_offset=12), Name('build_info', Store(), lineno=366, col_offset=22)], Store(), lineno=366, col_offset=12)], Name('ext', Load(), lineno=366, col_offset=35), lineno=366, col_offset=12), Expr(Call(Attribute(Name('log', Load(), lineno=368, col_offset=12), 'warn', Load(), lineno=368, col_offset=12), [BinOp(Str("old-style (ext_name, build_info) tuple found in ext_modules for extension '%s'-- please convert to Extension instance", lineno=368, col_offset=22), Mod(), Name('ext_name', Load(), lineno=370, col_offset=66), lineno=368, col_offset=22)], [], None, None, lineno=368, col_offset=12), lineno=368, col_offset=12), If(UnaryOp(Not(), BoolOp(And(), [Call(Name('isinstance', Load(), lineno=372, col_offset=20), [Name('ext_name', Load(), lineno=372, col_offset=31), Name('str', Load(), lineno=372, col_offset=41)], [], None, None, lineno=372, col_offset=20), Call(Attribute(Name('extension_name_re', Load(), lineno=373, col_offset=20), 'match', Load(), lineno=373, col_offset=20), [Name('ext_name', Load(), lineno=373, col_offset=44)], [], None, None, lineno=373, col_offset=20)], lineno=372, col_offset=20), lineno=372, col_offset=15), [Raise(Name('DistutilsSetupError', Load(), lineno=374, col_offset=22), Str("first element of each tuple in 'ext_modules' must be the extension name (a string)", lineno=375, col_offset=23), None, lineno=374, col_offset=16)], [], lineno=372, col_offset=12), If(UnaryOp(Not(), Call(Name('isinstance', Load(), lineno=378, col_offset=19), [Name('build_info', Load(), lineno=378, col_offset=30), Name('dict', Load(), lineno=378, col_offset=42)], [], None, None, lineno=378, col_offset=19), lineno=378, col_offset=15), [Raise(Name('DistutilsSetupError', Load(), lineno=379, col_offset=22), Str("second element of each tuple in 'ext_modules' must be a dictionary (build info)", lineno=380, col_offset=23), None, lineno=379, col_offset=16)], [], lineno=378, col_offset=12), Assign([Name('ext', Store(), lineno=385, col_offset=12)], Call(Name('Extension', Load(), lineno=385, col_offset=18), [Name('ext_name', Load(), lineno=385, col_offset=28), Subscript(Name('build_info', Load(), lineno=385, col_offset=38), Index(Str('sources', lineno=385, col_offset=49)), Load(), lineno=385, col_offset=38)], [], None, None, lineno=385, col_offset=18), lineno=385, col_offset=12), For(Name('key', Store(), lineno=389, col_offset=16), Tuple([Str('include_dirs', lineno=389, col_offset=24), Str('library_dirs', lineno=389, col_offset=40), Str('libraries', lineno=389, col_offset=56), Str('extra_objects', lineno=390, col_offset=24), Str('extra_compile_args', lineno=390, col_offset=41), Str('extra_link_args', lineno=391, col_offset=24)], Load(), lineno=389, col_offset=24), [Assign([Name('val', Store(), lineno=392, col_offset=16)], Call(Attribute(Name('build_info', Load(), lineno=392, col_offset=22), 'get', Load(), lineno=392, col_offset=22), [Name('key', Load(), lineno=392, col_offset=37)], [], None, None, lineno=392, col_offset=22), lineno=392, col_offset=16), If(Compare(Name('val', Load(), lineno=393, col_offset=19), [IsNot()], [Name('None', Load(), lineno=393, col_offset=30)], lineno=393, col_offset=19), [Expr(Call(Name('setattr', Load(), lineno=394, col_offset=20), [Name('ext', Load(), lineno=394, col_offset=28), Name('key', Load(), lineno=394, col_offset=33), Name('val', Load(), lineno=394, col_offset=38)], [], None, None, lineno=394, col_offset=20), lineno=394, col_offset=20)], [], lineno=393, col_offset=16)], [], lineno=389, col_offset=12), Assign([Attribute(Name('ext', Load(), lineno=397, col_offset=12), 'runtime_library_dirs', Store(), lineno=397, col_offset=12)], Call(Attribute(Name('build_info', Load(), lineno=397, col_offset=39), 'get', Load(), lineno=397, col_offset=39), [Str('rpath', lineno=397, col_offset=54)], [], None, None, lineno=397, col_offset=39), lineno=397, col_offset=12), If(Compare(Str('def_file', lineno=398, col_offset=15), [In()], [Name('build_info', Load(), lineno=398, col_offset=29)], lineno=398, col_offset=15), [Expr(Call(Attribute(Name('log', Load(), lineno=399, col_offset=16), 'warn', Load(), lineno=399, col_offset=16), [Str("'def_file' element of build info dict no longer supported", lineno=399, col_offset=25)], [], None, None, lineno=399, col_offset=16), lineno=399, col_offset=16)], [], lineno=398, col_offset=12), Assign([Name('macros', Store(), lineno=404, col_offset=12)], Call(Attribute(Name('build_info', Load(), lineno=404, col_offset=21), 'get', Load(), lineno=404, col_offset=21), [Str('macros', lineno=404, col_offset=36)], [], None, None, lineno=404, col_offset=21), lineno=404, col_offset=12), If(Name('macros', Load(), lineno=405, col_offset=15), [Assign([Attribute(Name('ext', Load(), lineno=406, col_offset=16), 'define_macros', Store(), lineno=406, col_offset=16)], List([], Load(), lineno=406, col_offset=36), lineno=406, col_offset=16), Assign([Attribute(Name('ext', Load(), lineno=407, col_offset=16), 'undef_macros', Store(), lineno=407, col_offset=16)], List([], Load(), lineno=407, col_offset=35), lineno=407, col_offset=16), For(Name('macro', Store(), lineno=408, col_offset=20), Name('macros', Load(), lineno=408, col_offset=29), [If(UnaryOp(Not(), BoolOp(And(), [Call(Name('isinstance', Load(), lineno=409, col_offset=28), [Name('macro', Load(), lineno=409, col_offset=39), Name('tuple', Load(), lineno=409, col_offset=46)], [], None, None, lineno=409, col_offset=28), Compare(Call(Name('len', Load(), lineno=409, col_offset=57), [Name('macro', Load(), lineno=409, col_offset=61)], [], None, None, lineno=409, col_offset=57), [In()], [Tuple([Num(1, lineno=409, col_offset=72), Num(2, lineno=409, col_offset=75)], Load(), lineno=409, col_offset=72)], lineno=409, col_offset=57)], lineno=409, col_offset=28), lineno=409, col_offset=23), [Raise(Name('DistutilsSetupError', Load(), lineno=410, col_offset=30), Str("'macros' element of build info dict must be 1- or 2-tuple", lineno=411, col_offset=31), None, lineno=410, col_offset=24)], [], lineno=409, col_offset=20), If(Compare(Call(Name('len', Load(), lineno=413, col_offset=23), [Name('macro', Load(), lineno=413, col_offset=27)], [], None, None, lineno=413, col_offset=23), [Eq()], [Num(1, lineno=413, col_offset=37)], lineno=413, col_offset=23), [Expr(Call(Attribute(Attribute(Name('ext', Load(), lineno=414, col_offset=24), 'undef_macros', Load(), lineno=414, col_offset=24), 'append', Load(), lineno=414, col_offset=24), [Subscript(Name('macro', Load(), lineno=414, col_offset=48), Index(Num(0, lineno=414, col_offset=54)), Load(), lineno=414, col_offset=48)], [], None, None, lineno=414, col_offset=24), lineno=414, col_offset=24)], [If(Compare(Call(Name('len', Load(), lineno=415, col_offset=25), [Name('macro', Load(), lineno=415, col_offset=29)], [], None, None, lineno=415, col_offset=25), [Eq()], [Num(2, lineno=415, col_offset=39)], lineno=415, col_offset=25), [Expr(Call(Attribute(Attribute(Name('ext', Load(), lineno=416, col_offset=24), 'define_macros', Load(), lineno=416, col_offset=24), 'append', Load(), lineno=416, col_offset=24), [Name('macro', Load(), lineno=416, col_offset=49)], [], None, None, lineno=416, col_offset=24), lineno=416, col_offset=24)], [], lineno=415, col_offset=25)], lineno=413, col_offset=20)], [], lineno=408, col_offset=16)], [], lineno=405, col_offset=12), Assign([Subscript(Name('extensions', Load(), lineno=418, col_offset=12), Index(Name('i', Load(), lineno=418, col_offset=23)), Store(), lineno=418, col_offset=12)], Name('ext', Load(), lineno=418, col_offset=28), lineno=418, col_offset=12)], [], lineno=356, col_offset=8)], [], lineno=342, col_offset=4), FunctionDef('get_source_files', arguments([Name('self', Param(), lineno=420, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=421, col_offset=8), 'check_extensions_list', Load(), lineno=421, col_offset=8), [Attribute(Name('self', Load(), lineno=421, col_offset=35), 'extensions', Load(), lineno=421, col_offset=35)], [], None, None, lineno=421, col_offset=8), lineno=421, col_offset=8), Assign([Name('filenames', Store(), lineno=422, col_offset=8)], List([], Load(), lineno=422, col_offset=20), lineno=422, col_offset=8), For(Name('ext', Store(), lineno=425, col_offset=12), Attribute(Name('self', Load(), lineno=425, col_offset=19), 'extensions', Load(), lineno=425, col_offset=19), [Expr(Call(Attribute(Name('filenames', Load(), lineno=426, col_offset=12), 'extend', Load(), lineno=426, col_offset=12), [Attribute(Name('ext', Load(), lineno=426, col_offset=29), 'sources', Load(), lineno=426, col_offset=29)], [], None, None, lineno=426, col_offset=12), lineno=426, col_offset=12)], [], lineno=425, col_offset=8), Return(Name('filenames', Load(), lineno=428, col_offset=15), lineno=428, col_offset=8)], [], lineno=420, col_offset=4), FunctionDef('get_outputs', arguments([Name('self', Param(), lineno=430, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=434, col_offset=8), 'check_extensions_list', Load(), lineno=434, col_offset=8), [Attribute(Name('self', Load(), lineno=434, col_offset=35), 'extensions', Load(), lineno=434, col_offset=35)], [], None, None, lineno=434, col_offset=8), lineno=434, col_offset=8), Assign([Name('outputs', Store(), lineno=439, col_offset=8)], List([], Load(), lineno=439, col_offset=18), lineno=439, col_offset=8), For(Name('ext', Store(), lineno=440, col_offset=12), Attribute(Name('self', Load(), lineno=440, col_offset=19), 'extensions', Load(), lineno=440, col_offset=19), [Expr(Call(Attribute(Name('outputs', Load(), lineno=441, col_offset=12), 'append', Load(), lineno=441, col_offset=12), [Call(Attribute(Name('self', Load(), lineno=441, col_offset=27), 'get_ext_fullpath', Load(), lineno=441, col_offset=27), [Attribute(Name('ext', Load(), lineno=441, col_offset=49), 'name', Load(), lineno=441, col_offset=49)], [], None, None, lineno=441, col_offset=27)], [], None, None, lineno=441, col_offset=12), lineno=441, col_offset=12)], [], lineno=440, col_offset=8), Return(Name('outputs', Load(), lineno=442, col_offset=15), lineno=442, col_offset=8)], [], lineno=430, col_offset=4), FunctionDef('build_extensions', arguments([Name('self', Param(), lineno=444, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=446, col_offset=8), 'check_extensions_list', Load(), lineno=446, col_offset=8), [Attribute(Name('self', Load(), lineno=446, col_offset=35), 'extensions', Load(), lineno=446, col_offset=35)], [], None, None, lineno=446, col_offset=8), lineno=446, col_offset=8), For(Name('ext', Store(), lineno=448, col_offset=12), Attribute(Name('self', Load(), lineno=448, col_offset=19), 'extensions', Load(), lineno=448, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=449, col_offset=12), 'build_extension', Load(), lineno=449, col_offset=12), [Name('ext', Load(), lineno=449, col_offset=33)], [], None, None, lineno=449, col_offset=12), lineno=449, col_offset=12)], [], lineno=448, col_offset=8)], [], lineno=444, col_offset=4), FunctionDef('build_extension', arguments([Name('self', Param(), lineno=451, col_offset=24), Name('ext', Param(), lineno=451, col_offset=30)], None, None, []), [Assign([Name('sources', Store(), lineno=452, col_offset=8)], Attribute(Name('ext', Load(), lineno=452, col_offset=18), 'sources', Load(), lineno=452, col_offset=18), lineno=452, col_offset=8), If(BoolOp(Or(), [Compare(Name('sources', Load(), lineno=453, col_offset=11), [Is()], [Name('None', Load(), lineno=453, col_offset=22)], lineno=453, col_offset=11), Compare(Call(Name('type', Load(), lineno=453, col_offset=30), [Name('sources', Load(), lineno=453, col_offset=35)], [], None, None, lineno=453, col_offset=30), [NotIn()], [Tuple([Name('ListType', Load(), lineno=453, col_offset=52), Name('TupleType', Load(), lineno=453, col_offset=62)], Load(), lineno=453, col_offset=52)], lineno=453, col_offset=30)], lineno=453, col_offset=11), [Raise(Name('DistutilsSetupError', Load(), lineno=454, col_offset=18), BinOp(BinOp(BinOp(Str("in 'ext_modules' option (extension '%s'), ", lineno=455, col_offset=19), Add(), Str("'sources' must be present and must be ", lineno=456, col_offset=19), lineno=455, col_offset=19), Add(), Str('a list of source filenames', lineno=457, col_offset=19), lineno=456, col_offset=60), Mod(), Attribute(Name('ext', Load(), lineno=457, col_offset=51), 'name', Load(), lineno=457, col_offset=51), lineno=455, col_offset=18), None, lineno=454, col_offset=12)], [], lineno=453, col_offset=8), Assign([Name('sources', Store(), lineno=458, col_offset=8)], Call(Name('list', Load(), lineno=458, col_offset=18), [Name('sources', Load(), lineno=458, col_offset=23)], [], None, None, lineno=458, col_offset=18), lineno=458, col_offset=8), Assign([Name('ext_path', Store(), lineno=460, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=460, col_offset=19), 'get_ext_fullpath', Load(), lineno=460, col_offset=19), [Attribute(Name('ext', Load(), lineno=460, col_offset=41), 'name', Load(), lineno=460, col_offset=41)], [], None, None, lineno=460, col_offset=19), lineno=460, col_offset=8), Assign([Name('depends', Store(), lineno=461, col_offset=8)], BinOp(Name('sources', Load(), lineno=461, col_offset=18), Add(), Attribute(Name('ext', Load(), lineno=461, col_offset=28), 'depends', Load(), lineno=461, col_offset=28), lineno=461, col_offset=18), lineno=461, col_offset=8), If(UnaryOp(Not(), BoolOp(Or(), [Attribute(Name('self', Load(), lineno=462, col_offset=16), 'force', Load(), lineno=462, col_offset=16), Call(Name('newer_group', Load(), lineno=462, col_offset=30), [Name('depends', Load(), lineno=462, col_offset=42), Name('ext_path', Load(), lineno=462, col_offset=51), Str('newer', lineno=462, col_offset=61)], [], None, None, lineno=462, col_offset=30)], lineno=462, col_offset=16), lineno=462, col_offset=11), [Expr(Call(Attribute(Name('log', Load(), lineno=463, col_offset=12), 'debug', Load(), lineno=463, col_offset=12), [Str("skipping '%s' extension (up-to-date)", lineno=463, col_offset=22), Attribute(Name('ext', Load(), lineno=463, col_offset=62), 'name', Load(), lineno=463, col_offset=62)], [], None, None, lineno=463, col_offset=12), lineno=463, col_offset=12), Return(None, lineno=464, col_offset=12)], [Expr(Call(Attribute(Name('log', Load(), lineno=466, col_offset=12), 'info', Load(), lineno=466, col_offset=12), [Str("building '%s' extension", lineno=466, col_offset=21), Attribute(Name('ext', Load(), lineno=466, col_offset=48), 'name', Load(), lineno=466, col_offset=48)], [], None, None, lineno=466, col_offset=12), lineno=466, col_offset=12)], lineno=462, col_offset=8), Assign([Name('sources', Store(), lineno=471, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=471, col_offset=18), 'swig_sources', Load(), lineno=471, col_offset=18), [Name('sources', Load(), lineno=471, col_offset=36), Name('ext', Load(), lineno=471, col_offset=45)], [], None, None, lineno=471, col_offset=18), lineno=471, col_offset=8), Assign([Name('extra_args', Store(), lineno=487, col_offset=8)], BoolOp(Or(), [Attribute(Name('ext', Load(), lineno=487, col_offset=21), 'extra_compile_args', Load(), lineno=487, col_offset=21), List([], Load(), lineno=487, col_offset=47)], lineno=487, col_offset=21), lineno=487, col_offset=8), Assign([Name('macros', Store(), lineno=489, col_offset=8)], Subscript(Attribute(Name('ext', Load(), lineno=489, col_offset=17), 'define_macros', Load(), lineno=489, col_offset=17), Slice(None, None, None), Load(), lineno=489, col_offset=17), lineno=489, col_offset=8), For(Name('undef', Store(), lineno=490, col_offset=12), Attribute(Name('ext', Load(), lineno=490, col_offset=21), 'undef_macros', Load(), lineno=490, col_offset=21), [Expr(Call(Attribute(Name('macros', Load(), lineno=491, col_offset=12), 'append', Load(), lineno=491, col_offset=12), [Tuple([Name('undef', Load(), lineno=491, col_offset=27)], Load(), lineno=491, col_offset=27)], [], None, None, lineno=491, col_offset=12), lineno=491, col_offset=12)], [], lineno=490, col_offset=8), Assign([Name('objects', Store(), lineno=493, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=493, col_offset=18), 'compiler', Load(), lineno=493, col_offset=18), 'compile', Load(), lineno=493, col_offset=18), [Name('sources', Load(), lineno=493, col_offset=40)], [keyword('output_dir', Attribute(Name('self', Load(), lineno=494, col_offset=52), 'build_temp', Load(), lineno=494, col_offset=52)), keyword('macros', Name('macros', Load(), lineno=495, col_offset=48)), keyword('include_dirs', Attribute(Name('ext', Load(), lineno=496, col_offset=54), 'include_dirs', Load(), lineno=496, col_offset=54)), keyword('debug', Attribute(Name('self', Load(), lineno=497, col_offset=47), 'debug', Load(), lineno=497, col_offset=47)), keyword('extra_postargs', Name('extra_args', Load(), lineno=498, col_offset=56)), keyword('depends', Attribute(Name('ext', Load(), lineno=499, col_offset=49), 'depends', Load(), lineno=499, col_offset=49))], None, None, lineno=493, col_offset=18), lineno=493, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=510, col_offset=8), '_built_objects', Store(), lineno=510, col_offset=8)], Subscript(Name('objects', Load(), lineno=510, col_offset=30), Slice(None, None, None), Load(), lineno=510, col_offset=30), lineno=510, col_offset=8), If(Attribute(Name('ext', Load(), lineno=515, col_offset=11), 'extra_objects', Load(), lineno=515, col_offset=11), [Expr(Call(Attribute(Name('objects', Load(), lineno=516, col_offset=12), 'extend', Load(), lineno=516, col_offset=12), [Attribute(Name('ext', Load(), lineno=516, col_offset=27), 'extra_objects', Load(), lineno=516, col_offset=27)], [], None, None, lineno=516, col_offset=12), lineno=516, col_offset=12)], [], lineno=515, col_offset=8), Assign([Name('extra_args', Store(), lineno=517, col_offset=8)], BoolOp(Or(), [Attribute(Name('ext', Load(), lineno=517, col_offset=21), 'extra_link_args', Load(), lineno=517, col_offset=21), List([], Load(), lineno=517, col_offset=44)], lineno=517, col_offset=21), lineno=517, col_offset=8), Assign([Name('language', Store(), lineno=520, col_offset=8)], BoolOp(Or(), [Attribute(Name('ext', Load(), lineno=520, col_offset=19), 'language', Load(), lineno=520, col_offset=19), Call(Attribute(Attribute(Name('self', Load(), lineno=520, col_offset=35), 'compiler', Load(), lineno=520, col_offset=35), 'detect_language', Load(), lineno=520, col_offset=35), [Name('sources', Load(), lineno=520, col_offset=65)], [], None, None, lineno=520, col_offset=35)], lineno=520, col_offset=19), lineno=520, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=522, col_offset=8), 'compiler', Load(), lineno=522, col_offset=8), 'link_shared_object', Load(), lineno=522, col_offset=8), [Name('objects', Load(), lineno=523, col_offset=12), Name('ext_path', Load(), lineno=523, col_offset=21)], [keyword('libraries', Call(Attribute(Name('self', Load(), lineno=524, col_offset=22), 'get_libraries', Load(), lineno=524, col_offset=22), [Name('ext', Load(), lineno=524, col_offset=41)], [], None, None, lineno=524, col_offset=22)), keyword('library_dirs', Attribute(Name('ext', Load(), lineno=525, col_offset=25), 'library_dirs', Load(), lineno=525, col_offset=25)), keyword('runtime_library_dirs', Attribute(Name('ext', Load(), lineno=526, col_offset=33), 'runtime_library_dirs', Load(), lineno=526, col_offset=33)), keyword('extra_postargs', Name('extra_args', Load(), lineno=527, col_offset=27)), keyword('export_symbols', Call(Attribute(Name('self', Load(), lineno=528, col_offset=27), 'get_export_symbols', Load(), lineno=528, col_offset=27), [Name('ext', Load(), lineno=528, col_offset=51)], [], None, None, lineno=528, col_offset=27)), keyword('debug', Attribute(Name('self', Load(), lineno=529, col_offset=18), 'debug', Load(), lineno=529, col_offset=18)), keyword('build_temp', Attribute(Name('self', Load(), lineno=530, col_offset=23), 'build_temp', Load(), lineno=530, col_offset=23)), keyword('target_lang', Name('language', Load(), lineno=531, col_offset=24))], None, None, lineno=522, col_offset=8), lineno=522, col_offset=8)], [], lineno=451, col_offset=4), FunctionDef('swig_sources', arguments([Name('self', Param(), lineno=534, col_offset=22), Name('sources', Param(), lineno=534, col_offset=28), Name('extension', Param(), lineno=534, col_offset=37)], None, None, []), [Expr(Str("Walk the list of source files in 'sources', looking for SWIG\n        interface (.i) files.  Run SWIG on all that are found, and\n        return a modified 'sources' list with SWIG source files replaced\n        by the generated C (or C++) files.\n        ", lineno=540, col_offset=-1), lineno=540, col_offset=-1), Assign([Name('new_sources', Store(), lineno=542, col_offset=8)], List([], Load(), lineno=542, col_offset=22), lineno=542, col_offset=8), Assign([Name('swig_sources', Store(), lineno=543, col_offset=8)], List([], Load(), lineno=543, col_offset=23), lineno=543, col_offset=8), Assign([Name('swig_targets', Store(), lineno=544, col_offset=8)], Dict([], [], lineno=544, col_offset=23), lineno=544, col_offset=8), If(Attribute(Name('self', Load(), lineno=551, col_offset=11), 'swig_cpp', Load(), lineno=551, col_offset=11), [Expr(Call(Attribute(Name('log', Load(), lineno=552, col_offset=12), 'warn', Load(), lineno=552, col_offset=12), [Str('--swig-cpp is deprecated - use --swig-opts=-c++', lineno=552, col_offset=21)], [], None, None, lineno=552, col_offset=12), lineno=552, col_offset=12)], [], lineno=551, col_offset=8), If(BoolOp(Or(), [Attribute(Name('self', Load(), lineno=554, col_offset=11), 'swig_cpp', Load(), lineno=554, col_offset=11), Compare(Str('-c++', lineno=554, col_offset=29), [In()], [Attribute(Name('self', Load(), lineno=554, col_offset=39), 'swig_opts', Load(), lineno=554, col_offset=39)], lineno=554, col_offset=29), Compare(Str('-c++', lineno=555, col_offset=12), [In()], [Attribute(Name('extension', Load(), lineno=555, col_offset=22), 'swig_opts', Load(), lineno=555, col_offset=22)], lineno=555, col_offset=12)], lineno=554, col_offset=11), [Assign([Name('target_ext', Store(), lineno=556, col_offset=12)], Str('.cpp', lineno=556, col_offset=25), lineno=556, col_offset=12)], [Assign([Name('target_ext', Store(), lineno=558, col_offset=12)], Str('.c', lineno=558, col_offset=25), lineno=558, col_offset=12)], lineno=554, col_offset=8), For(Name('source', Store(), lineno=560, col_offset=12), Name('sources', Load(), lineno=560, col_offset=22), [Assign([Tuple([Name('base', Store(), lineno=561, col_offset=13), Name('ext', Store(), lineno=561, col_offset=19)], Store(), lineno=561, col_offset=13)], Call(Attribute(Attribute(Name('os', Load(), lineno=561, col_offset=26), 'path', Load(), lineno=561, col_offset=26), 'splitext', Load(), lineno=561, col_offset=26), [Name('source', Load(), lineno=561, col_offset=43)], [], None, None, lineno=561, col_offset=26), lineno=561, col_offset=12), If(Compare(Name('ext', Load(), lineno=562, col_offset=15), [Eq()], [Str('.i', lineno=562, col_offset=22)], lineno=562, col_offset=15), [Expr(Call(Attribute(Name('new_sources', Load(), lineno=563, col_offset=16), 'append', Load(), lineno=563, col_offset=16), [BinOp(BinOp(Name('base', Load(), lineno=563, col_offset=35), Add(), Str('_wrap', lineno=563, col_offset=42), lineno=563, col_offset=35), Add(), Name('target_ext', Load(), lineno=563, col_offset=52), lineno=563, col_offset=50)], [], None, None, lineno=563, col_offset=16), lineno=563, col_offset=16), Expr(Call(Attribute(Name('swig_sources', Load(), lineno=564, col_offset=16), 'append', Load(), lineno=564, col_offset=16), [Name('source', Load(), lineno=564, col_offset=36)], [], None, None, lineno=564, col_offset=16), lineno=564, col_offset=16), Assign([Subscript(Name('swig_targets', Load(), lineno=565, col_offset=16), Index(Name('source', Load(), lineno=565, col_offset=29)), Store(), lineno=565, col_offset=16)], Subscript(Name('new_sources', Load(), lineno=565, col_offset=39), Index(Num(-1, lineno=565, col_offset=52)), Load(), lineno=565, col_offset=39), lineno=565, col_offset=16)], [Expr(Call(Attribute(Name('new_sources', Load(), lineno=567, col_offset=16), 'append', Load(), lineno=567, col_offset=16), [Name('source', Load(), lineno=567, col_offset=35)], [], None, None, lineno=567, col_offset=16), lineno=567, col_offset=16)], lineno=562, col_offset=12)], [], lineno=560, col_offset=8), If(UnaryOp(Not(), Name('swig_sources', Load(), lineno=569, col_offset=15), lineno=569, col_offset=11), [Return(Name('new_sources', Load(), lineno=570, col_offset=19), lineno=570, col_offset=12)], [], lineno=569, col_offset=8), Assign([Name('swig', Store(), lineno=572, col_offset=8)], BoolOp(Or(), [Attribute(Name('self', Load(), lineno=572, col_offset=15), 'swig', Load(), lineno=572, col_offset=15), Call(Attribute(Name('self', Load(), lineno=572, col_offset=28), 'find_swig', Load(), lineno=572, col_offset=28), [], [], None, None, lineno=572, col_offset=28)], lineno=572, col_offset=15), lineno=572, col_offset=8), Assign([Name('swig_cmd', Store(), lineno=573, col_offset=8)], List([Name('swig', Load(), lineno=573, col_offset=20), Str('-python', lineno=573, col_offset=26)], Load(), lineno=573, col_offset=19), lineno=573, col_offset=8), Expr(Call(Attribute(Name('swig_cmd', Load(), lineno=574, col_offset=8), 'extend', Load(), lineno=574, col_offset=8), [Attribute(Name('self', Load(), lineno=574, col_offset=24), 'swig_opts', Load(), lineno=574, col_offset=24)], [], None, None, lineno=574, col_offset=8), lineno=574, col_offset=8), If(Attribute(Name('self', Load(), lineno=575, col_offset=11), 'swig_cpp', Load(), lineno=575, col_offset=11), [Expr(Call(Attribute(Name('swig_cmd', Load(), lineno=576, col_offset=12), 'append', Load(), lineno=576, col_offset=12), [Str('-c++', lineno=576, col_offset=28)], [], None, None, lineno=576, col_offset=12), lineno=576, col_offset=12)], [], lineno=575, col_offset=8), If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=579, col_offset=15), 'swig_opts', Load(), lineno=579, col_offset=15), lineno=579, col_offset=11), [For(Name('o', Store(), lineno=580, col_offset=16), Attribute(Name('extension', Load(), lineno=580, col_offset=21), 'swig_opts', Load(), lineno=580, col_offset=21), [Expr(Call(Attribute(Name('swig_cmd', Load(), lineno=581, col_offset=16), 'append', Load(), lineno=581, col_offset=16), [Name('o', Load(), lineno=581, col_offset=32)], [], None, None, lineno=581, col_offset=16), lineno=581, col_offset=16)], [], lineno=580, col_offset=12)], [], lineno=579, col_offset=8), For(Name('source', Store(), lineno=583, col_offset=12), Name('swig_sources', Load(), lineno=583, col_offset=22), [Assign([Name('target', Store(), lineno=584, col_offset=12)], Subscript(Name('swig_targets', Load(), lineno=584, col_offset=21), Index(Name('source', Load(), lineno=584, col_offset=34)), Load(), lineno=584, col_offset=21), lineno=584, col_offset=12), Expr(Call(Attribute(Name('log', Load(), lineno=585, col_offset=12), 'info', Load(), lineno=585, col_offset=12), [Str('swigging %s to %s', lineno=585, col_offset=21), Name('source', Load(), lineno=585, col_offset=42), Name('target', Load(), lineno=585, col_offset=50)], [], None, None, lineno=585, col_offset=12), lineno=585, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=586, col_offset=12), 'spawn', Load(), lineno=586, col_offset=12), [BinOp(Name('swig_cmd', Load(), lineno=586, col_offset=23), Add(), List([Str('-o', lineno=586, col_offset=35), Name('target', Load(), lineno=586, col_offset=41), Name('source', Load(), lineno=586, col_offset=49)], Load(), lineno=586, col_offset=34), lineno=586, col_offset=23)], [], None, None, lineno=586, col_offset=12), lineno=586, col_offset=12)], [], lineno=583, col_offset=8), Return(Name('new_sources', Load(), lineno=588, col_offset=15), lineno=588, col_offset=8)], [], lineno=534, col_offset=4), FunctionDef('find_swig', arguments([Name('self', Param(), lineno=592, col_offset=19)], None, None, []), [Expr(Str('Return the name of the SWIG executable.  On Unix, this is\n        just "swig" -- it should be in the PATH.  Tries a bit harder on\n        Windows.\n        ', lineno=596, col_offset=-1), lineno=596, col_offset=-1), If(Compare(Attribute(Name('os', Load(), lineno=598, col_offset=11), 'name', Load(), lineno=598, col_offset=11), [Eq()], [Str('posix', lineno=598, col_offset=22)], lineno=598, col_offset=11), [Return(Str('swig', lineno=599, col_offset=19), lineno=599, col_offset=12)], [If(Compare(Attribute(Name('os', Load(), lineno=600, col_offset=13), 'name', Load(), lineno=600, col_offset=13), [Eq()], [Str('nt', lineno=600, col_offset=24)], lineno=600, col_offset=13), [For(Name('vers', Store(), lineno=605, col_offset=16), Tuple([Str('1.3', lineno=605, col_offset=25), Str('1.2', lineno=605, col_offset=32), Str('1.1', lineno=605, col_offset=39)], Load(), lineno=605, col_offset=25), [Assign([Name('fn', Store(), lineno=606, col_offset=16)], Call(Attribute(Attribute(Name('os', Load(), lineno=606, col_offset=21), 'path', Load(), lineno=606, col_offset=21), 'join', Load(), lineno=606, col_offset=21), [BinOp(Str('c:\\swig%s', lineno=606, col_offset=34), Mod(), Name('vers', Load(), lineno=606, col_offset=49), lineno=606, col_offset=34), Str('swig.exe', lineno=606, col_offset=55)], [], None, None, lineno=606, col_offset=21), lineno=606, col_offset=16), If(Call(Attribute(Attribute(Name('os', Load(), lineno=607, col_offset=19), 'path', Load(), lineno=607, col_offset=19), 'isfile', Load(), lineno=607, col_offset=19), [Name('fn', Load(), lineno=607, col_offset=34)], [], None, None, lineno=607, col_offset=19), [Return(Name('fn', Load(), lineno=608, col_offset=27), lineno=608, col_offset=20)], [], lineno=607, col_offset=16)], [Return(Str('swig.exe', lineno=610, col_offset=23), lineno=610, col_offset=16)], lineno=605, col_offset=12)], [If(Compare(Attribute(Name('os', Load(), lineno=612, col_offset=13), 'name', Load(), lineno=612, col_offset=13), [Eq()], [Str('os2', lineno=612, col_offset=24)], lineno=612, col_offset=13), [Return(Str('swig.exe', lineno=614, col_offset=19), lineno=614, col_offset=12)], [Raise(Name('DistutilsPlatformError', Load(), lineno=617, col_offset=18), BinOp(Str("I don't know how to find (much less run) SWIG on platform '%s'", lineno=618, col_offset=19), Mod(), Attribute(Name('os', Load(), lineno=619, col_offset=41), 'name', Load(), lineno=619, col_offset=41), lineno=618, col_offset=18), None, lineno=617, col_offset=12)], lineno=612, col_offset=13)], lineno=600, col_offset=13)], lineno=598, col_offset=8)], [], lineno=592, col_offset=4), FunctionDef('get_ext_fullpath', arguments([Name('self', Param(), lineno=625, col_offset=25), Name('ext_name', Param(), lineno=625, col_offset=31)], None, None, []), [Expr(Str('Returns the path of the filename for a given extension.\n\n        The file is located in `build_lib` or directly in the package\n        (inplace option).\n        ', lineno=630, col_offset=-1), lineno=630, col_offset=-1), Assign([Name('all_dots', Store(), lineno=632, col_offset=8)], Call(Attribute(Name('string', Load(), lineno=632, col_offset=19), 'maketrans', Load(), lineno=632, col_offset=19), [BinOp(Str('/', lineno=632, col_offset=36), Add(), Attribute(Name('os', Load(), lineno=632, col_offset=40), 'sep', Load(), lineno=632, col_offset=40), lineno=632, col_offset=36), Str('..', lineno=632, col_offset=48)], [], None, None, lineno=632, col_offset=19), lineno=632, col_offset=8), Assign([Name('ext_name', Store(), lineno=633, col_offset=8)], Call(Attribute(Name('ext_name', Load(), lineno=633, col_offset=19), 'translate', Load(), lineno=633, col_offset=19), [Name('all_dots', Load(), lineno=633, col_offset=38)], [], None, None, lineno=633, col_offset=19), lineno=633, col_offset=8), Assign([Name('fullname', Store(), lineno=635, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=635, col_offset=19), 'get_ext_fullname', Load(), lineno=635, col_offset=19), [Name('ext_name', Load(), lineno=635, col_offset=41)], [], None, None, lineno=635, col_offset=19), lineno=635, col_offset=8), Assign([Name('modpath', Store(), lineno=636, col_offset=8)], Call(Attribute(Name('fullname', Load(), lineno=636, col_offset=18), 'split', Load(), lineno=636, col_offset=18), [Str('.', lineno=636, col_offset=33)], [], None, None, lineno=636, col_offset=18), lineno=636, col_offset=8), Assign([Name('filename', Store(), lineno=637, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=637, col_offset=19), 'get_ext_filename', Load(), lineno=637, col_offset=19), [Name('ext_name', Load(), lineno=637, col_offset=41)], [], None, None, lineno=637, col_offset=19), lineno=637, col_offset=8), Assign([Name('filename', Store(), lineno=638, col_offset=8)], Subscript(Call(Attribute(Attribute(Name('os', Load(), lineno=638, col_offset=19), 'path', Load(), lineno=638, col_offset=19), 'split', Load(), lineno=638, col_offset=19), [Name('filename', Load(), lineno=638, col_offset=33)], [], None, None, lineno=638, col_offset=19), Index(Num(-1, lineno=638, col_offset=44)), Load(), lineno=638, col_offset=19), lineno=638, col_offset=8), If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=640, col_offset=15), 'inplace', Load(), lineno=640, col_offset=15), lineno=640, col_offset=11), [Assign([Name('filename', Store(), lineno=644, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=644, col_offset=23), 'path', Load(), lineno=644, col_offset=23), 'join', Load(), lineno=644, col_offset=23), [], [], BinOp(Subscript(Name('modpath', Load(), lineno=644, col_offset=37), Slice(None, Num(-1, lineno=644, col_offset=47), None), Load(), lineno=644, col_offset=37), Add(), List([Name('filename', Load(), lineno=644, col_offset=51)], Load(), lineno=644, col_offset=50), lineno=644, col_offset=37), None, lineno=644, col_offset=23), lineno=644, col_offset=12), Return(Call(Attribute(Attribute(Name('os', Load(), lineno=645, col_offset=19), 'path', Load(), lineno=645, col_offset=19), 'join', Load(), lineno=645, col_offset=19), [Attribute(Name('self', Load(), lineno=645, col_offset=32), 'build_lib', Load(), lineno=645, col_offset=32), Name('filename', Load(), lineno=645, col_offset=48)], [], None, None, lineno=645, col_offset=19), lineno=645, col_offset=12)], [], lineno=640, col_offset=8), Assign([Name('package', Store(), lineno=649, col_offset=8)], Call(Attribute(Str('.', lineno=649, col_offset=18), 'join', Load(), lineno=649, col_offset=18), [Subscript(Name('modpath', Load(), lineno=649, col_offset=27), Slice(Num(0, lineno=649, col_offset=35), Num(-1, lineno=649, col_offset=38), None), Load(), lineno=649, col_offset=27)], [], None, None, lineno=649, col_offset=18), lineno=649, col_offset=8), Assign([Name('build_py', Store(), lineno=650, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=650, col_offset=19), 'get_finalized_command', Load(), lineno=650, col_offset=19), [Str('build_py', lineno=650, col_offset=46)], [], None, None, lineno=650, col_offset=19), lineno=650, col_offset=8), Assign([Name('package_dir', Store(), lineno=651, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=651, col_offset=22), 'path', Load(), lineno=651, col_offset=22), 'abspath', Load(), lineno=651, col_offset=22), [Call(Attribute(Name('build_py', Load(), lineno=651, col_offset=38), 'get_package_dir', Load(), lineno=651, col_offset=38), [Name('package', Load(), lineno=651, col_offset=63)], [], None, None, lineno=651, col_offset=38)], [], None, None, lineno=651, col_offset=22), lineno=651, col_offset=8), Return(Call(Attribute(Attribute(Name('os', Load(), lineno=655, col_offset=15), 'path', Load(), lineno=655, col_offset=15), 'join', Load(), lineno=655, col_offset=15), [Name('package_dir', Load(), lineno=655, col_offset=28), Name('filename', Load(), lineno=655, col_offset=41)], [], None, None, lineno=655, col_offset=15), lineno=655, col_offset=8)], [], lineno=625, col_offset=4), FunctionDef('get_ext_fullname', arguments([Name('self', Param(), lineno=657, col_offset=25), Name('ext_name', Param(), lineno=657, col_offset=31)], None, None, []), [Expr(Str('Returns the fullname of a given extension name.\n\n        Adds the `package.` prefix', lineno=660, col_offset=-1), lineno=660, col_offset=-1), If(Compare(Attribute(Name('self', Load(), lineno=661, col_offset=11), 'package', Load(), lineno=661, col_offset=11), [Is()], [Name('None', Load(), lineno=661, col_offset=27)], lineno=661, col_offset=11), [Return(Name('ext_name', Load(), lineno=662, col_offset=19), lineno=662, col_offset=12)], [Return(BinOp(BinOp(Attribute(Name('self', Load(), lineno=664, col_offset=19), 'package', Load(), lineno=664, col_offset=19), Add(), Str('.', lineno=664, col_offset=34), lineno=664, col_offset=19), Add(), Name('ext_name', Load(), lineno=664, col_offset=40), lineno=664, col_offset=38), lineno=664, col_offset=12)], lineno=661, col_offset=8)], [], lineno=657, col_offset=4), FunctionDef('get_ext_filename', arguments([Name('self', Param(), lineno=666, col_offset=25), Name('ext_name', Param(), lineno=666, col_offset=31)], None, None, []), [Expr(Str('Convert the name of an extension (eg. "foo.bar") into the name\n        of the file from which it will be loaded (eg. "foo/bar.so", or\n        "foo\\bar.pyd").\n        ', lineno=670, col_offset=-1), lineno=670, col_offset=-1), ImportFrom('distutils.sysconfig', [alias('get_config_var', None)], 0, lineno=671, col_offset=8), Assign([Name('ext_path', Store(), lineno=672, col_offset=8)], Call(Attribute(Name('string', Load(), lineno=672, col_offset=19), 'split', Load(), lineno=672, col_offset=19), [Name('ext_name', Load(), lineno=672, col_offset=32), Str('.', lineno=672, col_offset=42)], [], None, None, lineno=672, col_offset=19), lineno=672, col_offset=8), If(Compare(Attribute(Name('os', Load(), lineno=674, col_offset=11), 'name', Load(), lineno=674, col_offset=11), [Eq()], [Str('os2', lineno=674, col_offset=22)], lineno=674, col_offset=11), [Assign([Subscript(Name('ext_path', Load(), lineno=675, col_offset=12), Index(BinOp(Call(Name('len', Load(), lineno=675, col_offset=21), [Name('ext_path', Load(), lineno=675, col_offset=25)], [], None, None, lineno=675, col_offset=21), Sub(), Num(1, lineno=675, col_offset=37), lineno=675, col_offset=21)), Store(), lineno=675, col_offset=12)], Subscript(Subscript(Name('ext_path', Load(), lineno=675, col_offset=42), Index(BinOp(Call(Name('len', Load(), lineno=675, col_offset=51), [Name('ext_path', Load(), lineno=675, col_offset=55)], [], None, None, lineno=675, col_offset=51), Sub(), Num(1, lineno=675, col_offset=67), lineno=675, col_offset=51)), Load(), lineno=675, col_offset=42), Slice(None, Num(8, lineno=675, col_offset=71), None), Load(), lineno=675, col_offset=42), lineno=675, col_offset=12)], [], lineno=674, col_offset=8), Assign([Name('so_ext', Store(), lineno=677, col_offset=8)], Call(Name('get_config_var', Load(), lineno=677, col_offset=17), [Str('SO', lineno=677, col_offset=32)], [], None, None, lineno=677, col_offset=17), lineno=677, col_offset=8), If(BoolOp(And(), [Compare(Attribute(Name('os', Load(), lineno=678, col_offset=11), 'name', Load(), lineno=678, col_offset=11), [Eq()], [Str('nt', lineno=678, col_offset=22)], lineno=678, col_offset=11), Attribute(Name('self', Load(), lineno=678, col_offset=31), 'debug', Load(), lineno=678, col_offset=31)], lineno=678, col_offset=11), [Return(BinOp(BinOp(Call(Attribute(Attribute(Name('os', Load(), lineno=679, col_offset=19), 'path', Load(), lineno=679, col_offset=19), 'join', Load(), lineno=679, col_offset=19), [], [], Name('ext_path', Load(), lineno=679, col_offset=33), None, lineno=679, col_offset=19), Add(), Str('_d', lineno=679, col_offset=45), lineno=679, col_offset=19), Add(), Name('so_ext', Load(), lineno=679, col_offset=52), lineno=679, col_offset=50), lineno=679, col_offset=12)], [], lineno=678, col_offset=8), Return(BinOp(Call(Attribute(Attribute(Name('os', Load(), lineno=680, col_offset=15), 'path', Load(), lineno=680, col_offset=15), 'join', Load(), lineno=680, col_offset=15), [], [], Name('ext_path', Load(), lineno=680, col_offset=29), None, lineno=680, col_offset=15), Add(), Name('so_ext', Load(), lineno=680, col_offset=41), lineno=680, col_offset=15), lineno=680, col_offset=8)], [], lineno=666, col_offset=4), FunctionDef('get_export_symbols', arguments([Name('self', Param(), lineno=682, col_offset=28), Name('ext', Param(), lineno=682, col_offset=34)], None, None, []), [Expr(Str('Return the list of symbols that a shared extension has to\n        export.  This either uses \'ext.export_symbols\' or, if it\'s not\n        provided, "init" + module_name.  Only relevant on Windows, where\n        the .pyd file (DLL) must export the module "init" function.\n        ', lineno=687, col_offset=-1), lineno=687, col_offset=-1), Assign([Name('initfunc_name', Store(), lineno=688, col_offset=8)], BinOp(Str('init', lineno=688, col_offset=24), Add(), Subscript(Call(Attribute(Attribute(Name('ext', Load(), lineno=688, col_offset=33), 'name', Load(), lineno=688, col_offset=33), 'split', Load(), lineno=688, col_offset=33), [Str('.', lineno=688, col_offset=48)], [], None, None, lineno=688, col_offset=33), Index(Num(-1, lineno=688, col_offset=54)), Load(), lineno=688, col_offset=33), lineno=688, col_offset=24), lineno=688, col_offset=8), If(Compare(Name('initfunc_name', Load(), lineno=689, col_offset=11), [NotIn()], [Attribute(Name('ext', Load(), lineno=689, col_offset=32), 'export_symbols', Load(), lineno=689, col_offset=32)], lineno=689, col_offset=11), [Expr(Call(Attribute(Attribute(Name('ext', Load(), lineno=690, col_offset=12), 'export_symbols', Load(), lineno=690, col_offset=12), 'append', Load(), lineno=690, col_offset=12), [Name('initfunc_name', Load(), lineno=690, col_offset=38)], [], None, None, lineno=690, col_offset=12), lineno=690, col_offset=12)], [], lineno=689, col_offset=8), Return(Attribute(Name('ext', Load(), lineno=691, col_offset=15), 'export_symbols', Load(), lineno=691, col_offset=15), lineno=691, col_offset=8)], [], lineno=682, col_offset=4), FunctionDef('get_libraries', arguments([Name('self', Param(), lineno=693, col_offset=23), Name('ext', Param(), lineno=693, col_offset=29)], None, None, []), [Expr(Str("Return the list of libraries to link against when building a\n        shared extension.  On most platforms, this is just 'ext.libraries';\n        on Windows and OS/2, we add the Python library (eg. python20.dll).\n        ", lineno=697, col_offset=-1), lineno=697, col_offset=-1), If(Compare(Attribute(Name('sys', Load(), lineno=703, col_offset=11), 'platform', Load(), lineno=703, col_offset=11), [Eq()], [Str('win32', lineno=703, col_offset=27)], lineno=703, col_offset=11), [ImportFrom('distutils.msvccompiler', [alias('MSVCCompiler', None)], 0, lineno=704, col_offset=12), If(UnaryOp(Not(), Call(Name('isinstance', Load(), lineno=705, col_offset=19), [Attribute(Name('self', Load(), lineno=705, col_offset=30), 'compiler', Load(), lineno=705, col_offset=30), Name('MSVCCompiler', Load(), lineno=705, col_offset=45)], [], None, None, lineno=705, col_offset=19), lineno=705, col_offset=15), [Assign([Name('template', Store(), lineno=706, col_offset=16)], Str('python%d%d', lineno=706, col_offset=27), lineno=706, col_offset=16), If(Attribute(Name('self', Load(), lineno=707, col_offset=19), 'debug', Load(), lineno=707, col_offset=19), [Assign([Name('template', Store(), lineno=708, col_offset=20)], BinOp(Name('template', Load(), lineno=708, col_offset=31), Add(), Str('_d', lineno=708, col_offset=42), lineno=708, col_offset=31), lineno=708, col_offset=20)], [], lineno=707, col_offset=16), Assign([Name('pythonlib', Store(), lineno=709, col_offset=16)], BinOp(Name('template', Load(), lineno=709, col_offset=29), Mod(), Tuple([BinOp(Attribute(Name('sys', Load(), lineno=710, col_offset=24), 'hexversion', Load(), lineno=710, col_offset=24), RShift(), Num(24, lineno=710, col_offset=42), lineno=710, col_offset=24), BinOp(BinOp(Attribute(Name('sys', Load(), lineno=710, col_offset=47), 'hexversion', Load(), lineno=710, col_offset=47), RShift(), Num(16, lineno=710, col_offset=65), lineno=710, col_offset=47), BitAnd(), Num(255, lineno=710, col_offset=71), lineno=710, col_offset=46)], Load(), lineno=710, col_offset=24), lineno=709, col_offset=29), lineno=709, col_offset=16), Return(BinOp(Attribute(Name('ext', Load(), lineno=713, col_offset=23), 'libraries', Load(), lineno=713, col_offset=23), Add(), List([Name('pythonlib', Load(), lineno=713, col_offset=40)], Load(), lineno=713, col_offset=39), lineno=713, col_offset=23), lineno=713, col_offset=16)], [Return(Attribute(Name('ext', Load(), lineno=715, col_offset=23), 'libraries', Load(), lineno=715, col_offset=23), lineno=715, col_offset=16)], lineno=705, col_offset=12)], [If(Compare(Attribute(Name('sys', Load(), lineno=716, col_offset=13), 'platform', Load(), lineno=716, col_offset=13), [Eq()], [Str('os2emx', lineno=716, col_offset=29)], lineno=716, col_offset=13), [Assign([Name('template', Store(), lineno=719, col_offset=12)], Str('python%d%d', lineno=719, col_offset=23), lineno=719, col_offset=12), Assign([Name('pythonlib', Store(), lineno=724, col_offset=12)], BinOp(Name('template', Load(), lineno=724, col_offset=25), Mod(), Tuple([BinOp(Attribute(Name('sys', Load(), lineno=725, col_offset=20), 'hexversion', Load(), lineno=725, col_offset=20), RShift(), Num(24, lineno=725, col_offset=38), lineno=725, col_offset=20), BinOp(BinOp(Attribute(Name('sys', Load(), lineno=725, col_offset=43), 'hexversion', Load(), lineno=725, col_offset=43), RShift(), Num(16, lineno=725, col_offset=61), lineno=725, col_offset=43), BitAnd(), Num(255, lineno=725, col_offset=67), lineno=725, col_offset=42)], Load(), lineno=725, col_offset=20), lineno=724, col_offset=25), lineno=724, col_offset=12), Return(BinOp(Attribute(Name('ext', Load(), lineno=728, col_offset=19), 'libraries', Load(), lineno=728, col_offset=19), Add(), List([Name('pythonlib', Load(), lineno=728, col_offset=36)], Load(), lineno=728, col_offset=35), lineno=728, col_offset=19), lineno=728, col_offset=12)], [If(Compare(Subscript(Attribute(Name('sys', Load(), lineno=729, col_offset=13), 'platform', Load(), lineno=729, col_offset=13), Slice(None, Num(6, lineno=729, col_offset=27), None), Load(), lineno=729, col_offset=13), [Eq()], [Str('cygwin', lineno=729, col_offset=33)], lineno=729, col_offset=13), [Assign([Name('template', Store(), lineno=730, col_offset=12)], Str('python%d.%d', lineno=730, col_offset=23), lineno=730, col_offset=12), Assign([Name('pythonlib', Store(), lineno=731, col_offset=12)], BinOp(Name('template', Load(), lineno=731, col_offset=25), Mod(), Tuple([BinOp(Attribute(Name('sys', Load(), lineno=732, col_offset=20), 'hexversion', Load(), lineno=732, col_offset=20), RShift(), Num(24, lineno=732, col_offset=38), lineno=732, col_offset=20), BinOp(BinOp(Attribute(Name('sys', Load(), lineno=732, col_offset=43), 'hexversion', Load(), lineno=732, col_offset=43), RShift(), Num(16, lineno=732, col_offset=61), lineno=732, col_offset=43), BitAnd(), Num(255, lineno=732, col_offset=67), lineno=732, col_offset=42)], Load(), lineno=732, col_offset=20), lineno=731, col_offset=25), lineno=731, col_offset=12), Return(BinOp(Attribute(Name('ext', Load(), lineno=735, col_offset=19), 'libraries', Load(), lineno=735, col_offset=19), Add(), List([Name('pythonlib', Load(), lineno=735, col_offset=36)], Load(), lineno=735, col_offset=35), lineno=735, col_offset=19), lineno=735, col_offset=12)], [If(Compare(Subscript(Attribute(Name('sys', Load(), lineno=736, col_offset=13), 'platform', Load(), lineno=736, col_offset=13), Slice(None, Num(6, lineno=736, col_offset=27), None), Load(), lineno=736, col_offset=13), [Eq()], [Str('atheos', lineno=736, col_offset=33)], lineno=736, col_offset=13), [ImportFrom('distutils', [alias('sysconfig', None)], 0, lineno=737, col_offset=12), Assign([Name('template', Store(), lineno=739, col_offset=12)], Str('python%d.%d', lineno=739, col_offset=23), lineno=739, col_offset=12), Assign([Name('pythonlib', Store(), lineno=740, col_offset=12)], BinOp(Name('template', Load(), lineno=740, col_offset=25), Mod(), Tuple([BinOp(Attribute(Name('sys', Load(), lineno=741, col_offset=20), 'hexversion', Load(), lineno=741, col_offset=20), RShift(), Num(24, lineno=741, col_offset=38), lineno=741, col_offset=20), BinOp(BinOp(Attribute(Name('sys', Load(), lineno=741, col_offset=43), 'hexversion', Load(), lineno=741, col_offset=43), RShift(), Num(16, lineno=741, col_offset=61), lineno=741, col_offset=43), BitAnd(), Num(255, lineno=741, col_offset=67), lineno=741, col_offset=42)], Load(), lineno=741, col_offset=20), lineno=740, col_offset=25), lineno=740, col_offset=12), Assign([Name('extra', Store(), lineno=743, col_offset=12)], List([], Load(), lineno=743, col_offset=20), lineno=743, col_offset=12), For(Name('lib', Store(), lineno=744, col_offset=16), Call(Attribute(Call(Attribute(Name('sysconfig', Load(), lineno=744, col_offset=23), 'get_config_var', Load(), lineno=744, col_offset=23), [Str('SHLIBS', lineno=744, col_offset=48)], [], None, None, lineno=744, col_offset=23), 'split', Load(), lineno=744, col_offset=23), [], [], None, None, lineno=744, col_offset=23), [If(Call(Attribute(Name('lib', Load(), lineno=745, col_offset=19), 'startswith', Load(), lineno=745, col_offset=19), [Str('-l', lineno=745, col_offset=34)], [], None, None, lineno=745, col_offset=19), [Expr(Call(Attribute(Name('extra', Load(), lineno=746, col_offset=20), 'append', Load(), lineno=746, col_offset=20), [Subscript(Name('lib', Load(), lineno=746, col_offset=33), Slice(Num(2, lineno=746, col_offset=37), None, None), Load(), lineno=746, col_offset=33)], [], None, None, lineno=746, col_offset=20), lineno=746, col_offset=20)], [Expr(Call(Attribute(Name('extra', Load(), lineno=748, col_offset=20), 'append', Load(), lineno=748, col_offset=20), [Name('lib', Load(), lineno=748, col_offset=33)], [], None, None, lineno=748, col_offset=20), lineno=748, col_offset=20)], lineno=745, col_offset=16)], [], lineno=744, col_offset=12), Return(BinOp(BinOp(Attribute(Name('ext', Load(), lineno=751, col_offset=19), 'libraries', Load(), lineno=751, col_offset=19), Add(), List([Name('pythonlib', Load(), lineno=751, col_offset=36), Str('m', lineno=751, col_offset=47)], Load(), lineno=751, col_offset=35), lineno=751, col_offset=19), Add(), Name('extra', Load(), lineno=751, col_offset=54), lineno=751, col_offset=52), lineno=751, col_offset=12)], [If(Compare(Attribute(Name('sys', Load(), lineno=753, col_offset=13), 'platform', Load(), lineno=753, col_offset=13), [Eq()], [Str('darwin', lineno=753, col_offset=29)], lineno=753, col_offset=13), [Return(Attribute(Name('ext', Load(), lineno=755, col_offset=19), 'libraries', Load(), lineno=755, col_offset=19), lineno=755, col_offset=12)], [If(Compare(Subscript(Attribute(Name('sys', Load(), lineno=756, col_offset=13), 'platform', Load(), lineno=756, col_offset=13), Slice(None, Num(3, lineno=756, col_offset=27), None), Load(), lineno=756, col_offset=13), [Eq()], [Str('aix', lineno=756, col_offset=33)], lineno=756, col_offset=13), [Return(Attribute(Name('ext', Load(), lineno=758, col_offset=19), 'libraries', Load(), lineno=758, col_offset=19), lineno=758, col_offset=12)], [ImportFrom('distutils', [alias('sysconfig', None)], 0, lineno=760, col_offset=12), If(Call(Attribute(Name('sysconfig', Load(), lineno=761, col_offset=15), 'get_config_var', Load(), lineno=761, col_offset=15), [Str('Py_ENABLE_SHARED', lineno=761, col_offset=40)], [], None, None, lineno=761, col_offset=15), [Assign([Name('template', Store(), lineno=762, col_offset=16)], Str('python%d.%d', lineno=762, col_offset=27), lineno=762, col_offset=16), Assign([Name('pythonlib', Store(), lineno=763, col_offset=16)], BinOp(Name('template', Load(), lineno=763, col_offset=29), Mod(), Tuple([BinOp(Attribute(Name('sys', Load(), lineno=764, col_offset=30), 'hexversion', Load(), lineno=764, col_offset=30), RShift(), Num(24, lineno=764, col_offset=48), lineno=764, col_offset=30), BinOp(BinOp(Attribute(Name('sys', Load(), lineno=764, col_offset=53), 'hexversion', Load(), lineno=764, col_offset=53), RShift(), Num(16, lineno=764, col_offset=71), lineno=764, col_offset=53), BitAnd(), Num(255, lineno=764, col_offset=77), lineno=764, col_offset=52)], Load(), lineno=764, col_offset=30), lineno=763, col_offset=29), lineno=763, col_offset=16), Return(BinOp(Attribute(Name('ext', Load(), lineno=765, col_offset=23), 'libraries', Load(), lineno=765, col_offset=23), Add(), List([Name('pythonlib', Load(), lineno=765, col_offset=40)], Load(), lineno=765, col_offset=39), lineno=765, col_offset=23), lineno=765, col_offset=16)], [Return(Attribute(Name('ext', Load(), lineno=767, col_offset=23), 'libraries', Load(), lineno=767, col_offset=23), lineno=767, col_offset=16)], lineno=761, col_offset=12)], lineno=756, col_offset=13)], lineno=753, col_offset=13)], lineno=736, col_offset=13)], lineno=729, col_offset=13)], lineno=716, col_offset=13)], lineno=703, col_offset=8)], [], lineno=693, col_offset=4)], [], lineno=37, col_offset=0)])
