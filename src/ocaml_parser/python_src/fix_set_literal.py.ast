Module([Expr(Str('\nOptional fixer to transform set() calls to set literals.\n', lineno=3, col_offset=-1), lineno=3, col_offset=-1), ImportFrom('lib2to3', [alias('fixer_base', None), alias('pytree', None)], 0, lineno=7, col_offset=0), ImportFrom('lib2to3.fixer_util', [alias('token', None), alias('syms', None)], 0, lineno=8, col_offset=0), ClassDef('FixSetLiteral', [Attribute(Name('fixer_base', Load(), lineno=12, col_offset=20), 'BaseFix', Load(), lineno=12, col_offset=20)], [Assign([Name('BM_compatible', Store(), lineno=14, col_offset=4)], Name('True', Load(), lineno=14, col_offset=20), lineno=14, col_offset=4), Assign([Name('explicit', Store(), lineno=15, col_offset=4)], Name('True', Load(), lineno=15, col_offset=15), lineno=15, col_offset=4), Assign([Name('PATTERN', Store(), lineno=17, col_offset=4)], Str("power< 'set' trailer< '('\n                     (atom=atom< '[' (items=listmaker< any ((',' any)* [',']) >\n                                |\n                                single=any) ']' >\n                     |\n                     atom< '(' items=testlist_gexp< any ((',' any)* [',']) > ')' >\n                     )\n                     ')' > >\n              ", lineno=25, col_offset=-1), lineno=17, col_offset=4), FunctionDef('transform', arguments([Name('self', Param(), lineno=27, col_offset=18), Name('node', Param(), lineno=27, col_offset=24), Name('results', Param(), lineno=27, col_offset=30)], None, None, []), [Assign([Name('single', Store(), lineno=28, col_offset=8)], Call(Attribute(Name('results', Load(), lineno=28, col_offset=17), 'get', Load(), lineno=28, col_offset=17), [Str('single', lineno=28, col_offset=29)], [], None, None, lineno=28, col_offset=17), lineno=28, col_offset=8), If(Name('single', Load(), lineno=29, col_offset=11), [Assign([Name('fake', Store(), lineno=31, col_offset=12)], Call(Attribute(Name('pytree', Load(), lineno=31, col_offset=19), 'Node', Load(), lineno=31, col_offset=19), [Attribute(Name('syms', Load(), lineno=31, col_offset=31), 'listmaker', Load(), lineno=31, col_offset=31), List([Call(Attribute(Name('single', Load(), lineno=31, col_offset=48), 'clone', Load(), lineno=31, col_offset=48), [], [], None, None, lineno=31, col_offset=48)], Load(), lineno=31, col_offset=47)], [], None, None, lineno=31, col_offset=19), lineno=31, col_offset=12), Expr(Call(Attribute(Name('single', Load(), lineno=32, col_offset=12), 'replace', Load(), lineno=32, col_offset=12), [Name('fake', Load(), lineno=32, col_offset=27)], [], None, None, lineno=32, col_offset=12), lineno=32, col_offset=12), Assign([Name('items', Store(), lineno=33, col_offset=12)], Name('fake', Load(), lineno=33, col_offset=20), lineno=33, col_offset=12)], [Assign([Name('items', Store(), lineno=35, col_offset=12)], Subscript(Name('results', Load(), lineno=35, col_offset=20), Index(Str('items', lineno=35, col_offset=28)), Load(), lineno=35, col_offset=20), lineno=35, col_offset=12)], lineno=29, col_offset=8), Assign([Name('literal', Store(), lineno=38, col_offset=8)], List([Call(Attribute(Name('pytree', Load(), lineno=38, col_offset=19), 'Leaf', Load(), lineno=38, col_offset=19), [Attribute(Name('token', Load(), lineno=38, col_offset=31), 'LBRACE', Load(), lineno=38, col_offset=31), Str(u'{', lineno=38, col_offset=45)], [], None, None, lineno=38, col_offset=19)], Load(), lineno=38, col_offset=18), lineno=38, col_offset=8), Expr(Call(Attribute(Name('literal', Load(), lineno=39, col_offset=8), 'extend', Load(), lineno=39, col_offset=8), [GeneratorExp(Call(Attribute(Name('n', Load(), lineno=39, col_offset=23), 'clone', Load(), lineno=39, col_offset=23), [], [], None, None, lineno=39, col_offset=23), [comprehension(Name('n', Store(), lineno=39, col_offset=37), Attribute(Name('items', Load(), lineno=39, col_offset=42), 'children', Load(), lineno=39, col_offset=42), [])], lineno=39, col_offset=23)], [], None, None, lineno=39, col_offset=8), lineno=39, col_offset=8), Expr(Call(Attribute(Name('literal', Load(), lineno=40, col_offset=8), 'append', Load(), lineno=40, col_offset=8), [Call(Attribute(Name('pytree', Load(), lineno=40, col_offset=23), 'Leaf', Load(), lineno=40, col_offset=23), [Attribute(Name('token', Load(), lineno=40, col_offset=35), 'RBRACE', Load(), lineno=40, col_offset=35), Str(u'}', lineno=40, col_offset=49)], [], None, None, lineno=40, col_offset=23)], [], None, None, lineno=40, col_offset=8), lineno=40, col_offset=8), Assign([Attribute(Subscript(Name('literal', Load(), lineno=42, col_offset=8), Index(Num(-1, lineno=42, col_offset=17)), Load(), lineno=42, col_offset=8), 'prefix', Store(), lineno=42, col_offset=8)], Attribute(Attribute(Name('items', Load(), lineno=42, col_offset=29), 'next_sibling', Load(), lineno=42, col_offset=29), 'prefix', Load(), lineno=42, col_offset=29), lineno=42, col_offset=8), Assign([Name('maker', Store(), lineno=43, col_offset=8)], Call(Attribute(Name('pytree', Load(), lineno=43, col_offset=16), 'Node', Load(), lineno=43, col_offset=16), [Attribute(Name('syms', Load(), lineno=43, col_offset=28), 'dictsetmaker', Load(), lineno=43, col_offset=28), Name('literal', Load(), lineno=43, col_offset=47)], [], None, None, lineno=43, col_offset=16), lineno=43, col_offset=8), Assign([Attribute(Name('maker', Load(), lineno=44, col_offset=8), 'prefix', Store(), lineno=44, col_offset=8)], Attribute(Name('node', Load(), lineno=44, col_offset=23), 'prefix', Load(), lineno=44, col_offset=23), lineno=44, col_offset=8), If(Compare(Call(Name('len', Load(), lineno=47, col_offset=11), [Attribute(Name('maker', Load(), lineno=47, col_offset=15), 'children', Load(), lineno=47, col_offset=15)], [], None, None, lineno=47, col_offset=11), [Eq()], [Num(4, lineno=47, col_offset=34)], lineno=47, col_offset=11), [Assign([Name('n', Store(), lineno=48, col_offset=12)], Subscript(Attribute(Name('maker', Load(), lineno=48, col_offset=16), 'children', Load(), lineno=48, col_offset=16), Index(Num(2, lineno=48, col_offset=31)), Load(), lineno=48, col_offset=16), lineno=48, col_offset=12), Expr(Call(Attribute(Name('n', Load(), lineno=49, col_offset=12), 'remove', Load(), lineno=49, col_offset=12), [], [], None, None, lineno=49, col_offset=12), lineno=49, col_offset=12), Assign([Attribute(Subscript(Attribute(Name('maker', Load(), lineno=50, col_offset=12), 'children', Load(), lineno=50, col_offset=12), Index(Num(-1, lineno=50, col_offset=28)), Load(), lineno=50, col_offset=12), 'prefix', Store(), lineno=50, col_offset=12)], Attribute(Name('n', Load(), lineno=50, col_offset=40), 'prefix', Load(), lineno=50, col_offset=40), lineno=50, col_offset=12)], [], lineno=47, col_offset=8), Return(Name('maker', Load(), lineno=53, col_offset=15), lineno=53, col_offset=8)], [], lineno=27, col_offset=4)], [], lineno=12, col_offset=0)])
